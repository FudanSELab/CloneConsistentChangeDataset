digraph {
24 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(1).build())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "Arrays.sort(values)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "long startRowCacheHits = cachedStore.metric.partitionCacheHit.getCount()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "ColumnFamilyStore cachedStore = keyspace.getColumnFamilyStore(cf)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "testRoundTrip['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "assertEquals(startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "rub.add(\"val\",ByteBufferUtil.bytes(values(i())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "testRowCacheRange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "int i = 0@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(++startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(c.value(),ByteBufferUtil.bytes(values(i())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).fromIncl(String.valueOf(210)).toExcl(String.valueOf(215)).build())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "rub.build().applyUnsafe()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(101).build())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "CacheService.instance.invalidateRowCache()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testRoundTrip['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "values(i( = \"val\" + i@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(++startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(startRowCacheOutOfRange,cachedStore.metric.partitionCacheHitOutOfRange.getCount())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "i++@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "i < 200@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE_CACHED)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(r.clustering().get(0),ByteBufferUtil.bytes(values(i(.substring(3)))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "CacheService.instance.setRowCacheCapacityInMB(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "rub.clustering(String.valueOf(i))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "int i = 0@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "rub.clustering(String.valueOf(0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String cf = \"CachedIntCF\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "rub.add(\"val\",ByteBufferUtil.bytes(\"val\" + 0))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "CompactionManager.instance.disableAutoCompaction()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(10).build())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "long startRowCacheHits = cachedStore.metric.rowCacheHit.getCount()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "long startRowCacheOutOfRange = cachedStore.metric.rowCacheHitOutOfRange.getCount()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CachedPartition cachedCf = (CachedPartition)CacheService.instance.rowCache.get(rck)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "long startRowCacheOutOfRange = cachedStore.metric.partitionCacheHitOutOfRange.getCount()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "DecoratedKey dk = cachedStore.partitioner.decorateKey(key)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "RowUpdateBuilder rub = new RowUpdateBuilder(cachedStore.metadata,System.currentTimeMillis(),key)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(++startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "rub.build().applyUnsafe()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ByteBuffer key = ByteBufferUtil.bytes(\"rowcachekey\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "RowCacheKey rck = new RowCacheKey(cachedStore.metadata.cfId,dk)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "String values = new String((((@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "cachedStore.truncateBlocking()@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CacheService.instance.invalidateRowCache()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cachedStore.truncateBlocking()@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Row r = (Row)unfiltered@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(cachedCf.rowCount(),100)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(++startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(c.value(),ByteBufferUtil.bytes(\"val\" + 0))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(10).build())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "CachedPartition cachedCf = (CachedPartition)CacheService.instance.rowCache.get(rck)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(++startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "i++@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(105).build())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->16 [style = bold, label=""];
42->23 [style = bold, label=""];
32->36 [style = solid, label="i"];
7->15 [style = solid, label="startRowCacheOutOfRange"];
10->24 [style = bold, label=""];
25->30 [style = bold, label=""];
44->15 [style = bold, label=""];
29->28 [style = solid, label="startRowCacheOutOfRange"];
43->46 [style = solid, label="values"];
10->27 [style = dashed, label="0"];
9->7 [style = bold, label=""];
30->29 [style = bold, label=""];
21->18 [style = bold, label=""];
24->42 [style = dashed, label="0"];
16->25 [style = solid, label="cf"];
39->57 [style = bold, label=""];
37->53 [style = bold, label=""];
29->2 [style = bold, label=""];
5->49 [style = bold, label=""];
9->40 [style = solid, label="startRowCacheHits"];
1->21 [style = bold, label=""];
24->17 [style = bold, label=""];
0->8 [style = bold, label=""];
33->48 [style = bold, label=""];
32->39 [style = solid, label="i"];
23->12 [style = bold, label=""];
49->50 [style = solid, label="i"];
26->28 [style = bold, label=""];
14->11 [style = bold, label=""];
35->12 [style = bold, label=""];
9->30 [style = dashed, label="0"];
45->41 [style = bold, label=""];
5->10 [style = bold, label=""];
15->28 [style = dashed, label="0"];
23->34 [style = dashed, label="0"];
40->51 [style = bold, label=""];
7->37 [style = solid, label="startRowCacheOutOfRange"];
34->52 [style = bold, label=""];
50->14 [style = dotted, label="true"];
43->32 [style = bold, label=""];
45->59 [style = bold, label=""];
18->22 [style = solid, label="rck"];
55->38 [style = bold, label=""];
9->10 [style = solid, label="startRowCacheHits"];
20->48 [style = dashed, label="0"];
50->36 [style = dotted, label="true"];
51->58 [style = bold, label=""];
11->36 [style = dashed, label="0"];
2->4 [style = bold, label=""];
22->23 [style = bold, label=""];
58->54 [style = bold, label=""];
9->15 [style = solid, label="startRowCacheHits"];
23->37 [style = bold, label=""];
9->35 [style = solid, label="startRowCacheHits"];
7->2 [style = bold, label=""];
57->5 [style = bold, label=""];
17->15 [style = bold, label=""];
13->5 [style = bold, label=""];
38->47 [style = bold, label=""];
20->19 [style = bold, label=""];
39->57 [style = solid, label="i"];
32->50 [style = bold, label=""];
14->36 [style = bold, label=""];
46->44 [style = bold, label=""];
50->49 [style = dotted, label="true"];
54->35 [style = bold, label=""];
21->18 [style = solid, label="dk"];
47->40 [style = bold, label=""];
31->0 [style = bold, label=""];
25->9 [style = bold, label=""];
1->21 [style = solid, label="key"];
52->41 [style = bold, label=""];
12->20 [style = bold, label=""];
18->12 [style = solid, label="rck"];
50->14 [style = bold, label=""];
49->39 [style = solid, label="i"];
36->39 [style = bold, label=""];
49->50 [style = bold, label=""];
15->22 [style = bold, label=""];
50->57 [style = dotted, label="true"];
24->26 [style = bold, label=""];
50->39 [style = dotted, label="true"];
39->46 [style = solid, label="values"];
11->3 [style = bold, label=""];
27->24 [style = bold, label=""];
4->1 [style = bold, label=""];
41->33 [style = bold, label=""];
50->5 [style = dotted, label="true"];
28->22 [style = bold, label=""];
49->36 [style = solid, label="i"];
53->55 [style = bold, label=""];
39->48 [style = solid, label="values"];
50->46 [style = bold, label=""];
56->0 [style = bold, label=""];
16->25 [style = bold, label=""];
12->34 [style = bold, label=""];
6->0 [style = bold, label=""];
39->49 [style = solid, label="i"];
1->14 [style = solid, label="key"];
9->55 [style = solid, label="startRowCacheHits"];
52->45 [style = solid, label="i"];
43->48 [style = solid, label="values"];
30->27 [style = solid, label="startRowCacheHits"];
45->48 [style = solid, label="i"];
48->45 [style = bold, label=""];
18->43 [style = bold, label=""];
15->42 [style = bold, label=""];
52->48 [style = solid, label="i"];
20->12 [style = bold, label=""];
3->13 [style = bold, label=""];
32->50 [style = solid, label="i"];
17->26 [style = dashed, label="0"];
7->29 [style = dashed, label="0"];
5->27 [style = bold, label=""];
18->14 [style = bold, label=""];
}
