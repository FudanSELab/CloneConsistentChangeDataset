digraph {
12 [style = filled, label = "Object response = ((Flux<?>)invoker.invoke(context)).blockLast()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "MonoOperationInvoker.invocations = 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MonoOperationInvoker target = new MonoOperationInvoker()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cacheInTtlWithMonoResponse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertThat(MonoOperationInvoker.invocations).isEqualTo(1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Object cachedResponse = ((Flux<?>)invoker.invoke(context)).blockLast()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "FluxOperationInvoker.invocations = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "FluxOperationInvoker target = new FluxOperationInvoker()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "cacheInTtlWithFluxResponse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "CachingOperationInvoker invoker = new CachingOperationInvoker(target,CACHE_TTL)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(response).isSameAs(cachedResponse)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "cacheInTtlWithMonoResponse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(FluxOperationInvoker.invocations).isEqualTo(1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Object cachedResponse = ((Mono<?>)invoker.invoke(context)).block()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "InvocationContext context = new InvocationContext(mock(),Collections.emptyMap())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CachingOperationInvoker invoker = new CachingOperationInvoker(target,500L)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Object response = ((Mono<?>)invoker.invoke(context)).block()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
5->8 [style = bold, label=""];
0->9 [style = solid, label="target"];
5->4 [style = solid, label="cachedResponse"];
11->4 [style = bold, label=""];
0->16 [style = dashed, label="0"];
1->3 [style = bold, label=""];
3->6 [style = bold, label=""];
3->12 [style = bold, label=""];
15->16 [style = bold, label=""];
13->11 [style = bold, label=""];
1->9 [style = bold, label=""];
9->6 [style = bold, label=""];
2->15 [style = dashed, label="0"];
6->12 [style = dashed, label="0"];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
16->3 [style = solid, label="target"];
2->0 [style = bold, label=""];
13->4 [style = solid, label="cachedResponse"];
16->1 [style = bold, label=""];
3->9 [style = dashed, label="0"];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
0->3 [style = solid, label="target"];
10->2 [style = bold, label=""];
14->15 [style = bold, label=""];
8->4 [style = bold, label=""];
8->11 [style = dashed, label="0"];
}
