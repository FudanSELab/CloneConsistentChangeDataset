digraph {
15 [style = filled, label = "final UnicastSubject<Integer> us = UnicastSubject.create()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "fusedNoConcurrentCleanDueToCancel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "fusedNoConcurrentCleanDueToCancel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "to.awaitDone(5,TimeUnit.SECONDS)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "us.hasObservers() && i < 10000@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "j++@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "j < TestHelper.RACE_LONG_LOOPS@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "to.awaitDone(10,TimeUnit.SECONDS)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TestObserver<Integer> to = us.hide().observeOn(Schedulers.io()).observeOn(Schedulers.single()).unsubscribeOn(Schedulers.computation()).firstOrError().test()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "to.assertResult(0)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TestObserver<Integer> to = us.observeOn(Schedulers.io()).map(Functions.identity()).observeOn(Schedulers.single()).firstOrError().test()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "us.hasObservers()@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int j = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "throw new CompositeException(errors)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{RxJavaPlugins.reset()}@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "us.onNext(i)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "!errors.isEmpty()@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "fusedNoConcurrentCleanDueToCancel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<Throwable> errors = TestHelper.trackPluginErrors()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->0 [style = bold, label=""];
10->2 [style = dotted, label="true"];
14->7 [style = bold, label=""];
10->13 [style = dotted, label="true"];
13->19 [style = solid, label="i"];
10->3 [style = dotted, label="true"];
14->16 [style = bold, label=""];
13->19 [style = bold, label=""];
19->1 [style = bold, label=""];
10->12 [style = dotted, label="true"];
8->0 [style = bold, label=""];
14->1 [style = dotted, label="true"];
2->13 [style = bold, label=""];
9->5 [style = solid, label="j"];
2->20 [style = dashed, label="0"];
10->0 [style = dotted, label="true"];
6->19 [style = solid, label="i"];
6->19 [style = bold, label=""];
10->7 [style = dotted, label="true"];
5->10 [style = bold, label=""];
1->6 [style = bold, label=""];
0->11 [style = bold, label=""];
15->2 [style = bold, label=""];
10->3 [style = bold, label=""];
10->16 [style = dotted, label="true"];
14->6 [style = dotted, label="true"];
14->1 [style = bold, label=""];
16->12 [style = bold, label=""];
6->1 [style = solid, label="i"];
12->8 [style = dotted, label="true"];
18->9 [style = bold, label=""];
20->13 [style = bold, label=""];
6->14 [style = bold, label=""];
7->12 [style = bold, label=""];
14->19 [style = dashed, label="0"];
13->6 [style = solid, label="i"];
9->10 [style = solid, label="j"];
4->9 [style = bold, label=""];
5->10 [style = solid, label="j"];
17->9 [style = bold, label=""];
3->15 [style = bold, label=""];
19->1 [style = dotted, label="true"];
15->20 [style = bold, label=""];
7->16 [style = dashed, label="0"];
10->20 [style = dotted, label="true"];
10->19 [style = dotted, label="true"];
19->7 [style = bold, label=""];
10->15 [style = dotted, label="true"];
13->14 [style = bold, label=""];
19->6 [style = dotted, label="true"];
13->1 [style = solid, label="i"];
12->8 [style = bold, label=""];
10->14 [style = dotted, label="true"];
3->8 [style = solid, label="errors"];
11->5 [style = bold, label=""];
10->5 [style = dotted, label="true"];
9->10 [style = bold, label=""];
}
