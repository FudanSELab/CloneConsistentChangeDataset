digraph {
8 [style = filled, label = "logs = git.log().call()@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Status status = new Git(repository).status().call()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageBranch)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "count = 0@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "Exchange ex2 = added.getExchanges().get(1)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "template.send(\"direct:commit-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessageBranch)}})@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "assertEquals(count,1)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getOut().getBody().getShortMessage())@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,\"Test test Commit\")}})@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageBranch)@@@41@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "count++@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "template.send(\"direct:commit-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessageBranch)}})@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Thread.sleep(1 * 5000)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Status status = git.status().call()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Iterable<RevCommit> logs = new Git(repository).log().call()@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "count++@@@49@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "fileToAdd.createNewFile()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "count == 1@@@32@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "logs = new Git(repository).log().call()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "git.close()@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "commitBranchTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "count == 0@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "Exchange ex1 = added.getExchanges().get(0)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "repository.close()@@@57@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Repository repository = getTestRepository()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertTrue(status.getAdded().contains(filenameBranchToAdd))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(count,1)@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "git.commit().setMessage(commitMessage).call()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "fileToAdd1.createNewFile()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertEquals(commitMessage,ex2.getOut().getBody().getShortMessage())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "MockEndpoint added = getMockEndpoint(\"mock:result-commit\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "git.add().addFilepattern(filenameToAdd).call()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "Iterable<RevCommit> logs = new Git(repository).log().call()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "commitConsumerTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(count,2)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "count++@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "fileToAdd.createNewFile()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "count++@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Git git = getGitTestRepository()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "int count = 0@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "count == 1@@@43@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "status = new Git(repository).status().call()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameBranchToAdd)}})@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "commitBranchTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessage)}})@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(count,2)@@@51@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "count = 0@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "count == 0@@@40@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->56 [style = dashed, label="0"];
23->51 [style = bold, label=""];
55->49 [style = bold, label=""];
34->21 [style = solid, label="count"];
58->60 [style = bold, label=""];
3->23 [style = solid, label="count"];
9->7 [style = bold, label=""];
40->13 [style = solid, label="count"];
40->13 [style = bold, label=""];
20->37 [style = dashed, label="0"];
9->16 [style = bold, label=""];
21->2 [style = bold, label=""];
19->24 [style = bold, label=""];
3->34 [style = bold, label=""];
47->22 [style = bold, label=""];
13->16 [style = solid, label="count"];
31->35 [style = bold, label=""];
19->9 [style = bold, label=""];
45->38 [style = bold, label=""];
7->16 [style = bold, label=""];
0->30 [style = dashed, label="0"];
16->9 [style = solid, label="count"];
4->8 [style = bold, label=""];
6->31 [style = solid, label="count"];
10->57 [style = bold, label=""];
43->44 [style = bold, label=""];
14->11 [style = bold, label=""];
56->53 [style = bold, label=""];
22->25 [style = bold, label=""];
16->10 [style = solid, label="count"];
34->27 [style = solid, label="count"];
18->15 [style = bold, label=""];
42->31 [style = bold, label=""];
16->19 [style = bold, label=""];
5->17 [style = bold, label=""];
2->4 [style = bold, label=""];
13->37 [style = bold, label=""];
3->23 [style = bold, label=""];
52->0 [style = bold, label=""];
33->30 [style = bold, label=""];
2->27 [style = bold, label=""];
59->56 [style = bold, label=""];
41->43 [style = bold, label=""];
49->54 [style = bold, label=""];
61->20 [style = bold, label=""];
40->21 [style = bold, label=""];
11->26 [style = bold, label=""];
48->58 [style = bold, label=""];
27->39 [style = dotted, label="true"];
3->1 [style = bold, label=""];
17->6 [style = bold, label=""];
21->27 [style = bold, label=""];
0->21 [style = solid, label="repository"];
6->42 [style = bold, label=""];
1->3 [style = bold, label=""];
26->62 [style = bold, label=""];
21->2 [style = dotted, label="true"];
19->24 [style = dotted, label="true"];
46->29 [style = bold, label=""];
31->42 [style = bold, label=""];
27->39 [style = bold, label=""];
13->19 [style = bold, label=""];
60->61 [style = bold, label=""];
13->9 [style = solid, label="count"];
39->40 [style = bold, label=""];
16->19 [style = solid, label="count"];
28->17 [style = bold, label=""];
25->5 [style = bold, label=""];
32->41 [style = bold, label=""];
62->15 [style = bold, label=""];
9->7 [style = dotted, label="true"];
34->40 [style = solid, label="count"];
18->62 [style = dashed, label="0"];
34->21 [style = bold, label=""];
24->9 [style = bold, label=""];
8->13 [style = bold, label=""];
15->1 [style = bold, label=""];
53->55 [style = bold, label=""];
10->20 [style = bold, label=""];
16->10 [style = bold, label=""];
15->3 [style = solid, label="count"];
29->3 [style = bold, label=""];
50->16 [style = bold, label=""];
36->32 [style = bold, label=""];
38->36 [style = bold, label=""];
40->27 [style = solid, label="count"];
50->16 [style = solid, label="count"];
8->53 [style = dashed, label="0"];
13->19 [style = solid, label="count"];
12->0 [style = bold, label=""];
51->59 [style = bold, label=""];
54->50 [style = bold, label=""];
57->48 [style = bold, label=""];
6->14 [style = bold, label=""];
0->47 [style = bold, label=""];
23->21 [style = bold, label=""];
44->28 [style = bold, label=""];
0->22 [style = bold, label=""];
40->21 [style = solid, label="count"];
21->51 [style = dashed, label="0"];
27->40 [style = bold, label=""];
31->35 [style = solid, label="count"];
30->45 [style = bold, label=""];
26->18 [style = bold, label=""];
35->46 [style = bold, label=""];
}
