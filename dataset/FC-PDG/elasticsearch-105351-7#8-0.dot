digraph {
13 [style = filled, label = "testCaching['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(min))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "RandomIndexWriter indexWriter = new RandomIndexWriter(random(),directory)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "IndexSearcher indexSearcher = newSearcher(indexReader,true,true)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(2.0,min.getValue(),0)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "indexSearcher = newSearcher(indexReader,true,true)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertFalse(queryShardContext.isCacheable())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MinAggregationBuilder aggregationBuilder = new MinAggregationBuilder(\"min\").field(\"number\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(min))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(min))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "indexWriter.addDocument(singleton(new NumericDocValuesField(\"number\",2)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(min.getValue() >= 0.0 && min.getValue() <= 1.0)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(context.isCacheable())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(-7.0,min.getValue(),0)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "InternalMin min = searchAndReduce(indexSearcher,new MatchAllDocsQuery(),nonDeterministicAggregationBuilder,fieldType)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "MinAggregationBuilder nonDeterministicAggregationBuilder = new MinAggregationBuilder(\"min\").field(\"number\").script(new Script(ScriptType.INLINE,MockScriptEngine.NAME,RANDOM_SCRIPT,Collections.emptyMap()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "MinAggregationBuilder aggregationBuilder = new MinAggregationBuilder(\"min\").field(\"number\").script(new Script(ScriptType.INLINE,MockScriptEngine.NAME,INVERT_SCRIPT,Collections.emptyMap()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "indexWriter.addDocument(singleton(new NumericDocValuesField(\"number\",3)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testCaching['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testScriptCaching['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "AggregationContext context = createAggregationContext(indexSearcher,new MatchAllDocsQuery(),fieldType)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "RandomIndexWriter indexWriter = new RandomIndexWriter(random(),directory)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "createAggregator(aggregationBuilder,context)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "min = searchAndReduce(indexSearcher,new MatchAllDocsQuery(),aggregationBuilder,fieldType)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertTrue(queryShardContext.isCacheable())@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "IndexSearcher indexSearcher = newSearcher(indexReader,true,true)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(\"number\",NumberFieldMapper.NumberType.INTEGER)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "indexWriter.close()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "indexWriter.addDocument(singleton(new NumericDocValuesField(\"number\",7)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->0 [style = bold, label=""];
11->0 [style = solid, label="indexSearcher"];
11->16 [style = bold, label=""];
16->15 [style = bold, label=""];
5->8 [style = bold, label=""];
11->16 [style = solid, label="indexSearcher"];
12->20 [style = dashed, label="0"];
19->17 [style = solid, label="nonDeterministicAggregationBuilder"];
15->14 [style = bold, label=""];
4->25 [style = bold, label=""];
22->19 [style = bold, label=""];
0->17 [style = solid, label="indexSearcher"];
7->10 [style = bold, label=""];
0->17 [style = bold, label=""];
2->3 [style = bold, label=""];
0->12 [style = bold, label=""];
0->16 [style = dashed, label="0"];
3->26 [style = bold, label=""];
8->24 [style = solid, label="fieldType"];
21->24 [style = bold, label=""];
20->3 [style = bold, label=""];
17->3 [style = solid, label="min"];
0->2 [style = solid, label="min"];
19->6 [style = bold, label=""];
0->17 [style = dashed, label="0"];
1->15 [style = solid, label="aggregationBuilder"];
24->28 [style = solid, label="min"];
1->9 [style = bold, label=""];
1->22 [style = dashed, label="0"];
9->6 [style = bold, label=""];
8->22 [style = bold, label=""];
26->21 [style = bold, label=""];
8->0 [style = solid, label="fieldType"];
8->16 [style = solid, label="fieldType"];
23->28 [style = bold, label=""];
16->15 [style = solid, label="context"];
8->1 [style = bold, label=""];
22->24 [style = solid, label="aggregationBuilder"];
8->17 [style = solid, label="fieldType"];
12->2 [style = bold, label=""];
11->0 [style = bold, label=""];
1->0 [style = solid, label="aggregationBuilder"];
2->14 [style = dashed, label="0"];
10->4 [style = bold, label=""];
18->8 [style = bold, label=""];
28->27 [style = bold, label=""];
13->8 [style = bold, label=""];
6->7 [style = bold, label=""];
4->11 [style = bold, label=""];
21->24 [style = solid, label="indexSearcher"];
17->20 [style = bold, label=""];
24->23 [style = bold, label=""];
}
