digraph {
8 [style = filled, label = "linearRegressionWithSetters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "linearRegressionWithSetters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "LinearRegressionModel model2 = lr.fit(dataset,lr.maxIter().w(5),lr.regParam().w(0.1),lr.predictionCol().w(\"thePred\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.maxIter()).equals(5))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "foundNonZero = true@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "LogisticRegressionModel model2 = lr.fit(dataset,lr.maxIter().w(5),lr.regParam().w(0.1),lr.threshold().w(0.4),lr.probabilityCol().w(\"theProb\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "model.setThreshold(1.0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(10,parent.getMaxIter())@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assert(model2.getThreshold() == 0.4)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(\"thePred\",model2.getPredictionCol())@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "LinearRegression parent2 = model2.parent()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.threshold()).equals(0.4))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "LinearRegression lr = new LinearRegression().setMaxIter(10).setRegParam(1.0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "r.getDouble(0) != 0.0@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assert(model.fittingParamMap().apply(lr.maxIter()).equals(10))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "model.transform(dataset).registerTempTable(\"predAllZero\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assert(model.fittingParamMap().apply(lr.threshold()).equals(0.6))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(1.0,parent.getRegParam(),0.0)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assert(model.fittingParamMap().apply(lr.regParam()).equals(1.0))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assert(model.getThreshold() == 0.6)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.regParam()).equals(0.1))@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "DataFrame predAllZero = jsql.sql(\"SELECT prediction, myProbability FROM predAllZero\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assert(r.getDouble(0) == 0.0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assert(model2.getProbabilityCol().equals(\"theProb\"))@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "DataFrame predNotAllZero = jsql.sql(\"SELECT prediction, myProb FROM predNotAllZero\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(0.1,parent2.getRegParam(),0.0)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "LogisticRegression lr = new LogisticRegression().setMaxIter(10).setRegParam(1.0).setThreshold(0.6).setProbabilityCol(\"myProbability\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "LinearRegression parent = model.parent()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "LinearRegressionModel model2 = lr.fit(dataset,lr.maxIter().w(5),lr.regParam().w(0.1),lr.predictionCol().w(\"thePred\"))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(5,parent2.getMaxIter())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "model.transform(dataset,model.threshold().w(0.0),model.probabilityCol().w(\"myProb\")).registerTempTable(\"predNotAllZero\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "LogisticRegressionModel model = lr.fit(dataset)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assert(foundNonZero)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "logisticRegressionWithSetters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assert(model2.getPredictionCol().equals(\"thePred\"))@@@10@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "LinearRegressionModel model = lr.fit(dataset)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "boolean foundNonZero = false@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.regParam()).equals(0.1))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->6 [style = bold, label=""];
14->5 [style = bold, label=""];
21->34 [style = dotted, label="true"];
20->23 [style = bold, label=""];
31->37 [style = bold, label=""];
8->5 [style = bold, label=""];
18->29 [style = bold, label=""];
27->28 [style = bold, label=""];
3->2 [style = bold, label=""];
7->28 [style = dashed, label="0"];
1->22 [style = dashed, label="0"];
37->35 [style = bold, label=""];
36->19 [style = solid, label="foundNonZero"];
26->20 [style = bold, label=""];
16->15 [style = bold, label=""];
32->27 [style = bold, label=""];
25->33 [style = bold, label=""];
5->27 [style = dashed, label="0"];
22->17 [style = bold, label=""];
30->25 [style = bold, label=""];
29->36 [style = bold, label=""];
3->13 [style = bold, label=""];
10->3 [style = bold, label=""];
28->4 [style = bold, label=""];
36->21 [style = bold, label=""];
12->9 [style = bold, label=""];
21->19 [style = bold, label=""];
12->13 [style = solid, label="parent"];
7->12 [style = bold, label=""];
15->11 [style = bold, label=""];
7->4 [style = bold, label=""];
13->16 [style = bold, label=""];
17->24 [style = bold, label=""];
2->1 [style = bold, label=""];
6->3 [style = bold, label=""];
34->19 [style = solid, label="foundNonZero"];
23->18 [style = bold, label=""];
21->34 [style = bold, label=""];
0->30 [style = bold, label=""];
19->31 [style = bold, label=""];
34->19 [style = bold, label=""];
35->22 [style = bold, label=""];
34->21 [style = bold, label=""];
5->7 [style = bold, label=""];
4->0 [style = bold, label=""];
33->26 [style = bold, label=""];
9->10 [style = bold, label=""];
}
