digraph {
1 [style = filled, label = "DataStream<Tuple2<String,Integer>> source = env.fromElements(Tuple2.of(\"hello\",1),Tuple2.of(\"hello\",2))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.IngestionTime)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.ProcessingTime)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertTrue(winOperator.getStateDescriptor() instanceof AggregatingStateDescriptor)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(operator instanceof WindowOperator)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "OneInputStreamOperator<Tuple2<String,Integer>,Tuple3<String,String,Integer>> operator = transform.getOperator()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "DataStream<String> window = source.keyBy(new Tuple3KeySelector()).window(TumblingEventTimeWindows.of(Time.of(1,TimeUnit.SECONDS))).aggregate(new DummyAggregationFunction(),new TestProcessWindowFunction())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DataStream<Tuple3<String,String,Integer>> window = source.keyBy(new TupleKeySelector()).window(TumblingProcessingTimeWindows.of(Time.of(1,TimeUnit.SECONDS))).aggregate(new DummyAggregationFunction(),new TestProcessWindowFunction())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(winOperator.getWindowAssigner() instanceof TumblingEventTimeWindows)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(operator instanceof WindowOperator)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,?,?,?> winOperator = (WindowOperator<String,Tuple2<String,Integer>,?,?,?>)operator@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "processElementAndEnsureOutput(operator,winOperator.getKeySelector(),BasicTypeInfo.STRING_TYPE_INFO,new Tuple2<>(\"hello\",1))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "processElementAndEnsureOutput(operator,winOperator.getKeySelector(),BasicTypeInfo.STRING_TYPE_INFO,new Tuple2<>(\"hello\",1))@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testAggregateWithProcessWindowFunctionProcessingTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testAggregateWithProcessWindowFunctionEventTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DataStream<Tuple3<String,String,Integer>> window = source.keyBy(new TupleKeySelector()).window(TumblingEventTimeWindows.of(Time.of(1,TimeUnit.SECONDS))).aggregate(new DummyAggregationFunction(),new TestProcessWindowFunction())@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final OneInputTransformation<Tuple3<String,String,Integer>,String> transform = (OneInputTransformation<Tuple3<String,String,Integer>,String>)window.getTransformation()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "OneInputTransformation<Tuple2<String,Integer>,Tuple3<String,String,Integer>> transform = (OneInputTransformation<Tuple2<String,Integer>,Tuple3<String,String,Integer>>)window.getTransformation()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertTrue(winOperator.getTrigger() instanceof EventTimeTrigger)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Assert.assertTrue(winOperator.getWindowAssigner() instanceof TumblingProcessingTimeWindows)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final OneInputStreamOperator<Tuple3<String,String,Integer>,String> operator = transform.getOperator()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "DummyReducer reducer = new DummyReducer()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(winOperator.getStateDescriptor() instanceof AggregatingStateDescriptor)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testAggregateWithProcessWindowFunctionEventTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Assert.assertTrue(winOperator.getTrigger() instanceof ProcessingTimeTrigger)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DataStream<Tuple3<String,String,Integer>> source = env.fromElements(Tuple3.of(\"hello\",\"hallo\",1),Tuple3.of(\"hello\",\"hallo\",2))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
13->10 [style = bold, label=""];
14->16 [style = bold, label=""];
17->10 [style = bold, label=""];
25->1 [style = bold, label=""];
20->9 [style = bold, label=""];
16->4 [style = solid, label="operator"];
1->15 [style = dashed, label="0"];
10->19 [style = bold, label=""];
16->10 [style = solid, label="operator"];
13->12 [style = solid, label="operator"];
3->11 [style = bold, label=""];
5->24 [style = dashed, label="0"];
0->21 [style = bold, label=""];
16->17 [style = bold, label=""];
7->0 [style = dashed, label="0"];
5->18 [style = dashed, label="0"];
2->4 [style = bold, label=""];
15->18 [style = bold, label=""];
26->11 [style = bold, label=""];
0->10 [style = dashed, label="0"];
6->15 [style = bold, label=""];
9->6 [style = bold, label=""];
0->7 [style = bold, label=""];
22->4 [style = bold, label=""];
6->1 [style = bold, label=""];
24->26 [style = bold, label=""];
13->0 [style = solid, label="operator"];
12->4 [style = dashed, label="0"];
11->10 [style = solid, label="operator"];
11->4 [style = solid, label="operator"];
6->25 [style = dashed, label="0"];
2->21 [style = dashed, label="0"];
21->22 [style = bold, label=""];
7->2 [style = bold, label=""];
1->24 [style = bold, label=""];
9->25 [style = bold, label=""];
10->0 [style = bold, label=""];
11->13 [style = bold, label=""];
8->9 [style = bold, label=""];
4->12 [style = bold, label=""];
16->17 [style = solid, label="operator"];
23->9 [style = bold, label=""];
19->7 [style = bold, label=""];
18->14 [style = bold, label=""];
13->10 [style = solid, label="operator"];
11->13 [style = solid, label="operator"];
}
