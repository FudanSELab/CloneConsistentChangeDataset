digraph {
11 [style = filled, label = "assertThat(builder.hasField(field)).isTrue()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertTrue(message.hasOneof(oneof))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertSame(null,builder.getOneofFieldDescriptor(oneof))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "reflectionTester.setAllFieldsViaReflection(builder)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testReflectionClearOneof['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestAllTypes.Builder builder = TestAllTypes.newBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Descriptors.OneofDescriptor oneof = TestAllTypes.getDescriptor().getOneofs().get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(builder.hasField(field)).isFalse()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertTrue(builder.hasField(field))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertTrue(mergedBuilder.hasField(mergedField))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "builder.clearOneof(oneof)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "DynamicMessage message = builder.buildPartial()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "builder.clearOneof(oneof)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertFalse(mergedBuilder.hasField(mergedField))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "message = builder.build()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Descriptors.FieldDescriptor field = TestAllTypes.getDescriptor().findFieldByName(\"oneof_bytes\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "mergedBuilder.mergeFrom(message)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(builder.hasOneof(oneof))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(builder.hasOneof(oneof)).isFalse()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertFalse(builder.hasOneof(oneof))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertFalse(builder.hasField(field))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "DynamicMessage.Builder builder = DynamicMessage.newBuilder(TestAllTypes.getDescriptor())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "OneofDescriptor oneof = TestAllTypes.getDescriptor().getOneofs().get(0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "reflectionTester.setAllFieldsViaReflection(builder)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertSame(null,message.getOneofFieldDescriptor(oneof))@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "FieldDescriptor mergedField = oneof.getField(0)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testReflectionClearOneof['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "testDynamicOneofMessage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(builder.hasOneof(oneof)).isTrue()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertSame(null,builder.getOneofFieldDescriptor(oneof))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertTrue(mergedBuilder.hasField(field))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertSame(field,builder.getOneofFieldDescriptor(oneof))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "mergedBuilder.setField(mergedField,123)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "DynamicMessage.Builder mergedBuilder = DynamicMessage.newBuilder(TestAllTypes.getDescriptor())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "FieldDescriptor field = oneof.getField(3)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
6->21 [style = dashed, label="0"];
5->10 [style = bold, label=""];
23->25 [style = bold, label=""];
17->26 [style = solid, label="oneof"];
8->16 [style = dashed, label="0"];
31->30 [style = solid, label="field"];
17->33 [style = solid, label="oneof"];
32->21 [style = bold, label=""];
2->3 [style = solid, label="oneof"];
2->9 [style = solid, label="oneof"];
20->29 [style = solid, label="mergedField"];
18->23 [style = bold, label=""];
20->29 [style = bold, label=""];
19->23 [style = solid, label="message"];
3->31 [style = bold, label=""];
2->1 [style = bold, label=""];
9->4 [style = bold, label=""];
0->2 [style = bold, label=""];
24->32 [style = bold, label=""];
12->11 [style = bold, label=""];
17->24 [style = solid, label="oneof"];
21->34 [style = bold, label=""];
17->34 [style = solid, label="oneof"];
3->6 [style = bold, label=""];
20->18 [style = solid, label="mergedField"];
26->9 [style = bold, label=""];
17->33 [style = bold, label=""];
16->17 [style = bold, label=""];
1->4 [style = solid, label="field"];
7->8 [style = bold, label=""];
28->16 [style = bold, label=""];
1->9 [style = bold, label=""];
17->32 [style = solid, label="oneof"];
33->26 [style = bold, label=""];
15->22 [style = bold, label=""];
29->18 [style = bold, label=""];
8->0 [style = solid, label="builder"];
8->0 [style = bold, label=""];
25->27 [style = bold, label=""];
30->19 [style = bold, label=""];
11->5 [style = bold, label=""];
6->13 [style = dashed, label="0"];
10->13 [style = bold, label=""];
22->20 [style = bold, label=""];
20->27 [style = solid, label="mergedField"];
17->30 [style = solid, label="oneof"];
31->30 [style = bold, label=""];
1->12 [style = bold, label=""];
17->15 [style = solid, label="oneof"];
2->5 [style = solid, label="oneof"];
9->3 [style = bold, label=""];
27->24 [style = bold, label=""];
17->3 [style = solid, label="oneof"];
14->8 [style = bold, label=""];
9->12 [style = dashed, label="0"];
31->25 [style = solid, label="field"];
3->10 [style = dashed, label="0"];
4->11 [style = dashed, label="0"];
19->15 [style = bold, label=""];
3->32 [style = dashed, label="0"];
4->5 [style = bold, label=""];
16->9 [style = solid, label="builder"];
1->6 [style = solid, label="field"];
}
