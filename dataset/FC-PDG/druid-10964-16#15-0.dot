digraph {
35 [style = filled, label = "Assert.assertEquals(10,config.getExpireAfter())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final Properties propertiesLosAngeles = new Properties()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "client = DriverManager.getConnection(url,\"regularUser\",\"druid\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(new Module(){@Override public void configure(Binder binder){binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"test\")binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0)binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHORIZER_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_ESCALATOR)binder.bind().toInstance(testRequestLogger)binder.bind().toInstance(rootSchema)binder.bind().toInstance(CalciteTests.createMockQueryLifecycleFactory(walker,conglomerate))binder.bind().toInstance(operatorTable)binder.bind().toInstance(macroTable)binder.bind().toInstance(plannerConfig)binder.bind().annotatedWith().toInstance(CalciteTests.DRUID_SCHEMA_NAME)binder.bind().toInstance(AVATICA_CONFIG)binder.bind().to()}}))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final ExprMacroTable macroTable = CalciteTests.createExprMacroTable()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testRequestLogger = new TestRequestLogger()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "druidMeta = new DruidMeta(new SqlLifecycleFactory(plannerFactory,new NoopServiceEmitter(),testRequestLogger),AVATICA_CONFIG,injector)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "server.start()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final Properties properties = new Properties()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final Injector injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(null))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final int port = ThreadLocalRandom.current().nextInt(9999) + 10000@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final DruidOperatorTable operatorTable = CalciteTests.createOperatorTable()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testMixedCaseFromProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "server.setHandler(handler)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlQueryId\",DUMMY_SQL_QUERY_ID)@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "clientLosAngeles = DriverManager.getConnection(url,propertiesLosAngeles)@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "propertiesLosAngeles.setProperty(\"user\",\"regularUserLA\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final SchemaPlus rootSchema = CalciteTests.createMockRootSchema(conglomerate,walker,plannerConfig,CalciteTests.TEST_AUTHORIZER_MAPPER)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "caffeineCacheConfigJsonConfigProvider.inject(properties,configurator)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "properties.put(keyPrefix + \".cacheExecutorFactory\",\"CoMmON_FjP\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final DruidSchema druidSchema = CalciteTests.createMockSchema(conglomerate,walker,plannerConfig)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "walker = CalciteTests.createMockWalker(conglomerate,temporaryFolder.newFolder())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlTimeZone\",\"America/Los_Angeles\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlQueryId\",DUMMY_SQL_QUERY_ID)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final PlannerConfig plannerConfig = new PlannerConfig()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "superuserClient = DriverManager.getConnection(url,CalciteTests.TEST_SUPERUSER_NAME,\"druid\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "druidMeta = injector.getInstance()@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final SystemSchema systemSchema = CalciteTests.createMockSystemSchema(druidSchema,walker,plannerConfig)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "final CaffeineCacheConfig config = caffeineCacheConfigJsonConfigProvider.get().get()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "server = new Server(new InetSocketAddress(\"127.0.0.1\",port))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final JsonConfigurator configurator = injector.getInstance()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertEquals(100,config.getSizeInBytes())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider = JsonConfigProvider.of(keyPrefix,)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testRequestLogger = new TestRequestLogger()@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final PlannerFactory plannerFactory = new PlannerFactory(druidSchema,CalciteTests.createMockLookupSchema(),systemSchema,CalciteTests.createMockQueryLifecycleFactory(walker,conglomerate),operatorTable,macroTable,plannerConfig,CalciteTests.TEST_AUTHORIZER_MAPPER,CalciteTests.getJsonMapper())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "final DruidAvaticaHandler handler = new DruidAvaticaHandler(druidMeta,new DruidNode(\"dummy\",\"dummy\",false,1,null,true,false),new AvaticaMonitor())@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "url = StringUtils.format(\"jdbc:avatica:remote:url=http://127.0.0.1:%d%s\",port,DruidAvaticaHandler.AVATICA_PATH)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(ForkJoinPool.commonPool(),config.createExecutor())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "clientLosAngeles = DriverManager.getConnection(url,propertiesLosAngeles)@@@35@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "properties.put(keyPrefix + \".sizeInBytes\",\"100\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "final String keyPrefix = \"cache.config.prefix\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "properties.put(keyPrefix + \".expireAfter\",\"10\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->24 [style = solid, label="plannerConfig"];
27->16 [style = solid, label="port"];
2->9 [style = solid, label="port"];
14->1 [style = solid, label="injector"];
9->16 [style = bold, label=""];
4->6 [style = solid, label="plannerConfig"];
20->6 [style = solid, label="druidSchema"];
0->1 [style = solid, label="testRequestLogger"];
3->19 [style = bold, label=""];
43->35 [style = bold, label=""];
6->1 [style = solid, label="plannerFactory"];
29->14 [style = bold, label=""];
18->24 [style = solid, label="walker"];
4->13 [style = solid, label="plannerConfig"];
21->10 [style = solid, label="propertiesLosAngeles"];
7->6 [style = solid, label="operatorTable"];
18->20 [style = solid, label="walker"];
1->8 [style = solid, label="druidMeta"];
21->3 [style = bold, label=""];
29->14 [style = solid, label="testRequestLogger"];
28->18 [style = bold, label=""];
4->14 [style = solid, label="plannerConfig"];
33->41 [style = bold, label=""];
2->9 [style = bold, label=""];
5->21 [style = bold, label=""];
25->27 [style = bold, label=""];
17->5 [style = solid, label="url"];
18->4 [style = bold, label=""];
16->12 [style = solid, label="url"];
37->40 [style = solid, label="keyPrefix"];
38->37 [style = bold, label=""];
13->6 [style = solid, label="systemSchema"];
34->36 [style = bold, label=""];
15->6 [style = solid, label="macroTable"];
25->2 [style = solid, label="handler"];
35->34 [style = bold, label=""];
39->42 [style = bold, label=""];
19->22 [style = bold, label=""];
27->8 [style = bold, label=""];
7->14 [style = solid, label="operatorTable"];
20->13 [style = bold, label=""];
1->8 [style = bold, label=""];
26->25 [style = solid, label="druidMeta"];
15->14 [style = bold, label=""];
30->31 [style = solid, label="properties"];
37->30 [style = bold, label=""];
12->17 [style = bold, label=""];
8->16 [style = solid, label="handler"];
30->32 [style = bold, label=""];
17->11 [style = solid, label="url"];
4->7 [style = bold, label=""];
20->13 [style = solid, label="druidSchema"];
6->1 [style = bold, label=""];
11->5 [style = bold, label=""];
40->39 [style = bold, label=""];
8->2 [style = bold, label=""];
27->8 [style = solid, label="port"];
32->40 [style = bold, label=""];
4->20 [style = bold, label=""];
22->10 [style = bold, label=""];
2->17 [style = solid, label="port"];
31->43 [style = bold, label=""];
7->15 [style = bold, label=""];
41->31 [style = bold, label=""];
37->32 [style = solid, label="keyPrefix"];
18->6 [style = solid, label="walker"];
23->18 [style = bold, label=""];
18->13 [style = solid, label="walker"];
17->10 [style = solid, label="url"];
0->6 [style = bold, label=""];
26->25 [style = bold, label=""];
42->33 [style = bold, label=""];
16->17 [style = solid, label="url"];
11->19 [style = solid, label="propertiesLosAngeles"];
24->29 [style = bold, label=""];
14->26 [style = bold, label=""];
4->20 [style = solid, label="plannerConfig"];
33->31 [style = solid, label="configurator"];
16->19 [style = solid, label="url"];
14->0 [style = bold, label=""];
15->14 [style = solid, label="macroTable"];
37->41 [style = solid, label="keyPrefix"];
13->7 [style = bold, label=""];
24->14 [style = solid, label="rootSchema"];
15->24 [style = bold, label=""];
18->14 [style = solid, label="walker"];
16->12 [style = bold, label=""];
37->39 [style = solid, label="keyPrefix"];
17->11 [style = bold, label=""];
}
