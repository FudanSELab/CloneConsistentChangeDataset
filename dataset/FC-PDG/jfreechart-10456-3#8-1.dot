digraph {
2 [style = filled, label = "assertTrue(g1.equals(g2))@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "CustomXYURLGenerator g2 = (CustomXYURLGenerator)g1.clone()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "u1.add(\"URL A1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List u2 = new java.util.ArrayList()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFalse(g1.equals(g2))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(g1.getClass() == g2.getClass())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(g1.equals(g2))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "g1.addURLSeries(u1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "CustomXYURLGenerator g1 = new CustomXYURLGenerator()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "u1.add(\"URL A2\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "u2.add(\"URL XXX\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(g1 != g2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List u1 = new java.util.ArrayList()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CustomCategoryURLGenerator g1 = new CustomCategoryURLGenerator()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "g1.addURLSeries(u2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<String> u1 = new ArrayList<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "CustomCategoryURLGenerator g2 = (CustomCategoryURLGenerator)g1.clone()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "g2.addURLSeries(new java.util.ArrayList(u2))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<String> u2 = new ArrayList<>()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "u1.add(\"URL A3\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->22 [style = bold, label=""];
17->8 [style = bold, label=""];
16->15 [style = bold, label=""];
14->10 [style = solid, label="u1"];
22->15 [style = bold, label=""];
15->7 [style = bold, label=""];
5->9 [style = bold, label=""];
16->0 [style = solid, label="g2"];
22->0 [style = solid, label="g2"];
4->6 [style = bold, label=""];
9->2 [style = bold, label=""];
0->19 [style = bold, label=""];
8->18 [style = bold, label=""];
16->2 [style = solid, label="g2"];
1->3 [style = bold, label=""];
8->14 [style = bold, label=""];
7->0 [style = bold, label=""];
4->11 [style = solid, label="u2"];
19->9 [style = solid, label="u2"];
8->21 [style = dashed, label="0"];
19->6 [style = bold, label=""];
16->15 [style = solid, label="g2"];
13->1 [style = bold, label=""];
16->5 [style = solid, label="g2"];
20->21 [style = bold, label=""];
3->10 [style = bold, label=""];
22->15 [style = solid, label="g2"];
11->5 [style = bold, label=""];
18->10 [style = solid, label="u1"];
10->16 [style = bold, label=""];
21->15 [style = solid, label="g1"];
0->4 [style = bold, label=""];
22->5 [style = solid, label="g2"];
12->8 [style = bold, label=""];
6->11 [style = bold, label=""];
8->15 [style = solid, label="g1"];
18->13 [style = bold, label=""];
4->19 [style = dashed, label="0"];
4->9 [style = solid, label="u2"];
14->13 [style = bold, label=""];
14->18 [style = dashed, label="0"];
19->11 [style = solid, label="u2"];
22->2 [style = solid, label="g2"];
16->22 [style = dashed, label="0"];
21->14 [style = bold, label=""];
}
