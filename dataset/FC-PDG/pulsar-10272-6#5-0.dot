digraph {
5 [style = filled, label = "uncompressed.writerIndex(uncompressedLength)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return uncompressed@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "decompressor.decompress(encodedNio,encodedNio.position(),uncompressedNio,uncompressedNio.position(),uncompressedNio.remaining())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "decode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ByteBuf uncompressed = PulsarByteBufAllocator.DEFAULT.buffer(uncompressedLength,uncompressedLength)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Lz4RawDecompressor.decompress(null,encoded.memoryAddress() + encoded.readerIndex(),encoded.memoryAddress() + encoded.writerIndex(),null,uncompressed.memoryAddress(),uncompressed.memoryAddress() + uncompressedLength)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "uncompressed.writerIndex(uncompressedLength)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ByteBuf uncompressed = PulsarByteBufAllocator.DEFAULT.directBuffer(uncompressedLength,uncompressedLength)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "encoded.hasMemoryAddress() && uncompressed.hasMemoryAddress()@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "int uncompressedLength@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return uncompressed@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "ByteBuf encoded@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ByteBuffer uncompressedNio = uncompressed.nioBuffer(0,uncompressedLength)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "encoded.hasMemoryAddress()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Zstd.decompress(uncompressedNio,encodedNio)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Zstd.decompressUnsafe(uncompressed.memoryAddress(),uncompressedLength,encoded.memoryAddress() + encoded.readerIndex(),encoded.readableBytes())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "decode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "int uncompressedLength@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "ByteBuffer uncompressedNio = uncompressed.nioBuffer(0,uncompressedLength)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "decode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "LZ4_DECOMPRESSOR.get().decompress(encodedNio,uncompressedNio)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "ByteBuffer encodedNio = encoded.nioBuffer(encoded.readerIndex(),encoded.readableBytes())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ByteBuffer encodedNio = encoded.nioBuffer(encoded.readerIndex(),encoded.readableBytes())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int uncompressedLength@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12->0 [style = bold, label=""];
19->18 [style = dotted, label="false"];
23->6 [style = dotted, label="true"];
3->14 [style = bold, label=""];
0->4 [style = bold, label=""];
9->1 [style = solid, label="uncompressedLength"];
9->11 [style = solid, label="uncompressedLength"];
19->1 [style = bold, label=""];
6->17 [style = solid, label="uncompressedLength"];
8->0 [style = bold, label=""];
18->22 [style = bold, label=""];
5->1 [style = bold, label=""];
0->13 [style = solid, label="uncompressed"];
17->19 [style = bold, label=""];
19->20 [style = bold, label=""];
20->15 [style = bold, label=""];
2->4 [style = solid, label="uncompressedLength"];
17->21 [style = solid, label="uncompressed"];
8->6 [style = dotted, label="true"];
18->22 [style = solid, label="encodedNio"];
1->18 [style = bold, label=""];
11->1 [style = bold, label=""];
10->11 [style = bold, label=""];
2->0 [style = solid, label="uncompressedLength"];
6->15 [style = solid, label="uncompressedLength"];
22->15 [style = bold, label=""];
15->21 [style = bold, label=""];
8->2 [style = dotted, label="true"];
3->7 [style = bold, label=""];
10->3 [style = dotted, label="false"];
19->20 [style = dotted, label="true"];
19->1 [style = dotted, label="false"];
14->1 [style = bold, label=""];
0->10 [style = bold, label=""];
4->14 [style = solid, label="uncompressedNio"];
12->9 [style = dotted, label="true"];
10->4 [style = bold, label=""];
9->0 [style = solid, label="uncompressedLength"];
6->1 [style = solid, label="uncompressedLength"];
3->14 [style = solid, label="encodedNio"];
0->17 [style = dashed, label="0"];
10->4 [style = dotted, label="false"];
3->7 [style = solid, label="encodedNio"];
7->5 [style = bold, label=""];
0->1 [style = solid, label="uncompressed"];
10->14 [style = dotted, label="false"];
4->7 [style = solid, label="uncompressedNio"];
19->22 [style = dotted, label="false"];
12->6 [style = dotted, label="true"];
2->5 [style = solid, label="uncompressedLength"];
10->11 [style = dotted, label="true"];
23->17 [style = bold, label=""];
4->3 [style = bold, label=""];
9->4 [style = solid, label="uncompressedLength"];
1->22 [style = solid, label="uncompressedNio"];
23->16 [style = dotted, label="true"];
1->13 [style = bold, label=""];
6->20 [style = solid, label="uncompressedLength"];
}
