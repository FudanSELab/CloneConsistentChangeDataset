digraph {
14 [style = filled, label = "partitions.put(tp0,new FetchResponse.PartitionData(Errors.NONE,100,FetchResponse.INVALID_LAST_STABLE_OFFSET,0L,null,records))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int expectedBytes = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "MemoryRecords records = builder.build()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testFetchResponseMetricsWithOnePartitionError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "partitions.put(tp1,new FetchResponse.PartitionData(Errors.OFFSET_OUT_OF_RANGE,100,FetchResponse.INVALID_LAST_STABLE_OFFSET,0L,null,MemoryRecords.EMPTY))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fetcher.fetchedRecords()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(3,recordsCountAverage.value(),EPSILON)@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(1,fetcher.sendFetches())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "fetchRecords(tp0,records,Errors.NONE,100L,0)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "v++@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "subscriptions.assignFromUser(singleton(tp0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "v++@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "subscriptions.seek(tp0,0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "client.prepareResponse(new FetchResponse(Errors.NONE,new LinkedHashMap<>(partitions),0,INVALID_SESSION_ID))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testFetchResponseMetricsWithOnePartitionError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "subscriptions.seek(tp1,0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "consumerClient.poll(0)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "record.offset() >= 1@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testFetchResponseMetricsPartialResponse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "client.prepareResponse(new FetchResponse(new LinkedHashMap<>(partitions),0))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "int v = 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int expectedBytes = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "v < 3@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectedBytes += record.sizeInBytes()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "subscriptions.assignFromUser(Utils.mkSet(tp0,tp1))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "KafkaMetric fetchSizeAverage = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchSizeAvg))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(2,recordsCountAverage.value(),EPSILON)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "subscriptions.seek(tp0,1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Map<TopicPartition,FetchResponse.PartitionData> partitions = new HashMap<>()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "KafkaMetric recordsCountAverage = allMetrics.get(metrics.metricInstance(metricsRegistry.recordsPerRequestAvg))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(expectedBytes,fetchSizeAverage.value(),EPSILON)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(expectedBytes,fetchSizeAverage.value(),EPSILON)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "expectedBytes += record.sizeInBytes()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
24->10 [style = bold, label=""];
13->10 [style = bold, label=""];
11->16 [style = bold, label=""];
2->10 [style = dotted, label="true"];
13->27 [style = solid, label="records"];
13->24 [style = bold, label=""];
9->11 [style = bold, label=""];
28->10 [style = bold, label=""];
2->24 [style = solid, label="v"];
29->30 [style = bold, label=""];
9->11 [style = solid, label="expectedBytes"];
2->7 [style = solid, label="v"];
6->18 [style = bold, label=""];
1->15 [style = bold, label=""];
35->33 [style = bold, label=""];
10->28 [style = solid, label="v"];
19->25 [style = solid, label="partitions"];
36->32 [style = bold, label=""];
14->17 [style = bold, label=""];
32->27 [style = bold, label=""];
36->32 [style = dotted, label="true"];
23->14 [style = solid, label="records"];
32->29 [style = solid, label="expectedBytes"];
2->10 [style = bold, label=""];
2->28 [style = dotted, label="true"];
10->7 [style = bold, label=""];
10->2 [style = solid, label="v"];
23->29 [style = solid, label="expectedBytes"];
20->2 [style = solid, label="v"];
31->34 [style = bold, label=""];
2->13 [style = bold, label=""];
20->2 [style = bold, label=""];
8->0 [style = bold, label=""];
10->24 [style = dotted, label="true"];
26->0 [style = bold, label=""];
17->12 [style = bold, label=""];
19->14 [style = bold, label=""];
36->27 [style = bold, label=""];
10->13 [style = bold, label=""];
33->18 [style = bold, label=""];
10->13 [style = dotted, label="true"];
16->30 [style = dashed, label="0"];
10->23 [style = bold, label=""];
15->9 [style = bold, label=""];
12->25 [style = bold, label=""];
18->5 [style = bold, label=""];
23->19 [style = bold, label=""];
0->22 [style = bold, label=""];
21->1 [style = bold, label=""];
5->4 [style = bold, label=""];
24->13 [style = solid, label="v"];
4->20 [style = bold, label=""];
20->28 [style = solid, label="v"];
13->23 [style = bold, label=""];
22->35 [style = dashed, label="0"];
32->36 [style = bold, label=""];
20->10 [style = solid, label="v"];
3->21 [style = bold, label=""];
0->34 [style = dashed, label="0"];
10->2 [style = bold, label=""];
23->36 [style = bold, label=""];
12->3 [style = bold, label=""];
34->35 [style = bold, label=""];
13->7 [style = solid, label="v"];
27->29 [style = bold, label=""];
13->10 [style = solid, label="v"];
24->10 [style = solid, label="v"];
2->28 [style = bold, label=""];
2->13 [style = solid, label="v"];
10->7 [style = dotted, label="true"];
19->3 [style = solid, label="partitions"];
25->21 [style = bold, label=""];
22->6 [style = bold, label=""];
2->10 [style = solid, label="v"];
3->25 [style = dashed, label="0"];
}
