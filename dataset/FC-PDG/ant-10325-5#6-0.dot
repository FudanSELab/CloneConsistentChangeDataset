digraph {
6 [style = filled, label = "testRemoveRange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "v.addAll(Arrays.asList(O,a,b,c))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertTrue(v.contains(O))@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "v.addAll(Arrays.asList(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d545e4))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(0,v.indexOf(O))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Object b = new Object()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(v.contains(c))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "v.removeRange(1,3)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertEquals(0,v.indexOf(O))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(2,v.size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Object a = new Object()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(v.contains(c))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(v.contains(O))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(v.contains(O))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Object c = new Object()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(v.contains(c))@@@12@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testRemoveRange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertTrue(v.retainAll(Arrays.asList(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d545fc)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testRetainAll['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(2,v.size())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2->13 [style = solid, label="c"];
14->18 [style = bold, label=""];
4->0 [style = solid, label="b"];
13->17 [style = bold, label=""];
2->0 [style = solid, label="c"];
0->8 [style = bold, label=""];
2->1 [style = solid, label="c"];
10->3 [style = bold, label=""];
4->2 [style = bold, label=""];
19->13 [style = bold, label=""];
8->1 [style = bold, label=""];
3->9 [style = solid, label="a"];
2->9 [style = bold, label=""];
2->14 [style = solid, label="c"];
18->19 [style = bold, label=""];
11->8 [style = bold, label=""];
16->14 [style = bold, label=""];
6->3 [style = bold, label=""];
0->9 [style = dashed, label="0"];
15->3 [style = bold, label=""];
2->5 [style = solid, label="c"];
7->5 [style = bold, label=""];
2->9 [style = solid, label="c"];
3->0 [style = solid, label="a"];
12->11 [style = bold, label=""];
2->0 [style = bold, label=""];
1->7 [style = bold, label=""];
3->4 [style = bold, label=""];
9->12 [style = bold, label=""];
4->9 [style = solid, label="b"];
0->16 [style = bold, label=""];
}
