digraph {
9 [style = filled, label = "return new HoodieRealtimeRecordReader((HoodieRealtimeFileSplit)split,jobConf,super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@164ff03splitjobConfreporter)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "HoodieRealtimeInputFormatUtils.addRequiredProjectionFields(jobConf,Option.empty())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "getRecordReader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "this.conf = jobConf@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "LOG.info(\"Creating record reader with readCols :\" + jobConf.get(ColumnProjectionUtils.READ_COLUMN_NAMES_CONF_STR) + \", Ids :\" + jobConf.get(ColumnProjectionUtils.READ_COLUMN_IDS_CONF_STR))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final JobConf jobConf@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "HoodieRealtimeInputFormatUtils.cleanProjectionColumnIds(jobConf)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final Reporter reporter@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "jobConf.get(HoodieInputFormatUtils.HOODIE_READ_COLUMNS_PROP) == null@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final JobConf jobConf@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final InputSplit split@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Reporter reporter@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "RealtimeSplit realtimeSplit = (RealtimeSplit)split@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ValidationUtils.checkArgument(split instanceof RealtimeSplit,\"HoodieRealtimeRecordReader can only work on RealtimeSplit and not with \" + split)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final InputSplit split@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "addProjectionToJobConf(realtimeSplit,jobConf)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "this.conf.set(HoodieInputFormatUtils.HOODIE_READ_COLUMNS_PROP,\"true\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "getRecordReader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "LOG.info(\"Before adding Hoodie columns, Projections :\" + jobConf.get(ColumnProjectionUtils.READ_COLUMN_NAMES_CONF_STR) + \", Ids :\" + jobConf.get(ColumnProjectionUtils.READ_COLUMN_IDS_CONF_STR))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final InputSplit split@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ValidationUtils.checkArgument(split instanceof HoodieRealtimeFileSplit,\"HoodieRealtimeRecordReader can only work on HoodieRealtimeFileSplit and not with \" + split)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "getRecordReader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "return new HoodieRealtimeRecordReader(realtimeSplit,jobConf,super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@164ff44splitjobConfreporter)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "jobConf@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "HoodieRealtimeInputFormatUtils.addRequiredProjectionFields(jobConf)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "jobConf.get(HoodieInputFormatUtils.HOODIE_READ_COLUMNS_PROP) == null@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "LOG.info(\"Creating record reader with readCols :\" + jobConf.get(ColumnProjectionUtils.READ_COLUMN_NAMES_CONF_STR) + \", Ids :\" + jobConf.get(ColumnProjectionUtils.READ_COLUMN_IDS_CONF_STR))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18->3 [style = solid, label="jobConf"];
18->16 [style = solid, label="jobConf"];
7->6 [style = dotted, label="true"];
1->4 [style = bold, label=""];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
0->9 [style = solid, label="reporter"];
17->1 [style = bold, label=""];
17->18 [style = dotted, label="true"];
14->9 [style = solid, label="reporter"];
11->10 [style = dotted, label="true"];
14->4 [style = solid, label="jobConf"];
11->12 [style = dotted, label="true"];
4->13 [style = bold, label=""];
26->25 [style = solid, label="realtimeSplit"];
23->26 [style = bold, label=""];
15->9 [style = solid, label="split"];
22->25 [style = solid, label="reporter"];
18->4 [style = solid, label="jobConf"];
4->11 [style = dotted, label="true"];
17->14 [style = dotted, label="true"];
21->22 [style = dotted, label="true"];
11->5 [style = dotted, label="true"];
1->4 [style = dotted, label="true"];
2->9 [style = bold, label=""];
3->16 [style = bold, label=""];
7->0 [style = dotted, label="true"];
26->24 [style = solid, label="realtimeSplit"];
26->24 [style = bold, label=""];
20->25 [style = bold, label=""];
6->9 [style = solid, label="split"];
13->11 [style = bold, label=""];
19->25 [style = solid, label="jobConf"];
24->20 [style = bold, label=""];
18->5 [style = solid, label="jobConf"];
4->13 [style = dotted, label="true"];
3->10 [style = bold, label=""];
18->9 [style = solid, label="jobConf"];
19->24 [style = solid, label="jobConf"];
17->15 [style = dotted, label="true"];
6->2 [style = solid, label="split"];
10->5 [style = bold, label=""];
8->2 [style = bold, label=""];
5->12 [style = bold, label=""];
11->3 [style = bold, label=""];
12->8 [style = bold, label=""];
21->19 [style = dotted, label="true"];
14->25 [style = solid, label="split"];
14->3 [style = solid, label="jobConf"];
21->14 [style = dotted, label="true"];
14->5 [style = solid, label="jobConf"];
14->26 [style = solid, label="split"];
16->5 [style = bold, label=""];
11->16 [style = dotted, label="true"];
11->8 [style = bold, label=""];
14->23 [style = solid, label="split"];
10->16 [style = dashed, label="0"];
14->10 [style = solid, label="jobConf"];
11->3 [style = dotted, label="true"];
14->9 [style = solid, label="jobConf"];
15->2 [style = solid, label="split"];
21->23 [style = bold, label=""];
7->14 [style = dotted, label="true"];
}
