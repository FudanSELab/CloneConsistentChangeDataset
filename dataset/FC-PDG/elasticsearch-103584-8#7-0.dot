digraph {
0 [style = filled, label = "assertEquals(0,onRemovalCalled.get())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "loadField2.close()@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "ifdService.clearField(\"field_1\")@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testFieldDataCacheListener['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertEquals(1,onRemovalCalled.get())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "writer.close()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(1,onCacheCalled.get())@@@49@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "final MappedFieldType mapper1 = new TextFieldMapper.Builder(\"field_1\").fielddata(true).build(ctx).fieldType()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final AtomicInteger onRemovalCalled = new AtomicInteger()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ifdService.setListener(new IndexFieldDataCache.Listener(){@Override public void onCache(ShardId shardId,String fieldName,Accountable ramUsage){onCacheCalled.incrementAndGet()}@Override public void onRemoval(ShardId shardId,String fieldName,boolean wasEvicted,long sizeInBytes){onRemovalCalled.incrementAndGet()}})@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final IndexReader reader = DirectoryReader.open(writer)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "ifdService.clearField(\"field_1\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final AtomicInteger onCacheCalled = new AtomicInteger()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Document doc = new Document()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final IndicesService indicesService = getInstanceFromNode()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final IndexWriter writer = new IndexWriter(new ByteBuffersDirectory(),new IndexWriterConfig(new KeywordAnalyzer()))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "LeafFieldData loadField2 = ifd2.load(leafReaderContext)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final IndexFieldDataService ifdService = new IndexFieldDataService(indexService.getIndexSettings(),indicesService.getIndicesFieldDataCache(),indicesService.getCircuitBreakerService(),indexService.mapperService())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final MappedFieldType mapper1 = new TextFieldMapper.Builder(\"s\").fielddata(true).build(ctx).fieldType()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(1,onRemovalCalled.get())@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "LeafFieldData loadField1 = ifd1.load(leafReaderContext)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final BuilderContext ctx = new BuilderContext(indexService.getIndexSettings().getSettings(),new ContentPath(1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "LeafReaderContext leafReaderContext = reader.getContext().leaves().get(0)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "ifdService.clear()@@@46@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertEquals(2,onCacheCalled.get())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "IndexFieldData<?> ifd2 = ifdService.getForField(mapper2)@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "DirectoryReader open = DirectoryReader.open(writer)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "LeafFieldData load = ifd.load(leafReaderContext)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(2,onCacheCalled.get())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(1,onCacheCalled.get())@@@41@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final AtomicInteger onRemovalCalled = new AtomicInteger()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "loadField1.close()@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "testClearField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "ifdService.clearField(\"field_2\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(1,onCacheCalled.get())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "IndexFieldData<?> ifd = ifdService.getForField(mapper1,\"test\",null)@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(1,onRemovalCalled.get())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(2,onCacheCalled.get())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "doc.add(new StringField(\"field_2\",\"thisisanotherstring\",Store.NO))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "writer.addDocument(doc)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "doc.add(new StringField(\"field_1\",\"thisisastring\",Store.NO))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(0,onRemovalCalled.get())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(2,onCacheCalled.get())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(2,onRemovalCalled.get())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final IndexService indexService = createIndex(\"test\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testFieldDataCacheListener['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final MappedFieldType mapper2 = new TextFieldMapper.Builder(\"field_2\").fielddata(true).build(ctx).fieldType()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "LeafFieldData load = ifd.load(leafReaderContext)@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "writer.addDocument(doc)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "reader.close()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "IndexFieldData<?> ifd1 = ifdService.getForField(mapper1)@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final IndexReader reader = wrap? ElasticsearchDirectoryReader.wrap(open,new ShardId(\"test\",\"_na_\",1)): open@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "writer.close()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ifdService.clear()@@@51@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "final AtomicInteger onCacheCalled = new AtomicInteger()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final IndexWriter writer = new IndexWriter(new ByteBuffersDirectory(),new IndexWriterConfig(new KeywordAnalyzer()))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->30 [style = bold, label=""];
18->3 [style = bold, label=""];
22->29 [style = bold, label=""];
51->48 [style = bold, label=""];
53->54 [style = bold, label=""];
21->40 [style = bold, label=""];
38->32 [style = bold, label=""];
5->39 [style = dashed, label="0"];
7->51 [style = bold, label=""];
27->25 [style = bold, label=""];
26->16 [style = bold, label=""];
50->9 [style = bold, label=""];
17->27 [style = solid, label="mapper1"];
2->5 [style = bold, label=""];
17->41 [style = dashed, label="0"];
12->4 [style = bold, label=""];
4->36 [style = dashed, label="0"];
42->43 [style = bold, label=""];
41->50 [style = bold, label=""];
39->42 [style = bold, label=""];
1->18 [style = bold, label=""];
31->18 [style = bold, label=""];
4->8 [style = bold, label=""];
14->24 [style = bold, label=""];
9->21 [style = bold, label=""];
7->22 [style = bold, label=""];
11->17 [style = bold, label=""];
40->33 [style = bold, label=""];
24->10 [style = bold, label=""];
15->7 [style = bold, label=""];
33->20 [style = bold, label=""];
15->45 [style = bold, label=""];
52->44 [style = bold, label=""];
23->0 [style = bold, label=""];
35->36 [style = solid, label="leafReaderContext"];
35->25 [style = solid, label="leafReaderContext"];
23->55 [style = dashed, label="0"];
21->2 [style = bold, label=""];
45->53 [style = bold, label=""];
10->12 [style = bold, label=""];
20->24 [style = solid, label="wrap"];
20->39 [style = bold, label=""];
13->5 [style = solid, label="writer"];
32->46 [style = bold, label=""];
47->52 [style = bold, label=""];
0->15 [style = bold, label=""];
49->18 [style = bold, label=""];
5->26 [style = solid, label="open"];
19->11 [style = bold, label=""];
21->40 [style = dashed, label="0"];
11->41 [style = bold, label=""];
46->15 [style = bold, label=""];
50->12 [style = solid, label="mapper2"];
17->13 [style = bold, label=""];
55->7 [style = bold, label=""];
16->14 [style = bold, label=""];
8->25 [style = bold, label=""];
3->19 [style = bold, label=""];
5->20 [style = bold, label=""];
12->35 [style = bold, label=""];
35->36 [style = bold, label=""];
20->26 [style = solid, label="wrap"];
12->4 [style = solid, label="leafReaderContext"];
41->10 [style = solid, label="mapper1"];
9->39 [style = solid, label="writer"];
10->27 [style = dashed, label="0"];
30->28 [style = bold, label=""];
25->6 [style = solid, label="leafReaderContext"];
25->38 [style = bold, label=""];
9->2 [style = solid, label="doc"];
24->27 [style = bold, label=""];
13->9 [style = bold, label=""];
37->47 [style = bold, label=""];
17->10 [style = solid, label="mapper1"];
6->23 [style = bold, label=""];
20->26 [style = bold, label=""];
25->6 [style = bold, label=""];
34->37 [style = bold, label=""];
43->24 [style = bold, label=""];
44->55 [style = bold, label=""];
36->25 [style = bold, label=""];
21->20 [style = solid, label="doc"];
54->34 [style = bold, label=""];
}
