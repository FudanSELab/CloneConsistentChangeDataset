digraph {
9 [style = filled, label = "testGreatestFunc['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tester1.checkScalar(\"least(false, true)\",false,\"BOOLEAN NOT NULL\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "tester1.checkString(\"greatest('show', 'on', 'earth')\",\"show \",\"CHAR(5) NOT NULL\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "tester.setFor(SqlLibraryOperators.LEAST)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "tester2.checkString(\"least('on', 'earth')\",\"earth\",\"VARCHAR(5) NOT NULL\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testLeastFunc['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tester1.checkString(\"greatest('on', 'earth')\",\"on \",\"CHAR(5) NOT NULL\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final SqlTester tester2 = oracleTester(SqlConformanceEnum.ORACLE_12)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "tester2.checkString(\"greatest('show', 'on', 'earth')\",\"show\",\"VARCHAR(5) NOT NULL\")@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "tester2.checkString(\"greatest('on', 'earth')\",\"on\",\"VARCHAR(5) NOT NULL\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testGreatestFunc['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "tester1.checkString(\"least('on', 'earth')\",\"earth\",\"CHAR(5) NOT NULL\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final SqlTester tester1 = libraryTester(SqlLibrary.ORACLE)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "tester2.checkString(\"least('show', 'on', 'earth')\",\"earth\",\"VARCHAR(5) NOT NULL\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "tester.setFor(SqlLibraryOperators.GREATEST)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tester1.checkString(\"least('show', 'on', 'earth')\",\"earth\",\"CHAR(5) NOT NULL\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "tester1.checkScalar(\"greatest(false, true)\",true,\"BOOLEAN NOT NULL\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tester1.checkScalar(\"greatest(12, CAST(NULL AS INTEGER), 3)\",null,\"INTEGER\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tester1.checkScalar(\"least(12, CAST(NULL AS INTEGER), 3)\",null,\"INTEGER\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final SqlTester tester1 = oracleTester()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
14->16 [style = bold, label=""];
1->8 [style = bold, label=""];
8->10 [style = dashed, label="0"];
4->6 [style = bold, label=""];
11->1 [style = bold, label=""];
16->19 [style = bold, label=""];
2->17 [style = dashed, label="0"];
2->4 [style = bold, label=""];
0->15 [style = bold, label=""];
19->0 [style = bold, label=""];
1->13 [style = dashed, label="0"];
8->17 [style = bold, label=""];
6->5 [style = bold, label=""];
6->16 [style = dashed, label="0"];
8->2 [style = bold, label=""];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
17->14 [style = bold, label=""];
18->13 [style = bold, label=""];
7->12 [style = dashed, label="0"];
3->15 [style = dashed, label="0"];
10->2 [style = bold, label=""];
15->12 [style = bold, label=""];
4->14 [style = dashed, label="0"];
13->8 [style = bold, label=""];
9->1 [style = bold, label=""];
1->10 [style = bold, label=""];
5->19 [style = dashed, label="0"];
}
