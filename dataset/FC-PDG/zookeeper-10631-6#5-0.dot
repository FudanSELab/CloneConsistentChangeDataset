digraph {
9 [style = filled, label = "boolean useAsync@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "fail(\"/multi should have been deleted so setData should have failed\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testDeleteUpdateConflict['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "multi(zk,Arrays.asList(Op.create(\"/multi\",new byte((((,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT),Op.setData(\"/multi\",\"X\".getBytes(),0),Op.setData(\"/multi\",\"Y\".getBytes(),1)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "KeeperException e@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertNull(zk.exists(\"/multi\",null))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "multi(zk,Arrays.asList(Op.create(\"/multi\",new byte((((,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT),Op.setData(\"/multi\",\"X\".getBytes(),0),Op.setData(\"/multi\",\"Y\".getBytes(),0)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "multi(zk,Arrays.asList(Op.create(\"/multi\",new byte((((,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT),Op.delete(\"/multi\",0),Op.setData(\"/multi\",\"Y\".getBytes(),0)))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "fail(\"Should have thrown a KeeperException for invalid version\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertNull(zk.exists(\"/multi\",null))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "KeeperException e@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertArrayEquals(zk.getData(\"/multi\",false,null),\"Y\".getBytes())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertNull(zk.exists(\"/multi\",null))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "LOG.error(\"STACKTRACE: \",e)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testUpdateConflict['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testDeleteUpdateConflict['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "multi(zk,Arrays.asList(Op.create(\"/multi\",new byte((((,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT),Op.delete(\"/multi\",0),Op.setData(\"/multi\",\"Y\".getBytes(),0)),useAsync)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "KeeperException e@@@7@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "{}@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
15->13 [style = bold, label=""];
4->6 [style = bold, label=""];
16->10 [style = bold, label=""];
9->7 [style = solid, label="useAsync"];
12->17 [style = bold, label=""];
1->18 [style = dashed, label="0"];
4->2 [style = bold, label=""];
3->4 [style = bold, label=""];
16->10 [style = dotted, label="true"];
11->15 [style = bold, label=""];
8->7 [style = bold, label=""];
6->2 [style = bold, label=""];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
0->1 [style = bold, label=""];
8->9 [style = dotted, label="true"];
1->7 [style = dashed, label="0"];
14->11 [style = bold, label=""];
18->14 [style = bold, label=""];
17->18 [style = bold, label=""];
10->11 [style = bold, label=""];
}
