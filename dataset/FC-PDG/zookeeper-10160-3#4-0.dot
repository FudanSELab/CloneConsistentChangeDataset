digraph {
26 [style = filled, label = "Assert.assertEquals(expectSuccess,ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "q2.start()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "q1.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "q3 = new MainThread(3,clientPortQp3,quorumConfiguration,SSL_QUORUM_ENABLED)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "System.setProperty(quorumX509Util.getSslProtocolProperty(),\"TLSv1.1\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "System.setProperty(quorumX509Util.getSslKeystoreLocationProperty(),keystorePath)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "q1.start()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String keystorePath@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "q1.shutdown()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "q2 = new MainThread(2,clientPortQp2,quorumConfiguration,SSL_QUORUM_ENABLED)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "System.setProperty(quorumX509Util.getSslHostnameVerificationEnabledProperty(),\"false\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "q3.shutdown()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "q3.start()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(expectSuccess,ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "q3.start()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "System.clearProperty(quorumX509Util.getSslHostnameVerificationEnabledProperty())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testProtocolVersion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String keystorePath@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "System.setProperty(quorumX509Util.getSslKeystoreLocationProperty(),keystorePath)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "boolean expectSuccess@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "q2.shutdown()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "q2.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "setSSLSystemProperties()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "q1 = new MainThread(1,clientPortQp1,quorumConfiguration,SSL_QUORUM_ENABLED)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testHostnameVerification['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testHostnameVerification['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "System.setProperty(quorumX509Util.getSslProtocolProperty(),\"TLSv1.2\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->23 [style = solid, label="keystorePath"];
22->36 [style = dashed, label="0"];
14->31 [style = dashed, label="0"];
27->38 [style = dashed, label="0"];
16->13 [style = bold, label=""];
24->41 [style = dashed, label="0"];
0->37 [style = dashed, label="0"];
35->29 [style = bold, label=""];
9->0 [style = bold, label=""];
32->37 [style = bold, label=""];
30->1 [style = bold, label=""];
40->6 [style = bold, label=""];
8->41 [style = bold, label=""];
28->20 [style = bold, label=""];
41->15 [style = bold, label=""];
34->23 [style = solid, label="keystorePath"];
19->31 [style = bold, label=""];
37->30 [style = bold, label=""];
4->39 [style = bold, label=""];
21->26 [style = solid, label="expectSuccess"];
33->34 [style = dotted, label="true"];
12->11 [style = bold, label=""];
23->4 [style = bold, label=""];
4->26 [style = bold, label=""];
36->28 [style = bold, label=""];
25->40 [style = dashed, label="0"];
38->23 [style = bold, label=""];
21->39 [style = solid, label="expectSuccess"];
22->28 [style = bold, label=""];
31->38 [style = bold, label=""];
12->35 [style = bold, label=""];
25->6 [style = bold, label=""];
15->3 [style = bold, label=""];
3->22 [style = bold, label=""];
3->42 [style = bold, label=""];
9->32 [style = dashed, label="0"];
10->17 [style = dotted, label="true"];
20->18 [style = bold, label=""];
43->40 [style = bold, label=""];
26->39 [style = dashed, label="0"];
5->1 [style = bold, label=""];
3->36 [style = bold, label=""];
22->42 [style = dashed, label="0"];
13->12 [style = bold, label=""];
33->21 [style = dotted, label="true"];
19->14 [style = bold, label=""];
10->25 [style = bold, label=""];
33->25 [style = bold, label=""];
6->16 [style = bold, label=""];
5->30 [style = dashed, label="0"];
18->9 [style = bold, label=""];
18->32 [style = bold, label=""];
11->8 [style = bold, label=""];
34->24 [style = solid, label="keystorePath"];
27->23 [style = bold, label=""];
1->2 [style = bold, label=""];
14->27 [style = bold, label=""];
2->7 [style = bold, label=""];
29->24 [style = bold, label=""];
10->21 [style = dotted, label="true"];
7->19 [style = bold, label=""];
8->29 [style = dashed, label="0"];
11->35 [style = dashed, label="0"];
17->24 [style = solid, label="keystorePath"];
0->5 [style = bold, label=""];
24->15 [style = bold, label=""];
8->24 [style = bold, label=""];
}
