digraph {
45 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"four\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "InOrder inOrder = inOrder(observer)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final TestObservable<String> w1 = new TestObservable<>(\"one\",\"two\",\"three\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"one\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "fail(e.getMessage())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "@SuppressWarnings(\"unchecked\") TestObservable<Flowable<String>> observableOfObservables = new TestObservable<>(Flowable.unsafeCreate(w1),Flowable.unsafeCreate(w2))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "concatUnsubscribeConcurrent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"two\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"three\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final TestObservable<String> w2 = new TestObservable<>(callOnce,okToContinue,\"four\",\"five\",\"six\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Throwable e@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final Observable<String> concat = Observable.concat(Observable.unsafeCreate(w1),Observable.unsafeCreate(w2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "inOrder.verify(subscriber,never()).onNext(\"five\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "@SuppressWarnings(\"unchecked\") TestObservable<Flowable<String>> observableOfObservables = new TestObservable<Flowable<String>>(Flowable.unsafeCreate(w1),Flowable.unsafeCreate(w2))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "w2.t.join()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "TestSubscriber<String> ts = new TestSubscriber<>(subscriber,0L)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "concatUnsubscribeConcurrent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "TestObserver<String> to = new TestObserver<String>(observer)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "InOrder inOrder = inOrder(subscriber)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "e.printStackTrace()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final TestObservable<String> w1 = new TestObservable<String>(\"one\",\"two\",\"three\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "inOrder.verify(observer,never()).onNext(\"five\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "inOrder.verify(subscriber,times(1)).onNext(\"one\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "TestSubscriber<String> ts = new TestSubscriber<String>(subscriber,0L)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "final CountDownLatch callOnce = new CountDownLatch(1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "concat.subscribe(to)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ts.cancel()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Flowable<String> concatF = Flowable.concat(Flowable.unsafeCreate(observableOfObservables))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "verify(subscriber,never()).onComplete()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "okToContinue.countDown()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "inOrder.verify(subscriber,times(1)).onNext(\"three\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Subscriber<String> subscriber = TestHelper.mockSubscriber()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final CountDownLatch okToContinue = new CountDownLatch(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "inOrder.verify(observer,never()).onNext(\"six\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "concatF.subscribe(ts)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final TestObservable<String> w2 = new TestObservable<String>(callOnce,okToContinue,\"four\",\"five\",\"six\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "inOrder.verify(subscriber,never()).onNext(\"six\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "inOrder.verify(subscriber,times(1)).onNext(\"two\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Observer<String> observer = TestHelper.mockObserver()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "e.printStackTrace()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(subscriber,never()).onError(any())@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "w1.t.join()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "inOrder.verify(observer,never()).onComplete()@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "to.dispose()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "inOrder.verify(subscriber,times(1)).onNext(\"four\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "w1.t.join()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "concatUnsubscribe['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "callOnce.await()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24->25 [style = dotted, label="true"];
17->35 [style = dashed, label="0"];
24->32 [style = bold, label=""];
10->38 [style = dashed, label="0"];
19->26 [style = solid, label="subscriber"];
25->6 [style = bold, label=""];
25->18 [style = dotted, label="true"];
2->4 [style = solid, label="observableOfObservables"];
18->44 [style = bold, label=""];
30->28 [style = bold, label=""];
45->43 [style = bold, label=""];
38->7 [style = bold, label=""];
33->46 [style = bold, label=""];
26->15 [style = bold, label=""];
32->25 [style = bold, label=""];
39->38 [style = bold, label=""];
21->16 [style = bold, label=""];
30->20 [style = solid, label="ts"];
27->19 [style = bold, label=""];
11->46 [style = dashed, label="0"];
13->47 [style = solid, label="w1"];
9->29 [style = bold, label=""];
17->20 [style = solid, label="ts"];
0->3 [style = bold, label=""];
27->28 [style = solid, label="w2"];
19->30 [style = solid, label="subscriber"];
10->14 [style = bold, label=""];
13->29 [style = dashed, label="0"];
12->11 [style = bold, label=""];
5->47 [style = solid, label="w2"];
23->5 [style = solid, label="callOnce"];
2->4 [style = bold, label=""];
22->23 [style = bold, label=""];
9->5 [style = solid, label="okToContinue"];
29->27 [style = bold, label=""];
5->27 [style = dashed, label="0"];
29->28 [style = solid, label="w1"];
17->2 [style = bold, label=""];
9->27 [style = solid, label="okToContinue"];
2->28 [style = dashed, label="0"];
25->6 [style = dotted, label="true"];
13->5 [style = bold, label=""];
5->2 [style = solid, label="w2"];
14->18 [style = bold, label=""];
15->12 [style = bold, label=""];
20->7 [style = bold, label=""];
13->2 [style = solid, label="w1"];
12->33 [style = dashed, label="0"];
24->32 [style = dotted, label="true"];
21->34 [style = dashed, label="0"];
47->42 [style = bold, label=""];
6->18 [style = bold, label=""];
18->26 [style = bold, label=""];
42->39 [style = bold, label=""];
25->18 [style = bold, label=""];
44->33 [style = bold, label=""];
43->36 [style = bold, label=""];
19->17 [style = bold, label=""];
8->36 [style = dashed, label="0"];
19->41 [style = dashed, label="0"];
5->19 [style = bold, label=""];
24->26 [style = bold, label=""];
26->18 [style = dashed, label="0"];
3->8 [style = bold, label=""];
41->35 [style = solid, label="observer"];
4->20 [style = bold, label=""];
19->17 [style = solid, label="subscriber"];
40->14 [style = bold, label=""];
36->34 [style = bold, label=""];
7->40 [style = bold, label=""];
0->45 [style = dashed, label="0"];
41->18 [style = solid, label="observer"];
41->35 [style = bold, label=""];
28->4 [style = solid, label="observableOfObservables"];
31->23 [style = bold, label=""];
7->10 [style = bold, label=""];
15->44 [style = dashed, label="0"];
37->23 [style = bold, label=""];
14->1 [style = bold, label=""];
23->27 [style = solid, label="callOnce"];
11->0 [style = bold, label=""];
5->41 [style = bold, label=""];
1->24 [style = bold, label=""];
3->43 [style = dashed, label="0"];
35->42 [style = solid, label="to"];
35->47 [style = bold, label=""];
8->21 [style = bold, label=""];
46->45 [style = bold, label=""];
23->9 [style = bold, label=""];
17->30 [style = dashed, label="0"];
28->4 [style = bold, label=""];
9->13 [style = bold, label=""];
19->30 [style = bold, label=""];
}
