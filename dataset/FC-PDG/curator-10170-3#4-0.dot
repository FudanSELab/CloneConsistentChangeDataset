digraph {
7 [style = filled, label = "Assert.assertTrue(downInstanceManager.apply(instance2))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(downInstanceManager.apply(instance1))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(downInstanceManager.apply(instance1))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertFalse(downInstanceManager.apply(instance1))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DownInstanceManager<Void> downInstanceManager = new DownInstanceManager<Void>(debugMultiDownInstancePolicy)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertTrue(downInstanceManager.apply(instance2))@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ServiceInstance<Void> instance1 = ServiceInstance.builder().name(\"hey\").id(\"1\").build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(downInstanceManager.apply(instance2))@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertTrue(downInstanceManager.apply(instance1))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testThreshold['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertTrue(downInstanceManager.apply(instance2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ServiceInstance<Void> instance2 = ServiceInstance.builder().name(\"hey\").id(\"2\").build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(downInstanceManager.apply(instance2))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertFalse(downInstanceManager.apply(instance1))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "downInstanceManager.add(instance1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "downInstanceManager.add(instance1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "DownInstanceManager<Void> downInstanceManager = new DownInstanceManager<Void>(debugDownInstancePolicy)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testBasic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testBasic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->6 [style = bold, label=""];
14->17 [style = bold, label=""];
5->17 [style = solid, label="instance2"];
3->14 [style = bold, label=""];
8->5 [style = bold, label=""];
18->2 [style = bold, label=""];
8->11 [style = solid, label="instance1"];
3->2 [style = bold, label=""];
4->11 [style = bold, label=""];
1->8 [style = bold, label=""];
9->3 [style = bold, label=""];
8->18 [style = solid, label="instance1"];
10->8 [style = bold, label=""];
4->16 [style = dashed, label="0"];
11->9 [style = bold, label=""];
8->6 [style = solid, label="instance1"];
8->14 [style = solid, label="instance1"];
5->13 [style = solid, label="instance2"];
5->4 [style = bold, label=""];
0->13 [style = dashed, label="0"];
12->13 [style = bold, label=""];
5->9 [style = solid, label="instance2"];
7->3 [style = bold, label=""];
7->9 [style = dashed, label="0"];
8->3 [style = solid, label="instance1"];
8->12 [style = solid, label="instance1"];
3->12 [style = bold, label=""];
16->6 [style = bold, label=""];
5->0 [style = solid, label="instance2"];
2->0 [style = bold, label=""];
6->11 [style = dashed, label="0"];
8->2 [style = solid, label="instance1"];
6->7 [style = bold, label=""];
15->8 [style = bold, label=""];
5->16 [style = bold, label=""];
5->7 [style = solid, label="instance2"];
2->12 [style = dashed, label="0"];
17->18 [style = bold, label=""];
}
