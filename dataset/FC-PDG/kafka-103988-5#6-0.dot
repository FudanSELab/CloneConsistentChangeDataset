digraph {
10 [style = filled, label = "state.seekUnvalidated(tp0,initialPosition)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "long divergentOffset = 5L@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testMaybeCompleteValidation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "state = new SubscriptionState(new LogContext(),OffsetResetStrategy.NONE)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testTruncationDetectionWithoutResetPolicy['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SubscriptionState.FetchPosition initialPosition = new SubscriptionState.FetchPosition(initialOffset,Optional.of(initialOffsetEpoch),new Metadata.LeaderAndEpoch(Optional.of(broker1),Optional.of(currentEpoch)))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int currentEpoch = 10@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "state.assignFromUser(Collections.singleton(tp0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(Optional.empty(),divergentOffsetMetadataOpt)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Optional<OffsetAndMetadata> divergentOffsetMetadataOpt = state.maybeCompleteValidation(tp0,initialPosition,new EpochEndOffset(initialOffsetEpoch,initialOffset + 5))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertTrue(state.awaitingValidation(tp0))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Optional.of(new OffsetAndMetadata(divergentOffset,Optional.of(divergentOffsetEpoch),\"\")),divergentOffsetMetadata)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Node broker1 = new Node(1,\"localhost\",9092)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "long initialOffset = 10L@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Optional<LogTruncation> truncationOpt = state.maybeCompleteValidation(tp0,initialPosition,new EpochEndOffset(initialOffsetEpoch,initialOffset + 5))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Optional<OffsetAndMetadata> divergentOffsetMetadata = state.maybeCompleteValidation(tp0,initialPosition,new EpochEndOffset(divergentOffsetEpoch,divergentOffset))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int divergentOffsetEpoch = 7@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "int initialOffsetEpoch = 5@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testMaybeCompleteValidation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertFalse(state.awaitingValidation(tp0))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(initialPosition,state.position(tp0))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(state.awaitingValidation(tp0))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(Optional.empty(),truncationOpt)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->3 [style = bold, label=""];
6->3 [style = bold, label=""];
0->9 [style = bold, label=""];
20->17 [style = bold, label=""];
15->7 [style = bold, label=""];
17->1 [style = bold, label=""];
7->12 [style = bold, label=""];
22->16 [style = bold, label=""];
1->10 [style = solid, label="initialPosition"];
18->11 [style = bold, label=""];
17->22 [style = solid, label="divergentOffsetEpoch"];
3->11 [style = bold, label=""];
1->13 [style = solid, label="initialPosition"];
9->20 [style = bold, label=""];
4->22 [style = dashed, label="0"];
1->12 [style = solid, label="initialPosition"];
16->19 [style = bold, label=""];
4->5 [style = solid, label="divergentOffsetMetadataOpt"];
2->4 [style = bold, label=""];
13->15 [style = solid, label="truncationOpt"];
17->16 [style = solid, label="divergentOffsetEpoch"];
3->1 [style = solid, label="broker1"];
20->22 [style = solid, label="divergentOffset"];
2->13 [style = bold, label=""];
3->18 [style = bold, label=""];
1->4 [style = solid, label="initialPosition"];
8->0 [style = bold, label=""];
8->1 [style = solid, label="currentEpoch"];
20->16 [style = solid, label="divergentOffset"];
5->16 [style = dashed, label="0"];
9->1 [style = solid, label="initialOffsetEpoch"];
7->19 [style = dashed, label="0"];
0->4 [style = solid, label="initialOffset"];
1->22 [style = solid, label="initialPosition"];
9->13 [style = solid, label="initialOffsetEpoch"];
11->8 [style = bold, label=""];
5->7 [style = bold, label=""];
10->2 [style = bold, label=""];
9->4 [style = solid, label="initialOffsetEpoch"];
13->15 [style = bold, label=""];
9->1 [style = bold, label=""];
2->22 [style = bold, label=""];
0->13 [style = solid, label="initialOffset"];
1->10 [style = bold, label=""];
4->13 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
4->5 [style = bold, label=""];
0->1 [style = solid, label="initialOffset"];
22->16 [style = solid, label="divergentOffsetMetadata"];
21->3 [style = bold, label=""];
}
