digraph {
18 [style = filled, label = "v += l@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "t.join()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "l != expected@@@60@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "count == 100@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Thread t = new Thread(new Runnable(){@Override public void run(){List<Long> values = replay.toList().blockingGet()listOfListsOfValues.add(values)System.out.println(\"Finished thread: \" + count)}})@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "t.join()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "System.out.println(\"Success! \" + sums.size() + \" each had the same sum of \" + expected)@@@67@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "System.out.println(\"Started thread: \" + i)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "replaySubjectConcurrentSubscriptions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "int i = 1@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "success@@@65@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "final List<List<Long>> listOfListsOfValues = Collections.synchronizedList(new ArrayList<List<Long>>())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "long expected = sums.get(0)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "threads.add(t)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "System.out.println(\"FAILURE => Expected \" + expected + \" but got: \" + l)@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "System.out.println(\"FAILURE => Expected \" + expected + \" but got: \" + l)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "threads.add(t)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "boolean success = true@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "source.join()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "throw new RuntimeException(\"Concurrency Bug\")@@@70@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<Long> sums = new ArrayList<Long>()@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "count == 20@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "source.start()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "success = false@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "t.start()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "v += l@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final List<Thread> threads = Collections.synchronizedList(new ArrayList<Thread>())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final ReplaySubject<Long> replay = ReplaySubject.createUnbounded()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "replaySubjectConcurrentSubscriptions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Thread source = new Thread(new Runnable(){@Override public void run(){Flowable.unsafeCreate(new Publisher<Long>(){@Override public void subscribe(Subscriber<? super Long> subscriber){System.out.println(\"********* Start Source Data ***********\")for (long l = 1 l <= 10000 l++){subscriber.onNext(l)}System.out.println(\"********* Finished Source Data ***********\")subscriber.onComplete()}}).subscribe(replay)}})@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "List<Long> sums = new ArrayList<Long>()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "sums.add(v)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "boolean success = true@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i++@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "replaySubjectConcurrentSubscriptions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "sums.add(v)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "long v = 0@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "source.start()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "source.join()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i <= 200@@@25@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Thread t = new Thread(new Runnable(){@Override public void run(){List<Long> values = replay.toList().blockingGet()listOfListsOfValues.add(values)System.out.println(\"Finished thread: \" + count)}})@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "throw new RuntimeException(\"Concurrency Bug\")@@@69@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final int count = i@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "long v = 0@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "System.out.println(\"Success! \" + sums.size() + \" each had the same sum of \" + expected)@@@66@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final ReplayProcessor<Long> replay = ReplayProcessor.create()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22->29 [style = bold, label=""];
20->1 [style = dotted, label="true"];
8->14 [style = solid, label="i"];
43->12 [style = solid, label="expected"];
38->36 [style = bold, label=""];
38->6 [style = bold, label=""];
8->3 [style = solid, label="count"];
27->7 [style = bold, label=""];
19->28 [style = bold, label=""];
15->33 [style = bold, label=""];
3->1 [style = dotted, label="true"];
37->35 [style = bold, label=""];
2->25 [style = solid, label="replay"];
18->13 [style = bold, label=""];
4->8 [style = bold, label=""];
4->0 [style = dotted, label="true"];
3->1 [style = bold, label=""];
12->10 [style = bold, label=""];
20->4 [style = solid, label="i"];
29->0 [style = solid, label="i"];
4->20 [style = solid, label="i"];
1->24 [style = dotted, label="true"];
43->17 [style = bold, label=""];
25->42 [style = bold, label=""];
33->28 [style = dotted, label="true"];
3->38 [style = bold, label=""];
28->41 [style = solid, label="success"];
11->16 [style = solid, label="t"];
31->39 [style = bold, label=""];
8->20 [style = bold, label=""];
3->6 [style = solid, label="count"];
4->14 [style = solid, label="i"];
20->8 [style = solid, label="i"];
20->14 [style = dotted, label="true"];
12->10 [style = dotted, label="true"];
43->33 [style = solid, label="expected"];
40->45 [style = solid, label="v"];
33->15 [style = dotted, label="true"];
17->23 [style = solid, label="expected"];
3->1 [style = solid, label="count"];
17->28 [style = solid, label="expected"];
4->38 [style = dotted, label="true"];
41->44 [style = bold, label=""];
40->45 [style = bold, label=""];
6->11 [style = bold, label=""];
20->4 [style = bold, label=""];
15->23 [style = bold, label=""];
16->8 [style = bold, label=""];
20->16 [style = dotted, label="true"];
8->3 [style = bold, label=""];
36->14 [style = solid, label="t"];
45->43 [style = bold, label=""];
20->0 [style = solid, label="i"];
15->41 [style = bold, label=""];
35->25 [style = bold, label=""];
0->14 [style = bold, label=""];
6->36 [style = bold, label=""];
8->20 [style = solid, label="i"];
19->12 [style = solid, label="success"];
17->33 [style = bold, label=""];
42->22 [style = bold, label=""];
43->15 [style = solid, label="expected"];
29->4 [style = solid, label="i"];
20->3 [style = dotted, label="true"];
4->3 [style = solid, label="i"];
20->3 [style = bold, label=""];
18->13 [style = solid, label="v"];
14->16 [style = bold, label=""];
4->3 [style = dotted, label="true"];
13->17 [style = bold, label=""];
7->18 [style = bold, label=""];
11->0 [style = bold, label=""];
17->19 [style = bold, label=""];
4->36 [style = dotted, label="true"];
41->44 [style = dotted, label="false"];
8->3 [style = solid, label="i"];
1->24 [style = bold, label=""];
28->15 [style = bold, label=""];
4->8 [style = solid, label="i"];
12->5 [style = dotted, label="false"];
33->41 [style = bold, label=""];
3->11 [style = solid, label="count"];
20->0 [style = dotted, label="true"];
23->12 [style = bold, label=""];
4->14 [style = dotted, label="true"];
29->8 [style = solid, label="i"];
6->9 [style = dotted, label="true"];
28->23 [style = dotted, label="true"];
24->6 [style = bold, label=""];
17->41 [style = solid, label="success"];
4->20 [style = dotted, label="true"];
15->12 [style = solid, label="success"];
13->7 [style = bold, label=""];
9->11 [style = bold, label=""];
28->12 [style = bold, label=""];
4->32 [style = bold, label=""];
30->2 [style = bold, label=""];
29->4 [style = bold, label=""];
1->6 [style = bold, label=""];
2->25 [style = bold, label=""];
4->20 [style = bold, label=""];
26->27 [style = bold, label=""];
34->0 [style = bold, label=""];
33->28 [style = bold, label=""];
41->12 [style = bold, label=""];
21->2 [style = bold, label=""];
4->8 [style = dotted, label="true"];
6->9 [style = bold, label=""];
12->5 [style = bold, label=""];
8->38 [style = solid, label="count"];
4->34 [style = dotted, label="true"];
32->31 [style = bold, label=""];
36->34 [style = bold, label=""];
8->36 [style = solid, label="count"];
35->25 [style = solid, label="replay"];
1->38 [style = bold, label=""];
38->6 [style = dotted, label="true"];
41->12 [style = dotted, label="true"];
39->40 [style = bold, label=""];
23->28 [style = bold, label=""];
28->15 [style = dotted, label="true"];
29->20 [style = solid, label="i"];
20->8 [style = dotted, label="true"];
17->10 [style = solid, label="expected"];
45->39 [style = bold, label=""];
25->22 [style = bold, label=""];
20->26 [style = bold, label=""];
20->6 [style = dotted, label="true"];
2->35 [style = dashed, label="0"];
14->20 [style = bold, label=""];
20->11 [style = dotted, label="true"];
}
