digraph {
25 [style = filled, label = "RetryPolicy retryPolicy = new RetryOneTime(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(startedLatch.await(10,TimeUnit.SECONDS))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "Stat fakeStat = mock()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ensurePath.ensure(curator)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testBasic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "++i@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final EnsurePath ensurePath = new EnsurePath(\"/one/two/three\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "EnsurePath ensurePath = new EnsurePath(\"/one/two/three\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testSimultaneous['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(finishedLatch.await(10,TimeUnit.SECONDS))@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "when(curator.getZooKeeper()).thenReturn(client)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verifyNoMoreInteractions(client)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i < 2@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(finishedLatch.await(10,TimeUnit.SECONDS))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "verify(client,times(3)).exists(Mockito.any(),anyBoolean())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "ensurePath.ensure(curator)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ZooKeeper client = mock(,Mockito.RETURNS_MOCKS)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(curator.newRetryLoop()).thenReturn(retryLoop)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "verify(client,times(3)).exists(Mockito.any(),anyBoolean())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "ensurePath.ensure(curator)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "when(client.exists(Mockito.any(),anyBoolean())).thenReturn(fakeStat)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "CuratorZookeeperClient curator = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int i = 0@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "service.submit(new Callable<Void>(){@Override public Void call(){startedLatch.countDown()ensurePath.ensure(curator)finishedLatch.countDown()return null}})@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertTrue(startedLatch.await(10,TimeUnit.SECONDS))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "verifyNoMoreInteractions(client)@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final CountDownLatch finishedLatch = new CountDownLatch(2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final CuratorZookeeperClient curator = mock()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testSimultaneous['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "ensurePath.ensure(curator)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "when(client.exists(Mockito.any(),anyBoolean())).thenAnswer(new Answer<Stat>(){@Override public Stat answer(InvocationOnMock invocation){semaphore.acquire()return fakeStat}})@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "verifyNoMoreInteractions(client)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ExecutorService service = Executors.newCachedThreadPool()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "verifyNoMoreInteractions(client)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "when(curator.getRetryPolicy()).thenReturn(retryPolicy)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "semaphore.release(3)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ensurePath.ensure(curator)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final Stat fakeStat = mock()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "RetryLoop retryLoop = new RetryLoopImpl(retryPolicy,null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final CountDownLatch startedLatch = new CountDownLatch(2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
2->16 [style = solid, label="retryLoop"];
30->38 [style = bold, label=""];
23->20 [style = bold, label=""];
2->19 [style = bold, label=""];
5->9 [style = bold, label=""];
21->27 [style = dashed, label="0"];
8->18 [style = bold, label=""];
34->1 [style = bold, label=""];
1->17 [style = solid, label="client"];
29->9 [style = bold, label=""];
30->38 [style = solid, label="fakeStat"];
4->21 [style = bold, label=""];
22->29 [style = bold, label=""];
19->11 [style = bold, label=""];
1->35 [style = bold, label=""];
28->1 [style = bold, label=""];
1->26 [style = solid, label="client"];
16->23 [style = bold, label=""];
38->31 [style = bold, label=""];
10->4 [style = solid, label="i"];
1->11 [style = solid, label="client"];
25->15 [style = solid, label="retryPolicy"];
15->16 [style = bold, label=""];
1->39 [style = solid, label="client"];
27->22 [style = bold, label=""];
35->40 [style = solid, label="curator"];
22->5 [style = bold, label=""];
25->2 [style = bold, label=""];
19->3 [style = solid, label="curator"];
35->33 [style = solid, label="curator"];
11->15 [style = bold, label=""];
19->24 [style = solid, label="curator"];
35->25 [style = bold, label=""];
35->37 [style = solid, label="curator"];
6->1 [style = bold, label=""];
24->26 [style = bold, label=""];
0->10 [style = bold, label=""];
17->24 [style = bold, label=""];
4->14 [style = dotted, label="true"];
40->39 [style = bold, label=""];
21->22 [style = bold, label=""];
31->33 [style = bold, label=""];
32->40 [style = bold, label=""];
16->30 [style = bold, label=""];
4->27 [style = bold, label=""];
33->36 [style = bold, label=""];
23->8 [style = solid, label="fakeStat"];
12->14 [style = bold, label=""];
23->30 [style = dashed, label="0"];
10->4 [style = bold, label=""];
37->32 [style = bold, label=""];
4->12 [style = bold, label=""];
9->3 [style = bold, label=""];
3->17 [style = bold, label=""];
5->29 [style = dashed, label="0"];
36->37 [style = bold, label=""];
20->7 [style = bold, label=""];
13->8 [style = bold, label=""];
4->12 [style = dotted, label="true"];
25->2 [style = solid, label="retryPolicy"];
1->25 [style = bold, label=""];
1->32 [style = solid, label="client"];
18->0 [style = bold, label=""];
2->11 [style = bold, label=""];
14->4 [style = bold, label=""];
19->12 [style = solid, label="curator"];
}
