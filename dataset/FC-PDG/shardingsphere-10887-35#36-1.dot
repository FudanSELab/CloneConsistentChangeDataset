digraph {
8 [style = filled, label = "Field contextManagerField = ProxyContext.getInstance().getClass().getDeclaredField(\"contextManager\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertTrue(ProxyContext.getInstance().schemaExists(\"schema\"))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(ProxyContext.getInstance().schemaExists(\"schema_2\"))@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "metaDataContexts.set(ProxyContext.getInstance(),new StandardMetaDataContexts(mock(),metaDataMap,mock(),mock(),new ConfigurationProperties(new Properties()),mock()))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,ShardingSphereMetaData> metaDataMap = mockMetaDataMap()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "contextManagerField.set(ProxyContext.getInstance(),contextManager)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertSchemaExists['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertFalse(ProxyContext.getInstance().schemaExists(\"schema_2\"))@@@8@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Field metaDataContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"metaDataContexts\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()),is(metaDataMap.keySet()))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "StandardMetaDataContexts metaDataContexts = new StandardMetaDataContexts(mock(),metaDataMap,mock(),mock(),new ConfigurationProperties(new Properties()),mock())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertGetAllSchemaNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Map<String,ShardingSphereMetaData> metaDataMap = createMetaDataMap()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ContextManager contextManager = mock(,RETURNS_DEEP_STUBS)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "metaDataContexts.setAccessible(true)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "contextManagerField.setAccessible(true)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "when(contextManager.getMetaDataContexts()).thenReturn(metaDataContexts)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertTrue(ProxyContext.getInstance().schemaExists(\"schema\"))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertSchemaExists['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->16 [style = bold, label=""];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
6->8 [style = dashed, label="0"];
7->11 [style = bold, label=""];
0->6 [style = bold, label=""];
3->16 [style = dashed, label="0"];
14->10 [style = bold, label=""];
11->14 [style = solid, label="contextManager"];
11->9 [style = bold, label=""];
8->7 [style = bold, label=""];
18->4 [style = solid, label="metaDataMap"];
6->1 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
18->6 [style = bold, label=""];
10->12 [style = bold, label=""];
9->13 [style = solid, label="metaDataContexts"];
15->0 [style = bold, label=""];
0->8 [style = bold, label=""];
0->18 [style = dashed, label="0"];
1->7 [style = dashed, label="0"];
0->4 [style = solid, label="metaDataMap"];
13->14 [style = bold, label=""];
17->18 [style = bold, label=""];
0->9 [style = solid, label="metaDataMap"];
9->13 [style = bold, label=""];
}
