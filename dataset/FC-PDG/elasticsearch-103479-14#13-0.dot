digraph {
3 [style = filled, label = "assertThat(dQuery.getDisjuncts().size(),equalTo(2))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(assertDisjunctionSubQuery(query,,1).getTerm(),equalTo(new Term(KEYWORD_FIELD_NAME,\"test\")))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertThat(query,instanceOf())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testToQueryFieldsWildcard['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertThat(dQuery.getDisjuncts(),hasItems(new TermQuery(new Term(TEXT_FIELD_NAME,\"test\")),new TermQuery(new Term(KEYWORD_FIELD_NAME,\"test\"))))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Query query = queryStringQuery(\"test\").field(TEXT_FIELD_NAME).field(KEYWORD_FIELD_NAME).toQuery(createSearchExecutionContext())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testToQueryMultipleFieldsDisMaxQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Query query = queryStringQuery(\"test\").field(\"mapped_str*\").toQuery(createSearchExecutionContext())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "DisjunctionMaxQuery dQuery = (DisjunctionMaxQuery)query@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<Query> disjuncts = disMaxQuery.getDisjuncts()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(((TermQuery)disjuncts.get(0)).getTerm(),equalTo(new Term(TEXT_FIELD_NAME,\"test\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(((TermQuery)disjuncts.get(1)).getTerm(),equalTo(new Term(KEYWORD_FIELD_NAME,\"test\")))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testToQueryFieldsWildcard['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(assertDisjunctionSubQuery(query,,0).getTerm(),equalTo(new Term(TEXT_FIELD_NAME,\"test\")))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "DisjunctionMaxQuery disMaxQuery = (DisjunctionMaxQuery)query@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
4->14 [style = bold, label=""];
5->14 [style = dashed, label="0"];
2->4 [style = solid, label="query"];
2->5 [style = solid, label="query"];
0->12 [style = dashed, label="0"];
10->14 [style = solid, label="query"];
2->4 [style = bold, label=""];
3->0 [style = bold, label=""];
2->10 [style = dashed, label="0"];
6->2 [style = bold, label=""];
1->13 [style = dashed, label="0"];
12->13 [style = bold, label=""];
3->9 [style = dashed, label="0"];
11->10 [style = bold, label=""];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
10->4 [style = bold, label=""];
0->8 [style = dashed, label="0"];
14->9 [style = bold, label=""];
9->12 [style = bold, label=""];
10->4 [style = solid, label="query"];
4->5 [style = bold, label=""];
}
