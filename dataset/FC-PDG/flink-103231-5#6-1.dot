digraph {
10 [style = filled, label = "StateDescriptor<?,?> descrIntercepted = (StateDescriptor<?,?>)descriptorCapture.get()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "config.registerKryoType()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "StreamingRuntimeContext context = createRuntimeContext(descriptorCapture,config)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testValueStateInstantiation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final ExecutionConfig config = new ExecutionConfig()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StateDescriptor<?,?> descrIntercepted = (StateDescriptor<?,?>)descriptorCapture.get()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StreamingRuntimeContext context = new StreamingRuntimeContext(createDescriptorCapturingMockOp(descriptorCapture,config),createMockEnvironment(),Collections.emptyMap())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "@SuppressWarnings(\"unchecked\") ReduceFunction<TaskInfo> reducer = (ReduceFunction<TaskInfo>)mock()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(((KryoSerializer<?>)serializer).getKryo().getRegistration().getId() > 0)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "context.getReducingState(descr)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ValueStateDescriptor<TaskInfo> descr = new ValueStateDescriptor<>(\"name\",)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testValueStateInstantiation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final AtomicReference<Object> descriptorCapture = new AtomicReference<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ReducingStateDescriptor<TaskInfo> descr = new ReducingStateDescriptor<>(\"name\",reducer,)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(serializer instanceof KryoSerializer)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TypeSerializer<?> serializer = descrIntercepted.getSerializer()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testReducingStateInstantiation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "context.getState(descr)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->16 [style = bold, label=""];
13->14 [style = solid, label="descr"];
16->13 [style = bold, label=""];
11->4 [style = bold, label=""];
8->3 [style = bold, label=""];
14->10 [style = bold, label=""];
3->6 [style = bold, label=""];
1->0 [style = bold, label=""];
9->10 [style = bold, label=""];
3->11 [style = solid, label="config"];
15->3 [style = bold, label=""];
5->17 [style = bold, label=""];
4->7 [style = bold, label=""];
1->11 [style = solid, label="descriptorCapture"];
1->11 [style = bold, label=""];
16->13 [style = solid, label="reducer"];
7->9 [style = bold, label=""];
6->1 [style = bold, label=""];
0->4 [style = bold, label=""];
2->5 [style = solid, label="serializer"];
3->0 [style = solid, label="config"];
7->13 [style = dashed, label="0"];
1->0 [style = solid, label="descriptorCapture"];
4->7 [style = solid, label="descr"];
10->2 [style = bold, label=""];
12->3 [style = bold, label=""];
13->14 [style = bold, label=""];
10->2 [style = solid, label="serializer"];
2->5 [style = bold, label=""];
}
