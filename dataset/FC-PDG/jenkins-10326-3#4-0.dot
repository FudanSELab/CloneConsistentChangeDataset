digraph {
16 [style = filled, label = "assertEquals(2,list.size())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "fishDiscovery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DescriptorExtensionList<Fish,Descriptor<Fish>> list = j.jenkins.getDescriptorList()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "LIST = new DescriptorList<Fish>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(0,LIST.size())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertNotNull(list.get())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNotNull(LIST.findByName(.getName()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNotNull(LIST.findByName(.getName()))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNotNull(LIST.findByName(.getName()))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "DescriptorList<Fish> LIST = new DescriptorList<Fish>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertNotNull(LIST.findByName(.getName()))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,LIST.size())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "LIST = new DescriptorList<Fish>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "LIST.add(new Sishamo.DescriptorImpl())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertNotNull(LIST.findByName(.getName()))@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertNotNull(LIST.findByName(.getName()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(3,LIST.size())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(3,LIST.size())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNotNull(list.get())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "DescriptorExtensionList<Fish,Descriptor<Fish>> list = j.jenkins.getDescriptorList()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(3,list.size())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "fishDiscovery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "legacyDescriptorList['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertNotNull(list.get())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertNotNull(LIST.findByName(.getName()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(0,LIST.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "DescriptorList<Fish> LIST = new DescriptorList<Fish>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
13->10 [style = bold, label=""];
23->25 [style = bold, label=""];
4->14 [style = bold, label=""];
7->1 [style = bold, label=""];
11->6 [style = bold, label=""];
5->15 [style = bold, label=""];
10->3 [style = bold, label=""];
6->19 [style = bold, label=""];
9->7 [style = bold, label=""];
2->4 [style = bold, label=""];
12->21 [style = dashed, label="0"];
3->0 [style = bold, label=""];
19->16 [style = bold, label=""];
20->21 [style = bold, label=""];
12->2 [style = bold, label=""];
25->20 [style = bold, label=""];
18->6 [style = bold, label=""];
21->22 [style = bold, label=""];
1->24 [style = bold, label=""];
26->23 [style = bold, label=""];
1->12 [style = bold, label=""];
22->1 [style = bold, label=""];
14->13 [style = bold, label=""];
15->8 [style = bold, label=""];
16->9 [style = bold, label=""];
6->23 [style = dashed, label="0"];
17->16 [style = bold, label=""];
17->19 [style = dashed, label="0"];
0->5 [style = bold, label=""];
}
