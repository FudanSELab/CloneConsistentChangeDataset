digraph {
15 [style = filled, label = "String name = \"/foo\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getPzxid())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "stat = newStat()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(0,stat.getAversion())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "assertEquals(0,stat.getEphemeralOwner())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(1,stat.getCversion())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "i < 10@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(0,stat.getNumChildren())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "zk.create(name,name.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(stat.getCtime(),stat.getMtime())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "i++@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "zk.create(childname,childname.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(zk.getSessionId(),stat.getEphemeralOwner())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertEquals(0,stat.getVersion())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "zk.getData(name,false,stat)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(name.length(),stat.getDataLength())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Assert.assertEquals(i + 1,stat.getCversion())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "int i = 0@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(name.length(),stat.getDataLength())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(0,stat.getVersion())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "zk.create(childname,childname.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(1,stat.getNumChildren())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(childname.length(),stat.getDataLength())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Assert.assertEquals(zk.getSessionId(),stat.getEphemeralOwner())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "assertEquals(0,stat.getAversion())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertEquals(0,stat.getCversion())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getMzxid())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "testChildren['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testChild['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "stat = newStat()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getMzxid())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "String childname = name + \"/bar\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Stat stat@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "testChild['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "Assert.assertEquals(stat.getCzxid() + i + 1,stat.getPzxid())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(childname.length(),stat.getDataLength())@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "String childname = name + \"/bar\" + i@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Assert.assertEquals(i + 1,stat.getNumChildren())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertEquals(stat.getCtime(),stat.getMtime())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(stat.getCzxid() + 1,stat.getPzxid())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Stat stat@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48->54 [style = solid, label="i"];
50->48 [style = solid, label="i"];
5->9 [style = bold, label=""];
36->29 [style = bold, label=""];
26->34 [style = bold, label=""];
23->28 [style = dashed, label="0"];
40->15 [style = bold, label=""];
4->39 [style = dashed, label="0"];
48->53 [style = solid, label="i"];
22->34 [style = dashed, label="0"];
20->37 [style = dashed, label="0"];
0->38 [style = dashed, label="0"];
26->22 [style = bold, label=""];
15->18 [style = solid, label="name"];
9->6 [style = bold, label=""];
29->45 [style = bold, label=""];
8->1 [style = bold, label=""];
16->19 [style = solid, label="stat"];
52->14 [style = bold, label=""];
19->30 [style = dashed, label="0"];
39->31 [style = bold, label=""];
12->44 [style = dashed, label="0"];
28->25 [style = bold, label=""];
34->32 [style = bold, label=""];
16->33 [style = dashed, label="0"];
27->5 [style = bold, label=""];
17->36 [style = dashed, label="0"];
8->53 [style = bold, label=""];
22->13 [style = bold, label=""];
49->48 [style = dotted, label="true"];
24->10 [style = bold, label=""];
23->25 [style = bold, label=""];
48->49 [style = bold, label=""];
49->54 [style = dotted, label="true"];
27->26 [style = solid, label="childname"];
49->53 [style = dotted, label="true"];
10->21 [style = bold, label=""];
50->54 [style = solid, label="i"];
16->19 [style = bold, label=""];
52->14 [style = solid, label="childname"];
50->49 [style = bold, label=""];
13->32 [style = dashed, label="0"];
18->50 [style = bold, label=""];
49->51 [style = dotted, label="true"];
16->51 [style = dashed, label="0"];
3->23 [style = bold, label=""];
20->8 [style = bold, label=""];
17->2 [style = bold, label=""];
38->37 [style = bold, label=""];
15->27 [style = solid, label="name"];
1->46 [style = dashed, label="0"];
25->26 [style = bold, label=""];
33->30 [style = bold, label=""];
0->20 [style = bold, label=""];
41->46 [style = bold, label=""];
49->14 [style = dotted, label="true"];
46->43 [style = bold, label=""];
50->49 [style = solid, label="i"];
49->8 [style = dotted, label="true"];
4->24 [style = bold, label=""];
37->41 [style = bold, label=""];
1->3 [style = bold, label=""];
44->33 [style = bold, label=""];
49->19 [style = dotted, label="true"];
8->41 [style = dashed, label="0"];
49->23 [style = dotted, label="true"];
15->52 [style = solid, label="name"];
19->0 [style = bold, label=""];
48->49 [style = solid, label="i"];
31->42 [style = bold, label=""];
49->52 [style = dotted, label="true"];
26->54 [style = bold, label=""];
7->45 [style = dashed, label="0"];
2->29 [style = dashed, label="0"];
25->26 [style = solid, label="stat"];
49->26 [style = dotted, label="true"];
32->39 [style = bold, label=""];
21->35 [style = dashed, label="0"];
50->51 [style = solid, label="i"];
51->8 [style = bold, label=""];
27->5 [style = solid, label="childname"];
49->16 [style = dotted, label="true"];
30->38 [style = bold, label=""];
50->52 [style = solid, label="i"];
47->15 [style = bold, label=""];
15->14 [style = solid, label="name"];
53->3 [style = bold, label=""];
49->12 [style = dotted, label="true"];
0->53 [style = dashed, label="0"];
54->48 [style = bold, label=""];
12->16 [style = bold, label=""];
10->42 [style = dashed, label="0"];
14->44 [style = bold, label=""];
15->18 [style = bold, label=""];
49->25 [style = dotted, label="true"];
11->15 [style = bold, label=""];
48->52 [style = solid, label="i"];
43->28 [style = bold, label=""];
42->35 [style = bold, label=""];
6->14 [style = bold, label=""];
23->54 [style = dashed, label="0"];
15->19 [style = solid, label="name"];
49->52 [style = bold, label=""];
18->27 [style = bold, label=""];
3->43 [style = dashed, label="0"];
14->12 [style = bold, label=""];
0->51 [style = bold, label=""];
24->31 [style = dashed, label="0"];
50->53 [style = solid, label="i"];
6->14 [style = solid, label="stat"];
2->7 [style = bold, label=""];
35->36 [style = bold, label=""];
49->0 [style = dotted, label="true"];
21->17 [style = bold, label=""];
49->3 [style = dotted, label="true"];
48->51 [style = solid, label="i"];
13->4 [style = bold, label=""];
}
