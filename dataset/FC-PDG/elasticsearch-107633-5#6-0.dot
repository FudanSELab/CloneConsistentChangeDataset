digraph {
2 [style = filled, label = "includeEmpty@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String(( indices@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "set.add(primary.shardsIt())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "boolean includeEmpty@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "set.add(shardRouting.shardsIt())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "boolean includeEmpty@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "indexRoutingTable == null@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "primary.active()@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Predicate<ShardRouting> predicate@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Predicate<ShardRouting> predicate@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "set.add(new PlainShardIterator(shardRouting.shardId(),Collections.singletonList(shardRouting.getTargetRelocatingShard())))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "allSatisfyingPredicateShardsGrouped['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "set.add(new PlainShardIterator(primary.shardId(),Collections.emptyList()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "includeEmpty@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ArrayList<ShardIterator> set = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String(( indices@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "return new GroupShardsIterator<>(set)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return new GroupShardsIterator<>(set)@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "boolean includeEmpty@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "includeRelocationTargets && shardRouting.relocating()@@@13@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "set.add(new PlainShardIterator(shardRouting.shardId(),Collections.emptyList()))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "IndexRoutingTable indexRoutingTable = index(index)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ShardRouting primary = indexShardRoutingTable.primaryShard()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "activePrimaryShardsGrouped['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "boolean includeRelocationTargets@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "String(( indices@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "allSatisfyingPredicateShardsGrouped['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "predicate.test(shardRouting)@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "throw new IndexNotFoundException(index)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->7 [style = dotted, label="true"];
4->10 [style = bold, label=""];
24->28 [style = bold, label=""];
8->10 [style = bold, label=""];
2->5 [style = bold, label=""];
13->4 [style = solid, label="indexRoutingTable"];
20->13 [style = bold, label=""];
12->23 [style = dashed, label="0"];
14->28 [style = solid, label="set"];
0->13 [style = bold, label=""];
4->25 [style = bold, label=""];
25->22 [style = bold, label=""];
19->24 [style = solid, label="includeEmpty"];
12->0 [style = solid, label="includeRelocationTargets"];
0->6 [style = bold, label=""];
11->14 [style = bold, label=""];
17->18 [style = dotted, label="true"];
3->21 [style = dashed, label="0"];
11->1 [style = dotted, label="true"];
18->2 [style = solid, label="includeEmpty"];
4->13 [style = bold, label=""];
20->28 [style = bold, label=""];
11->12 [style = dotted, label="true"];
8->20 [style = dashed, label="0"];
26->14 [style = bold, label=""];
10->3 [style = dotted, label="true"];
10->2 [style = dotted, label="false"];
10->3 [style = bold, label=""];
11->9 [style = dotted, label="true"];
26->23 [style = dotted, label="true"];
26->19 [style = dotted, label="true"];
4->25 [style = dotted, label="true"];
27->21 [style = dotted, label="true"];
2->10 [style = bold, label=""];
14->5 [style = solid, label="set"];
24->22 [style = bold, label=""];
0->6 [style = dotted, label="true"];
3->0 [style = bold, label=""];
21->28 [style = bold, label=""];
20->22 [style = bold, label=""];
2->13 [style = bold, label=""];
24->20 [style = bold, label=""];
17->16 [style = dotted, label="true"];
3->10 [style = bold, label=""];
6->5 [style = bold, label=""];
0->10 [style = bold, label=""];
3->5 [style = bold, label=""];
17->15 [style = dotted, label="true"];
8->5 [style = bold, label=""];
22->27 [style = bold, label=""];
21->13 [style = bold, label=""];
17->14 [style = bold, label=""];
21->22 [style = bold, label=""];
6->10 [style = bold, label=""];
6->13 [style = bold, label=""];
24->20 [style = dotted, label="true"];
27->24 [style = dotted, label="false"];
3->13 [style = bold, label=""];
10->0 [style = dotted, label="true"];
12->18 [style = dashed, label="0"];
10->2 [style = bold, label=""];
27->24 [style = bold, label=""];
14->13 [style = bold, label=""];
7->2 [style = solid, label="includeEmpty"];
27->21 [style = bold, label=""];
4->5 [style = bold, label=""];
4->22 [style = bold, label=""];
2->8 [style = dotted, label="true"];
8->13 [style = bold, label=""];
2->8 [style = bold, label=""];
0->5 [style = bold, label=""];
24->13 [style = bold, label=""];
13->4 [style = bold, label=""];
}
