digraph {
39 [style = filled, label = "Assert.assertTrue(listener._changeKeys.size() >= expectChangeNodes,\"Should receive at least \" + expectChangeNodes + \" change callbacks\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "int expectCreateNodes = 1 + firstLevelNr + firstLevelNr * secondLevelNr@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i < 10@@@26@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(listener._deleteKeys.size() == expectDeleteNodes,\"Should receive \" + expectDeleteNodes + \" delete callbacks\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "listener._deleteKeys.size() == expectDeleteNodes@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ZkHelixPropertyStore<ZNRecord> store = new ZkHelixPropertyStore<ZNRecord>(new ZkBaseDataAccessor<ZNRecord>(_gZkClient),subRoot,subscribedPaths)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String subRoot = _root + \"/\" + \"zkCallback\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(listener._deleteKeys.size() == expectDeleteNodes,\"Should receive \" + expectDeleteNodes + \" delete callbacks\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "listener.reset()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "System.out.println(\"createKey#:\" + listener._createKeys.size() + \", changeKey#:\" + listener._changeKeys.size() + \", deleteKey#:\" + listener._deleteKeys.size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "System.out.println(\"createKey#:\" + listener._createKeys.size() + \", changeKey#:\" + listener._changeKeys.size() + \", deleteKey#:\" + listener._deleteKeys.size())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "_gZkClient.deleteRecursive(subRoot)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "_gZkClient.deleteRecursively(subRoot)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "int expectDeleteNodes = 1 + firstLevelNr + firstLevelNr * secondLevelNr@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TestListener listener = new TestListener()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Thread.sleep(1000)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "store.remove(\"/\",0)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "store.stop()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testLocalTriggeredCallback['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "i++@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int expectDeleteNodes = 1 + firstLevelNr + firstLevelNr * secondLevelNr@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int expectChangeNodes = firstLevelNr * secondLevelNr@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertTrue(listener._createKeys.size() == expectCreateNodes,\"Should receive \" + expectCreateNodes + \" create callbacks\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Thread.sleep(500)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<String> subscribedPaths = Arrays.asList(subRoot)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testZkTriggeredCallback['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testZkTriggeredCallback['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "int i = 0@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Thread.sleep(500)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "subscribedPaths.add(subRoot)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "System.out.println(\"createKey#:\" + listener._createKeys.size() + \", changeKey#:\" + listener._changeKeys.size() + \", deleteKey#:\" + listener._deleteKeys.size())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "System.out.println(\"START testZkTriggeredCallback() at \" + new Date(System.currentTimeMillis()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "setNodes(store,'b',true)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "store.subscribe(\"/\",listener)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "System.out.println(\"createKey#:\" + listener._createKeys.size() + \", changeKey#:\" + listener._changeKeys.size() + \", deleteKey#:\" + listener._deleteKeys.size())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "setNodes(store,'a',true)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ZkHelixPropertyStore<ZNRecord> store = new ZkHelixPropertyStore<ZNRecord>(new ZkBaseDataAccessor<ZNRecord>(_gZkClient),subRoot,subscribedPaths)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<String> subscribedPaths = new ArrayList<String>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "listener.reset()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "String subRoot = _root + \"/\" + \"localCallback\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "store.stop()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Thread.sleep(500)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "System.out.println(\"createKey#:\" + listener._createKeys.size() + \", changeKey#:\" + listener._changeKeys.size() + \", deleteKey#:\" + listener._deleteKeys.size())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int expectCreateNodes = 1 + firstLevelNr + firstLevelNr * secondLevelNr@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "System.out.println(\"END testLocalTriggeredCallback() at \" + new Date(System.currentTimeMillis()))@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "listener.reset()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int i = 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "System.out.println(\"START testLocalTriggeredCallback() at \" + new Date(System.currentTimeMillis()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Thread.sleep(500)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int expectChangeNodes = firstLevelNr * secondLevelNr@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40->49 [style = bold, label=""];
46->25 [style = bold, label=""];
7->3 [style = solid, label="i"];
36->17 [style = solid, label="i"];
15->20 [style = solid, label="subRoot"];
47->35 [style = solid, label="subRoot"];
24->43 [style = bold, label=""];
47->19 [style = solid, label="subRoot"];
1->30 [style = bold, label=""];
30->33 [style = dashed, label="0"];
7->4 [style = solid, label="i"];
12->25 [style = solid, label="expectCreateNodes"];
37->3 [style = bold, label=""];
15->9 [style = solid, label="subRoot"];
24->43 [style = dashed, label="0"];
40->10 [style = solid, label="expectDeleteNodes"];
4->42 [style = dotted, label="true"];
3->39 [style = bold, label=""];
14->1 [style = solid, label="listener"];
47->34 [style = bold, label=""];
4->17 [style = dotted, label="true"];
8->11 [style = bold, label=""];
27->25 [style = bold, label=""];
49->36 [style = bold, label=""];
4->3 [style = bold, label=""];
2->20 [style = bold, label=""];
29->0 [style = solid, label="expectChangeNodes"];
15->21 [style = solid, label="subRoot"];
37->39 [style = solid, label="expectChangeNodes"];
41->37 [style = bold, label=""];
36->4 [style = bold, label=""];
39->45 [style = bold, label=""];
25->2 [style = bold, label=""];
9->34 [style = dashed, label="0"];
4->0 [style = bold, label=""];
26->0 [style = bold, label=""];
20->41 [style = bold, label=""];
27->46 [style = bold, label=""];
15->9 [style = bold, label=""];
10->0 [style = bold, label=""];
22->8 [style = solid, label="expectDeleteNodes"];
3->17 [style = dotted, label="true"];
34->35 [style = bold, label=""];
36->4 [style = solid, label="i"];
5->22 [style = bold, label=""];
15->31 [style = solid, label="subRoot"];
21->23 [style = bold, label=""];
19->33 [style = solid, label="store"];
17->10 [style = bold, label=""];
4->10 [style = bold, label=""];
29->17 [style = solid, label="expectChangeNodes"];
15->30 [style = solid, label="subRoot"];
30->33 [style = bold, label=""];
4->10 [style = dotted, label="true"];
3->10 [style = dotted, label="true"];
3->26 [style = bold, label=""];
38->27 [style = bold, label=""];
4->3 [style = solid, label="i"];
11->24 [style = bold, label=""];
9->13 [style = solid, label="subscribedPaths"];
21->31 [style = dashed, label="0"];
6->27 [style = bold, label=""];
13->19 [style = bold, label=""];
30->12 [style = bold, label=""];
19->14 [style = bold, label=""];
5->24 [style = bold, label=""];
3->17 [style = bold, label=""];
18->8 [style = bold, label=""];
17->10 [style = dashed, label="0"];
19->14 [style = solid, label="listener"];
23->18 [style = bold, label=""];
17->4 [style = bold, label=""];
45->40 [style = bold, label=""];
0->5 [style = bold, label=""];
17->26 [style = bold, label=""];
31->23 [style = bold, label=""];
28->15 [style = bold, label=""];
17->4 [style = solid, label="i"];
20->29 [style = bold, label=""];
42->17 [style = bold, label=""];
15->47 [style = dashed, label="0"];
35->19 [style = bold, label=""];
22->21 [style = bold, label=""];
22->31 [style = bold, label=""];
27->25 [style = solid, label="expectCreateNodes"];
3->4 [style = dotted, label="true"];
19->20 [style = solid, label="store"];
12->6 [style = bold, label=""];
7->3 [style = bold, label=""];
14->1 [style = bold, label=""];
28->48 [style = dashed, label="0"];
16->28 [style = bold, label=""];
10->42 [style = bold, label=""];
48->47 [style = bold, label=""];
44->48 [style = bold, label=""];
34->19 [style = solid, label="subscribedPaths"];
10->4 [style = bold, label=""];
29->7 [style = bold, label=""];
33->38 [style = bold, label=""];
15->13 [style = solid, label="subRoot"];
40->5 [style = solid, label="expectDeleteNodes"];
32->28 [style = bold, label=""];
9->13 [style = bold, label=""];
}
