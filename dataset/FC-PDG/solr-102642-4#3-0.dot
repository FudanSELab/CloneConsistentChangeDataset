digraph {
25 [style = filled, label = "testFreeDiskConstraints['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "Optional<String> azOptional = attributeValues.getSystemProperty(rp.getNode(),AffinityPlacementFactory.AVAILABILITY_ZONE_SYSPROP)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Builders.CollectionBuilder collectionBuilder = Builders.newCollectionBuilder(collectionName)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "nodeBuilder.setFreeDiskGB(100L)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "smallNode = nodeBuilder.build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "AttributeFetcher attributeFetcher = clusterBuilder.buildAttributeFetcher()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "PlacementPlan pp = plugin.computePlacement(cluster,placementRequest,attributeFetcher,placementPlanFactory)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(\"should not put any replicas on \" + smallNode,rp.getNode().equals(smallNode))@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i < NUM_NODES@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "AttributeValues attributeValues = attributeFetcher.fetchAttributes()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "!azOptional.isPresent()@@@33@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "PlacementRequestImpl placementRequest = new PlacementRequestImpl(solrCollection,StreamSupport.stream(solrCollection.shards().spliterator(),false).map(null).collect(Collectors.toSet()),cluster.getLiveNodes(),2,2,2)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "SolrCollection solrCollection = cluster.getCollection(collectionName)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(12,pp.getReplicaPlacements().size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "PlacementPlanFactory placementPlanFactory = new PlacementPlanFactoryImpl()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testFreeDiskConstraints['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "String collectionName = \"azCollection\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Builders.ClusterBuilder clusterBuilder = Builders.newClusterBuilder().initializeLiveNodes(NUM_NODES)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "PlacementRequestImpl placementRequest = new PlacementRequestImpl(solrCollection,StreamSupport.stream(solrCollection.shards().spliterator(),false).map(null).collect(Collectors.toSet()),cluster.getLiveNodes(),1,0,1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Node smallNode = null@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "replicas.computeIfAbsent(rp.getReplicaType(),null).computeIfAbsent(rp.getShardName(),null).computeIfAbsent(az,null).incrementAndGet()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.AVAILABILITY_ZONE_SYSPROP,\"az2\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "i < NUM_NODES / 2@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "nodeBuilder.setFreeDiskGB(1L)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "nodeBuilder.setCoreCount(0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "nodeBuilder.setFreeDiskGB(1.0)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "collectionBuilder.initializeShardsReplicas(2,0,0,0,clusterBuilder.getLiveNodeBuilders())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(4,pp.getReplicaPlacements().size())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.AVAILABILITY_ZONE_SYSPROP,\"az1\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "i == 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int NUM_NODES = 6@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "testAvailabilityZones['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "fail(\"missing AZ sysprop for node \" + rp.getNode())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "nodeBuilder.setFreeDiskGB(100.0)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "replicas.forEach(null)@@@39@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "String az = azOptional.get()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Builders.NodeBuilder nodeBuilder = clusterBuilder.getLiveNodeBuilders().get(i)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Cluster cluster = clusterBuilder.build()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Map<Replica.ReplicaType,Map<String,Map<String,AtomicInteger>>> replicas = new HashMap<>()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String collectionName = \"freeDiskCollection\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int NUM_NODES = 3@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "clusterBuilder.addCollection(collectionBuilder)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "nodeBuilder.setFreeDiskGB(100L)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->14 [style = solid, label="attributeFetcher"];
42->23 [style = bold, label=""];
21->12 [style = dotted, label="true"];
43->18 [style = solid, label="collectionName"];
32->23 [style = bold, label=""];
11->19 [style = solid, label="NUM_NODES"];
29->30 [style = bold, label=""];
8->33 [style = dashed, label="0"];
20->0 [style = bold, label=""];
16->8 [style = solid, label="solrCollection"];
12->6 [style = dotted, label="false"];
30->36 [style = bold, label=""];
39->42 [style = dotted, label="true"];
22->5 [style = solid, label="i"];
33->14 [style = solid, label="placementRequest"];
21->18 [style = bold, label=""];
23->12 [style = solid, label="i"];
12->20 [style = dotted, label="true"];
0->42 [style = dashed, label="0"];
19->9 [style = bold, label=""];
21->23 [style = dotted, label="true"];
21->7 [style = dotted, label="true"];
21->39 [style = dotted, label="true"];
23->21 [style = solid, label="i"];
25->10 [style = bold, label=""];
22->21 [style = solid, label="i"];
13->14 [style = bold, label=""];
4->16 [style = bold, label=""];
21->5 [style = dotted, label="true"];
37->21 [style = solid, label="NUM_NODES"];
10->11 [style = bold, label=""];
20->26 [style = dashed, label="0"];
10->16 [style = solid, label="collectionName"];
28->30 [style = bold, label=""];
36->44 [style = bold, label=""];
6->32 [style = dashed, label="0"];
34->31 [style = bold, label=""];
3->10 [style = bold, label=""];
26->0 [style = bold, label=""];
24->14 [style = solid, label="placementPlanFactory"];
0->23 [style = bold, label=""];
18->1 [style = bold, label=""];
16->33 [style = bold, label=""];
6->27 [style = dashed, label="0"];
21->40 [style = dotted, label="true"];
12->0 [style = dotted, label="true"];
5->7 [style = bold, label=""];
10->43 [style = dashed, label="0"];
36->35 [style = bold, label=""];
38->35 [style = bold, label=""];
39->42 [style = bold, label=""];
19->22 [style = bold, label=""];
41->43 [style = bold, label=""];
10->18 [style = solid, label="collectionName"];
24->13 [style = bold, label=""];
8->24 [style = bold, label=""];
9->22 [style = bold, label=""];
2->17 [style = bold, label=""];
35->29 [style = bold, label=""];
16->8 [style = bold, label=""];
6->23 [style = bold, label=""];
12->20 [style = bold, label=""];
9->17 [style = solid, label="smallNode"];
31->38 [style = bold, label=""];
18->15 [style = solid, label="collectionBuilder"];
11->21 [style = solid, label="NUM_NODES"];
22->23 [style = solid, label="i"];
12->26 [style = dotted, label="true"];
21->5 [style = bold, label=""];
40->39 [style = bold, label=""];
29->28 [style = dotted, label="true"];
33->24 [style = bold, label=""];
37->39 [style = solid, label="NUM_NODES"];
39->32 [style = bold, label=""];
43->16 [style = solid, label="collectionName"];
14->2 [style = bold, label=""];
22->39 [style = solid, label="i"];
23->39 [style = solid, label="i"];
12->27 [style = bold, label=""];
7->40 [style = bold, label=""];
12->27 [style = dotted, label="false"];
0->17 [style = solid, label="smallNode"];
7->12 [style = bold, label=""];
22->12 [style = solid, label="i"];
1->15 [style = bold, label=""];
16->33 [style = solid, label="solrCollection"];
22->21 [style = bold, label=""];
14->34 [style = bold, label=""];
12->26 [style = bold, label=""];
43->37 [style = bold, label=""];
39->32 [style = dotted, label="false"];
11->19 [style = bold, label=""];
12->6 [style = bold, label=""];
37->19 [style = solid, label="NUM_NODES"];
29->28 [style = bold, label=""];
23->21 [style = bold, label=""];
23->5 [style = solid, label="i"];
15->4 [style = bold, label=""];
2->34 [style = dashed, label="0"];
11->37 [style = dashed, label="0"];
4->14 [style = solid, label="cluster"];
27->23 [style = bold, label=""];
37->19 [style = bold, label=""];
8->14 [style = solid, label="placementRequest"];
}
