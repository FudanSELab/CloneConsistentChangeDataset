digraph {
5 [style = filled, label = "fail(\"Should throw ProcessorStateException if store flush throws exception\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "final ProcessorStateManager stateManager = getStateManager(Task.TaskType.ACTIVE)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "shouldThrowProcessorStateExceptionOnFlushIfStoreThrowsAnException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final ProcessorStateException thrown = assertThrows(,null)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "fail(\"Should throw ProcessorStateException if store close throws exception\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "stateManager.register(stateStore,stateStore.stateRestoreCallback)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final ProcessorStateManager stateManager = new ProcessorStateManager(taskId,Collections.singleton(changelogTopicPartition),false,stateDirectory,singletonMap(storeName,changelogTopic),changelogReader,false,logContext)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final MockKeyValueStore stateStore = new MockKeyValueStore(storeName,true){@Override public void close(){throw new RuntimeException(\"KABOOM!\")}}@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "stateManager.registerStore(stateStore,stateStore.stateRestoreCallback)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "shouldThrowProcessorStateExceptionOnCloseIfStoreThrowsAnException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final RuntimeException exception = new RuntimeException(\"KABOOM!\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertEquals(exception,thrown.getCause())@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "shouldThrowProcessorStateExceptionOnFlushIfStoreThrowsAnException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "stateManager.flush()@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "stateManager.close(true)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final MockKeyValueStore stateStore = new MockKeyValueStore(persistentStoreName,true){@Override public void flush(){throw exception}}@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
8->10 [style = bold, label=""];
5->14 [style = dashed, label="0"];
9->11 [style = bold, label=""];
2->1 [style = bold, label=""];
10->7 [style = solid, label="exception"];
11->12 [style = bold, label=""];
1->0 [style = bold, label=""];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
10->12 [style = solid, label="exception"];
7->9 [style = bold, label=""];
7->9 [style = solid, label="stateStore"];
3->9 [style = dashed, label="0"];
3->13 [style = bold, label=""];
0->3 [style = solid, label="stateStore"];
6->7 [style = bold, label=""];
4->13 [style = dashed, label="0"];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
15->1 [style = bold, label=""];
}
