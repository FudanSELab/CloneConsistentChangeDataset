digraph {
8 [style = filled, label = "record2.put(\"_hoodie_is_deleted\",false)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testActiveRecords['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertEquals(payload2.combineAndGetUpdateValue(record1,schema,props).get(),record2)@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(payload2.combineAndGetUpdateValue(record1,schema).get(),record2)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "record1.put(\"id\",\"1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "OverwriteWithLatestAvroPayload payload1 = new OverwriteWithLatestAvroPayload(record1,1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "DefaultHoodieRecordPayload payload2 = new DefaultHoodieRecordPayload(record2,2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testActiveRecords['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "record2.put(\"id\",\"2\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testActiveRecords['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(payload1.preCombine(payload2,props),payload2)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(payload2.preCombine(payload1,props),payload2)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "record1.put(\"partition\",\"partition0\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(record2,payload2.getInsertValue(schema,props).get())@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "record2.put(\"partition\",\"partition1\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "OverwriteWithLatestAvroPayload payload2 = new OverwriteWithLatestAvroPayload(record2,2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(record1,payload1.getInsertValue(schema,props).get())@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "DefaultHoodieRecordPayload payload1 = new DefaultHoodieRecordPayload(record1,1)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "record1.put(\"_hoodie_is_deleted\",false)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(record2,payload2.getInsertValue(schema).get())@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "GenericRecord record1 = new GenericData.Record(schema)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(record1,payload1.getInsertValue(schema).get())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(payload2.preCombine(payload1),payload2)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "record2.put(\"ts\",1L)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "GenericRecord record2 = new GenericData.Record(schema)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(payload1.combineAndGetUpdateValue(record2,schema,props).get(),record2)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(payload1.combineAndGetUpdateValue(record2,schema).get(),record1)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "record1.put(\"ts\",0L)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(payload1.preCombine(payload2),payload2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25->23 [style = bold, label=""];
7->21 [style = solid, label="record2"];
7->10 [style = solid, label="record2"];
4->23 [style = dashed, label="0"];
14->22 [style = solid, label="record1"];
1->9 [style = bold, label=""];
14->16 [style = bold, label=""];
8->12 [style = bold, label=""];
27->28 [style = bold, label=""];
7->11 [style = solid, label="record2"];
7->28 [style = solid, label="record2"];
14->20 [style = solid, label="record1"];
12->15 [style = bold, label=""];
12->4 [style = solid, label="payload1"];
4->17 [style = bold, label=""];
10->11 [style = bold, label=""];
0->8 [style = bold, label=""];
26->25 [style = solid, label="payload2"];
3->25 [style = dashed, label="0"];
5->10 [style = bold, label=""];
7->26 [style = solid, label="record2"];
4->20 [style = bold, label=""];
17->20 [style = dashed, label="0"];
21->10 [style = bold, label=""];
11->28 [style = dashed, label="0"];
15->4 [style = solid, label="payload2"];
9->6 [style = bold, label=""];
22->23 [style = solid, label="payload1"];
7->13 [style = bold, label=""];
20->21 [style = bold, label=""];
26->25 [style = bold, label=""];
14->12 [style = solid, label="record1"];
16->1 [style = bold, label=""];
22->26 [style = bold, label=""];
8->22 [style = bold, label=""];
10->27 [style = dashed, label="0"];
5->27 [style = bold, label=""];
5->21 [style = dashed, label="0"];
15->3 [style = bold, label=""];
7->5 [style = solid, label="record2"];
2->0 [style = bold, label=""];
7->15 [style = solid, label="record2"];
19->14 [style = bold, label=""];
14->17 [style = solid, label="record1"];
14->27 [style = solid, label="record1"];
6->7 [style = bold, label=""];
24->14 [style = bold, label=""];
18->14 [style = bold, label=""];
13->2 [style = bold, label=""];
23->17 [style = bold, label=""];
15->26 [style = dashed, label="0"];
12->22 [style = dashed, label="0"];
26->23 [style = solid, label="payload2"];
3->4 [style = bold, label=""];
17->5 [style = bold, label=""];
15->3 [style = solid, label="payload2"];
}
