digraph {
15 [style = filled, label = "DataStream<Long> source2 = env.generateSequence(0,0)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "ResourceSpec preferredResource1 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(200).build()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "ResourceSpec minResource2 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(200).build()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "sinkMethod.setAccessible(true)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "ResourceSpec preferredResource5 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(600).build()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "ResourceSpec preferredResource6 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(700).build()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "Operator operator = new MockOperator()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "opMethod.setAccessible(true)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "opMethod.invoke(connected,minResource5,preferredResource5)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "ResourceSpec minResource5 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(500).build()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "opMethod.invoke(map2,minResource4,preferredResource4)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ResourceSpec preferredResource7 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(800).build()@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "ResourceSpec preferredResource2 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(300).build()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "ResourceSpec preferredResource5 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(600).build()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "DataStream<Long> source1 = env.generateSequence(0,0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DataStreamSink<Long> sink = windowed.print()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(minResource7,env.getStreamGraph().getStreamNode(sink.getTransformation().getId()).getMinResources())@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "DataStream<Long> windowed = connected.windowAll(GlobalWindows.create()).trigger(PurgingTrigger.of(CountTrigger.of(10))).fold(0L,new FoldFunction<Long,Long>(){@Override public Long fold(Long accumulator,Long value){return null}})@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ResourceSpec preferredResource6 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(700).build()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "DataStream<Long> connected = map1.connect(map2).flatMap(new CoFlatMapFunction<Long,Long,Long>(){@Override public void flatMap1(Long value,Collector<Long> out){}@Override public void flatMap2(Long value,Collector<Long> out){}})@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "opMethod.invoke(windowed,minResource6,preferredResource6)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "ResourceSpec preferredResource2 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(300).build()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "assertEquals(preferredResource4,env.getStreamGraph().getStreamNode(map2.getId()).getPreferredResources())@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(preferredResources,operator.getPreferredResources())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "opMethod.invoke(operator,minResources,preferredResources)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(minResource1,env.getStreamGraph().getStreamNode(source1.getId()).getMinResources())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "ResourceSpec preferredResource7 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(800).build()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "Method opMethod = .getDeclaredMethod(\"setResources\",,)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ResourceSpec preferredResource3 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(400).build()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "ResourceSpec minResource6 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(600).build()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(preferredResource7,env.getStreamGraph().getStreamNode(sink.getTransformation().getId()).getPreferredResources())@@@71@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ResourceSpec minResource6 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(600).build()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(minResource3,env.getStreamGraph().getStreamNode(source2.getId()).getMinResources())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "ResourceSpec minResource1 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(100).build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "ResourceSpec preferredResource3 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(400).build()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "DataStream<Long> map1 = source1.map(new MapFunction<Long,Long>(){@Override public Long map(Long value){return null}})@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ResourceSpec minResource4 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(400).build()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Method opMethod = .getDeclaredMethod(\"setResources\",,)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(minResource2,env.getStreamGraph().getStreamNode(map1.getId()).getMinResources())@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "opMethod.invoke(source2,minResource3,preferredResource3)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "DataStream<Long> map2 = source2.map(new MapFunction<Long,Long>(){@Override public Long map(Long value){return null}})@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "ResourceSpec minResource3 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(300).build()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "ResourceSpec minResource1 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(100).build()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "sinkMethod.invoke(sink,minResource7,preferredResource7)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(minResource6,env.getStreamGraph().getStreamNode(windowed.getId()).getMinResources())@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "ResourceSpec preferredResource1 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(200).build()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "assertEquals(minResources,operator.getMinResources())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ResourceSpec minResource5 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(500).build()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "opMethod.invoke(source1,minResource1,preferredResource1)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testResources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "ResourceSpec minResource7 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(700).build()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(preferredResource6,env.getStreamGraph().getStreamNode(windowed.getId()).getPreferredResources())@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(preferredResource2,env.getStreamGraph().getStreamNode(map1.getId()).getPreferredResources())@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Method sinkMethod = .getDeclaredMethod(\"setResources\",,)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ResourceSpec minResource2 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(200).build()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "ResourceSpec preferredResources = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(200).build()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(minResource5,env.getStreamGraph().getStreamNode(connected.getId()).getMinResources())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "ResourceSpec minResources = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(100).build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "testConfigurationOfResource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(preferredResource1,env.getStreamGraph().getStreamNode(source1.getId()).getPreferredResources())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ResourceSpec preferredResource4 = ResourceSpec.newBuilder().setCpuCores(2.0).setHeapMemoryInMB(500).build()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "opMethod.invoke(map1,minResource2,preferredResource2)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(preferredResource3,env.getStreamGraph().getStreamNode(source2.getId()).getPreferredResources())@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ResourceSpec minResource3 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(300).build()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "testResources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "ResourceSpec minResource4 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(400).build()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "opMethod.setAccessible(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(minResource4,env.getStreamGraph().getStreamNode(map2.getId()).getMinResources())@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ResourceSpec minResource7 = ResourceSpec.newBuilder().setCpuCores(1.0).setHeapMemoryInMB(700).build()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertEquals(preferredResource5,env.getStreamGraph().getStreamNode(connected.getId()).getPreferredResources())@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "ResourceSpec preferredResource4 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(500).build()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44->25 [style = solid, label="preferredResource1"];
32->18 [style = solid, label="preferredResource6"];
27->38 [style = bold, label=""];
68->71 [style = solid, label="preferredResources"];
70->64 [style = bold, label=""];
27->38 [style = solid, label="windowed"];
10->39 [style = solid, label="minResource2"];
12->44 [style = bold, label=""];
0->16 [style = solid, label="minResource3"];
3->16 [style = solid, label="preferredResource3"];
57->8 [style = solid, label="preferredResource2"];
15->16 [style = solid, label="source2"];
52->46 [style = solid, label="preferredResource4"];
49->51 [style = bold, label=""];
61->57 [style = bold, label=""];
31->30 [style = solid, label="minResource6"];
48->61 [style = bold, label=""];
53->54 [style = bold, label=""];
30->18 [style = bold, label=""];
3->4 [style = bold, label=""];
2->47 [style = solid, label="minResource7"];
12->58 [style = dashed, label="0"];
16->41 [style = bold, label=""];
57->35 [style = solid, label="preferredResource2"];
53->9 [style = solid, label="preferredResource5"];
1->9 [style = solid, label="preferredResource5"];
50->16 [style = solid, label="minResource3"];
12->11 [style = solid, label="minResource1"];
12->20 [style = solid, label="minResource1"];
51->17 [style = bold, label=""];
2->49 [style = dashed, label="0"];
62->49 [style = bold, label=""];
32->38 [style = solid, label="preferredResource6"];
2->24 [style = solid, label="minResource7"];
56->29 [style = solid, label="minResource5"];
41->22 [style = bold, label=""];
58->11 [style = solid, label="minResource1"];
21->35 [style = bold, label=""];
1->31 [style = bold, label=""];
4->22 [style = solid, label="minResource4"];
56->53 [style = bold, label=""];
2->28 [style = bold, label=""];
1->53 [style = dashed, label="0"];
62->18 [style = solid, label="preferredResource6"];
66->63 [style = bold, label=""];
0->3 [style = bold, label=""];
22->33 [style = bold, label=""];
10->61 [style = dashed, label="0"];
59->60 [style = bold, label=""];
19->12 [style = bold, label=""];
39->8 [style = bold, label=""];
54->62 [style = bold, label=""];
7->0 [style = bold, label=""];
64->69 [style = solid, label="minResources"];
41->22 [style = solid, label="map2"];
17->42 [style = bold, label=""];
20->25 [style = bold, label=""];
10->7 [style = bold, label=""];
13->11 [style = bold, label=""];
33->29 [style = bold, label=""];
59->16 [style = solid, label="preferredResource3"];
29->27 [style = bold, label=""];
7->57 [style = dashed, label="0"];
59->5 [style = solid, label="preferredResource3"];
54->30 [style = solid, label="minResource6"];
58->20 [style = solid, label="minResource1"];
7->35 [style = solid, label="preferredResource2"];
63->71 [style = solid, label="operator"];
61->35 [style = solid, label="minResource2"];
0->50 [style = dashed, label="0"];
32->62 [style = dashed, label="0"];
55->19 [style = bold, label=""];
54->38 [style = solid, label="minResource6"];
64->71 [style = solid, label="minResources"];
13->11 [style = solid, label="source1"];
46->43 [style = bold, label=""];
50->45 [style = solid, label="minResource3"];
60->40 [style = solid, label="minResource4"];
18->24 [style = bold, label=""];
23->43 [style = solid, label="minResource5"];
25->39 [style = bold, label=""];
35->15 [style = bold, label=""];
31->32 [style = bold, label=""];
28->6 [style = solid, label="preferredResource7"];
56->43 [style = solid, label="minResource5"];
11->21 [style = bold, label=""];
62->38 [style = solid, label="preferredResource6"];
67->70 [style = bold, label=""];
0->45 [style = solid, label="minResource3"];
44->48 [style = dashed, label="0"];
23->56 [style = dashed, label="0"];
68->65 [style = solid, label="preferredResources"];
43->9 [style = bold, label=""];
28->51 [style = dashed, label="0"];
48->11 [style = solid, label="preferredResource1"];
58->48 [style = bold, label=""];
49->24 [style = solid, label="minResource7"];
8->45 [style = bold, label=""];
63->67 [style = bold, label=""];
51->47 [style = solid, label="preferredResource7"];
14->47 [style = bold, label=""];
28->17 [style = bold, label=""];
4->40 [style = solid, label="minResource4"];
5->40 [style = bold, label=""];
60->52 [style = bold, label=""];
14->47 [style = solid, label="sink"];
36->34 [style = bold, label=""];
21->35 [style = solid, label="map1"];
69->65 [style = bold, label=""];
3->5 [style = solid, label="preferredResource3"];
10->35 [style = solid, label="minResource2"];
31->38 [style = solid, label="minResource6"];
60->22 [style = solid, label="minResource4"];
61->39 [style = solid, label="minResource2"];
57->50 [style = bold, label=""];
33->29 [style = solid, label="connected"];
26->46 [style = solid, label="preferredResource4"];
34->13 [style = bold, label=""];
3->59 [style = dashed, label="0"];
44->10 [style = bold, label=""];
31->54 [style = dashed, label="0"];
4->26 [style = bold, label=""];
52->56 [style = bold, label=""];
9->30 [style = bold, label=""];
53->29 [style = solid, label="preferredResource5"];
42->36 [style = bold, label=""];
1->29 [style = solid, label="preferredResource5"];
15->16 [style = bold, label=""];
32->2 [style = bold, label=""];
38->14 [style = bold, label=""];
71->69 [style = bold, label=""];
48->25 [style = solid, label="preferredResource1"];
51->6 [style = solid, label="preferredResource7"];
40->46 [style = bold, label=""];
52->22 [style = solid, label="preferredResource4"];
49->47 [style = solid, label="minResource7"];
19->58 [style = bold, label=""];
4->60 [style = dashed, label="0"];
68->71 [style = bold, label=""];
26->23 [style = bold, label=""];
47->20 [style = bold, label=""];
64->68 [style = bold, label=""];
44->11 [style = solid, label="preferredResource1"];
28->47 [style = solid, label="preferredResource7"];
23->1 [style = bold, label=""];
26->22 [style = solid, label="preferredResource4"];
26->52 [style = dashed, label="0"];
45->5 [style = bold, label=""];
37->19 [style = bold, label=""];
7->8 [style = solid, label="preferredResource2"];
24->6 [style = bold, label=""];
23->29 [style = solid, label="minResource5"];
50->59 [style = bold, label=""];
}
