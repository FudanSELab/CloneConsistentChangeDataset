digraph {
12 [style = filled, label = "secondPassCollector = new TopGroupsCollector<>(new ValueSourceGroupSelector(vs,new HashMap<>()),v,groupSort,sortWithinGroup,maxDocPerGroup,needScores,needMaxScore,true)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "firstPhaseGroups.isEmpty()@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "create['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Collection<SearchGroup<MutableValue>> v = GroupConverter.toMutable(field,firstPhaseGroups)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "fieldType.getNumberType() != null@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ValueSource vs = fieldType.getValueSource(field,null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "includeGroupCount@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "fieldType.getNumberType() != null@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "allGroupsCollector = new TermAllGroupsCollector(field.getName())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ValueSource vs = fieldType.getValueSource(field,null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final List<Collector> collectors = new ArrayList<>(2)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "create['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "secondPassCollector = new TermSecondPassGroupingCollector(field.getName(),firstPhaseGroups,groupSort,sortWithinGroup,maxDocPerGroup,needScores,needMaxScore,true)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "firstPassGroupingCollector = new TermFirstPassGroupingCollector(field.getName(),groupSort,topNGroups)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "collectors.add(allGroupsCollector)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ValueSource vs = fieldType.getValueSource(field,null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return collectors@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "allGroupsCollector = new FunctionAllGroupsCollector(vs,new HashMap<Object,Object>())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "firstPassGroupingCollector = new FunctionFirstPassGroupingCollector(vs,new HashMap<Object,Object>(),groupSort,topNGroups)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "secondPassCollector = new TopGroupsCollector<>(new TermGroupSelector(field.getName()),firstPhaseGroups,groupSort,sortWithinGroup,maxDocPerGroup,needScores,needMaxScore,true)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "topNGroups > 0@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final List<Collector> collectors = new ArrayList<>(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final FieldType fieldType = field.getType()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "secondPassCollector = new FunctionSecondPassGroupingCollector(v,groupSort,sortWithinGroup,maxDocPerGroup,needScores,needMaxScore,true,vs,new HashMap<Object,Object>())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "collectors.add(secondPassCollector)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "return collectors@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "create['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return Collections.emptyList()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "fieldType.getNumberType() != null@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "collectors.add(firstPassGroupingCollector)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25->29 [style = solid, label="firstPassGroupingCollector"];
11->12 [style = solid, label="vs"];
24->6 [style = dotted, label="true"];
0->12 [style = dotted, label="true"];
5->8 [style = bold, label=""];
21->16 [style = solid, label="allGroupsCollector"];
17->21 [style = solid, label="vs"];
1->7 [style = solid, label="secondPassCollector"];
23->27 [style = bold, label=""];
2->9 [style = solid, label="v"];
1->14 [style = dashed, label="0"];
24->25 [style = dotted, label="true"];
7->10 [style = bold, label=""];
22->16 [style = bold, label=""];
24->26 [style = dotted, label="false"];
26->29 [style = solid, label="firstPassGroupingCollector"];
26->29 [style = bold, label=""];
27->28 [style = bold, label=""];
9->7 [style = solid, label="secondPassCollector"];
18->19 [style = bold, label=""];
0->11 [style = bold, label=""];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
2->9 [style = bold, label=""];
0->1 [style = dotted, label="false"];
27->15 [style = dotted, label="true"];
15->21 [style = dotted, label="true"];
9->7 [style = bold, label=""];
25->29 [style = bold, label=""];
1->7 [style = bold, label=""];
6->25 [style = solid, label="vs"];
11->2 [style = bold, label=""];
12->7 [style = bold, label=""];
5->4 [style = dotted, label="true"];
2->12 [style = bold, label=""];
27->15 [style = bold, label=""];
14->7 [style = bold, label=""];
15->22 [style = bold, label=""];
8->10 [style = solid, label="collectors"];
15->17 [style = dotted, label="true"];
18->28 [style = solid, label="collectors"];
20->18 [style = bold, label=""];
24->26 [style = bold, label=""];
29->27 [style = bold, label=""];
15->17 [style = bold, label=""];
3->5 [style = bold, label=""];
0->14 [style = bold, label=""];
23->24 [style = bold, label=""];
22->16 [style = solid, label="allGroupsCollector"];
16->28 [style = bold, label=""];
12->7 [style = solid, label="secondPassCollector"];
0->1 [style = bold, label=""];
19->23 [style = bold, label=""];
5->4 [style = bold, label=""];
0->14 [style = dotted, label="false"];
13->5 [style = bold, label=""];
21->16 [style = bold, label=""];
11->9 [style = solid, label="vs"];
4->8 [style = bold, label=""];
7->29 [style = dashed, label="0"];
2->12 [style = solid, label="v"];
9->12 [style = dashed, label="0"];
0->2 [style = dotted, label="true"];
23->29 [style = dotted, label="true"];
24->6 [style = bold, label=""];
0->11 [style = dotted, label="true"];
0->9 [style = dotted, label="true"];
15->22 [style = dotted, label="false"];
23->24 [style = dotted, label="true"];
17->21 [style = bold, label=""];
6->25 [style = bold, label=""];
14->7 [style = solid, label="secondPassCollector"];
27->16 [style = dotted, label="true"];
}
