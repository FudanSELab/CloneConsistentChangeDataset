digraph {
6 [style = filled, label = "JobID jid = new JobID()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testCancelWithSavepoint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Mockito.verify(clusterClient,times(1)).cancel(any())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "{JobID jid = new JobID()String(( parameters = {\"-s\",\"targetDirectory\",jid.toString()}CancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false)assertEquals(0,testFrontend.cancel(parameters))Mockito.verify(testFrontend.client,times(1)).cancelWithSavepoint(any(),notNull())}@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final ClusterClient clusterClient = createClusterClient()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testCancel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testCancel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "int retCode = testFrontend.cancel(parameters)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "String(( parameters = {jid.toString()}@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(0,retCode)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "{String(( parameters = {\"-flip6\",String.valueOf(new JobID())}CancelOptions options = CliFrontendParser.parseCancelCommand(parameters)assertTrue(options.getCommandLine().hasOption(Flip6DefaultCLI.FLIP_6.getOpt()))}@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "{JobID jid = new JobID()String(( parameters = {\"-s\",jid.toString()}CancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false)assertEquals(0,testFrontend.cancel(parameters))Mockito.verify(testFrontend.client,times(1)).cancelWithSavepoint(any(),isNull())}@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->9 [style = bold, label=""];
0->1 [style = solid, label="parameters"];
4->3 [style = bold, label=""];
8->7 [style = solid, label="clusterClient"];
2->0 [style = bold, label=""];
11->0 [style = bold, label=""];
0->12 [style = bold, label=""];
7->4 [style = bold, label=""];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
4->3 [style = solid, label="retCode"];
10->4 [style = solid, label="parameters"];
0->1 [style = bold, label=""];
0->12 [style = solid, label="parameters"];
8->7 [style = bold, label=""];
6->10 [style = bold, label=""];
}
