digraph {
2 [style = filled, label = "{Person employee = personMapper.findOneUsingSetter(2)assertThat(employee.getId()).isEqualTo(2)assertThat(employee.getFirstName()).isEqualTo(\"Mike\")assertThat(employee.getLastName()).isEqualTo(\"Jordan\")assertThat(employee.getPersonType()).isEqualTo(Person.PersonType.EMPLOYEE)}@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{Person person = personMapper.findOneUsingTypeDiscriminator(1)assertThat(person.getClass()).isEqualTo()assertThat(person.getId()).isEqualTo(1)assertThat(person.getFirstName()).isEqualTo(\"John\")assertThat(person.getLastName()).isEqualTo(\"Smith\")assertThat(person.getPersonType()).isEqualTo(Person.PersonType.PERSON)}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testForResult['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "{Person employee = personMapper.findOneUsingTypeDiscriminator(2)assertThat(employee.getClass()).isEqualTo()assertThat(employee.getId()).isEqualTo(2)assertThat(employee.getFirstName()).isEqualTo(\"Mike\")assertThat(employee.getLastName()).isEqualTo(\"Jordan\")assertThat(employee.getPersonType()).isEqualTo(Person.PersonType.EMPLOYEE)}@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testForTypeDiscriminator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PersonMapper personMapper = sqlSession.getMapper()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testForResult['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
6->3 [style = bold, label=""];
4->3 [style = bold, label=""];
0->5 [style = bold, label=""];
3->0 [style = bold, label=""];
0->2 [style = bold, label=""];
}
