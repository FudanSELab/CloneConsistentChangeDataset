digraph {
0 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testFollowerLogReconciliation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testFollowerLogReconciliation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "context.assertSentFetchRequest(epoch,1L,lastEpoch)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "context.assertElectedLeader(epoch,otherNodeId)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "context.pollUntilRequest()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "context.client.poll()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "context.deliverResponse(correlationId,otherNodeId,response)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "context.client.poll()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int otherNodeId = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(3L,context.log.endOffset().offset)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int correlationId = context.assertSentFetchRequest(epoch,3L,lastEpoch)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "context.assertSentFetchRequest(epoch,2L,lastEpoch)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int localId = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(2L,context.log.endOffset().offset)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int epoch = 5@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).withElectedLeader(epoch,otherNodeId).appendToLog(lastEpoch,Arrays.asList(\"foo\",\"bar\")).appendToLog(lastEpoch,Arrays.asList(\"baz\")).build()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).withElectedLeader(epoch,otherNodeId).appendToLog(0L,lastEpoch,singletonList(\"foo\")).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "FetchResponseData response = context.divergingFetchResponse(epoch,otherNodeId,2L,lastEpoch,1L)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).withElectedLeader(epoch,otherNodeId).appendToLog(0L,lastEpoch,Arrays.asList(\"foo\",\"bar\")).appendToLog(2L,lastEpoch,Arrays.asList(\"baz\")).build()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "int lastEpoch = 3@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testInitializeAsFollowerNonEmptyLog['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
8->16 [style = bold, label=""];
10->15 [style = bold, label=""];
3->1 [style = bold, label=""];
4->6 [style = solid, label="epoch"];
13->9 [style = solid, label="lastEpoch"];
7->17 [style = dashed, label="0"];
0->19 [style = bold, label=""];
0->17 [style = bold, label=""];
13->21 [style = solid, label="lastEpoch"];
4->13 [style = bold, label=""];
13->2 [style = solid, label="lastEpoch"];
4->21 [style = solid, label="epoch"];
12->0 [style = solid, label="otherNodeId"];
20->1 [style = bold, label=""];
12->14 [style = solid, label="otherNodeId"];
4->2 [style = solid, label="epoch"];
6->10 [style = solid, label="response"];
9->6 [style = bold, label=""];
0->7 [style = bold, label=""];
7->14 [style = bold, label=""];
4->9 [style = solid, label="epoch"];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
19->14 [style = bold, label=""];
15->11 [style = bold, label=""];
12->4 [style = bold, label=""];
18->1 [style = bold, label=""];
1->0 [style = solid, label="localId"];
17->14 [style = bold, label=""];
7->19 [style = dashed, label="0"];
9->21 [style = dashed, label="0"];
16->21 [style = bold, label=""];
6->10 [style = bold, label=""];
1->12 [style = bold, label=""];
9->10 [style = solid, label="correlationId"];
14->8 [style = bold, label=""];
13->6 [style = solid, label="lastEpoch"];
12->6 [style = solid, label="otherNodeId"];
12->10 [style = solid, label="otherNodeId"];
4->14 [style = solid, label="epoch"];
16->9 [style = bold, label=""];
13->0 [style = bold, label=""];
}
