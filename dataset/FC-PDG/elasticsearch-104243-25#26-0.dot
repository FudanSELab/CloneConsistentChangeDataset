digraph {
23 [style = filled, label = "XContentBuilder polygonGeoJson = XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(100.0).value(1.0).value(10.0).endArray().startArray().value(101.0).value(1.0).endArray().startArray().value(101.0).value(0.0).value(10.0).endArray().startArray().value(100.0).value(0.0).value(10.0).endArray().startArray().value(100.0).value(1.0).value(10.0).endArray().endArray().endArray().endObject()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "List<Coordinate> shellCoordinates = new ArrayList<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ElasticsearchGeoAssertions.assertEquals(jtsGeom(expected),ShapeParser.parse(parser,mapperBuilder).buildS4J())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final LegacyGeoShapeFieldMapper mapperBuilder = new LegacyGeoShapeFieldMapper.Builder(\"test\",Version.CURRENT,false,true).build(mockBuilderContext)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "shellCoordinates.add(new Coordinate(100,0,10))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "XContentBuilder polygonGeoJson = XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(100.0).value(1.0).value(10.0).endArray().startArray().value(101.0).value(1.0).value(10.0).endArray().startArray().value(101.0).value(0.0).value(10.0).endArray().startArray().value(100.0).value(0.0).value(10.0).endArray().startArray().value(100.0).value(1.0).value(10.0).endArray().endArray().endArray().endObject()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Coordinate(( coordinates = shellCoordinates.toArray(new Coordinate(((()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testInvalidDimensionalPolygon['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Settings indexSettings = Settings.builder().put(IndexMetadata.SETTING_VERSION_CREATED,randomVersion).put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS,0).put(IndexMetadata.SETTING_NUMBER_OF_SHARDS,1).put(IndexMetadata.SETTING_INDEX_UUID,UUIDs.randomBase64UUID()).build()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Mapper.BuilderContext mockBuilderContext = new Mapper.BuilderContext(indexSettings,new ContentPath())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "parser.nextToken()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Polygon expected = GEOMETRY_FACTORY.createPolygon(shell,null)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Version randomVersion = VersionUtils.randomIndexCompatibleVersion(random())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testParse3DPolygon['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "shellCoordinates.add(new Coordinate(100,1,10))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shellCoordinates.add(new Coordinate(101,0,10))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "shellCoordinates.add(new Coordinate(100,0,10))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "parser.nextToken()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "shellCoordinates.add(new Coordinate(101,1,10))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ElasticsearchGeoAssertions.assertValidException(parser,)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "LinearRing shell = GEOMETRY_FACTORY.createLinearRing(shellCoordinates.toArray(new Coordinate(((())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "org.elasticsearch.geometry.Polygon p = new org.elasticsearch.geometry.Polygon(new org.elasticsearch.geometry.LinearRing(Arrays.stream(coordinates).mapToDouble(null).toArray(),Arrays.stream(coordinates).mapToDouble(null).toArray()))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertNull(parser.nextToken())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertGeometryEquals(p,polygonGeoJson,false)@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testParse3DPolygon['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final LegacyGeoShapeFieldMapper mapperBuilder = (LegacyGeoShapeFieldMapper)(new LegacyGeoShapeFieldMapper.Builder(\"test\").ignoreZValue(true).build(mockBuilderContext))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18->3 [style = bold, label=""];
8->15 [style = bold, label=""];
12->5 [style = bold, label=""];
0->13 [style = bold, label=""];
11->1 [style = bold, label=""];
7->12 [style = bold, label=""];
25->23 [style = bold, label=""];
5->9 [style = solid, label="indexSettings"];
4->16 [style = solid, label="p"];
0->23 [style = dashed, label="0"];
10->17 [style = solid, label="expected"];
8->20 [style = dashed, label="0"];
3->11 [style = bold, label=""];
22->21 [style = bold, label=""];
9->20 [style = bold, label=""];
9->8 [style = bold, label=""];
24->22 [style = bold, label=""];
1->7 [style = bold, label=""];
19->0 [style = bold, label=""];
6->10 [style = solid, label="shell"];
15->17 [style = bold, label=""];
23->24 [style = bold, label=""];
2->0 [style = bold, label=""];
9->8 [style = solid, label="mockBuilderContext"];
5->6 [style = bold, label=""];
6->10 [style = bold, label=""];
0->16 [style = solid, label="polygonGeoJson"];
14->18 [style = bold, label=""];
10->9 [style = bold, label=""];
20->15 [style = bold, label=""];
9->20 [style = solid, label="mockBuilderContext"];
13->14 [style = bold, label=""];
17->4 [style = bold, label=""];
4->16 [style = bold, label=""];
17->22 [style = dashed, label="0"];
}
