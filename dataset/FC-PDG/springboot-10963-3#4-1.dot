digraph {
13 [style = filled, label = "assertStepRegistryDefaultValues(properties,config)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(properties.getUri()).isEqualToIgnoringWhitespace(config.uri())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "InfluxProperties properties = new InfluxProperties()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(properties.getDb()).isEqualTo(config.db())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(properties.isCompressed()).isEqualTo(config.compressed())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(properties.getPassword()).isEqualToIgnoringWhitespace(config.password())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(properties.getUri()).isEqualTo(config.uri())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "defaultValuesAreConsistent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(properties.getRetentionPolicy()).isEqualTo(config.retentionPolicy())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(properties.getRetentionDuration()).isEqualTo(config.retentionDuration())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(properties.getRetentionShardDuration()).isEqualTo(config.retentionShardDuration())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "KairosConfig config = KairosConfig.DEFAULT@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "InfluxConfig config = InfluxConfig.DEFAULT@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "defaultValuesAreConsistent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(properties.isAutoCreateDb()).isEqualTo(config.autoCreateDb())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(properties.getUserName()).isEqualTo(config.userName())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(properties.getConsistency()).isEqualTo(config.consistency())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "KairosProperties properties = new KairosProperties()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(properties.getRetentionReplicationFactor()).isEqualTo(config.retentionReplicationFactor())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(properties.getPassword()).isEqualTo(config.password())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "defaultValuesAreConsistent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(properties.getUserName()).isEqualToIgnoringWhitespace(config.userName())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->16 [style = dashed, label="0"];
19->18 [style = bold, label=""];
5->9 [style = bold, label=""];
3->21 [style = dashed, label="0"];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
12->17 [style = dashed, label="0"];
2->10 [style = bold, label=""];
16->13 [style = solid, label="properties"];
21->13 [style = solid, label="config"];
17->19 [style = bold, label=""];
4->0 [style = bold, label=""];
7->14 [style = bold, label=""];
13->17 [style = bold, label=""];
3->13 [style = solid, label="config"];
13->12 [style = bold, label=""];
20->16 [style = bold, label=""];
12->4 [style = bold, label=""];
8->13 [style = solid, label="properties"];
16->21 [style = bold, label=""];
6->8 [style = bold, label=""];
3->13 [style = bold, label=""];
0->18 [style = dashed, label="0"];
4->19 [style = dashed, label="0"];
9->1 [style = bold, label=""];
15->8 [style = bold, label=""];
11->7 [style = bold, label=""];
21->13 [style = bold, label=""];
14->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
