digraph {
12 [style = filled, label = "RelOptCluster cluster@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "toRelContext['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "RelOptCluster cluster@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RelOptTable.ViewExpander viewExpander@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return ((RelOptTable.ToRelContextFactory)viewExpander).createToRelContext(viewExpander,cluster,hints)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "toRelContext['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "simpleContext['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "RelOptTable.ViewExpander viewExpander@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "List<RelHint> hints@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "viewExpander instanceof RelOptTable.ToRelContextSupplier@@@3@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "return ((RelOptTable.ToRelContextSupplier)viewExpander).get(viewExpander,cluster,hints)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "viewExpander instanceof RelOptTable.ToRelContextFactory@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "return new RelOptTable.ToRelContext(){public RelOptCluster getCluster(){return cluster}public RelRoot expandView(RelDataType rowType,String queryString,List<String> schemaPath,List<String> viewPath){throw new UnsupportedOperationException()}public List<RelHint> getTableHints(){throw new UnsupportedOperationException()}}@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RelOptCluster cluster@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return new RelOptTable.ToRelContext(){public RelOptCluster getCluster(){return cluster}public List<RelHint> getTableHints(){return hints}public RelRoot expandView(RelDataType rowType,String queryString,List<String> schemaPath,List<String> viewPath){return viewExpander.expandView(rowType,queryString,schemaPath,viewPath)}}@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7->11 [style = solid, label="viewExpander"];
4->5 [style = dotted, label="true"];
14->12 [style = dotted, label="true"];
11->1 [style = bold, label=""];
7->8 [style = solid, label="viewExpander"];
2->1 [style = solid, label="cluster"];
6->1 [style = solid, label="cluster"];
12->13 [style = solid, label="cluster"];
3->6 [style = dotted, label="true"];
9->6 [style = dotted, label="true"];
9->8 [style = bold, label=""];
0->4 [style = solid, label="viewExpander"];
3->4 [style = bold, label=""];
6->12 [style = dashed, label="0"];
0->5 [style = solid, label="viewExpander"];
8->1 [style = bold, label=""];
5->1 [style = bold, label=""];
6->5 [style = solid, label="hints"];
10->1 [style = solid, label="hints"];
5->11 [style = dashed, label="0"];
10->11 [style = solid, label="hints"];
6->1 [style = solid, label="hints"];
4->8 [style = dashed, label="0"];
3->0 [style = dotted, label="true"];
8->11 [style = dotted, label="true"];
4->1 [style = bold, label=""];
14->13 [style = bold, label=""];
9->7 [style = dotted, label="true"];
6->11 [style = solid, label="cluster"];
2->5 [style = solid, label="cluster"];
9->10 [style = dotted, label="true"];
8->11 [style = bold, label=""];
4->5 [style = bold, label=""];
3->2 [style = dotted, label="true"];
}
