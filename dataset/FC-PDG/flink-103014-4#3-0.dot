digraph {
17 [style = filled, label = "testDisablingSortingInputsTwoInputTransformation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(graph.getTimerServiceProvider(),nullValue())@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "SingleOutputStreamOperator<Integer> process = env.fromElements(1,2).keyBy(null).process(DUMMY_PROCESS_FUNCTION)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Configuration configuration = new Configuration()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "StreamNode processNode = graph.getStreamNode(process.getId())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DataStreamSource<Integer> elements1 = env.fromElements(1,2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(processNode.getInputRequirements().get(1),nullValue())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testDisablingSortingInputsTwoInputTransformation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(graph.getStateBackend(),nullValue())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SingleOutputStreamOperator<Integer> process = elements1.connect(elements2).keyBy(null,null).process(DUMMY_KEYED_CO_PROCESS_FUNCTION)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "configuration.set(ExecutionOptions.USE_BATCH_STATE_BACKEND,false)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(graph.getStateBackend(),nullValue())@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "StreamGraph graph = graphGenerator.generate()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(processNode.getInputRequirements().get(0),nullValue())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "configuration.set(ExecutionOptions.SORT_INPUTS,false)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testDisablingSortingInputsOneInputTransformation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "DataStreamSink<Integer> sink = process.addSink(new DiscardingSink<>())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "StreamGraphGenerator graphGenerator = new StreamGraphGenerator(Collections.singletonList(sink.getTransformation()),env.getConfig(),env.getCheckpointConfig(),configuration)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(graph.getStateBackend(),nullValue())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(graph.getTimerServiceProvider(),nullValue())@@@18@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertThat(processNode.getSortedInputs(),equalTo(false))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "graphGenerator.setRuntimeExecutionMode(RuntimeExecutionMode.BATCH)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DataStreamSource<Integer> elements2 = env.fromElements(1,2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->5 [style = bold, label=""];
23->22 [style = bold, label=""];
20->23 [style = bold, label=""];
5->8 [style = bold, label=""];
2->4 [style = bold, label=""];
8->12 [style = bold, label=""];
15->4 [style = solid, label="configuration"];
6->15 [style = bold, label=""];
22->6 [style = bold, label=""];
13->0 [style = bold, label=""];
7->18 [style = bold, label=""];
9->13 [style = bold, label=""];
12->1 [style = bold, label=""];
0->19 [style = bold, label=""];
22->11 [style = solid, label="configuration"];
1->6 [style = bold, label=""];
3->7 [style = bold, label=""];
11->2 [style = bold, label=""];
10->3 [style = bold, label=""];
8->20 [style = dashed, label="0"];
0->10 [style = bold, label=""];
19->16 [style = bold, label=""];
15->11 [style = bold, label=""];
4->9 [style = bold, label=""];
21->5 [style = bold, label=""];
5->20 [style = bold, label=""];
16->7 [style = bold, label=""];
10->19 [style = dashed, label="0"];
17->5 [style = bold, label=""];
}
