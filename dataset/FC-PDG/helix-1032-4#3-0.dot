digraph {
51 [style = filled, label = "ZNRecord record = baseAccessor.get(String.format(\"%s%s\",fallbackRoot,path),null,0)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "testMultiSet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@62@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<ZNRecord>(_gZkClient)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(baseAccessor.exists(String.format(\"%s%s\",fallbackRoot,path),0),\"Should exist under fallback location\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertNotNull(record)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "baseAccessor.create(path,new ZNRecord(Integer.toString(i)),AccessOption.PERSISTENT)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "Assert.assertFalse(baseAccessor.exists(String.format(\"%s%s\",fallbackRoot,path),0),\"Should not exist under fallback location\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "List<DataUpdater<ZNRecord>> updaters = new ArrayList<DataUpdater<ZNRecord>>()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "Assert.assertNull(record.getSimpleField(\"key\"))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "Assert.assertFalse(baseAccessor.exists(String.format(\"%s%s\",root,path),0),\"Should not exist under new location\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(record.getId(),\"new\" + i)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<String> paths = new ArrayList<String>()@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertNotNull(record)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "AutoFallbackPropertyStore<ZNRecord> store = new AutoFallbackPropertyStore<>(baseAccessor,root,fallbackRoot)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Assert.assertNotNull(record)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertTrue(succeed(i()@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testMultiSet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String path = paths.get(i)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertNotNull(record.getSimpleField(\"key\"))@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<>(_gZkClient)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "Assert.assertNull(record.getSimpleField(\"key\"))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i < 10@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Assert.assertEquals(record.getSimpleField(\"key\"),\"value\")@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "baseAccessor.create(path,new ZNRecord(\"new\" + i),AccessOption.PERSISTENT)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ZNRecord record = baseAccessor.get(String.format(\"%s%s\",fallbackRoot,path),null,0)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String fallbackRoot = String.format(\"/%s/%s\",clusterName,\"HELIX_PROPERTYSTORE\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "i < 20@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "testMultiUpdateUsingNewath['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i < 10@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "ZNRecord record = baseAccessor.get(String.format(\"%s%s\",root,path),null,0)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "deleteCluster(clusterName)@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "int i = 0@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "List<ZNRecord> records = new ArrayList<ZNRecord>()@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "AutoFallbackPropertyStore<ZNRecord> store = new AutoFallbackPropertyStore<ZNRecord>(baseAccessor,root,fallbackRoot)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i++@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(baseAccessor.exists(String.format(\"%s%s\",fallbackRoot,path),0),\"Should exist under fallback location\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String path = String.format(\"%s/%d\",fallbackRoot,i)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "String path = String.format(\"/%d\",i)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "updaters.add(new MyDataUpdater(\"new\" + i))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "i < 10@@@54@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "i < 10@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "boolean succeed = store.updateChildren(paths,updaters,AccessOption.PERSISTENT)@@@36@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "records.add(record)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertFalse(baseAccessor.exists(String.format(\"%s%s\",fallbackRoot,path),0),\"Should not exist under fallback location\")@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "List<String> paths = new ArrayList<>()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "Assert.assertTrue(baseAccessor.exists(String.format(\"%s%s\",root,path),0),\"Should exist under new location\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "i < 10@@@42@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "Assert.assertEquals(record.getId(),\"new\" + i)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "path = String.format(\"%s/%d\",root,i)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertFalse(baseAccessor.exists(String.format(\"%s%s\",root,path),0),\"Should not exist under new location\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertNotNull(record)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "List<ZNRecord> records = new ArrayList<>()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "paths.add(path)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "boolean(( succeed = store.setChildren(paths,records,AccessOption.PERSISTENT)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "String root = String.format(\"/%s/%s\",clusterName,PropertyType.PROPERTYSTORE.name())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(record.getId(),\"\" + i)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "i < 10@@@38@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20->35 [style = solid, label="i"];
52->8 [style = bold, label=""];
3->22 [style = solid, label="i"];
47->55 [style = dotted, label="false"];
37->57 [style = dotted, label="true"];
4->63 [style = bold, label=""];
46->66 [style = dotted, label="true"];
22->37 [style = bold, label=""];
41->8 [style = bold, label=""];
25->4 [style = solid, label="records"];
5->23 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
15->14 [style = solid, label="clusterName"];
48->61 [style = bold, label=""];
29->7 [style = solid, label="i"];
15->33 [style = solid, label="clusterName"];
38->42 [style = bold, label=""];
57->48 [style = dotted, label="false"];
57->51 [style = dotted, label="true"];
12->7 [style = bold, label=""];
14->30 [style = solid, label="fallbackRoot"];
14->60 [style = solid, label="fallbackRoot"];
62->67 [style = bold, label=""];
4->32 [style = solid, label="succeed"];
3->28 [style = solid, label="i"];
47->49 [style = bold, label=""];
29->11 [style = solid, label="i"];
5->24 [style = dotted, label="true"];
35->23 [style = bold, label=""];
37->43 [style = bold, label=""];
63->28 [style = solid, label="i"];
36->24 [style = bold, label=""];
40->44 [style = solid, label="records"];
2->15 [style = solid, label="methodName"];
34->64 [style = bold, label=""];
20->36 [style = solid, label="i"];
2->15 [style = bold, label=""];
36->24 [style = solid, label="record"];
35->36 [style = solid, label="path"];
37->32 [style = bold, label=""];
14->48 [style = solid, label="fallbackRoot"];
29->12 [style = solid, label="i"];
23->17 [style = bold, label=""];
33->62 [style = solid, label="root"];
22->16 [style = solid, label="i"];
27->33 [style = bold, label=""];
13->22 [style = bold, label=""];
22->57 [style = solid, label="i"];
35->49 [style = solid, label="path"];
63->46 [style = solid, label="i"];
35->55 [style = solid, label="path"];
57->19 [style = dotted, label="true"];
16->9 [style = bold, label=""];
16->9 [style = solid, label="record"];
39->29 [style = bold, label=""];
50->45 [style = dotted, label="true"];
42->44 [style = solid, label="paths"];
55->60 [style = bold, label=""];
64->0 [style = bold, label=""];
11->7 [style = dotted, label="true"];
4->3 [style = bold, label=""];
63->37 [style = solid, label="i"];
65->22 [style = bold, label=""];
7->11 [style = bold, label=""];
28->18 [style = bold, label=""];
33->21 [style = solid, label="root"];
14->17 [style = solid, label="fallbackRoot"];
28->18 [style = solid, label="path"];
57->51 [style = bold, label=""];
34->4 [style = solid, label="paths"];
14->18 [style = solid, label="fallbackRoot"];
44->3 [style = bold, label=""];
40->0 [style = bold, label=""];
37->13 [style = dotted, label="true"];
37->19 [style = dotted, label="true"];
31->29 [style = bold, label=""];
31->39 [style = dashed, label="0"];
25->40 [style = dashed, label="0"];
37->18 [style = dotted, label="true"];
50->36 [style = dotted, label="true"];
15->10 [style = solid, label="clusterName"];
15->43 [style = solid, label="clusterName"];
37->9 [style = dotted, label="true"];
3->13 [style = solid, label="i"];
14->26 [style = solid, label="fallbackRoot"];
42->40 [style = bold, label=""];
33->38 [style = solid, label="root"];
31->21 [style = solid, label="baseAccessor"];
50->35 [style = dotted, label="true"];
37->46 [style = dotted, label="true"];
24->20 [style = bold, label=""];
47->49 [style = dotted, label="true"];
7->12 [style = solid, label="i"];
63->32 [style = solid, label="i"];
5->36 [style = dotted, label="true"];
11->67 [style = dotted, label="true"];
22->46 [style = solid, label="i"];
29->62 [style = solid, label="i"];
35->17 [style = solid, label="path"];
14->38 [style = solid, label="fallbackRoot"];
3->37 [style = solid, label="i"];
63->37 [style = bold, label=""];
8->15 [style = solid, label="className"];
22->19 [style = solid, label="i"];
0->50 [style = solid, label="i"];
5->26 [style = dotted, label="true"];
43->10 [style = bold, label=""];
0->45 [style = solid, label="i"];
33->49 [style = solid, label="root"];
63->16 [style = solid, label="i"];
28->51 [style = solid, label="path"];
14->39 [style = bold, label=""];
0->47 [style = solid, label="i"];
11->30 [style = bold, label=""];
29->11 [style = bold, label=""];
4->44 [style = dashed, label="0"];
59->46 [style = bold, label=""];
36->45 [style = dashed, label="0"];
25->0 [style = bold, label=""];
67->7 [style = bold, label=""];
58->61 [style = bold, label=""];
46->56 [style = bold, label=""];
1->8 [style = bold, label=""];
3->37 [style = bold, label=""];
11->30 [style = dotted, label="true"];
37->10 [style = bold, label=""];
12->62 [style = bold, label=""];
3->19 [style = solid, label="i"];
22->32 [style = solid, label="i"];
11->21 [style = bold, label=""];
21->34 [style = bold, label=""];
0->20 [style = solid, label="i"];
35->60 [style = solid, label="path"];
50->4 [style = bold, label=""];
39->38 [style = solid, label="baseAccessor"];
21->38 [style = dashed, label="0"];
35->26 [style = solid, label="path"];
45->20 [style = bold, label=""];
61->53 [style = solid, label="record"];
56->66 [style = bold, label=""];
14->51 [style = solid, label="fallbackRoot"];
3->32 [style = solid, label="i"];
7->30 [style = solid, label="i"];
37->61 [style = dotted, label="true"];
19->16 [style = bold, label=""];
0->36 [style = solid, label="i"];
57->58 [style = dotted, label="true"];
37->6 [style = dotted, label="true"];
5->35 [style = dotted, label="true"];
30->12 [style = bold, label=""];
19->16 [style = dashed, label="0"];
37->32 [style = dotted, label="true"];
8->2 [style = bold, label=""];
5->44 [style = bold, label=""];
18->6 [style = bold, label=""];
37->59 [style = dotted, label="true"];
5->4 [style = bold, label=""];
60->36 [style = bold, label=""];
14->31 [style = bold, label=""];
44->32 [style = solid, label="succeed"];
37->22 [style = dotted, label="true"];
51->19 [style = solid, label="record"];
46->56 [style = dotted, label="true"];
33->16 [style = solid, label="root"];
50->35 [style = bold, label=""];
28->57 [style = bold, label=""];
63->22 [style = solid, label="i"];
5->35 [style = bold, label=""];
66->22 [style = bold, label=""];
16->58 [style = bold, label=""];
22->37 [style = solid, label="i"];
63->59 [style = solid, label="i"];
37->16 [style = dotted, label="true"];
0->5 [style = bold, label=""];
47->60 [style = dotted, label="false"];
15->27 [style = solid, label="clusterName"];
34->42 [style = dashed, label="0"];
20->50 [style = bold, label=""];
7->62 [style = solid, label="i"];
5->17 [style = dotted, label="true"];
28->48 [style = solid, label="path"];
5->50 [style = dashed, label="0"];
33->14 [style = bold, label=""];
50->20 [style = dotted, label="true"];
20->5 [style = solid, label="i"];
17->26 [style = bold, label=""];
34->25 [style = bold, label=""];
20->45 [style = solid, label="i"];
11->38 [style = bold, label=""];
22->59 [style = solid, label="i"];
37->53 [style = dotted, label="true"];
29->30 [style = solid, label="i"];
25->64 [style = dashed, label="0"];
22->13 [style = solid, label="i"];
26->36 [style = bold, label=""];
64->4 [style = solid, label="updaters"];
63->57 [style = solid, label="i"];
15->54 [style = solid, label="clusterName"];
47->26 [style = dotted, label="true"];
6->19 [style = bold, label=""];
50->47 [style = dotted, label="true"];
33->55 [style = solid, label="root"];
0->50 [style = bold, label=""];
33->23 [style = solid, label="root"];
0->5 [style = solid, label="i"];
20->5 [style = bold, label=""];
37->54 [style = bold, label=""];
57->48 [style = bold, label=""];
35->23 [style = solid, label="path"];
28->16 [style = solid, label="path"];
20->50 [style = solid, label="i"];
33->61 [style = solid, label="root"];
61->53 [style = bold, label=""];
57->16 [style = dotted, label="true"];
11->62 [style = dotted, label="true"];
47->55 [style = bold, label=""];
53->59 [style = bold, label=""];
7->67 [style = solid, label="i"];
0->35 [style = solid, label="i"];
20->47 [style = solid, label="i"];
35->47 [style = bold, label=""];
46->65 [style = dotted, label="false"];
29->67 [style = solid, label="i"];
5->20 [style = dotted, label="true"];
37->28 [style = dotted, label="true"];
22->28 [style = solid, label="i"];
18->6 [style = solid, label="record"];
49->26 [style = bold, label=""];
36->45 [style = bold, label=""];
28->61 [style = solid, label="path"];
46->65 [style = bold, label=""];
15->27 [style = bold, label=""];
62->67 [style = solid, label="path"];
32->28 [style = bold, label=""];
51->19 [style = bold, label=""];
7->11 [style = solid, label="i"];
9->13 [style = bold, label=""];
30->12 [style = solid, label="path"];
14->21 [style = solid, label="fallbackRoot"];
}
