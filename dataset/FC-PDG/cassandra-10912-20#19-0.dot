digraph {
7 [style = filled, label = "assertEquals(cachedCf.rowCount(),100)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE_CACHED)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CacheService.instance.invalidateRowCache()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i++@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "rub.add(\"val\",ByteBufferUtil.bytes(values(i())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(r.clustering().get(0),ByteBufferUtil.bytes(values(i(.substring(3)))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(1).build())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "RowUpdateBuilder rub = new RowUpdateBuilder(cachedStore.metadata(),System.currentTimeMillis(),key)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ColumnFamilyStore cachedStore = keyspace.getColumnFamilyStore(cf)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(++startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String values = new String((((@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "CachedPartition cachedCf = (CachedPartition)CacheService.instance.rowCache.get(rck)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "CacheService.instance.setRowCacheCapacityInMB(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(++startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testRowCacheRange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "long startRowCacheHits = cachedStore.metric.rowCacheHit.getCount()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(10).build())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "rub.build().applyUnsafe()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "testRoundTrip['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "long startRowCacheOutOfRange = cachedStore.metric.rowCacheHitOutOfRange.getCount()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ByteBuffer key = ByteBufferUtil.bytes(\"rowcachekey\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testRowCacheRange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "CompactionManager.instance.disableAutoCompaction()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "cachedStore.truncateBlocking()@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "rub.clustering(String.valueOf(0))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DecoratedKey dk = cachedStore.decorateKey(key)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i++@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(10).build())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "RowCacheKey rck = new RowCacheKey(cachedStore.metadata(),dk)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "values(i( = \"val\" + i@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(((Cell)c).value(),ByteBufferUtil.bytes(\"val\" + 0))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(1,cachedCf.rowCount())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int i = 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).fromIncl(String.valueOf(210)).toExcl(String.valueOf(215)).build())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String cf = \"CachedIntCF\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "CacheService.instance.invalidateRowCache()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "rub.add(\"val\",ByteBufferUtil.bytes(\"val\" + 0))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "cachedStore.truncateBlocking()@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Arrays.sort(values)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "rub.clustering(String.valueOf(i))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(((Cell<?>)c).buffer(),ByteBufferUtil.bytes(values(i())@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(((Cell)c).value(),ByteBufferUtil.bytes(values(i())@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "i < 200@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(++startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Row r = (Row)unfiltered@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(1).build())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "ValueAccessors.assertDataEquals(r.clustering().get(0),ByteBufferUtil.bytes(values(i(.substring(3)))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(101).build())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(105).build())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Row r = (Row)unfiltered@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->3 [style = bold, label=""];
37->27 [style = bold, label=""];
29->46 [style = dashed, label="0"];
15->4 [style = solid, label="i"];
14->28 [style = bold, label=""];
17->35 [style = solid, label="i"];
34->50 [style = bold, label=""];
1->23 [style = bold, label=""];
5->34 [style = bold, label=""];
37->31 [style = dotted, label="true"];
19->1 [style = bold, label=""];
12->40 [style = solid, label="i"];
52->47 [style = bold, label=""];
35->44 [style = solid, label="values"];
20->41 [style = solid, label="startRowCacheOutOfRange"];
22->0 [style = bold, label=""];
26->54 [style = solid, label="rck"];
2->14 [style = bold, label=""];
36->18 [style = bold, label=""];
7->16 [style = bold, label=""];
45->0 [style = bold, label=""];
35->24 [style = solid, label="values"];
16->40 [style = solid, label="i"];
16->43 [style = bold, label=""];
3->39 [style = bold, label=""];
43->29 [style = bold, label=""];
25->10 [style = bold, label=""];
40->44 [style = dashed, label="0"];
54->5 [style = bold, label=""];
35->30 [style = solid, label="i"];
24->19 [style = bold, label=""];
47->48 [style = bold, label=""];
10->26 [style = bold, label=""];
21->25 [style = bold, label=""];
17->37 [style = bold, label=""];
44->12 [style = bold, label=""];
43->46 [style = bold, label=""];
7->5 [style = dashed, label="0"];
26->27 [style = bold, label=""];
33->36 [style = solid, label="startRowCacheHits"];
37->4 [style = dotted, label="true"];
31->51 [style = bold, label=""];
49->1 [style = bold, label=""];
16->44 [style = solid, label="i"];
29->40 [style = bold, label=""];
41->38 [style = bold, label=""];
4->52 [style = dashed, label="0"];
33->9 [style = solid, label="startRowCacheHits"];
32->42 [style = bold, label=""];
15->37 [style = solid, label="i"];
20->1 [style = solid, label="startRowCacheOutOfRange"];
33->1 [style = solid, label="startRowCacheHits"];
50->34 [style = bold, label=""];
46->44 [style = bold, label=""];
8->44 [style = solid, label="values"];
25->10 [style = solid, label="key"];
33->51 [style = solid, label="startRowCacheHits"];
37->24 [style = bold, label=""];
8->15 [style = bold, label=""];
23->5 [style = bold, label=""];
17->37 [style = solid, label="i"];
11->21 [style = bold, label=""];
23->56 [style = dashed, label="0"];
26->8 [style = bold, label=""];
12->44 [style = solid, label="i"];
8->24 [style = solid, label="values"];
15->35 [style = solid, label="i"];
27->52 [style = bold, label=""];
48->31 [style = bold, label=""];
37->35 [style = dotted, label="true"];
40->12 [style = bold, label=""];
30->31 [style = bold, label=""];
39->32 [style = bold, label=""];
1->54 [style = bold, label=""];
14->28 [style = solid, label="cf"];
13->9 [style = bold, label=""];
31->17 [style = bold, label=""];
12->43 [style = bold, label=""];
37->27 [style = dotted, label="true"];
15->37 [style = bold, label=""];
35->30 [style = bold, label=""];
20->11 [style = bold, label=""];
4->35 [style = bold, label=""];
42->13 [style = bold, label=""];
25->27 [style = solid, label="key"];
56->49 [style = bold, label=""];
33->20 [style = bold, label=""];
17->4 [style = solid, label="i"];
35->40 [style = solid, label="values"];
40->50 [style = dashed, label="0"];
35->47 [style = dashed, label="0"];
0->2 [style = bold, label=""];
34->7 [style = bold, label=""];
51->56 [style = bold, label=""];
38->36 [style = bold, label=""];
8->40 [style = solid, label="values"];
55->0 [style = bold, label=""];
12->6 [style = bold, label=""];
37->30 [style = dotted, label="true"];
37->17 [style = dotted, label="true"];
27->4 [style = bold, label=""];
35->17 [style = solid, label="i"];
5->41 [style = bold, label=""];
26->34 [style = solid, label="rck"];
28->33 [style = bold, label=""];
16->12 [style = solid, label="i"];
10->26 [style = solid, label="dk"];
33->39 [style = solid, label="startRowCacheHits"];
50->53 [style = bold, label=""];
9->34 [style = bold, label=""];
}
