digraph {
46 [style = filled, label = "assertTrue(!Collections.disjoint(r2partitions2,r1partitions3))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testAssignmentWithMultipleGenerations2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<TopicPartition> r1partitions3 = assignment.get(consumer3)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String consumer3 = \"consumer3\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<TopicPartition> r2partitions2 = assignment.get(consumer2)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Map<String,List<TopicPartition>> assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<TopicPartition> r1partitions1 = assignment.get(consumer1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r2partitions2,Optional.of(2)))))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "subscriptions.remove(consumer1)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Map<String,Subscription> subscriptions = new HashMap<>()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<TopicPartition> r3partitions3 = assignment.get(consumer3)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "List<TopicPartition> r1partitions2 = assignment.get(consumer2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertTrue(r3partitions2.size() == 3 && r3partitions3.size() == 3)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Map<String,Integer> partitionsPerTopic = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r1partitions3,Optional.of(1)))))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "partitionsPerTopic.put(topic,6)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String consumer2 = \"consumer2\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(6,r2partitions2.size())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(r1partitions3,r3partitions3)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertTrue(Collections.disjoint(r3partitions2,r3partitions3))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String consumer1 = \"consumer1\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "List<TopicPartition> r2partitions1 = assignment.get(consumer1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertTrue(r2partitions1.containsAll(r1partitions1))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertTrue(r1partitions1.size() == 2 && r1partitions2.size() == 2 && r1partitions3.size() == 2)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(assignor.isSticky())@@@43@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testAssignmentWithMultipleGenerations1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r2partitions2,Optional.of(2)))))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r1partitions3,Optional.of(1)))))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic)))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<TopicPartition> r3partitions2 = assignment.get(consumer2)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r1partitions2,Optional.of(1)))))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "subscriptions.remove(consumer3)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(r2partitions2.containsAll(r1partitions2))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testAssignmentWithMultipleGenerations2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertTrue(assignor.isSticky())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<TopicPartition> r3partitions3 = assignment.get(consumer3)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r1partitions1,Optional.of(1)))))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(r1partitions2,r3partitions2)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertTrue(r2partitions1.size() == 3 && r2partitions2.size() == 3)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "String topic = \"topic\"@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic)))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "subscriptions.remove(consumer1)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(r2partitions2.containsAll(r1partitions2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->3 [style = bold, label=""];
3->24 [style = bold, label=""];
25->3 [style = solid, label="r1partitions2"];
38->14 [style = solid, label="topic"];
53->52 [style = bold, label=""];
41->26 [style = solid, label="assignment"];
13->7 [style = solid, label="r1partitions3"];
2->10 [style = bold, label=""];
32->44 [style = dashed, label="0"];
13->24 [style = solid, label="r1partitions3"];
34->20 [style = bold, label=""];
13->19 [style = solid, label="r1partitions3"];
1->4 [style = solid, label="partitionsPerTopic"];
19->27 [style = bold, label=""];
8->27 [style = solid, label="subscriptions"];
41->51 [style = bold, label=""];
38->35 [style = solid, label="topic"];
28->49 [style = bold, label=""];
25->12 [style = solid, label="r1partitions2"];
4->19 [style = bold, label=""];
8->5 [style = solid, label="subscriptions"];
37->30 [style = bold, label=""];
0->40 [style = solid, label="consumer3"];
8->4 [style = solid, label="subscriptions"];
25->13 [style = bold, label=""];
14->8 [style = bold, label=""];
1->33 [style = solid, label="partitionsPerTopic"];
2->4 [style = solid, label="r2partitions2"];
29->38 [style = bold, label=""];
27->34 [style = bold, label=""];
20->49 [style = dashed, label="0"];
24->5 [style = bold, label=""];
23->50 [style = solid, label="consumer1"];
50->4 [style = bold, label=""];
14->17 [style = bold, label=""];
38->11 [style = solid, label="topic"];
0->28 [style = solid, label="consumer3"];
26->21 [style = bold, label=""];
16->47 [style = solid, label="r1partitions1"];
18->27 [style = solid, label="consumer2"];
0->34 [style = solid, label="consumer3"];
38->4 [style = solid, label="topic"];
16->25 [style = bold, label=""];
41->6 [style = solid, label="assignment"];
23->15 [style = solid, label="consumer1"];
23->19 [style = solid, label="consumer1"];
18->20 [style = solid, label="consumer2"];
1->14 [style = bold, label=""];
22->9 [style = bold, label=""];
27->20 [style = bold, label=""];
28->48 [style = solid, label="r3partitions3"];
5->37 [style = bold, label=""];
16->15 [style = solid, label="r1partitions1"];
16->44 [style = solid, label="r1partitions1"];
27->3 [style = solid, label="r3partitions2"];
38->23 [style = bold, label=""];
38->44 [style = solid, label="topic"];
23->18 [style = bold, label=""];
0->7 [style = solid, label="consumer3"];
38->19 [style = solid, label="topic"];
9->32 [style = bold, label=""];
4->5 [style = solid, label="assignment"];
52->30 [style = bold, label=""];
51->2 [style = bold, label=""];
44->39 [style = bold, label=""];
48->53 [style = bold, label=""];
23->51 [style = solid, label="consumer1"];
45->38 [style = bold, label=""];
2->43 [style = bold, label=""];
31->11 [style = bold, label=""];
4->37 [style = solid, label="assignment"];
8->6 [style = solid, label="subscriptions"];
21->15 [style = bold, label=""];
42->23 [style = bold, label=""];
18->39 [style = solid, label="consumer2"];
6->26 [style = bold, label=""];
41->2 [style = bold, label=""];
47->6 [style = bold, label=""];
25->39 [style = solid, label="r1partitions2"];
33->22 [style = solid, label="assignment"];
38->31 [style = solid, label="topic"];
8->22 [style = solid, label="subscriptions"];
10->43 [style = dashed, label="0"];
35->7 [style = bold, label=""];
1->27 [style = solid, label="partitionsPerTopic"];
23->17 [style = solid, label="consumer1"];
23->32 [style = solid, label="consumer1"];
40->41 [style = bold, label=""];
15->35 [style = bold, label=""];
15->46 [style = bold, label=""];
8->26 [style = solid, label="subscriptions"];
16->28 [style = solid, label="r1partitions1"];
49->48 [style = bold, label=""];
23->44 [style = solid, label="consumer1"];
18->2 [style = solid, label="consumer2"];
13->36 [style = bold, label=""];
41->21 [style = solid, label="assignment"];
8->41 [style = solid, label="subscriptions"];
0->19 [style = solid, label="consumer3"];
12->6 [style = bold, label=""];
25->6 [style = solid, label="r1partitions2"];
20->48 [style = solid, label="r3partitions2"];
38->7 [style = solid, label="topic"];
27->53 [style = solid, label="assignment"];
38->15 [style = solid, label="topic"];
11->33 [style = bold, label=""];
9->44 [style = bold, label=""];
18->4 [style = solid, label="consumer2"];
8->33 [style = solid, label="subscriptions"];
32->39 [style = bold, label=""];
36->22 [style = bold, label=""];
38->39 [style = solid, label="topic"];
1->41 [style = solid, label="partitionsPerTopic"];
43->47 [style = bold, label=""];
18->31 [style = solid, label="consumer2"];
33->9 [style = solid, label="assignment"];
8->17 [style = bold, label=""];
34->24 [style = solid, label="r3partitions3"];
0->1 [style = bold, label=""];
33->16 [style = bold, label=""];
10->12 [style = bold, label=""];
46->50 [style = bold, label=""];
7->4 [style = bold, label=""];
2->35 [style = solid, label="r2partitions2"];
20->28 [style = bold, label=""];
27->52 [style = solid, label="assignment"];
18->35 [style = solid, label="consumer2"];
39->40 [style = bold, label=""];
38->17 [style = solid, label="topic"];
28->48 [style = dashed, label="0"];
18->0 [style = bold, label=""];
8->53 [style = solid, label="subscriptions"];
19->28 [style = solid, label="r3partitions1"];
18->25 [style = solid, label="consumer2"];
0->11 [style = solid, label="consumer3"];
23->16 [style = solid, label="consumer1"];
17->31 [style = bold, label=""];
0->13 [style = solid, label="consumer3"];
}
