digraph {
12 [style = filled, label = "Map<String,Object> responseContext = new HashMap<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final ResponseContext responseContext = ResponseContext.createEmpty()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "timeline.add(interval,\"ver\",new SingleElementPartitionChunk<>(selector))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final TimeBoundaryQuery query2 = Druids.newTimeBoundaryQueryBuilder().dataSource(DATA_SOURCE).intervals(new MultipleIntervalSegmentSpec(ImmutableList.of(queryInterval2))).context(ImmutableMap.of(\"If-None-Match\",\"aVJV29CJY93rszVW/QBy0arWZo0=\")).build()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testEtagforDifferentQueryInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final DataSegment dataSegment = new DataSegment(\"dataSource\",interval,\"ver\",ImmutableMap.of(\"type\",\"hdfs\",\"path\",\"/tmp\"),ImmutableList.of(\"product\"),ImmutableList.of(\"visited_sum\"),NoneShardSpec.instance(),9,12334)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Interval interval = Intervals.of(\"2016/2017\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "getDefaultQueryRunner().run(QueryPlus.wrap(query2),responseContext)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "selector.addServerAndUpdateSegment(new QueryableDruidServer(servers(0(,null),dataSegment)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Object etag1 = responseContext.get(\"ETag\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final ServerSelector selector = new ServerSelector(dataSegment,new HighestPriorityTierSelectorStrategy(new RandomServerSelectorStrategy()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testEtagforDifferentQueryInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final Object etag2 = responseContext.get(\"ETag\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Map<String,Object> responseContext = new HashMap<>()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "testIfNoneMatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final Interval queryInterval2 = Intervals.of(\"2016-01-01T18:00:00/2016-01-02T18:00:00\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertNotEquals(etag1,etag2)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(\"MDs2yIUvYLVzaG6zmwTH1plqaYE=\",responseContext.get(\"ETag\"))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final Interval queryInterval = Intervals.of(\"2016-01-01T14:00:00/2016-01-02T14:00:00\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "getDefaultQueryRunner().run(QueryPlus.wrap(query),responseContext)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "getDefaultQueryRunner().run(QueryPlus.wrap(query),responseContext)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Interval interval = Intervals.of(\"2016-01-01/2016-01-02\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder().dataSource(DATA_SOURCE).intervals(new MultipleIntervalSegmentSpec(ImmutableList.of(queryInterval))).context(ImmutableMap.of(\"If-None-Match\",\"aVJV29CJY93rszVW/QBy0arWZo0=\")).build()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder().dataSource(DATA_SOURCE).intervals(new MultipleIntervalSegmentSpec(ImmutableList.of(interval))).context(ImmutableMap.of(\"If-None-Match\",\"aVJV29CJY93rszVW/QBy0arWZo0=\")).build()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
5->10 [style = bold, label=""];
8->19 [style = dashed, label="0"];
19->23 [style = solid, label="interval"];
16->8 [style = bold, label=""];
22->19 [style = bold, label=""];
1->2 [style = solid, label="responseContext"];
4->6 [style = bold, label=""];
21->15 [style = bold, label=""];
8->12 [style = solid, label="interval"];
12->20 [style = solid, label="responseContext"];
12->20 [style = bold, label=""];
8->14 [style = bold, label=""];
0->11 [style = bold, label=""];
7->11 [style = dashed, label="0"];
9->17 [style = bold, label=""];
11->12 [style = bold, label=""];
3->15 [style = bold, label=""];
15->0 [style = solid, label="dataSegment"];
5->18 [style = dashed, label="0"];
12->7 [style = bold, label=""];
17->10 [style = solid, label="responseContext"];
7->9 [style = bold, label=""];
20->18 [style = bold, label=""];
5->6 [style = solid, label="etag1"];
7->2 [style = solid, label="query"];
1->17 [style = dashed, label="0"];
17->2 [style = bold, label=""];
23->21 [style = bold, label=""];
21->0 [style = solid, label="selector"];
17->2 [style = solid, label="responseContext"];
11->20 [style = solid, label="query"];
1->10 [style = solid, label="responseContext"];
19->23 [style = bold, label=""];
15->0 [style = bold, label=""];
0->12 [style = solid, label="selector"];
23->15 [style = solid, label="dataSegment"];
10->4 [style = bold, label=""];
4->6 [style = solid, label="etag2"];
8->15 [style = solid, label="interval"];
9->10 [style = solid, label="query2"];
1->2 [style = bold, label=""];
15->11 [style = solid, label="dataSegment"];
13->8 [style = bold, label=""];
9->1 [style = bold, label=""];
19->0 [style = solid, label="interval"];
2->5 [style = bold, label=""];
23->21 [style = solid, label="dataSegment"];
}
