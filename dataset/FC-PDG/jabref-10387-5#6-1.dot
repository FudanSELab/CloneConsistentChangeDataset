digraph {
1 [style = filled, label = "assertEquals(Collections.emptyList(),matches)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCorrectMatchFromDatabaseWithArticleTypeEntry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<BibEntry> matches = new DatabaseSearcher(new SearchQuery(\"whatever\",true,true),database).getMatches()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "testNoMatchesFromDatabaseWithArticleTypeEntry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "entry.setField(StandardField.AUTHOR,\"harrer\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<BibEntry> matches = new DatabaseSearcher(new SearchQuery(\"harrer\",true,true),database).getMatches()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<BibEntry> matches = new DatabaseSearcher(new SearchQuery(\"whatever\",EnumSet.of(SearchRules.SearchFlags.CASE_SENSITIVE,SearchRules.SearchFlags.REGULAR_EXPRESSION)),database).getMatches()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "BibEntry entry = new BibEntry(StandardEntryType.Article)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Collections.singletonList(entry),matches)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "database.insertEntry(entry)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testNoMatchesFromDatabaseWithArticleTypeEntry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9->5 [style = bold, label=""];
5->8 [style = solid, label="entry"];
6->1 [style = bold, label=""];
10->8 [style = solid, label="matches"];
2->10 [style = dashed, label="0"];
1->8 [style = dashed, label="0"];
3->5 [style = bold, label=""];
7->5 [style = bold, label=""];
0->10 [style = bold, label=""];
2->1 [style = solid, label="matches"];
5->0 [style = solid, label="entry"];
10->8 [style = bold, label=""];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
5->4 [style = bold, label=""];
6->1 [style = solid, label="matches"];
4->0 [style = bold, label=""];
0->2 [style = bold, label=""];
2->6 [style = dashed, label="0"];
}
