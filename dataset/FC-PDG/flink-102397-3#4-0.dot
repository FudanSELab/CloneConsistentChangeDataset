digraph {
4 [style = filled, label = "checkNotNull(state,\"State.\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final RetrievableStateHandle<T> oldStateHandle = getAndLock(key)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final Optional<PossibleInconsistentStateException> possibleInconsistentStateException = ExceptionUtils.findThrowable(ex,)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "possibleInconsistentStateException.isPresent()@@@29@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "String key@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "clearEntries['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "StringResourceVersion resourceVersion@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final byte(( serializedStoreHandle = InstantiationUtil.serializeObject(newStateHandle)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "boolean discardNewState = true@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "success = kubeClient.checkAndUpdateConfigMap(configMapName,null).get()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "boolean success = kubeClient.checkAndUpdateConfigMap(configMapName,null).get()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "throw possibleInconsistentStateException.get()@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "kubeClient.checkAndUpdateConfigMap(configMapName,null).get()@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "boolean discardOldState = false@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "boolean success = false@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final byte(( serializedStateHandle = serializeOrDiscard(newStateHandle)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "discardNewState = !success@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Exception ex@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String key@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "T state@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "throw ExceptionUtils.findThrowable(ex,).orElseThrow(null)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "discardOldState = success@@@24@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "{if (discardNewState) {newStateHandle.discardState()}if (discardOldState) {oldStateHandle.discardState()}}@@@35@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "replace['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkNotNull(key,\"Key in ConfigMap.\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "discardNewState = false@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "replace['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "StringResourceVersion resourceVersion@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final RetrievableStateHandle<T> newStateHandle = storage.store(state)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "{if (success) {oldStateHandle.discardState()}{newStateHandle.discardState()}}@@@27@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = bold, label=""];
12->3 [style = dotted, label="true"];
2->19 [style = bold, label=""];
2->14 [style = solid, label="discardOldState"];
11->6 [style = solid, label="key"];
15->14 [style = bold, label=""];
23->22 [style = dotted, label="true"];
24->15 [style = bold, label=""];
4->6 [style = bold, label=""];
19->14 [style = solid, label="discardNewState"];
7->10 [style = bold, label=""];
8->18 [style = bold, label=""];
26->2 [style = solid, label="success"];
18->17 [style = bold, label=""];
8->18 [style = solid, label="newStateHandle"];
13->6 [style = solid, label="key"];
2->9 [style = bold, label=""];
0->28 [style = dashed, label="0"];
12->0 [style = bold, label=""];
1->7 [style = bold, label=""];
23->0 [style = bold, label=""];
24->16 [style = dotted, label="true"];
9->25 [style = dotted, label="true"];
9->24 [style = dotted, label="true"];
12->11 [style = dotted, label="true"];
29->28 [style = bold, label=""];
8->1 [style = bold, label=""];
11->0 [style = solid, label="key"];
25->24 [style = bold, label=""];
13->0 [style = solid, label="key"];
26->2 [style = bold, label=""];
12->13 [style = dotted, label="true"];
21->14 [style = solid, label="discardNewState"];
10->5 [style = solid, label="success"];
13->4 [style = solid, label="state"];
13->8 [style = solid, label="state"];
10->5 [style = bold, label=""];
27->26 [style = bold, label=""];
19->14 [style = bold, label=""];
2->9 [style = dotted, label="true"];
24->21 [style = bold, label=""];
22->4 [style = solid, label="state"];
0->4 [style = bold, label=""];
9->25 [style = bold, label=""];
23->13 [style = dotted, label="true"];
23->20 [style = dotted, label="true"];
6->8 [style = bold, label=""];
9->5 [style = bold, label=""];
21->16 [style = bold, label=""];
9->15 [style = dotted, label="true"];
8->7 [style = solid, label="newStateHandle"];
17->27 [style = bold, label=""];
24->21 [style = dotted, label="true"];
22->8 [style = solid, label="state"];
}
