digraph {
9 [style = filled, label = "obj1 = new DefaultPieDataset()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ko1.addObject(\"K1\",obj1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(ko1 != ko2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ko1.addObject(\"Key 2\",null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "KeyedObjects ko2 = (KeyedObjects)TestUtils.serialised(ko1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "KeyedObjects ko2 = (KeyedObjects)ko1.clone()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(ko1 != ko2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "KeyedObjects ko1 = new KeyedObjects()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(ko2.getObject(\"K1\") != obj1)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testCloning2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ko1.addObject(\"K1\",obj1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(ko2.getObject(\"K1\") == obj1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ko2 = (KeyedObjects)ko1.clone()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(ko1,ko2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "KeyedObjects ko2 = (KeyedObjects)TestUtilities.serialised(ko1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "ko1 = new KeyedObjects()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ko1.addObject(\"Key 3\",\"Object 2\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Object obj1 = new ArrayList()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "KeyedObjects ko1 = new KeyedObjects()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14->16 [style = bold, label=""];
10->22 [style = bold, label=""];
6->3 [style = bold, label=""];
14->16 [style = solid, label="ko2"];
16->10 [style = bold, label=""];
20->12 [style = solid, label="ko2"];
18->15 [style = bold, label=""];
22->21 [style = bold, label=""];
9->17 [style = solid, label="obj1"];
3->16 [style = solid, label="ko1"];
8->6 [style = bold, label=""];
14->22 [style = solid, label="ko2"];
11->19 [style = bold, label=""];
7->2 [style = solid, label="ko2"];
3->13 [style = dashed, label="0"];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
0->14 [style = dashed, label="0"];
5->2 [style = bold, label=""];
24->12 [style = solid, label="ko1"];
21->9 [style = bold, label=""];
1->6 [style = bold, label=""];
19->13 [style = solid, label="obj1"];
5->2 [style = solid, label="ko2"];
0->4 [style = bold, label=""];
7->2 [style = bold, label=""];
19->21 [style = solid, label="obj1"];
24->17 [style = bold, label=""];
20->12 [style = bold, label=""];
9->15 [style = solid, label="obj1"];
3->13 [style = bold, label=""];
20->18 [style = solid, label="ko2"];
12->23 [style = bold, label=""];
6->5 [style = solid, label="ko1"];
5->7 [style = dashed, label="0"];
6->2 [style = solid, label="ko1"];
6->7 [style = solid, label="ko1"];
2->22 [style = dashed, label="0"];
4->5 [style = bold, label=""];
19->3 [style = bold, label=""];
13->14 [style = bold, label=""];
9->24 [style = bold, label=""];
23->18 [style = bold, label=""];
17->20 [style = bold, label=""];
}
