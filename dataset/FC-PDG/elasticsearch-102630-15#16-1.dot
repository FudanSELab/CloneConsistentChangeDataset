digraph {
17 [style = filled, label = "indexDoc(source,\"_doc\",\"2\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertDocs(target,\"1\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testRestoreShard['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testRestoreShard['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "final PlainActionFuture<Boolean> future = PlainActionFuture.newFuture()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "routing = ShardRoutingHelper.newWithRestoreSource(routing,new RecoverySource.SnapshotRecoverySource(UUIDs.randomBase64UUID(),snapshot,Version.CURRENT,new IndexId(\"test\",UUIDs.randomBase64UUID(random()))))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final Settings targetSettings = Settings.builder().put(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey(),true).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "flushShard(source)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Store targetStore = target.store()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(future.actionGet())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "closeShard(source,false)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Store sourceStore = source.store()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ShardRouting routing = ShardRoutingHelper.initWithSameId(target.routingEntry(),RecoverySource.ExistingStoreRecoverySource.INSTANCE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "EngineTestCase.generateNewSeqNo(IndexShardTestCase.getEngine(source))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final IndexShard source = newStartedShard(true,Settings.EMPTY)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "randomBoolean()@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "randomBoolean()@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "flushShard(source)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(target.getLocalCheckpoint(),equalTo(2L))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "target.markAsRecovering(\"store\",new RecoveryState(routing,localNode,null))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "source.refresh(\"test\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(target.seqNoStats().getMaxSeqNo(),equalTo(2L))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ShardRouting routing = ShardRoutingHelper.initWithSameId(target.routingEntry(),RecoverySource.ExistingStoreRecoverySource.INSTANCE)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "IndexShard target = newStartedShard(true,targetSettings,new FollowingEngineFactory())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "testRestoreShard['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(IndexShardTestCase.getEngine(target),instanceOf())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "closeShards(target)@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertDocs(target,\"0\",\"2\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "EngineTestCase.generateNewSeqNo(source.getEngine())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "target.restoreFromRepository(new RestoreOnlyRepository(\"test\"){@Override public void restoreShard(Store store,SnapshotId snapshotId,IndexId indexId,ShardId snapshotShardId,RecoveryState recoveryState,ActionListener<Void> listener){ActionListener.completeWith(listener,null)}},future)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "DiscoveryNode localNode = new DiscoveryNode(\"foo\",buildNewFakeTransportAddress(),emptyMap(),emptySet(),Version.CURRENT)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "target = reinitShard(target,routing)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertDocs(target,\"0\",\"2\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "indexDoc(source,\"_doc\",\"0\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "indexDoc(source,\"_doc\",\"0\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "IndexShard target = newStartedShard(true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(future.actionGet())@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final IndexShard source = newStartedShard(true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "IndexShardTestCase.updateRoutingEntry(target,routing.moveToStarted())@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(target.getLocalCheckpoint(),equalTo(0L))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "target.refresh(\"test\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "closeShard(source,false)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Snapshot snapshot = new Snapshot(\"foo\",new SnapshotId(\"bar\",UUIDs.randomBase64UUID()))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->4 [style = solid, label="target"];
11->14 [style = bold, label=""];
32->12 [style = bold, label=""];
22->37 [style = bold, label=""];
45->38 [style = solid, label="source"];
43->5 [style = solid, label="target"];
9->10 [style = bold, label=""];
21->30 [style = bold, label=""];
35->43 [style = bold, label=""];
12->7 [style = solid, label="source"];
19->24 [style = bold, label=""];
22->4 [style = bold, label=""];
34->27 [style = dotted, label="true"];
10->39 [style = bold, label=""];
23->13 [style = bold, label=""];
2->30 [style = solid, label="target"];
19->24 [style = solid, label="localNode"];
6->41 [style = dashed, label="0"];
1->12 [style = bold, label=""];
17->27 [style = bold, label=""];
45->35 [style = bold, label=""];
14->16 [style = bold, label=""];
15->38 [style = bold, label=""];
2->20 [style = bold, label=""];
26->17 [style = bold, label=""];
33->15 [style = bold, label=""];
44->3 [style = bold, label=""];
31->2 [style = bold, label=""];
27->16 [style = bold, label=""];
12->11 [style = solid, label="source"];
16->31 [style = solid, label="snapshot"];
45->3 [style = solid, label="source"];
35->43 [style = solid, label="targetSettings"];
23->27 [style = solid, label="target"];
26->27 [style = bold, label=""];
17->34 [style = bold, label=""];
41->30 [style = bold, label=""];
43->33 [style = solid, label="target"];
31->20 [style = solid, label="routing"];
9->10 [style = solid, label="future"];
43->33 [style = bold, label=""];
23->2 [style = solid, label="target"];
27->29 [style = bold, label=""];
45->15 [style = solid, label="source"];
38->17 [style = bold, label=""];
2->3 [style = solid, label="target"];
10->18 [style = bold, label=""];
12->45 [style = dashed, label="0"];
8->41 [style = bold, label=""];
5->44 [style = solid, label="target"];
20->10 [style = solid, label="routing"];
5->22 [style = solid, label="target"];
3->42 [style = bold, label=""];
4->7 [style = bold, label=""];
5->19 [style = bold, label=""];
18->6 [style = bold, label=""];
39->36 [style = solid, label="future"];
16->31 [style = bold, label=""];
26->17 [style = dotted, label="true"];
34->16 [style = bold, label=""];
37->44 [style = bold, label=""];
36->8 [style = bold, label=""];
30->0 [style = bold, label=""];
45->16 [style = solid, label="source"];
23->25 [style = solid, label="target"];
28->38 [style = dashed, label="0"];
24->9 [style = bold, label=""];
2->20 [style = solid, label="snapshot"];
28->15 [style = bold, label=""];
45->17 [style = solid, label="source"];
31->24 [style = solid, label="routing"];
20->5 [style = solid, label="routing"];
29->25 [style = bold, label=""];
5->42 [style = solid, label="target"];
7->3 [style = bold, label=""];
20->5 [style = bold, label=""];
15->26 [style = bold, label=""];
14->31 [style = solid, label="routing"];
31->2 [style = solid, label="routing"];
12->15 [style = solid, label="source"];
25->11 [style = bold, label=""];
0->22 [style = bold, label=""];
6->8 [style = bold, label=""];
8->21 [style = bold, label=""];
12->23 [style = bold, label=""];
40->45 [style = bold, label=""];
12->13 [style = solid, label="source"];
39->36 [style = bold, label=""];
9->10 [style = solid, label="localNode"];
13->28 [style = bold, label=""];
34->27 [style = bold, label=""];
}
