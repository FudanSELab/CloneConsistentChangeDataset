digraph {
9 [style = filled, label = "NoneLeafRel leafRel = new NoneLeafRel(cluster,\"a\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(sort(buf),equalTo(sort(\"NoneSingleRel:Subset#0.NONE.((\",\"PhysSingleRel:Subset#0.PHYS.(0(\",\"PhysSingleRel:Subset#0.PHYS.((\")))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testSetMergeMatchSubsetRule['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "RelNode result = planner.chooseDelegate().findBestExp()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "VolcanoPlanner planner = new VolcanoPlanner()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "planner.setRoot(convertedRel)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "planner.addRule(new PhysSingleInputSetMergeRule())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "planner.addRelTraitDef(ConventionTraitDef.INSTANCE)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RelNode convertedRel = planner.changeTraits(singleRel,cluster.traitSetOf(PHYS_CALLING_CONVENTION))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "planner.setRoot(convertedRel)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "planner.addRule(new PhysLeafRule())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RelOptCluster cluster = newCluster(planner)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "planner.addRule(new PhysSingleSubsetRule(buf))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "planner.addRule(new GoodSingleRule())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "planner.addRelTraitDef(RelCollationTraitDef.INSTANCE)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testSetMergeMatchSubsetRule['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(sort(buf),equalTo(sort(\"PhysSingleRel:RelSubset#0.PHYS.((\",\"PhysSingleRel:RelSubset#0.PHYS_3.((\")))@@@18@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "planner.changeTraits(leafRel,cluster.traitSetOf(PHYS_CALLING_CONVENTION).plus(RelCollations.of(0)))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "NoneLeafRel leafRel = new NoneLeafRel(cluster,\"a\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final List<String> buf = new ArrayList<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "planner.addRule(new SubsetRule(buf))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "RelNode convertedRel = planner.changeTraits(singleRel,cluster.traitSetOf(PHYS_CALLING_CONVENTION))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "NoneSingleRel singleRel = new NoneSingleRel(cluster,leafRel)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testSubsetRule['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "NoneSingleRel singleRel = new NoneSingleRel(cluster,leafRel)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(result instanceof PhysSingleRel)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->22 [style = bold, label=""];
22->20 [style = solid, label="singleRel"];
14->16 [style = bold, label=""];
9->8 [style = solid, label="leafRel"];
5->9 [style = solid, label="cluster"];
1->20 [style = dashed, label="0"];
12->21 [style = bold, label=""];
25->14 [style = bold, label=""];
16->15 [style = bold, label=""];
10->21 [style = dashed, label="0"];
0->24 [style = dashed, label="0"];
17->14 [style = bold, label=""];
8->1 [style = solid, label="singleRel"];
22->20 [style = bold, label=""];
5->9 [style = bold, label=""];
14->5 [style = solid, label="planner"];
3->7 [style = bold, label=""];
23->22 [style = solid, label="leafRel"];
15->6 [style = bold, label=""];
2->0 [style = solid, label="result"];
19->13 [style = bold, label=""];
1->11 [style = bold, label=""];
20->19 [style = bold, label=""];
0->24 [style = bold, label=""];
8->1 [style = bold, label=""];
12->24 [style = solid, label="buf"];
13->2 [style = solid, label="result"];
12->10 [style = bold, label=""];
7->12 [style = bold, label=""];
2->18 [style = bold, label=""];
12->21 [style = solid, label="buf"];
3->12 [style = bold, label=""];
5->23 [style = bold, label=""];
5->8 [style = solid, label="cluster"];
6->3 [style = bold, label=""];
21->5 [style = bold, label=""];
1->11 [style = solid, label="convertedRel"];
11->13 [style = bold, label=""];
12->18 [style = solid, label="buf"];
4->14 [style = bold, label=""];
9->23 [style = dashed, label="0"];
2->0 [style = bold, label=""];
5->22 [style = solid, label="cluster"];
9->8 [style = bold, label=""];
23->19 [style = solid, label="leafRel"];
13->2 [style = bold, label=""];
20->13 [style = solid, label="convertedRel"];
0->18 [style = dashed, label="0"];
10->5 [style = bold, label=""];
12->10 [style = solid, label="buf"];
5->23 [style = solid, label="cluster"];
8->22 [style = dashed, label="0"];
12->0 [style = solid, label="buf"];
}
