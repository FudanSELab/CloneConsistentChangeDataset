digraph {
1 [style = filled, label = "i < BatchedPermitsRequester.MAX_RETRIES@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(queue.size(),0)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "BatchedPermitsRequester container = BatchedPermitsRequester.builder().resourceId(\"resource\").requestorIdentifier(\"requestor\").requestSender(new TestRequestSender(queue,false)).maxTimeoutMillis(1000).build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testNonRetriableFail['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Queue<RequestAndCallback> queue = Queues.newArrayDeque()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testRetriableFail['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int i = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertFalse(future.get())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertFalse(future.isDone())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i++@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(queue.size(),0)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "failRequestBuilder().requestAndCallback(queue.poll()).fail()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Future<Boolean> future = requester.request(10)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "await(new QueueSize(queue,1),1000)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "failRequestBuilder().requestAndCallback(queue.poll()).errorStatus(HttpStatus.S_422_UNPROCESSABLE_ENTITY).fail()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "BatchedPermitsRequester container = BatchedPermitsRequester.builder().resourceId(\"resource\").requestorIdentifier(\"requestor\").requestSender(new TestRequestSender(queue,false)).build()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testRetriableFail['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7->13 [style = bold, label=""];
4->14 [style = bold, label=""];
15->10 [style = bold, label=""];
9->0 [style = bold, label=""];
0->1 [style = solid, label="i"];
1->11 [style = dotted, label="true"];
16->7 [style = bold, label=""];
7->6 [style = solid, label="queue"];
1->4 [style = dotted, label="true"];
3->13 [style = dashed, label="0"];
12->7 [style = bold, label=""];
7->3 [style = bold, label=""];
9->6 [style = bold, label=""];
3->9 [style = bold, label=""];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
1->6 [style = bold, label=""];
10->5 [style = bold, label=""];
0->1 [style = bold, label=""];
8->1 [style = solid, label="i"];
11->14 [style = dashed, label="0"];
0->8 [style = solid, label="i"];
1->8 [style = dotted, label="true"];
11->8 [style = bold, label=""];
1->6 [style = dotted, label="true"];
14->15 [style = bold, label=""];
13->9 [style = bold, label=""];
2->7 [style = bold, label=""];
4->11 [style = bold, label=""];
1->10 [style = bold, label=""];
}
