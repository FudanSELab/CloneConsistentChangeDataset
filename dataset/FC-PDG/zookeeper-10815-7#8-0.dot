digraph {
8 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int m@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int n@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "i < clients.length@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(new String(data),testString + (m - 1))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "data = queueHandles(1(.remove()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "int m@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int i = 0@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "queueHandles(1(.remove()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final int numClients = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String dir@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "i < m@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String dir@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "Assert.assertEquals(new String(queueHandles(1(.element()),testString + m)@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertNotNull(data)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "int i = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String offerString = testString + i@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "createNremoveMtest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int n@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "clients(i( = createClient()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(new String(data),testString + (m - 1))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "i++@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "createNremoveMtest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "i < n@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "createNremoveMelementTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String dir@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int n@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertNotNull(data)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "byte(( data = null@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->6 [style = solid, label="i"];
23->24 [style = solid, label="i"];
6->22 [style = bold, label=""];
14->26 [style = solid, label="data"];
24->32 [style = bold, label=""];
29->0 [style = bold, label=""];
0->33 [style = solid, label="testString"];
1->19 [style = solid, label="i"];
9->10 [style = bold, label=""];
14->28 [style = solid, label="data"];
29->20 [style = dotted, label="true"];
3->26 [style = solid, label="data"];
22->4 [style = bold, label=""];
20->35 [style = dashed, label="0"];
24->21 [style = bold, label=""];
22->16 [style = dotted, label="true"];
1->2 [style = solid, label="i"];
25->7 [style = solid, label="n"];
32->18 [style = bold, label=""];
4->16 [style = bold, label=""];
35->24 [style = solid, label="m"];
24->28 [style = bold, label=""];
0->26 [style = solid, label="testString"];
5->26 [style = dashed, label="0"];
16->6 [style = bold, label=""];
18->24 [style = solid, label="i"];
17->7 [style = solid, label="n"];
11->13 [style = dotted, label="true"];
14->5 [style = solid, label="data"];
34->0 [style = bold, label=""];
3->23 [style = bold, label=""];
3->21 [style = solid, label="data"];
34->31 [style = dotted, label="true"];
15->9 [style = bold, label=""];
7->2 [style = bold, label=""];
7->23 [style = bold, label=""];
10->22 [style = solid, label="i"];
20->26 [style = solid, label="m"];
6->22 [style = solid, label="i"];
14->18 [style = bold, label=""];
7->8 [style = dotted, label="true"];
22->4 [style = dotted, label="true"];
24->18 [style = dotted, label="true"];
31->7 [style = solid, label="n"];
7->2 [style = dotted, label="true"];
18->24 [style = bold, label=""];
24->32 [style = dotted, label="true"];
4->16 [style = solid, label="clients"];
0->12 [style = bold, label=""];
11->17 [style = dotted, label="true"];
20->5 [style = solid, label="m"];
28->26 [style = bold, label=""];
19->7 [style = solid, label="i"];
1->7 [style = bold, label=""];
24->33 [style = bold, label=""];
21->5 [style = bold, label=""];
11->20 [style = dotted, label="true"];
14->32 [style = dashed, label="0"];
34->35 [style = dotted, label="true"];
27->16 [style = solid, label="dir"];
22->1 [style = bold, label=""];
13->16 [style = solid, label="dir"];
34->30 [style = dotted, label="true"];
29->25 [style = dotted, label="true"];
10->22 [style = bold, label=""];
24->14 [style = dotted, label="true"];
23->18 [style = solid, label="i"];
7->19 [style = dotted, label="true"];
21->28 [style = dashed, label="0"];
8->19 [style = bold, label=""];
29->27 [style = dotted, label="true"];
12->15 [style = bold, label=""];
0->2 [style = solid, label="testString"];
3->28 [style = solid, label="data"];
22->6 [style = dotted, label="true"];
7->3 [style = bold, label=""];
19->2 [style = solid, label="i"];
24->14 [style = bold, label=""];
3->5 [style = solid, label="data"];
14->21 [style = solid, label="data"];
30->16 [style = solid, label="dir"];
23->24 [style = bold, label=""];
11->0 [style = bold, label=""];
21->33 [style = dashed, label="0"];
0->5 [style = solid, label="testString"];
20->24 [style = solid, label="m"];
35->33 [style = solid, label="m"];
19->7 [style = bold, label=""];
1->7 [style = solid, label="i"];
2->8 [style = bold, label=""];
}
