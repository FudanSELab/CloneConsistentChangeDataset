digraph {
11 [style = filled, label = "i < num_attempts@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String dir = \"/testTakeWait2\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final int num_clients = 1@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "ZooKeeper clients = new ZooKeeper((((@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "offerThread.start()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Thread takeThread = new Thread(){public void run(){try {takeResult(0( = queueHandles(0(.take()}catch (KeeperException e) catch (InterruptedException e) }}@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testTakeWait2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "i < clients.length@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String offerString = testString + i@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i < n@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(takeResult(0( != null)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "int m@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertEquals(new String(takeResult(0(),threadTestString)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assert.assertEquals(new String(queueHandles(1(.element()),testString + m)@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String threadTestString = testString + i@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final String testString = \"Hello World\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final ZooKeeper(( clients = new ZooKeeper((((@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "int i = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i++@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final byte(( takeResult = new byte((((((@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int i = 0@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "String dir@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "DistributedQueue queueHandles = new DistributedQueue((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int num_attempts = 2@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "offerThread.join()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Thread offerThread = new Thread(){public void run(){try {queueHandles(0(.offer(threadTestString.getBytes())}catch (KeeperException e) catch (InterruptedException e) }}@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "data = queueHandles(1(.remove()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "int i = 0@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "i < m@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final DistributedQueue queueHandles = new DistributedQueue((((@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "takeThread.join()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "takeThread.start()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final ZooKeeper clients = new ZooKeeper((((@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "createNremoveMelementTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Thread.sleep(1000)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final DistributedQueue(( queueHandles = new DistributedQueue((((@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "byte data = null@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testTakeWait2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int n@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "clients(i( = createClient()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final int num_clients = 2@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "i++@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->22 [style = solid, label="takeResult"];
20->11 [style = solid, label="i"];
8->16 [style = bold, label=""];
6->3 [style = bold, label=""];
11->20 [style = dashed, label="0"];
5->9 [style = bold, label=""];
25->22 [style = bold, label=""];
39->20 [style = solid, label="i"];
11->1 [style = dotted, label="true"];
29->20 [style = solid, label="n"];
11->12 [style = dotted, label="true"];
35->43 [style = solid, label="testString"];
36->33 [style = bold, label=""];
8->4 [style = dotted, label="true"];
20->17 [style = solid, label="i"];
15->38 [style = dashed, label="0"];
37->43 [style = bold, label=""];
24->26 [style = dashed, label="0"];
20->42 [style = dotted, label="true"];
3->19 [style = bold, label=""];
1->21 [style = bold, label=""];
20->31 [style = dotted, label="true"];
15->0 [style = bold, label=""];
0->24 [style = bold, label=""];
41->4 [style = solid, label="dir"];
4->8 [style = bold, label=""];
23->17 [style = bold, label=""];
14->9 [style = bold, label=""];
9->8 [style = solid, label="i"];
8->4 [style = bold, label=""];
31->20 [style = bold, label=""];
39->31 [style = solid, label="i"];
9->4 [style = solid, label="clients"];
40->41 [style = dotted, label="true"];
5->9 [style = solid, label="i"];
11->7 [style = dotted, label="true"];
33->44 [style = solid, label="i"];
35->17 [style = solid, label="testString"];
17->11 [style = solid, label="i"];
26->14 [style = bold, label=""];
18->12 [style = bold, label=""];
40->30 [style = dotted, label="true"];
42->31 [style = bold, label=""];
0->27 [style = dashed, label="0"];
30->43 [style = solid, label="m"];
21->25 [style = bold, label=""];
9->8 [style = bold, label=""];
12->1 [style = bold, label=""];
17->42 [style = bold, label=""];
22->23 [style = bold, label=""];
4->8 [style = solid, label="i"];
40->29 [style = dotted, label="true"];
44->37 [style = solid, label="i"];
45->14 [style = bold, label=""];
39->17 [style = solid, label="i"];
33->37 [style = solid, label="i"];
38->46 [style = bold, label=""];
10->2 [style = bold, label=""];
14->8 [style = bold, label=""];
44->37 [style = bold, label=""];
13->15 [style = bold, label=""];
11->19 [style = dotted, label="true"];
16->11 [style = solid, label="num_attempts"];
14->4 [style = dotted, label="true"];
14->39 [style = bold, label=""];
16->20 [style = bold, label=""];
39->20 [style = bold, label=""];
27->26 [style = bold, label=""];
40->35 [style = bold, label=""];
20->3 [style = solid, label="i"];
20->17 [style = dotted, label="true"];
2->35 [style = dashed, label="0"];
11->17 [style = dotted, label="true"];
8->14 [style = bold, label=""];
35->32 [style = bold, label=""];
17->3 [style = solid, label="i"];
45->14 [style = solid, label="i"];
13->3 [style = solid, label="testString"];
11->6 [style = dotted, label="true"];
34->44 [style = bold, label=""];
14->8 [style = dotted, label="true"];
7->18 [style = bold, label=""];
8->9 [style = dotted, label="true"];
37->34 [style = dotted, label="true"];
0->46 [style = dashed, label="0"];
33->37 [style = bold, label=""];
31->17 [style = solid, label="i"];
11->3 [style = dotted, label="true"];
4->5 [style = bold, label=""];
37->44 [style = dotted, label="true"];
20->36 [style = bold, label=""];
4->5 [style = solid, label="clients"];
20->11 [style = bold, label=""];
2->5 [style = solid, label="dir"];
20->17 [style = bold, label=""];
3->23 [style = solid, label="threadTestString"];
9->4 [style = bold, label=""];
11->6 [style = bold, label=""];
11->23 [style = dotted, label="true"];
30->37 [style = solid, label="m"];
11->18 [style = dotted, label="true"];
14->8 [style = solid, label="i"];
11->22 [style = dotted, label="true"];
24->14 [style = bold, label=""];
2->13 [style = bold, label=""];
32->38 [style = bold, label=""];
28->2 [style = bold, label=""];
11->25 [style = dotted, label="true"];
8->14 [style = solid, label="i"];
8->5 [style = dotted, label="true"];
37->34 [style = bold, label=""];
46->45 [style = bold, label=""];
14->9 [style = dotted, label="true"];
6->23 [style = solid, label="takeResult"];
11->21 [style = dotted, label="true"];
15->27 [style = bold, label=""];
19->7 [style = bold, label=""];
31->20 [style = solid, label="i"];
17->11 [style = bold, label=""];
}
