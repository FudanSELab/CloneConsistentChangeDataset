digraph {
16 [style = filled, label = "Exception e@@@29@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "InterProcessLock badLock = new InterProcessLock(){@Override public void acquire(){if (goodLock.isAcquiredInThisProcess()) {goodLockWasLocked.set(true)}throw new Exception(\"foo\")}@Override public boolean acquire(long time,TimeUnit unit){throw new Exception(\"foo\")}@Override public void release(){throw new Exception(\"foo\")}@Override public boolean isAcquiredInThisProcess(){return false}}@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "lock.acquire()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "InterProcessLock goodLock = new InterProcessMutex(client,LOCK_PATH_1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "{}@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final InterProcessLock goodLock = new InterProcessMutex(client,LOCK_PATH_1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final InterProcessLock otherGoodLock = new InterProcessMutex(client,LOCK_PATH_2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertFalse(goodLock.isAcquiredInThisProcess())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.fail()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final AtomicBoolean goodLockWasLocked = new AtomicBoolean(false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Exception e@@@29@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertFalse(goodLock.isAcquiredInThisProcess())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "client.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "InterProcessMultiLock lock = new InterProcessMultiLock(Arrays.asList(goodLock,badLock))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{}@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "{client.close()}@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "InterProcessMultiLock lock = new InterProcessMultiLock(Arrays.asList(goodLock,badLock))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testSomeLocksFailToLock['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertTrue(goodLockWasLocked.get())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testSomeReleasesFail['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Exception e@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.fail()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testSomeReleasesFail['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "lock.acquire()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "{TestCleanState.closeAndTestClean(client)}@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
23->25 [style = bold, label=""];
16->11 [style = bold, label=""];
9->17 [style = solid, label="client"];
21->6 [style = bold, label=""];
10->14 [style = bold, label=""];
9->2 [style = bold, label=""];
7->12 [style = bold, label=""];
0->19 [style = bold, label=""];
6->23 [style = bold, label=""];
22->21 [style = bold, label=""];
1->20 [style = bold, label=""];
3->6 [style = bold, label=""];
20->6 [style = bold, label=""];
2->10 [style = bold, label=""];
12->1 [style = bold, label=""];
17->19 [style = solid, label="goodLock"];
1->13 [style = bold, label=""];
0->7 [style = bold, label=""];
6->5 [style = bold, label=""];
19->1 [style = bold, label=""];
0->19 [style = solid, label="badLock"];
17->0 [style = bold, label=""];
14->0 [style = bold, label=""];
13->3 [style = bold, label=""];
11->3 [style = bold, label=""];
15->9 [style = bold, label=""];
10->7 [style = solid, label="goodLock"];
6->23 [style = dashed, label="0"];
24->17 [style = bold, label=""];
0->7 [style = solid, label="badLock"];
18->9 [style = bold, label=""];
9->14 [style = solid, label="client"];
14->17 [style = dashed, label="0"];
9->5 [style = solid, label="client"];
2->24 [style = bold, label=""];
8->11 [style = bold, label=""];
9->10 [style = solid, label="client"];
}
