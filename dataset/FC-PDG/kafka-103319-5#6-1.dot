digraph {
19 [style = filled, label = "assertEquals(2L,info.maxTimestamp)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "builder.append(0L,\"c\".getBytes(),\"3\".getBytes())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "builder.append(0L,\"a\".getBytes(),\"1\".getBytes())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "ByteBuffer buffer = ByteBuffer.allocate(1024)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(1L,info.shallowOffsetOfMaxTimestamp)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "builder.append(2L,0L,\"c\".getBytes(),\"3\".getBytes())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "buildUsingCreateTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "buildUsingLogAppendTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(logAppendTime,info.maxTimestamp)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "long logAppendTime = System.currentTimeMillis()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "MemoryRecords records = builder.build()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(expectedTimestamps(i++(,record.timestamp())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,Record.MAGIC_VALUE_V1,compressionType,TimestampType.CREATE_TIME,0L,logAppendTime,buffer.capacity())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "MemoryRecordsBuilder.RecordsInfo info = builder.info()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "builder.append(0L,0L,\"a\".getBytes(),\"1\".getBytes())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(logAppendTime,record.timestamp())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "builder.append(0L,\"b\".getBytes(),\"2\".getBytes())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "long(( expectedTimestamps = new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b83d4a@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,Record.MAGIC_VALUE_V1,compressionType,TimestampType.LOG_APPEND_TIME,0L,logAppendTime,buffer.capacity())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "builder.append(1L,0L,\"b\".getBytes(),\"2\".getBytes())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "builder.append(1L,2L,\"b\".getBytes(),\"2\".getBytes())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "buffer.position(bufferOffset)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int i = 0@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "buildUsingLogAppendTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "compressionType == CompressionType.NONE@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(TimestampType.CREATE_TIME,record.timestampType())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(TimestampType.LOG_APPEND_TIME,record.timestampType())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "builder.append(2L,1L,\"c\".getBytes(),\"3\".getBytes())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->20 [style = bold, label=""];
15->13 [style = bold, label=""];
28->6 [style = bold, label=""];
2->19 [style = bold, label=""];
0->3 [style = solid, label="logAppendTime"];
12->20 [style = dashed, label="0"];
21->27 [style = bold, label=""];
26->5 [style = bold, label=""];
6->18 [style = bold, label=""];
1->15 [style = dashed, label="0"];
2->3 [style = bold, label=""];
14->5 [style = bold, label=""];
1->29 [style = dashed, label="0"];
3->11 [style = bold, label=""];
0->28 [style = solid, label="logAppendTime"];
11->12 [style = bold, label=""];
16->17 [style = bold, label=""];
5->28 [style = solid, label="buffer"];
12->9 [style = bold, label=""];
24->22 [style = bold, label=""];
20->25 [style = bold, label=""];
1->13 [style = bold, label=""];
4->0 [style = bold, label=""];
10->18 [style = dashed, label="0"];
0->7 [style = bold, label=""];
19->24 [style = bold, label=""];
3->19 [style = dashed, label="0"];
0->7 [style = solid, label="logAppendTime"];
18->29 [style = bold, label=""];
25->20 [style = bold, label=""];
6->16 [style = dashed, label="0"];
8->5 [style = bold, label=""];
22->27 [style = bold, label=""];
24->21 [style = bold, label=""];
7->28 [style = dashed, label="0"];
24->22 [style = dotted, label="true"];
6->10 [style = bold, label=""];
5->4 [style = bold, label=""];
7->16 [style = bold, label=""];
7->6 [style = bold, label=""];
23->25 [style = solid, label="expectedTimestamps"];
17->15 [style = bold, label=""];
10->17 [style = dashed, label="0"];
11->24 [style = dashed, label="0"];
9->25 [style = dashed, label="0"];
27->23 [style = bold, label=""];
9->12 [style = bold, label=""];
0->9 [style = solid, label="logAppendTime"];
5->7 [style = solid, label="buffer"];
10->1 [style = bold, label=""];
27->25 [style = solid, label="i"];
24->21 [style = dotted, label="false"];
0->28 [style = bold, label=""];
13->2 [style = bold, label=""];
29->13 [style = bold, label=""];
}
