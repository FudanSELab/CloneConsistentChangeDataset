digraph {
23 [style = filled, label = "assertEquals(\"job/i/\",result)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "mockStatic()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(view.getItems()).thenReturn(Collections.singletonList(i))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String contextPath = \"/jenkins\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "StaplerRequest req = createMockRequest(contextPath)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(parent.getShortUrl()).thenReturn(\"parent/\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(view.getItems()).thenReturn(Arrays.asList(i))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "testGetRelativeLinkTo_JobContainedInView['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "testGetRelativeLinkTo_JobContainedInViewWithinItemGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testGetRelativeLinkTo_JobContainedInView['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TopLevelItemAndItemGroup parent = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\",\"parent/job/i/\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "createMockAncestors(req,createAncestor(j,\"../../..\"),createAncestor(parent,\"../..\"),createAncestor(view,\".\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(Stapler.getCurrentRequest()).thenReturn(req)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(parent.getItemGroup()).thenReturn(parent)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "View view = mock()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(j.getItemGroup()).thenReturn(j)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(view.getItems()).thenReturn(Arrays.asList(i))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ItemGroup parent = j@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String contextPath = \"/jenkins\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Jenkins j = createMockJenkins()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(view.getOwner()).thenReturn(parent)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "createMockAncestors(req,createAncestor(view,\".\"),createAncestor(j,\"../..\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->1 [style = solid, label="contextPath"];
8->16 [style = bold, label=""];
1->4 [style = bold, label=""];
0->9 [style = bold, label=""];
8->3 [style = solid, label="i"];
12->5 [style = bold, label=""];
8->16 [style = solid, label="i"];
5->23 [style = bold, label=""];
11->14 [style = bold, label=""];
6->20 [style = dashed, label="0"];
24->0 [style = bold, label=""];
9->18 [style = dashed, label="0"];
8->3 [style = bold, label=""];
11->22 [style = dashed, label="0"];
18->19 [style = bold, label=""];
12->5 [style = solid, label="result"];
3->12 [style = bold, label=""];
8->21 [style = dashed, label="0"];
18->22 [style = solid, label="parent"];
0->11 [style = solid, label="j"];
9->8 [style = solid, label="parent"];
2->6 [style = solid, label="view"];
13->1 [style = bold, label=""];
4->7 [style = bold, label=""];
11->20 [style = solid, label="view"];
1->4 [style = solid, label="contextPath"];
21->12 [style = bold, label=""];
20->21 [style = bold, label=""];
21->12 [style = solid, label="i"];
4->2 [style = solid, label="req"];
0->6 [style = solid, label="j"];
19->1 [style = bold, label=""];
1->7 [style = solid, label="req"];
0->9 [style = solid, label="j"];
21->5 [style = solid, label="i"];
7->2 [style = bold, label=""];
18->20 [style = solid, label="parent"];
5->23 [style = solid, label="result"];
10->0 [style = bold, label=""];
6->8 [style = bold, label=""];
15->0 [style = bold, label=""];
11->22 [style = bold, label=""];
22->17 [style = bold, label=""];
14->17 [style = dashed, label="0"];
18->17 [style = solid, label="parent"];
0->18 [style = bold, label=""];
17->20 [style = bold, label=""];
0->20 [style = solid, label="j"];
0->14 [style = solid, label="j"];
18->21 [style = solid, label="parent"];
8->12 [style = solid, label="i"];
1->6 [style = solid, label="req"];
16->12 [style = bold, label=""];
4->20 [style = solid, label="req"];
2->11 [style = bold, label=""];
14->6 [style = bold, label=""];
3->16 [style = dashed, label="0"];
9->13 [style = bold, label=""];
}
