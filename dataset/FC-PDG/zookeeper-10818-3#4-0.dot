digraph {
24 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "ZooKeeper clients = new ZooKeeper((((@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "byte(( data = null@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "final int num_clients = 1@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Assert.assertTrue(takeResult(0( != null)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "i++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "String dir = \"/testTakeWait1\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testTakeWait1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Thread takeThread = new Thread(){public void run(){try {takeResult(0( = queueHandles(0(.take()}catch (KeeperException e) catch (InterruptedException e) }}@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "i < n@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i < clients.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "offerThread.start()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Thread.sleep(1000)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final int num_clients = 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final String testString = \"Hello World\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "offerThread.join()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int m@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "clients(i( = createClient()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "createNremoveMelementTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "Thread offerThread = new Thread(){public void run(){try {queueHandles(0(.offer(testString.getBytes())}catch (KeeperException e) catch (InterruptedException e) }}@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String dir@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(new String(queueHandles(1(.element()),testString + m)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String dir@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "createNremoveMelementTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final ZooKeeper clients = new ZooKeeper((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "i < m@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String offerString = testString + i@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "data = queueHandles(1(.remove()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "takeThread.join()@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "byte data = null@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(new String(takeResult(0(),testString)@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final DistributedQueue queueHandles = new DistributedQueue((((@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "int i = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int n@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final byte(( takeResult = new byte((((((@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DistributedQueue queueHandles = new DistributedQueue((((@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "takeThread.start()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int n@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10->12 [style = solid, label="i"];
12->5 [style = bold, label=""];
11->1 [style = solid, label="i"];
18->5 [style = solid, label="testString"];
6->3 [style = solid, label="n"];
37->4 [style = solid, label="i"];
11->46 [style = bold, label=""];
26->13 [style = dotted, label="true"];
15->9 [style = dotted, label="true"];
38->37 [style = solid, label="dir"];
17->28 [style = dashed, label="0"];
12->20 [style = dotted, label="true"];
10->12 [style = bold, label=""];
18->8 [style = solid, label="testString"];
2->14 [style = bold, label=""];
21->16 [style = bold, label=""];
20->12 [style = solid, label="i"];
12->22 [style = bold, label=""];
10->20 [style = solid, label="i"];
27->7 [style = solid, label="dir"];
0->3 [style = bold, label=""];
13->5 [style = solid, label="m"];
11->7 [style = dotted, label="true"];
1->4 [style = bold, label=""];
7->11 [style = bold, label=""];
11->37 [style = dotted, label="true"];
25->12 [style = solid, label="m"];
3->33 [style = dashed, label="0"];
7->37 [style = bold, label=""];
23->3 [style = bold, label=""];
30->34 [style = bold, label=""];
1->4 [style = dotted, label="true"];
1->0 [style = bold, label=""];
21->32 [style = dashed, label="0"];
1->11 [style = bold, label=""];
38->32 [style = bold, label=""];
15->13 [style = dotted, label="true"];
12->22 [style = dotted, label="true"];
16->41 [style = dashed, label="0"];
21->29 [style = bold, label=""];
22->20 [style = bold, label=""];
39->35 [style = bold, label=""];
46->33 [style = bold, label=""];
2->39 [style = dashed, label="0"];
0->8 [style = solid, label="i"];
2->24 [style = dashed, label="0"];
13->12 [style = solid, label="m"];
3->23 [style = dotted, label="true"];
17->10 [style = bold, label=""];
44->42 [style = bold, label=""];
46->45 [style = solid, label="takeResult"];
26->27 [style = dotted, label="true"];
4->7 [style = solid, label="clients"];
45->36 [style = bold, label=""];
31->38 [style = bold, label=""];
11->4 [style = dotted, label="true"];
4->7 [style = bold, label=""];
7->37 [style = solid, label="clients"];
0->23 [style = solid, label="i"];
25->5 [style = solid, label="m"];
3->28 [style = bold, label=""];
35->1 [style = bold, label=""];
32->36 [style = solid, label="testString"];
3->8 [style = bold, label=""];
0->3 [style = solid, label="i"];
1->11 [style = solid, label="i"];
3->17 [style = bold, label=""];
32->41 [style = bold, label=""];
18->21 [style = bold, label=""];
23->8 [style = solid, label="i"];
40->44 [style = bold, label=""];
4->11 [style = solid, label="i"];
42->43 [style = bold, label=""];
28->10 [style = bold, label=""];
11->1 [style = bold, label=""];
26->25 [style = dotted, label="true"];
13->3 [style = solid, label="n"];
8->19 [style = bold, label=""];
34->45 [style = bold, label=""];
1->11 [style = dotted, label="true"];
16->2 [style = bold, label=""];
18->38 [style = dashed, label="0"];
15->18 [style = bold, label=""];
37->4 [style = bold, label=""];
14->1 [style = bold, label=""];
43->30 [style = bold, label=""];
24->14 [style = bold, label=""];
1->7 [style = dotted, label="true"];
9->7 [style = solid, label="dir"];
3->19 [style = dotted, label="true"];
33->40 [style = bold, label=""];
19->23 [style = bold, label=""];
15->6 [style = dotted, label="true"];
14->1 [style = solid, label="i"];
20->12 [style = bold, label=""];
16->29 [style = dashed, label="0"];
41->39 [style = bold, label=""];
4->11 [style = bold, label=""];
29->24 [style = bold, label=""];
3->8 [style = dotted, label="true"];
11->7 [style = bold, label=""];
7->11 [style = solid, label="i"];
23->3 [style = solid, label="i"];
26->18 [style = bold, label=""];
46->36 [style = solid, label="takeResult"];
}
