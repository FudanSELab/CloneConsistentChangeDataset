digraph {
20 [style = filled, label = "testPeekBrokerEntryMetadata['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "PulsarApi.BrokerEntryMetadata brokerMetadata1 = Commands.parseBrokerEntryMetadataIfExist(dataWithBrokerEntryMetadata)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(brokerMetadata.getIndex(),MOCK_BATCH_SIZE - 1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(bytesBeforePeek,bytesAfterPeek)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "BrokerEntryMetadata brokerMetadata1 = Commands.parseBrokerEntryMetadataIfExist(dataWithBrokerEntryMetadata)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "dataWithBrokerEntryMetadata.readBytes(content)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "PulsarApi.BrokerEntryMetadata brokerMetadata = Commands.parseBrokerEntryMetadataIfExist(dataWithBrokerEntryMetadata)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int MOCK_BATCH_SIZE = 10@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ByteBuf byteBuf = PulsarByteBufAllocator.DEFAULT.buffer(data.length(),data.length())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "BrokerEntryMetadata brokerMetadata = Commands.peekBrokerEntryMetadataIfExist(dataWithBrokerEntryMetadata)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertTrue(brokerMetadata1.getBrokerTimestamp() <= System.currentTimeMillis())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "byteBuf.writeBytes(data.getBytes(StandardCharsets.UTF_8))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testPeekBrokerEntryMetadata['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(data.length(),dataWithBrokerEntryMetadata.readableBytes())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testParseBrokerEntryMetadata['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String data = \"test-message\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(new String(content,StandardCharsets.UTF_8),data)@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ByteBuf dataWithBrokerEntryMetadata = Commands.addBrokerEntryMetadata(byteBuf,getBrokerEntryMetadataInterceptors(),MOCK_BATCH_SIZE)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(brokerMetadata.getBrokerTimestamp() <= System.currentTimeMillis())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "PulsarApi.BrokerEntryMetadata brokerMetadata = Commands.peekBrokerEntryMetadataIfExist(dataWithBrokerEntryMetadata)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "int bytesBeforePeek = dataWithBrokerEntryMetadata.readableBytes()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "byte(( content = new byte((((@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int bytesAfterPeek = dataWithBrokerEntryMetadata.readableBytes()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(brokerMetadata1.getIndex(),MOCK_BATCH_SIZE - 1)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(new String(content,StandardCharsets.UTF_8),data)@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
1->4 [style = bold, label=""];
10->5 [style = solid, label="dataWithBrokerEntryMetadata"];
2->10 [style = solid, label="MOCK_BATCH_SIZE"];
22->2 [style = bold, label=""];
18->8 [style = solid, label="content"];
0->13 [style = bold, label=""];
18->7 [style = solid, label="content"];
10->21 [style = solid, label="dataWithBrokerEntryMetadata"];
24->0 [style = bold, label=""];
2->3 [style = bold, label=""];
2->13 [style = solid, label="MOCK_BATCH_SIZE"];
16->17 [style = bold, label=""];
3->12 [style = bold, label=""];
5->14 [style = bold, label=""];
12->10 [style = solid, label="byteBuf"];
7->8 [style = bold, label=""];
12->6 [style = bold, label=""];
10->23 [style = solid, label="dataWithBrokerEntryMetadata"];
10->19 [style = solid, label="dataWithBrokerEntryMetadata"];
11->2 [style = bold, label=""];
1->9 [style = solid, label="bytesBeforePeek"];
2->0 [style = solid, label="MOCK_BATCH_SIZE"];
19->0 [style = bold, label=""];
4->0 [style = bold, label=""];
20->2 [style = bold, label=""];
10->4 [style = solid, label="dataWithBrokerEntryMetadata"];
13->17 [style = bold, label=""];
23->24 [style = bold, label=""];
3->8 [style = solid, label="data"];
15->9 [style = bold, label=""];
10->23 [style = bold, label=""];
6->10 [style = bold, label=""];
9->21 [style = bold, label=""];
9->5 [style = bold, label=""];
5->21 [style = dashed, label="0"];
4->19 [style = dashed, label="0"];
13->15 [style = bold, label=""];
3->7 [style = solid, label="data"];
15->9 [style = solid, label="bytesAfterPeek"];
18->7 [style = bold, label=""];
1->19 [style = bold, label=""];
10->1 [style = bold, label=""];
2->16 [style = solid, label="MOCK_BATCH_SIZE"];
17->18 [style = solid, label="content"];
1->23 [style = dashed, label="0"];
17->7 [style = solid, label="content"];
17->18 [style = bold, label=""];
21->14 [style = bold, label=""];
}
