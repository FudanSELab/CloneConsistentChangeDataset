digraph {
24 [style = filled, label = "EasyMock.expect(connector.version()).andReturn(\"1.0\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "EasyMock.expect(plugins.newConnector(.getName())).andReturn(connector)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertStatistics(worker,0,0)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "worker.start()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "EasyMock.expect(connector.taskConfigs(2)).andReturn(Arrays.asList(taskProps,taskProps))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "fail(\"Should have thrown exception when trying to add connector with same name.\")@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(1))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "props.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,.getName())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "ConnectException e@@@39@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "worker.stop()@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expectedTaskProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "connector.initialize(anyObject())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "EasyMock.expectLastCall()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "PowerMock.replayAll()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "sinkConnector.start(props)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "sinkConnector.stop()@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "testReconfigureConnectorTasks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "EasyMock.expect(connector.version()).andReturn(\"1.0\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertStatistics(worker,1,0)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(CONNECTOR_ID)),worker.connectorNames())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "Map<String,String> props = new HashMap<>()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "expectFileConfigProvider()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "connector.stop()@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "props.put(ConnectorConfig.TASKS_MAX_CONFIG,\"1\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectedTaskProps.put(SinkTask.TOPICS_CONFIG,\"foo,bar\")@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "worker.herder = herder@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PowerMock.verifyAll()@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore,noneConnectorClientConfigOverridePolicy)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "connector.initialize(anyObject())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "taskProps.put(\"foo\",\"bar\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "ConnectException e@@@45@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
68 [style = filled, label = "EasyMock.expect(sinkConnector.taskConfigs(2)).andReturn(Arrays.asList(taskProps,taskProps))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<String,String> taskProps = new HashMap<>()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(CONNECTOR_ID)),worker.connectorNames())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "expectStartStorage()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(0))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(3)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "EasyMock.expectLastCall()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertStatistics(worker,1,0)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "props.put(ConnectorConfig.NAME_CONFIG,CONNECTOR_ID)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "EasyMock.expect(plugins.newConnector(.getName())).andReturn(sinkConnector)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
76 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(connector)).andReturn(delegatingLoader).times(2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "props.put(SinkConnectorConfig.TOPICS_CONFIG,\"foo,bar\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "ConnectorConfig connConfig = new SinkConnectorConfig(plugins,connProps)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "worker.stopConnector(CONNECTOR_ID)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "expectedTaskProps.put(\"foo\",\"bar\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expectFileConfigProvider()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertStatistics(worker,0,0)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "EasyMock.expectLastCall()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(sinkConnector)).andReturn(delegatingLoader).times(3)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "expectStopStorage()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "EasyMock.expect(sinkConnector.taskClass()).andReturn()@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testReconfigureConnectorTasks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "connector.start(props)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "testStartAndStopConnector['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "MockFileConfigProvider.assertClosed(mockFileProviderTestId)@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "connector.stop()@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "sinkConnector.initialize(anyObject())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "EasyMock.expectLastCall()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "connProps.put(ConnectorConfig.TASKS_MAX_CONFIG,\"2\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ConnectException e@@@45@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "{}@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Map<String,String> expectedTaskProps = new HashMap<>()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(connector)).andReturn(delegatingLoader).times(3)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "List<Map<String,String>> taskConfigs = worker.connectorTaskConfigs(CONNECTOR_ID,connConfig)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(2,taskConfigs.size())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "EasyMock.expectLastCall()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expectConverters()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(2)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37->0 [style = bold, label=""];
12->53 [style = bold, label=""];
13->47 [style = bold, label=""];
11->68 [style = solid, label="taskProps"];
43->15 [style = solid, label="worker"];
64->51 [style = bold, label=""];
51->74 [style = bold, label=""];
43->19 [style = solid, label="worker"];
66->52 [style = bold, label=""];
27->44 [style = bold, label=""];
79->6 [style = bold, label=""];
68->66 [style = bold, label=""];
44->15 [style = bold, label=""];
70->11 [style = bold, label=""];
56->12 [style = bold, label=""];
48->25 [style = solid, label="expectedTaskProps"];
36->33 [style = bold, label=""];
21->28 [style = bold, label=""];
59->69 [style = dashed, label="0"];
54->16 [style = bold, label=""];
43->28 [style = solid, label="worker"];
41->80 [style = dashed, label="0"];
43->35 [style = bold, label=""];
45->68 [style = bold, label=""];
9->78 [style = bold, label=""];
76->81 [style = bold, label=""];
65->69 [style = bold, label=""];
43->5 [style = solid, label="worker"];
42->3 [style = bold, label=""];
3->39 [style = bold, label=""];
25->10 [style = bold, label=""];
4->36 [style = bold, label=""];
62->23 [style = bold, label=""];
60->33 [style = solid, label="props"];
55->31 [style = bold, label=""];
29->51 [style = bold, label=""];
75->0 [style = bold, label=""];
61->27 [style = solid, label="props"];
10->50 [style = bold, label=""];
60->27 [style = solid, label="props"];
61->15 [style = solid, label="props"];
15->50 [style = bold, label=""];
41->37 [style = bold, label=""];
0->73 [style = dashed, label="0"];
30->34 [style = bold, label=""];
81->55 [style = bold, label=""];
31->67 [style = dashed, label="0"];
37->73 [style = bold, label=""];
71->55 [style = bold, label=""];
24->20 [style = bold, label=""];
45->14 [style = bold, label=""];
38->18 [style = bold, label=""];
39->52 [style = bold, label=""];
57->66 [style = dashed, label="0"];
43->50 [style = solid, label="worker"];
14->57 [style = bold, label=""];
78->3 [style = bold, label=""];
28->19 [style = bold, label=""];
11->14 [style = solid, label="taskProps"];
22->54 [style = bold, label=""];
43->34 [style = solid, label="worker"];
53->43 [style = bold, label=""];
2->55 [style = bold, label=""];
73->63 [style = bold, label=""];
46->56 [style = bold, label=""];
6->26 [style = bold, label=""];
36->40 [style = bold, label=""];
52->46 [style = bold, label=""];
9->42 [style = bold, label=""];
60->31 [style = solid, label="props"];
54->16 [style = solid, label="connConfig"];
14->68 [style = dashed, label="0"];
32->27 [style = bold, label=""];
31->49 [style = bold, label=""];
19->17 [style = bold, label=""];
33->5 [style = bold, label=""];
7->77 [style = bold, label=""];
15->22 [style = bold, label=""];
5->32 [style = bold, label=""];
26->41 [style = bold, label=""];
40->33 [style = bold, label=""];
60->61 [style = bold, label=""];
43->10 [style = solid, label="worker"];
16->48 [style = bold, label=""];
55->67 [style = bold, label=""];
63->61 [style = bold, label=""];
61->62 [style = bold, label=""];
74->15 [style = bold, label=""];
60->63 [style = dashed, label="0"];
80->75 [style = bold, label=""];
39->70 [style = dashed, label="0"];
47->8 [style = bold, label=""];
26->80 [style = bold, label=""];
11->45 [style = bold, label=""];
61->33 [style = solid, label="props"];
2->71 [style = dashed, label="0"];
34->7 [style = bold, label=""];
3->70 [style = bold, label=""];
17->30 [style = bold, label=""];
72->6 [style = bold, label=""];
39->11 [style = bold, label=""];
35->4 [style = bold, label=""];
57->52 [style = bold, label=""];
61->31 [style = solid, label="props"];
67->49 [style = bold, label=""];
0->60 [style = bold, label=""];
48->38 [style = bold, label=""];
69->71 [style = bold, label=""];
20->76 [style = bold, label=""];
1->24 [style = bold, label=""];
20->59 [style = bold, label=""];
61->67 [style = solid, label="props"];
18->13 [style = bold, label=""];
23->1 [style = bold, label=""];
59->2 [style = bold, label=""];
58->6 [style = bold, label=""];
20->65 [style = dashed, label="0"];
43->36 [style = solid, label="worker"];
51->15 [style = bold, label=""];
5->27 [style = bold, label=""];
15->54 [style = solid, label="connProps"];
50->21 [style = bold, label=""];
49->9 [style = bold, label=""];
8->25 [style = bold, label=""];
24->65 [style = bold, label=""];
48->8 [style = solid, label="expectedTaskProps"];
}
