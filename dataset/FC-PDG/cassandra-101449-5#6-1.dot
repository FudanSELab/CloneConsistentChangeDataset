digraph {
0 [style = filled, label = "expectedResult.put(address02,transientReplica(address02,nineToken,elevenToken))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveBackward().left,constructTMDsMoveBackward(),expectedResult.asImmutableView())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testMoveBackwardCalculateRangesToStreamWithPreferredEndpoints['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "DatabaseDescriptor.setTransientReplicationEnabledUnsafe(true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testMoveForwardBetweenCalculateRangesToStreamWithPreferredEndpoints['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "RangesByEndpoint.Mutable expectedResult = new RangesByEndpoint.Mutable()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expectedResult.put(address02,fullReplica(address02,elevenToken,oneToken))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RangesByEndpoint.Builder expectedResult = new RangesByEndpoint.Builder()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveForwardBetween().left,constructTMDsMoveForwardBetween(),expectedResult.build())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveForwardBetween().left,constructTMDsMoveForwardBetween(),expectedResult.asImmutableView())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "expectedResult.put(address04,transientReplica(address04,twoToken,threeToken))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expectedResult.put(address03,fullReplica(address03,twoToken,threeToken))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testMoveForwardBetweenCalculateRangesToStreamWithPreferredEndpoints['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
6->3 [style = bold, label=""];
2->11 [style = dashed, label="0"];
4->9 [style = dashed, label="0"];
3->5 [style = bold, label=""];
7->0 [style = bold, label=""];
5->11 [style = bold, label=""];
4->8 [style = dashed, label="0"];
12->5 [style = bold, label=""];
5->7 [style = dashed, label="0"];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
11->9 [style = bold, label=""];
0->5 [style = dashed, label="0"];
2->4 [style = bold, label=""];
10->12 [style = bold, label=""];
2->8 [style = bold, label=""];
0->2 [style = bold, label=""];
}
