digraph {
13 [style = filled, label = "to.assertComplete()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "cached.take(10).subscribe(ts)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "take['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertFalse(cached.hasObservers())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "take['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ObservableCache<Integer> cached = new ObservableCache<Integer>(Observable.range(1,1000),16)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "take['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "to.assertNoErrors()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "FlowableCache<Integer> cached = new FlowableCache<>(Flowable.range(1,100),16)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "to.assertValues(1,2,3,4,5,6,7,8,9,10)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertFalse(cached.hasSubscribers())@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ts.assertNoErrors()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestObserver<Integer> to = new TestObserver<Integer>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ts.assertValues(1,2,3,4,5,6,7,8,9,10)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ts.assertComplete()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cached.take(10).subscribe(to)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "FlowableCache<Integer> cached = new FlowableCache<Integer>(Flowable.range(1,100),16)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11->16 [style = bold, label=""];
8->10 [style = bold, label=""];
9->0 [style = bold, label=""];
1->14 [style = dashed, label="0"];
3->18 [style = dashed, label="0"];
2->3 [style = bold, label=""];
18->15 [style = bold, label=""];
3->6 [style = bold, label=""];
5->9 [style = dashed, label="0"];
11->12 [style = solid, label="to"];
7->4 [style = bold, label=""];
0->12 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
4->0 [style = solid, label="ts"];
5->0 [style = bold, label=""];
6->15 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
0->1 [style = bold, label=""];
12->14 [style = bold, label=""];
1->2 [style = bold, label=""];
10->9 [style = bold, label=""];
14->13 [style = bold, label=""];
4->11 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
4->5 [style = bold, label=""];
16->12 [style = bold, label=""];
10->0 [style = solid, label="ts"];
13->18 [style = bold, label=""];
17->11 [style = bold, label=""];
}
