digraph {
14 [style = filled, label = "assertEquals(FNAME,beforeUpdate.getProperty(FNAME_KEY))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "executeTarget(\"delete-properties\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Properties beforeUpdate = getTestProperties()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(NEW_FNAME,afterUpdate.getProperty(FNAME_KEY))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testUpdatesExistingProperties['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(NEW_AGE,afterUpdate.getProperty(AGE_KEY))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testDeleteProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(\"Property '\" + LNAME_KEY + \"' should exist before deleting\",LNAME,beforeUpdate.getProperty(LNAME_KEY))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(null,beforeUpdate.getProperty(AGE_KEY))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(NEW_DATE,afterUpdate.getProperty(DATE_KEY))@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "buildRule.executeTarget(\"update-existing-properties\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertNull(\"Property '\" + FNAME_KEY + \"' should be deleted\",afterUpdate.getProperty(FNAME_KEY))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(null,beforeUpdate.getProperty(DATE_KEY))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(null,beforeUpdate.getProperty(PHONE_KEY))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"Property '\" + LNAME_KEY + \"' should exist after deleting\",LNAME,afterUpdate.getProperty(LNAME_KEY))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(EMAIL,beforeUpdate.getProperty(EMAIL_KEY))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(LNAME,beforeUpdate.getProperty(LNAME_KEY))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(NEW_PHONE,afterUpdate.getProperty(PHONE_KEY))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Properties afterUpdate = getTestProperties()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Properties afterUpdate = getTestProperties()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(NEW_EMAIL,afterUpdate.getProperty(EMAIL_KEY))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "executeTarget(\"update-existing-properties\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"Property '\" + FNAME_KEY + \"' should exist before deleting\",FNAME,beforeUpdate.getProperty(FNAME_KEY))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testUpdatesExistingProperties['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertEquals(NEW_LNAME,afterUpdate.getProperty(LNAME_KEY))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->19 [style = bold, label=""];
2->6 [style = bold, label=""];
22->21 [style = bold, label=""];
1->20 [style = bold, label=""];
14->20 [style = dashed, label="0"];
10->17 [style = bold, label=""];
8->21 [style = dashed, label="0"];
9->7 [style = bold, label=""];
12->0 [style = bold, label=""];
0->22 [style = dashed, label="0"];
3->10 [style = bold, label=""];
23->24 [style = bold, label=""];
17->12 [style = bold, label=""];
10->5 [style = bold, label=""];
20->23 [style = bold, label=""];
13->3 [style = bold, label=""];
8->2 [style = bold, label=""];
5->12 [style = bold, label=""];
16->1 [style = bold, label=""];
18->1 [style = bold, label=""];
5->17 [style = dashed, label="0"];
11->13 [style = bold, label=""];
0->8 [style = bold, label=""];
1->14 [style = bold, label=""];
6->9 [style = bold, label=""];
4->11 [style = bold, label=""];
4->23 [style = dashed, label="0"];
19->22 [style = bold, label=""];
14->4 [style = bold, label=""];
15->1 [style = bold, label=""];
}
