digraph {
15 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(10),historyPageFilter.newestOnPage)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "List<ModelObject> itemList = newRuns(1,10)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(6),historyPageFilter.oldestOnPage)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int queueId = 5@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertTrue(historyPageFilter.hasDownPage)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,null,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(5,historyPageFilter.runs.size())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(10),historyPageFilter.newestOnPage)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertFalse(historyPageFilter.hasUpPage)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertFalse(historyPageFilter.hasUpPage)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "queueId--@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(6),historyPageFilter.oldestOnPage)@@@18@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "test_newerThan_near_newest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,8L,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertTrue(historyPageFilter.hasDownPage)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "historyPageFilter.add(itemList)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<ModelObject> itemList = newRuns(6,10)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "test_laterItemsNotEvaluated['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "queueId >= 1@@@6@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(historyPageFilter.hasDownPage)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "itemList.add(new ExplodingMockRun(queueId))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "itemList.add(run)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "test_laterItemsNotEvaluated['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int queueId = 5@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "queueId >= 1@@@9@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "List<ModelObject> itemList = new ArrayList<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assert.assertEquals(5,historyPageFilter.runs.size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "historyPageFilter.add(itemList)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->9 [style = solid, label="queueId"];
11->7 [style = dotted, label="true"];
12->13 [style = solid, label="queueId"];
24->12 [style = bold, label=""];
19->1 [style = solid, label="itemList"];
7->11 [style = bold, label=""];
12->5 [style = bold, label=""];
13->12 [style = dotted, label="true"];
8->19 [style = bold, label=""];
17->9 [style = bold, label=""];
8->3 [style = bold, label=""];
18->15 [style = bold, label=""];
8->20 [style = dashed, label="0"];
0->11 [style = bold, label=""];
2->18 [style = bold, label=""];
9->13 [style = solid, label="queueId"];
11->9 [style = dotted, label="true"];
11->12 [style = bold, label=""];
13->5 [style = dotted, label="true"];
19->17 [style = bold, label=""];
0->7 [style = solid, label="queueId"];
9->7 [style = bold, label=""];
11->9 [style = bold, label=""];
15->16 [style = bold, label=""];
13->1 [style = bold, label=""];
3->0 [style = bold, label=""];
3->19 [style = dashed, label="0"];
6->2 [style = bold, label=""];
3->12 [style = solid, label="itemList"];
3->23 [style = dashed, label="0"];
12->13 [style = bold, label=""];
25->24 [style = bold, label=""];
12->5 [style = solid, label="queueId"];
23->21 [style = solid, label="itemList"];
1->6 [style = bold, label=""];
20->23 [style = bold, label=""];
10->8 [style = bold, label=""];
23->21 [style = bold, label=""];
5->12 [style = bold, label=""];
22->27 [style = bold, label=""];
21->22 [style = bold, label=""];
0->11 [style = solid, label="queueId"];
5->4 [style = bold, label=""];
9->12 [style = solid, label="queueId"];
13->5 [style = bold, label=""];
4->1 [style = bold, label=""];
14->8 [style = bold, label=""];
0->9 [style = solid, label="queueId"];
7->11 [style = solid, label="queueId"];
27->25 [style = bold, label=""];
9->5 [style = solid, label="queueId"];
26->20 [style = bold, label=""];
9->13 [style = bold, label=""];
}
