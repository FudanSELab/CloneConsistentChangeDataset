digraph {
53 [style = filled, label = "assertEquals(new Long(35L),c.getEndValue(0,1,0))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(50L,c.getStartValue(\"S2\",\"Task 3\",0))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertTrue(c3.getEndValue(1,0,0) == null)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(50L,c.getStartValue(1,2,0))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(36L,c.getStartValue(0,1,1))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "assertEquals(new Long(555),c3.getEndValue(1,1,1))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertEquals(new Long(444),c3.getEndValue(1,1,0))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(new Long(35L),c.getEndValue(\"S1\",\"Task 2\",0))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(new Long(56L),c.getStartValue(\"S2\",\"Task 3\",1))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "assertEquals(new Long(40L),c.getEndValue(0,1,1))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(new Long(50L),c.getStartValue(\"S2\",\"Task 3\",0))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(new Long(33),c3.getStartValue(0,1,1))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "TaskSeriesCollection c = createCollection2()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(36L,c.getStartValue(\"S1\",\"Task 2\",1))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertEquals(new Long(60L),c.getEndValue(\"S2\",\"Task 3\",1))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TaskSeriesCollection c3 = createCollection3()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(66L,c3.getStartValue(1,1,2))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(30L,c.getStartValue(0,1,0))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(16L,c.getStartValue(\"S1\",\"Task 1\",1))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertEquals(new Long(333),c3.getEndValue(0,1,1))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "testGetEndValue2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(new Long(15L),c.getEndValue(\"S1\",\"Task 1\",0))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(new Long(50L),c.getStartValue(1,2,0))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertEquals(new Long(66),c3.getStartValue(1,1,2))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertEquals(new Long(15L),c.getEndValue(0,0,0))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(new Long(10L),c.getStartValue(0,0,0))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertEquals(56L,c.getStartValue(\"S2\",\"Task 3\",1))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(new Long(55),c3.getStartValue(1,1,1))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertEquals(10L,c.getStartValue(\"S1\",\"Task 1\",0))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(new Long(10L),c.getStartValue(\"S1\",\"Task 1\",0))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertEquals(16L,c.getStartValue(0,0,1))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(33L,c3.getStartValue(0,1,1))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(new Long(36L),c.getStartValue(\"S1\",\"Task 2\",1))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(new Long(44),c3.getStartValue(1,1,0))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "assertEquals(new Long(55L),c.getEndValue(\"S2\",\"Task 3\",0))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(new Long(20L),c.getEndValue(0,0,1))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(new Long(60L),c.getEndValue(1,2,1))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testGetStartValue2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "assertEquals(new Long(20L),c.getEndValue(\"S1\",\"Task 1\",1))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(new Long(16L),c.getStartValue(\"S1\",\"Task 1\",1))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "assertEquals(new Long(666),c3.getEndValue(1,1,2))@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertEquals(new Long(55L),c.getEndValue(1,2,0))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(new Long(11),c3.getStartValue(0,0,0))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertEquals(30L,c.getStartValue(\"S1\",\"Task 2\",0))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(new Long(111),c3.getEndValue(0,0,0))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(new Long(222),c3.getEndValue(0,1,0))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(22L,c3.getStartValue(0,1,0))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertEquals(new Long(40L),c.getEndValue(\"S1\",\"Task 2\",1))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(c3.getStartValue(1,0,0) == null)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testGetStartValue2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(10L,c.getStartValue(0,0,0))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(44L,c3.getStartValue(1,1,0))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(new Long(56L),c.getStartValue(1,2,1))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(new Long(22),c3.getStartValue(0,1,0))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(new Long(36L),c.getStartValue(0,1,1))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(new Long(30L),c.getStartValue(\"S1\",\"Task 2\",0))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertEquals(55L,c3.getStartValue(1,1,1))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(new Long(16L),c.getStartValue(0,0,1))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "assertEquals(11L,c3.getStartValue(0,0,0))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertEquals(56L,c.getStartValue(1,2,1))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(new Long(30L),c.getStartValue(0,1,0))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31->37 [style = bold, label=""];
52->44 [style = bold, label=""];
10->50 [style = dashed, label="0"];
10->38 [style = dashed, label="0"];
16->7 [style = bold, label=""];
55->51 [style = bold, label=""];
44->53 [style = bold, label=""];
26->22 [style = bold, label=""];
8->0 [style = bold, label=""];
7->9 [style = bold, label=""];
15->11 [style = bold, label=""];
17->53 [style = dashed, label="0"];
3->19 [style = bold, label=""];
6->26 [style = dashed, label="0"];
12->24 [style = dashed, label="0"];
13->51 [style = dashed, label="0"];
32->25 [style = bold, label=""];
9->14 [style = bold, label=""];
39->38 [style = bold, label=""];
37->32 [style = bold, label=""];
21->48 [style = dashed, label="0"];
58->59 [style = bold, label=""];
46->50 [style = bold, label=""];
8->39 [style = bold, label=""];
2->22 [style = dashed, label="0"];
4->23 [style = dashed, label="0"];
43->58 [style = bold, label=""];
6->47 [style = dashed, label="0"];
45->41 [style = bold, label=""];
11->16 [style = bold, label=""];
35->31 [style = bold, label=""];
12->21 [style = bold, label=""];
25->36 [style = bold, label=""];
30->27 [style = bold, label=""];
24->40 [style = bold, label=""];
9->45 [style = dashed, label="0"];
50->49 [style = bold, label=""];
20->29 [style = dashed, label="0"];
29->26 [style = bold, label=""];
6->2 [style = bold, label=""];
7->33 [style = bold, label=""];
60->57 [style = bold, label=""];
5->27 [style = dashed, label="0"];
20->49 [style = dashed, label="0"];
18->4 [style = bold, label=""];
11->58 [style = dashed, label="0"];
42->56 [style = bold, label=""];
17->15 [style = bold, label=""];
33->30 [style = bold, label=""];
34->35 [style = bold, label=""];
53->43 [style = bold, label=""];
27->18 [style = bold, label=""];
1->8 [style = bold, label=""];
59->7 [style = bold, label=""];
3->35 [style = dashed, label="0"];
18->23 [style = bold, label=""];
56->60 [style = bold, label=""];
5->42 [style = dashed, label="0"];
15->43 [style = dashed, label="0"];
15->32 [style = dashed, label="0"];
16->59 [style = dashed, label="0"];
5->18 [style = bold, label=""];
19->17 [style = bold, label=""];
51->52 [style = bold, label=""];
2->55 [style = dashed, label="0"];
54->8 [style = bold, label=""];
28->8 [style = bold, label=""];
11->25 [style = dashed, label="0"];
16->36 [style = dashed, label="0"];
4->12 [style = bold, label=""];
0->46 [style = dashed, label="0"];
13->34 [style = dashed, label="0"];
14->41 [style = dashed, label="0"];
14->5 [style = bold, label=""];
19->31 [style = dashed, label="0"];
3->52 [style = dashed, label="0"];
10->20 [style = bold, label=""];
18->56 [style = dashed, label="0"];
38->29 [style = bold, label=""];
12->57 [style = dashed, label="0"];
20->6 [style = bold, label=""];
0->39 [style = dashed, label="0"];
9->33 [style = dashed, label="0"];
2->13 [style = bold, label=""];
49->47 [style = bold, label=""];
7->45 [style = bold, label=""];
57->48 [style = bold, label=""];
19->44 [style = dashed, label="0"];
8->46 [style = bold, label=""];
0->10 [style = bold, label=""];
23->24 [style = bold, label=""];
47->55 [style = bold, label=""];
13->3 [style = bold, label=""];
4->60 [style = dashed, label="0"];
36->7 [style = bold, label=""];
22->34 [style = bold, label=""];
14->30 [style = dashed, label="0"];
21->40 [style = dashed, label="0"];
17->37 [style = dashed, label="0"];
41->42 [style = bold, label=""];
}
