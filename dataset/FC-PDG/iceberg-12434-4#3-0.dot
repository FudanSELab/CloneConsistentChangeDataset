digraph {
23 [style = filled, label = "List<ParquetValueReader<?>> fieldReaders@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int fieldD = type.getMaxDefinitionLevel(path(fieldType.getName())) - 1@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Map<Integer,ParquetValueReader<?>> readersById = Maps.newHashMap()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "partitionValues.containsKey(id)@@@20@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "int id = fieldType.getId().intValue()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "GroupType struct@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ParquetValueReader<?> reader = readersById.get(id)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Type fieldType = fields.get(i)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "reorderedFields.add(reader)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i += 1@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Map<Integer,Type> typesById = Maps.newHashMap()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "reorderedFields.add(ParquetValueReaders.nulls())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "types.add(typesById.get(id))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Types.StructType expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "struct['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return new TupleReader(types,reorderedFields,partitionValues)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Types.StructType expected@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "struct['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "GroupType struct@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "List<Type> types = Lists.newArrayListWithExpectedSize(expectedFields.size())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "types.add(null)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<Type> fields = struct.getFields()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "reorderedFields.add(ParquetValueReaders.constant(partitionValues.get(id)))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "reader != null@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "List<ParquetValueReader<?>> reorderedFields = Lists.newArrayListWithExpectedSize(expectedFields.size())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "return new RecordReader(types,reorderedFields,avroSchema)@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "readersById.put(id,option(fieldType,fieldD,fieldReaders.get(i)))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "int fieldD = type.getMaxDefinitionLevel(path(fieldType.getName())) - 1@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "List<ParquetValueReader<?>> fieldReaders@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "int id = field.fieldId()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "return new TupleReader(types,reorderedFields)@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "List<Types.NestedField> expectedFields = expected != null? expected.fields(): ImmutableList.of()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Schema avroSchema = avroSchemas.get(expected)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "typesById.put(id,fieldType)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "struct['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "types.add(null)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "i < fields.size()@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "GroupType struct@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12->13 [style = solid, label="fieldD"];
32->4 [style = dotted, label="false"];
32->22 [style = dotted, label="false"];
9->36 [style = dashed, label="0"];
32->22 [style = bold, label=""];
16->0 [style = bold, label=""];
12->35 [style = dashed, label="0"];
16->13 [style = dotted, label="true"];
14->17 [style = bold, label=""];
21->24 [style = bold, label=""];
7->8 [style = bold, label=""];
33->0 [style = solid, label="expected"];
6->29 [style = bold, label=""];
22->4 [style = bold, label=""];
23->0 [style = solid, label="expected"];
20->16 [style = bold, label=""];
31->28 [style = dotted, label="true"];
0->25 [style = bold, label=""];
37->38 [style = bold, label=""];
7->36 [style = solid, label="types"];
11->13 [style = bold, label=""];
20->1 [style = solid, label="i"];
16->5 [style = dotted, label="true"];
1->12 [style = bold, label=""];
8->24 [style = solid, label="id"];
4->24 [style = dotted, label="true"];
35->13 [style = solid, label="fieldD"];
31->14 [style = bold, label=""];
5->16 [style = solid, label="i"];
4->19 [style = dotted, label="false"];
12->11 [style = bold, label=""];
4->19 [style = bold, label=""];
2->0 [style = solid, label="expected"];
4->21 [style = bold, label=""];
11->13 [style = solid, label="id"];
1->35 [style = bold, label=""];
19->6 [style = bold, label=""];
25->7 [style = bold, label=""];
32->26 [style = bold, label=""];
8->22 [style = bold, label=""];
31->30 [style = dotted, label="true"];
18->20 [style = bold, label=""];
26->27 [style = bold, label=""];
16->1 [style = dotted, label="true"];
25->29 [style = solid, label="reorderedFields"];
31->23 [style = dotted, label="true"];
7->29 [style = solid, label="types"];
8->32 [style = solid, label="id"];
13->15 [style = bold, label=""];
24->8 [style = bold, label=""];
27->29 [style = bold, label=""];
16->11 [style = dotted, label="true"];
27->8 [style = bold, label=""];
3->23 [style = dotted, label="true"];
16->35 [style = dotted, label="true"];
3->10 [style = dotted, label="true"];
5->13 [style = solid, label="i"];
18->0 [style = solid, label="fields"];
7->9 [style = solid, label="types"];
20->13 [style = solid, label="i"];
22->21 [style = solid, label="reader"];
5->16 [style = bold, label=""];
4->21 [style = dotted, label="true"];
8->22 [style = solid, label="id"];
11->15 [style = solid, label="id"];
16->1 [style = bold, label=""];
20->16 [style = solid, label="i"];
37->34 [style = dotted, label="true"];
8->26 [style = solid, label="id"];
24->9 [style = bold, label=""];
16->15 [style = dotted, label="true"];
25->9 [style = solid, label="reorderedFields"];
37->33 [style = dotted, label="true"];
1->15 [style = solid, label="fieldType"];
16->12 [style = dotted, label="true"];
38->36 [style = solid, label="avroSchema"];
22->4 [style = solid, label="reader"];
8->32 [style = bold, label=""];
3->14 [style = bold, label=""];
24->29 [style = bold, label=""];
5->1 [style = solid, label="i"];
33->38 [style = solid, label="expected"];
6->36 [style = bold, label=""];
4->6 [style = dotted, label="false"];
15->5 [style = bold, label=""];
38->14 [style = bold, label=""];
24->36 [style = bold, label=""];
32->27 [style = dotted, label="true"];
25->36 [style = solid, label="reorderedFields"];
6->8 [style = bold, label=""];
32->26 [style = dotted, label="true"];
37->23 [style = dotted, label="true"];
6->9 [style = bold, label=""];
17->18 [style = bold, label=""];
3->2 [style = dotted, label="true"];
1->13 [style = solid, label="fieldType"];
35->11 [style = bold, label=""];
}
