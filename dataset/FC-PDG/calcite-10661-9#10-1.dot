digraph {
3 [style = filled, label = "int i = 1@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "checkJoinNWay['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final StringBuilder buf = new StringBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int i = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(toString(transform),containsString(\"EnumerableJoin(condition=(=($0, $5)(, joinType=(inner()\"))@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RelNode convert = planner.rel(validate).project()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int n@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "i++@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "RelTraitSet traitSet = planner.getEmptyTraitSet().replace(EnumerableConvention.INSTANCE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "buf.append(\"select *\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SqlNode parse = planner.parse(buf.toString())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i < n@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Planner planner = getPlanner(null,Programs.heuristicJoinOrder(Programs.RULE_SET,false,6))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "checkJoinNWay['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "RelNode convert = planner.rel(validate).rel@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "buf.append(i == 0? \"from \": \", \").append(\"\"depts\" as d\").append(i)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String sql@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(toString(transform),containsString(expected))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "checkHeuristic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "RelTraitSet traitSet = planner.getEmptyTraitSet().replace(EnumerableConvention.INSTANCE)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "i++@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Planner planner = getPlanner(null,Programs.heuristicJoinOrder(Programs.RULE_SET,false,0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "SqlNode parse = planner.parse(sql)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i < n@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "buf.append(i == 1? \"where\": \"and\").append(\" d\").append(i).append(\".\"deptno\" = d\").append(i - 1).append(\".\"deptno\"\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->25 [style = solid, label="transform"];
18->3 [style = bold, label=""];
7->11 [style = bold, label=""];
11->20 [style = dashed, label="0"];
8->4 [style = solid, label="n"];
29->30 [style = bold, label=""];
2->6 [style = bold, label=""];
6->18 [style = bold, label=""];
1->15 [style = bold, label=""];
22->24 [style = solid, label="parse"];
4->0 [style = dotted, label="true"];
4->13 [style = bold, label=""];
10->17 [style = solid, label="transform"];
16->7 [style = bold, label=""];
29->28 [style = solid, label="convert"];
7->10 [style = solid, label="convert"];
15->16 [style = solid, label="parse"];
10->17 [style = bold, label=""];
24->29 [style = bold, label=""];
7->20 [style = bold, label=""];
0->4 [style = solid, label="i"];
26->22 [style = solid, label="sql"];
8->18 [style = solid, label="n"];
15->16 [style = bold, label=""];
3->4 [style = bold, label=""];
27->25 [style = solid, label="expected"];
18->14 [style = dotted, label="true"];
19->8 [style = dotted, label="true"];
17->25 [style = dashed, label="0"];
3->4 [style = solid, label="i"];
20->10 [style = bold, label=""];
9->8 [style = dotted, label="true"];
3->0 [style = solid, label="i"];
6->18 [style = solid, label="i"];
19->5 [style = bold, label=""];
4->13 [style = dotted, label="true"];
5->2 [style = bold, label=""];
23->26 [style = dotted, label="true"];
18->12 [style = dotted, label="true"];
30->28 [style = bold, label=""];
12->14 [style = solid, label="i"];
23->21 [style = bold, label=""];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
21->22 [style = bold, label=""];
14->12 [style = bold, label=""];
12->18 [style = bold, label=""];
23->27 [style = dotted, label="true"];
24->29 [style = solid, label="validate"];
9->5 [style = bold, label=""];
28->25 [style = bold, label=""];
8->27 [style = dashed, label="0"];
11->10 [style = solid, label="traitSet"];
7->29 [style = dashed, label="0"];
4->1 [style = bold, label=""];
22->24 [style = bold, label=""];
6->12 [style = solid, label="i"];
12->18 [style = solid, label="i"];
20->10 [style = solid, label="traitSet"];
18->14 [style = bold, label=""];
6->14 [style = solid, label="i"];
30->28 [style = solid, label="traitSet"];
13->0 [style = bold, label=""];
}
