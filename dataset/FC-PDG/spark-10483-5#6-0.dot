digraph {
16 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.threshold()).equals(0.4))@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assert(foundNonZero)@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "LogisticRegression parent = model.parent()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "LogisticRegression parent2 = model2.parent()@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "LinearRegressionModel model2 = lr.fit(dataset,lr.maxIter().w(5),lr.regParam().w(0.1),lr.predictionCol().w(\"thePred\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assert(r.getDouble(0) == 0.0)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assert(parent.getMaxIter() == 10)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assert(parent.getThreshold() == 0.6)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "model.transform(dataset).registerTempTable(\"predAllZero\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assert(model2.getThreshold() == 0.4)@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "linearRegressionWithSetters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "DataFrame predNotAllZero = jsql.sql(\"SELECT prediction, myProb FROM predNotAllZero\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assert(model2.getProbabilityCol().equals(\"theProb\"))@@@27@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "model.transform(dataset,model.threshold().w(0.0),model.probabilityCol().w(\"myProb\")).registerTempTable(\"predNotAllZero\")@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assert(model.getThreshold() == 0.6)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "LogisticRegressionModel model2 = lr.fit(dataset,lr.maxIter().w(5),lr.regParam().w(0.1),lr.threshold().w(0.4),lr.probabilityCol().w(\"theProb\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assert(r.getDouble(0) == 0.0)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assert(foundNonZero)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "foundNonZero = true@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "LinearRegression lr = new LinearRegression().setMaxIter(10).setRegParam(1.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assert(parent.getRegParam() == 1.0)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "assert(parent2.getMaxIter() == 5)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "model.transform(dataset,model.threshold().w(0.0),model.probabilityCol().w(\"myProb\")).registerTempTable(\"predNotAllZero\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "foundNonZero = true@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "DataFrame predAllZero = jsql.sql(\"SELECT prediction, myProbability FROM predAllZero\")@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "assert(model2.getPredictionCol().equals(\"thePred\"))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assert(model.getThreshold() == 0.6)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assert(parent2.getThreshold() == 0.4)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "logisticRegressionWithSetters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "logisticRegressionWithSetters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "LogisticRegression lr = new LogisticRegression().setMaxIter(10).setRegParam(1.0).setThreshold(0.6).setProbabilityCol(\"myProbability\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "LinearRegressionModel model = lr.fit(dataset)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "boolean foundNonZero = false@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "LogisticRegressionModel model = lr.fit(dataset)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "r.getDouble(0) != 0.0@@@20@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.regParam()).equals(0.1))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assert(model2.getThreshold() == 0.4)@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "model.setThreshold(1.0)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assert(model.fittingParamMap().apply(lr.threshold()).equals(0.6))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assert(parent2.getRegParam() == 0.1)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.maxIter()).equals(5))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assert(model2.getProbabilityCol().equals(\"theProb\"))@@@29@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.regParam()).equals(0.1))@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assert(model.fittingParamMap().apply(lr.maxIter()).equals(10))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assert(model.fittingParamMap().apply(lr.regParam()).equals(1.0))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "r.getDouble(0) != 0.0@@@19@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22->2 [style = bold, label=""];
42->39 [style = bold, label=""];
21->3 [style = bold, label=""];
41->40 [style = bold, label=""];
16->45 [style = dashed, label="0"];
4->7 [style = bold, label=""];
43->6 [style = bold, label=""];
14->18 [style = bold, label=""];
30->21 [style = bold, label=""];
8->0 [style = bold, label=""];
30->36 [style = dotted, label="true"];
36->30 [style = bold, label=""];
2->13 [style = bold, label=""];
11->0 [style = bold, label=""];
16->19 [style = bold, label=""];
26->20 [style = bold, label=""];
15->4 [style = bold, label=""];
40->45 [style = bold, label=""];
13->6 [style = bold, label=""];
39->43 [style = bold, label=""];
9->15 [style = bold, label=""];
8->37 [style = bold, label=""];
25->38 [style = bold, label=""];
13->31 [style = bold, label=""];
37->21 [style = solid, label="foundNonZero"];
2->39 [style = dashed, label="0"];
0->11 [style = bold, label=""];
31->33 [style = solid, label="parent"];
33->28 [style = bold, label=""];
3->1 [style = bold, label=""];
23->26 [style = bold, label=""];
14->44 [style = bold, label=""];
36->21 [style = bold, label=""];
31->35 [style = bold, label=""];
6->14 [style = bold, label=""];
7->12 [style = bold, label=""];
37->30 [style = bold, label=""];
28->24 [style = bold, label=""];
5->21 [style = bold, label=""];
11->5 [style = solid, label="foundNonZero"];
19->17 [style = bold, label=""];
18->10 [style = bold, label=""];
44->41 [style = bold, label=""];
13->43 [style = dashed, label="0"];
0->11 [style = dotted, label="true"];
35->23 [style = bold, label=""];
36->21 [style = solid, label="foundNonZero"];
29->12 [style = bold, label=""];
34->2 [style = bold, label=""];
24->25 [style = bold, label=""];
20->9 [style = bold, label=""];
15->32 [style = bold, label=""];
0->5 [style = bold, label=""];
1->16 [style = bold, label=""];
32->29 [style = bold, label=""];
12->8 [style = bold, label=""];
30->36 [style = bold, label=""];
38->27 [style = bold, label=""];
11->5 [style = bold, label=""];
3->33 [style = bold, label=""];
8->5 [style = solid, label="foundNonZero"];
10->20 [style = bold, label=""];
}
