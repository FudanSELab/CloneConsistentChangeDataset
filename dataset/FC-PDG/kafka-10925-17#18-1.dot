digraph {
9 [style = filled, label = "threadIdTagKey = StreamsConfig.METRICS_0100_TO_24.equals(builtInMetricsVersion)? THREAD_ID_TAG_KEY_FROM_0100_TO_24: THREAD_ID_TAG_KEY@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "before['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "tags = mkMap(mkEntry(THREAD_ID_TAG_KEY,threadId),mkEntry(\"task-id\",taskId.toString()),mkEntry(STORE_TYPE + \"-state-id\",STORE_NAME))@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "store = new MeteredSessionStore<>(innerStore,STORE_TYPE,Serdes.String(),Serdes.String(),mockTime)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expect(inner.name()).andStubReturn(STORE_NAME)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",builtInMetricsVersion,mockTime))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "tags = mkMap(mkEntry(threadIdTagKey,threadId),mkEntry(\"task-id\",taskId.toString()),mkEntry(STORE_TYPE + \"-state-id\",STORE_NAME))@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expect(innerStore.name()).andStubReturn(STORE_NAME)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "metrics.config().recordLevel(Sensor.RecordingLevel.DEBUG)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expect(context.changelogFor(STORE_NAME)).andStubReturn(CHANGELOG_TOPIC)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "metered = new MeteredKeyValueStore<>(inner,STORE_TYPE,mockTime,Serdes.String(),Serdes.String())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "expect(context.applicationId()).andStubReturn(APPLICATION_ID)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expect(context.taskId()).andStubReturn(taskId)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "before['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "before['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",StreamsConfig.METRICS_LATEST,mockTime))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "expect(context.metrics()).andStubReturn(new StreamsMetricsImpl(metrics,\"test\",builtInMetricsVersion,mockTime))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "storeLevelGroup = StreamsConfig.METRICS_0100_TO_24.equals(builtInMetricsVersion)? STORE_LEVEL_GROUP_FROM_0100_TO_24: STORE_LEVEL_GROUP@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Time mockTime = new MockTime()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->5 [style = solid, label="threadIdTagKey"];
8->10 [style = bold, label=""];
16->8 [style = bold, label=""];
2->1 [style = bold, label=""];
4->15 [style = bold, label=""];
10->17 [style = bold, label=""];
4->2 [style = bold, label=""];
11->17 [style = dashed, label="0"];
11->12 [style = dashed, label="0"];
7->3 [style = solid, label="mockTime"];
12->0 [style = bold, label=""];
7->3 [style = bold, label=""];
1->9 [style = bold, label=""];
7->17 [style = solid, label="mockTime"];
14->7 [style = bold, label=""];
2->13 [style = bold, label=""];
2->15 [style = dashed, label="0"];
11->0 [style = bold, label=""];
17->0 [style = bold, label=""];
0->4 [style = bold, label=""];
10->12 [style = bold, label=""];
15->1 [style = bold, label=""];
3->8 [style = bold, label=""];
7->16 [style = bold, label=""];
7->11 [style = solid, label="mockTime"];
9->5 [style = bold, label=""];
6->7 [style = bold, label=""];
18->7 [style = bold, label=""];
7->16 [style = solid, label="mockTime"];
7->12 [style = solid, label="mockTime"];
3->16 [style = dashed, label="0"];
10->11 [style = bold, label=""];
}
