digraph {
37 [style = filled, label = "assertThat(predicates.pulledUpPredicates.size(),is(1))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(call.getOperands().size(),is(2))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(inputRef1.getQualifiedName().equals(EMP_QNAME))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String sql = \"select a, max(b) from (\" + \" select 1 as a, 2 as b from emp)subq\" + \"group by a\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(predicates.pulledUpPredicates.size(),is(2))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertThat(predicates.pulledUpPredicates.isEmpty(),is(true))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "relBuilder.push(deptScan)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ImmutableList<RexNode> pulledUpPredicates = inputSet.pulledUpPredicates@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(inputRef2.getQualifiedName().equals(ImmutableList.of(\"CATALOG\",\"SALES\",\"DEPT\")))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "RexTableInputRef inputRef1 = (RexTableInputRef)call.getOperands().get(0)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "final RelMetadataQuery mq = RelMetadataQuery.instance()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testPullUpPredicatesFromAggregation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "call = (RexCall)predicates.pulledUpPredicates.get(1)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertTrue(inputRef1.getQualifiedName().equals(EMP_QNAME))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final LogicalTableScan empScan = LogicalTableScan.create(cluster,empTable)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Aggregate rel = (Aggregate)convertSql(sql)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final RelBuilder relBuilder = RelBuilder.proto().create(cluster,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "inputRef1 = (RexTableInputRef)call.getOperands().get(0)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "RelOptTable empTable@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "final RelNode filter = relBuilder.peek()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(inputRef1.getIndex(),is(0))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "RelOptTable deptTable@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "RexCall call = (RexCall)predicates.pulledUpPredicates.get(0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final RelMetadataQuery mq = rel.getCluster().getMetadataQuery()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "inputRef1 = (RexTableInputRef)call.getOperands().get(0)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "checkAllPredicates['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "relBuilder.project(relBuilder.field(\"DEPTNO\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "RelOptPredicateList inputSet = mq.getPulledUpPredicates(rel)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final LogicalTableScan deptScan = LogicalTableScan.create(cluster,deptTable)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "RelOptCluster cluster@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertThat(call.getOperands().size(),is(2))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "relBuilder.filter(relBuilder.equals(relBuilder.field(\"EMPNO\"),relBuilder.literal(BigDecimal.ONE)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "call = (RexCall)predicates.pulledUpPredicates.get(0)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "RexTableInputRef inputRef2 = (RexTableInputRef)call.getOperands().get(1)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertThat(call.getOperands().size(),is(2))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(pulledUpPredicates,sortsAs(\"(=($0, 1)(\"))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testPullUpPredicatesFromAggregation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertThat(inputRef1.getIndex(),is(0))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(inputRef2.getIndex(),is(0))@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "relBuilder.join(JoinRelType.INNER,relBuilder.equals(relBuilder.field(2,0,\"DEPTNO\"),relBuilder.field(2,1,\"DEPTNO\")))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "predicates = mq.getAllPredicates(filter)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "relBuilder.push(empScan)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "RelOptPredicateList predicates = mq.getAllPredicates(empScan)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "predicates = mq.getAllPredicates(project)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(inputRef1.getIndex(),is(7))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final RelNode project = relBuilder.peek()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(inputRef1.getQualifiedName().equals(EMP_QNAME))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40->32 [style = bold, label=""];
40->32 [style = solid, label="filter"];
43->2 [style = bold, label=""];
29->46 [style = bold, label=""];
24->40 [style = bold, label=""];
39->14 [style = bold, label=""];
4->7 [style = bold, label=""];
11->12 [style = bold, label=""];
41->45 [style = bold, label=""];
28->2 [style = solid, label="cluster"];
21->15 [style = bold, label=""];
19->30 [style = bold, label=""];
44->42 [style = bold, label=""];
20->44 [style = bold, label=""];
14->21 [style = bold, label=""];
18->11 [style = solid, label="deptScan"];
13->23 [style = bold, label=""];
17->19 [style = bold, label=""];
25->26 [style = bold, label=""];
45->10 [style = bold, label=""];
32->37 [style = bold, label=""];
7->6 [style = bold, label=""];
28->23 [style = solid, label="cluster"];
13->28 [style = dotted, label="true"];
1->0 [style = solid, label="pulledUpPredicates"];
38->2 [style = solid, label="empTable"];
29->46 [style = solid, label="project"];
26->27 [style = bold, label=""];
33->18 [style = bold, label=""];
23->43 [style = bold, label=""];
2->35 [style = solid, label="empScan"];
4->6 [style = solid, label="rel"];
8->3 [style = bold, label=""];
4->2 [style = bold, label=""];
12->31 [style = bold, label=""];
27->22 [style = bold, label=""];
2->7 [style = dashed, label="0"];
13->38 [style = dotted, label="true"];
3->4 [style = solid, label="sql"];
34->18 [style = solid, label="deptTable"];
46->17 [style = bold, label=""];
35->36 [style = bold, label=""];
28->18 [style = solid, label="cluster"];
13->34 [style = dotted, label="true"];
15->20 [style = bold, label=""];
18->11 [style = bold, label=""];
2->6 [style = bold, label=""];
36->24 [style = bold, label=""];
2->16 [style = bold, label=""];
5->3 [style = bold, label=""];
31->29 [style = bold, label=""];
16->35 [style = bold, label=""];
37->9 [style = bold, label=""];
10->33 [style = bold, label=""];
42->25 [style = bold, label=""];
2->16 [style = solid, label="empScan"];
6->1 [style = bold, label=""];
3->4 [style = bold, label=""];
9->41 [style = bold, label=""];
1->0 [style = bold, label=""];
30->39 [style = bold, label=""];
}
