digraph {
5 [style = filled, label = "assertTrue(c1.equals(c2))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "s2.add(new Year(2009),1.0,4.0,0.5,2.0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "OHLCSeries s2 = new OHLCSeries(\"S\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "OHLCSeriesCollection c2 = new OHLCSeriesCollection()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int h1 = c1.hashCode()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "OHLCSeriesCollection c1 = new OHLCSeriesCollection()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "c2.addSeries(s2)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "s1.add(new Year(2006),1.0,1.1,1.2,1.3)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"Series\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "OHLCSeriesCollection c2 = (OHLCSeriesCollection)c1.clone()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "int h2 = c2.hashCode()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"S\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "OHLCSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testHashcode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(h1,h2)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "s1.add(new Year(2009),1.0,4.0,0.5,2.0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->0 [style = solid, label="c2"];
0->9 [style = bold, label=""];
20->17 [style = bold, label=""];
7->1 [style = bold, label=""];
21->19 [style = solid, label="h2"];
13->19 [style = solid, label="h1"];
21->19 [style = bold, label=""];
4->0 [style = solid, label="c1"];
1->14 [style = dashed, label="0"];
7->16 [style = dashed, label="0"];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
3->6 [style = solid, label="c2"];
3->10 [style = solid, label="c2"];
3->22 [style = dashed, label="0"];
9->10 [style = bold, label=""];
12->6 [style = solid, label="c2"];
12->0 [style = bold, label=""];
4->7 [style = bold, label=""];
15->5 [style = bold, label=""];
3->0 [style = bold, label=""];
2->12 [style = bold, label=""];
12->0 [style = solid, label="c2"];
4->12 [style = solid, label="c1"];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
18->4 [style = bold, label=""];
22->20 [style = bold, label=""];
3->12 [style = dashed, label="0"];
5->13 [style = bold, label=""];
22->5 [style = solid, label="c2"];
17->15 [style = bold, label=""];
16->2 [style = solid, label="s1"];
16->14 [style = bold, label=""];
1->2 [style = bold, label=""];
14->2 [style = bold, label=""];
8->4 [style = bold, label=""];
7->2 [style = solid, label="s1"];
2->22 [style = bold, label=""];
13->21 [style = bold, label=""];
20->15 [style = solid, label="s2"];
4->16 [style = bold, label=""];
12->10 [style = solid, label="c2"];
}
