digraph {
1 [style = filled, label = "runnableThrows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "runnableThrows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "ScheduledDirectPeriodicTask task = new ScheduledDirectPeriodicTask(new Runnable(){@Override public void run(){throw new TestException()}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNull(task.call())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "TestHelper.assertUndeliverable(errors,0,)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "List<Throwable> errors = TestHelper.trackPluginErrors()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "fail(\"Should have thrown!\")@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "{RxJavaPlugins.reset()}@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ExecutorService exec = Executors.newSingleThreadExecutor()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "InstantPeriodicTask task = new InstantPeriodicTask(new Runnable(){@Override public void run(){throw new TestException()}},exec)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "List<Throwable> errors = TestHelper.trackPluginErrors()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "{exec.shutdownNow()RxJavaPlugins.reset()}@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "taskCrash['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "TestException expected@@@15@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "task.run()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TestHelper.assertUndeliverable(errors,0,)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "{}@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5->2 [style = bold, label=""];
12->14 [style = bold, label=""];
9->2 [style = bold, label=""];
14->13 [style = bold, label=""];
3->11 [style = dashed, label="0"];
8->6 [style = bold, label=""];
5->9 [style = bold, label=""];
3->5 [style = bold, label=""];
6->2 [style = bold, label=""];
13->11 [style = bold, label=""];
11->10 [style = bold, label=""];
7->4 [style = bold, label=""];
14->11 [style = solid, label="exec"];
4->2 [style = solid, label="errors"];
15->16 [style = bold, label=""];
1->4 [style = bold, label=""];
5->10 [style = dashed, label="0"];
2->0 [style = bold, label=""];
10->15 [style = bold, label=""];
13->15 [style = solid, label="errors"];
4->3 [style = bold, label=""];
}
