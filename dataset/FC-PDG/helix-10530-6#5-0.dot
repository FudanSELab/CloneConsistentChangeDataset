digraph {
30 [style = filled, label = "_driver.pollForWorkflowState(queueName,TaskState.STOPPED)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "WorkflowConfig scheduledWorkflowCfg = _driver.getWorkflowConfig(scheduledWorkflow)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "testCreateStoppedQueue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "boolean result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){WorkflowContext wCtx = _driver.getWorkflowContext(queueName)WorkflowContext lastWfCtx = _driver.getWorkflowContext(lastScheduledWorkflow)return (wCtx == null && lastWfCtx == null)}},5 * 1000)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final List<String> scheduledWorkflows = new ArrayList<>(wCtx.getScheduledWorkflows())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "List<String> scheduledWorkflows = new ArrayList<String>(wCtx.getScheduledWorkflows())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "_driver.updateWorkflow(queueName,workflowConfig)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "wCtx = TaskTestUtil.pollForWorkflowContext(_driver,queueName)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertNull(scheduledWorkflowCtx)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "WorkflowConfig workflowConfig = _driver.getWorkflowConfig(queueName)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testDeletingRecurrentQueueWithHistory['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "workflowConfig.putSimpleConfig(WorkflowConfig.WorkflowConfigProperty.RecurrenceInterval.name(),\"\" + intervalSeconds)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "String queueName = TestHelper.getTestMethodName()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "createAndEnqueueJob(queueBuild,2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "JobQueue.Builder queueBuild = TaskTestUtil.buildRecurrentJobQueue(queueName,0,600000,TargetState.STOP)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "_driver.createQueue(queueBuild.build())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "wCtx = TaskTestUtil.pollForWorkflowContext(_driver,queueName)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(workflowConfig.getTargetState(),TargetState.STOP)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertNull(scheduledWorkflowCfg)@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "_driver.stop(queueName)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "LOG.info(\"Starting job-queue: \" + queueName)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "WorkflowContext scheduledWorkflowCtx = _driver.getWorkflowContext(scheduledWorkflow)@@@33@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "_driver.pollForWorkflowState(scheduledQueue,TaskState.COMPLETED)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Thread.sleep(intervalSeconds)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "final String queueName = TestHelper.getTestMethodName()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "WorkflowContext wCtx = TaskTestUtil.pollForWorkflowContext(_driver,queueName)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testDeletingRecurrentQueueWithHistory['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final String lastScheduledWorkflow = wCtx.getLastScheduledSingleWorkflow()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "wCtx.getScheduledWorkflows().size() < 2@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "_driver.resume(queueName)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertFalse(scheduledWorkflows.size() > 2)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "int intervalSeconds = 3@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "_driver.delete(queueName)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertTrue(result)@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "String scheduledQueue = wCtx.getLastScheduledSingleWorkflow()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Thread.sleep(60000)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "JobQueue.Builder queueBuild = TaskTestUtil.buildRecurrentJobQueue(queueName,0,60,TargetState.STOP)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "WorkflowContext wCtx@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->35 [style = bold, label=""];
17->10 [style = solid, label="queueName"];
12->5 [style = bold, label=""];
10->24 [style = bold, label=""];
17->22 [style = solid, label="queueName"];
15->9 [style = solid, label="intervalSeconds"];
17->19 [style = solid, label="queueName"];
18->30 [style = bold, label=""];
19->27 [style = solid, label="result"];
17->0 [style = solid, label="queueName"];
15->5 [style = solid, label="intervalSeconds"];
9->16 [style = bold, label=""];
32->35 [style = solid, label="queueName"];
17->21 [style = solid, label="queueName"];
36->37 [style = solid, label="scheduledQueue"];
15->0 [style = bold, label=""];
21->1 [style = bold, label=""];
12->18 [style = bold, label=""];
8->26 [style = solid, label="scheduledWorkflowCtx"];
34->32 [style = bold, label=""];
17->16 [style = solid, label="queueName"];
0->3 [style = bold, label=""];
8->28 [style = bold, label=""];
12->23 [style = dotted, label="true"];
5->23 [style = dashed, label="0"];
17->7 [style = solid, label="queueName"];
10->19 [style = solid, label="wCtx"];
21->16 [style = solid, label="workflowConfig"];
14->22 [style = dashed, label="0"];
11->12 [style = bold, label=""];
32->13 [style = solid, label="queueName"];
25->7 [style = bold, label=""];
6->2 [style = bold, label=""];
12->11 [style = dotted, label="true"];
28->31 [style = solid, label="scheduledWorkflowCfg"];
17->30 [style = solid, label="queueName"];
35->0 [style = bold, label=""];
17->15 [style = bold, label=""];
30->10 [style = bold, label=""];
32->22 [style = solid, label="queueName"];
5->11 [style = bold, label=""];
36->37 [style = bold, label=""];
22->14 [style = bold, label=""];
17->3 [style = solid, label="queueName"];
17->18 [style = solid, label="queueName"];
27->8 [style = bold, label=""];
19->8 [style = solid, label="result"];
29->17 [style = bold, label=""];
20->13 [style = bold, label=""];
4->17 [style = bold, label=""];
28->26 [style = bold, label=""];
10->6 [style = bold, label=""];
1->9 [style = bold, label=""];
26->31 [style = bold, label=""];
17->0 [style = bold, label=""];
18->10 [style = bold, label=""];
14->23 [style = bold, label=""];
6->19 [style = solid, label="scheduledWorkflows"];
17->11 [style = solid, label="queueName"];
24->25 [style = bold, label=""];
2->25 [style = dashed, label="0"];
0->33 [style = solid, label="queueBuild"];
23->11 [style = bold, label=""];
7->19 [style = bold, label=""];
31->8 [style = bold, label=""];
32->0 [style = solid, label="queueName"];
14->5 [style = bold, label=""];
33->20 [style = bold, label=""];
17->32 [style = dashed, label="0"];
16->22 [style = bold, label=""];
25->19 [style = solid, label="lastScheduledWorkflow"];
19->8 [style = bold, label=""];
1->22 [style = bold, label=""];
3->20 [style = bold, label=""];
0->33 [style = bold, label=""];
12->5 [style = dotted, label="true"];
6->24 [style = dashed, label="0"];
19->27 [style = bold, label=""];
22->36 [style = bold, label=""];
3->20 [style = solid, label="queueBuild"];
12->23 [style = bold, label=""];
32->1 [style = solid, label="queueName"];
2->7 [style = bold, label=""];
3->0 [style = dashed, label="0"];
13->21 [style = bold, label=""];
}
