digraph {
11 [style = filled, label = "f.checkNotImplies(node3,node1)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "f.checkNotImplies(node1,node5)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "final RexNode iLe10 = f.le(f.i,f.literal(10))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "f.checkNotImplies(node2,node1)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "f.checkImplies(iLt10,iLt10)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testSimpleLesserCond['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final RexNode node6 = f.ne(f.i,f.literal(10))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "f.checkImplies(iEq10,iLt30)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "final RexNode node1 = f.eq(f.i,f.literal(30))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "f.checkImplies(iLt10,iLt30)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "final RexNode iLt30 = f.lt(f.i,f.literal(30))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final RexNode node5 = f.eq(f.i,f.literal(10))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "f.checkImplies(node1,node3)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "testSimpleEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final RexNode iEq10 = f.eq(f.i,f.literal(10))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "f.checkNotImplies(iLt10,iNe10)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "final RexNode iNe10 = f.ne(f.i,f.literal(10))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "f.checkImplies(node1,node2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final RexNode node4 = f.le(f.i,f.literal(10))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "final RexNode node3 = f.le(f.i,f.literal(30))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "final RexNode node2 = f.ne(f.i,f.literal(10))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "f.checkNotImplies(node4,node6)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final Fixture f = new Fixture()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "f.checkNotImplies(node1,node6)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "f.checkNotImplies(iLe10,iNe10)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "f.checkNotImplies(node2,node1)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "testSimpleLesserCond['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "final RexNode node1 = f.lt(f.i,f.literal(10))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "final RexNode node2 = f.lt(f.i,f.literal(30))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "f.checkImplies(node5,node2)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "final RexNode iLt10 = f.lt(f.i,f.literal(10))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "f.checkImplies(iLe30,iLe30)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "f.checkImplies(iLt10,iLe30)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "f.checkNotImplies(node2,node5)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "f.checkNotImplies(iLt30,iLt10)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "final RexNode iLe30 = f.le(f.i,f.literal(30))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "f.checkImplies(node1,node2)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "f.checkImplies(node1,node1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "f.checkNotImplies(iLt30,iEq10)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "f.checkNotImplies(iLe30,iLt10)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "f.checkNotImplies(iLt10,iEq10)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24->30 [style = solid, label="iEq10"];
14->3 [style = bold, label=""];
15->10 [style = bold, label=""];
27->32 [style = bold, label=""];
12->6 [style = solid, label="node2"];
2->19 [style = dashed, label="0"];
12->5 [style = bold, label=""];
9->11 [style = bold, label=""];
29->34 [style = solid, label="iLe30"];
23->17 [style = solid, label="iLe10"];
1->27 [style = dashed, label="0"];
5->15 [style = bold, label=""];
0->2 [style = solid, label="node1"];
28->22 [style = solid, label="iLt30"];
38->39 [style = bold, label=""];
0->38 [style = dashed, label="0"];
1->3 [style = solid, label="node6"];
22->30 [style = bold, label=""];
21->28 [style = bold, label=""];
14->26 [style = dashed, label="0"];
5->9 [style = solid, label="node3"];
25->31 [style = bold, label=""];
39->35 [style = solid, label="node2"];
2->14 [style = bold, label=""];
10->2 [style = solid, label="node5"];
8->30 [style = dashed, label="0"];
21->25 [style = solid, label="iLt10"];
32->18 [style = bold, label=""];
24->27 [style = bold, label=""];
10->24 [style = dashed, label="0"];
40->37 [style = bold, label=""];
11->16 [style = bold, label=""];
4->38 [style = bold, label=""];
26->17 [style = bold, label=""];
0->14 [style = solid, label="node1"];
0->7 [style = solid, label="node1"];
36->4 [style = bold, label=""];
4->21 [style = bold, label=""];
29->23 [style = bold, label=""];
4->0 [style = bold, label=""];
6->18 [style = dashed, label="0"];
0->11 [style = solid, label="node1"];
30->19 [style = bold, label=""];
19->26 [style = bold, label=""];
7->6 [style = bold, label=""];
18->25 [style = bold, label=""];
38->35 [style = solid, label="node1"];
10->1 [style = bold, label=""];
12->39 [style = dashed, label="0"];
16->22 [style = dashed, label="0"];
28->29 [style = bold, label=""];
16->8 [style = bold, label=""];
0->12 [style = bold, label=""];
12->8 [style = solid, label="node2"];
5->29 [style = dashed, label="0"];
12->16 [style = solid, label="node2"];
0->6 [style = solid, label="node1"];
12->7 [style = solid, label="node2"];
1->7 [style = bold, label=""];
21->31 [style = solid, label="iLt10"];
24->19 [style = solid, label="iEq10"];
38->37 [style = solid, label="node1"];
28->30 [style = solid, label="iLt30"];
21->19 [style = solid, label="iLt10"];
15->3 [style = solid, label="node4"];
8->2 [style = bold, label=""];
38->40 [style = solid, label="node1"];
11->31 [style = dashed, label="0"];
39->40 [style = bold, label=""];
9->25 [style = dashed, label="0"];
21->18 [style = solid, label="iLt10"];
7->32 [style = dashed, label="0"];
28->18 [style = solid, label="iLt30"];
37->35 [style = bold, label=""];
5->11 [style = solid, label="node3"];
1->14 [style = solid, label="node6"];
29->31 [style = solid, label="iLe30"];
0->9 [style = solid, label="node1"];
27->26 [style = solid, label="iNe10"];
21->26 [style = solid, label="iLt10"];
15->23 [style = dashed, label="0"];
3->17 [style = dashed, label="0"];
31->22 [style = bold, label=""];
29->25 [style = solid, label="iLe30"];
24->22 [style = solid, label="iEq10"];
39->37 [style = solid, label="node2"];
17->33 [style = bold, label=""];
20->4 [style = bold, label=""];
21->33 [style = solid, label="iLt10"];
21->32 [style = solid, label="iLt10"];
23->24 [style = bold, label=""];
0->21 [style = dashed, label="0"];
12->28 [style = dashed, label="0"];
6->9 [style = bold, label=""];
10->16 [style = solid, label="node5"];
27->17 [style = solid, label="iNe10"];
33->34 [style = bold, label=""];
10->8 [style = solid, label="node5"];
28->32 [style = solid, label="iLt30"];
13->4 [style = bold, label=""];
}
