digraph {
7 [style = filled, label = "j++@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "up.onNext(i)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "final UnicastProcessor<Integer> up = UnicastProcessor.create()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "up.onNext(i)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TestObserver<Integer> to = us.observeOn(Schedulers.io()).map(Functions.identity()).observeOn(Schedulers.single()).firstOrError().test()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "fusedNoConcurrentCleanDueToCancel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "fusedNoConcurrentCleanDueToCancel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "!errors.isEmpty()@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TestObserver<Integer> to = up.hide().observeOn(Schedulers.io()).observeOn(Schedulers.single()).unsubscribeOn(Schedulers.computation()).firstOrError().test()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "to.awaitDone(5,TimeUnit.SECONDS)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "us.onNext(i)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "j < TestHelper.RACE_LONG_LOOPS@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{RxJavaPlugins.reset()}@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "to.assertResult(0)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "us.hasSubscribers()@@@11@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "int j = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "up.hasSubscribers()@@@11@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "TestObserver<Integer> to = up.observeOn(Schedulers.io()).map(Functions.identity()).observeOn(Schedulers.single()).firstOrError().test()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "final UnicastProcessor<Integer> us = UnicastProcessor.create()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "List<Throwable> errors = TestHelper.trackPluginErrors()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final UnicastProcessor<Integer> up = UnicastProcessor.create()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "fusedNoConcurrentCleanDueToCancel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "throw new CompositeException(errors)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "up.hasSubscribers() && i < 10000@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9->22 [style = bold, label=""];
13->12 [style = solid, label="errors"];
4->10 [style = bold, label=""];
17->10 [style = bold, label=""];
16->3 [style = bold, label=""];
10->22 [style = bold, label=""];
24->10 [style = bold, label=""];
19->10 [style = dotted, label="true"];
8->19 [style = dashed, label="0"];
22->10 [style = dotted, label="true"];
0->5 [style = dotted, label="true"];
0->13 [style = dotted, label="true"];
9->22 [style = solid, label="i"];
0->13 [style = bold, label=""];
0->18 [style = dotted, label="true"];
7->0 [style = solid, label="j"];
20->9 [style = bold, label=""];
4->17 [style = dashed, label="0"];
19->17 [style = dotted, label="true"];
0->19 [style = dotted, label="true"];
0->15 [style = dotted, label="true"];
10->19 [style = bold, label=""];
10->17 [style = solid, label="i"];
2->3 [style = bold, label=""];
25->3 [style = bold, label=""];
12->15 [style = bold, label=""];
9->17 [style = solid, label="i"];
0->20 [style = dotted, label="true"];
7->0 [style = bold, label=""];
10->4 [style = solid, label="i"];
19->17 [style = bold, label=""];
22->24 [style = dotted, label="true"];
8->10 [style = dotted, label="true"];
9->8 [style = bold, label=""];
0->6 [style = dotted, label="true"];
22->5 [style = bold, label=""];
8->4 [style = dotted, label="true"];
9->10 [style = solid, label="i"];
14->1 [style = bold, label=""];
1->9 [style = bold, label=""];
3->0 [style = bold, label=""];
6->15 [style = bold, label=""];
0->22 [style = dotted, label="true"];
1->20 [style = dashed, label="0"];
0->8 [style = dotted, label="true"];
19->5 [style = bold, label=""];
8->22 [style = dashed, label="0"];
18->20 [style = bold, label=""];
10->24 [style = solid, label="i"];
0->21 [style = dotted, label="true"];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
10->8 [style = bold, label=""];
15->11 [style = bold, label=""];
3->7 [style = solid, label="j"];
0->1 [style = dotted, label="true"];
10->22 [style = solid, label="i"];
9->24 [style = solid, label="i"];
9->19 [style = bold, label=""];
0->14 [style = dotted, label="true"];
14->21 [style = dashed, label="0"];
0->23 [style = dotted, label="true"];
6->12 [style = dotted, label="true"];
8->4 [style = bold, label=""];
22->24 [style = bold, label=""];
14->18 [style = dashed, label="0"];
9->4 [style = solid, label="i"];
4->24 [style = dashed, label="0"];
13->21 [style = bold, label=""];
23->9 [style = bold, label=""];
0->9 [style = dotted, label="true"];
13->14 [style = bold, label=""];
1->23 [style = dashed, label="0"];
11->7 [style = bold, label=""];
13->18 [style = bold, label=""];
0->7 [style = dotted, label="true"];
3->0 [style = solid, label="j"];
21->23 [style = bold, label=""];
6->12 [style = bold, label=""];
}
