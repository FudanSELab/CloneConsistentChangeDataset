digraph {
40 [style = filled, label = "expectConvertWriteRead(TASK_CONFIG_KEYS.get(2),KafkaConfigBackingStore.TASK_CONFIGURATION_V0,CONFIGS_SERIALIZED.get(3),\"properties\",SAMPLE_CONFIGS.get(2))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "String connectorName1 = CONNECTOR_IDS.get(0)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "expectConvertWriteRead(COMMIT_TASKS_CONFIG_KEYS.get(1),KafkaConfigBackingStore.CONNECTOR_TASKS_COMMIT_V0,CONFIGS_SERIALIZED.get(4),\"tasks\",1)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "configStorage.putTaskConfigs(\"connector1\",taskConfigs)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(Arrays.asList(connectorName1,connectorName2),new ArrayList<>(configState.connectors()))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "EasyMock.expectLastCall()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(Collections.singletonList(TASK_IDS.get(2)),configState.tasks(connectorName2))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "serializedConfigs = new LinkedHashMap<>()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "List<Map<String,String>> taskConfigs = Arrays.asList(SAMPLE_CONFIGS.get(0),SAMPLE_CONFIGS.get(1))@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ClusterConfigState configState = configStorage.snapshot()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "expectPartitionCount(1)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "expectConvertWriteRead(TASK_CONFIG_KEYS.get(1),KafkaConfigBackingStore.TASK_CONFIGURATION_V0,CONFIGS_SERIALIZED.get(1),\"properties\",SAMPLE_CONFIGS.get(1))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.expectLastCall()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String connectorName = CONNECTOR_IDS.get(0)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testPutTaskConfigs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(SAMPLE_CONFIGS.get(1),configState.taskConfig(TASK_IDS.get(1)))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(-1,configState.offset())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testPutTaskConfigs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "expectReadToEnd(new LinkedHashMap<>())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "configUpdateListener.onTaskConfigUpdate(Arrays.asList(TASK_IDS.get(0),TASK_IDS.get(1)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "expectReadToEnd(new LinkedHashMap<>())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "configStorage.start()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expectConvertWriteRead(TASK_CONFIG_KEYS.get(0),KafkaConfigBackingStore.TASK_CONFIGURATION_V0,CONFIGS_SERIALIZED.get(0),\"properties\",SAMPLE_CONFIGS.get(0))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expectReadToEnd(serializedConfigs)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expectReadToEnd(new LinkedHashMap<>())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "taskConfigs = Collections.singletonList(SAMPLE_CONFIGS.get(2))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "configStorage.stop()@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "serializedConfigs.put(COMMIT_TASKS_CONFIG_KEYS.get(1),CONFIGS_SERIALIZED.get(4))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "serializedConfigs.put(TASK_CONFIG_KEYS.get(1),CONFIGS_SERIALIZED.get(1))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testPutTaskConfigsStartsOnlyReconfiguredTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertEquals(5,configState.offset())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "whiteboxAddConnector(CONNECTOR_IDS.get(0),SAMPLE_CONFIGS.get(0),Collections.emptyList())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "serializedConfigs.put(COMMIT_TASKS_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(2))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "whiteboxAddConnector(CONNECTOR_IDS.get(1),SAMPLE_CONFIGS.get(1),Collections.emptyList())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "expectConvertWriteRead(COMMIT_TASKS_CONFIG_KEYS.get(0),KafkaConfigBackingStore.CONNECTOR_TASKS_COMMIT_V0,CONFIGS_SERIALIZED.get(2),\"tasks\",2)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "configState = configStorage.snapshot()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertNull(configState.taskConfig(TASK_IDS.get(1)))@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "String connectorName2 = CONNECTOR_IDS.get(1)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "expectConfigure()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "configStorage.putTaskConfigs(\"connector2\",taskConfigs)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(Arrays.asList(TASK_IDS.get(0),TASK_IDS.get(1)),configState.tasks(connectorName))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "PowerMock.verifyAll()@@@53@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "serializedConfigs.put(TASK_CONFIG_KEYS.get(2),CONFIGS_SERIALIZED.get(3))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "serializedConfigs.put(TASK_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(0))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Collections.EMPTY_SET,configState.inconsistentConnectors())@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "PowerMock.replayAll()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(SAMPLE_CONFIGS.get(0),configState.taskConfig(TASK_IDS.get(0)))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(Arrays.asList(TASK_IDS.get(0),TASK_IDS.get(1)),configState.tasks(connectorName1))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "expectReadToEnd(new LinkedHashMap<String,byte((>())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "expectStart(Collections.emptyList(),Collections.emptyMap())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "expectReadToEnd(serializedConfigs)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "configStorage.setupAndCreateKafkaBasedLog(TOPIC,DEFAULT_DISTRIBUTED_CONFIG)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertNull(configState.taskConfig(TASK_IDS.get(0)))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "configUpdateListener.onTaskConfigUpdate(Arrays.asList(TASK_IDS.get(2)))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "expectStop()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(Arrays.asList(connectorName),new ArrayList<>(configState.connectors()))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(SAMPLE_CONFIGS.get(2),configState.taskConfig(TASK_IDS.get(2)))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "LinkedHashMap<String,byte((> serializedConfigs = new LinkedHashMap<>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(3,configState.offset())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(SAMPLE_CONFIGS.get(1),configState.taskConfig(TASK_IDS.get(1)))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(SAMPLE_CONFIGS.get(0),configState.taskConfig(TASK_IDS.get(0)))@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42->53 [style = bold, label=""];
59->50 [style = bold, label=""];
46->53 [style = solid, label="serializedConfigs"];
39->44 [style = solid, label="connectorName2"];
4->14 [style = bold, label=""];
6->26 [style = bold, label=""];
52->46 [style = bold, label=""];
23->20 [style = solid, label="connectorName"];
22->16 [style = bold, label=""];
35->9 [style = bold, label=""];
25->13 [style = bold, label=""];
19->29 [style = bold, label=""];
38->11 [style = bold, label=""];
40->55 [style = bold, label=""];
6->51 [style = bold, label=""];
12->17 [style = bold, label=""];
39->43 [style = bold, label=""];
23->56 [style = dashed, label="0"];
1->20 [style = bold, label=""];
24->34 [style = bold, label=""];
10->3 [style = bold, label=""];
9->30 [style = bold, label=""];
11->32 [style = bold, label=""];
54->41 [style = solid, label="taskConfigs"];
36->26 [style = bold, label=""];
54->41 [style = bold, label=""];
16->2 [style = bold, label=""];
34->12 [style = bold, label=""];
48->42 [style = bold, label=""];
46->48 [style = bold, label=""];
5->38 [style = bold, label=""];
8->35 [style = bold, label=""];
6->36 [style = bold, label=""];
32->33 [style = bold, label=""];
16->60 [style = bold, label=""];
56->47 [style = solid, label="connectorName1"];
20->27 [style = bold, label=""];
12->49 [style = bold, label=""];
28->0 [style = bold, label=""];
2->23 [style = bold, label=""];
51->40 [style = bold, label=""];
23->1 [style = solid, label="connectorName"];
39->43 [style = solid, label="connectorName2"];
43->47 [style = bold, label=""];
15->28 [style = bold, label=""];
31->10 [style = bold, label=""];
30->7 [style = bold, label=""];
7->6 [style = bold, label=""];
26->15 [style = bold, label=""];
58->45 [style = bold, label=""];
53->26 [style = bold, label=""];
56->39 [style = bold, label=""];
44->34 [style = bold, label=""];
23->1 [style = bold, label=""];
2->60 [style = dashed, label="0"];
47->44 [style = bold, label=""];
3->21 [style = bold, label=""];
14->18 [style = bold, label=""];
27->24 [style = bold, label=""];
5->11 [style = bold, label=""];
18->8 [style = bold, label=""];
22->54 [style = bold, label=""];
41->16 [style = bold, label=""];
13->31 [style = bold, label=""];
33->19 [style = bold, label=""];
29->22 [style = bold, label=""];
37->13 [style = bold, label=""];
49->17 [style = bold, label=""];
17->59 [style = bold, label=""];
56->43 [style = solid, label="connectorName1"];
45->52 [style = bold, label=""];
35->6 [style = solid, label="serializedConfigs"];
20->43 [style = dashed, label="0"];
55->58 [style = bold, label=""];
29->22 [style = solid, label="taskConfigs"];
0->5 [style = bold, label=""];
21->4 [style = bold, label=""];
60->56 [style = bold, label=""];
57->13 [style = bold, label=""];
}
