digraph {
5 [style = filled, label = "String childname = name + \"/bar\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(name.length(),stat.getDataLength())@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "testChildren['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(0,stat.getNumChildren())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(zk.getSessionId(),stat.getEphemeralOwner())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "zk.create(name,name.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(0,stat.getVersion())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "i++@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<String> s = zk.getChildren(name,false,stat)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(s.size(),stat.getNumChildren())@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(zk.getSessionId(),stat.getEphemeralOwner())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "assertEquals(0,stat.getEphemeralOwner())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getPzxid())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(1,stat.getCversion())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(stat.getCtime(),stat.getMtime())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "assertEquals(stat.getCzxid() + 1,stat.getPzxid())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "assertEquals(s.size(),stat.getNumChildren())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "stat = newStat()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getMzxid())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "assertEquals(s.size(),stat.getNumChildren())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "zk.getData(name,false,stat)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "zk.create(childname,childname.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(stat.getCtime(),stat.getMtime())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "Assert.assertEquals(stat.getCzxid() + i + 1,stat.getPzxid())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "Stat stat@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "String childname = name + \"/bar\" + i@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertEquals(name.length(),stat.getDataLength())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(childname.length(),stat.getDataLength())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(name.length(),stat.getDataLength())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "String name = \"/foo\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(0,stat.getVersion())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertEquals(1,stat.getNumChildren())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "Assert.assertEquals(i + 1,stat.getCversion())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "i < 10@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Stat stat = new Stat()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(1,stat.getCversion())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertEquals(0,stat.getAversion())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "Assert.assertEquals(i + 1,stat.getNumChildren())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testChild['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getMzxid())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertEquals(0,stat.getCversion())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(childname.length(),stat.getDataLength())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(stat.getCzxid() + 1,stat.getPzxid())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "testChild['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertEquals(0,stat.getAversion())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "zk.create(childname,childname.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "int i = 0@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46->13 [style = bold, label=""];
15->21 [style = bold, label=""];
28->38 [style = bold, label=""];
53->51 [style = solid, label="i"];
50->56 [style = bold, label=""];
55->51 [style = bold, label=""];
10->28 [style = dashed, label="0"];
30->29 [style = bold, label=""];
2->17 [style = solid, label="stat"];
59->12 [style = bold, label=""];
19->24 [style = bold, label=""];
49->55 [style = bold, label=""];
23->32 [style = dashed, label="0"];
0->52 [style = bold, label=""];
0->14 [style = bold, label=""];
54->16 [style = bold, label=""];
37->31 [style = bold, label=""];
14->58 [style = dashed, label="0"];
5->22 [style = solid, label="childname"];
53->58 [style = solid, label="i"];
26->57 [style = bold, label=""];
15->33 [style = dashed, label="0"];
9->46 [style = dashed, label="0"];
16->9 [style = bold, label=""];
11->25 [style = bold, label=""];
12->17 [style = solid, label="name"];
10->11 [style = bold, label=""];
53->57 [style = solid, label="i"];
13->34 [style = bold, label=""];
42->46 [style = bold, label=""];
27->12 [style = bold, label=""];
50->56 [style = solid, label="stat"];
17->41 [style = bold, label=""];
12->56 [style = solid, label="name"];
7->48 [style = dashed, label="0"];
51->0 [style = bold, label=""];
49->54 [style = solid, label="i"];
49->53 [style = solid, label="i"];
24->18 [style = bold, label=""];
20->29 [style = dashed, label="0"];
2->13 [style = solid, label="stat"];
55->26 [style = dotted, label="true"];
49->55 [style = solid, label="i"];
0->41 [style = dashed, label="0"];
55->9 [style = dotted, label="true"];
18->4 [style = bold, label=""];
12->8 [style = solid, label="name"];
7->23 [style = bold, label=""];
55->53 [style = dotted, label="true"];
16->57 [style = dashed, label="0"];
48->32 [style = bold, label=""];
43->33 [style = bold, label=""];
38->47 [style = bold, label=""];
14->15 [style = bold, label=""];
36->37 [style = bold, label=""];
20->7 [style = bold, label=""];
1->19 [style = bold, label=""];
32->42 [style = bold, label=""];
5->22 [style = bold, label=""];
41->43 [style = bold, label=""];
18->31 [style = dashed, label="0"];
57->53 [style = bold, label=""];
55->57 [style = dotted, label="true"];
55->7 [style = dotted, label="true"];
2->17 [style = bold, label=""];
21->54 [style = dashed, label="0"];
4->10 [style = bold, label=""];
55->56 [style = dotted, label="true"];
56->6 [style = bold, label=""];
1->39 [style = dashed, label="0"];
22->2 [style = bold, label=""];
55->58 [style = dotted, label="true"];
3->1 [style = bold, label=""];
55->16 [style = dotted, label="true"];
26->3 [style = bold, label=""];
12->51 [style = solid, label="name"];
16->42 [style = dashed, label="0"];
25->47 [style = dashed, label="0"];
7->54 [style = bold, label=""];
55->0 [style = dotted, label="true"];
4->45 [style = dashed, label="0"];
6->20 [style = bold, label=""];
40->12 [style = bold, label=""];
24->37 [style = dashed, label="0"];
58->7 [style = bold, label=""];
17->0 [style = bold, label=""];
13->26 [style = bold, label=""];
55->13 [style = dotted, label="true"];
5->13 [style = solid, label="childname"];
12->8 [style = bold, label=""];
34->44 [style = bold, label=""];
52->50 [style = bold, label=""];
21->35 [style = dashed, label="0"];
53->55 [style = solid, label="i"];
53->54 [style = solid, label="i"];
35->30 [style = bold, label=""];
26->34 [style = dashed, label="0"];
55->6 [style = dotted, label="true"];
53->55 [style = bold, label=""];
23->16 [style = bold, label=""];
33->35 [style = bold, label=""];
21->6 [style = bold, label=""];
49->57 [style = solid, label="i"];
3->44 [style = dashed, label="0"];
51->0 [style = solid, label="childname"];
45->28 [style = bold, label=""];
2->52 [style = dashed, label="0"];
44->39 [style = bold, label=""];
55->52 [style = dotted, label="true"];
49->58 [style = solid, label="i"];
12->5 [style = solid, label="name"];
55->54 [style = dotted, label="true"];
11->38 [style = dashed, label="0"];
14->43 [style = dashed, label="0"];
8->5 [style = bold, label=""];
19->36 [style = dashed, label="0"];
55->51 [style = dotted, label="true"];
8->49 [style = bold, label=""];
6->30 [style = dashed, label="0"];
29->48 [style = bold, label=""];
6->58 [style = bold, label=""];
39->36 [style = bold, label=""];
31->45 [style = bold, label=""];
49->51 [style = solid, label="i"];
55->50 [style = dotted, label="true"];
9->13 [style = bold, label=""];
}
