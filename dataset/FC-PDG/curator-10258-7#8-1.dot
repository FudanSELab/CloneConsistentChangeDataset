digraph {
17 [style = filled, label = "int i = 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "++i@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "{for (LeaderLatch latch : latches){CloseableUtils.closeQuietly(latch)}TestCleanState.closeAndTestClean(client)}@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "service.shutdown()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "service.submit(new Callable<Object>(){@Override public Object call(){Thread.sleep((int)(100 * Math.random()))latch.start()return null}})@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "theLeader.close()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testLostConnection['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "server.restart()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "client.getConnectionStateListenable().addListener(new ConnectionStateListener(){@Override public void stateChanged(CuratorFramework client,ConnectionState newState){if (newState == ConnectionState.LOST) {countDownLatch.countDown()}}})@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(waitForALeader(latches,timing).size(),1)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "LeaderLatch theLeader = leaders.get(0)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Timing timing = new Timing()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "latches.add(latch)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "latches@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "client.start()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "mode == Mode.START_IMMEDIATELY@@@36@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "{for (LeaderLatch latch : latches){CloseableUtils.closeQuietly(latch)}CloseableUtils.closeQuietly(client)}@@@43@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(leaders.size(),1)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<LeaderLatch> latches = Lists.newArrayList()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(latches.indexOf(theLeader),0)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "timing.forWaiting().sleepABit()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ExecutorService service = Executors.newFixedThreadPool(latches.size())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "latches.remove(theLeader)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i < PARTICIPANT_QTY@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(getLeaders(latches).size(),0)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final int PARTICIPANT_QTY = 1@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "latch.start()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final int PARTICIPANT_QTY = 10@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(countDownLatch))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Timing timing = new Timing()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "List<LeaderLatch> leaders = waitForALeader(latches,timing)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "latches.size() > 0@@@32@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "mode == Mode.START_IMMEDIATELY@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "mode == Mode.START_IN_THREADS@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testLostConnection['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "final LeaderLatch latch@@@20@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "LeaderLatch latch = new LeaderLatch(client,PATH_NAME)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "server.stop()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "waitForALeader(latches,timing)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final CountDownLatch countDownLatch = new CountDownLatch(1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Mode mode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
8->10 [style = bold, label=""];
23->29 [style = solid, label="mode"];
38->41 [style = dotted, label="true"];
14->18 [style = solid, label="latch"];
35->42 [style = dotted, label="true"];
40->13 [style = bold, label=""];
29->26 [style = dotted, label="true"];
8->20 [style = solid, label="latches"];
3->5 [style = bold, label=""];
28->26 [style = solid, label="theLeader"];
30->28 [style = bold, label=""];
36->24 [style = bold, label=""];
31->34 [style = solid, label="client"];
10->32 [style = dashed, label="0"];
23->35 [style = solid, label="mode"];
37->38 [style = bold, label=""];
15->31 [style = dashed, label="0"];
35->37 [style = dotted, label="true"];
35->38 [style = bold, label=""];
38->33 [style = dotted, label="true"];
1->4 [style = solid, label="PARTICIPANT_QTY"];
19->18 [style = bold, label=""];
16->17 [style = bold, label=""];
29->26 [style = bold, label=""];
5->21 [style = bold, label=""];
4->13 [style = dotted, label="true"];
38->28 [style = dotted, label="true"];
32->33 [style = solid, label="timing"];
1->24 [style = dashed, label="0"];
33->30 [style = bold, label=""];
21->7 [style = bold, label=""];
11->17 [style = bold, label=""];
24->8 [style = bold, label=""];
38->33 [style = bold, label=""];
41->43 [style = bold, label=""];
32->31 [style = bold, label=""];
35->25 [style = dotted, label="true"];
39->37 [style = bold, label=""];
28->29 [style = bold, label=""];
23->40 [style = solid, label="mode"];
4->14 [style = bold, label=""];
1->8 [style = bold, label=""];
25->39 [style = bold, label=""];
31->14 [style = solid, label="client"];
14->13 [style = solid, label="latch"];
35->25 [style = bold, label=""];
38->30 [style = dotted, label="true"];
12->13 [style = bold, label=""];
40->12 [style = bold, label=""];
26->41 [style = bold, label=""];
28->43 [style = solid, label="theLeader"];
43->38 [style = bold, label=""];
14->34 [style = solid, label="latch"];
0->1 [style = bold, label=""];
24->4 [style = solid, label="PARTICIPANT_QTY"];
4->20 [style = bold, label=""];
38->34 [style = bold, label=""];
13->9 [style = bold, label=""];
22->1 [style = bold, label=""];
4->12 [style = dotted, label="true"];
36->23 [style = dotted, label="true"];
7->19 [style = bold, label=""];
8->18 [style = solid, label="latches"];
2->11 [style = bold, label=""];
17->4 [style = bold, label=""];
35->39 [style = dotted, label="true"];
4->35 [style = bold, label=""];
10->15 [style = bold, label=""];
17->4 [style = solid, label="i"];
8->32 [style = bold, label=""];
31->16 [style = bold, label=""];
4->40 [style = dotted, label="true"];
29->41 [style = bold, label=""];
9->4 [style = bold, label=""];
8->33 [style = solid, label="latches"];
20->6 [style = bold, label=""];
16->2 [style = bold, label=""];
4->14 [style = dotted, label="true"];
15->16 [style = bold, label=""];
8->34 [style = solid, label="latches"];
35->27 [style = dotted, label="true"];
15->18 [style = solid, label="client"];
6->25 [style = dashed, label="0"];
38->43 [style = dotted, label="true"];
2->3 [style = solid, label="countDownLatch"];
40->12 [style = dotted, label="true"];
14->12 [style = bold, label=""];
15->14 [style = solid, label="client"];
38->29 [style = dotted, label="true"];
4->9 [style = dotted, label="true"];
10->20 [style = solid, label="timing"];
14->40 [style = bold, label=""];
}
