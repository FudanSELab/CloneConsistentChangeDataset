digraph {
1 [style = filled, label = "T lower = Conversions.fromByteBuffer(field.type(),lowerBounds.get(id))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "upperBounds != null && upperBounds.containsKey(id)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "lt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "canContainNulls(id) || canContainNaNs(id)@@@6@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Literal<T> lit@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "NaNUtil.isNaN(lower)@@@11@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "gtEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return ROWS_MUST_MATCH@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "lowerBounds != null && lowerBounds.containsKey(id)@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "cmp < 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "T upper = Conversions.fromByteBuffer(field.type(),upperBounds.get(id))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "cmp >= 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Literal<T> lit@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "canContainNulls(id)@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "gtEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->2 [style = bold, label=""];
15->17 [style = dotted, label="true"];
25->21 [style = solid, label="cmp"];
8->16 [style = dashed, label="0"];
3->24 [style = bold, label=""];
22->23 [style = dotted, label="true"];
10->2 [style = bold, label=""];
16->4 [style = bold, label=""];
14->18 [style = bold, label=""];
8->4 [style = bold, label=""];
14->18 [style = dotted, label="true"];
0->21 [style = dashed, label="0"];
2->1 [style = solid, label="id"];
11->0 [style = bold, label=""];
4->5 [style = bold, label=""];
11->0 [style = solid, label="cmp"];
12->6 [style = solid, label="field"];
22->20 [style = dotted, label="true"];
11->25 [style = dashed, label="0"];
2->4 [style = solid, label="id"];
19->25 [style = solid, label="upper"];
4->11 [style = dotted, label="true"];
16->3 [style = dotted, label="true"];
0->13 [style = dotted, label="true"];
21->13 [style = dotted, label="true"];
24->21 [style = dotted, label="true"];
2->12 [style = solid, label="id"];
4->1 [style = dotted, label="true"];
0->13 [style = bold, label=""];
2->8 [style = solid, label="id"];
6->8 [style = bold, label=""];
1->14 [style = bold, label=""];
14->11 [style = bold, label=""];
15->2 [style = bold, label=""];
4->0 [style = dotted, label="true"];
4->1 [style = bold, label=""];
8->3 [style = bold, label=""];
1->11 [style = solid, label="lower"];
1->11 [style = bold, label=""];
6->16 [style = bold, label=""];
25->21 [style = bold, label=""];
19->25 [style = bold, label=""];
24->19 [style = dotted, label="true"];
1->19 [style = dashed, label="0"];
2->6 [style = solid, label="id"];
16->3 [style = bold, label=""];
21->5 [style = bold, label=""];
4->14 [style = dotted, label="true"];
1->14 [style = solid, label="lower"];
18->11 [style = bold, label=""];
9->23 [style = dashed, label="0"];
2->19 [style = solid, label="id"];
10->7 [style = dotted, label="true"];
24->19 [style = bold, label=""];
8->3 [style = dotted, label="true"];
15->9 [style = dotted, label="true"];
24->25 [style = dotted, label="true"];
8->24 [style = bold, label=""];
2->24 [style = solid, label="id"];
2->16 [style = solid, label="id"];
0->5 [style = bold, label=""];
24->5 [style = bold, label=""];
10->9 [style = dotted, label="true"];
3->4 [style = bold, label=""];
13->5 [style = bold, label=""];
2->12 [style = bold, label=""];
12->6 [style = bold, label=""];
21->13 [style = bold, label=""];
4->24 [style = dashed, label="0"];
}
