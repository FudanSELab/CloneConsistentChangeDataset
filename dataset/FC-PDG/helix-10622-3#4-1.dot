digraph {
17 [style = filled, label = "verifyP2PMessage(DB_NAME_2,_instances.get(1),MasterSlaveSMD.States.MASTER.name(),_controller.getInstanceName())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verify())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verify())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "_gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME,prevMasterInstance,true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "enableP2PInCluster(false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verify())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "verifyP2PMessage(DB_NAME_1,_instances.get(1),MasterSlaveSMD.States.MASTER.name(),prevMasterInstance)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String prevMasterInstance = _instances.get(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "enableP2PInResource(DB_NAME_2,false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testP2PStateTransitionDisabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "verifyP2PMessage(DB_NAME_1,prevMasterInstance,MasterSlaveSMD.States.MASTER.name(),_instances.get(1))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String prevMasterInstance = _instances.get(0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verifyP2PMessage(DB_NAME_1,prevMasterInstance,MasterSlaveSMD.States.MASTER.name(),_controller.getInstanceName())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verify())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "_gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME,prevMasterInstance,false)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "verifyP2PMessage(DB_NAME_2,prevMasterInstance,MasterSlaveSMD.States.MASTER.name(),_controller.getInstanceName())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testP2PStateTransitionDisabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testP2PStateTransitionEnabledInResource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "_gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME,prevMasterInstance,false)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "enableP2PInResource(DB_NAME_1,true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
6->21 [style = dashed, label="0"];
1->4 [style = bold, label=""];
7->1 [style = bold, label=""];
12->5 [style = bold, label=""];
4->6 [style = bold, label=""];
7->17 [style = dashed, label="0"];
5->21 [style = solid, label="prevMasterInstance"];
15->21 [style = bold, label=""];
0->12 [style = bold, label=""];
17->9 [style = bold, label=""];
18->19 [style = bold, label=""];
5->16 [style = solid, label="prevMasterInstance"];
8->1 [style = solid, label="prevMasterInstance"];
16->17 [style = bold, label=""];
8->9 [style = solid, label="prevMasterInstance"];
10->6 [style = bold, label=""];
5->9 [style = solid, label="prevMasterInstance"];
8->0 [style = bold, label=""];
5->16 [style = dashed, label="0"];
19->5 [style = bold, label=""];
5->20 [style = solid, label="prevMasterInstance"];
3->5 [style = bold, label=""];
21->20 [style = bold, label=""];
3->12 [style = dashed, label="0"];
1->16 [style = bold, label=""];
9->15 [style = bold, label=""];
5->7 [style = bold, label=""];
11->8 [style = bold, label=""];
14->18 [style = bold, label=""];
8->0 [style = solid, label="prevMasterInstance"];
6->9 [style = bold, label=""];
8->6 [style = solid, label="prevMasterInstance"];
4->10 [style = dashed, label="0"];
1->10 [style = bold, label=""];
5->7 [style = solid, label="prevMasterInstance"];
13->14 [style = bold, label=""];
2->8 [style = bold, label=""];
}
