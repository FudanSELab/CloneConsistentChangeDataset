digraph {
136 [style = filled, label = "userVmDetailsDao.addDetail(vm.getId(),VmDetailConstants.CPU_OVER_COMMIT_RATIO,cluster_detail_cpu.getValue(),true)@@@120@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "dest == null@@@99@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
197 [style = filled, label = "s_logger.error(\"Retrying after catching exception while trying to secure agent for systemvm id=\" + vm.getId(),e)@@@202@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
147 [style = filled, label = "!avoids.add(e)@@@267@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return@@@199@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final VirtualMachineProfileImpl vmProfile = new VirtualMachineProfileImpl(vm,template,offering,owner,params)@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "int retry = StartRetry.value()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "Map<String,Boolean> vlanToPersistenceMap = getVlanToPersistenceMapForVM(vm.getId())@@@215@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "final VolumeVO vol@@@51@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final ServiceOfferingVO offering = _offeringDao.findById(vm.getId(),vm.getServiceOfferingId())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "final Map<String,String> sshAccessDetails = _networkMgr.getSystemVMAccessDetails(vm)@@@193@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
143 [style = filled, label = "final NoTransitionException e@@@280@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "final Long cluster_id = dest.getCluster().getId()@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
175 [style = filled, label = "final StoragePool pool = (StoragePool)dataStoreMgr.getPrimaryDataStore(vol.getPoolId())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "s_logger.debug(\"Root volume is ready, need to place VM in volume's cluster\")@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
194 [style = filled, label = "StartAnswer startAnswer = null@@@129@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "planChangedByVolume@@@100@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "final Map<String,String> vmmetadata = new HashMap<String,String>()@@@226@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "clusterIdSpecified != null && rootVolClusterId != null@@@69@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
208 [style = filled, label = "final Host vmHost = _hostDao.findById(destHostId)@@@191@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
133 [style = filled, label = "final Long rootVolClusterId = pool.getClusterId()@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "s_logger.debug(vol + \" is READY, changing deployment plan to use this pool's dcId: \" + rootVolDcId + \" , podId: \" + rootVolPodId + \" , and clusterId: \" + rootVolClusterId)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "answer == null || !answer.getResult()@@@232@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
186 [style = filled, label = "boolean planChangedByVolume = false@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "vmGuru.finalizeDeployment(cmds,vmProfile,dest,ctx)@@@154@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
142 [style = filled, label = "avoids = new ExcludeList()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final DataCenterDeployment originalPlan = plan@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
137 [style = filled, label = "avoids = planToDeploy.getAvoids()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
190 [style = filled, label = "work = _workDao.findById(work.getId())@@@156@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "final Account owner = _entityMgr.findById(,vm.getAccountId())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
202 [style = filled, label = "!avoids.add(e)@@@255@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "final ClusterDetailsVO cluster_detail_ram = _clusterDetailsDao.findDetail(cluster_id,VmDetailConstants.MEMORY_OVER_COMMIT_RATIO)@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "dest != null@@@108@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "throw e@@@257@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "gpuDevice != null@@@181@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "s_logger.debug(\"VM start attempt #\" + (StartRetry.value() - retry))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
162 [style = filled, label = "s_logger.debug(\"advanceStart: DeploymentPlan is provided, using dcId:\" + planToDeploy.getDataCenterId() + \", podId: \" + planToDeploy.getPodId() + \", clusterId: \" + planToDeploy.getClusterId() + \", hostId: \" + planToDeploy.getHostId() + \", poolId: \" + planToDeploy.getPoolId())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
176 [style = filled, label = "s_logger.isDebugEnabled()@@@71@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
188 [style = filled, label = "planToDeploy != null && planToDeploy.getDataCenterId() != 0@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
212 [style = filled, label = "avoids.addHost(dest.getHost().getId())@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
174 [style = filled, label = "final ResourceUnavailableException e@@@253@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
168 [style = filled, label = "s_logger.warn(\"Unable to stop \" + vm + \" due to \" + (answer != null? answer.getDetails(): \"no answers\"))@@@233@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
163 [style = filled, label = "plan = new DataCenterDeployment(planToDeploy.getDataCenterId(),planToDeploy.getPodId(),planToDeploy.getClusterId(),planToDeploy.getHostId(),planToDeploy.getPoolId(),planToDeploy.getPhysicalNetworkId(),ctx)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
134 [style = filled, label = "vmHost != null && (VirtualMachine.Type.ConsoleProxy.equals(vm.getType()) || VirtualMachine.Type.SecondaryStorageVm.equals(vm.getType())) && caManager.canProvisionCertificates()@@@192@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
179 [style = filled, label = "!reuseVolume@@@144@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "plan = originalPlan@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "MapUtils.isNotEmpty(vlanToPersistenceMap)@@@216@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
164 [style = filled, label = "canRetry = false@@@250@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
217 [style = filled, label = "final Map<VirtualMachineProfile.Param,Object> params@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
105 [style = filled, label = "s_logger.isDebugEnabled()@@@54@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
218 [style = filled, label = "vols@@@51@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
95 [style = filled, label = "return@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "throw new ExecutionException(\"Unable to stop this VM, \" + vm.getUuid() + \" so we are unable to retry the start operation\")@@@235@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "journal.record(\"Deployment found - Attempt #\" + (StartRetry.value() - retry),vmProfile,dest)@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "userVmDetailsDao.addDetail(vm.getId(),VmDetailConstants.MEMORY_OVER_COMMIT_RATIO,cluster_detail_ram.getValue(),true)@@@125@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
177 [style = filled, label = "final DeploymentPlanner planner@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "vmmetadata.put(vm.getInstanceName(),platform)@@@227@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
193 [style = filled, label = "throw e@@@261@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return@@@207@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
201 [style = filled, label = "s_logger.debug(\"Start completed for VM \" + vm)@@@189@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
141 [style = filled, label = "s_logger.isDebugEnabled()@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "userVmDetailsDao.addDetail(vm.getId(),VmDetailConstants.CPU_OVER_COMMIT_RATIO,cluster_detail_cpu.getValue(),true)@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "s_logger.debug(\"Deploy avoids pods: \" + avoids.getPodsToAvoid() + \", clusters: \" + avoids.getClustersToAvoid() + \", hosts: \" + avoids.getHostsToAvoid())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
216 [style = filled, label = "final String vmUuid@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
124 [style = filled, label = "s_logger.info(\"Unable to start VM on \" + dest.getHost() + \" due to \" + (startAnswer == null? \" no start answer\": startAnswer.getDetails()))@@@240@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "s_logger.warn(\"unexpected InsufficientCapacityException : \" + e.getScope().getName(),e)@@@272@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
191 [style = filled, label = "vm.setPodIdToDeployIn(dest.getPod().getId())@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
196 [style = filled, label = "answer != null && answer instanceof StopAnswer@@@221@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
203 [style = filled, label = "DataCenterDeployment plan = new DataCenterDeployment(vm.getDataCenterId(),vm.getPodIdToDeployIn(),null,null,null,null,ctx)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "vm.getHypervisorType() != HypervisorType.BareMetal@@@141@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "final String host_guid = startAnswer.getHost_guid()@@@166@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "throw e@@@269@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "reuseVolume = true@@@145@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "s_logger.isDebugEnabled()@@@61@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
225 [style = filled, label = "cmd.setVlanToPersistenceMap(vlanToPersistenceMap)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "final StorageAccessException e@@@284@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
139 [style = filled, label = "destHostId = finalHost.getId()@@@172@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
200 [style = filled, label = "e.isActive()@@@247@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "throw new ConcurrentOperationException(\"Unable to update the state of the Virtual Machine \" + vm.getUuid() + \" oldstate: \" + vm.getState() + \"Event :\" + Event.OperationRetry)@@@132@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "final String vmUuid@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "throw new CloudRuntimeException(\"Host Guid \" + host_guid + \" doesn't exist in DB, something went wrong while processing start answer: \" + startAnswer)@@@170@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "e.getScope() ==  || e.getScope() == @@@256@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
181 [style = filled, label = "vmGuru.finalizeVirtualMachineProfile(vmProfile,dest,ctx)@@@148@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "handlePath(vmTO.getDisks(),startAnswer.getIqnToData())@@@165@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
184 [style = filled, label = "resetVmNicsDeviceId(vm.getId())@@@139@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "final List<VolumeVO> vols = _volsDao.findReadyRootVolumesByInstance(vm.getId())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
223 [style = filled, label = "StopCommand cmd = new StopCommand(vmName,getExecuteInSequence(null),false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
146 [style = filled, label = "plan = new DataCenterDeployment(planToDeploy.getDataCenterId(),planToDeploy.getPodId(),planToDeploy.getClusterId(),planToDeploy.getHostId(),vol.getPoolId(),null,ctx)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "s_logger.debug(\"Unable to send the start command to host \" + dest.getHost() + \" failed to start VM: \" + vm.getUuid())@@@246@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "final VirtualMachineGuru vmGuru = getVmGuru(vm)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "vm.getType() == VirtualMachine.Type.User@@@223@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
160 [style = filled, label = "VirtualMachine.Type.User.equals(vm.type) && ResoureCountRunningVMsonly.value()@@@27@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
171 [style = filled, label = "final VirtualMachineTO vmTO = hvGuru.implement(vmProfile)@@@149@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
219 [style = filled, label = "orchestrateStart['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "!changeState(vm,Event.OperationSucceeded,destHostId,work,Step.Done)@@@176@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final StopAnswer stopAns = (StopAnswer)answer@@@222@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "cmds.addCommand(new StartCommand(vmTO,dest.getHost(),getExecuteInSequence(vm.getHypervisorType())))@@@153@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "final StopCommand cmd = stopCmd@@@219@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "StopCommand stopCmd = new StopCommand(vm,getExecuteInSequence(vm.getHypervisorType()),false)@@@213@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "throw new CloudRuntimeException(\"Failed to setup and secure agent for systemvm id=\" + vm.getId())@@@205@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "planToDeploy != null@@@34@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
222 [style = filled, label = "cmd.setControlIp(getControlNicIpForVM(vm))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "throw new ConcurrentOperationException(\"Work steps have been changed: \" + work)@@@158@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
213 [style = filled, label = "final String platform = stopAns.getPlatform()@@@224@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
144 [style = filled, label = "setupAgentSecurity(vmHost,sshAccessDetails,vm)@@@198@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "OperationTimedoutException e@@@245@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "final NoTransitionException e1@@@135@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "dest = _dpMgr.planDeployment(vmProfile,plan,avoids,planner)@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
226 [style = filled, label = "cleanup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "userVmDetailsDao.findDetail(vm.getId(),VmDetailConstants.CPU_OVER_COMMIT_RATIO) == null && (Float.parseFloat(cluster_detail_cpu.getValue()) > 1f || Float.parseFloat(cluster_detail_ram.getValue()) > 1f)@@@119@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "syncDiskChainChange(startAnswer)@@@175@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "final Account account = cctxt.getCallingAccount()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
205 [style = filled, label = "final VolumeVO vol@@@51@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
224 [style = filled, label = "MapUtils.isNotEmpty(vlanToPersistenceMap)@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "rootVolClusterId.longValue() != clusterIdSpecified.longValue()@@@70@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
199 [style = filled, label = "throw new AgentUnavailableException(\"Unable to start instance due to \" + e.getMessage(),destHostId,e)@@@278@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
185 [style = filled, label = "final HostVO finalHost = _resourceMgr.findHostByGuid(host_guid)@@@168@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
172 [style = filled, label = "checkAndSetEnterSetupMode(vmTO,params)@@@150@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "startAnswer = cmds.getAnswer()@@@163@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "volumeMgr.prepare(vmProfile,dest)@@@142@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "final Exception e@@@201@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "final AffinityConflictException e2@@@95@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "final Answer answer = _agentMgr.easySend(destHostId,cmd)@@@220@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "work == null || work.getStep() != Step.Prepare@@@157@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
151 [style = filled, label = "startedVm = vm@@@187@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final InsufficientCapacityException e@@@265@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "planChangedByVolume = false@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
165 [style = filled, label = "vmGuru.finalizeStart(vmProfile,destHostId,cmds,ctx)@@@174@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "startedVm == null@@@319@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
152 [style = filled, label = "final Long rootVolPodId = pool.getPodId()@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
166 [style = filled, label = "userVmDetailsDao.removeDetail(vm.getId(),VmDetailConstants.DEPLOY_VM)@@@185@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "s_logger.isDebugEnabled()@@@210@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "s_logger.warn(\"Unable to access storage on host\",e)@@@285@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "volTemplateId != null && volTemplateId.longValue() != template.getId()@@@53@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
189 [style = filled, label = "s_logger.warn(\"Unable to create deployment, affinity rules associted to the VM conflict\",e2)@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
214 [style = filled, label = "reuseVolume = false@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
167 [style = filled, label = "retries--@@@196@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
183 [style = filled, label = "plan = new DataCenterDeployment(rootVolDcId,rootVolPodId,rootVolClusterId,null,vol.getPoolId(),null,ctx)@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "e.getScope() ==  || e.getScope() == @@@268@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
173 [style = filled, label = "final ExecutionException e@@@276@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
180 [style = filled, label = "throw new ExecutionException(\"Unable to start VM:\" + vm.getUuid() + \" due to error in finalizeStart, not retrying\")@@@237@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
198 [style = filled, label = "s_logger.info(\"The guru did not like the answers so stopping \" + vm)@@@211@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final Ternary<VMInstanceVO,ReservationContext,ItWorkVO> start = changeToStartState(vmGuru,vm,caller,account)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
229 [style = filled, label = "Map<String,Boolean> vlanToPersistenceMap = getVlanToPersistenceMapForVM(vm.getId())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "addExtraConfig(vmTO)@@@155@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
178 [style = filled, label = "_resourceMgr.updateGPUDetails(destHostId,gpuDevice.getGroupDetails())@@@182@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "planToDeploy != null && planToDeploy.getDataCenterId() != 0@@@67@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final HypervisorGuru hvGuru = _hvGuruMgr.getGuru(vm.getHypervisorType())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "final CallContext cctxt = CallContext.current()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "retry-- != 0@@@47@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "DeployDestination dest = null@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "userVmDetailsDao.findDetail(vm.getId(),VmDetailConstants.CPU_OVER_COMMIT_RATIO) != null@@@123@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "stopCmd.setControlIp(getControlNicIpForVM(vm))@@@214@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
195 [style = filled, label = "_agentMgr.send(destHostId,cmds)@@@161@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "s_logger.debug(vol + \" of \" + vm + \" is READY, but template ids don't match, let the planner reassign a new pool\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "userVmDetailsDao.addDetail(vm.getId(),VmDetailConstants.MEMORY_OVER_COMMIT_RATIO,cluster_detail_ram.getValue(),true)@@@121@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
159 [style = filled, label = "s_logger.error(\"Unable to transition to a new state. VM uuid: \" + vm.getUuid() + \"VM oldstate:\" + vm.getState() + \"Event:\" + Event.OperationSucceeded)@@@177@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final Journal journal = start.second().getJournal()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "final User caller = cctxt.getCallingUser()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "final ClusterDetailsVO cluster_detail_cpu = _clusterDetailsDao.findDetail(cluster_id,VmDetailConstants.CPU_OVER_COMMIT_RATIO)@@@117@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
209 [style = filled, label = "ExcludeList avoids = null@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "stopCmd.setVlanToPersistenceMap(vlanToPersistenceMap)@@@217@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "throw new AgentUnavailableException(\"Unable to start \" + vm.getHostName(),destHostId,e)@@@251@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "final long rootVolDcId = pool.getDataCenterId()@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "handlePath(vmTO.getDisks(),vm.getHypervisorType())@@@151@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
157 [style = filled, label = "_haMgr.scheduleStop(vm,destHostId,WorkType.ForceStop)@@@234@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "resourceCountIncrement(owner.getAccountId(),new Long(offering.getCpu()),new Long(offering.getRamSize()))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "s_logger.warn(\"unexpected ResourceUnavailableException : \" + e.getScope().getName(),e)@@@260@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "syncVMMetaData(vmmetadata)@@@228@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "throw new InsufficientServerCapacityException(\"Unable to create a deployment for \" + vmProfile,,plan.getDataCenterId(),areAffinityGroupsAssociated(vmProfile))@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "s_logger.error(\"Failed to start instance \" + vm,e)@@@281@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "!pool.isInMaintenance()@@@60@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
207 [style = filled, label = "startAnswer != null && startAnswer.getResult()@@@164@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final ReservationContext ctx = start.second()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "_haMgr.scheduleStop(vm,destHostId,WorkType.CheckStop)@@@248@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
206 [style = filled, label = "vm = start.first()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final Long volTemplateId = vol.getTemplateId()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "throw new ConcurrentOperationException(e1.getMessage())@@@136@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
187 [style = filled, label = "s_logger.isDebugEnabled()@@@81@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "_workDao.updateStep(work,Step.Started)@@@162@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
220 [style = filled, label = "VirtualMachine.Type.User.equals(vm.type) && ResourceCountRunningVMsonly.value()@@@27@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
125 [style = filled, label = "boolean reuseVolume = true@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
228 [style = filled, label = "return cmd@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "final GPUDeviceTO gpuDevice = startAnswer.getVirtualMachine().getGpuDevice()@@@180@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "final DeploymentPlan planToDeploy@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
158 [style = filled, label = "boolean canRetry = true@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "throw new AgentUnavailableException(\"Unable to start instance due to \" + e.getMessage(),destHostId,e)@@@282@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "platform != null@@@225@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "s_logger.isDebugEnabled()@@@188@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
169 [style = filled, label = "vmProfile.setMemoryOvercommitRatio(Float.parseFloat(cluster_detail_ram.getValue()))@@@128@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
156 [style = filled, label = "cmds = new Commands(Command.OnError.Stop)@@@152@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "_workDao.updateStep(work,Step.Starting)@@@160@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "finalHost == null@@@169@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "s_logger.isDebugEnabled()@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
227 [style = filled, label = "final String vmName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
210 [style = filled, label = "logBootModeParameters(params)@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "startAnswer != null && startAnswer.getContextParam(\"stopRetry\") != null@@@241@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "userVmDetailsDao.findDetail(vm.getId(),VmDetailConstants.DEPLOY_VM) != null@@@184@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "_networkMgr.prepare(vmProfile,dest,ctx)@@@140@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
153 [style = filled, label = "s_logger.error(\"Failed to start instance \" + vm,e)@@@277@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "Commands cmds = null@@@147@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "!template.isDeployAsIs()@@@110@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
221 [style = filled, label = "VirtualMachine vm = _vmDao.findVMByInstanceName(vmName)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "VMInstanceVO vm = _vmDao.findByUuid(vmUuid)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "!changeState(vm,Event.OperationRetry,destHostId,work,Step.Prepare)@@@131@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
182 [style = filled, label = "final VirtualMachineTemplate template = _entityMgr.findByIdIncludingRemoved(,vm.getTemplateId())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "avoids == null@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "throw new CloudRuntimeException(\"Unable to create deployment, affinity rules associted to the VM conflict\")@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "throw new ResourceUnavailableException(\"Root volume is ready in different cluster, Deployment plan provided cannot be satisfied, unable to create a deployment for \" + vm,,clusterIdSpecified)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
170 [style = filled, label = "ItWorkVO work = start.third()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
154 [style = filled, label = "long destHostId = dest.getHost().getId()@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "VMInstanceVO startedVm = null@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "final Long clusterIdSpecified = planToDeploy.getClusterId()@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "final Map<VirtualMachineProfile.Param,Object> params@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "s_logger.debug(\"Cannot satisfy the deployment plan passed in since the ready Root volume is in different cluster. volume's cluster: \" + rootVolClusterId + \", cluster specified: \" + clusterIdSpecified)@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
155 [style = filled, label = "host_guid != null@@@167@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
150 [style = filled, label = "planChangedByVolume = true@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
204 [style = filled, label = "{if (startedVm == null && canRetry) {final Step prevStep = work.getStep()_workDao.updateStep(work,Step.Release)if ((prevStep == Step.Started || prevStep == Step.Starting) && startAnswer != null && startAnswer.getResult()) {cleanup(vmGuru,vmProfile,work,Event.OperationFailed,false)}{cleanup(vmGuru,vmProfile,work,Event.OperationFailed,true)}}}@@@287@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
161 [style = filled, label = "int retries = 3@@@194@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
211 [style = filled, label = "reuseVolume@@@49@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "throw new CloudRuntimeException(\"Unable to start instance '\" + vm.getHostName() + \"' (\" + vm.getUuid() + \"), see management server log for details\")@@@320@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "orchestrateStart['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "start == null@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
192 [style = filled, label = "vmProfile.setCpuOvercommitRatio(Float.parseFloat(cluster_detail_cpu.getValue()))@@@127@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
215 [style = filled, label = "final DeploymentPlan planToDeploy@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
145 [style = filled, label = "s_logger.info(\"Insufficient capacity \",e)@@@266@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "retries > 0@@@195@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "{if (startedVm == null) {if (VirtualMachine.Type.User.equals(vm.type) && ResourceCountRunningVMsonly.value()) {resourceCountDecrement(owner.getAccountId(),new Long(offering.getCpu()),new Long(offering.getRamSize()))}if (canRetry) {try {changeState(vm,Event.OperationFailed,null,work,Step.Done)}catch (final NoTransitionException e) }}if (planToDeploy != null) {planToDeploy.setAvoids(avoids)}}@@@301@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "throw new ConcurrentOperationException(\"Failed to deploy VM\" + vm.getUuid())@@@178@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "s_logger.info(\"Unable to contact resource.\",e)@@@254@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96->220 [style = bold, label=""];
99->43 [style = solid, label="account"];
137->83 [style = solid, label="avoids"];
176->102 [style = bold, label=""];
154->157 [style = solid, label="destHostId"];
206->49 [style = solid, label="vm"];
134->45 [style = dotted, label="true"];
158->209 [style = bold, label=""];
109->204 [style = bold, label=""];
79->76 [style = bold, label=""];
93->129 [style = bold, label=""];
118->196 [style = solid, label="answer"];
90->192 [style = bold, label=""];
149->73 [style = bold, label=""];
150->36 [style = bold, label=""];
220->34 [style = dotted, label="true"];
171->108 [style = solid, label="vmTO"];
54->4 [style = dotted, label="true"];
67->172 [style = dotted, label="true"];
147->204 [style = bold, label=""];
8->145 [style = bold, label=""];
67->61 [style = dotted, label="true"];
111->54 [style = solid, label="dest"];
165->208 [style = dotted, label="true"];
137->17 [style = bold, label=""];
111->16 [style = solid, label="dest"];
48->90 [style = bold, label=""];
138->28 [style = bold, label=""];
67->207 [style = dotted, label="true"];
165->27 [style = dotted, label="true"];
147->93 [style = dotted, label="true"];
86->81 [style = dotted, label="true"];
156->165 [style = solid, label="cmds"];
202->204 [style = bold, label=""];
165->14 [style = dotted, label="true"];
41->164 [style = dotted, label="true"];
190->104 [style = solid, label="work"];
14->208 [style = bold, label=""];
188->163 [style = dotted, label="true"];
185->123 [style = solid, label="finalHost"];
67->113 [style = dotted, label="true"];
4->23 [style = dotted, label="true"];
41->200 [style = dotted, label="true"];
155->139 [style = dotted, label="true"];
80->59 [style = solid, label="host_guid"];
79->76 [style = solid, label="gpuDevice"];
67->89 [style = dotted, label="true"];
18->96 [style = bold, label=""];
225->228 [style = bold, label=""];
154->165 [style = solid, label="destHostId"];
67->181 [style = dotted, label="true"];
50->200 [style = bold, label=""];
22->110 [style = solid, label="ctx"];
214->67 [style = bold, label=""];
111->57 [style = solid, label="dest"];
106->43 [style = bold, label=""];
189->55 [style = bold, label=""];
123->59 [style = bold, label=""];
199->204 [style = bold, label=""];
67->184 [style = dotted, label="true"];
53->193 [style = dotted, label="false"];
38->183 [style = dotted, label="false"];
90->7 [style = bold, label=""];
194->87 [style = bold, label=""];
165->44 [style = bold, label=""];
67->169 [style = dotted, label="true"];
143->109 [style = dotted, label="true"];
154->195 [style = solid, label="destHostId"];
105->49 [style = bold, label=""];
67->179 [style = dotted, label="true"];
160->220 [style = dashed, label="0"];
67->124 [style = dotted, label="true"];
121->137 [style = dotted, label="true"];
203->111 [style = solid, label="plan"];
151->52 [style = solid, label="startedVm"];
127->172 [style = solid, label="params"];
29->166 [style = dotted, label="true"];
77->9 [style = dotted, label="true"];
78->213 [style = dotted, label="true"];
49->204 [style = solid, label="vmProfile"];
67->131 [style = dotted, label="true"];
22->203 [style = solid, label="ctx"];
229->224 [style = bold, label=""];
224->225 [style = bold, label=""];
67->131 [style = solid, label="retry"];
142->64 [style = bold, label=""];
53->84 [style = dotted, label="false"];
206->83 [style = solid, label="vm"];
200->164 [style = bold, label=""];
133->2 [style = solid, label="rootVolClusterId"];
165->69 [style = dotted, label="false"];
118->168 [style = solid, label="answer"];
8->145 [style = dotted, label="true"];
152->133 [style = bold, label=""];
157->122 [style = bold, label=""];
148->128 [style = dotted, label="true"];
8->147 [style = dotted, label="true"];
67->135 [style = dotted, label="true"];
75->48 [style = bold, label=""];
118->35 [style = solid, label="answer"];
90->101 [style = dotted, label="true"];
206->198 [style = solid, label="vm"];
43->65 [style = bold, label=""];
86->146 [style = bold, label=""];
173->153 [style = dotted, label="true"];
88->36 [style = bold, label=""];
39->112 [style = bold, label=""];
219->216 [style = dotted, label="true"];
112->152 [style = bold, label=""];
173->199 [style = dotted, label="true"];
17->142 [style = dotted, label="true"];
117->144 [style = bold, label=""];
215->83 [style = solid, label="planToDeploy"];
165->140 [style = dotted, label="false"];
91->116 [style = bold, label=""];
128->39 [style = dotted, label="true"];
115->113 [style = bold, label=""];
38->68 [style = dotted, label="true"];
0->79 [style = bold, label=""];
210->42 [style = bold, label=""];
167->117 [style = bold, label=""];
100->188 [style = solid, label="planToDeploy"];
112->2 [style = solid, label="rootVolDcId"];
190->71 [style = solid, label="work"];
82->212 [style = bold, label=""];
87->21 [style = bold, label=""];
67->82 [style = dotted, label="true"];
100->121 [style = solid, label="planToDeploy"];
226->221 [style = bold, label=""];
195->61 [style = bold, label=""];
40->97 [style = dotted, label="true"];
165->32 [style = dotted, label="true"];
35->78 [style = bold, label=""];
111->181 [style = solid, label="dest"];
77->179 [style = bold, label=""];
176->1 [style = dotted, label="true"];
219->217 [style = dotted, label="true"];
206->88 [style = solid, label="vm"];
191->149 [style = bold, label=""];
166->151 [style = bold, label=""];
81->102 [style = dotted, label="true"];
33->204 [style = solid, label="startedVm"];
173->153 [style = bold, label=""];
221->223 [style = bold, label=""];
207->80 [style = dotted, label="true"];
215->38 [style = solid, label="planToDeploy"];
13->57 [style = dotted, label="true"];
104->195 [style = bold, label=""];
20->167 [style = bold, label=""];
119->99 [style = bold, label=""];
47->67 [style = bold, label=""];
68->86 [style = solid, label="clusterIdSpecified"];
60->80 [style = bold, label=""];
182->203 [style = bold, label=""];
129->204 [style = bold, label=""];
55->54 [style = bold, label=""];
64->70 [style = bold, label=""];
26->121 [style = bold, label=""];
49->111 [style = solid, label="vmProfile"];
213->3 [style = solid, label="platform"];
6->114 [style = solid, label="startAnswer"];
229->224 [style = solid, label="vlanToPersistenceMap"];
32->0 [style = dotted, label="true"];
67->131 [style = bold, label=""];
45->27 [style = bold, label=""];
211->49 [style = bold, label=""];
134->72 [style = bold, label=""];
68->102 [style = solid, label="clusterIdSpecified"];
117->20 [style = dotted, label="true"];
73->75 [style = bold, label=""];
80->155 [style = bold, label=""];
163->5 [style = solid, label="plan"];
134->117 [style = dotted, label="true"];
164->83 [style = solid, label="canRetry"];
80->155 [style = solid, label="host_guid"];
203->188 [style = bold, label=""];
188->141 [style = dotted, label="true"];
207->60 [style = dotted, label="true"];
206->58 [style = solid, label="vm"];
38->187 [style = dotted, label="false"];
165->10 [style = dotted, label="false"];
82->154 [style = bold, label=""];
22->16 [style = solid, label="ctx"];
160->158 [style = bold, label=""];
49->57 [style = solid, label="vmProfile"];
207->60 [style = bold, label=""];
137->17 [style = solid, label="avoids"];
154->208 [style = solid, label="destHostId"];
106->204 [style = solid, label="vmGuru"];
135->104 [style = bold, label=""];
190->204 [style = solid, label="work"];
133->86 [style = solid, label="rootVolClusterId"];
67->149 [style = dotted, label="true"];
148->112 [style = dotted, label="true"];
190->61 [style = solid, label="work"];
77->9 [style = bold, label=""];
23->111 [style = solid, label="plan"];
43->65 [style = solid, label="start"];
49->210 [style = bold, label=""];
222->229 [style = bold, label=""];
40->177 [style = dotted, label="true"];
44->198 [style = dotted, label="true"];
149->75 [style = solid, label="cluster_id"];
3->10 [style = bold, label=""];
87->184 [style = bold, label=""];
196->35 [style = bold, label=""];
84->193 [style = bold, label=""];
206->140 [style = solid, label="vm"];
24->225 [style = dashed, label="0"];
150->49 [style = bold, label=""];
127->49 [style = solid, label="params"];
196->10 [style = bold, label=""];
155->185 [style = dotted, label="true"];
19->49 [style = solid, label="offering"];
206->151 [style = solid, label="vm"];
165->134 [style = dotted, label="true"];
207->124 [style = bold, label=""];
17->64 [style = bold, label=""];
96->49 [style = solid, label="owner"];
158->204 [style = solid, label="canRetry"];
221->222 [style = solid, label="vm"];
41->50 [style = bold, label=""];
95->206 [style = bold, label=""];
133->38 [style = bold, label=""];
4->23 [style = bold, label=""];
151->14 [style = bold, label=""];
94->126 [style = dotted, label="true"];
139->178 [style = solid, label="destHostId"];
24->69 [style = bold, label=""];
41->50 [style = dotted, label="true"];
13->154 [style = bold, label=""];
177->111 [style = solid, label="planner"];
4->214 [style = dotted, label="true"];
171->172 [style = bold, label=""];
53->25 [style = dotted, label="true"];
67->57 [style = solid, label="retry"];
208->144 [style = solid, label="vmHost"];
29->166 [style = bold, label=""];
165->29 [style = dotted, label="true"];
209->111 [style = solid, label="avoids"];
174->202 [style = dotted, label="true"];
49->110 [style = solid, label="vmProfile"];
133->1 [style = solid, label="rootVolClusterId"];
67->171 [style = dotted, label="true"];
138->24 [style = solid, label="vlanToPersistenceMap"];
16->77 [style = bold, label=""];
148->36 [style = bold, label=""];
183->187 [style = bold, label=""];
206->201 [style = solid, label="vm"];
64->70 [style = dotted, label="true"];
10->180 [style = bold, label=""];
203->5 [style = solid, label="plan"];
146->111 [style = solid, label="plan"];
134->72 [style = dotted, label="true"];
213->91 [style = solid, label="platform"];
38->146 [style = dotted, label="true"];
98->31 [style = bold, label=""];
4->51 [style = bold, label=""];
76->178 [style = bold, label=""];
68->1 [style = solid, label="clusterIdSpecified"];
17->142 [style = bold, label=""];
105->88 [style = bold, label=""];
69->118 [style = bold, label=""];
174->30 [style = bold, label=""];
161->117 [style = bold, label=""];
82->212 [style = dotted, label="true"];
206->144 [style = solid, label="vm"];
86->81 [style = bold, label=""];
139->118 [style = solid, label="destHostId"];
92->105 [style = bold, label=""];
51->82 [style = bold, label=""];
67->6 [style = dotted, label="true"];
144->20 [style = bold, label=""];
154->178 [style = solid, label="destHostId"];
40->100 [style = dotted, label="true"];
67->108 [style = dotted, label="true"];
214->211 [style = solid, label="reuseVolume"];
130->192 [style = bold, label=""];
48->136 [style = dotted, label="true"];
188->18 [style = bold, label=""];
138->28 [style = solid, label="vlanToPersistenceMap"];
52->15 [style = dotted, label="true"];
46->43 [style = solid, label="vm"];
67->104 [style = dotted, label="true"];
32->159 [style = bold, label=""];
148->133 [style = dotted, label="true"];
116->10 [style = bold, label=""];
102->146 [style = bold, label=""];
142->111 [style = solid, label="avoids"];
217->210 [style = solid, label="params"];
123->59 [style = dotted, label="true"];
154->191 [style = bold, label=""];
27->124 [style = bold, label=""];
156->11 [style = bold, label=""];
32->79 [style = bold, label=""];
156->110 [style = solid, label="cmds"];
183->111 [style = solid, label="plan"];
96->160 [style = bold, label=""];
67->210 [style = dotted, label="true"];
22->146 [style = solid, label="ctx"];
80->185 [style = solid, label="host_guid"];
120->91 [style = bold, label=""];
117->144 [style = dotted, label="true"];
49->171 [style = solid, label="vmProfile"];
201->208 [style = bold, label=""];
67->54 [style = dotted, label="true"];
179->113 [style = bold, label=""];
110->108 [style = bold, label=""];
81->146 [style = bold, label=""];
159->0 [style = bold, label=""];
213->3 [style = bold, label=""];
146->36 [style = bold, label=""];
180->124 [style = bold, label=""];
49->181 [style = solid, label="vmProfile"];
124->74 [style = bold, label=""];
215->121 [style = solid, label="planToDeploy"];
219->215 [style = dotted, label="true"];
48->90 [style = dotted, label="false"];
74->83 [style = bold, label=""];
190->135 [style = bold, label=""];
141->162 [style = bold, label=""];
120->116 [style = solid, label="vmmetadata"];
217->172 [style = solid, label="params"];
48->136 [style = bold, label=""];
200->56 [style = dotted, label="true"];
179->115 [style = dotted, label="true"];
209->83 [style = solid, label="avoids"];
223->222 [style = bold, label=""];
209->26 [style = bold, label=""];
42->111 [style = bold, label=""];
67->211 [style = dotted, label="true"];
54->51 [style = dotted, label="true"];
145->147 [style = bold, label=""];
204->67 [style = bold, label=""];
206->72 [style = solid, label="vm"];
169->194 [style = bold, label=""];
172->89 [style = bold, label=""];
196->35 [style = dotted, label="true"];
67->192 [style = dotted, label="true"];
7->101 [style = bold, label=""];
158->83 [style = solid, label="canRetry"];
10->168 [style = dotted, label="true"];
118->196 [style = bold, label=""];
211->205 [style = dotted, label="true"];
40->119 [style = bold, label=""];
168->157 [style = bold, label=""];
56->164 [style = bold, label=""];
23->62 [style = bold, label=""];
67->77 [style = dotted, label="true"];
67->156 [style = dotted, label="true"];
87->21 [style = dotted, label="true"];
198->58 [style = bold, label=""];
103->197 [style = dotted, label="true"];
142->83 [style = solid, label="avoids"];
127->210 [style = solid, label="params"];
70->186 [style = bold, label=""];
148->38 [style = dotted, label="true"];
48->130 [style = dotted, label="true"];
163->18 [style = bold, label=""];
186->125 [style = bold, label=""];
135->71 [style = dotted, label="true"];
134->27 [style = bold, label=""];
38->68 [style = bold, label=""];
117->45 [style = bold, label=""];
6->74 [style = solid, label="startAnswer"];
13->57 [style = bold, label=""];
81->176 [style = bold, label=""];
151->204 [style = solid, label="startedVm"];
28->24 [style = dotted, label="true"];
196->78 [style = dotted, label="true"];
152->2 [style = solid, label="rootVolPodId"];
202->53 [style = dotted, label="true"];
106->43 [style = solid, label="vmGuru"];
28->69 [style = bold, label=""];
25->204 [style = bold, label=""];
186->4 [style = solid, label="planChangedByVolume"];
211->107 [style = dotted, label="true"];
192->169 [style = bold, label=""];
190->83 [style = solid, label="work"];
227->223 [style = solid, label="vmName"];
29->151 [style = bold, label=""];
67->111 [style = dotted, label="true"];
165->76 [style = dotted, label="true"];
197->167 [style = bold, label=""];
49->165 [style = solid, label="vmProfile"];
224->228 [style = bold, label=""];
44->198 [style = bold, label=""];
105->88 [style = dotted, label="true"];
93->63 [style = dotted, label="false"];
141->162 [style = dotted, label="true"];
4->62 [style = dotted, label="true"];
14->201 [style = bold, label=""];
167->117 [style = solid, label="retries"];
88->49 [style = bold, label=""];
152->183 [style = solid, label="rootVolPodId"];
215->188 [style = solid, label="planToDeploy"];
72->144 [style = solid, label="sshAccessDetails"];
40->127 [style = dotted, label="true"];
33->83 [style = solid, label="startedVm"];
46->106 [style = solid, label="vm"];
11->110 [style = bold, label=""];
6->207 [style = solid, label="startAnswer"];
164->12 [style = bold, label=""];
165->28 [style = dotted, label="false"];
6->207 [style = bold, label=""];
67->110 [style = dotted, label="true"];
184->16 [style = bold, label=""];
163->111 [style = solid, label="plan"];
170->83 [style = solid, label="work"];
179->115 [style = bold, label=""];
165->114 [style = bold, label=""];
118->10 [style = solid, label="answer"];
170->33 [style = bold, label=""];
78->3 [style = dotted, label="true"];
111->9 [style = solid, label="dest"];
71->104 [style = bold, label=""];
10->122 [style = dotted, label="true"];
165->118 [style = dotted, label="false"];
33->19 [style = bold, label=""];
47->67 [style = solid, label="retry"];
67->83 [style = bold, label=""];
143->37 [style = bold, label=""];
207->165 [style = dotted, label="true"];
108->190 [style = bold, label=""];
165->180 [style = dotted, label="false"];
98->31 [style = dotted, label="true"];
105->36 [style = bold, label=""];
53->25 [style = bold, label=""];
140->138 [style = bold, label=""];
178->29 [style = bold, label=""];
224->225 [style = dotted, label="true"];
67->75 [style = dotted, label="true"];
175->148 [style = bold, label=""];
78->213 [style = bold, label=""];
151->83 [style = solid, label="startedVm"];
148->128 [style = bold, label=""];
12->204 [style = bold, label=""];
72->161 [style = bold, label=""];
49->51 [style = solid, label="vmProfile"];
226->227 [style = dotted, label="true"];
125->5 [style = bold, label=""];
208->134 [style = solid, label="vmHost"];
160->34 [style = dotted, label="true"];
67->16 [style = dotted, label="true"];
3->116 [style = dotted, label="true"];
155->185 [style = bold, label=""];
137->111 [style = solid, label="avoids"];
139->165 [style = solid, label="destHostId"];
187->150 [style = bold, label=""];
185->123 [style = bold, label=""];
208->134 [style = bold, label=""];
5->23 [style = solid, label="originalPlan"];
190->135 [style = solid, label="work"];
53->84 [style = bold, label=""];
44->58 [style = bold, label=""];
58->140 [style = bold, label=""];
217->49 [style = solid, label="params"];
93->129 [style = dotted, label="true"];
113->181 [style = bold, label=""];
164->204 [style = solid, label="canRetry"];
66->55 [style = dotted, label="true"];
139->208 [style = solid, label="destHostId"];
136->130 [style = bold, label=""];
10->168 [style = bold, label=""];
74->204 [style = bold, label=""];
61->6 [style = bold, label=""];
209->17 [style = solid, label="avoids"];
165->79 [style = dotted, label="true"];
22->163 [style = solid, label="ctx"];
6->59 [style = solid, label="startAnswer"];
154->118 [style = solid, label="destHostId"];
31->204 [style = bold, label=""];
67->11 [style = dotted, label="true"];
174->30 [style = dotted, label="true"];
223->228 [style = solid, label="cmd"];
22->181 [style = solid, label="ctx"];
122->180 [style = bold, label=""];
10->157 [style = dotted, label="true"];
126->184 [style = bold, label=""];
148->152 [style = dotted, label="true"];
216->46 [style = solid, label="vmUuid"];
155->165 [style = bold, label=""];
133->183 [style = solid, label="rootVolClusterId"];
111->110 [style = solid, label="dest"];
211->36 [style = dotted, label="true"];
123->139 [style = bold, label=""];
187->2 [style = dotted, label="true"];
220->34 [style = bold, label=""];
93->63 [style = bold, label=""];
30->202 [style = bold, label=""];
200->56 [style = bold, label=""];
65->95 [style = dotted, label="true"];
41->12 [style = dotted, label="true"];
67->74 [style = dotted, label="true"];
188->141 [style = bold, label=""];
121->137 [style = bold, label=""];
57->154 [style = bold, label=""];
211->85 [style = dotted, label="true"];
92->175 [style = bold, label=""];
38->86 [style = dotted, label="true"];
155->123 [style = dotted, label="true"];
211->85 [style = bold, label=""];
82->13 [style = dotted, label="true"];
38->150 [style = dotted, label="false"];
67->154 [style = dotted, label="true"];
58->69 [style = solid, label="stopCmd"];
132->43 [style = solid, label="caller"];
117->167 [style = dotted, label="true"];
49->9 [style = solid, label="vmProfile"];
220->158 [style = bold, label=""];
3->91 [style = dotted, label="true"];
162->163 [style = bold, label=""];
89->156 [style = bold, label=""];
36->92 [style = solid, label="volTemplateId"];
67->195 [style = dotted, label="true"];
85->36 [style = bold, label=""];
66->189 [style = dotted, label="true"];
6->124 [style = solid, label="startAnswer"];
67->48 [style = dotted, label="true"];
141->163 [style = bold, label=""];
143->37 [style = dotted, label="true"];
64->186 [style = bold, label=""];
6->204 [style = solid, label="startAnswer"];
67->191 [style = dotted, label="true"];
149->73 [style = solid, label="cluster_id"];
139->165 [style = bold, label=""];
22->183 [style = solid, label="ctx"];
62->214 [style = bold, label=""];
78->10 [style = bold, label=""];
99->132 [style = bold, label=""];
115->211 [style = solid, label="reuseVolume"];
65->95 [style = bold, label=""];
219->119 [style = bold, label=""];
103->197 [style = bold, label=""];
68->86 [style = bold, label=""];
114->32 [style = bold, label=""];
171->172 [style = solid, label="vmTO"];
28->24 [style = bold, label=""];
187->2 [style = bold, label=""];
111->54 [style = bold, label=""];
165->114 [style = dotted, label="true"];
94->126 [style = bold, label=""];
128->112 [style = bold, label=""];
202->53 [style = bold, label=""];
19->182 [style = bold, label=""];
3->120 [style = bold, label=""];
128->39 [style = bold, label=""];
52->15 [style = bold, label=""];
146->49 [style = bold, label=""];
65->206 [style = bold, label=""];
156->195 [style = solid, label="cmds"];
125->211 [style = solid, label="reuseVolume"];
76->178 [style = dotted, label="true"];
112->183 [style = solid, label="rootVolDcId"];
121->17 [style = bold, label=""];
83->52 [style = bold, label=""];
54->82 [style = bold, label=""];
206->102 [style = solid, label="vm"];
33->52 [style = solid, label="startedVm"];
211->148 [style = dotted, label="true"];
165->196 [style = dotted, label="false"];
1->102 [style = bold, label=""];
3->120 [style = dotted, label="true"];
97->46 [style = solid, label="vmUuid"];
67->42 [style = dotted, label="true"];
36->92 [style = bold, label=""];
67->73 [style = dotted, label="true"];
76->29 [style = bold, label=""];
92->105 [style = dotted, label="true"];
69->118 [style = solid, label="cmd"];
132->46 [style = bold, label=""];
67->194 [style = dotted, label="true"];
111->82 [style = solid, label="dest"];
147->93 [style = bold, label=""];
9->179 [style = bold, label=""];
100->38 [style = solid, label="planToDeploy"];
176->1 [style = bold, label=""];
2->150 [style = bold, label=""];
38->183 [style = bold, label=""];
193->204 [style = bold, label=""];
211->92 [style = dotted, label="true"];
171->11 [style = solid, label="vmTO"];
206->157 [style = solid, label="vm"];
165->44 [style = dotted, label="false"];
206->22 [style = bold, label=""];
131->211 [style = bold, label=""];
67->87 [style = dotted, label="true"];
165->138 [style = dotted, label="false"];
67->49 [style = dotted, label="true"];
37->109 [style = bold, label=""];
206->168 [style = solid, label="vm"];
161->167 [style = solid, label="retries"];
49->16 [style = solid, label="vmProfile"];
22->170 [style = bold, label=""];
207->155 [style = dotted, label="true"];
219->177 [style = dotted, label="true"];
66->189 [style = bold, label=""];
165->151 [style = dotted, label="true"];
150->4 [style = solid, label="planChangedByVolume"];
153->199 [style = bold, label=""];
229->225 [style = solid, label="vlanToPersistenceMap"];
101->192 [style = bold, label=""];
135->71 [style = bold, label=""];
62->4 [style = solid, label="planChangedByVolume"];
54->4 [style = bold, label=""];
63->204 [style = bold, label=""];
59->139 [style = bold, label=""];
34->158 [style = bold, label=""];
5->47 [style = bold, label=""];
212->13 [style = bold, label=""];
211->218 [style = dotted, label="true"];
161->117 [style = solid, label="retries"];
227->221 [style = solid, label="vmName"];
139->157 [style = solid, label="destHostId"];
90->7 [style = dotted, label="true"];
148->49 [style = bold, label=""];
160->34 [style = bold, label=""];
182->49 [style = solid, label="template"];
22->165 [style = solid, label="ctx"];
67->190 [style = dotted, label="true"];
211->175 [style = dotted, label="true"];
165->58 [style = dotted, label="false"];
21->184 [style = bold, label=""];
81->176 [style = dotted, label="true"];
181->171 [style = bold, label=""];
134->161 [style = dotted, label="true"];
32->159 [style = dotted, label="true"];
14->201 [style = dotted, label="true"];
100->83 [style = solid, label="planToDeploy"];
46->106 [style = bold, label=""];
}
