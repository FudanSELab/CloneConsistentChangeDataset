digraph {
43 [style = filled, label = "testDescribeConsumerGroups['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(GROUP_ID,Errors.COORDINATOR_LOAD_IN_PROGRESS,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(2,groupDescription.members().size())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final DescribeConsumerGroupsResult result = env.adminClient().describeConsumerGroups(singletonList(\"group-0\"))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "TestUtils.assertFutureError(result.describedGroups().get(\"group-0\"),)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "topicPartitions.add(0,myTopicPartition0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.COORDINATOR_NOT_AVAILABLE,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "byte(( memberAssignmentBytes = new byte((((@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.COORDINATOR_LOAD_IN_PROGRESS,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.NOT_COORDINATOR,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "assertEquals(GROUP_ID,groupDescription.groupId())@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(GROUP_ID,Errors.COORDINATOR_NOT_AVAILABLE,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "final List<TopicPartition> topicPartitions = new ArrayList<>()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<MemberDescription> expectedMemberDescriptions = new ArrayList<>()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.COORDINATOR_NOT_AVAILABLE,Node.noNode()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final ConsumerGroupDescription groupDescription = result.describedGroups().get(\"group-0\").get()@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "memberAssignment.get(memberAssignmentBytes)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "DescribedGroupMember memberTwo = DescribeGroupsResponse.groupMember(\"1\",\"instance2\",\"clientId1\",\"clientHost\",memberAssignmentBytes,null)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DescribedGroupMember memberOne = DescribeGroupsResponse.groupMember(\"0\",\"instance1\",\"clientId0\",\"clientHost\",memberAssignmentBytes,null)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final ConsumerGroupDescription groupDescription = result.describedGroups().get(GROUP_ID).get()@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final ByteBuffer memberAssignment = ConsumerProtocol.serializeAssignment(new ConsumerPartitionAssignor.Assignment(topicPartitions))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testDescribeNonConsumerGroups['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(expectedMemberDescriptions,groupDescription.members())@@@41@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.NONE,\"\",ConsumerProtocol.PROTOCOL_TYPE,\"\",asList(memberOne,memberTwo),Collections.emptySet()))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "topicPartitions.add(1,myTopicPartition1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "data = new DescribeGroupsResponseData()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "env.kafkaClient().setNodeApiVersions(NodeApiVersions.create())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"group-0\",groupDescription.groupId())@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "expectedMemberDescriptions.add(convertToMemberDescriptions(memberTwo,new MemberAssignment(new HashSet<>(topicPartitions))))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(GROUP_ID,Errors.NOT_COORDINATOR,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "topicPartitions.add(2,myTopicPartition2)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testDescribeConsumerGroups['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TopicPartition myTopicPartition2 = new TopicPartition(\"my_topic\",2)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "data = new DescribeGroupsResponseData()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(GROUP_ID,Errors.NONE,\"\",ConsumerProtocol.PROTOCOL_TYPE,\"\",asList(memberOne,memberTwo),Collections.emptySet()))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "TopicPartition myTopicPartition0 = new TopicPartition(\"my_topic\",0)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DescribeGroupsResponseData data = new DescribeGroupsResponseData()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.NONE,\"\",\"non-consumer\",\"\",asList(),Collections.emptySet()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(1,result.describedGroups().size())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "expectedMemberDescriptions.add(convertToMemberDescriptions(memberOne,new MemberAssignment(new HashSet<>(topicPartitions))))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "TopicPartition myTopicPartition1 = new TopicPartition(\"my_topic\",1)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "data = new DescribeGroupsResponseData()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.COORDINATOR_LOAD_IN_PROGRESS,Node.noNode()))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final DescribeConsumerGroupsResult result = env.adminClient().describeConsumerGroups(singletonList(GROUP_ID))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41->19 [style = bold, label=""];
42->45 [style = bold, label=""];
17->36 [style = solid, label="memberOne"];
25->48 [style = dashed, label="0"];
21->8 [style = bold, label=""];
21->8 [style = solid, label="memberAssignmentBytes"];
40->20 [style = bold, label=""];
24->39 [style = dashed, label="0"];
9->35 [style = bold, label=""];
49->22 [style = bold, label=""];
19->5 [style = bold, label=""];
35->37 [style = solid, label="data"];
5->0 [style = bold, label=""];
24->11 [style = bold, label=""];
37->38 [style = bold, label=""];
6->41 [style = bold, label=""];
25->15 [style = bold, label=""];
28->25 [style = bold, label=""];
23->36 [style = bold, label=""];
19->28 [style = bold, label=""];
32->11 [style = solid, label="data"];
11->28 [style = bold, label=""];
29->2 [style = solid, label="myTopicPartition1"];
22->33 [style = bold, label=""];
15->13 [style = bold, label=""];
35->44 [style = bold, label=""];
6->19 [style = solid, label="data"];
16->29 [style = bold, label=""];
36->31 [style = bold, label=""];
14->22 [style = bold, label=""];
26->47 [style = dashed, label="0"];
4->1 [style = solid, label="myTopicPartition2"];
28->42 [style = dashed, label="0"];
16->3 [style = solid, label="myTopicPartition0"];
10->21 [style = bold, label=""];
13->40 [style = dashed, label="0"];
38->32 [style = bold, label=""];
17->39 [style = solid, label="memberOne"];
8->17 [style = bold, label=""];
20->18 [style = bold, label=""];
17->34 [style = bold, label=""];
3->2 [style = bold, label=""];
21->34 [style = solid, label="memberAssignmentBytes"];
43->22 [style = bold, label=""];
33->30 [style = bold, label=""];
5->9 [style = solid, label="data"];
7->36 [style = solid, label="topicPartitions"];
23->18 [style = solid, label="expectedMemberDescriptions"];
44->37 [style = bold, label=""];
6->47 [style = bold, label=""];
6->26 [style = bold, label=""];
46->9 [style = bold, label=""];
45->15 [style = bold, label=""];
2->1 [style = bold, label=""];
7->10 [style = solid, label="topicPartitions"];
31->24 [style = bold, label=""];
32->16 [style = bold, label=""];
26->19 [style = bold, label=""];
34->39 [style = solid, label="memberTwo"];
4->7 [style = bold, label=""];
26->41 [style = dashed, label="0"];
27->37 [style = bold, label=""];
30->12 [style = bold, label=""];
25->45 [style = dashed, label="0"];
15->40 [style = bold, label=""];
34->23 [style = bold, label=""];
27->44 [style = dashed, label="0"];
31->39 [style = bold, label=""];
17->24 [style = solid, label="memberOne"];
0->46 [style = dashed, label="0"];
7->31 [style = solid, label="topicPartitions"];
0->9 [style = bold, label=""];
35->27 [style = bold, label=""];
29->4 [style = bold, label=""];
11->42 [style = bold, label=""];
12->6 [style = bold, label=""];
39->11 [style = bold, label=""];
21->17 [style = solid, label="memberAssignmentBytes"];
7->3 [style = bold, label=""];
34->31 [style = solid, label="memberTwo"];
34->24 [style = solid, label="memberTwo"];
22->12 [style = bold, label=""];
47->19 [style = bold, label=""];
28->48 [style = bold, label=""];
1->10 [style = bold, label=""];
5->46 [style = bold, label=""];
13->20 [style = bold, label=""];
}
