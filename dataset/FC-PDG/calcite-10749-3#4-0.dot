digraph {
2 [style = filled, label = "tester.checkBoolean(\"1.1>=1.1\",Boolean.TRUE)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "tester.checkBoolean(\"2>=1\",Boolean.TRUE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tester.checkBoolean(\"x'0A000130'>=x'0A0001B0'\",Boolean.FALSE)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "tester.checkBoolean(\"x'0A0001B0'>=x'0A0001B0'\",Boolean.TRUE)@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "tester.setFor(SqlStdOperatorTable.GREATER_THAN_OR_EQUAL)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "tester.checkBoolean(\"true is not true\",Boolean.FALSE)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testGreaterThanOrEqualOperator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "tester.checkBoolean(\"1.2>=cast(1e5 as double)\",Boolean.FALSE)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "tester.checkBoolean(\"false is not true\",Boolean.TRUE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "tester.checkBoolean(\"true>=true\",Boolean.TRUE)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "tester.checkFails(\"select ^'a string' is not true^ from (values (1))\",\"(?s)Cannot apply 'IS NOT TRUE' to arguments of type '<CHAR\(8\)> IS NOT TRUE'. Supported form\(s\): '<BOOLEAN> IS NOT TRUE'.*\",false)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testGreaterThanOrEqualOperator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tester.checkBoolean(\"-1.1>=-1.2\",Boolean.TRUE)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "tester.checkBoolean(\"1.2e4>=1e5\",Boolean.FALSE)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testIsNotTrueOperator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tester.checkBoolean(\"1.2e4>=cast(1e5 as real)\",Boolean.FALSE)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tester.checkBoolean(\"1>=1\",Boolean.TRUE)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "tester.setFor(SqlStdOperatorTable.IS_NOT_TRUE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "tester.checkBoolean(\"120000>=cast(1e5 as real)\",Boolean.TRUE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "tester.checkBoolean(\"1.2>=1\",Boolean.TRUE)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "tester.checkBoolean(\"true>=false\",Boolean.TRUE)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "tester.checkBoolean(\"false>=false\",Boolean.TRUE)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "tester.checkBoolean(\"cast(null as boolean) is not true\",Boolean.TRUE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "tester.checkBoolean(\"1.1>=1.2\",Boolean.FALSE)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "tester.checkBoolean(\"false>=true\",Boolean.FALSE)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "tester.checkNull(\"cast(null as real)>=999\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tester.checkBoolean(\"-1>=1\",Boolean.FALSE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tester.checkBoolean(\"1>=2\",Boolean.FALSE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->18 [style = bold, label=""];
14->5 [style = bold, label=""];
5->22 [style = dashed, label="0"];
2->7 [style = bold, label=""];
13->17 [style = bold, label=""];
25->24 [style = bold, label=""];
17->12 [style = bold, label=""];
11->15 [style = bold, label=""];
0->8 [style = bold, label=""];
3->13 [style = bold, label=""];
11->23 [style = dashed, label="0"];
24->22 [style = bold, label=""];
16->2 [style = bold, label=""];
20->21 [style = bold, label=""];
12->10 [style = bold, label=""];
26->25 [style = bold, label=""];
1->3 [style = bold, label=""];
6->14 [style = bold, label=""];
14->24 [style = dashed, label="0"];
5->11 [style = bold, label=""];
10->4 [style = bold, label=""];
27->26 [style = bold, label=""];
15->16 [style = bold, label=""];
18->26 [style = dashed, label="0"];
7->1 [style = bold, label=""];
22->23 [style = bold, label=""];
19->18 [style = bold, label=""];
6->25 [style = dashed, label="0"];
8->20 [style = bold, label=""];
18->6 [style = bold, label=""];
4->0 [style = bold, label=""];
}
