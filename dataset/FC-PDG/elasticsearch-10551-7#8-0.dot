digraph {
1 [style = filled, label = "assertThat(processor.getDateFormats().size(),Matchers.equalTo(1))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "config.put(\"date_rounding\",\"y\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "config.put(\"date_rounding\",\"y\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "config.put(\"timezone\",\"+02:00\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "config.put(\"index_name_prefix\",\"_prefix\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(processor.getIndexNamePrefixTemplate().newInstance(Collections.emptyMap()).execute(),Matchers.equalTo(\"_prefix\"))@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "processor = factory.create(null,null,config)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "config.put(\"field\",\"_field\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(processor.getDateFormats().size(),Matchers.equalTo(2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "config.put(\"index_name_prefix\",\"_prefix\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(processor.getTimezone(),Matchers.equalTo(ZoneOffset.ofHours(2)))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "config.put(\"date_rounding\",\"y\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "config.put(\"index_name_prefix\",\"_prefix\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DateIndexNameProcessor processor = factory.create(null,null,config)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "config.put(\"field\",\"_field\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(processor.getIndexNameFormatTemplate().newInstance(Collections.emptyMap()).execute(),Matchers.equalTo(\"yyyy-MM-dd\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<String,Object> config = new HashMap<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "config.put(\"index_name_format\",\"yyyyMMdd\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testDefaults['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertThat(processor.getIndexNamePrefixTemplate().newInstance(Collections.emptyMap()).execute(),Matchers.equalTo(\"\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(processor.getDateRoundingTemplate().newInstance(Collections.emptyMap()).execute(),Matchers.equalTo(\"y\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "config = new HashMap<>()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "processor = factory.create(null,null,config)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(processor.getIndexNameFormatTemplate().newInstance(Collections.emptyMap()).execute(),Matchers.equalTo(\"yyyyMMdd\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "config = new HashMap<>()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "config.put(\"field\",\"_field\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "config.put(\"field\",\"_field\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "DateIndexNameProcessor processor = factory.create(null,null,null,config)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "testDefaults['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "config.put(\"date_rounding\",\"y\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "processor = factory.create(null,null,config)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(processor.getField(),Matchers.equalTo(\"_field\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "config.put(\"date_formats\",Arrays.asList(\"UNIX\",\"UNIX_MS\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(processor.getTimezone(),Matchers.equalTo(ZoneOffset.UTC))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory(TestTemplateService.instance())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "config = new HashMap<>()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testSpecifyOptionalSettings['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "config.put(\"index_name_prefix\",\"_prefix\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30->34 [style = bold, label=""];
4->7 [style = bold, label=""];
8->36 [style = bold, label=""];
27->25 [style = bold, label=""];
20->10 [style = bold, label=""];
37->31 [style = bold, label=""];
13->0 [style = bold, label=""];
10->35 [style = bold, label=""];
10->12 [style = dashed, label="0"];
36->6 [style = bold, label=""];
11->0 [style = bold, label=""];
22->33 [style = bold, label=""];
16->37 [style = bold, label=""];
12->1 [style = bold, label=""];
0->3 [style = bold, label=""];
8->6 [style = bold, label=""];
19->24 [style = bold, label=""];
6->20 [style = bold, label=""];
34->17 [style = bold, label=""];
5->4 [style = bold, label=""];
24->22 [style = bold, label=""];
6->10 [style = bold, label=""];
10->1 [style = bold, label=""];
2->9 [style = bold, label=""];
25->16 [style = bold, label=""];
15->26 [style = bold, label=""];
22->15 [style = solid, label="config"];
3->8 [style = bold, label=""];
28->18 [style = bold, label=""];
6->12 [style = bold, label=""];
17->23 [style = bold, label=""];
3->12 [style = solid, label="config"];
35->21 [style = bold, label=""];
32->0 [style = bold, label=""];
29->14 [style = bold, label=""];
1->35 [style = dashed, label="0"];
27->19 [style = solid, label="config"];
14->15 [style = bold, label=""];
3->10 [style = solid, label="config"];
18->30 [style = bold, label=""];
33->29 [style = bold, label=""];
31->19 [style = bold, label=""];
21->28 [style = bold, label=""];
21->17 [style = solid, label="config"];
23->27 [style = bold, label=""];
1->5 [style = bold, label=""];
7->2 [style = bold, label=""];
}
