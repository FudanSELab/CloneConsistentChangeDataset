digraph {
18 [style = filled, label = "loadQueryable(\"test\",\"2\",Intervals.of(\"PT1h/2011-04-04T01\"))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "loadQueryable(\"test\",\"1\",Intervals.of(\"P1d/2011-04-05\"))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "queryNotifyLatch = new CountDownLatch(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "queryWaitYieldLatch = new CountDownLatch(1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "loadQueryable(\"test\",\"1\",Intervals.of(\"P1d/2011-04-04\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "loadQueryable(\"test\",\"2\",Intervals.of(\"PT1h/2011-04-04T05\"))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "serverManager = new ServerManager(new QueryRunnerFactoryConglomerate(){@Override public QueryRunnerFactory<T,QueryType> findFactory(QueryType query){if (query instanceof SearchQuery) {return (QueryRunnerFactory)factory}{return null}}},new NoopServiceEmitter(),serverManagerExec,new ForegroundCachePopulator(new DefaultObjectMapper(),new CachePopulatorStats(),-1),new DefaultObjectMapper(),new LocalCacheProvider().get(),new CacheConfig(),segmentManager,NoopJoinableFactory.INSTANCE,new ServerConfig())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "loadQueryable(\"test2\",\"1\",Intervals.of(\"P1d/2011-04-02\"))@@@46@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "loadQueryable(\"test\",\"2\",Intervals.of(\"P1d/2011-04-02\"))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "loadQueryable(\"test\",\"1\",Intervals.of(\"P1d/2011-04-03\"))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "queryWaitLatch = new CountDownLatch(1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "loadQueryable(\"test\",\"2\",Intervals.of(\"PT1h/2011-04-04T02\"))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "segmentManager = new SegmentManager(new SegmentLoader(){@Override public boolean isSegmentLoaded(DataSegment segment){return false}@Override public Segment getSegment(final DataSegment segment,boolean lazy){return new SegmentForTesting(MapUtils.getString(segment.getLoadSpec(),\"version\"),(Interval)segment.getLoadSpec().get(\"interval\"))}@Override public File getSegmentFiles(DataSegment segment){throw new UnsupportedOperationException()}@Override public void cleanup(DataSegment segment){}})@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "loadQueryable(\"test\",\"1\",Intervals.of(\"P1d/2011-04-01\"))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "loadQueryable(\"test\",\"2\",Intervals.of(\"PT1h/2011-04-04T03\"))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "loadQueryable(\"test2\",\"1\",Intervals.of(\"P1d/2011-04-01\"))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "loadQueryable(\"test\",\"2\",Intervals.of(\"PT1h/2011-04-04T06\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "serverManagerExec = Executors.newFixedThreadPool(2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EmittingLogger.registerEmitter(new NoopServiceEmitter())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "loadQueryable(\"test\",\"1\",Intervals.of(\"P1d/2011-04-02\"))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "factory = new MyQueryRunnerFactory(queryWaitLatch,queryWaitYieldLatch,queryNotifyLatch)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->11 [style = solid, label="queryWaitLatch"];
3->11 [style = bold, label=""];
0->4 [style = bold, label=""];
22->0 [style = bold, label=""];
9->3 [style = bold, label=""];
18->13 [style = bold, label=""];
14->12 [style = bold, label=""];
3->11 [style = solid, label="queryNotifyLatch"];
11->5 [style = solid, label="factory"];
6->8 [style = bold, label=""];
10->18 [style = bold, label=""];
12->16 [style = bold, label=""];
20->21 [style = bold, label=""];
9->11 [style = solid, label="queryWaitYieldLatch"];
19->5 [style = solid, label="serverManagerExec"];
4->9 [style = bold, label=""];
11->19 [style = bold, label=""];
7->5 [style = solid, label="segmentManager"];
15->20 [style = bold, label=""];
7->5 [style = bold, label=""];
16->17 [style = bold, label=""];
19->7 [style = bold, label=""];
13->14 [style = bold, label=""];
21->6 [style = bold, label=""];
8->10 [style = bold, label=""];
5->15 [style = bold, label=""];
17->2 [style = bold, label=""];
1->0 [style = bold, label=""];
}
