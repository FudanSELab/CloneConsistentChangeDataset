digraph {
21 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "clientSocket = connectWithoutSSL()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Assert.assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertArrayEquals(DATA_TO_CLIENT,buf)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "!handshakeCompleted@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "forceClose(badClientSocket)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "secureClientSocket = connectWithSSL()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "byte(( buf = new byte((((@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "serverThread.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Assert.assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(1))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "badClientSocket = connectWithoutSSL()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(handshakeCompleted)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "buf = new byte((((@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "int bytesRead = clientSocket.getInputStream().read(buf,0,buf.length)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "testTLSDetectionNonBlockingNonStrictServerIdleClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertFalse(handshakeCompleted)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testTLSDetectionNonBlockingStrictServerDisconnectedClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "handshakeCompletedLock@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertTrue(handshakeCompleted)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Socket clientSocket = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "clientSocket.getOutputStream().flush()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Socket badClientSocket = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testTLSDetectionNonBlockingStrictServerDisconnectedClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "byte(( buf = new byte((((@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "{forceClose(badClientSocket)forceClose(clientSocket)forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(handshakeCompleted)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "handshakeCompletedLock@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Socket secureClientSocket = null@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "secureClientSocket = connectWithSSL()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "!handshakeCompleted@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "handshakeCompletedLock@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assert.assertArrayEquals(DATA_TO_CLIENT,buf)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Socket secureClientSocket = null@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertArrayEquals(DATA_TO_CLIENT,buf)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "{forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "clientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37->0 [style = bold, label=""];
14->1 [style = solid, label="bytesRead"];
17->50 [style = dashed, label="0"];
1->19 [style = dashed, label="0"];
5->24 [style = dashed, label="0"];
9->27 [style = dashed, label="0"];
42->48 [style = bold, label=""];
25->47 [style = solid, label="secureClientSocket"];
20->16 [style = bold, label=""];
17->14 [style = solid, label="buf"];
17->14 [style = bold, label=""];
9->21 [style = dashed, label="0"];
30->46 [style = bold, label=""];
6->11 [style = bold, label=""];
6->11 [style = solid, label="badClientSocket"];
18->7 [style = solid, label="secureClientSocket"];
49->40 [style = bold, label=""];
11->48 [style = dashed, label="0"];
29->36 [style = dotted, label="true"];
12->22 [style = bold, label=""];
16->9 [style = bold, label=""];
4->16 [style = bold, label=""];
29->36 [style = bold, label=""];
12->3 [style = dotted, label="true"];
21->0 [style = bold, label=""];
40->26 [style = dotted, label="true"];
26->47 [style = bold, label=""];
6->42 [style = dashed, label="0"];
44->49 [style = bold, label=""];
14->19 [style = solid, label="bytesRead"];
11->18 [style = bold, label=""];
43->45 [style = bold, label=""];
40->29 [style = dotted, label="true"];
15->13 [style = dotted, label="true"];
29->26 [style = bold, label=""];
35->43 [style = solid, label="buf"];
13->5 [style = bold, label=""];
15->12 [style = dotted, label="true"];
5->7 [style = bold, label=""];
15->12 [style = bold, label=""];
24->7 [style = bold, label=""];
51->41 [style = solid, label="bytesRead"];
40->29 [style = bold, label=""];
32->50 [style = bold, label=""];
2->17 [style = bold, label=""];
31->25 [style = bold, label=""];
28->31 [style = bold, label=""];
33->39 [style = solid, label="bytesRead"];
17->23 [style = solid, label="buf"];
23->15 [style = bold, label=""];
6->42 [style = bold, label=""];
14->19 [style = bold, label=""];
17->10 [style = solid, label="buf"];
50->51 [style = solid, label="buf"];
5->32 [style = bold, label=""];
12->13 [style = bold, label=""];
8->2 [style = bold, label=""];
46->35 [style = bold, label=""];
50->44 [style = solid, label="buf"];
38->34 [style = bold, label=""];
25->5 [style = bold, label=""];
18->8 [style = bold, label=""];
12->3 [style = bold, label=""];
48->30 [style = bold, label=""];
10->23 [style = dashed, label="0"];
42->47 [style = solid, label="badClientSocket"];
28->31 [style = dotted, label="true"];
10->15 [style = bold, label=""];
9->0 [style = bold, label=""];
0->6 [style = bold, label=""];
0->27 [style = bold, label=""];
35->33 [style = bold, label=""];
39->43 [style = bold, label=""];
14->51 [style = dashed, label="0"];
15->22 [style = dotted, label="true"];
36->26 [style = bold, label=""];
45->28 [style = bold, label=""];
48->47 [style = solid, label="clientSocket"];
3->22 [style = bold, label=""];
27->6 [style = bold, label=""];
14->1 [style = bold, label=""];
33->39 [style = bold, label=""];
34->37 [style = bold, label=""];
16->21 [style = bold, label=""];
19->23 [style = bold, label=""];
50->51 [style = bold, label=""];
3->13 [style = bold, label=""];
22->24 [style = bold, label=""];
1->10 [style = bold, label=""];
41->44 [style = bold, label=""];
51->41 [style = bold, label=""];
35->33 [style = solid, label="buf"];
13->22 [style = dashed, label="0"];
}
