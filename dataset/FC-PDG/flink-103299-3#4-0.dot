digraph {
3 [style = filled, label = "Assert.assertEquals(expectedValue,buffer.next())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertNull(buffer.next())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "expected = Arrays.asList(8,9,10)@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "buffer.dealWithResponse(response,7)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "buffer.dealWithResponse(response,0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "version = \"another\"@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "response = new CollectCoordinationResponse(version,0,createSerializedResults(expected))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "response = new CollectCoordinationResponse(version,7,createSerializedResults(Arrays.asList(8,9)))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Assert.assertEquals((Integer)7,buffer.next())@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "buffer.dealWithResponse(response,0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "buffer.dealWithResponse(response,0)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "buffer.dealWithResponse(response,3)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(expectedValue,buffer.next())@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Assert.assertEquals(expectedValue,buffer.next())@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "List<Integer> expected = Arrays.asList(4,5,6)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "response = new CollectCoordinationResponse(version,3,Collections.emptyList())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<Integer> expected = Arrays.asList(1,2,3)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "response = new CollectCoordinationResponse(version,6,createSerializedResults(Arrays.asList(8,9,10)))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "testCheckpointedValidResponse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "buffer.dealWithResponse(response,7)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "String version = \"version\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testCheckpointedValidResponse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "Assert.assertNull(buffer.next())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "response = new CollectCoordinationResponse(version,3,createSerializedResults(Arrays.asList(4,5,6)))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "response = new CollectCoordinationResponse(version,0,createSerializedResults(expected))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertNull(buffer.next())@@@24@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "buffer.dealWithResponse(response,0)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "buffer.dealWithResponse(response,0)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testCheckpointedRestart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "response = new CollectCoordinationResponse(version,0,createSerializedResults(Arrays.asList(1,2,3)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertNull(buffer.next())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "response = new CollectCoordinationResponse(version,6,createSerializedResults(Arrays.asList(6,7)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "buffer.complete()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "buffer.dealWithResponse(response,0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CollectCoordinationResponse response = new CollectCoordinationResponse(version,0,Collections.emptyList())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "buffer.dealWithResponse(response,5)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertNull(buffer.next())@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertNull(buffer.next())@@@35@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "expected = Arrays.asList(7)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "response = new CollectCoordinationResponse(version,0,Collections.emptyList())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "AbstractCollectResultBuffer<Integer> buffer = new CheckpointedCollectResultBuffer<>(serializer)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->2 [style = bold, label=""];
40->32 [style = bold, label=""];
20->23 [style = bold, label=""];
39->33 [style = bold, label=""];
8->1 [style = solid, label="response"];
40->32 [style = solid, label="response"];
2->8 [style = solid, label="version"];
2->13 [style = solid, label="version"];
8->40 [style = dashed, label="0"];
1->32 [style = dashed, label="0"];
10->17 [style = bold, label=""];
10->39 [style = bold, label=""];
27->4 [style = bold, label=""];
12->14 [style = bold, label=""];
2->5 [style = bold, label=""];
1->12 [style = bold, label=""];
9->16 [style = bold, label=""];
23->21 [style = solid, label="response"];
26->20 [style = bold, label=""];
28->26 [style = bold, label=""];
0->9 [style = bold, label=""];
16->8 [style = bold, label=""];
14->13 [style = bold, label=""];
13->6 [style = bold, label=""];
33->34 [style = bold, label=""];
15->10 [style = solid, label="response"];
2->0 [style = solid, label="version"];
2->23 [style = solid, label="version"];
28->26 [style = solid, label="response"];
37->12 [style = solid, label="version"];
37->40 [style = solid, label="version"];
5->15 [style = bold, label=""];
11->2 [style = bold, label=""];
39->33 [style = solid, label="response"];
38->30 [style = bold, label=""];
0->9 [style = solid, label="response"];
8->1 [style = bold, label=""];
23->21 [style = bold, label=""];
4->24 [style = bold, label=""];
19->25 [style = bold, label=""];
12->36 [style = solid, label="response"];
37->29 [style = bold, label=""];
3->35 [style = bold, label=""];
29->38 [style = solid, label="response"];
13->6 [style = solid, label="response"];
30->12 [style = solid, label="expected"];
2->15 [style = solid, label="version"];
37->29 [style = solid, label="version"];
30->12 [style = bold, label=""];
2->28 [style = solid, label="version"];
6->3 [style = bold, label=""];
36->14 [style = bold, label=""];
32->3 [style = bold, label=""];
31->2 [style = bold, label=""];
17->39 [style = dashed, label="0"];
21->27 [style = bold, label=""];
29->38 [style = bold, label=""];
24->19 [style = bold, label=""];
14->40 [style = bold, label=""];
2->39 [style = solid, label="version"];
3->28 [style = bold, label=""];
12->36 [style = bold, label=""];
15->10 [style = bold, label=""];
34->37 [style = bold, label=""];
3->4 [style = bold, label=""];
17->0 [style = bold, label=""];
4->18 [style = bold, label=""];
17->0 [style = solid, label="expected"];
18->7 [style = bold, label=""];
}
