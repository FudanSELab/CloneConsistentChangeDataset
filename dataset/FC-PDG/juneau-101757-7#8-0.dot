digraph {
16 [style = filled, label = "RestClient x1 = client().formData(serializedPart(\"foo\",s).schema(T_ARRAY_PIPES)).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RestClient x = client().query(serializedPart(\"foo\",s).schema(T_ARRAY_PIPES).serializer(new A8())).build()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "TestSupplier s = TestSupplier.of(l1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestSupplier s = TestSupplier.of(null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "s.set(l2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "s.set(l2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "a08_query_String_Supplier_Schema_Serializer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "a11_formData_String_Supplier_Schema['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "x2.post(\"/formData\").formData(\"foo\",s,T_ARRAY_PIPES).run().assertBody().asString().urlDecode().is(\"foo=foo|bar\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "x2.post(\"/formData\").formData(\"foo\",s,T_ARRAY_PIPES).run().assertBody().asString().urlDecode().is(\"foo=bar|baz\")@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "x1.post(\"/formData\").run().assertBody().asString().urlDecode().is(\"foo=foo|bar\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "RestClient x = client().queryData(part(\"foo\",s,T_ARRAY_PIPES).serializer(new A8())).build()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "x.get(\"/query\").run().assertBody().asString().urlDecode().is(\"foo=x('foo','bar'(\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "a08_query_String_Supplier_Schema_Serializer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "s.set(l1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "RestClient x2 = client().build()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<String> l1 = AList.of(\"foo\",\"bar\"),l2 = AList.of(\"bar\",\"baz\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "s.set(l2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "x1.post(\"/formData\").run().assertBody().asString().urlDecode().is(\"foo=bar|baz\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "s.set(l1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
11->16 [style = bold, label=""];
5->3 [style = solid, label="l1"];
5->13 [style = solid, label="l2"];
17->1 [style = bold, label=""];
5->9 [style = solid, label="l1"];
1->15 [style = dashed, label="0"];
1->15 [style = bold, label=""];
19->17 [style = bold, label=""];
7->4 [style = bold, label=""];
16->19 [style = bold, label=""];
2->7 [style = dashed, label="0"];
2->4 [style = bold, label=""];
5->19 [style = solid, label="l1"];
15->18 [style = bold, label=""];
5->0 [style = solid, label="l2"];
4->0 [style = bold, label=""];
5->1 [style = solid, label="l2"];
6->5 [style = bold, label=""];
13->12 [style = bold, label=""];
10->5 [style = bold, label=""];
3->2 [style = bold, label=""];
8->5 [style = bold, label=""];
3->7 [style = bold, label=""];
0->1 [style = bold, label=""];
2->16 [style = dashed, label="0"];
18->9 [style = bold, label=""];
9->14 [style = bold, label=""];
5->11 [style = bold, label=""];
14->13 [style = bold, label=""];
3->11 [style = dashed, label="0"];
}
