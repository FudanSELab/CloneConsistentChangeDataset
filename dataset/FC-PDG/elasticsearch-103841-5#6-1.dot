digraph {
14 [style = filled, label = "IllegalStateException ex = expectThrows(,\"Must fail creating NodeEnvironment on a data path that has index meta-data if node.data=false and node.master=false\",null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(ex.getMessage(),containsString(indexPath.resolve(MetadataStateFormat.STATE_DIR_NAME).toAbsolutePath().toString()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(ex.getMessage(),containsString(indexPath.resolve(shardDataDirName).toAbsolutePath().toString()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verifyFailsOnShardData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "verifyFailsOnShardData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertThat(ex.getMessage(),startsWith(\"Node is started with \" + Node.NODE_DATA_SETTING.getKey() + \"=false and \" + Node.NODE_MASTER_SETTING.getKey() + \"=false, but has index metadata\"))@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Path indexPath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(ex.getMessage(),startsWith(\"Node is started with \" + Node.NODE_DATA_SETTING.getKey() + \"=false, but has shard data\"))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Path indexPath@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "IllegalStateException ex = expectThrows(,\"Must fail creating NodeEnvironment on a data path that has shard data if node does not have data role\",null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "verifyFailsOnMetadata['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String shardDataDirName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Settings settings@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Settings settings@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Path indexPath@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Settings settings@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "IllegalStateException ex = expectThrows(,\"Must fail creating NodeEnvironment on a data path that has shard data if node.data=false\",null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertThat(ex.getMessage(),startsWith(\"node does not have the data role but has shard data\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->10 [style = bold, label=""];
1->4 [style = bold, label=""];
12->17 [style = dotted, label="true"];
0->5 [style = dotted, label="true"];
1->14 [style = dashed, label="0"];
12->15 [style = dotted, label="true"];
6->17 [style = dashed, label="0"];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
0->6 [style = dotted, label="true"];
13->16 [style = bold, label=""];
2->10 [style = dashed, label="0"];
8->7 [style = bold, label=""];
8->6 [style = dotted, label="true"];
0->1 [style = bold, label=""];
2->16 [style = dashed, label="0"];
12->14 [style = bold, label=""];
8->11 [style = dotted, label="true"];
0->3 [style = dotted, label="true"];
8->9 [style = dotted, label="true"];
14->13 [style = bold, label=""];
1->7 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
}
