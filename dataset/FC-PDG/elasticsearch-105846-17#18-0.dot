digraph {
11 [style = filled, label = "assertTrue(mockSearchPhaseContext.failures.get(0).getCause() instanceof MockDirectoryWrapper.FakeIOException)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty())@@@40@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "results.set(0,newSearchResult(0,new SearchContextId(UUIDs.randomBase64UUID(),1),new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "results.get(1).termsStatistics(new Term((((,new TermStatistics(((()@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "results.set(0,newSearchResult(0,ctx1,new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "expectThrows(,null)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(42,responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs(0(.doc)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "AtomicArray<DfsSearchResult> results = new AtomicArray<>(2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "results.set(0,newSearchResult(0,new ShardSearchContextId(\"\",1),new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "final SearchContextId ctx1 = new SearchContextId(UUIDs.randomBase64UUID(),1)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertNotNull(responseRef.get().get(0))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "SearchTransportService searchTransportService = new SearchTransportService(null,null){@Override public void sendExecuteQuery(Transport.Connection connection,QuerySearchRequest request,SearchTask task,SearchActionListener<QuerySearchResult> listener){if (request.contextId().getId() == 1) {QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(),123),new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE))queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@133b99d),2.0F),new DocValueFormat(((()queryResult.size(2)listener.onResponse(queryResult)}if (request.contextId().getId() == 2) {listener.onFailure(new MockDirectoryWrapper.FakeIOException())}{fail(\"no such request ID: \" + request.contextId())}}}@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "phase.run()@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "assertEquals(\"dfs_query\",phase.getName())@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertNotNull(responseRef.get())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testFailPhaseOnException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertNull(responseRef.get().get(0).fetchResult())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNull(responseRef.get().get(1))@@@52@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "mockSearchPhaseContext.searchTransport = searchTransportService@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.releasedSearchContexts.size())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "results.set(1,newSearchResult(1,new SearchContextId(UUIDs.randomBase64UUID(),2),new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.contains(new ShardSearchContextId(\"\",2L)))@@@51@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertNull(responseRef.get().get(1))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testDfsWith1ShardFailed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "results.get(0).termsStatistics(new Term((((,new TermStatistics(((()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.failures.size())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "DfsQueryPhase phase = new DfsQueryPhase(results,searchPhaseController(),null,mockSearchPhaseContext,null)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNull(responseRef.get().get(1))@@@54@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "results.get(1).termsStatistics(new Term((((,new TermStatistics(((()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "assertEquals(\"dfs_query\",phase.getName())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "results.set(1,newSearchResult(1,new ShardSearchContextId(\"\",2),new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "DfsQueryPhase phase = new DfsQueryPhase(results,searchPhaseController(),null,mockSearchPhaseContext,null)@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "results.get(0).termsStatistics(new Term((((,new TermStatistics(((()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(1,responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "results.get(1).termsStatistics(new Term((((,new TermStatistics(((()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "results.set(1,newSearchResult(1,ctx2,new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "testDfsWith1ShardFailed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.numSuccess.get())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "mockSearchPhaseContext.searchTransport = searchTransportService@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final SearchContextId ctx2 = new SearchContextId(UUIDs.randomBase64UUID(),2)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "mockSearchPhaseContext.searchTransport = searchTransportService@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.contains(ctx2))@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "SearchTransportService searchTransportService = new SearchTransportService(null,null){@Override public void sendExecuteQuery(Transport.Connection connection,QuerySearchRequest request,SearchTask task,SearchActionListener<QuerySearchResult> listener){if (request.contextId().getId() == 1) {QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(),123),new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE))queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@133bc9e),2.0F),new DocValueFormat(((()queryResult.size(2)listener.onResponse(queryResult)}if (request.contextId().getId() == 2) {throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException())}{fail(\"no such request ID: \" + request.contextId())}}}@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->22 [style = bold, label=""];
1->17 [style = solid, label="ctx1"];
25->19 [style = solid, label="ctx2"];
42->41 [style = bold, label=""];
23->20 [style = bold, label=""];
19->18 [style = bold, label=""];
37->0 [style = bold, label=""];
8->15 [style = bold, label=""];
45->18 [style = bold, label=""];
0->6 [style = bold, label=""];
26->5 [style = bold, label=""];
31->0 [style = bold, label=""];
27->28 [style = bold, label=""];
27->44 [style = bold, label=""];
3->14 [style = bold, label=""];
20->27 [style = dashed, label="0"];
26->21 [style = dashed, label="0"];
0->20 [style = solid, label="results"];
44->40 [style = bold, label=""];
4->26 [style = bold, label=""];
18->30 [style = bold, label=""];
25->42 [style = dashed, label="0"];
39->27 [style = bold, label=""];
25->35 [style = dashed, label="0"];
11->9 [style = bold, label=""];
38->42 [style = bold, label=""];
12->0 [style = bold, label=""];
25->17 [style = bold, label=""];
6->36 [style = bold, label=""];
17->19 [style = bold, label=""];
13->16 [style = bold, label=""];
30->29 [style = bold, label=""];
13->3 [style = dashed, label="0"];
20->21 [style = bold, label=""];
6->1 [style = bold, label=""];
29->27 [style = bold, label=""];
0->27 [style = solid, label="results"];
6->38 [style = bold, label=""];
30->27 [style = solid, label="mockSearchPhaseContext"];
1->36 [style = dashed, label="0"];
28->33 [style = bold, label=""];
18->10 [style = bold, label=""];
22->27 [style = bold, label=""];
18->43 [style = bold, label=""];
27->20 [style = solid, label="mockSearchPhaseContext"];
7->2 [style = bold, label=""];
24->11 [style = bold, label=""];
43->27 [style = solid, label="mockSearchPhaseContext"];
15->24 [style = bold, label=""];
25->13 [style = solid, label="ctx2"];
18->29 [style = solid, label="searchTransportService"];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
22->23 [style = solid, label="searchTransportService"];
34->32 [style = bold, label=""];
27->23 [style = bold, label=""];
41->45 [style = bold, label=""];
1->38 [style = dashed, label="0"];
14->13 [style = bold, label=""];
32->18 [style = bold, label=""];
36->35 [style = bold, label=""];
35->34 [style = bold, label=""];
33->21 [style = bold, label=""];
4->40 [style = dashed, label="0"];
43->39 [style = bold, label=""];
1->25 [style = bold, label=""];
18->39 [style = solid, label="searchTransportService"];
40->21 [style = bold, label=""];
2->8 [style = bold, label=""];
21->4 [style = bold, label=""];
}
