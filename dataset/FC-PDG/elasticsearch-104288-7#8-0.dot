digraph {
12 [style = filled, label = "assertThat(e,hasToString(containsString(\"but (ignore_z_value( parameter is (false(\")))@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "holeCoordinates.add(new Coordinate(100.2,0.8,10.0))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shellCoordinates.add(new Coordinate(100,0))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shellCoordinates.add(new Coordinate(101,0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shellCoordinates.add(new Coordinate(100,0))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Mapper.BuilderContext mockBuilderContext = new Mapper.BuilderContext(indexSettings,new ContentPath())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "XContentParser parser = createParser(xContentBuilder)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Settings indexSettings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.V_7_0_0).put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,0).put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1).put(IndexMetaData.SETTING_INDEX_UUID,UUIDs.randomBase64UUID()).build()@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "PolygonBuilder builder = new PolygonBuilder(new CoordinatesBuilder().coordinates(shellCoordinates))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "holeCoordinates.add(new Coordinate(100.2,0.2))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testParseMixedDimensionPolyWithHole['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "ElasticsearchParseException e = expectThrows(,null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "shellCoordinates.add(new Coordinate(100,1))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testParseMixedDimensionPolyWithHole['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(e,hasToString(containsString(\"unable to add coordinate to CoordinateBuilder: coordinate dimensions do not match\")))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "ElasticsearchException e = expectThrows(,null)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "builder.hole(new LineStringBuilder(holeCoordinates))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "holeCoordinates.add(new Coordinate(100.2,0.2,15.0))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testParseMixedDimensionPolyWithHoleStoredZ['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<Coordinate> shellCoordinates = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final GeoShapeFieldMapper mapperBuilder = (GeoShapeFieldMapper)(new GeoShapeFieldMapper.Builder(\"test\").ignoreZValue(false).build(mockBuilderContext))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "parser.nextToken()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "holeCoordinates.add(new Coordinate(100.8,0.8))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shellCoordinates.add(new Coordinate(101,1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "holeCoordinates.add(new Coordinate(100.8,0.2))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Settings indexSettings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.V_6_3_0).put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,0).put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1).put(IndexMetaData.SETTING_INDEX_UUID,UUIDs.randomBase64UUID()).build()@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<Coordinate> holeCoordinates = new ArrayList<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final GeoShapeFieldMapper mapperBuilder = new GeoShapeFieldMapper.Builder(\"test\").ignoreZValue(true).build(mockBuilderContext)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final GeoShapeFieldMapper mapperBuilder = new GeoShapeFieldMapper.Builder(\"test\").ignoreZValue(false).build(mockBuilderContext)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "XContentBuilder xContentBuilder = XContentFactory.jsonBuilder().value(builder.toWKT())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
15->2 [style = bold, label=""];
10->20 [style = bold, label=""];
8->15 [style = bold, label=""];
4->17 [style = bold, label=""];
0->4 [style = solid, label="mockBuilderContext"];
21->6 [style = bold, label=""];
20->9 [style = bold, label=""];
28->11 [style = bold, label=""];
0->24 [style = solid, label="mockBuilderContext"];
0->29 [style = bold, label=""];
17->27 [style = dashed, label="0"];
11->19 [style = solid, label="shellCoordinates"];
23->0 [style = bold, label=""];
1->13 [style = bold, label=""];
11->18 [style = bold, label=""];
23->0 [style = solid, label="indexSettings"];
10->3 [style = solid, label="holeCoordinates"];
12->26 [style = dashed, label="0"];
2->23 [style = bold, label=""];
5->1 [style = bold, label=""];
29->27 [style = bold, label=""];
17->12 [style = solid, label="e"];
17->12 [style = bold, label=""];
14->23 [style = dashed, label="0"];
14->0 [style = bold, label=""];
0->29 [style = solid, label="mockBuilderContext"];
14->0 [style = solid, label="indexSettings"];
0->4 [style = bold, label=""];
25->11 [style = bold, label=""];
3->8 [style = bold, label=""];
0->24 [style = bold, label=""];
2->14 [style = bold, label=""];
24->17 [style = bold, label=""];
9->21 [style = bold, label=""];
8->15 [style = solid, label="xContentBuilder"];
16->5 [style = bold, label=""];
4->24 [style = dashed, label="0"];
4->29 [style = dashed, label="0"];
6->7 [style = bold, label=""];
27->26 [style = solid, label="e"];
7->19 [style = bold, label=""];
19->3 [style = bold, label=""];
22->11 [style = bold, label=""];
27->26 [style = bold, label=""];
18->16 [style = bold, label=""];
}
