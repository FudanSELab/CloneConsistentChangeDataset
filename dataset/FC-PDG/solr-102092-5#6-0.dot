digraph {
44 [style = filled, label = "int n = 0@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "return getQuery()@@@55@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "q.add(sub,BooleanClause.Occur.SHOULD)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "exceptions@@@49@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "return q.build()@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "getAliasedMultiTermQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Query firstQuery = lst.get(0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "throw unknownField@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "++n@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "lst@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "ft == null && null == MagicFieldName.get(field)@@@51@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "BooleanQuery.Builder q = new BooleanQuery.Builder()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "this.validateCyclicAliasing(field)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "++c@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "BooleanQuery.Builder q = new BooleanQuery.Builder()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return getQuery()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "q.add(newBooleanClause(new DisjunctionMaxQuery(subs,a.tie),BooleanClause.Occur.SHOULD))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return q.build()@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "q.add(sub,BooleanClause.Occur.SHOULD)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "FieldType ft = schema.getFieldTypeNoEx(field)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return getQuery()@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "List<Query> lst = getMultiTermQueries(a)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "DisjunctionMaxQuery q = new DisjunctionMaxQuery(lst,a.tie)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "makeDismax@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "subs.add(new BoostQuery(booleanQuery.clauses().get(c).getQuery(),boostQuery.getBoost()))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "throw unknownField@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "subs.add(((BooleanQuery)lst.get(n)).clauses().get(c).getQuery())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "subs.clear()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Query sub@@@14@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "makeDismax@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "lst == null || lst.size() == 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ft == null && null == MagicFieldName.get(field)@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "BoostQuery boostQuery = (BoostQuery)lst.get(n)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return QueryUtils.build(q,parser)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "Query sub@@@42@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "getAliasedQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "int c = 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "getAliasedQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "BooleanQuery.Builder q = new BooleanQuery.Builder()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "FieldType ft = schema.getFieldTypeNoEx(field)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "return new DisjunctionMaxQuery(lst,a.tie)@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "c < firstBooleanQuery.clauses().size()@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "return getQuery()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "(firstQuery instanceof BooleanQuery || (firstQuery instanceof BoostQuery && ((BoostQuery)firstQuery).getQuery() instanceof BooleanQuery)) && allSameQueryStructure(lst)@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "return q.build()@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "List<Query> lst = getQueries(a)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "lst@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "BooleanQuery booleanQuery = (BooleanQuery)boostQuery.getQuery()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "List<Query> subs = new ArrayList<>(lst.size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Alias a = aliases.get(field)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "lst == null || lst.size() == 0@@@7@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "return getQuery()@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "lst.get(n) instanceof BoostQuery@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "n < lst.size()@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "BooleanQuery firstBooleanQuery = firstQuery instanceof BoostQuery? (BooleanQuery)((BoostQuery)firstQuery).getQuery(): (BooleanQuery)firstQuery@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "a != null@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "exceptions@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "lst@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39->24 [style = dotted, label="true"];
44->35 [style = bold, label=""];
24->35 [style = dotted, label="true"];
5->1 [style = dotted, label="true"];
5->11 [style = dotted, label="false"];
49->48 [style = bold, label=""];
3->14 [style = dotted, label="false"];
3->53 [style = dotted, label="true"];
40->53 [style = solid, label="lst"];
3->40 [style = dotted, label="true"];
3->4 [style = bold, label=""];
1->23 [style = bold, label=""];
41->28 [style = bold, label=""];
19->5 [style = bold, label=""];
5->13 [style = dotted, label="true"];
5->23 [style = dotted, label="false"];
13->8 [style = solid, label="q"];
57->24 [style = solid, label="c"];
34->2 [style = bold, label=""];
35->45 [style = bold, label=""];
39->30 [style = dotted, label="false"];
40->39 [style = solid, label="lst"];
19->15 [style = bold, label=""];
14->18 [style = dotted, label="true"];
44->52 [style = solid, label="n"];
14->16 [style = bold, label=""];
10->18 [style = solid, label="ft"];
22->19 [style = dotted, label="true"];
8->38 [style = dotted, label="false"];
8->46 [style = dotted, label="true"];
25->36 [style = bold, label=""];
4->19 [style = bold, label=""];
18->12 [style = bold, label=""];
14->10 [style = bold, label=""];
52->31 [style = dotted, label="true"];
42->31 [style = bold, label=""];
2->3 [style = solid, label="a"];
46->39 [style = bold, label=""];
22->5 [style = bold, label=""];
9->23 [style = dashed, label="0"];
57->24 [style = bold, label=""];
45->29 [style = bold, label=""];
35->52 [style = bold, label=""];
19->53 [style = dashed, label="0"];
3->5 [style = dotted, label="true"];
3->41 [style = dotted, label="false"];
5->6 [style = bold, label=""];
17->2 [style = bold, label=""];
31->27 [style = bold, label=""];
4->19 [style = solid, label="lst"];
3->28 [style = dotted, label="false"];
54->44 [style = bold, label=""];
43->27 [style = bold, label=""];
6->23 [style = solid, label="q"];
5->9 [style = dotted, label="false"];
55->32 [style = bold, label=""];
5->8 [style = dotted, label="true"];
26->55 [style = solid, label="ft"];
4->22 [style = bold, label=""];
10->18 [style = bold, label=""];
40->53 [style = bold, label=""];
8->25 [style = dotted, label="false"];
22->19 [style = bold, label=""];
46->48 [style = solid, label="firstQuery"];
39->49 [style = dotted, label="true"];
24->44 [style = dotted, label="true"];
8->39 [style = dotted, label="true"];
52->42 [style = dotted, label="true"];
53->50 [style = dotted, label="true"];
52->56 [style = dotted, label="true"];
19->15 [style = dotted, label="true"];
27->35 [style = bold, label=""];
1->9 [style = bold, label=""];
39->33 [style = bold, label=""];
49->45 [style = solid, label="subs"];
53->50 [style = bold, label=""];
26->55 [style = bold, label=""];
8->51 [style = dotted, label="false"];
6->1 [style = bold, label=""];
52->43 [style = bold, label=""];
39->37 [style = dotted, label="true"];
40->30 [style = solid, label="lst"];
44->35 [style = solid, label="n"];
39->48 [style = dotted, label="true"];
55->32 [style = dotted, label="true"];
5->13 [style = bold, label=""];
3->41 [style = bold, label=""];
4->22 [style = solid, label="lst"];
41->55 [style = dotted, label="true"];
4->13 [style = solid, label="lst"];
24->45 [style = dotted, label="true"];
53->8 [style = bold, label=""];
44->56 [style = solid, label="n"];
8->36 [style = dotted, label="true"];
33->49 [style = bold, label=""];
39->57 [style = dotted, label="true"];
3->16 [style = dotted, label="false"];
46->39 [style = solid, label="firstQuery"];
18->16 [style = bold, label=""];
35->52 [style = dotted, label="true"];
48->57 [style = bold, label=""];
3->40 [style = bold, label=""];
24->29 [style = dotted, label="true"];
3->14 [style = bold, label=""];
5->21 [style = dotted, label="false"];
3->4 [style = dotted, label="true"];
52->56 [style = bold, label=""];
12->16 [style = bold, label=""];
2->40 [style = solid, label="a"];
14->10 [style = dotted, label="true"];
7->3 [style = bold, label=""];
15->5 [style = bold, label=""];
56->42 [style = bold, label=""];
24->54 [style = bold, label=""];
20->2 [style = bold, label=""];
39->30 [style = bold, label=""];
41->26 [style = dotted, label="true"];
5->0 [style = dotted, label="false"];
8->46 [style = bold, label=""];
35->27 [style = dotted, label="true"];
3->19 [style = dotted, label="true"];
2->4 [style = solid, label="a"];
18->12 [style = dotted, label="true"];
5->6 [style = dotted, label="false"];
8->39 [style = dashed, label="0"];
24->37 [style = bold, label=""];
3->22 [style = dotted, label="true"];
50->8 [style = bold, label=""];
24->54 [style = dotted, label="true"];
41->26 [style = bold, label=""];
36->38 [style = bold, label=""];
2->7 [style = bold, label=""];
52->43 [style = dotted, label="false"];
13->8 [style = bold, label=""];
4->40 [style = dashed, label="0"];
29->24 [style = bold, label=""];
3->8 [style = dotted, label="true"];
8->47 [style = dotted, label="false"];
32->28 [style = bold, label=""];
8->25 [style = bold, label=""];
39->33 [style = dotted, label="true"];
55->28 [style = bold, label=""];
}
