digraph {
39 [style = filled, label = "mockSearchPhaseContext.searchTransport = searchTransportService@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertNotNull(searchResponse)@@@49@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "AtomicReference<SearchResponse> responseRef = new AtomicReference<>()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "queryResult = new QuerySearchResult(321,new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",1),null,OriginalIndices.NONE))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123a18e),2.0F),new DocValueFormat(((()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(\"fetch\",phase.getName())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(42,searchResponse.getHits().getAt(1).docId())@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(2,responseRef.get().getSuccessfulShards())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(0,searchResponse.getFailedShards())@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "mockSearchPhaseContext.searchTransport = searchTransportService@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "testFetchTwoDocument['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "testFetchTwoDocument['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "mockSearchPhaseContext.searchTransport = new SearchTransportService(null,null){@Override public void sendExecuteFetch(Transport.Connection connection,ShardFetchSearchRequest request,SearchTask task,SearchActionListener<FetchSearchResult> listener){FetchSearchResult fetchResult = new FetchSearchResult()if (request.id() == 321) {fetchResult.hits(new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123a077,new TotalHits(1,TotalHits.Relation.EQUAL_TO),2.0F))}{assertEquals(123,request.id())fetchResult.hits(new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123a094,new TotalHits(1,TotalHits.Relation.EQUAL_TO),1.0F))}listener.onResponse(fetchResult)}}@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(1,responseRef.get().getHits().getHits().length)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(2,searchResponse.getSuccessfulShards())@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "queryResult.size(resultSetSize)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "SearchPhaseController controller = new SearchPhaseController(null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.releasedSearchContexts.size())@@@53@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "results.consumeResult(queryResult)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "results.consumeResult(queryResult)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(84,searchResponse.getHits().getAt(0).docId())@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123a152),2.0F),new DocValueFormat(((()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNotNull(responseRef.get())@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(84,responseRef.get().getHits().getAt(0).docId())@@@50@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "queryResult.setShardIndex(1)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SearchTransportService searchTransportService = new SearchTransportService(null,null){@Override public void sendExecuteFetch(Transport.Connection connection,ShardFetchSearchRequest request,SearchTask task,SearchActionListener<FetchSearchResult> listener){FetchSearchResult fetchResult = new FetchSearchResult()if (request.id() == 321) {fetchResult.hits(new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123a1ce,new TotalHits(1,TotalHits.Relation.EQUAL_TO),2.0F))}{fail(\"requestID 123 should not be fetched but was\")}listener.onResponse(fetchResult)}}@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(2,searchResponse.getHits().getTotalHits().value)@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "int resultSetSize = randomIntBetween(2,10)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "mockSearchPhaseContext.assertNoFailure()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "InitialSearchPhase.ArraySearchPhaseResults<SearchPhaseResult> results = controller.newSearchPhaseResults(mockSearchPhaseContext.getRequest(),2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "SearchResponse searchResponse = mockSearchPhaseContext.searchResponse.get()@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "QuerySearchResult queryResult = new QuerySearchResult(123,new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty())@@@56@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(0,responseRef.get().getFailedShards())@@@51@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "int resultSetSize = 1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(2,responseRef.get().getHits().getTotalHits().value)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "phase.run()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "FetchSearchPhase phase = new FetchSearchPhase(results,controller,mockSearchPhaseContext,null)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "queryResult.setShardIndex(0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty())@@@55@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "testCleanupIrrelevantContexts['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(42,responseRef.get().getHits().getAt(1).docId())@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "FetchSearchPhase phase = new FetchSearchPhase(results,controller,mockSearchPhaseContext,null)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.contains(123L))@@@54@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "queryResult.size(resultSetSize)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(2,responseRef.get().getSuccessfulShards())@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->17 [style = bold, label=""];
27->13 [style = bold, label=""];
5->3 [style = bold, label=""];
46->44 [style = bold, label=""];
2->22 [style = solid, label="queryResult"];
7->11 [style = bold, label=""];
25->1 [style = bold, label=""];
16->32 [style = dashed, label="0"];
42->2 [style = bold, label=""];
3->23 [style = solid, label="resultSetSize"];
4->0 [style = solid, label="searchTransportService"];
19->12 [style = bold, label=""];
28->24 [style = solid, label="mockSearchPhaseContext"];
1->40 [style = bold, label=""];
29->34 [style = solid, label="searchResponse"];
6->23 [style = bold, label=""];
1->15 [style = bold, label=""];
4->39 [style = bold, label=""];
34->33 [style = bold, label=""];
36->28 [style = bold, label=""];
40->15 [style = bold, label=""];
39->45 [style = bold, label=""];
31->38 [style = bold, label=""];
29->34 [style = bold, label=""];
23->8 [style = bold, label=""];
15->16 [style = bold, label=""];
32->30 [style = bold, label=""];
26->4 [style = bold, label=""];
27->24 [style = solid, label="controller"];
3->7 [style = solid, label="resultSetSize"];
43->46 [style = bold, label=""];
21->28 [style = bold, label=""];
4->0 [style = bold, label=""];
35->24 [style = bold, label=""];
41->28 [style = bold, label=""];
28->45 [style = solid, label="mockSearchPhaseContext"];
42->7 [style = solid, label="resultSetSize"];
17->7 [style = bold, label=""];
9->18 [style = bold, label=""];
45->43 [style = bold, label=""];
3->2 [style = bold, label=""];
18->10 [style = bold, label=""];
13->3 [style = bold, label=""];
10->25 [style = bold, label=""];
10->29 [style = bold, label=""];
30->31 [style = bold, label=""];
38->37 [style = bold, label=""];
15->20 [style = bold, label=""];
0->24 [style = bold, label=""];
13->24 [style = solid, label="results"];
4->39 [style = solid, label="searchTransportService"];
20->30 [style = dashed, label="0"];
26->35 [style = bold, label=""];
15->33 [style = dashed, label="0"];
11->22 [style = bold, label=""];
13->5 [style = bold, label=""];
42->23 [style = solid, label="resultSetSize"];
25->29 [style = dashed, label="0"];
12->15 [style = dashed, label="0"];
33->32 [style = bold, label=""];
28->27 [style = bold, label=""];
5->42 [style = bold, label=""];
22->14 [style = bold, label=""];
20->19 [style = bold, label=""];
13->45 [style = solid, label="results"];
16->20 [style = bold, label=""];
44->9 [style = bold, label=""];
14->26 [style = solid, label="queryResult"];
14->6 [style = bold, label=""];
4->35 [style = dashed, label="0"];
3->42 [style = dashed, label="0"];
24->9 [style = bold, label=""];
27->45 [style = solid, label="controller"];
8->26 [style = bold, label=""];
19->31 [style = dashed, label="0"];
}
