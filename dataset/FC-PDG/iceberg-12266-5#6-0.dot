digraph {
5 [style = filled, label = "rowId < batch.numRows()@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int rowId = 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "boolean checkArrowValidityVector@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "ColumnarBatch batch@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "InternalRow row = batch.getRow(rowId)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEqualsUnsafe(fieldType,expectedValue,actualValue)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boolean checkArrowValidityVector@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "i < fields.size()@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ColumnarBatch batch@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Object actualValue = row.isNullAt(i)? null: row.get(i,convert(fieldType))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ValueVector arrowVector = ((IcebergArrowColumnVector)columnVector).vectorAccessor().getVector()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "rowId++@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertFalse(\"Nullability doesn't match of \" + columnVector.dataType(),expectedValue == null ^ arrowVector.isNull(rowId))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Object expectedValue = rec.get(i)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "List<Types.NestedField> fields = struct.fields()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEqualsBatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Types.StructType struct@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertFalse(\"Nullability doesn't match\",expectedValue == null ^ arrowVector.isNull(rowId))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "Types.StructType struct@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Record rec@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "int i = 0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEqualsUnsafe(fieldType,expectedValue,actualValue)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Types.StructType struct@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Object expectedValue = rec.get(i)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Record rec = expected.next()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Object actualValue = row.isNullAt(i)? null: row.get(i,convert(fieldType))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEqualsUnsafe['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "i += 1@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEqualsBatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "checkArrowValidityVector@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "InternalRow row@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Iterator<Record> expected@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Type fieldType = fields.get(i).type()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ColumnVector columnVector = batch.column(i)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20->11 [style = dotted, label="true"];
16->7 [style = bold, label=""];
17->14 [style = dotted, label="true"];
11->6 [style = solid, label="actualValue"];
8->20 [style = solid, label="i"];
26->22 [style = dotted, label="true"];
19->13 [style = solid, label="rowId"];
13->24 [style = solid, label="rowId"];
19->5 [style = bold, label=""];
5->13 [style = dotted, label="true"];
17->15 [style = dotted, label="true"];
12->18 [style = bold, label=""];
10->7 [style = solid, label="expectedValue"];
9->21 [style = bold, label=""];
20->18 [style = dotted, label="true"];
1->12 [style = bold, label=""];
31->33 [style = solid, label="i"];
5->9 [style = dotted, label="true"];
17->2 [style = dotted, label="true"];
1->0 [style = dotted, label="true"];
21->12 [style = solid, label="fieldType"];
10->11 [style = bold, label=""];
12->20 [style = solid, label="i"];
21->18 [style = solid, label="fieldType"];
19->3 [style = solid, label="rowId"];
31->12 [style = solid, label="i"];
27->31 [style = bold, label=""];
26->23 [style = dotted, label="true"];
1->0 [style = bold, label=""];
5->3 [style = dotted, label="true"];
20->18 [style = bold, label=""];
29->27 [style = bold, label=""];
13->7 [style = solid, label="rowId"];
18->11 [style = solid, label="fieldType"];
31->33 [style = bold, label=""];
18->6 [style = solid, label="fieldType"];
20->10 [style = dotted, label="true"];
33->18 [style = dotted, label="true"];
19->24 [style = solid, label="rowId"];
13->5 [style = bold, label=""];
12->11 [style = solid, label="i"];
21->10 [style = solid, label="i"];
19->7 [style = solid, label="rowId"];
5->8 [style = dotted, label="true"];
29->32 [style = dotted, label="true"];
20->6 [style = dotted, label="true"];
8->33 [style = bold, label=""];
0->16 [style = bold, label=""];
24->12 [style = bold, label=""];
20->13 [style = bold, label=""];
33->12 [style = dotted, label="true"];
17->4 [style = dotted, label="true"];
16->24 [style = bold, label=""];
8->3 [style = bold, label=""];
12->20 [style = bold, label=""];
15->32 [style = dashed, label="0"];
8->33 [style = solid, label="i"];
26->19 [style = bold, label=""];
3->9 [style = bold, label=""];
6->1 [style = bold, label=""];
33->21 [style = dotted, label="true"];
20->1 [style = dotted, label="true"];
18->10 [style = bold, label=""];
13->3 [style = solid, label="rowId"];
29->28 [style = dotted, label="true"];
12->18 [style = solid, label="actualValue"];
26->15 [style = dotted, label="true"];
33->8 [style = dotted, label="true"];
5->21 [style = dotted, label="true"];
1->16 [style = dotted, label="true"];
18->8 [style = bold, label=""];
8->12 [style = solid, label="i"];
5->8 [style = bold, label=""];
10->6 [style = solid, label="expectedValue"];
12->0 [style = solid, label="i"];
7->12 [style = bold, label=""];
26->25 [style = dotted, label="true"];
11->6 [style = bold, label=""];
1->24 [style = dotted, label="true"];
21->20 [style = solid, label="i"];
12->10 [style = solid, label="i"];
25->1 [style = solid, label="checkArrowValidityVector"];
13->5 [style = solid, label="rowId"];
17->19 [style = bold, label=""];
33->20 [style = dotted, label="true"];
10->24 [style = solid, label="expectedValue"];
1->7 [style = dotted, label="true"];
21->20 [style = bold, label=""];
7->24 [style = dashed, label="0"];
20->18 [style = solid, label="expectedValue"];
19->5 [style = solid, label="rowId"];
20->12 [style = bold, label=""];
29->30 [style = dotted, label="true"];
5->20 [style = dotted, label="true"];
20->12 [style = dotted, label="true"];
33->21 [style = bold, label=""];
14->1 [style = solid, label="checkArrowValidityVector"];
21->0 [style = solid, label="i"];
21->11 [style = solid, label="i"];
31->20 [style = solid, label="i"];
}
