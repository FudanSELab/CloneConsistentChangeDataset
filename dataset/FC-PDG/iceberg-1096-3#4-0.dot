digraph {
19 [style = filled, label = "!colStats.hasNonNullValue()@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "schema.findType(id) instanceof Type.NestedType@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return ROWS_MIGHT_MATCH@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Statistics<?> colStats = stats.get(id)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "cmp > 0@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "valueCount == null@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return ROWS_MIGHT_MATCH@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "eq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "isNull['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "isNull['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Long valueCount = valueCounts.get(id)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "T upper = max(colStats,id)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "cmp < 0@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return ROWS_MIGHT_MATCH@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return ROWS_CANNOT_MATCH@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return ROWS_CANNOT_MATCH@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "return ROWS_CANNOT_MATCH@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "colStats != null && !colStats.isEmpty()@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Long valueCount = valueCounts.get(id)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "T lower = min(colStats,id)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "return ROWS_CANNOT_MATCH@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "return ROWS_CANNOT_MATCH@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "valueCount == null@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "cmp = lit.comparator().compare(upper,lit.value())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Preconditions.checkNotNull(struct.field(id),\"Cannot filter by nested column: %s\",schema.findField(id))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
29->15 [style = bold, label=""];
1->4 [style = bold, label=""];
0->2 [style = solid, label="id"];
23->5 [style = bold, label=""];
28->21 [style = dotted, label="true"];
22->16 [style = bold, label=""];
25->13 [style = bold, label=""];
1->4 [style = solid, label="valueCount"];
9->25 [style = solid, label="colStats"];
2->1 [style = bold, label=""];
29->27 [style = dotted, label="true"];
17->9 [style = bold, label=""];
13->29 [style = solid, label="cmp"];
0->2 [style = bold, label=""];
28->25 [style = dotted, label="true"];
28->15 [style = dotted, label="true"];
7->17 [style = dashed, label="0"];
9->15 [style = solid, label="colStats"];
18->12 [style = bold, label=""];
0->24 [style = solid, label="id"];
0->15 [style = solid, label="id"];
30->25 [style = bold, label=""];
4->7 [style = dotted, label="true"];
3->31 [style = dashed, label="0"];
26->21 [style = solid, label="cmp"];
28->19 [style = dotted, label="true"];
16->23 [style = bold, label=""];
0->9 [style = solid, label="id"];
0->5 [style = solid, label="id"];
28->12 [style = bold, label=""];
19->30 [style = dotted, label="true"];
24->22 [style = bold, label=""];
16->23 [style = dotted, label="true"];
6->17 [style = dotted, label="true"];
27->15 [style = bold, label=""];
9->28 [style = solid, label="colStats"];
5->6 [style = solid, label="colStats"];
24->22 [style = solid, label="field"];
4->7 [style = bold, label=""];
19->25 [style = bold, label=""];
15->26 [style = bold, label=""];
26->21 [style = bold, label=""];
21->18 [style = bold, label=""];
8->0 [style = bold, label=""];
9->28 [style = bold, label=""];
21->12 [style = bold, label=""];
6->10 [style = dotted, label="true"];
29->27 [style = bold, label=""];
8->3 [style = dotted, label="true"];
13->29 [style = bold, label=""];
7->5 [style = bold, label=""];
11->0 [style = bold, label=""];
5->6 [style = solid, label="valueCount"];
28->29 [style = dotted, label="true"];
14->20 [style = dotted, label="true"];
6->28 [style = dashed, label="0"];
5->6 [style = bold, label=""];
14->0 [style = bold, label=""];
0->16 [style = solid, label="id"];
25->13 [style = solid, label="lower"];
0->22 [style = solid, label="id"];
0->1 [style = bold, label=""];
6->10 [style = bold, label=""];
0->24 [style = bold, label=""];
28->26 [style = dotted, label="true"];
28->19 [style = bold, label=""];
16->5 [style = bold, label=""];
14->31 [style = dotted, label="true"];
0->1 [style = solid, label="id"];
10->9 [style = bold, label=""];
6->9 [style = bold, label=""];
21->18 [style = dotted, label="true"];
11->3 [style = dotted, label="true"];
28->13 [style = dotted, label="true"];
15->26 [style = solid, label="upper"];
4->5 [style = bold, label=""];
0->25 [style = solid, label="id"];
19->30 [style = bold, label=""];
}
