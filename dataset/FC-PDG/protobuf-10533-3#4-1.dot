digraph {
9 [style = filled, label = "testGetSerializedSizeEx['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testGetSerializedSize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertNotEqual(message.getSerializedSize(),lazyField.getSerializedSize())@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "MessageLite message = TestUtil.getAllSet()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestAllExtensions message = TestUtil.getAllExtensionsSet()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "LazyFieldLite lazyField = createLazyFieldLiteFromMessage(message)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "changeValue(lazyField)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(message.getSerializedSize()).isEqualTo(lazyField.getSerializedSize())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(message.getSerializedSize(),lazyField.getSerializedSize())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testGetSerializedSize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8->1 [style = solid, label="message"];
8->1 [style = bold, label=""];
5->8 [style = dashed, label="0"];
5->1 [style = bold, label=""];
6->4 [style = bold, label=""];
3->5 [style = bold, label=""];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
1->0 [style = bold, label=""];
4->2 [style = bold, label=""];
9->8 [style = bold, label=""];
0->4 [style = bold, label=""];
5->1 [style = solid, label="message"];
0->6 [style = dashed, label="0"];
1->4 [style = solid, label="lazyField"];
}
