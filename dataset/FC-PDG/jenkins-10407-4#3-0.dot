digraph {
7 [style = filled, label = "testGetItems['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "rule.jenkins.addView(view)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(\"View \" + view.getDisplayName() + \" should contain job \" + job2.getDisplayName(),view.getItems().contains(job2))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "User user = User.get(\"User1\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "auth.add(Job.CONFIGURE,\"User1\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MyView view = new MyView(\"My\",rule.jenkins)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "auth.add(Job.READ,\"User1\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(\"View \" + view.getDisplayName() + \" should contains job \" + job2.getDisplayName(),view.getItems().contains(job2))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "SecurityContextHolder.getContext().setAuthentication(user.impersonate())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testGetItems['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "testContains['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFalse(\"View \" + view.getDisplayName() + \" should not contain job \" + job.getDisplayName(),view.contains(job))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "User user = User.get(\"User1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "FreeStyleProject job2 = rule.createFreeStyleProject(\"job2\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(\"View \" + view.getDisplayName() + \" should not contains job \" + job.getDisplayName(),view.getItems().contains(job))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(\"View \" + view.getDisplayName() + \" should contain job \" + job.getDisplayName(),view.getItems().contains(job))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "auth.add(Job.CONFIGURE,\"User1\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertFalse(\"View \" + view.getDisplayName() + \" should not contains job \" + job2.getDisplayName(),view.getItems().contains(job2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "FreeStyleProject job = rule.createFreeStyleProject(\"job\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(\"View \" + view.getDisplayName() + \" should contains job \" + job.getDisplayName(),view.getItems().contains(job))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertTrue(\"View \" + view.getDisplayName() + \" contain job \" + job.getDisplayName(),view.contains(job))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "rule.jenkins.setAuthorizationStrategy(auth)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->10 [style = solid, label="auth"];
10->18 [style = bold, label=""];
8->16 [style = dashed, label="0"];
18->20 [style = solid, label="job"];
19->12 [style = bold, label=""];
17->6 [style = bold, label=""];
11->4 [style = solid, label="job"];
2->6 [style = bold, label=""];
5->16 [style = solid, label="job2"];
18->11 [style = bold, label=""];
0->15 [style = dashed, label="0"];
5->8 [style = solid, label="job2"];
18->3 [style = solid, label="job"];
11->9 [style = bold, label=""];
15->16 [style = bold, label=""];
3->22 [style = bold, label=""];
3->4 [style = bold, label=""];
1->13 [style = bold, label=""];
0->20 [style = dashed, label="0"];
17->6 [style = solid, label="auth"];
11->15 [style = solid, label="job"];
10->5 [style = bold, label=""];
22->20 [style = bold, label=""];
7->2 [style = bold, label=""];
6->10 [style = bold, label=""];
0->8 [style = bold, label=""];
4->3 [style = dashed, label="0"];
9->19 [style = bold, label=""];
11->9 [style = solid, label="view"];
5->1 [style = solid, label="job2"];
5->11 [style = bold, label=""];
12->3 [style = bold, label=""];
9->12 [style = bold, label=""];
4->1 [style = bold, label=""];
13->15 [style = bold, label=""];
14->2 [style = bold, label=""];
11->0 [style = solid, label="job"];
21->17 [style = bold, label=""];
13->0 [style = bold, label=""];
}
