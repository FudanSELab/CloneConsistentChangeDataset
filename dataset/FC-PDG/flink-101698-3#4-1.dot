digraph {
2 [style = filled, label = "Assert.assertArrayEquals(reducedArguments,prog.getArguments())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String(( reducedArguments = {\"--debug\",\"true\",\"arg1\",\"arg2\"}@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "RunOptions options = CliFrontendParser.parseRunCommand(arguments)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String(( arguments = {\"--classpath\",\"file:///tmp/foo\",\"--classpath\",\"file:///tmp/bar\",getTestJarPath(),\"--debug\",\"true\",\"arg1\",\"arg2\"}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(getTestJarPath(),options.getJarFilePath())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "URL(( classpath = new URL((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b1c1ff@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "PackagedProgram prog = frontend.buildProgram(options)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertArrayEquals(classpath,options.getClasspaths().toArray())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testVariantWithExplicitJarAndNoArgumentsOption['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertArrayEquals(reducedArguments,options.getProgramArgs())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(TEST_JAR_MAIN_CLASS,prog.getMainClassName())@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testVariantWithExplicitJarAndNoArgumentsOption['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "String(( reducedArguments = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b1c198@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "CliFrontend frontend = new CliFrontend(CliFrontendTestUtils.getConfigDir())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testValidVariantWithNoJarAndNoArgumentsOption['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
9->0 [style = bold, label=""];
12->5 [style = bold, label=""];
3->14 [style = bold, label=""];
14->0 [style = solid, label="reducedArguments"];
5->8 [style = solid, label="arguments"];
3->6 [style = bold, label=""];
6->14 [style = dashed, label="0"];
6->2 [style = solid, label="reducedArguments"];
8->7 [style = bold, label=""];
6->0 [style = solid, label="reducedArguments"];
7->9 [style = bold, label=""];
0->10 [style = bold, label=""];
14->2 [style = solid, label="reducedArguments"];
0->1 [style = bold, label=""];
6->8 [style = bold, label=""];
13->5 [style = bold, label=""];
1->2 [style = bold, label=""];
14->8 [style = bold, label=""];
8->1 [style = solid, label="options"];
10->1 [style = bold, label=""];
4->5 [style = bold, label=""];
2->11 [style = bold, label=""];
3->9 [style = solid, label="classpath"];
}
