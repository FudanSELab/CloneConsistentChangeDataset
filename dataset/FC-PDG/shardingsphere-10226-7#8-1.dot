digraph {
20 [style = filled, label = "checkDuplicateRuleNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final DatabaseDiscoveryRuleConfiguration currentRuleConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "duplicateRuleNames.addAll(getToBeCreatedDuplicateRuleNames(sqlStatement))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final ReadwriteSplittingRuleConfiguration currentRuleConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final CreateReadwriteSplittingRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "throw new DuplicateRuleException(\"database discovery\",schemaName,duplicateRuleNames)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final String schemaName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "final String schemaName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "checkDuplicateRuleNames['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "checkDuplicateRuleNames['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Collection<String> duplicateRuleNames = sqlStatement.getRules().stream().map(null).filter(null).collect(Collectors.toList())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final DatabaseDiscoveryRuleConfiguration currentRuleConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final CreateDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "null != currentRuleConfig@@@3@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new RuleDuplicatedException(\"readwrite splitting\",schemaName,duplicateRuleNames)@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "!duplicateRuleNames.isEmpty()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Collection<String> currentRuleNames = currentRuleConfig.getDataSources().stream().map(null).collect(Collectors.toList())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Collection<String> duplicateRuleNames = sqlStatement.getRules().stream().map(null).filter(null).collect(Collectors.toSet())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Collection<String> existRuleNames = currentRuleConfig.getDataSources().stream().map(null).collect(Collectors.toList())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final CreateDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String schemaName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "throw new RuleDuplicatedException(\"database discovery\",schemaName,duplicateRuleNames)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7->2 [style = dotted, label="true"];
7->6 [style = dotted, label="true"];
1->4 [style = bold, label=""];
19->18 [style = bold, label=""];
5->7 [style = solid, label="currentRuleConfig"];
0->5 [style = dotted, label="true"];
8->10 [style = dashed, label="0"];
8->6 [style = dashed, label="0"];
21->19 [style = bold, label=""];
13->12 [style = dotted, label="true"];
14->7 [style = solid, label="currentRuleConfig"];
4->6 [style = bold, label=""];
17->7 [style = solid, label="currentRuleConfig"];
7->19 [style = dotted, label="true"];
1->8 [style = solid, label="duplicateRuleNames"];
20->17 [style = dotted, label="true"];
2->1 [style = bold, label=""];
1->19 [style = dashed, label="0"];
18->6 [style = dotted, label="true"];
0->7 [style = bold, label=""];
6->10 [style = dotted, label="true"];
9->14 [style = dashed, label="0"];
1->10 [style = solid, label="duplicateRuleNames"];
3->4 [style = solid, label="sqlStatement"];
2->21 [style = dashed, label="0"];
18->6 [style = bold, label=""];
6->8 [style = dotted, label="true"];
7->2 [style = bold, label=""];
13->7 [style = bold, label=""];
6->10 [style = bold, label=""];
9->17 [style = dashed, label="0"];
12->4 [style = solid, label="sqlStatement"];
7->4 [style = dotted, label="true"];
6->8 [style = bold, label=""];
7->18 [style = dotted, label="true"];
7->21 [style = bold, label=""];
13->11 [style = dotted, label="true"];
0->3 [style = dotted, label="true"];
9->8 [style = solid, label="schemaName"];
11->10 [style = solid, label="schemaName"];
20->7 [style = bold, label=""];
7->1 [style = dotted, label="true"];
13->14 [style = dotted, label="true"];
7->21 [style = dotted, label="true"];
0->9 [style = dotted, label="true"];
15->6 [style = solid, label="schemaName"];
20->15 [style = dotted, label="true"];
20->16 [style = dotted, label="true"];
19->6 [style = solid, label="duplicateRuleNames"];
}
