digraph {
15 [style = filled, label = "assertEquals(Optional.of(\"testV\"),be4.getField(\"volume\"))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertEquals(\"article\",be2.getType())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Optional.of(\"testA0 and testA1\"),first.getField(\"author\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "BibEntry be1 = bibEntries.get(1)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "assertEquals(Optional.of(\"testP\"),fifth.getField(\"pages\"))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(Optional.of(\"testB0\"),third.getField(\"journal\"))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "BibEntry be0 = bibEntries.get(0)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertEquals(Optional.of(\"testT\"),be0.getField(\"title\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "assertEquals(\"article\",third.getType())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "assertEquals(\"misc\",second.getType())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "BibEntry be4 = bibEntries.get(4)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "assertEquals(Optional.of(\"testI1\"),fifth.getField(\"school\"))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "BibEntry fifth = bibEntries.get(4)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(Optional.of(\"testN\"),be4.getField(\"number\"))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertEquals(Optional.of(\"testO1\"),be4.getField(\"note\"))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "assertEquals(Optional.of(\"test7\"),second.getField(\"edition\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"testI0\"),be3.getField(\"publisher\"))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Optional.of(\"testI1\"),be4.getField(\"school\"))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Optional.of(\"testD\"),be1.getField(\"year\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertEquals(Optional.of(\"test7\"),be1.getField(\"edition\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"misc\",be0.getType())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "assertEquals(Optional.of(\"testJ\"),second.getField(\"journal\"))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(Optional.of(\"testK\"),be4.getField(\"keywords\"))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(Optional.of(\"testF\"),be4.getField(\"bibtexkey\"))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "testImportEntries0['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(5,bibEntries.size())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "Path file = Paths.get(.getResource(\"Endnote.book.example.enw\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(Optional.of(\"testU\"),be4.getField(\"url\"))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Optional.of(\"testB0\"),be2.getField(\"journal\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertEquals(Optional.of(\"testT\"),first.getField(\"title\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "assertEquals(Optional.of(\"testO1\"),fifth.getField(\"note\"))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(Optional.of(\"testX\"),be4.getField(\"abstract\"))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "BibEntry third = bibEntries.get(2)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertEquals(Optional.of(\"testD\"),second.getField(\"year\"))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "BibEntry second = bibEntries.get(1)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(Optional.of(\"testB2\"),be1.getField(\"booktitle\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"book\",be3.getType())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "assertEquals(Optional.of(\"testV\"),fifth.getField(\"volume\"))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(Optional.of(\"testK\"),fifth.getField(\"keywords\"))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "assertEquals(\"misc\",first.getType())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertEquals(Optional.of(\"testC\"),second.getField(\"address\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
73 [style = filled, label = "assertEquals(Optional.of(\"Git : dezentrale Versionsverwaltung im Team : Grundlagen und Workflows\"),be.getField(\"title\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertEquals(Optional.of(\"testN\"),fifth.getField(\"number\"))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "BibEntry be = bibEntries.get(0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(Optional.of(\"testX\"),fifth.getField(\"abstract\"))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(Optional.of(\"testC\"),be1.getField(\"address\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "assertEquals(Optional.of(\"testF\"),fifth.getField(\"bibtexkey\"))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertEquals(Optional.of(\"testB1\"),fourth.getField(\"series\"))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "assertEquals(Optional.of(\"http://d-nb.info/107601965X\"),be.getField(\"url\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(\"misc\",be1.getType())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
71 [style = filled, label = "assertEquals(Optional.of(\"dpunkt.verlag\"),be.getField(\"publisher\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(\"mastersthesis\",be4.getType())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Optional.of(\"testR\"),be4.getField(\"doi\"))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "List<BibEntry> bibEntries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(Optional.of(\"testJ\"),be1.getField(\"journal\"))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertEquals(\"book\",fourth.getType())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "assertEquals(Optional.of(\"testE0 and testE1\"),first.getField(\"editor\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
75 [style = filled, label = "assertEquals(\"book\",be.getType())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(Optional.of(\"testB1\"),be3.getField(\"series\"))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "assertEquals(Optional.of(\"testP\"),be4.getField(\"pages\"))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "BibEntry fourth = bibEntries.get(3)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertEquals(Optional.of(\"test8\"),second.getField(\"date\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "assertEquals(Optional.of(\"testI0\"),fourth.getField(\"publisher\"))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "assertEquals(Optional.of(\"2016\"),be.getField(\"year\"))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertEquals(\"mastersthesis\",fifth.getType())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(Optional.of(\"testB2\"),second.getField(\"booktitle\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(Optional.of(\"testU\"),fifth.getField(\"url\"))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
80 [style = filled, label = "assertEquals(Optional.of(\"Heidelberg\"),be.getField(\"address\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(Optional.of(\"testE0 and testE1\"),be0.getField(\"editor\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "assertEquals(1,bibEntries.size())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "BibEntry first = bibEntries.get(0)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(Optional.of(\"testA0 and testA1\"),be0.getField(\"author\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Optional.of(\"test8\"),be1.getField(\"date\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "BibEntry be3 = bibEntries.get(3)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "Path file = Paths.get(.getResource(\"Endnote.entries.enw\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testImportEntries0['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "BibEntry be2 = bibEntries.get(2)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "assertEquals(Optional.of(\"testR\"),fifth.getField(\"doi\"))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "assertEquals(Optional.of(\"XX, 327\"),be.getField(\"pages\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertEquals(Optional.of(\"3., aktualisierte und erweiterte Auflage\"),be.getField(\"edition\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertEquals(Optional.of(\"Prei鐃緒申鐃緒申鐃緒申el, Ren鐃緒申鐃緒申鐃緒申 and Stachmann, Bj鐃緒申鐃緒申鐃緒申rn\"),be.getField(\"author\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertEquals(Optional.of(\"Versionsverwaltung\"),be.getField(\"keywords\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "testImportEntriesBookExample['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32->35 [style = bold, label=""];
31->79 [style = dashed, label="0"];
26->55 [style = dashed, label="0"];
52->64 [style = bold, label=""];
37->49 [style = bold, label=""];
28->20 [style = bold, label=""];
1->71 [style = dashed, label="0"];
23->51 [style = dashed, label="0"];
27->28 [style = bold, label=""];
73->74 [style = bold, label=""];
82->0 [style = bold, label=""];
7->63 [style = dashed, label="0"];
13->65 [style = dashed, label="0"];
61->25 [style = bold, label=""];
31->52 [style = dashed, label="0"];
12->74 [style = dashed, label="0"];
23->78 [style = dashed, label="0"];
65->50 [style = bold, label=""];
57->63 [style = bold, label=""];
6->69 [style = dashed, label="0"];
3->70 [style = dashed, label="0"];
34->32 [style = bold, label=""];
58->59 [style = bold, label=""];
42->67 [style = bold, label=""];
2->24 [style = bold, label=""];
81->69 [style = bold, label=""];
54->38 [style = bold, label=""];
8->48 [style = dashed, label="0"];
0->3 [style = bold, label=""];
0->70 [style = bold, label=""];
33->16 [style = bold, label=""];
74->78 [style = bold, label=""];
18->53 [style = dashed, label="0"];
22->75 [style = dashed, label="0"];
3->11 [style = bold, label=""];
39->45 [style = bold, label=""];
10->26 [style = bold, label=""];
4->18 [style = bold, label=""];
4->49 [style = dashed, label="0"];
46->39 [style = bold, label=""];
79->81 [style = bold, label=""];
10->80 [style = dashed, label="0"];
56->51 [style = bold, label=""];
66->48 [style = bold, label=""];
7->33 [style = bold, label=""];
44->55 [style = bold, label=""];
11->58 [style = dashed, label="0"];
21->57 [style = dashed, label="0"];
16->54 [style = dashed, label="0"];
38->47 [style = bold, label=""];
21->7 [style = bold, label=""];
45->56 [style = bold, label=""];
80->76 [style = bold, label=""];
3->58 [style = bold, label=""];
24->8 [style = bold, label=""];
59->44 [style = bold, label=""];
33->60 [style = dashed, label="0"];
20->19 [style = bold, label=""];
5->68 [style = dashed, label="0"];
25->82 [style = dashed, label="0"];
36->42 [style = bold, label=""];
30->15 [style = bold, label=""];
11->72 [style = dashed, label="0"];
30->38 [style = dashed, label="0"];
25->0 [style = bold, label=""];
60->54 [style = bold, label=""];
1->39 [style = dashed, label="0"];
27->41 [style = dashed, label="0"];
17->6 [style = bold, label=""];
72->75 [style = bold, label=""];
28->40 [style = dashed, label="0"];
68->65 [style = bold, label=""];
14->73 [style = dashed, label="0"];
62->66 [style = bold, label=""];
77->82 [style = bold, label=""];
26->76 [style = dashed, label="0"];
22->59 [style = dashed, label="0"];
29->21 [style = bold, label=""];
53->62 [style = bold, label=""];
6->1 [style = bold, label=""];
26->31 [style = bold, label=""];
71->73 [style = bold, label=""];
63->60 [style = bold, label=""];
17->64 [style = dashed, label="0"];
51->36 [style = bold, label=""];
41->40 [style = bold, label=""];
5->13 [style = bold, label=""];
16->30 [style = bold, label=""];
50->57 [style = bold, label=""];
48->68 [style = bold, label=""];
14->45 [style = dashed, label="0"];
22->10 [style = bold, label=""];
11->22 [style = bold, label=""];
34->36 [style = dashed, label="0"];
70->72 [style = bold, label=""];
40->43 [style = bold, label=""];
31->17 [style = bold, label=""];
55->52 [style = bold, label=""];
20->43 [style = dashed, label="0"];
75->80 [style = bold, label=""];
35->27 [style = bold, label=""];
15->47 [style = dashed, label="0"];
10->44 [style = dashed, label="0"];
35->67 [style = dashed, label="0"];
24->66 [style = dashed, label="0"];
43->37 [style = bold, label=""];
64->46 [style = bold, label=""];
18->2 [style = bold, label=""];
49->53 [style = bold, label=""];
6->46 [style = dashed, label="0"];
67->41 [style = bold, label=""];
13->29 [style = bold, label=""];
69->71 [style = bold, label=""];
8->5 [style = bold, label=""];
29->50 [style = dashed, label="0"];
9->25 [style = bold, label=""];
14->12 [style = bold, label=""];
32->42 [style = dashed, label="0"];
23->34 [style = bold, label=""];
1->14 [style = bold, label=""];
12->23 [style = bold, label=""];
76->79 [style = bold, label=""];
19->4 [style = bold, label=""];
12->56 [style = dashed, label="0"];
2->62 [style = dashed, label="0"];
19->37 [style = dashed, label="0"];
}
