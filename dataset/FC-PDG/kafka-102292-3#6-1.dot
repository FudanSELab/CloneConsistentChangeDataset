digraph {
9 [style = filled, label = "shouldNotThrowStreamsExceptionWhenValueDeserializationFailsWithSkipHandler['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "queue.addRawRecords(records)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "queueThatSkipsDeserializeErrors.addRawRecords(records)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final byte(( key = Serdes.Long().serializer().serialize(\"foo\",1L)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<ConsumerRecord<byte((,byte((>> records = Collections.singletonList(new ConsumerRecord<>(\"topic\",1,1,0L,TimestampType.CREATE_TIME,0L,0,0,key,recordValue))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final byte(( value = Serdes.Long().serializer().serialize(\"foo\",1L)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(0,queueThatSkipsDeserializeErrors.size())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "shouldThrowStreamsExceptionWhenKeyDeserializationFails['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shouldThrowStreamsExceptionWhenKeyDeserializationFails['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final List<ConsumerRecord<byte((,byte((>> records = Collections.singletonList(new ConsumerRecord<>(\"topic\",1,1,0L,TimestampType.CREATE_TIME,0L,0,0,recordKey,value))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->8 [style = bold, label=""];
5->7 [style = bold, label=""];
4->3 [style = bold, label=""];
0->8 [style = dashed, label="0"];
3->6 [style = dashed, label="0"];
6->8 [style = solid, label="value"];
1->5 [style = dashed, label="0"];
3->0 [style = solid, label="key"];
8->5 [style = bold, label=""];
0->1 [style = bold, label=""];
0->1 [style = solid, label="records"];
3->0 [style = bold, label=""];
2->3 [style = bold, label=""];
9->6 [style = bold, label=""];
8->5 [style = solid, label="records"];
}
