digraph {
18 [style = filled, label = "b.prependTo(REST_guards,reverse(a.guards()))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "b.appendToIfNotEmpty(REST_defaultRequestHeaders,accept(string(a.defaultAccept())))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "stringStream(a.defaultQuery()).map(null).forEach(null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "stringStream(a.path()).forEach(null)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "b.addToIfNotEmpty(REST_roleGuard,string(a.roleGuard()))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "b.set(REST_encoders,merge(ConverterUtils.toType(b.peek(REST_encoders),),a.encoders()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RestDelete a = ai.getAnnotation()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "RestGet a = ai.getAnnotation()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "b.setIfNotEmpty(RESTOP_debug,string(a.debug()))@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "b.setIf(a.contextClass() != ,RESTOP_contextClass,a.contextClass())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ContextPropertiesBuilder b@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "b.prependTo(REST_converters,a.converters())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "b.setIfNotEmpty(RESTOP_clientVersion,a.clientVersion())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "AnnotationInfo<RestGet> ai@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "stringStream(a.defaultRequestAttributes()).map(null).forEach(null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ContextPropertiesBuilder b@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "b.setIfNotEmpty(RESTOP_path,a.value())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "AnnotationInfo<RestDelete> ai@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "stringStream(a.defaultRequestHeaders()).map(null).forEach(null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "b.set(REST_serializers,merge(ConverterUtils.toType(b.peek(REST_serializers),),a.serializers()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "AnnotationInfo<RestDelete> ai@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "stringStream(a.defaultResponseHeaders()).map(null).forEach(null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "b.setIfNotEmpty(RESTOP_httpMethod,\"delete\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "b.setIfNotEmpty(REST_defaultCharset,string(a.defaultCharset()))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "b.prependTo(RESTOP_matchers,a.matchers())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "RestOperationContextBuilder b@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "b.setIfNotEmpty(REST_produces,stringList(a.produces()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "b.setIfNotEmpty(RESTOP_httpMethod,\"get\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "b.set(REST_encoders,merge(ConverterUtils.toType(b.peek(REST_encoders),),a.encoders()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cdStream(a.rolesDeclared()).forEach(null)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
1->5 [style = bold, label=""];
22->21 [style = dotted, label="true"];
27->32 [style = bold, label=""];
15->23 [style = dashed, label="0"];
1->10 [style = dotted, label="true"];
22->23 [style = dotted, label="true"];
20->26 [style = bold, label=""];
31->24 [style = bold, label=""];
4->13 [style = bold, label=""];
8->3 [style = bold, label=""];
5->24 [style = dashed, label="0"];
18->12 [style = bold, label=""];
15->30 [style = dashed, label="0"];
32->7 [style = bold, label=""];
25->14 [style = bold, label=""];
3->16 [style = bold, label=""];
11->19 [style = bold, label=""];
22->5 [style = bold, label=""];
6->2 [style = bold, label=""];
7->9 [style = bold, label=""];
20->18 [style = bold, label=""];
31->30 [style = dotted, label="true"];
17->0 [style = bold, label=""];
12->4 [style = bold, label=""];
1->15 [style = dotted, label="true"];
9->25 [style = bold, label=""];
9->14 [style = bold, label=""];
5->11 [style = bold, label=""];
14->8 [style = bold, label=""];
11->27 [style = dashed, label="0"];
13->6 [style = bold, label=""];
31->29 [style = dotted, label="true"];
16->20 [style = bold, label=""];
19->7 [style = bold, label=""];
24->27 [style = bold, label=""];
0->28 [style = bold, label=""];
26->18 [style = bold, label=""];
}
