digraph {
2 [style = filled, label = "double(((( data1 = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1ce40a@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "d1.addSeries(\"S1\",data1)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "double(( y1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1ce400@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DefaultXYDataset d2 = (DefaultXYDataset)d1.clone()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertTrue(d1.equals(d2))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(d1.equals(d2))@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "d2 = (DefaultXYDataset)d1.clone()@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(d1.equals(d2))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "d2 = CloneUtils.clone(d1)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertTrue(d1.equals(d2))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "x1(1( = 2.0@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "DefaultXYDataset d2 = CloneUtils.clone(d1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "x1(1( = 2.2@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "double(( x1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1ce3f6@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DefaultXYDataset d1 = new DefaultXYDataset()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "DefaultXYDataset d2 = CloneUtils.clone(d1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(d1 != d2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "d2 = CloneUtils.clone(d1)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(d1 != d2)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
18->15 [style = solid, label="d2"];
16->15 [style = bold, label=""];
0->20 [style = solid, label="d1"];
20->13 [style = bold, label=""];
22->5 [style = solid, label="d2"];
18->5 [style = solid, label="d2"];
15->7 [style = bold, label=""];
21->0 [style = bold, label=""];
4->6 [style = bold, label=""];
0->22 [style = solid, label="d1"];
1->4 [style = solid, label="d2"];
9->4 [style = bold, label=""];
12->2 [style = solid, label="y1"];
14->10 [style = bold, label=""];
6->2 [style = solid, label="x1"];
10->3 [style = bold, label=""];
23->4 [style = solid, label="d2"];
22->15 [style = solid, label="d2"];
17->22 [style = bold, label=""];
7->8 [style = bold, label=""];
1->13 [style = bold, label=""];
14->5 [style = solid, label="d2"];
23->13 [style = solid, label="d2"];
19->0 [style = bold, label=""];
2->17 [style = solid, label="data1"];
1->20 [style = dashed, label="0"];
5->16 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
11->0 [style = bold, label=""];
1->13 [style = solid, label="d2"];
20->13 [style = solid, label="d2"];
0->23 [style = bold, label=""];
0->18 [style = solid, label="d1"];
18->10 [style = bold, label=""];
0->13 [style = solid, label="d1"];
17->14 [style = bold, label=""];
23->13 [style = bold, label=""];
0->1 [style = bold, label=""];
22->10 [style = bold, label=""];
18->8 [style = solid, label="d2"];
0->23 [style = solid, label="d1"];
20->4 [style = solid, label="d2"];
22->10 [style = solid, label="d2"];
0->10 [style = solid, label="d1"];
0->20 [style = bold, label=""];
13->9 [style = bold, label=""];
14->15 [style = solid, label="d2"];
22->8 [style = solid, label="d2"];
14->8 [style = solid, label="d2"];
1->23 [style = dashed, label="0"];
17->18 [style = bold, label=""];
18->10 [style = solid, label="d2"];
14->10 [style = solid, label="d2"];
6->12 [style = bold, label=""];
}
