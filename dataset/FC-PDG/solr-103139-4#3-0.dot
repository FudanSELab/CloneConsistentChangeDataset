digraph {
8 [style = filled, label = "assertEquals(,dfr.getNormalization().getClass())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Similarity sim = getSimilarity(\"text_paramc\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testParameters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Similarity sim = getSimilarity(\"text_params\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(,dfr.getBasicModel().getClass())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(,sim.getClass())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(,dfr.getBasicModel().getClass())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "NormalizationH2 norm = (NormalizationH2)dfr.getNormalization()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(,dfr.getAfterEffect().getClass())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(,dfr.getAfterEffect().getClass())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "NormalizationH3 norm = (NormalizationH3)dfr.getNormalization()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testParameterC['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "DFRSimilarity dfr = (DFRSimilarity)sim@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(,dfr.getBasicModel().getClass())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(900f,norm.getMu(),0.01f)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testParameterC['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(7f,norm.getC(),0.01f)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(,dfr.getNormalization().getClass())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
1->4 [style = bold, label=""];
5->14 [style = dashed, label="0"];
3->1 [style = bold, label=""];
11->14 [style = bold, label=""];
9->2 [style = bold, label=""];
12->1 [style = solid, label="sim"];
7->0 [style = bold, label=""];
4->2 [style = bold, label=""];
0->12 [style = dashed, label="0"];
2->17 [style = dashed, label="0"];
1->13 [style = bold, label=""];
0->1 [style = solid, label="sim"];
1->9 [style = bold, label=""];
4->9 [style = dashed, label="0"];
13->17 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
6->15 [style = dashed, label="0"];
10->0 [style = bold, label=""];
14->15 [style = bold, label=""];
12->3 [style = bold, label=""];
8->11 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
16->12 [style = bold, label=""];
2->8 [style = bold, label=""];
17->11 [style = bold, label=""];
}
