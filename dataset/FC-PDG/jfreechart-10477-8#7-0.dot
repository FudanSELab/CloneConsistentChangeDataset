digraph {
31 [style = filled, label = "t1.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.YELLOW))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertTrue(t1.equals(t2))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int h2 = t2.hashCode()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "t2.setMargin(new RectangleInsets(1.0,2.0,3.0,4.0))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(t2,t1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertFalse(t1.equals(t2))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Comparable c1 = \"C1\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "TextBlock tb1 = new TextBlock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Comparable<String> c1 = \"C1\"@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "tb1.addLine(new TextLine(\"Block 2\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(t1,t2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertFalse(t1.equals(t2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "t2.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.YELLOW))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "t2.getContainer().add(new TextTitle(\"T1\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "tb1.addLine(new TextLine(\"Block 1\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TextAnchor ta1 = TextAnchor.CENTER@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "t1.setMargin(new RectangleInsets(1.0,2.0,3.0,4.0))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "t1.setPadding(new RectangleInsets(1.0,2.0,3.0,4.0))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "CompositeTitle t2 = new CompositeTitle(new BlockContainer())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertTrue(t1.equals(t2))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(h1,h2)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CategoryTick t2 = new CategoryTick(c1,tb1,tba1,ta1,1.0f)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int h1 = t1.hashCode()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testHashCode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TextBlockAnchor tba1 = TextBlockAnchor.CENTER@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(t1.equals(t2))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "t2.setPadding(new RectangleInsets(1.0,2.0,3.0,4.0))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "t1.setFrame(new BlockBorder(Color.RED))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "t1.getContainer().add(new TextTitle(\"T1\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "CategoryTick t1 = new CategoryTick(c1,tb1,tba1,ta1,1.0f)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "t2.setFrame(new BlockBorder(Color.RED))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertFalse(t1.equals(t2))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertFalse(t1.equals(t2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertFalse(t1.equals(t2))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "CompositeTitle t1 = new CompositeTitle(new BlockContainer())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(t1.equals(t2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(t1.equals(t2))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testHashCode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->8 [style = solid, label="h2"];
6->4 [style = solid, label="tba1"];
21->20 [style = solid, label="t2"];
0->9 [style = bold, label=""];
1->8 [style = bold, label=""];
31->22 [style = bold, label=""];
21->36 [style = solid, label="t2"];
33->18 [style = solid, label="t1"];
2->7 [style = solid, label="ta1"];
24->0 [style = bold, label=""];
11->33 [style = dashed, label="0"];
29->31 [style = bold, label=""];
23->15 [style = bold, label=""];
36->28 [style = bold, label=""];
37->29 [style = bold, label=""];
21->38 [style = solid, label="t2"];
13->7 [style = solid, label="c1"];
3->6 [style = bold, label=""];
10->3 [style = bold, label=""];
11->12 [style = bold, label=""];
11->4 [style = solid, label="c1"];
7->4 [style = bold, label=""];
21->27 [style = solid, label="t2"];
21->35 [style = solid, label="t2"];
28->16 [style = bold, label=""];
21->18 [style = bold, label=""];
32->33 [style = bold, label=""];
12->21 [style = dashed, label="0"];
0->36 [style = bold, label=""];
4->0 [style = bold, label=""];
2->4 [style = solid, label="ta1"];
6->2 [style = bold, label=""];
35->25 [style = bold, label=""];
17->38 [style = bold, label=""];
21->16 [style = solid, label="t2"];
25->27 [style = bold, label=""];
18->20 [style = bold, label=""];
11->13 [style = dashed, label="0"];
12->10 [style = bold, label=""];
11->7 [style = solid, label="c1"];
13->12 [style = bold, label=""];
27->34 [style = bold, label=""];
30->35 [style = bold, label=""];
21->29 [style = solid, label="t2"];
21->22 [style = solid, label="t2"];
21->26 [style = solid, label="t2"];
34->26 [style = bold, label=""];
19->23 [style = bold, label=""];
15->24 [style = bold, label=""];
16->30 [style = bold, label=""];
13->4 [style = solid, label="c1"];
4->0 [style = solid, label="t2"];
22->17 [style = bold, label=""];
21->23 [style = solid, label="t2"];
26->37 [style = bold, label=""];
5->11 [style = bold, label=""];
2->7 [style = bold, label=""];
14->13 [style = bold, label=""];
9->1 [style = bold, label=""];
33->21 [style = bold, label=""];
20->19 [style = bold, label=""];
33->20 [style = solid, label="t1"];
21->24 [style = solid, label="t2"];
12->7 [style = solid, label="tb1"];
12->4 [style = solid, label="tb1"];
6->7 [style = solid, label="tba1"];
9->8 [style = solid, label="h1"];
21->18 [style = solid, label="t2"];
}
