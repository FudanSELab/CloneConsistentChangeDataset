digraph {
0 [style = filled, label = "final Method method@@@6@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "c = c.getSuperclass()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "val classCache = _ClassCache.getInstance()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "findExpectedType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "findExpectedType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Class<?> fromClass@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "isSatisfiesSafelyMethod(method)@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Class<?> c = fromClass@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "c.getDeclaredMethods()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "throw new Error(\"Cannot determine correct type for satisfiesSafely() method.\")@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Method method@@@6@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "findExpectedType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "return methodFound.getParameterTypes()(0(@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "val methodFound = classCache.streamDeclaredMethods(c).filter(null).findFirst().orElse(null)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "isSatisfiesTranslatableSafelyMethod(method)@@@7@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return method.getParameterTypes()(0(@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "methodFound != null@@@8@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "c != @@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13->14 [style = solid, label="methodFound"];
17->8 [style = bold, label=""];
15->7 [style = bold, label=""];
1->15 [style = bold, label=""];
1->3 [style = bold, label=""];
14->10 [style = bold, label=""];
11->12 [style = bold, label=""];
11->5 [style = dotted, label="true"];
1->4 [style = dotted, label="true"];
1->14 [style = dotted, label="true"];
15->7 [style = dotted, label="true"];
8->1 [style = solid, label="c"];
1->13 [style = bold, label=""];
14->10 [style = dotted, label="true"];
5->8 [style = solid, label="fromClass"];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
1->13 [style = dotted, label="true"];
1->6 [style = bold, label=""];
9->1 [style = solid, label="c"];
6->15 [style = dashed, label="0"];
15->9 [style = bold, label=""];
12->8 [style = bold, label=""];
1->15 [style = dotted, label="true"];
1->9 [style = dotted, label="true"];
7->6 [style = bold, label=""];
6->7 [style = dotted, label="true"];
7->15 [style = bold, label=""];
1->6 [style = dotted, label="true"];
14->9 [style = bold, label=""];
7->10 [style = dashed, label="0"];
10->9 [style = bold, label=""];
1->16 [style = dotted, label="true"];
1->0 [style = dotted, label="true"];
6->9 [style = bold, label=""];
9->1 [style = bold, label=""];
6->7 [style = bold, label=""];
2->5 [style = dotted, label="true"];
4->13 [style = dashed, label="0"];
13->14 [style = bold, label=""];
2->8 [style = bold, label=""];
17->5 [style = dotted, label="true"];
}
