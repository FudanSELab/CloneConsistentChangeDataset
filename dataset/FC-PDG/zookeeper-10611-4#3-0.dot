digraph {
1 [style = filled, label = "testMinMaxSessionTimeout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "zk.close()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testMinMaxSessionTimeout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "zk.close()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "DisconnectableZooKeeper zk = createClient(timeout)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "zk = createClient(MINSESS / 2)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "LOG.info(zk.toString())@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "DisconnectableZooKeeper zk = createClient(TICK_TIME * 4)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "zk = createClient(TICK_TIME)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(TICK_TIME * 2,zk.getSessionTimeout())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "LOG.info(zk.toString())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "zk.close()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "LOG.info(zk.toString())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final int MINSESS = 20000@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "LOG.info(zk.toString())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final int MAXSESS = 240000@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(TICK_TIME * 20,zk.getSessionTimeout())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "zk = createClient(TICK_TIME * 30)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "LOG.info(zk.toString())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(TICK_TIME * 4,zk.getSessionTimeout())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testSessionTimeoutAccess['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "LOG.info(zk.toString())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "LOG.info(zk.toString())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "{ZooKeeperServer zs = serverFactory.getZooKeeperServer()zs.setMinSessionTimeout(MINSESS)zs.setMaxSessionTimeout(MAXSESS)}@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "LOG.info(zk.toString())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "zk.close()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "LOG.info(zk.toString())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "zk.close()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(MAXSESS,zk.getSessionTimeout())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "zk = createClient(MAXSESS * 2)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(MINSESS,zk.getSessionTimeout())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(timeout,zk.getSessionTimeout())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "LOG.info(zk.toString())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int timeout = 120000@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->32 [style = bold, label=""];
2->5 [style = solid, label="MINSESS"];
19->6 [style = bold, label=""];
16->4 [style = bold, label=""];
21->22 [style = bold, label=""];
30->21 [style = bold, label=""];
2->15 [style = solid, label="MINSESS"];
12->11 [style = dashed, label="0"];
28->23 [style = bold, label=""];
33->7 [style = bold, label=""];
4->8 [style = bold, label=""];
14->24 [style = bold, label=""];
22->31 [style = bold, label=""];
7->11 [style = bold, label=""];
3->18 [style = bold, label=""];
3->18 [style = solid, label="timeout"];
11->14 [style = bold, label=""];
3->17 [style = solid, label="timeout"];
6->10 [style = bold, label=""];
16->26 [style = dashed, label="0"];
26->25 [style = bold, label=""];
0->5 [style = solid, label="MAXSESS"];
9->7 [style = dashed, label="0"];
0->9 [style = solid, label="MAXSESS"];
12->19 [style = bold, label=""];
27->26 [style = bold, label=""];
15->16 [style = bold, label=""];
8->13 [style = bold, label=""];
18->17 [style = bold, label=""];
2->0 [style = bold, label=""];
5->3 [style = bold, label=""];
13->9 [style = bold, label=""];
20->2 [style = bold, label=""];
32->33 [style = bold, label=""];
0->5 [style = bold, label=""];
17->7 [style = bold, label=""];
24->29 [style = bold, label=""];
31->28 [style = bold, label=""];
14->15 [style = bold, label=""];
15->27 [style = dashed, label="0"];
1->2 [style = bold, label=""];
0->12 [style = solid, label="MAXSESS"];
9->12 [style = bold, label=""];
23->27 [style = bold, label=""];
2->16 [style = solid, label="MINSESS"];
}
