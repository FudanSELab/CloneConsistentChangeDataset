digraph {
11 [style = filled, label = "assertThat(indexMetaData.getAliases().containsKey(\"dogs\"),equalTo(true))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "indexMetadata = add(indexMetadata,\"dogs\",filter(termQuery(\"animal\",\"dog\")))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "indexMetaData = add(indexMetaData,\"all\",null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(aliasFilter(indexMetaData,\"all\",\"cats\"),nullValue())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "indexMetaData = add(indexMetaData,\"dogs\",filter(termQuery(\"animal\",\"canine\")))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "IndexMetaData indexMetaData = baseMetaData@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "IndexMetaData finalIndexMetadata = indexMetaData@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(aliasFilter(indexMetaData,\"dogs\",\"cats\"),QueryBuilders.boolQuery().should(QueryBuilders.termQuery(\"animal\",\"canine\")).should(QueryBuilders.termQuery(\"animal\",\"feline\")))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "IndexMetadata indexMetadata = baseMetadata@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "indexMetaData = add(indexMetaData,\"dogs\",filter(termQuery(\"animal\",\"dog\")))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expectThrows(,null)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "indexMetadata = add(indexMetadata,\"cats\",filter(termQuery(\"animal\",\"cat\")))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(aliasFilter(indexMetaData,\"cats\",\"all\"),nullValue())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(aliasFilter(indexMetaData,\"cats\",\"dogs\"),QueryBuilders.boolQuery().should(QueryBuilders.termQuery(\"animal\",\"cat\")).should(QueryBuilders.termQuery(\"animal\",\"dog\")))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "indexMetaData = add(indexMetaData,\"cats\",filter(termQuery(\"animal\",\"cat\")))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "indexMetaData = add(indexMetaData,\"cats\",filter(termQuery(\"animal\",\"feline\")))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testUnknownAliasFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "IndexMetadata finalIndexMetadata = indexMetadata@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertThat(aliasFilter(indexMetaData,\"all\"),nullValue())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testFilteringAliases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testUnknownAliasFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertThat(indexMetaData.getAliases().containsKey(\"turtles\"),equalTo(false))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(indexMetaData.getAliases().containsKey(\"cats\"),equalTo(true))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(aliasFilter(indexMetaData,\"cats\"),QueryBuilders.termQuery(\"animal\",\"cat\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->18 [style = solid, label="indexMetaData"];
11->20 [style = bold, label=""];
16->13 [style = bold, label=""];
7->1 [style = bold, label=""];
5->2 [style = solid, label="indexMetaData"];
6->9 [style = solid, label="indexMetadata"];
14->23 [style = solid, label="indexMetaData"];
8->7 [style = solid, label="indexMetadata"];
2->1 [style = bold, label=""];
0->6 [style = dashed, label="0"];
23->15 [style = bold, label=""];
18->19 [style = bold, label=""];
17->16 [style = solid, label="indexMetaData"];
5->17 [style = solid, label="indexMetaData"];
9->8 [style = bold, label=""];
5->17 [style = bold, label=""];
17->22 [style = bold, label=""];
12->0 [style = bold, label=""];
10->6 [style = bold, label=""];
2->7 [style = dashed, label="0"];
21->18 [style = bold, label=""];
2->17 [style = dashed, label="0"];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
19->16 [style = bold, label=""];
20->21 [style = bold, label=""];
4->9 [style = dashed, label="0"];
5->2 [style = bold, label=""];
17->21 [style = solid, label="indexMetaData"];
17->13 [style = solid, label="indexMetaData"];
17->19 [style = solid, label="indexMetaData"];
14->23 [style = bold, label=""];
0->4 [style = bold, label=""];
0->4 [style = solid, label="indexMetaData"];
4->5 [style = solid, label="indexMetaData"];
5->8 [style = dashed, label="0"];
9->8 [style = solid, label="indexMetadata"];
6->9 [style = bold, label=""];
23->15 [style = solid, label="indexMetaData"];
4->5 [style = bold, label=""];
17->14 [style = solid, label="indexMetaData"];
22->11 [style = bold, label=""];
13->14 [style = bold, label=""];
}
