digraph {
5 [style = filled, label = "List<TopicPartition> r3partitions2 = assignment.get(consumer2)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testAssignmentWithMultipleGenerations1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic)))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(r3partitions1.size() == 2 && r3partitions2.size() == 2 && r3partitions3.size() == 2)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r2partitions2,Optional.of(2)))))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(r1partitions1,r3partitions1)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<TopicPartition> r2partitions1 = assignment.get(consumer1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(assignor.isSticky())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(assignor.isSticky())@@@43@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String consumer1 = \"consumer1\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(r1partitions1.size() == 2 && r1partitions2.size() == 2 && r1partitions3.size() == 2)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<TopicPartition> r1partitions2 = assignment.get(consumer2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r1partitions1,Optional.of(1)))))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String consumer2 = \"consumer2\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(r1partitions3,r3partitions3)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r1partitions3,Optional.of(1)))))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertFalse(Collections.disjoint(r2partitions2,r1partitions3))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testAssignmentWithMultipleGenerations2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "String topic = \"topic\"@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "subscriptions.remove(consumer1)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(r1partitions2,r3partitions2)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "subscriptions.remove(consumer3)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(r2partitions1.containsAll(r1partitions1))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r1partitions2,Optional.of(1)))))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,Subscription> subscriptions = new HashMap<>()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "partitionsPerTopic.put(topic,6)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertTrue(r2partitions2.containsAll(r1partitions2))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "subscriptions.remove(consumer1)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<TopicPartition> r2partitions2 = assignment.get(consumer2)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<TopicPartition> r3partitions1 = assignment.get(consumer1)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic)))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String consumer3 = \"consumer3\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "List<TopicPartition> r3partitions3 = assignment.get(consumer3)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(r2partitions1.size() == 3 && r2partitions2.size() == 3)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(6,r2partitions2.size())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<TopicPartition> r1partitions1 = assignment.get(consumer1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "List<TopicPartition> r1partitions3 = assignment.get(consumer3)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r1partitions1,Optional.of(1)))))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(!Collections.disjoint(r2partitions2,r1partitions3))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertTrue(Collections.disjoint(r3partitions2,r3partitions3))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<String,List<TopicPartition>> assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Map<String,Integer> partitionsPerTopic = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testAssignmentWithMultipleGenerations1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertTrue(r3partitions2.size() == 3 && r3partitions3.size() == 3)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37->31 [style = dashed, label="0"];
11->53 [style = dashed, label="0"];
27->32 [style = bold, label=""];
9->50 [style = solid, label="consumer2"];
9->40 [style = solid, label="consumer2"];
20->54 [style = solid, label="r1partitions2"];
51->1 [style = bold, label=""];
7->28 [style = solid, label="r1partitions1"];
7->12 [style = solid, label="r1partitions1"];
21->18 [style = bold, label=""];
22->30 [style = bold, label=""];
17->36 [style = bold, label=""];
25->2 [style = solid, label="r1partitions3"];
27->45 [style = solid, label="consumer3"];
48->51 [style = bold, label=""];
36->0 [style = bold, label=""];
36->24 [style = bold, label=""];
25->42 [style = solid, label="r1partitions3"];
24->11 [style = bold, label=""];
0->24 [style = bold, label=""];
25->19 [style = bold, label=""];
50->45 [style = bold, label=""];
9->41 [style = solid, label="consumer2"];
40->31 [style = bold, label=""];
5->15 [style = solid, label="assignment"];
24->53 [style = bold, label=""];
9->5 [style = solid, label="consumer2"];
10->12 [style = solid, label="consumer1"];
30->38 [style = solid, label="topic"];
11->28 [style = bold, label=""];
27->25 [style = solid, label="consumer3"];
47->48 [style = bold, label=""];
27->2 [style = solid, label="consumer3"];
30->2 [style = solid, label="topic"];
10->7 [style = solid, label="consumer1"];
32->5 [style = solid, label="partitionsPerTopic"];
6->5 [style = solid, label="subscriptions"];
13->40 [style = dashed, label="0"];
20->25 [style = bold, label=""];
30->41 [style = solid, label="topic"];
13->37 [style = bold, label=""];
45->14 [style = bold, label=""];
39->52 [style = bold, label=""];
12->29 [style = bold, label=""];
32->3 [style = solid, label="partitionsPerTopic"];
31->37 [style = solid, label="r3partitions3"];
18->4 [style = bold, label=""];
30->50 [style = solid, label="topic"];
3->7 [style = bold, label=""];
3->39 [style = solid, label="assignment"];
39->12 [style = bold, label=""];
30->10 [style = bold, label=""];
10->2 [style = solid, label="consumer1"];
6->36 [style = solid, label="subscriptions"];
43->10 [style = bold, label=""];
41->38 [style = bold, label=""];
6->3 [style = solid, label="subscriptions"];
34->35 [style = bold, label=""];
10->52 [style = solid, label="consumer1"];
46->40 [style = bold, label=""];
36->26 [style = solid, label="assignment"];
2->31 [style = solid, label="r3partitions1"];
33->8 [style = bold, label=""];
37->16 [style = bold, label=""];
30->29 [style = solid, label="topic"];
30->8 [style = solid, label="topic"];
20->49 [style = solid, label="r1partitions2"];
44->30 [style = bold, label=""];
29->17 [style = bold, label=""];
6->48 [style = solid, label="subscriptions"];
8->41 [style = bold, label=""];
36->18 [style = solid, label="assignment"];
30->45 [style = solid, label="topic"];
31->13 [style = bold, label=""];
25->45 [style = solid, label="r1partitions3"];
27->38 [style = solid, label="consumer3"];
28->26 [style = bold, label=""];
7->20 [style = bold, label=""];
32->14 [style = solid, label="partitionsPerTopic"];
35->14 [style = bold, label=""];
5->16 [style = solid, label="assignment"];
38->3 [style = bold, label=""];
32->33 [style = bold, label=""];
26->21 [style = bold, label=""];
9->27 [style = bold, label=""];
6->21 [style = solid, label="subscriptions"];
20->26 [style = solid, label="r1partitions2"];
32->36 [style = solid, label="partitionsPerTopic"];
10->8 [style = solid, label="consumer1"];
9->29 [style = solid, label="consumer2"];
36->21 [style = solid, label="assignment"];
30->4 [style = solid, label="topic"];
24->14 [style = solid, label="r2partitions2"];
7->31 [style = solid, label="r1partitions1"];
23->39 [style = bold, label=""];
6->23 [style = solid, label="subscriptions"];
10->4 [style = solid, label="consumer1"];
10->9 [style = bold, label=""];
14->2 [style = bold, label=""];
5->40 [style = bold, label=""];
27->17 [style = solid, label="consumer3"];
4->50 [style = bold, label=""];
46->47 [style = solid, label="r3partitions3"];
4->34 [style = bold, label=""];
31->54 [style = bold, label=""];
34->42 [style = dashed, label="0"];
2->5 [style = bold, label=""];
15->1 [style = bold, label=""];
27->31 [style = solid, label="consumer3"];
16->15 [style = bold, label=""];
9->20 [style = solid, label="consumer2"];
20->29 [style = solid, label="r1partitions2"];
5->54 [style = solid, label="r3partitions2"];
40->37 [style = solid, label="r3partitions2"];
24->50 [style = solid, label="r2partitions2"];
7->4 [style = solid, label="r1partitions1"];
30->14 [style = solid, label="topic"];
33->6 [style = bold, label=""];
4->42 [style = bold, label=""];
6->16 [style = solid, label="subscriptions"];
3->23 [style = solid, label="assignment"];
30->33 [style = solid, label="topic"];
25->47 [style = solid, label="r1partitions3"];
14->48 [style = solid, label="assignment"];
24->42 [style = solid, label="r2partitions2"];
42->35 [style = bold, label=""];
53->49 [style = bold, label=""];
54->47 [style = bold, label=""];
9->14 [style = solid, label="consumer2"];
6->26 [style = solid, label="subscriptions"];
19->23 [style = bold, label=""];
6->8 [style = bold, label=""];
10->35 [style = solid, label="consumer1"];
6->14 [style = solid, label="subscriptions"];
9->24 [style = solid, label="consumer2"];
52->29 [style = bold, label=""];
49->26 [style = bold, label=""];
10->0 [style = solid, label="consumer1"];
5->46 [style = bold, label=""];
27->46 [style = solid, label="consumer3"];
30->12 [style = solid, label="topic"];
14->51 [style = solid, label="assignment"];
}
