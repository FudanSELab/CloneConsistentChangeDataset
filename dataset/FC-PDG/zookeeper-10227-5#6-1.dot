digraph {
34 [style = filled, label = "int bytesRead = clientSocket.getInputStream().read(buf,0,buf.length)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "badClientSocket = connectWithoutSSL()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final Boolean hostnameVerification@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "clientSocket = connectWithoutSSL()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "secureClientSocket = connectWithSSL()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "clientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "{forceClose(badClientSocket)forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "handshakeCompletedLock@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "setUp()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "handshakeCompletedLock@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testTLSDetectionNonBlockingStrictServerIdleClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "!handshakeCompleted@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Socket badClientSocket = null@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "forceClose(badClientSocket)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final X509KeyType certKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(1))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testTLSDetectionNonBlockingStrictServerIdleClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "clientSocket.getOutputStream().flush()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "secureClientSocket = connectWithSSL()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "Socket badClientSocket = connectWithoutSSL()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "{forceClose(clientSocket)forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testTLSDetectionNonBlockingNonStrictServerDisconnectedClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Socket clientSocket = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Socket badClientSocket = null@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "secureClientSocket = connectWithSSL()@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "serverThread.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "byte(( buf = new byte((((@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "handshakeCompletedLock@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Socket secureClientSocket = null@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "init(caKeyType,certKeyType,hostnameVerification,paramIndex)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertTrue(handshakeCompleted)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "!handshakeCompleted@@@19@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Integer paramIndex@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "byte(( buf = new byte((((@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertFalse(handshakeCompleted)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final X509KeyType caKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "buf = new byte((((@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "serverThread.start()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->55 [style = bold, label=""];
26->24 [style = solid, label="caKeyType"];
29->30 [style = bold, label=""];
55->49 [style = bold, label=""];
49->48 [style = bold, label=""];
46->31 [style = bold, label=""];
42->51 [style = dotted, label="true"];
8->6 [style = bold, label=""];
10->17 [style = bold, label=""];
7->8 [style = bold, label=""];
1->13 [style = bold, label=""];
53->36 [style = bold, label=""];
33->11 [style = bold, label=""];
15->11 [style = bold, label=""];
37->38 [style = bold, label=""];
51->47 [style = bold, label=""];
0->8 [style = bold, label=""];
54->33 [style = bold, label=""];
15->33 [style = dashed, label="0"];
34->29 [style = solid, label="bytesRead"];
16->14 [style = bold, label=""];
28->24 [style = solid, label="hostnameVerification"];
20->13 [style = dotted, label="true"];
17->12 [style = solid, label="bytesRead"];
2->25 [style = bold, label=""];
52->30 [style = solid, label="buf"];
10->1 [style = solid, label="buf"];
24->19 [style = bold, label=""];
53->36 [style = solid, label="buf"];
5->23 [style = bold, label=""];
35->44 [style = bold, label=""];
55->49 [style = solid, label="badClientSocket"];
18->15 [style = bold, label=""];
14->10 [style = bold, label=""];
7->55 [style = dashed, label="0"];
44->37 [style = dotted, label="true"];
7->0 [style = bold, label=""];
20->3 [style = bold, label=""];
11->43 [style = bold, label=""];
12->1 [style = bold, label=""];
27->24 [style = solid, label="certKeyType"];
16->14 [style = solid, label="buf"];
36->46 [style = bold, label=""];
39->52 [style = bold, label=""];
3->2 [style = bold, label=""];
31->41 [style = bold, label=""];
48->32 [style = bold, label=""];
5->7 [style = bold, label=""];
23->7 [style = bold, label=""];
44->37 [style = bold, label=""];
41->50 [style = bold, label=""];
9->3 [style = dotted, label="true"];
22->21 [style = dotted, label="true"];
34->29 [style = bold, label=""];
20->13 [style = bold, label=""];
47->40 [style = bold, label=""];
52->34 [style = solid, label="buf"];
3->45 [style = bold, label=""];
6->25 [style = solid, label="secureClientSocket"];
11->4 [style = bold, label=""];
42->47 [style = bold, label=""];
0->2 [style = solid, label="secureClientSocket"];
14->10 [style = solid, label="bytesRead"];
9->20 [style = bold, label=""];
45->53 [style = bold, label=""];
16->53 [style = dashed, label="0"];
38->3 [style = bold, label=""];
42->51 [style = bold, label=""];
1->9 [style = bold, label=""];
48->40 [style = solid, label="clientSocket"];
36->46 [style = solid, label="bytesRead"];
17->12 [style = bold, label=""];
12->13 [style = dotted, label="true"];
4->43 [style = dashed, label="0"];
30->35 [style = bold, label=""];
50->42 [style = bold, label=""];
43->5 [style = bold, label=""];
22->26 [style = dotted, label="true"];
50->42 [style = dotted, label="true"];
1->9 [style = dotted, label="true"];
22->27 [style = dotted, label="true"];
9->20 [style = dotted, label="true"];
7->2 [style = solid, label="badClientSocket"];
32->39 [style = bold, label=""];
38->40 [style = solid, label="secureClientSocket"];
10->17 [style = solid, label="buf"];
53->31 [style = solid, label="buf"];
16->17 [style = solid, label="buf"];
4->5 [style = bold, label=""];
21->24 [style = solid, label="paramIndex"];
8->25 [style = solid, label="badClientSocket"];
12->1 [style = dotted, label="true"];
22->28 [style = dotted, label="true"];
52->34 [style = bold, label=""];
14->36 [style = dashed, label="0"];
50->47 [style = dotted, label="true"];
13->3 [style = bold, label=""];
6->16 [style = bold, label=""];
19->4 [style = bold, label=""];
22->24 [style = bold, label=""];
9->13 [style = bold, label=""];
}
