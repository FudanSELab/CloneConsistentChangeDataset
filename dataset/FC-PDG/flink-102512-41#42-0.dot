digraph {
12 [style = filled, label = "Collection<OperatorStateHandle> operatorStateStream = Collections.emptyList()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Configuration taskConfig = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "operatorStateStream = operatorStateHandles@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(executionConfig),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "ShuffleEnvironment<?,?> shuffleEnvironment = new NettyShuffleEnvironmentBuilder().build()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Configuration taskConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "KeyGroupRangeOffsets keyGroupRangeOffsets = new KeyGroupRangeOffsets(new KeyGroupRange(0,0))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "StreamConfig streamConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "taskStateManager.setReportedCheckpointId(taskRestore.getRestoreCheckpointId())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "createTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "Collection<OperatorStateHandle> operatorStateBackend = Collections.emptyList()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(new JobVertexID(),\"test task name\",1,11,.getName(),taskConfig)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),shuffleEnvironment,new KvStateService(new KvStateRegistry(),null,null),mock(),new TaskEventDispatcher(),ExternalResourceInfoProvider.NO_EXTERNAL_RESOURCES,taskStateManager,mock(),mock(),mock(),new NoOpTaskOperatorEventGateway(),new TestGlobalAggregateManager(),TestingClassLoaderLease.newBuilder().build(),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1beb6e2,VoidPermanentBlobService.INSTANCE),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),new NoOpResultPartitionConsumableNotifier(),mock(),mock())@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromBackend = Collections.emptyList()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "operatorStateBackend = operatorStateHandles@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "createTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "cfg.setStreamOperator(op)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "StateBackend backend@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "CheckpointResponder checkpointResponder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "OperatorID operatorID = OperatorID.fromJobVertexID(jobVertexID)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromStream = Collections.emptyList()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "StreamConfig cfg = new StreamConfig(taskConfig)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<KeyedStateHandle> keyedStateHandles = Collections.singletonList(new KeyGroupsStateHandle(keyGroupRangeOffsets,state))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "operatorStateMetadata.put(DefaultOperatorStateBackend.DEFAULT_OPERATOR_STATE_NAME,metaInfo)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "mode@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Configuration taskConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "StreamStateHandle state@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "ExecutionConfig executionConfig = new ExecutionConfig()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "stateSnapshot.putSubtaskStateByOperatorID(operatorID,operatorSubtaskState)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "cfg.setStateBackend(backend)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "keyedStateFromStream = keyedStateHandles@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ShuffleEnvironment<?,?> shuffleEnvironment = new NettyShuffleEnvironmentBuilder().build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "OperatorSubtaskState operatorSubtaskState = OperatorSubtaskState.builder().setManagedOperatorState(new StateObjectCollection<>(operatorStateBackend)).setRawOperatorState(new StateObjectCollection<>(operatorStateStream)).setManagedKeyedState(new StateObjectCollection<>(keyedStateFromBackend)).setRawKeyedState(new StateObjectCollection<>(keyedStateFromStream)).build()@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "cfg.setOperatorID(new OperatorID())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "keyedStateFromBackend = keyedStateHandles@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "OperatorStateHandle.StateMetaInfo metaInfo = new OperatorStateHandle.StateMetaInfo(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1beb5ce,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Map<String,OperatorStateHandle.StateMetaInfo> operatorStateMetadata = new HashMap<>(1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int mode@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(jobVertexID,\"test task name\",1,1,.getName(),taskConfig)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "throw new IllegalArgumentException()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "TestTaskStateManager taskStateManager = new TestTaskStateManager()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "StreamConfig streamConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "int mode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "OperatorSubtaskState operatorSubtaskState = new OperatorSubtaskState(new StateObjectCollection<>(operatorStateBackend),new StateObjectCollection<>(operatorStateStream),new StateObjectCollection<>(keyedStateFromBackend),new StateObjectCollection<>(keyedStateFromStream))@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(new ExecutionConfig()),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Collection<OperatorStateHandle> operatorStateHandles = Collections.singletonList(new OperatorStreamStateHandle(operatorStateMetadata,state))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "JobManagerTaskRestore taskRestore = new JobManagerTaskRestore(1L,stateSnapshot)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "StreamOperator<?> op@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TaskStateSnapshot stateSnapshot = new TaskStateSnapshot()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "streamConfig.setOperatorID(operatorID)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "taskStateManager.setJobManagerTaskStateSnapshotsByCheckpointId(Collections.singletonMap(taskRestore.getRestoreCheckpointId(),taskRestore.getTaskStateSnapshot()))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "createTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),shuffleEnvironment,new KvStateService(new KvStateRegistry(),null,null),mock(),new TaskEventDispatcher(),ExternalResourceInfoProvider.NO_EXTERNAL_RESOURCES,new TestTaskStateManager(),mock(),mock(),checkpointResponder,new NoOpTaskOperatorEventGateway(),new TestGlobalAggregateManager(),TestingClassLoaderLease.newBuilder().build(),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1beb78b,VoidPermanentBlobService.INSTANCE),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),new NoOpResultPartitionConsumableNotifier(),mock(),Executors.directExecutor())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "JobVertexID jobVertexID = new JobVertexID()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51->48 [style = bold, label=""];
46->53 [style = solid, label="taskConfig"];
28->16 [style = bold, label=""];
27->34 [style = solid, label="shuffleEnvironment"];
46->44 [style = bold, label=""];
25->19 [style = bold, label=""];
26->35 [style = bold, label=""];
28->26 [style = bold, label=""];
7->6 [style = bold, label=""];
14->11 [style = bold, label=""];
47->51 [style = bold, label=""];
37->29 [style = dotted, label="true"];
39->11 [style = solid, label="state"];
7->6 [style = solid, label="keyedStateFromBackend"];
16->6 [style = solid, label="keyedStateFromStream"];
29->5 [style = solid, label="state"];
41->40 [style = dotted, label="true"];
16->6 [style = bold, label=""];
13->23 [style = solid, label="taskConfig"];
9->14 [style = bold, label=""];
5->7 [style = solid, label="keyedStateHandles"];
2->29 [style = dotted, label="true"];
31->23 [style = solid, label="jobVertexID"];
17->30 [style = solid, label="stateSnapshot"];
5->28 [style = bold, label=""];
33->24 [style = bold, label=""];
16->35 [style = bold, label=""];
41->46 [style = bold, label=""];
1->9 [style = bold, label=""];
50->45 [style = solid, label="shuffleEnvironment"];
28->26 [style = dotted, label="true"];
29->11 [style = solid, label="state"];
20->18 [style = bold, label=""];
28->32 [style = bold, label=""];
8->23 [style = bold, label=""];
0->28 [style = solid, label="mode"];
23->33 [style = bold, label=""];
22->6 [style = solid, label="operatorStateBackend"];
25->15 [style = solid, label="operatorID"];
49->53 [style = bold, label=""];
36->23 [style = solid, label="taskConfig"];
27->20 [style = bold, label=""];
39->5 [style = solid, label="state"];
28->10 [style = dotted, label="true"];
17->15 [style = bold, label=""];
2->13 [style = dotted, label="true"];
53->45 [style = solid, label="taskInformation"];
21->11 [style = solid, label="operatorStateMetadata"];
12->6 [style = solid, label="operatorStateStream"];
2->27 [style = bold, label=""];
43->48 [style = solid, label="backend"];
28->10 [style = bold, label=""];
6->15 [style = solid, label="operatorSubtaskState"];
52->49 [style = solid, label="executionConfig"];
53->50 [style = bold, label=""];
7->35 [style = bold, label=""];
37->36 [style = dotted, label="true"];
31->25 [style = bold, label=""];
41->43 [style = dotted, label="true"];
25->19 [style = solid, label="operatorID"];
15->30 [style = bold, label=""];
11->10 [style = solid, label="operatorStateHandles"];
10->6 [style = bold, label=""];
35->31 [style = bold, label=""];
18->22 [style = bold, label=""];
32->6 [style = solid, label="operatorStateBackend"];
29->43 [style = dashed, label="0"];
37->39 [style = dotted, label="true"];
20->6 [style = solid, label="keyedStateFromBackend"];
14->5 [style = solid, label="keyGroupRangeOffsets"];
40->45 [style = solid, label="checkpointResponder"];
46->44 [style = solid, label="taskConfig"];
48->52 [style = bold, label=""];
8->34 [style = solid, label="jobInformation"];
37->38 [style = dotted, label="true"];
1->9 [style = solid, label="metaInfo"];
18->6 [style = solid, label="keyedStateFromStream"];
6->31 [style = bold, label=""];
44->47 [style = bold, label=""];
19->17 [style = bold, label=""];
24->3 [style = bold, label=""];
32->6 [style = bold, label=""];
41->42 [style = dotted, label="true"];
21->1 [style = bold, label=""];
49->45 [style = solid, label="jobInformation"];
5->16 [style = solid, label="keyedStateHandles"];
50->45 [style = bold, label=""];
22->12 [style = bold, label=""];
52->49 [style = bold, label=""];
33->34 [style = solid, label="taskStateManager"];
23->34 [style = solid, label="taskInformation"];
42->47 [style = solid, label="op"];
11->5 [style = bold, label=""];
28->7 [style = bold, label=""];
26->6 [style = bold, label=""];
2->4 [style = dotted, label="true"];
10->35 [style = bold, label=""];
37->27 [style = bold, label=""];
28->7 [style = dotted, label="true"];
12->21 [style = bold, label=""];
11->32 [style = solid, label="operatorStateHandles"];
10->6 [style = solid, label="operatorStateStream"];
32->35 [style = bold, label=""];
35->15 [style = solid, label="operatorSubtaskState"];
28->16 [style = dotted, label="true"];
29->28 [style = solid, label="mode"];
31->25 [style = solid, label="jobVertexID"];
2->0 [style = dotted, label="true"];
30->8 [style = bold, label=""];
28->32 [style = dotted, label="true"];
3->34 [style = bold, label=""];
}
