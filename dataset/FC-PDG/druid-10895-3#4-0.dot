digraph {
20 [style = filled, label = "final Map<String,Object> responseContext = new HashMap<>()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "getDefaultQueryRunner().run(QueryPlus.wrap(query),responseContext)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final DataSegment dataSegment = new DataSegment(\"dataSource\",interval,\"ver\",ImmutableMap.of(\"type\",\"hdfs\",\"path\",\"/tmp\"),ImmutableList.of(\"product\"),ImmutableList.of(\"visited_sum\"),NoneShardSpec.instance(),9,12334)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Interval interval = Intervals.of(\"2016/2017\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "timeline.add(interval,\"ver\",new SingleElementPartitionChunk<>(selector))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final Interval interval = Intervals.of(\"2016-01-01/2016-01-02\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testIfNoneMatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Assert.assertNotEquals(etag1,etag2)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final Interval queryInterval2 = Intervals.of(\"2016-01-01T18:00:00/2016-01-02T18:00:00\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final Interval queryInterval = Intervals.of(\"2016-01-01T14:00:00/2016-01-02T14:00:00\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final TimeBoundaryQuery query2 = Druids.newTimeBoundaryQueryBuilder().dataSource(DATA_SOURCE).intervals(new MultipleIntervalSegmentSpec(ImmutableList.of(queryInterval2))).context(ImmutableMap.of(\"If-None-Match\",\"aVJV29CJY93rszVW/QBy0arWZo0=\")).build()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testEtagforDifferentQueryInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final Object etag1 = responseContext.get(\"ETag\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "selector.addServerAndUpdateSegment(new QueryableDruidServer(servers(0(,null),dataSegment)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final ServerSelector selector = new ServerSelector(dataSegment,new HighestPriorityTierSelectorStrategy(new RandomServerSelectorStrategy()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Object etag2 = responseContext.get(\"ETag\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "getDefaultQueryRunner().run(QueryPlus.wrap(query2),responseContext)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ResponseContext responseContext = ResponseContext.createEmpty()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder().dataSource(DATA_SOURCE).intervals(new MultipleIntervalSegmentSpec(ImmutableList.of(queryInterval))).context(ImmutableMap.of(\"If-None-Match\",\"aVJV29CJY93rszVW/QBy0arWZo0=\")).build()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(\"MDs2yIUvYLVzaG6zmwTH1plqaYE=\",responseContext.get(ResponseContext.CTX_ETAG))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(\"MDs2yIUvYLVzaG6zmwTH1plqaYE=\",responseContext.get(\"ETag\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final DataSegment dataSegment = new DataSegment(\"dataSource\",interval,\"ver\",ImmutableMap.of(\"type\",\"hdfs\",\"path\",\"/tmp\"),ImmutableList.of(\"product\"),ImmutableList.of(\"visited_sum\"),NoneShardSpec.instance(),9,12334)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "getDefaultQueryRunner().run(QueryPlus.wrap(query),responseContext)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testIfNoneMatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ServerSelector selector = new ServerSelector(dataSegment,new HighestPriorityTierSelectorStrategy(new RandomServerSelectorStrategy()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
16->15 [style = bold, label=""];
7->3 [style = solid, label="responseContext"];
0->9 [style = bold, label=""];
23->20 [style = bold, label=""];
12->3 [style = solid, label="responseContext"];
15->14 [style = solid, label="etag1"];
19->14 [style = solid, label="etag2"];
21->0 [style = bold, label=""];
24->7 [style = solid, label="interval"];
24->0 [style = solid, label="interval"];
18->19 [style = bold, label=""];
8->2 [style = solid, label="interval"];
13->16 [style = solid, label="query"];
8->24 [style = dashed, label="0"];
9->7 [style = solid, label="selector"];
1->7 [style = bold, label=""];
3->4 [style = bold, label=""];
15->18 [style = bold, label=""];
7->3 [style = bold, label=""];
1->13 [style = dashed, label="0"];
20->16 [style = solid, label="responseContext"];
23->18 [style = solid, label="query2"];
3->10 [style = bold, label=""];
0->1 [style = solid, label="dataSegment"];
2->5 [style = solid, label="dataSegment"];
20->16 [style = bold, label=""];
19->14 [style = bold, label=""];
8->2 [style = bold, label=""];
5->0 [style = bold, label=""];
20->18 [style = solid, label="responseContext"];
8->9 [style = solid, label="interval"];
4->15 [style = dashed, label="0"];
5->9 [style = solid, label="selector"];
6->8 [style = bold, label=""];
24->17 [style = bold, label=""];
1->12 [style = bold, label=""];
13->23 [style = bold, label=""];
0->9 [style = solid, label="dataSegment"];
7->12 [style = dashed, label="0"];
11->8 [style = bold, label=""];
2->0 [style = solid, label="dataSegment"];
12->3 [style = bold, label=""];
22->24 [style = bold, label=""];
9->1 [style = bold, label=""];
4->10 [style = dashed, label="0"];
17->21 [style = bold, label=""];
1->3 [style = solid, label="query"];
2->5 [style = bold, label=""];
}
