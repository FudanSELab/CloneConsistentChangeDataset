digraph {
14 [style = filled, label = "sdv.get(i,scratch)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "writer.commit()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "reader.close()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "writer.updateBinaryDocValue(new Term(\"key\",\"doc\"),\"bdv\",toBytes(17L))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testDifferentDVFormatPerField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "writer.close()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "reader.close()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "doc.add(new BinaryDocValuesField(\"bdv\",toBytes(5L)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "AtomicReader r = SlowCompositeReaderWrapper.wrap(reader)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "dir.close()@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(17,getValue(bdv,i,scratch))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "writer.updateBinaryDocValue(new Term(\"key\",\"doc\"),\"bdv\",toBytes(3L))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testUpdateSameDocMultipleTimes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i < r.maxDoc()@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "BytesRef scratch = new BytesRef()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int i = 0@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "doc.add(new SortedDocValuesField(\"sorted\",new BytesRef(\"value\")))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,conf)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "writer.addDocument(doc)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(3,getValue(bdv,i,scratch))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testDifferentDVFormatPerField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i++@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "dir.close()@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final DirectoryReader reader = DirectoryReader.open(dir)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(new BytesRef(\"value\"),scratch)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "doc.add(new StringField(\"key\",\"doc\",Store.NO))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "writer.shutdown()@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Document doc = new Document()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SortedDocValues sdv = r.getSortedDocValues(\"sorted\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "conf.setCodec(new Lucene46Codec(){@Override public DocValuesFormat getDocValuesFormatForField(String field){return new Lucene45DocValuesFormat()}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "writer.addDocument(doc)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->32 [style = bold, label=""];
21->0 [style = solid, label="dir"];
17->8 [style = solid, label="doc"];
17->25 [style = bold, label=""];
6->3 [style = bold, label=""];
4->18 [style = dotted, label="true"];
10->20 [style = solid, label="scratch"];
12->29 [style = solid, label="bdv"];
23->29 [style = solid, label="i"];
4->24 [style = bold, label=""];
23->24 [style = solid, label="i"];
23->18 [style = solid, label="i"];
17->1 [style = solid, label="doc"];
15->21 [style = bold, label=""];
0->17 [style = bold, label=""];
32->12 [style = bold, label=""];
22->0 [style = solid, label="conf"];
4->20 [style = dotted, label="true"];
18->24 [style = solid, label="i"];
23->4 [style = bold, label=""];
24->29 [style = dashed, label="0"];
19->10 [style = bold, label=""];
6->32 [style = solid, label="reader"];
26->8 [style = bold, label=""];
4->29 [style = bold, label=""];
23->4 [style = solid, label="i"];
4->2 [style = bold, label=""];
18->29 [style = solid, label="i"];
3->12 [style = bold, label=""];
23->14 [style = solid, label="i"];
4->14 [style = dotted, label="true"];
1->26 [style = bold, label=""];
25->16 [style = bold, label=""];
22->5 [style = bold, label=""];
27->6 [style = bold, label=""];
31->7 [style = bold, label=""];
34->30 [style = bold, label=""];
29->18 [style = bold, label=""];
24->14 [style = bold, label=""];
2->13 [style = bold, label=""];
7->27 [style = dashed, label="0"];
21->6 [style = solid, label="dir"];
10->24 [style = solid, label="scratch"];
20->18 [style = bold, label=""];
4->29 [style = dotted, label="true"];
11->31 [style = bold, label=""];
28->21 [style = bold, label=""];
12->10 [style = bold, label=""];
22->0 [style = bold, label=""];
18->4 [style = bold, label=""];
18->14 [style = solid, label="i"];
5->0 [style = bold, label=""];
16->1 [style = bold, label=""];
21->22 [style = bold, label=""];
10->23 [style = bold, label=""];
7->6 [style = bold, label=""];
10->29 [style = solid, label="scratch"];
12->24 [style = solid, label="bdv"];
4->34 [style = bold, label=""];
18->4 [style = solid, label="i"];
4->24 [style = dotted, label="true"];
3->32 [style = dashed, label="0"];
10->14 [style = solid, label="scratch"];
6->3 [style = solid, label="reader"];
9->1 [style = bold, label=""];
12->19 [style = bold, label=""];
33->21 [style = bold, label=""];
8->11 [style = bold, label=""];
16->9 [style = bold, label=""];
11->7 [style = bold, label=""];
14->20 [style = bold, label=""];
11->27 [style = bold, label=""];
}
