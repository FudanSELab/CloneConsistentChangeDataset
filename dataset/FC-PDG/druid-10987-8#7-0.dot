digraph {
12 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "lookupMap.put(\"testMockForGetNotThere\",container)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Request request = new Request(HttpMethod.GET,new URL(\"http://localhost:1234/xx\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "StringFullResponseHolder responseHolder = new StringFullResponseHolder(HttpResponseStatus.OK,newEmptyResponse(),StandardCharsets.UTF_8).addChunk(strResult)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EasyMock.verify(lookupExtractorFactory)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.replay(config)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(Optional.empty(),lookupReferencesManager.get(\"notThere\"))@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "EasyMock.replay(config)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.start()).andReturn(true).once()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "lookupMap.put(\"testMockForCloseIsCalledAfterStopping\",container)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "EasyMock.expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testGetNotThere['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createStrictMock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testGetNotThere['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "EasyMock.replay(druidLeaderClient)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "lookupReferencesManager.stop()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "lookupReferencesManager.add(\"testMock\",new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.close()).andReturn(true).once()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testCloseIsCalledAfterStopping['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Request request = new Request(HttpMethod.GET,new URL(\"http://localhost:1234/xx\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "lookupReferencesManager.start()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->5 [style = bold, label=""];
26->22 [style = bold, label=""];
5->4 [style = solid, label="lookupMap"];
22->17 [style = solid, label="lookupExtractorFactory"];
4->7 [style = bold, label=""];
0->4 [style = bold, label=""];
11->12 [style = bold, label=""];
23->15 [style = bold, label=""];
22->21 [style = solid, label="lookupExtractorFactory"];
18->24 [style = bold, label=""];
2->13 [style = bold, label=""];
25->20 [style = bold, label=""];
0->27 [style = dashed, label="0"];
10->8 [style = solid, label="strResult"];
11->12 [style = solid, label="responseHolder"];
8->13 [style = dashed, label="0"];
12->1 [style = bold, label=""];
4->11 [style = solid, label="strResult"];
15->21 [style = bold, label=""];
10->11 [style = bold, label=""];
19->23 [style = bold, label=""];
3->27 [style = bold, label=""];
2->8 [style = bold, label=""];
7->10 [style = solid, label="request"];
7->3 [style = bold, label=""];
8->21 [style = dashed, label="0"];
21->25 [style = bold, label=""];
5->0 [style = bold, label=""];
11->2 [style = solid, label="request"];
22->16 [style = solid, label="lookupExtractorFactory"];
24->16 [style = bold, label=""];
16->3 [style = bold, label=""];
3->9 [style = bold, label=""];
27->10 [style = bold, label=""];
22->18 [style = bold, label=""];
6->5 [style = bold, label=""];
20->17 [style = bold, label=""];
8->19 [style = solid, label="responseHolder"];
1->2 [style = bold, label=""];
3->10 [style = solid, label="lookupMap"];
8->19 [style = bold, label=""];
9->10 [style = bold, label=""];
}
