digraph {
99 [style = filled, label = "assertEquals(1,minf.doubleValue(),0.001)@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assert(tuples.size() == 3)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "assertTrue(minf.doubleValue() == 1.0D)@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "Bucket(( buckets = {new Bucket(\"a_s\")}@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(maxf.doubleValue() == 10.0D)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertTrue(bucket.equals(\"hello0\"))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
109 [style = filled, label = "assert(tuples.size() == 0)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Metric(( metrics = {new SumMetric(\"a_i\"),new SumMetric(\"a_f\"),new MinMetric(\"a_i\"),new MinMetric(\"a_f\"),new MaxMetric(\"a_i\"),new MaxMetric(\"a_f\"),new MeanMetric(\"a_i\"),new MeanMetric(\"a_f\"),new CountMetric()}@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(18,sumf.doubleValue(),0.001)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
87 [style = filled, label = "assertEquals(38,sumi.doubleValue(),0.001)@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertTrue(sumi.doubleValue() == 38.0D)@@@50@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
73 [style = filled, label = "assertTrue(maxf.doubleValue() == 7.0D)@@@76@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
63 [style = filled, label = "assertTrue(bucket.equals(\"hello4\"))@@@70@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "tuple = tuples.get(2)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(avgi.doubleValue() == 4.25D)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "maxi = tuple.getDouble(\"max(a_i)\")@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "List<Tuple> tuples = getTuples(parallelStream)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "assertEquals(9,maxf.doubleValue(),0.001)@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertTrue(count.doubleValue() == 2)@@@79@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "sumf = tuple.getDouble(\"sum(a_f)\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(avgf.doubleValue() == 6.5D)@@@57@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
80 [style = filled, label = "assertEquals(10,maxf.doubleValue(),0.001)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
110 [style = filled, label = "testZeroReducerStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertTrue(sumf.doubleValue() == 18.0D)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "maxf = tuple.getDouble(\"max(a_f)\")@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "count = tuple.getDouble(\"count(*)\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "mini = tuple.getDouble(\"min(a_i)\")@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Double mini = tuple.getDouble(\"min(a_i)\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "testParallelRollupStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Tuple tuple = tuples.get(0)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertEquals(5.5,avgf.doubleValue(),0.001)@@@78@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
94 [style = filled, label = "assertEquals(17,sumi.doubleValue(),0.001)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "assertEquals(4,mini.doubleValue(),0.001)@@@73@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\").add(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\").add(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"10\",\"a_f\",\"6\").add(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"7\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"12\",\"a_f\",\"8\").add(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertTrue(mini.doubleValue() == 3.0D)@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "bucket = tuple.getString(\"a_s\")@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "sumi = tuple.getDouble(\"sum(a_i)\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "bucket = tuple.getString(\"a_s\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Double avgf = tuple.getDouble(\"avg(a_f)\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ParallelStream parallelStream = parallelStream(rollupStream,new FieldComparator(\"a_s\",ComparatorOrder.ASCENDING))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "avgi = tuple.getDouble(\"avg(a_i)\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "assertEquals(13,maxi.doubleValue(),0.001)@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "assertEquals(0,mini.doubleValue(),0.001)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "assertTrue(sumi.doubleValue() == 17.0D)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertTrue(avgf.doubleValue() == 5.5D)@@@78@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "assertTrue(count.doubleValue() == 4)@@@58@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "avgi = tuple.getDouble(\"avg(a_i)\")@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Double sumi = tuple.getDouble(\"sum(a_i)\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Double minf = tuple.getDouble(\"min(a_f)\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "mini = tuple.getDouble(\"min(a_i)\")@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(4,count.doubleValue(),0.001)@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertTrue(maxi.doubleValue() == 11.0D)@@@75@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
86 [style = filled, label = "assertEquals(3,tuples.size())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertTrue(maxf.doubleValue() == 9.0D)@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertTrue(avgf.doubleValue() == 4.5D)@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "assertTrue(minf.doubleValue() == 4.0D)@@@74@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
78 [style = filled, label = "assertEquals(2,count.doubleValue(),0.001)@@@79@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertTrue(sumf.doubleValue() == 11.0D)@@@72@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
64 [style = filled, label = "Double sumf = tuple.getDouble(\"sum(a_f)\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(bucket.equals(\"hello3\"))@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "count = tuple.getDouble(\"count(*)\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "List<Tuple> tuples = getTuples(rstream)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "assertEquals(9.5,avgi.doubleValue(),0.001)@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "assertTrue(sumi.longValue() == 15)@@@71@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
88 [style = filled, label = "assertEquals(4,minf.doubleValue(),0.001)@@@74@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
101 [style = filled, label = "assertEquals(14,maxi.doubleValue(),0.001)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "avgf = tuple.getDouble(\"avg(a_f)\")@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "assertEquals(7,maxf.doubleValue(),0.001)@@@76@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
81 [style = filled, label = "assertEquals(3,minf.doubleValue(),0.001)@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "maxi = tuple.getDouble(\"max(a_i)\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTrue(avgi.doubleValue() == 7.5D)@@@77@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "maxf = tuple.getDouble(\"max(a_f)\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "tuple = tuples.get(1)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "attachStreamFactory(parallelStream)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(maxi.doubleValue() == 13.0D)@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "Double avgi = tuple.getDouble(\"avg(a_i)\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertTrue(avgi.doubleValue() == 9.5D)@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
108 [style = filled, label = "ReducerStream rstream = new ReducerStream(stream,new FieldEqualitor(\"a_s\"),new GroupOperation(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),5))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(minf.doubleValue() == 3.0D)@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
79 [style = filled, label = "assertEquals(4.25,avgi.doubleValue(),0.001)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "assertTrue(maxi.doubleValue() == 14.0D)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "assertEquals(\"hello4\",bucket)@@@70@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "minf = tuple.getDouble(\"min(a_f)\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertEquals(11,sumf.doubleValue(),0.001)@@@72@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Double maxi = tuple.getDouble(\"max(a_i)\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(count.doubleValue() == 4)@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
76 [style = filled, label = "assertEquals(3,mini.doubleValue(),0.001)@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertTrue(mini.doubleValue() == 4.0D)@@@73@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
106 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"blah\",\"fl\",\"id,a_s, a_i, a_f\",\"sort\",\"a_s asc , a_f asc\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(sumf.doubleValue() == 26.0D)@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "assertEquals(7.5,avgi.doubleValue(),0.001)@@@77@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
90 [style = filled, label = "assertEquals(\"hello0\",bucket)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "Double maxf = tuple.getDouble(\"max(a_f)\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertEquals(\"hello3\",bucket)@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "sumi = tuple.getDouble(\"sum(a_i)\")@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertEquals(15,sumi.longValue())@@@71@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "avgf = tuple.getDouble(\"avg(a_f)\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertEquals(11,maxi.doubleValue(),0.001)@@@75@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertTrue(mini.doubleValue() == 0.0D)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "String bucket = tuple.getString(\"a_s\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "sumf = tuple.getDouble(\"sum(a_f)\")@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "assertEquals(4,count.doubleValue(),0.001)@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"a_s,a_i,a_f\",\"sort\",\"a_s asc\",\"partitionKeys\",\"a_s\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "assertEquals(26,sumf.doubleValue(),0.001)@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
100 [style = filled, label = "testParallelRollupStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
89 [style = filled, label = "assertEquals(6.5,avgf.doubleValue(),0.001)@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "RollupStream rollupStream = new RollupStream(stream,buckets,metrics)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertEquals(4.5,avgf.doubleValue(),0.001)@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Double count = tuple.getDouble(\"count(*)\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "minf = tuple.getDouble(\"min(a_f)\")@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39->62 [style = bold, label=""];
81->103 [style = bold, label=""];
70->3 [style = bold, label=""];
36->103 [style = dashed, label="0"];
63->77 [style = dashed, label="0"];
89->83 [style = bold, label=""];
28->50 [style = bold, label=""];
91->104 [style = bold, label=""];
11->69 [style = bold, label=""];
55->40 [style = bold, label=""];
71->20 [style = bold, label=""];
35->12 [style = solid, label="rollupStream"];
53->44 [style = bold, label=""];
69->105 [style = dashed, label="0"];
98->87 [style = bold, label=""];
47->27 [style = bold, label=""];
1->30 [style = bold, label=""];
36->11 [style = bold, label=""];
48->39 [style = bold, label=""];
56->47 [style = bold, label=""];
43->19 [style = bold, label=""];
84->88 [style = bold, label=""];
68->101 [style = dashed, label="0"];
63->55 [style = bold, label=""];
104->50 [style = bold, label=""];
0->66 [style = bold, label=""];
67->8 [style = bold, label=""];
31->35 [style = bold, label=""];
106->27 [style = bold, label=""];
2->14 [style = bold, label=""];
76->81 [style = bold, label=""];
105->89 [style = bold, label=""];
97->76 [style = bold, label=""];
37->32 [style = bold, label=""];
12->59 [style = solid, label="parallelStream"];
27->51 [style = bold, label=""];
26->28 [style = bold, label=""];
21->67 [style = bold, label=""];
95->92 [style = bold, label=""];
108->107 [style = solid, label="rstream"];
22->13 [style = bold, label=""];
35->12 [style = bold, label=""];
20->63 [style = bold, label=""];
64->0 [style = bold, label=""];
96->75 [style = bold, label=""];
3->46 [style = bold, label=""];
27->108 [style = solid, label="stream"];
93->96 [style = bold, label=""];
11->102 [style = dashed, label="0"];
44->73 [style = bold, label=""];
16->6 [style = bold, label=""];
34->52 [style = bold, label=""];
17->97 [style = dashed, label="0"];
102->105 [style = bold, label=""];
59->86 [style = bold, label=""];
100->56 [style = bold, label=""];
46->37 [style = bold, label=""];
29->71 [style = bold, label=""];
106->27 [style = solid, label="sParamsA"];
94->85 [style = bold, label=""];
61->48 [style = bold, label=""];
5->57 [style = bold, label=""];
57->23 [style = bold, label=""];
80->79 [style = bold, label=""];
88->93 [style = bold, label=""];
52->5 [style = bold, label=""];
74->99 [style = bold, label=""];
45->86 [style = dashed, label="0"];
13->79 [style = dashed, label="0"];
10->65 [style = bold, label=""];
48->85 [style = dashed, label="0"];
19->98 [style = bold, label=""];
107->109 [style = bold, label=""];
92->84 [style = bold, label=""];
62->68 [style = bold, label=""];
39->74 [style = dashed, label="0"];
38->33 [style = bold, label=""];
75->82 [style = bold, label=""];
19->38 [style = bold, label=""];
25->64 [style = bold, label=""];
22->80 [style = dashed, label="0"];
18->84 [style = dashed, label="0"];
42->61 [style = bold, label=""];
51->35 [style = solid, label="buckets"];
27->35 [style = solid, label="stream"];
40->92 [style = dashed, label="0"];
59->45 [style = bold, label=""];
9->90 [style = solid, label="bucket"];
17->58 [style = bold, label=""];
23->43 [style = bold, label=""];
26->91 [style = dashed, label="0"];
101->80 [style = bold, label=""];
73->41 [style = bold, label=""];
33->87 [style = dashed, label="0"];
108->107 [style = bold, label=""];
4->54 [style = bold, label=""];
16->98 [style = solid, label="bucket"];
2->77 [style = solid, label="bucket"];
58->7 [style = bold, label=""];
82->78 [style = bold, label=""];
72->56 [style = bold, label=""];
99->101 [style = bold, label=""];
83->24 [style = bold, label=""];
13->26 [style = bold, label=""];
54->21 [style = bold, label=""];
65->83 [style = dashed, label="0"];
69->10 [style = bold, label=""];
61->94 [style = dashed, label="0"];
7->36 [style = bold, label=""];
87->97 [style = bold, label=""];
33->17 [style = bold, label=""];
47->106 [style = dashed, label="0"];
79->91 [style = bold, label=""];
85->74 [style = bold, label=""];
77->95 [style = bold, label=""];
30->78 [style = dashed, label="0"];
24->2 [style = bold, label=""];
65->24 [style = bold, label=""];
14->70 [style = bold, label=""];
27->108 [style = bold, label=""];
45->49 [style = bold, label=""];
7->81 [style = dashed, label="0"];
12->15 [style = bold, label=""];
44->93 [style = dashed, label="0"];
50->16 [style = bold, label=""];
8->90 [style = bold, label=""];
18->53 [style = bold, label=""];
40->18 [style = bold, label=""];
28->104 [style = dashed, label="0"];
103->102 [style = bold, label=""];
41->1 [style = bold, label=""];
90->94 [style = bold, label=""];
66->4 [style = bold, label=""];
15->59 [style = bold, label=""];
38->98 [style = dashed, label="0"];
31->35 [style = solid, label="metrics"];
68->22 [style = bold, label=""];
56->106 [style = bold, label=""];
1->82 [style = dashed, label="0"];
32->29 [style = bold, label=""];
10->89 [style = dashed, label="0"];
6->60 [style = bold, label=""];
73->96 [style = dashed, label="0"];
8->42 [style = bold, label=""];
60->34 [style = bold, label=""];
42->90 [style = dashed, label="0"];
9->25 [style = bold, label=""];
47->27 [style = solid, label="sParamsA"];
62->99 [style = dashed, label="0"];
41->75 [style = dashed, label="0"];
51->31 [style = bold, label=""];
58->76 [style = dashed, label="0"];
86->49 [style = bold, label=""];
110->56 [style = bold, label=""];
49->9 [style = bold, label=""];
53->88 [style = dashed, label="0"];
12->15 [style = solid, label="parallelStream"];
20->77 [style = bold, label=""];
55->95 [style = dashed, label="0"];
}
