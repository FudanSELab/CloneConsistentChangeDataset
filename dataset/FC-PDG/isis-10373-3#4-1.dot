digraph {
15 [style = filled, label = "final Connection con = mock()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "verify(dialect).cleanupTransaction(null)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "verify(tx).commit()@@@34@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "given(pmf.getPersistenceManager()).willReturn(pm)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ConnectionHandle conHandle = new SimpleConnectionHandle(con)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(!TransactionSynchronizationManager.hasResource(ds),\"Hasn't thread con\")@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "verify(dialect).releaseJdbcConnection(conHandle,pm)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(!TransactionSynchronizationManager.hasResource(pmf),\"Hasn't thread pm\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "given(dialect.getJdbcConnection(pm,false)).willReturn(null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "given(dialect.getJdbcConnection(pm,false)).willReturn(conHandle)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testTransactionCommitWithAutoDetectedDataSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "JdoTransactionManager tm = new JdoTransactionManager()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testTransactionCommitWithAutoDetectedDataSourceAndNoConnection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "l.add(\"test\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verify(tx).commit()@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "tt.setTransactionManager(tm)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(!TransactionSynchronizationManager.hasResource(pmf),\"Hasn't thread pm\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Object result = tt.execute(new TransactionCallback<Object>(){@Override public Object doInTransaction(final TransactionStatus status){assertTrue(TransactionSynchronizationManager.hasResource(pmf),\"Has thread pm\")assertTrue(TransactionSynchronizationManager.hasResource(ds),\"Has thread con\")PersistenceManagerFactoryUtils.getPersistenceManager(pmf,true)return l}})@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(result == l,\"Correct result list\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "verify(dialect).beginTransaction(tx,tt)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TransactionTemplate tt = new TransactionTemplate()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testTransactionCommitWithAutoDetectedDataSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "verify(pm).close()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "given(pmf.getConnectionFactory()).willReturn(ds)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Object result = tt.execute(new TransactionCallback<Object>(){@Override public Object doInTransaction(TransactionStatus status){assertTrue(TransactionSynchronizationManager.hasResource(pmf),\"Has thread pm\")assertTrue(!TransactionSynchronizationManager.hasResource(ds),\"Hasn't thread con\")PersistenceManagerFactoryUtils.getPersistenceManager(pmf,true).flush()return l}})@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tm.afterPropertiesSet()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final DataSource ds = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "given(pm.currentTransaction()).willReturn(tx)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "verify(pm).flush()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final JdoDialect dialect = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "verify(dialect).cleanupTransaction(null)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "tm.setPersistenceManagerFactory(pmf)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertTrue(!TransactionSynchronizationManager.hasResource(pmf),\"Hasn't thread pm\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "JdoDialect dialect = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "val l = new ArrayList<Object>()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tm.setJdoDialect(dialect)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->22 [style = bold, label=""];
16->3 [style = bold, label=""];
5->10 [style = bold, label=""];
32->35 [style = bold, label=""];
29->8 [style = bold, label=""];
22->15 [style = bold, label=""];
34->9 [style = bold, label=""];
9->21 [style = solid, label="ds"];
15->20 [style = solid, label="con"];
2->19 [style = solid, label="tt"];
17->6 [style = bold, label=""];
11->1 [style = bold, label=""];
9->33 [style = bold, label=""];
8->19 [style = bold, label=""];
22->33 [style = dashed, label="0"];
31->5 [style = bold, label=""];
27->9 [style = bold, label=""];
14->29 [style = solid, label="tt"];
16->6 [style = solid, label="l"];
20->0 [style = solid, label="conHandle"];
20->23 [style = solid, label="conHandle"];
6->30 [style = solid, label="result"];
16->30 [style = solid, label="l"];
6->24 [style = bold, label=""];
4->18 [style = bold, label=""];
0->26 [style = dashed, label="0"];
12->16 [style = bold, label=""];
9->32 [style = solid, label="ds"];
25->29 [style = bold, label=""];
21->4 [style = solid, label="result"];
2->12 [style = solid, label="tm"];
7->14 [style = bold, label=""];
14->26 [style = bold, label=""];
26->2 [style = bold, label=""];
2->0 [style = bold, label=""];
30->28 [style = bold, label=""];
17->21 [style = solid, label="l"];
24->21 [style = bold, label=""];
9->7 [style = solid, label="ds"];
10->12 [style = bold, label=""];
15->20 [style = bold, label=""];
19->23 [style = bold, label=""];
33->5 [style = solid, label="dialect"];
18->25 [style = bold, label=""];
22->12 [style = solid, label="dialect"];
5->3 [style = solid, label="tm"];
3->17 [style = bold, label=""];
33->32 [style = bold, label=""];
17->4 [style = solid, label="l"];
25->8 [style = bold, label=""];
13->9 [style = bold, label=""];
20->7 [style = bold, label=""];
23->11 [style = bold, label=""];
35->7 [style = bold, label=""];
28->4 [style = bold, label=""];
0->5 [style = bold, label=""];
21->4 [style = bold, label=""];
2->31 [style = bold, label=""];
6->30 [style = bold, label=""];
}
