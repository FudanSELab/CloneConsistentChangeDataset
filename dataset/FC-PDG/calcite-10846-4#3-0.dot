digraph {
19 [style = filled, label = "expr(\"ab\").ok(\"`AB`\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "checkExpFails(\"^`^x`y`z`\",\"(?s).*Encountered.*\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testBracketIdentifier['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "checkExpFails(\"^`^x``y``z`\",\"(?s).*Encountered.*\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "checkExp(\"\"x`y`z\"\",\"`x``y``z`\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "checkExpFails(\" ^\"^a \"\" b!c\"\",\"(?s).*Encountered.*\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "checkExp(\" \"a \"\" b!c\"\",\"`a \" b!c`\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "checkExpFails(\" ^`^a \" b!c`\",\"(?s).*Encountered.*\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "getTester().checkNode(\"VALUES \"a\".\"b\"\",isQuoted(1,true))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "getTester().checkNode(\"VALUES a\",isQuoted(0,false))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "checkExpFails(\"^\"^x`y`z\"\",\"(?s).*Encountered.*\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "expr(\"^`^x``y``z`\").fails(\"(?s).*Encountered.*\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "testIdentifier['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "checkExp(\"myMap(field( + myArray(1 + 2(\",\"(`MYMAP`(`FIELD`( + `MYARRAY`((1 + 2)()\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testBracketIdentifier['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "quoting = Quoting.BRACKET@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expr(\"^\"^x`y`z\"\").fails(\"(?s).*Encountered.*\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "expr(\" (a \" b!c(\").ok(\"`a \" b!c`\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "check(\"select * from myMap(field(, myArray(1 + 2(\",\"SELECT *\" + \"FROM `MYMAP` AS `field`,\" + \"`MYARRAY` AS `1 + 2`\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "getTester().checkNode(\"VALUES \"a\".b\",isQuoted(1,false))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "expr(\" ^`^a \" b!c`\").fails(\"(?s).*Encountered.*\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "getTester().checkNode(\"VALUES \"a\"\",isQuoted(0,true))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "checkExp(\"(anything (even brackets(( is(.(ok(\",\"`anything (even brackets( is`.`ok`\")@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "checkExp(\" (a \" b!c(\",\"`a \" b!c`\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "sql(\"select * from myMap(field(, myArray(1 + 2(\").ok(\"SELECT *\" + \"FROM `MYMAP` AS `field`,\" + \"`MYARRAY` AS `1 + 2`\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "expr(\"(x`y`z(\").ok(\"`x``y``z`\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "check(\"select * from myMap (field(, myArray (1 + 2(\",\"SELECT *\" + \"FROM `MYMAP` AS `field`,\" + \"`MYARRAY` AS `1 + 2`\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "getTester().checkNode(\"VALUES (a(\",isQuoted(0,true))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expr(\"(anything (even brackets(( is(.(ok(\").ok(\"`anything (even brackets( is`.`ok`\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "sql(\"select * from myMap (field(, myArray (1 + 2(\").ok(\"SELECT *\" + \"FROM `MYMAP` AS `field`,\" + \"`MYARRAY` AS `1 + 2`\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "expr(\" ^\"^a \"\" b!c\"\").fails(\"(?s).*Encountered.*\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "checkExp(\"(x`y`z(\",\"`x``y``z`\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "getTester().checkNode(\"VALUES a\",isQuoted(0,false))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "checkExp(\"ab\",\"`AB`\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->32 [style = bold, label=""];
17->8 [style = bold, label=""];
13->25 [style = bold, label=""];
15->23 [style = bold, label=""];
25->28 [style = bold, label=""];
22->15 [style = bold, label=""];
11->20 [style = dashed, label="0"];
7->18 [style = dashed, label="0"];
0->13 [style = bold, label=""];
28->30 [style = bold, label=""];
12->16 [style = dashed, label="0"];
7->10 [style = bold, label=""];
8->19 [style = bold, label=""];
1->15 [style = dashed, label="0"];
0->6 [style = dashed, label="0"];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
5->29 [style = dashed, label="0"];
9->7 [style = bold, label=""];
24->22 [style = bold, label=""];
27->6 [style = bold, label=""];
11->2 [style = bold, label=""];
13->1 [style = bold, label=""];
1->9 [style = bold, label=""];
2->12 [style = bold, label=""];
30->29 [style = bold, label=""];
9->23 [style = dashed, label="0"];
19->24 [style = bold, label=""];
29->26 [style = bold, label=""];
20->21 [style = bold, label=""];
12->4 [style = bold, label=""];
31->27 [style = bold, label=""];
2->21 [style = dashed, label="0"];
3->8 [style = bold, label=""];
6->19 [style = dashed, label="0"];
9->25 [style = dashed, label="0"];
21->16 [style = bold, label=""];
0->24 [style = dashed, label="0"];
16->4 [style = bold, label=""];
32->13 [style = bold, label=""];
26->33 [style = bold, label=""];
13->22 [style = dashed, label="0"];
4->5 [style = bold, label=""];
18->14 [style = bold, label=""];
23->18 [style = bold, label=""];
10->14 [style = dashed, label="0"];
14->20 [style = bold, label=""];
10->11 [style = bold, label=""];
}
