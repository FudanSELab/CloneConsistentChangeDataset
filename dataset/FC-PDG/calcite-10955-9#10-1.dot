digraph {
4 [style = filled, label = "builder.addRuleClass()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "HepProgram preProgram = new HepProgramBuilder().build()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "sql(sql).withPre(preProgram).with(hepPlanner).checkUnchanged()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "sql(sql).with(hepPlanner).checkUnchanged()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testReduceNot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final String sql = \"select sal\" + \"from emp\" + \"where case when sal = 1000 then null else 1 end is null\" + \"OR case when sal = 2000 then null else 1 end is null\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testReduceOrCaseWhen['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "hepPlanner.addRule(CoreRules.FILTER_REDUCE_EXPRESSIONS)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String sql = \"select *\" + \"from (select (case when sal > 1000 then null else false end) as caseCol from emp)\" + \"where NOT(caseCol)\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "HepProgramBuilder builder = new HepProgramBuilder()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sql(sql).withPre(preProgram).with(hepPlanner).check()@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testReduceNot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "HepPlanner hepPlanner = new HepPlanner(builder.build())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = dashed, label="0"];
9->3 [style = bold, label=""];
0->11 [style = bold, label=""];
12->2 [style = bold, label=""];
4->1 [style = bold, label=""];
7->5 [style = bold, label=""];
1->0 [style = bold, label=""];
5->10 [style = dashed, label="0"];
7->8 [style = bold, label=""];
11->10 [style = bold, label=""];
3->4 [style = bold, label=""];
2->3 [style = bold, label=""];
0->7 [style = bold, label=""];
6->2 [style = bold, label=""];
}
