digraph {
10 [style = filled, label = "Assert.assertEquals(flowConfig.getId().getFlowGroup(),TEST_GROUP_NAME)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "FlowId flowId = new FlowId().setFlowGroup(TEST_GROUP_NAME).setFlowName(TEST_FLOW_NAME)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(flowConfig.getTemplateUris(),TEST_TEMPLATE_URI)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(flowConfig.getId().getFlowName(),TEST_FLOW_NAME)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "FlowConfig flowConfig = _client.getFlowConfig(flowId)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(flowConfig.getProperties().get(\"param1\"),\"value1\")@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertFalse(flowConfig.getSchedule().isRunImmediately())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "FlowConfig flowConfig = this.flowConfigClient.getFlowConfig(flowId)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "FlowConfig flowConfig = this.flowConfigClient.getFlowConfig(TEST_FLOW_ID)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Assert.assertEquals(flowConfig.getSchedule().getCronSchedule(),TEST_SCHEDULE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(flowConfig.getTemplateUris(),TEST_TEMPLATE_URI)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testGet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(flowConfig.getProperties().get(\"param1\"),\"value1\")@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testGet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(flowConfig.getId().getFlowGroup(),TEST_GROUP_NAME)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testGet['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
14->3 [style = bold, label=""];
5->14 [style = dashed, label="0"];
7->1 [style = bold, label=""];
9->11 [style = bold, label=""];
7->12 [style = bold, label=""];
3->6 [style = bold, label=""];
10->3 [style = bold, label=""];
4->7 [style = bold, label=""];
8->0 [style = bold, label=""];
6->4 [style = bold, label=""];
0->14 [style = bold, label=""];
0->14 [style = solid, label="flowId"];
11->10 [style = bold, label=""];
13->7 [style = bold, label=""];
15->0 [style = bold, label=""];
6->13 [style = bold, label=""];
0->5 [style = solid, label="flowId"];
1->2 [style = bold, label=""];
1->7 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
0->5 [style = bold, label=""];
}
