digraph {
26 [style = filled, label = "this.segments = segments@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "VersionedIntervalTimeline<String,DataSegment> timeline@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "segment.getInterval().getStart().compareTo(minStart) < 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Interval compactInterval = new Interval(minStart,maxEnd)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return \"task_\" + idSuffix++@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "compactSegments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "List<DataSegment> segments@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "this.interval = new Interval(minStart,maxEnd)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "compactSegments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<DataSegment> segments@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "QueueEntry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ClientCompactionTaskQueryTuningConfig tuningConfig@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "timeline.add(compactInterval,compactSegment.getVersion(),compactSegment.getShardSpec().createChunk(compactSegment))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final String version = \"newVersion_\" + compactVersionSuffix++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<DataSegment> segments@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "maxEnd = segment.getInterval().getEnd()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DataSegment compactSegment = new DataSegment(segments.get(0).getDataSource(),compactInterval,version,null,segments.get(0).getDimensions(),segments.get(0).getMetrics(),new NumberedShardSpec(i,0),new CompactionState(new DynamicPartitionsSpec(tuningConfig.getMaxRowsPerSegment(),tuningConfig.getMaxTotalRowsOr(Long.MAX_VALUE)),ImmutableMap.of(\"bitmap\",ImmutableMap.of(\"type\",\"concise\"),\"dimensionCompression\",\"lz4\",\"metricCompression\",\"lz4\",\"longEncoding\",\"longs\")),1,segmentSize)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "i < 2@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int i = 0@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i++@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "DataSegment compactSegment = new DataSegment(segments.get(0).getDataSource(),compactInterval,version,null,segments.get(0).getDimensions(),segments.get(0).getMetrics(),new NumberedShardSpec(i,0),new CompactionState(new DynamicPartitionsSpec(tuningConfig.getMaxRowsPerSegment(),tuningConfig.getMaxTotalRowsOr(Long.MAX_VALUE)),ImmutableMap.of(\"bitmap\",ImmutableMap.of(\"type\",\"roaring\",\"compressRunOnSerialization\",true),\"dimensionCompression\",\"lz4\",\"metricCompression\",\"lz4\",\"longEncoding\",\"longs\")),1,segmentSize)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "final long segmentSize = segments.stream().mapToLong(null).sum() / 2@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "segment.getInterval().getEnd().compareTo(maxEnd) > 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DateTime minStart = DateTimes.MAX,maxEnd = DateTimes.MIN@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "VersionedIntervalTimeline<String,DataSegment> timeline@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "segments.forEach(null)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Preconditions.checkArgument(segments != null && !segments.isEmpty())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Preconditions.checkArgument(segments.size() > 1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "minStart = segment.getInterval().getStart()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->10 [style = dotted, label="true"];
14->16 [style = bold, label=""];
14->16 [style = solid, label="minStart"];
16->18 [style = bold, label=""];
12->20 [style = dashed, label="0"];
15->14 [style = bold, label=""];
27->14 [style = bold, label=""];
19->12 [style = bold, label=""];
5->3 [style = solid, label="compactInterval"];
0->12 [style = solid, label="i"];
0->19 [style = bold, label=""];
7->20 [style = solid, label="i"];
14->28 [style = solid, label="maxEnd"];
19->20 [style = dotted, label="true"];
17->20 [style = solid, label="segmentSize"];
16->6 [style = bold, label=""];
19->20 [style = bold, label=""];
24->25 [style = dotted, label="true"];
0->20 [style = solid, label="i"];
23->15 [style = bold, label=""];
25->26 [style = solid, label="segments"];
5->12 [style = solid, label="compactInterval"];
23->21 [style = dotted, label="true"];
19->12 [style = dotted, label="true"];
28->26 [style = bold, label=""];
7->0 [style = solid, label="i"];
20->3 [style = bold, label=""];
14->6 [style = solid, label="maxEnd"];
13->11 [style = bold, label=""];
23->22 [style = dotted, label="true"];
19->8 [style = bold, label=""];
3->0 [style = bold, label=""];
4->28 [style = bold, label=""];
17->12 [style = solid, label="segmentSize"];
7->19 [style = solid, label="i"];
17->7 [style = bold, label=""];
7->12 [style = solid, label="i"];
6->4 [style = bold, label=""];
6->5 [style = bold, label=""];
25->27 [style = solid, label="segments"];
23->10 [style = dotted, label="true"];
4->5 [style = solid, label="maxEnd"];
4->28 [style = solid, label="maxEnd"];
12->3 [style = solid, label="compactSegment"];
2->9 [style = dotted, label="true"];
5->28 [style = dashed, label="0"];
6->4 [style = dotted, label="true"];
11->20 [style = solid, label="version"];
18->6 [style = bold, label=""];
18->16 [style = solid, label="minStart"];
6->16 [style = bold, label=""];
19->0 [style = dotted, label="true"];
19->3 [style = dotted, label="true"];
20->3 [style = solid, label="compactSegment"];
5->13 [style = bold, label=""];
2->1 [style = dotted, label="true"];
2->15 [style = bold, label=""];
4->6 [style = solid, label="maxEnd"];
11->12 [style = solid, label="version"];
11->17 [style = bold, label=""];
5->20 [style = solid, label="compactInterval"];
12->3 [style = bold, label=""];
15->27 [style = dashed, label="0"];
0->19 [style = solid, label="i"];
18->28 [style = solid, label="minStart"];
7->19 [style = bold, label=""];
4->5 [style = bold, label=""];
24->27 [style = bold, label=""];
14->5 [style = solid, label="maxEnd"];
4->16 [style = bold, label=""];
18->5 [style = solid, label="minStart"];
6->28 [style = bold, label=""];
16->18 [style = dotted, label="true"];
}
