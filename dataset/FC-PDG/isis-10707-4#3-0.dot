digraph {
3 [style = filled, label = "final String title = titleFacetViaTitleAnnotation.title(mockObjectAdapter,mockLocalizationProvider.getLocalization())@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final Annotations.MethodEvaluator<Title> titleEvaluator = (Annotations.MethodEvaluator<Title>)titleFacetViaTitleAnnotation.getComponents().get(i).getTitleEvaluator()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "facetFactory.process(new ProcessClassContext(,mockMethodRemover,facetedMethod))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(title,is(\"titleElement1. titleElement3,titleElement2\"))@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Assert.assertEquals(titleMethods.get(i),titleFacetViaTitleAnnotation.getComponents().get(i).getMethod())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertNotNull(facet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(facet instanceof TitleFacetViaTitleAnnotation)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final TitleFacetViaTitleAnnotation titleFacetViaTitleAnnotation = (TitleFacetViaTitleAnnotation)facet@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final List<Method> titleMethods = Arrays.asList(.getMethod(\"someTitle\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "i < titleMethods.size()@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Customer2 customer = new Customer2()@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testTitleAnnotatedMethodsPickedUpOnClass['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "final List<Method> titleMethods = Arrays.asList(.getMethod(\"titleElement1\"),.getMethod(\"titleElement3\"),.getMethod(\"titleElement2\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i++@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testTitleAnnotatedMethodsPickedUpOnClass['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Customer2 customer = new Customer2()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final List<TitleComponent> components = titleFacetViaTitleAnnotation.getComponents()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Facet facet = facetedMethod.getFacet()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final String title = titleFacetViaTitleAnnotation.title(mockObjectAdapter,mockLocalizationProvider.getLocalization())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(titleMethods.get(i),components.get(i).getMethod())@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(titleMethods.get(i),titleEvaluator.getMethod())@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "context.checking(new Expectations(){})@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "facetFactory.process(new ProcessClassContext(,mockMethodRemover,facetedMethod))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testTitleAnnotatedMethodPickedUpOnClassRemoved['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12->18 [style = dotted, label="true"];
14->5 [style = bold, label=""];
12->7 [style = dotted, label="true"];
12->0 [style = bold, label=""];
0->7 [style = dashed, label="0"];
9->16 [style = solid, label="title"];
5->8 [style = bold, label=""];
19->9 [style = bold, label=""];
11->21 [style = bold, label=""];
6->4 [style = bold, label=""];
8->12 [style = bold, label=""];
21->22 [style = bold, label=""];
22->8 [style = bold, label=""];
22->8 [style = solid, label="i"];
24->23 [style = bold, label=""];
1->10 [style = solid, label="facet"];
7->0 [style = solid, label="i"];
23->1 [style = bold, label=""];
12->8 [style = solid, label="i"];
0->7 [style = bold, label=""];
20->18 [style = bold, label=""];
9->16 [style = bold, label=""];
1->2 [style = solid, label="facet"];
12->4 [style = bold, label=""];
12->0 [style = dotted, label="true"];
22->12 [style = solid, label="i"];
2->10 [style = bold, label=""];
10->11 [style = bold, label=""];
8->7 [style = dotted, label="true"];
12->20 [style = dotted, label="true"];
11->14 [style = bold, label=""];
12->7 [style = solid, label="i"];
13->23 [style = dashed, label="0"];
1->11 [style = solid, label="facet"];
4->19 [style = bold, label=""];
7->12 [style = bold, label=""];
17->13 [style = bold, label=""];
14->21 [style = dashed, label="0"];
3->9 [style = bold, label=""];
8->12 [style = solid, label="i"];
7->18 [style = solid, label="i"];
12->20 [style = bold, label=""];
15->13 [style = bold, label=""];
3->9 [style = solid, label="title"];
13->1 [style = bold, label=""];
8->7 [style = bold, label=""];
7->12 [style = solid, label="i"];
8->18 [style = solid, label="i"];
12->8 [style = bold, label=""];
4->3 [style = bold, label=""];
8->7 [style = solid, label="i"];
1->2 [style = bold, label=""];
12->6 [style = bold, label=""];
8->12 [style = dotted, label="true"];
22->7 [style = solid, label="i"];
8->0 [style = solid, label="i"];
18->7 [style = bold, label=""];
}
