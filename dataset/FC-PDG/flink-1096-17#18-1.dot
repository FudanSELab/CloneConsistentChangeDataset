digraph {
1 [style = filled, label = "!iterator.hasNext()@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final TypeSerializer<V> safeValueSerializer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Preconditions.checkNotNull(serializedKeyAndNamespace)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "keyBuilder.setKeyAndKeyGroup(keyAndNamespace.f0,keyGroup)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Tuple2<K,N> keyAndNamespace = KvStateSerializer.deserializeKeyAndNamespace(serializedKeyAndNamespace,safeKeySerializer,safeNamespaceSerializer)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "RocksDBSerializedCompositeKeyBuilder<K> keyBuilder = new RocksDBSerializedCompositeKeyBuilder<>(safeKeySerializer,backend.getKeyGroupPrefixBytes(),32)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "return KvStateSerializer.serializeMap(null,dupUserKeySerializer,dupUserValueSerializer)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "getSerializedValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final byte(( keyPrefixBytes = keyBuilder.buildCompositeKeyNamespace(keyAndNamespace.f1,namespaceSerializer)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final DataInputDeserializer inputView = new DataInputDeserializer()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final byte(( serializedKeyAndNamespace@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final TypeSerializer<N> safeNamespaceSerializer@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "byte(( key = keyBuilder.buildCompositeKeyNamespace(keyAndNamespace.f1,namespaceSerializer)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final MapSerializer<UK,UV> serializer = (MapSerializer<UK,UV>)safeValueSerializer@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final TypeSerializer<K> safeKeySerializer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "return backend.db.get(columnFamily,key)@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final byte(( serializedKeyAndNamespace@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final TypeSerializer<N> safeNamespaceSerializer@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final byte(( serializedKeyAndNamespace@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "keyBuilder.setKeyAndKeyGroup(keyAndNamespace.f0,keyGroup)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "getSerializedValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final TypeSerializer<N> safeNamespaceSerializer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "RocksDBSerializedCompositeKeyBuilder<K> keyBuilder = new RocksDBSerializedCompositeKeyBuilder<>(safeKeySerializer,backend.getKeyGroupPrefixBytes(),32)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final TypeSerializer<UV> dupUserValueSerializer = serializer.getValueSerializer()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return null@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final TypeSerializer<UK> dupUserKeySerializer = serializer.getKeySerializer()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Preconditions.checkNotNull(safeKeySerializer)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Preconditions.checkNotNull(safeValueSerializer)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "SerializedCompositeKeyBuilder<K> keyBuilder = new SerializedCompositeKeyBuilder<>(safeKeySerializer,backend.getKeyGroupPrefixBytes(),32)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "final TypeSerializer<K> safeKeySerializer@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "int keyGroup = KeyGroupRangeAssignment.assignToKeyGroup(keyAndNamespace.f0,backend.getNumberOfKeyGroups())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Preconditions.checkNotNull(safeNamespaceSerializer)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final TypeSerializer<Map<UK,UV>> safeValueSerializer@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "getSerializedValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final Iterator<Map.Entry<UK,UV>> iterator = new RocksDBMapIterator<Map.Entry<UK,UV>>(backend.db,keyPrefixBytes,dupUserKeySerializer,dupUserValueSerializer,inputView){@Override public Map.Entry<UK,UV> next(){return nextEntry()}}@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final TypeSerializer<Map<UK,UV>> safeValueSerializer@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23->17 [style = solid, label="safeValueSerializer"];
12->8 [style = solid, label="dupUserKeySerializer"];
6->17 [style = bold, label=""];
21->16 [style = solid, label="safeKeySerializer"];
0->8 [style = solid, label="dupUserValueSerializer"];
4->10 [style = bold, label=""];
2->15 [style = solid, label="serializedKeyAndNamespace"];
5->20 [style = solid, label="inputView"];
18->24 [style = bold, label=""];
24->10 [style = bold, label=""];
25->16 [style = solid, label="safeKeySerializer"];
2->9 [style = solid, label="serializedKeyAndNamespace"];
1->8 [style = bold, label=""];
34->29 [style = bold, label=""];
22->6 [style = solid, label="safeNamespaceSerializer"];
25->9 [style = solid, label="safeKeySerializer"];
5->20 [style = bold, label=""];
7->12 [style = bold, label=""];
19->2 [style = dotted, label="true"];
26->25 [style = dotted, label="true"];
31->32 [style = bold, label=""];
16->6 [style = bold, label=""];
17->9 [style = bold, label=""];
29->31 [style = bold, label=""];
25->24 [style = solid, label="safeKeySerializer"];
27->9 [style = bold, label=""];
11->9 [style = dashed, label="0"];
11->20 [style = solid, label="keyPrefixBytes"];
32->27 [style = bold, label=""];
26->23 [style = dotted, label="true"];
21->9 [style = solid, label="serializedKeyAndNamespace"];
19->21 [style = dotted, label="true"];
20->1 [style = bold, label=""];
26->22 [style = dotted, label="true"];
21->15 [style = solid, label="serializedKeyAndNamespace"];
15->16 [style = bold, label=""];
12->20 [style = solid, label="dupUserKeySerializer"];
12->0 [style = bold, label=""];
1->13 [style = bold, label=""];
28->29 [style = solid, label="safeNamespaceSerializer"];
14->7 [style = solid, label="safeValueSerializer"];
1->13 [style = dotted, label="true"];
21->9 [style = solid, label="safeKeySerializer"];
33->32 [style = solid, label="safeKeySerializer"];
18->10 [style = solid, label="keyGroup"];
10->11 [style = bold, label=""];
9->18 [style = bold, label=""];
18->4 [style = bold, label=""];
34->28 [style = dotted, label="true"];
14->17 [style = solid, label="safeValueSerializer"];
34->35 [style = dotted, label="true"];
21->4 [style = solid, label="safeKeySerializer"];
19->3 [style = dotted, label="true"];
22->9 [style = solid, label="safeNamespaceSerializer"];
26->21 [style = dotted, label="true"];
11->7 [style = bold, label=""];
26->15 [style = bold, label=""];
34->33 [style = dotted, label="true"];
0->20 [style = solid, label="dupUserValueSerializer"];
3->9 [style = solid, label="safeNamespaceSerializer"];
30->29 [style = solid, label="serializedKeyAndNamespace"];
21->35 [style = dashed, label="0"];
4->24 [style = dashed, label="0"];
13->8 [style = bold, label=""];
19->15 [style = bold, label=""];
19->14 [style = dotted, label="true"];
34->30 [style = dotted, label="true"];
33->29 [style = solid, label="safeKeySerializer"];
31->27 [style = solid, label="keyGroup"];
3->6 [style = solid, label="safeNamespaceSerializer"];
0->5 [style = bold, label=""];
23->7 [style = solid, label="safeValueSerializer"];
9->18 [style = solid, label="key"];
}
