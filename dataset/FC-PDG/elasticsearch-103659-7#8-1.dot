digraph {
0 [style = filled, label = "testIndexMetadataUpgrade['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Metadata upgrade = GatewayMetaState.upgradeMetadata(metadata,new MockMetadataIndexUpgradeService(true),metadataUpgrader)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "testCustomMetadataNoChange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Metadata metadata = randomMetadata(new CustomMetadata1(\"data\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Metadata upgrade = GatewayMetaState.upgradeMetadata(metadata,new MockMetadataIndexUpgradeService(false),metadataUpgrader)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MetadataUpgrader metadataUpgrader = new MetadataUpgrader(Collections.emptyList())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(Metadata.isGlobalStateEquals(upgrade,metadata))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertNotSame(upgrade,metadata)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Metadata upgrade = GatewayMetaState.upgradeMetadata(metadata,new MockIndexMetadataVerifier(true),metadataUpgrader)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testIndexMetadataUpgrade['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "MetadataUpgrader metadataUpgrader = new MetadataUpgrader(Collections.singletonList(null))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertFalse(metadata.hasIndexMetadata(indexMetadata))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(metadata.hasIndexMetadata(indexMetadata))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Metadata metadata = randomMetadata()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertSame(upgrade,metadata)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
6->3 [style = bold, label=""];
2->3 [style = solid, label="metadata"];
5->14 [style = dashed, label="0"];
7->3 [style = solid, label="upgrade"];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
14->12 [style = solid, label="upgrade"];
14->3 [style = solid, label="upgrade"];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
6->12 [style = dashed, label="0"];
11->14 [style = solid, label="metadata"];
1->13 [style = dashed, label="0"];
3->9 [style = bold, label=""];
2->7 [style = solid, label="metadata"];
11->12 [style = solid, label="metadata"];
4->9 [style = dashed, label="0"];
2->5 [style = solid, label="metadata"];
5->3 [style = solid, label="upgrade"];
5->6 [style = bold, label=""];
8->2 [style = bold, label=""];
1->5 [style = solid, label="metadataUpgrader"];
13->14 [style = solid, label="metadataUpgrader"];
5->6 [style = solid, label="upgrade"];
14->12 [style = bold, label=""];
11->13 [style = bold, label=""];
7->6 [style = bold, label=""];
2->11 [style = dashed, label="0"];
12->3 [style = bold, label=""];
11->3 [style = solid, label="metadata"];
1->7 [style = solid, label="metadataUpgrader"];
5->7 [style = dashed, label="0"];
13->14 [style = bold, label=""];
7->6 [style = solid, label="upgrade"];
10->11 [style = bold, label=""];
2->6 [style = solid, label="metadata"];
}
