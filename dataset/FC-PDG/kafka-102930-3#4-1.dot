digraph {
12 [style = filled, label = "return new MeteredWindowedKeyValueIterator<>(wrapped().backwardFetch(keyBytes(from),keyBytes(to)),fetchSensor,streamsMetrics,serdes,time)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Objects.requireNonNull(keyFrom,\"keyFrom cannot be null\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Objects.requireNonNull(from,\"from cannot be null\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return new MeteredWindowedKeyValueIterator<>(wrapped().fetch(keyBytes(from),keyBytes(to)),fetchSensor,streamsMetrics,serdes,time)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "fetch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Objects.requireNonNull(keyTo,\"keyTo cannot be null\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final K keyFrom@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "return new MeteredWindowedKeyValueIterator<>(wrapped().fetch(keyBytes(keyFrom),keyBytes(keyTo)),fetchSensor,streamsMetrics,serdes,time)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final K to@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final K from@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "final K to@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final K from@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "fetch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "backwardFetch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final K keyTo@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Objects.requireNonNull(to,\"to cannot be null\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->0 [style = solid, label="to"];
10->6 [style = dotted, label="true"];
9->11 [style = bold, label=""];
14->4 [style = solid, label="to"];
7->11 [style = solid, label="keyTo"];
14->12 [style = solid, label="to"];
7->9 [style = solid, label="keyTo"];
15->2 [style = solid, label="from"];
5->0 [style = solid, label="from"];
0->11 [style = dashed, label="0"];
0->12 [style = dashed, label="0"];
2->4 [style = bold, label=""];
2->8 [style = dashed, label="0"];
4->0 [style = bold, label=""];
1->3 [style = dotted, label="true"];
4->9 [style = dashed, label="0"];
10->8 [style = bold, label=""];
6->8 [style = solid, label="keyFrom"];
6->11 [style = solid, label="keyFrom"];
15->12 [style = solid, label="from"];
8->9 [style = bold, label=""];
5->2 [style = solid, label="from"];
4->12 [style = bold, label=""];
3->4 [style = solid, label="to"];
10->7 [style = dotted, label="true"];
13->15 [style = dotted, label="true"];
1->2 [style = bold, label=""];
5->7 [style = dashed, label="0"];
13->14 [style = dotted, label="true"];
5->15 [style = dashed, label="0"];
1->5 [style = dotted, label="true"];
13->2 [style = bold, label=""];
}
