digraph {
2 [style = filled, label = "final String taskId = Preconditions.checkNotNull(request.getPathSegments().get(Iterables.indexOf(request.getPathSegments(),new Predicate<PathSegment>(){@Override public boolean apply(PathSegment input){return \"task\".equals(input.getPath())}}) + 1).getPath())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "final String dataSourceName = Preconditions.checkNotNull(taskOptional.get().getDataSource())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final ResourceAction resourceAction = new ResourceAction(new Resource(\"CONFIG\",ResourceType.CONFIG),getAction(request))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final Access authResult = AuthorizationUtils.authorizeResourceAction(getReq(),resourceAction,getAuthorizerMapper())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "throw new WebApplicationException(Response.status(Response.Status.BAD_REQUEST).entity(StringUtils.format(\"Cannot find any task with id: (%s(\",taskId)).build())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "throw new ForbiddenException(authResult.toString())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return request@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return request@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "filter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "ContainerRequest request@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final ResourceAction resourceAction = new ResourceAction(new Resource(dataSourceName,ResourceType.DATASOURCE),getAction(request))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "filter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "taskId = StringUtils.urlDecode(taskId)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "!authResult.isAllowed()@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Optional<Task> taskOptional = taskStorageQueryAdapter.getTask(taskId)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "!authResult.isAllowed()@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String taskId = Preconditions.checkNotNull(request.getPathSegments().get(Iterables.indexOf(request.getPathSegments(),new Predicate<PathSegment>(){@Override public boolean apply(PathSegment input){return \"task\".equals(input.getPath())}}) + 1).getPath())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "final Access authResult = AuthorizationUtils.authorizeResourceAction(getReq(),resourceAction,getAuthorizerMapper())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "!taskOptional.isPresent()@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "filter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "throw new ForbiddenException(authResult.toString())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->16 [style = bold, label=""];
16->15 [style = bold, label=""];
2->6 [style = bold, label=""];
19->20 [style = bold, label=""];
11->4 [style = bold, label=""];
8->3 [style = bold, label=""];
18->17 [style = bold, label=""];
3->9 [style = dotted, label="true"];
9->7 [style = bold, label=""];
0->4 [style = solid, label="request"];
10->5 [style = dotted, label="true"];
0->15 [style = solid, label="request"];
17->16 [style = dotted, label="true"];
3->9 [style = bold, label=""];
20->18 [style = bold, label=""];
12->13 [style = bold, label=""];
13->14 [style = solid, label="taskId"];
10->5 [style = bold, label=""];
3->7 [style = bold, label=""];
19->0 [style = dotted, label="true"];
2->13 [style = dashed, label="0"];
11->4 [style = solid, label="dataSourceName"];
6->10 [style = bold, label=""];
17->15 [style = bold, label=""];
12->0 [style = dotted, label="true"];
4->8 [style = solid, label="resourceAction"];
4->8 [style = bold, label=""];
5->11 [style = bold, label=""];
1->2 [style = bold, label=""];
2->6 [style = solid, label="taskId"];
1->0 [style = dotted, label="true"];
0->7 [style = solid, label="request"];
0->20 [style = solid, label="request"];
13->14 [style = bold, label=""];
14->6 [style = bold, label=""];
14->6 [style = solid, label="taskId"];
20->18 [style = solid, label="resourceAction"];
10->11 [style = bold, label=""];
}
