digraph {
7 [style = filled, label = "PowerMockito.when(,method).withArguments(Mockito.any()).thenThrow()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ConfigDriveBuilder.writeFile(new File(\"folder\"),\"subfolder\",\"content\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "PowerMockito.verifyStatic()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "PowerMockito.verifyStatic()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "writeFileTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "fileToBase64StringTestIOException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ConfigDriveBuilder.fileToBase64String(new File(\"file\"))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "writeFileTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "FileUtils.write(Mockito.any(),Mockito.anyString(),Mockito.any(),Mockito.eq(false))@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "PowerMockito.mockStatic()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Method method = getFileUtilsReadfileToByteArrayMethod()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
5->1 [style = bold, label=""];
3->6 [style = bold, label=""];
6->0 [style = bold, label=""];
4->6 [style = dashed, label="0"];
1->10 [style = bold, label=""];
4->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
2->1 [style = bold, label=""];
4->0 [style = bold, label=""];
}
