digraph {
1 [style = filled, label = "dataset.addValue(null,\"R1\",\"C3\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "dataset.addValue(1.0,\"R1\",\"C1\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(new Range(-2.0,1.0),r.findRangeBounds(dataset))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testFindRangeBounds['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertEquals(new Range(-2.0,3.0),r.findRangeBounds(dataset))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertNull(r.findRangeBounds(dataset))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(new Range(-2.0,1.0),r.findRangeBounds(dataset))@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "DefaultCategoryDataset dataset = new DefaultCategoryDataset()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "dataset.addValue(-2.0,\"R1\",\"C2\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(new Range(-2.0,1.0),r.findRangeBounds(dataset))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "dataset.addValue(2.0,\"R2\",\"C1\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "r.setSeriesVisible(1,Boolean.FALSE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "StackedAreaRenderer r = new StackedAreaRenderer()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(new Range(-2.0,3.0),r.findRangeBounds(dataset))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(new Range(0.0,1.0),r.findRangeBounds(dataset))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "dataset.addValue(null,\"R2\",\"C2\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(new Range(-6.0,1.0),r.findRangeBounds(dataset))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DefaultCategoryDataset<String,String> dataset = new DefaultCategoryDataset<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(new Range(1.0,1.0),r.findRangeBounds(dataset))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNull(r.findRangeBounds(null))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "LineAndShapeRenderer r = new LineAndShapeRenderer()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "dataset.addValue(-6.0,\"R2\",\"C1\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testFindRangeBounds['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testFindRangeBounds['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14->3 [style = bold, label=""];
15->2 [style = bold, label=""];
16->0 [style = bold, label=""];
5->4 [style = solid, label="dataset"];
15->8 [style = solid, label="dataset"];
4->17 [style = dashed, label="0"];
6->18 [style = bold, label=""];
4->13 [style = bold, label=""];
5->17 [style = solid, label="dataset"];
5->8 [style = solid, label="dataset"];
18->17 [style = bold, label=""];
0->11 [style = bold, label=""];
5->2 [style = solid, label="dataset"];
14->22 [style = dashed, label="0"];
0->20 [style = dashed, label="0"];
17->23 [style = bold, label=""];
11->15 [style = bold, label=""];
5->22 [style = solid, label="dataset"];
7->14 [style = bold, label=""];
5->6 [style = solid, label="dataset"];
9->19 [style = dashed, label="0"];
22->3 [style = bold, label=""];
8->1 [style = bold, label=""];
15->14 [style = solid, label="dataset"];
7->22 [style = bold, label=""];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
5->9 [style = solid, label="dataset"];
15->4 [style = solid, label="dataset"];
1->6 [style = bold, label=""];
15->2 [style = solid, label="dataset"];
21->20 [style = bold, label=""];
15->9 [style = solid, label="dataset"];
12->4 [style = bold, label=""];
3->8 [style = bold, label=""];
23->19 [style = bold, label=""];
10->0 [style = bold, label=""];
5->14 [style = solid, label="dataset"];
5->19 [style = solid, label="dataset"];
12->18 [style = dashed, label="0"];
15->6 [style = solid, label="dataset"];
13->9 [style = bold, label=""];
2->7 [style = bold, label=""];
5->15 [style = dashed, label="0"];
20->11 [style = bold, label=""];
6->12 [style = bold, label=""];
}
