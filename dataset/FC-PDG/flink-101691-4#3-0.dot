digraph {
5 [style = filled, label = "testCancel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "{JobID jid = new JobID()String(( parameters = {jid.toString()}CancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false)int retCode = testFrontend.cancel(parameters)assertEquals(0,retCode)Mockito.verify(testFrontend.client,times(1)).cancel(any())}@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testCancelWithSavepoint['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "{String(( parameters = {\"-flip6\",String.valueOf(new JobID())}CancelOptions options = CliFrontendParser.parseCancelCommand(parameters)assertTrue(options.getCommandLine().hasOption(Flip6DefaultCLI.FLIP_6.getOpt()))}@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "{JobID jid = new JobID()String(( parameters = {\"-s\",\"targetDirectory\",jid.toString()}CancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false)assertEquals(0,testFrontend.cancel(parameters))Mockito.verify(testFrontend.client,times(1)).cancelWithSavepoint(any(),notNull())}@@@12@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testCancelWithSavepoint['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "{JobID jid = new JobID()String(( parameters = {\"-s\",\"targetDirectory\",jid.toString()}final ClusterClient clusterClient = createClusterClient()MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)assertEquals(0,testFrontend.cancel(parameters))Mockito.verify(clusterClient,times(1)).cancelWithSavepoint(any(),notNull())}@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0->6 [style = bold, label=""];
0->2 [style = solid, label="parameters"];
0->6 [style = solid, label="parameters"];
5->0 [style = bold, label=""];
0->2 [style = bold, label=""];
0->4 [style = bold, label=""];
0->4 [style = solid, label="clusterClient"];
3->0 [style = bold, label=""];
1->0 [style = bold, label=""];
}
