digraph {
9 [style = filled, label = "runs.put(2,previousBuild)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "TestBuild previous2Build = new TestBuild(project,Result.FAILURE,50,prev3Build)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TestBuild lastBuild = new TestBuild(project,Result.SUCCESS,42,null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Job project = createMockProject(runs)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TestBuild prev3Build = new TestBuild(project,Result.SUCCESS,1,prev4Build)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(42,project.getEstimatedDuration())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "runs.put(1,lastBuild)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testGetEstimatedDurationIfPrevious3BuildsFailed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "runs.put(1,lastBuild)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testGetEstimatedDurationWithOneRun['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "TestBuild previousBuild = new TestBuild(project,Result.FAILURE,50,previous2Build)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "runs.put(5,prev4Build)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TestBuild lastBuild = new TestBuild(project,Result.FAILURE,50,previousBuild)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "TestBuild prev4Build = new TestBuild(project,Result.SUCCESS,1,prev5Build)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final SortedMap<Integer,TestBuild> runs = new TreeMap<Integer,TestBuild>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testGetEstimatedDurationWithOneRun['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(42,project.getEstimatedDuration())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "runs.put(4,prev3Build)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "TestBuild prev5Build = new TestBuild(project,Result.UNSTABLE,1,null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(1,project.getEstimatedDuration())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "runs.put(3,previous2Build)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "runs.put(6,prev5Build)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->14 [style = dashed, label="0"];
4->0 [style = solid, label="lastBuild"];
3->18 [style = solid, label="project"];
12->19 [style = solid, label="prev4Build"];
0->6 [style = bold, label=""];
2->3 [style = solid, label="runs"];
15->21 [style = bold, label=""];
8->18 [style = bold, label=""];
2->3 [style = bold, label=""];
18->15 [style = bold, label=""];
19->10 [style = bold, label=""];
9->17 [style = bold, label=""];
11->12 [style = bold, label=""];
10->8 [style = solid, label="prev3Build"];
18->21 [style = solid, label="previous2Build"];
21->17 [style = solid, label="previousBuild"];
3->4 [style = bold, label=""];
13->11 [style = bold, label=""];
3->17 [style = solid, label="project"];
4->0 [style = bold, label=""];
17->16 [style = solid, label="lastBuild"];
20->2 [style = bold, label=""];
3->21 [style = solid, label="project"];
21->9 [style = bold, label=""];
21->9 [style = solid, label="previousBuild"];
5->6 [style = dashed, label="0"];
10->8 [style = bold, label=""];
3->13 [style = solid, label="project"];
7->2 [style = bold, label=""];
13->12 [style = solid, label="prev5Build"];
13->11 [style = solid, label="prev5Build"];
12->10 [style = solid, label="prev4Build"];
3->13 [style = bold, label=""];
16->14 [style = bold, label=""];
3->4 [style = solid, label="project"];
10->18 [style = solid, label="prev3Build"];
1->2 [style = bold, label=""];
3->10 [style = solid, label="project"];
18->15 [style = solid, label="previous2Build"];
12->19 [style = bold, label=""];
4->13 [style = dashed, label="0"];
3->12 [style = solid, label="project"];
17->16 [style = bold, label=""];
0->5 [style = bold, label=""];
}
