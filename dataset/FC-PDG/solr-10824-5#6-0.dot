digraph {
53 [style = filled, label = "values.clear()@@@43@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "values.put(\"a\",1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "values.put(\"b\",-123456789123456789L)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertEquals(10L,result)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Assert.assertEquals(-7.9D,result)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Assert.assertEquals(10D,result)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "values.put(\"c\",-3.1)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "Assert.assertEquals(-8L,result)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(4 * 123456789123456789D,result)@@@42@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "values.put(\"b\",2.1)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "values.put(\"a\",1.1)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(3.323456789123456,result)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "values.put(\"a\",-4.12345678)@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "values.put(\"d\",123456789123456789L)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "values.put(\"b\",2.1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "subManyFieldsWithValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertEquals(6 * -4.12345678,result)@@@52@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "values.put(\"c\",3)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "values.put(\"b\",-4.12345678)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "values.put(\"b\",2.1)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "values.put(\"a\",123456789123456789L)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "values.put(\"d\",5.223456789123456)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "values.put(\"d\",4.1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"sub(a,b,c,d)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "values.put(\"b\",2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "values.put(\"a\",-1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "values.put(\"c\",3.1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "values.put(\"d\",4)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "values.put(\"d\",-4.12345678)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "addManyFieldsWithManySubAddsWithNegative['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(4 * 123456789123456789L,result)@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "values.clear()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "values.put(\"c\",-4.12345678)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "values.put(\"a\",1.1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "values.put(\"a\",10.1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "Assert.assertEquals(.8D,result)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@51@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "values.clear()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "addManyFieldsWithManySubAddsWithNegative['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(6 * -4.12345678,result)@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "values.clear()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "values.clear()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "values.clear()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "values.put(\"d\",4.1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "values.put(\"d\",4)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "values.clear()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
21->23 [style = solid, label="result"];
39->62 [style = bold, label=""];
32->23 [style = bold, label=""];
40->6 [style = bold, label=""];
46->2 [style = bold, label=""];
4->15 [style = bold, label=""];
7->40 [style = solid, label="result"];
60->22 [style = bold, label=""];
19->11 [style = bold, label=""];
61->57 [style = bold, label=""];
38->41 [style = bold, label=""];
43->26 [style = bold, label=""];
35->43 [style = bold, label=""];
49->22 [style = bold, label=""];
20->34 [style = solid, label="result"];
3->5 [style = bold, label=""];
12->38 [style = bold, label=""];
13->16 [style = solid, label="result"];
16->35 [style = solid, label="result"];
30->46 [style = bold, label=""];
62->7 [style = bold, label=""];
20->42 [style = solid, label="result"];
48->10 [style = bold, label=""];
31->49 [style = solid, label="result"];
21->32 [style = solid, label="result"];
31->60 [style = solid, label="result"];
8->27 [style = bold, label=""];
9->29 [style = bold, label=""];
18->0 [style = bold, label=""];
11->25 [style = bold, label=""];
2->31 [style = bold, label=""];
25->47 [style = bold, label=""];
15->13 [style = bold, label=""];
28->18 [style = bold, label=""];
24->19 [style = bold, label=""];
28->18 [style = solid, label="result"];
10->14 [style = bold, label=""];
25->47 [style = solid, label="result"];
20->34 [style = bold, label=""];
36->4 [style = bold, label=""];
37->21 [style = bold, label=""];
16->58 [style = solid, label="result"];
34->42 [style = bold, label=""];
44->49 [style = bold, label=""];
49->60 [style = dashed, label="0"];
13->16 [style = bold, label=""];
18->0 [style = solid, label="result"];
28->0 [style = solid, label="result"];
4->56 [style = bold, label=""];
41->30 [style = bold, label=""];
45->64 [style = solid, label="result"];
57->12 [style = bold, label=""];
16->33 [style = bold, label=""];
56->13 [style = bold, label=""];
0->48 [style = bold, label=""];
14->8 [style = bold, label=""];
33->58 [style = bold, label=""];
63->39 [style = bold, label=""];
45->40 [style = solid, label="result"];
52->54 [style = bold, label=""];
31->44 [style = solid, label="result"];
38->59 [style = bold, label=""];
16->33 [style = solid, label="result"];
6->64 [style = dashed, label="0"];
58->43 [style = bold, label=""];
31->52 [style = bold, label=""];
50->17 [style = bold, label=""];
54->22 [style = bold, label=""];
1->7 [style = bold, label=""];
51->29 [style = bold, label=""];
27->37 [style = bold, label=""];
37->21 [style = solid, label="result"];
25->20 [style = solid, label="result"];
31->44 [style = bold, label=""];
43->63 [style = bold, label=""];
39->1 [style = bold, label=""];
32->21 [style = dashed, label="0"];
45->6 [style = solid, label="result"];
35->58 [style = dashed, label="0"];
1->62 [style = dashed, label="0"];
45->40 [style = bold, label=""];
53->55 [style = bold, label=""];
33->35 [style = bold, label=""];
29->57 [style = dashed, label="0"];
44->60 [style = bold, label=""];
18->48 [style = solid, label="result"];
26->63 [style = dashed, label="0"];
55->24 [style = bold, label=""];
40->64 [style = bold, label=""];
7->45 [style = solid, label="result"];
26->39 [style = bold, label=""];
15->56 [style = dashed, label="0"];
31->52 [style = solid, label="result"];
7->45 [style = bold, label=""];
17->28 [style = bold, label=""];
29->12 [style = bold, label=""];
23->24 [style = bold, label=""];
22->36 [style = bold, label=""];
21->32 [style = bold, label=""];
47->20 [style = bold, label=""];
59->30 [style = bold, label=""];
13->33 [style = solid, label="result"];
5->50 [style = bold, label=""];
41->59 [style = dashed, label="0"];
44->52 [style = dashed, label="0"];
21->53 [style = bold, label=""];
}
