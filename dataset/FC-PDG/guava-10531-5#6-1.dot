digraph {
1 [style = filled, label = "graph.putEdgeValue(2,1,\"valueC\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(graph.edgeValue(1,2).orElse(DEFAULT)).isEqualTo(DEFAULT)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "graph.putEdgeValue(2,1,\"valueB\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(graph.edgeValue(1,2).get()).isEqualTo(\"valueA\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "graph = ValueGraphBuilder.directed().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(graph.edgeValue(1,2).orElse(DEFAULT)).isEqualTo(DEFAULT)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "edgeValue_missing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(graph.edgeValueOrDefault(2,1,DEFAULT)).isEqualTo(\"valueB\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "graph.removeEdge(1,2)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(graph.edgeValueOrDefault(1,2,DEFAULT)).isEqualTo(\"valueA\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertThat(graph.edgeValue(2,1).get()).isEqualTo(\"valueC\")@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(graph.edgeValue(2,1).get()).isEqualTo(\"valueB\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(graph.edgeValueOrDefault(2,1,null)).isEqualTo(\"valueB\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(graph.edgeValueOrDefault(1,2,null)).isEqualTo(\"valueA\")@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "edgeValue_missing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertThat(graph.edgeValueOrDefault(1,2,DEFAULT)).isEqualTo(DEFAULT)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(graph.edgeValueOrDefault(1,2,null)).isNull()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "graph.putEdgeValue(1,2,\"valueA\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(graph.edgeValueOrDefault(2,1,DEFAULT)).isEqualTo(DEFAULT)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertThat(graph.edgeValueOrDefault(2,1,DEFAULT)).isEqualTo(\"valueC\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertThat(graph.edgeValueOrDefault(2,1,null)).isEqualTo(\"valueC\")@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "edgeValue_missing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(graph.edgeValueOrDefault(1,2,null)).isNull()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(graph.edgeValueOrDefault(2,1,null)).isNull()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(graph.edgeValue(2,1).orElse(DEFAULT)).isEqualTo(DEFAULT)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(graph.edgeValueOrDefault(1,2,DEFAULT)).isEqualTo(DEFAULT)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->16 [style = bold, label=""];
4->9 [style = bold, label=""];
8->10 [style = bold, label=""];
4->16 [style = dashed, label="0"];
7->18 [style = dashed, label="0"];
4->25 [style = bold, label=""];
11->15 [style = dashed, label="0"];
1->15 [style = bold, label=""];
3->6 [style = bold, label=""];
8->12 [style = dashed, label="0"];
7->20 [style = bold, label=""];
5->17 [style = bold, label=""];
2->4 [style = bold, label=""];
15->18 [style = bold, label=""];
24->22 [style = bold, label=""];
0->17 [style = dashed, label="0"];
1->11 [style = bold, label=""];
6->2 [style = bold, label=""];
20->21 [style = bold, label=""];
6->14 [style = bold, label=""];
17->12 [style = bold, label=""];
12->10 [style = bold, label=""];
2->14 [style = dashed, label="0"];
5->0 [style = bold, label=""];
19->9 [style = bold, label=""];
23->6 [style = bold, label=""];
0->8 [style = bold, label=""];
25->19 [style = bold, label=""];
22->10 [style = bold, label=""];
9->5 [style = bold, label=""];
13->6 [style = bold, label=""];
10->1 [style = bold, label=""];
16->9 [style = bold, label=""];
11->7 [style = bold, label=""];
8->24 [style = bold, label=""];
}
