digraph {
4 [style = filled, label = "Assert.assertFalse(DruidJoinRule.canHandleCondition(rexBuilder.makeCall(SqlStdOperatorTable.EQUALS,rexBuilder.makeInputRef(typeFactory.createSqlType(SqlTypeName.VARCHAR),1),rexBuilder.makeInputRef(typeFactory.createSqlType(SqlTypeName.VARCHAR),1)),leftType))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "test_canHandleCondition_rightEqRight['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "test_canHandleCondition_leftEqRightFn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertFalse(DruidJoinRule.canHandleCondition(rexBuilder.makeCall(SqlStdOperatorTable.EQUALS,rexBuilder.makeInputRef(typeFactory.createSqlType(SqlTypeName.VARCHAR),0),rexBuilder.makeCall(SqlStdOperatorTable.CONCAT,rexBuilder.makeLiteral(\"foo\"),rexBuilder.makeInputRef(typeFactory.createSqlType(SqlTypeName.VARCHAR),1))),leftType))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "test_canHandleCondition_leftEqRightFn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Assert.assertFalse(DruidJoinRule.canHandleCondition(rexBuilder.makeCall(SqlStdOperatorTable.EQUALS,rexBuilder.makeInputRef(typeFactory.createSqlType(SqlTypeName.VARCHAR),0),rexBuilder.makeCall(SqlStdOperatorTable.CONCAT,rexBuilder.makeLiteral(\"foo\"),rexBuilder.makeInputRef(typeFactory.createSqlType(SqlTypeName.VARCHAR),1))),leftType,null))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->4 [style = dashed, label="0"];
1->2 [style = dashed, label="0"];
3->2 [style = bold, label=""];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
}
