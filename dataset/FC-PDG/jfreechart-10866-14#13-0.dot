digraph {
11 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "VectorSeriesCollection<String> c2 = TestUtils.serialised(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "s1.update(0,0,1.1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MatrixSeriesCollection<String> c1 = new MatrixSeriesCollection<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "VectorSeriesCollection<String> c1 = new VectorSeriesCollection<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "MatrixSeriesCollection<String> c2 = CloneUtils.clone(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "VectorSeriesCollection c2 = TestUtils.serialised(c1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "VectorSeries<String> s1 = new VectorSeries<>(\"Series\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "MatrixSeries<String> s1 = new MatrixSeries<>(\"Series\",2,3)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "VectorSeriesCollection c1 = new VectorSeriesCollection()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
16->11 [style = bold, label=""];
15->14 [style = bold, label=""];
19->12 [style = bold, label=""];
4->6 [style = bold, label=""];
14->10 [style = bold, label=""];
10->16 [style = solid, label="c1"];
1->18 [style = bold, label=""];
6->0 [style = bold, label=""];
0->5 [style = solid, label="c1"];
6->14 [style = dashed, label="0"];
10->18 [style = solid, label="c1"];
9->7 [style = solid, label="c1"];
5->18 [style = dashed, label="0"];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
17->19 [style = bold, label=""];
0->3 [style = solid, label="c1"];
7->3 [style = bold, label=""];
0->10 [style = dashed, label="0"];
9->3 [style = solid, label="c1"];
18->12 [style = solid, label="c2"];
15->1 [style = solid, label="s1"];
5->3 [style = solid, label="c2"];
0->1 [style = bold, label=""];
4->15 [style = dashed, label="0"];
18->16 [style = solid, label="c2"];
11->17 [style = bold, label=""];
7->3 [style = solid, label="c2"];
13->15 [style = bold, label=""];
4->1 [style = solid, label="s1"];
8->4 [style = bold, label=""];
0->9 [style = dashed, label="0"];
6->9 [style = bold, label=""];
9->1 [style = bold, label=""];
5->7 [style = dashed, label="0"];
10->1 [style = bold, label=""];
18->17 [style = solid, label="c2"];
3->16 [style = dashed, label="0"];
18->16 [style = bold, label=""];
}
