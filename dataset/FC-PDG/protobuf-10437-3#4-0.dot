digraph {
1 [style = filled, label = "String error@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertParseError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(error,e.getMessage())@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(e).hasMessageThat().isEqualTo(error)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "TestAllTypes.Builder builder = TestAllTypes.newBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertParseErrorWithUnknownFields['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String error@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String text@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TextFormat.merge(text,TestUtil.getFullExtensionRegistry(),builder)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TextFormat.parse(text,TestUtil.getFullExtensionRegistry(),)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String text@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "fail(\"Expected parse exception.\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "String error@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertWithMessage(\"Expected parse exception.\").fail()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "parserAllowingUnknownFields.merge(text,TestUtil.getFullExtensionRegistry(),builder)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TextFormat.ParseException e@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertParseError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertWithMessage(\"Expected parse exception.\").fail()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "fail(\"Expected parse exception.\")@@@6@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18->15 [style = solid, label="text"];
12->5 [style = bold, label=""];
10->6 [style = solid, label="text"];
17->18 [style = dotted, label="true"];
10->5 [style = solid, label="text"];
17->9 [style = bold, label=""];
3->18 [style = dashed, label="0"];
4->13 [style = bold, label=""];
4->7 [style = dotted, label="true"];
6->0 [style = bold, label=""];
0->12 [style = dashed, label="0"];
9->6 [style = solid, label="builder"];
8->3 [style = dotted, label="true"];
4->7 [style = bold, label=""];
14->10 [style = dotted, label="true"];
9->6 [style = bold, label=""];
17->16 [style = dotted, label="true"];
8->1 [style = dotted, label="true"];
4->13 [style = dotted, label="true"];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
3->5 [style = solid, label="text"];
9->15 [style = solid, label="builder"];
6->15 [style = dashed, label="0"];
9->15 [style = bold, label=""];
15->0 [style = bold, label=""];
8->9 [style = bold, label=""];
13->5 [style = bold, label=""];
14->3 [style = dotted, label="true"];
2->11 [style = dashed, label="0"];
14->9 [style = bold, label=""];
5->11 [style = bold, label=""];
3->6 [style = solid, label="text"];
0->5 [style = bold, label=""];
6->12 [style = bold, label=""];
}
