digraph {
27 [style = filled, label = "assertEquals((numRecords1 + numRecords2) * 2 * 2 * 2,numRecordsOutCounter.getCount())@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "x < numRecords2@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final Counter numRecordsOutCounter = taskMetricGroup.getIOMetricGroup().getNumRecordsOutCounter()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "x++@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final int numRecords = 5@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testHarness.setupOperatorChain(new OperatorID(),new DuplicatingOperator()).chain(new OperatorID(),new DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).chain(new OperatorID(),new DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).finish()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "x++@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testHarness.waitForTaskRunning()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHarness.waitForInputProcessing()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testOperatorMetricReuse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "int x = 0@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final int numRecords1 = 5@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final StreamMockEnvironment env = new StreamMockEnvironment(testHarness.jobConfig,testHarness.taskConfig,testHarness.memorySize,new MockInputSplitProvider(),testHarness.bufferSize,new TestTaskStateManager()){@Override public TaskMetricGroup getMetricGroup(){return taskMetricGroup}}@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "x++@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testOperatorMetricReuse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "x < numRecords1@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(numRecords1 + numRecords2,numRecordsInCounter.getCount())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testHarness.waitForInputProcessing()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int x = 0@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testHarness.processElement(new StreamRecord<>(\"hello\"),1,0)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final TaskMetricGroup taskMetricGroup = new UnregisteredMetricGroups.UnregisteredTaskMetricGroup(){@Override public OperatorMetricGroup addOperator(OperatorID operatorID,String name){return new OperatorMetricGroup(NoOpMetricRegistry.INSTANCE,this,operatorID,name)}}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final OneInputStreamTaskTestHarness<String,String> testHarness = new OneInputStreamTaskTestHarness<>(null,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(numRecords * 2 * 2 * 2,numRecordsOutCounter.getCount())@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Counter numRecordsInCounter = taskMetricGroup.getIOMetricGroup().getNumRecordsInCounter()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testHarness.invoke(env)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testOperatorMetricReuse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final int numRecords2 = 3@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "int x = 0@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testHarness.setupOperatorChain(new OperatorID(),new DuplicatingOperator()).chain(new OperatorID(),new OneInputStreamTaskTest.DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).chain(new OperatorID(),new OneInputStreamTaskTest.DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).finish()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final TwoInputStreamTaskTestHarness<String,String,String> testHarness = new TwoInputStreamTaskTestHarness<>(null,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testHarness.processElement(new StreamRecord<>(\"hello\"),0,0)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
5->3 [style = bold, label=""];
24->10 [style = bold, label=""];
11->8 [style = solid, label="x"];
22->18 [style = solid, label="numRecords1"];
18->23 [style = bold, label=""];
24->25 [style = dotted, label="true"];
29->24 [style = solid, label="x"];
8->18 [style = bold, label=""];
21->30 [style = solid, label="numRecords2"];
30->27 [style = bold, label=""];
21->8 [style = bold, label=""];
22->21 [style = bold, label=""];
8->18 [style = solid, label="x"];
8->15 [style = dotted, label="true"];
8->9 [style = solid, label="x"];
3->6 [style = bold, label=""];
28->26 [style = bold, label=""];
14->22 [style = dashed, label="0"];
4->27 [style = dashed, label="0"];
20->3 [style = bold, label=""];
3->6 [style = solid, label="taskMetricGroup"];
16->2 [style = bold, label=""];
15->8 [style = solid, label="x"];
12->0 [style = bold, label=""];
9->23 [style = dashed, label="0"];
21->24 [style = solid, label="numRecords2"];
5->20 [style = dashed, label="0"];
19->24 [style = bold, label=""];
6->12 [style = solid, label="env"];
11->15 [style = solid, label="x"];
8->1 [style = bold, label=""];
14->10 [style = solid, label="numRecords"];
9->18 [style = solid, label="x"];
18->29 [style = bold, label=""];
0->14 [style = bold, label=""];
10->30 [style = dashed, label="0"];
13->12 [style = bold, label=""];
9->18 [style = bold, label=""];
22->27 [style = solid, label="numRecords1"];
17->2 [style = bold, label=""];
9->15 [style = bold, label=""];
24->25 [style = bold, label=""];
0->22 [style = bold, label=""];
18->9 [style = dotted, label="true"];
14->8 [style = solid, label="numRecords"];
25->19 [style = bold, label=""];
8->9 [style = bold, label=""];
10->4 [style = bold, label=""];
14->4 [style = solid, label="numRecords"];
11->8 [style = bold, label=""];
24->19 [style = dotted, label="true"];
8->18 [style = dashed, label="0"];
8->9 [style = dotted, label="true"];
22->30 [style = solid, label="numRecords1"];
29->19 [style = solid, label="x"];
2->26 [style = dashed, label="0"];
6->7 [style = bold, label=""];
29->24 [style = bold, label=""];
1->10 [style = bold, label=""];
23->9 [style = bold, label=""];
14->11 [style = bold, label=""];
10->30 [style = bold, label=""];
15->8 [style = bold, label=""];
19->24 [style = solid, label="x"];
21->27 [style = solid, label="numRecords2"];
26->20 [style = bold, label=""];
2->5 [style = bold, label=""];
18->23 [style = dotted, label="true"];
}
