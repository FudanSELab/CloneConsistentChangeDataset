digraph {
13 [style = filled, label = "testHappyFlow['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TypedProperties props@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assertions.assertEquals(keyGenerator.getRecordKey(row),\"key1\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "GenericRecord record = getRecord()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assertions.assertEquals(key.getPartitionPath(),\"timestamp=4357686\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testSimpleKeyGenerator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "BuiltinKeyGenerator keyGenerator = (BuiltinKeyGenerator)HoodieSparkKeyGeneratorFactory.createKeyGenerator(props)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "HoodieKey key = keyGenerator.getKey(getRecord())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SimpleKeyGenerator keyGenerator = new SimpleKeyGenerator(getProps())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testSimpleKeyGenerator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Row row = KeyGeneratorTestUtilities.getRow(record)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "HoodieKey key = keyGenerator.getKey(record)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assertions.assertEquals(keyGenerator.getPartitionPath(row),\"timestamp=4357686\")@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "BuiltinKeyGenerator keyGenerator = new CustomKeyGenerator(getPropertiesForSimpleKeyGen())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Assertions.assertEquals(key.getRecordKey(),\"key1\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
6->3 [style = bold, label=""];
7->1 [style = bold, label=""];
4->6 [style = bold, label=""];
3->14 [style = bold, label=""];
0->2 [style = bold, label=""];
10->3 [style = bold, label=""];
11->9 [style = dotted, label="true"];
3->0 [style = solid, label="record"];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
6->10 [style = dashed, label="0"];
7->1 [style = solid, label="row"];
6->12 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
13->12 [style = bold, label=""];
11->10 [style = bold, label=""];
3->7 [style = solid, label="record"];
7->5 [style = solid, label="row"];
14->2 [style = bold, label=""];
12->3 [style = bold, label=""];
2->8 [style = bold, label=""];
9->10 [style = solid, label="props"];
}
