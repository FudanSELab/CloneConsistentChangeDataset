digraph {
11 [style = filled, label = "PowerMock.verifyAll()@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "PowerMock.verifyAll()@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "herder.restartConnector(EasyMock.eq(CONNECTOR_NAME),EasyMock.capture(cb))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),EasyMock.eq(\"POST\"),EasyMock.isNull(),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new RestClient.HttpResponse<>(202,new HashMap<String,String>(),null))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "expectAndCallbackNotLeaderException(cb)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testRestartConnectorLeaderRedirect['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "PowerMock.replayAll()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expectAndCallbackException(cb,new NotAssignedException(\"not owner test\",ownerUrl))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://owner:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=false\"),EasyMock.eq(\"POST\"),EasyMock.isNull(),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new RestClient.HttpResponse<>(202,new HashMap<String,String>(),null))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "PowerMock.replayAll()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Capture<Callback<Void>> cb = Capture.newInstance()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testRestartConnectorOwnerRedirect['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "connectorsResource.restartConnector(CONNECTOR_NAME,true)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "EasyMock.expect(RestClient.httpRequest(EasyMock.eq(\"http://leader:8083/connectors/\" + CONNECTOR_NAME + \"/restart?forward=true\"),EasyMock.eq(\"POST\"),EasyMock.isNull(),EasyMock.isNull(),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new RestClient.HttpResponse<>(202,new HashMap<String,String>(),null))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "connectorsResource.restartConnector(CONNECTOR_NAME,NULL_HEADERS,null)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testRestartConnectorLeaderRedirect['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "String ownerUrl = \"http://owner:8083\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->11 [style = bold, label=""];
4->16 [style = dashed, label="0"];
9->0 [style = bold, label=""];
1->3 [style = solid, label="cb"];
2->3 [style = bold, label=""];
7->0 [style = bold, label=""];
14->1 [style = bold, label=""];
3->9 [style = bold, label=""];
8->1 [style = bold, label=""];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
0->10 [style = bold, label=""];
10->5 [style = bold, label=""];
1->12 [style = solid, label="cb"];
3->7 [style = bold, label=""];
0->4 [style = bold, label=""];
7->9 [style = dashed, label="0"];
2->15 [style = bold, label=""];
1->2 [style = solid, label="cb"];
1->2 [style = bold, label=""];
15->12 [style = bold, label=""];
15->12 [style = solid, label="ownerUrl"];
4->10 [style = dashed, label="0"];
4->5 [style = bold, label=""];
4->16 [style = bold, label=""];
13->4 [style = bold, label=""];
}
