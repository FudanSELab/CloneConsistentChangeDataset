digraph {
14 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.MARKET_DIMENSION,Sets.newHashSet(\"spot\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testSearch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.MARKET_DIMENSION,Sets.newHashSet(\"SPot\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.marketDimension,Sets.newHashSet(\"SPot\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "SearchQuery searchQuery@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.qualityDimension,Sets.newHashSet(\"automotive\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "searchQuery = builder.query(\"SPot\",true).build()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.MARKET_DIMENSION,Sets.newHashSet(\"spot\",\"SPot\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "checkSearchQuery(searchQuery,expectedResults)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testFragmentSearch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "searchQuery = builder.query(\"spot\",true).build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "checkSearchQuery(searchQuery,expectedResults)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSearch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "checkSearchQuery(searchQuery,expectedResults)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.marketDimension,Sets.newHashSet(\"spot\",\"SPot\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Druids.SearchQueryBuilder builder = testBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.marketDimension,Sets.newHashSet(\"spot\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Map<String,Set<String>> expectedResults = new TreeMap<>(String.CASE_INSENSITIVE_ORDER)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "searchQuery = builder.fragments(Arrays.asList(\"auto\",\"ve\")).build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "expectedResults.put(QueryRunnerTestHelper.qualityDimension,Sets.newHashSet(\"automotive\",\"AutoMotive\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "searchQuery = builder.query(\"SPOT\").build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "searchQuery = builder.fragments(Arrays.asList(\"auto\",\"ve\"),true).build()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->3 [style = bold, label=""];
4->3 [style = bold, label=""];
2->20 [style = bold, label=""];
20->17 [style = bold, label=""];
7->1 [style = bold, label=""];
11->20 [style = dashed, label="0"];
10->14 [style = bold, label=""];
7->16 [style = dashed, label="0"];
0->12 [style = bold, label=""];
11->12 [style = solid, label="searchQuery"];
20->12 [style = solid, label="searchQuery"];
3->6 [style = bold, label=""];
10->3 [style = solid, label="searchQuery"];
5->3 [style = solid, label="expectedResults"];
18->3 [style = solid, label="searchQuery"];
4->21 [style = dashed, label="0"];
0->17 [style = dashed, label="0"];
5->2 [style = bold, label=""];
5->1 [style = solid, label="expectedResults"];
11->0 [style = bold, label=""];
12->10 [style = bold, label=""];
13->12 [style = bold, label=""];
17->12 [style = bold, label=""];
16->1 [style = bold, label=""];
19->9 [style = bold, label=""];
6->16 [style = bold, label=""];
15->9 [style = bold, label=""];
11->13 [style = bold, label=""];
0->13 [style = dashed, label="0"];
12->18 [style = bold, label=""];
8->9 [style = bold, label=""];
10->4 [style = bold, label=""];
9->5 [style = bold, label=""];
5->12 [style = solid, label="expectedResults"];
4->14 [style = dashed, label="0"];
18->21 [style = bold, label=""];
6->7 [style = bold, label=""];
2->11 [style = bold, label=""];
10->18 [style = dashed, label="0"];
21->3 [style = bold, label=""];
6->1 [style = solid, label="searchQuery"];
}
