digraph {
31 [style = filled, label = "{String val = asText(node)target.setIgnoreInvalidEndpoints(val)break}@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Node node@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Node node@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "RecipientListDefinition target@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "{setSteps(target,node)break}@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String propertyName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String propertyName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "{String val = asText(node)target.setStopOnException(val)break}@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Node node@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String propertyKey@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "{org.apache.camel.model.language.ExpressionDefinition val = asType(node,)target.setExpression(val)break}@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "{String val = asText(node)target.setCacheSize(val)break}@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "ed != null@@@91@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "{String val = asText(node)target.setOnPrepareRef(val)break}@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "propertyKey@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "{String val = asText(node)target.setInheritErrorHandler(java.lang.Boolean.valueOf(val))break}@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ed != null@@@50@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "ed != null@@@95@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ed != null@@@51@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String propertyName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "ed != null@@@46@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "{String val = asText(node)target.setParallelProcessing(val)break}@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "{ExpressionDefinition ed = target.getExpressionType()if (ed != null) {throw new org.apache.camel.dsl.yaml.common.exception.UnsupportedFieldException(propertyName,\"an expression has already been configured (\" + ed + \")\")}ed = ExpressionDeserializers.constructExpressionType(propertyKey,node)if (ed != null) {target.setExpressionType(ed)}{return false}}@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "{String val = asText(node)target.setEager(val)break}@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String propertyKey@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "{String val = asText(node)target.setShareUnitOfWork(val)break}@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return true@@@59@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String propertyKey@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "{String val = asText(node)target.setStrategyMethodAllowNull(val)break}@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "{ExpressionDefinition ed = target.getExpressionType()if (ed != null) {throw new org.apache.camel.dsl.yaml.common.exception.UnsupportedFieldException(propertyName,\"an expression has already been configured (\" + ed + \")\")}ed = ExpressionDeserializers.constructExpressionType(propertyKey,node)if (ed != null) {target.setExpressionType(ed)}{return false}}@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "{String val = asText(node)target.setStrategyRef(val)break}@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "asFlatList(node,)@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return true@@@58@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "ProcessorDefinition<?> definition@@@40@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "{String val = asText(node)target.setTimeout(val)break}@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "{String val = asText(node)target.setExecutorServiceRef(val)break}@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "{String val = asText(node)target.setStopOnAggregateException(val)break}@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "{ExpressionDefinition ed = target.getExpressionType()if (ed != null) {throw new org.apache.camel.dsl.yaml.common.exception.UnsupportedFieldException(propertyName,\"an expression has already been configured (\" + ed + \")\")}ed = ExpressionDeserializers.constructExpressionType(propertyKey,node)if (ed != null) {target.setExpressionType(ed)}{return false}}@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "IdempotentConsumerDefinition target@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "return true@@@103@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "{String val = asText(node)target.setMessageIdRepositoryRef(val)break}@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "{String val = asText(node)target.setStrategyMethodName(val)break}@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "{String val = asText(node)target.setCompletionEager(val)break}@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "{String val = asText(node)target.setStreaming(val)break}@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "{String val = asText(node)target.setParallelAggregate(val)break}@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "{String val = asText(node)target.setDelimiter(val)break}@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ed != null@@@47@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "{String val = asText(node)target.setSkipDuplicate(val)break}@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "setProperty['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "{String val = asText(node)target.setRemoveOnFailure(val)break}@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "setProperty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "setProperty['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7->9 [style = solid, label="val"];
19->7 [style = solid, label="val"];
1->47 [style = bold, label=""];
33->9 [style = solid, label="node"];
22->20 [style = dotted, label="true"];
16->14 [style = solid, label="node"];
28->43 [style = solid, label="propertyKey"];
1->18 [style = bold, label=""];
14->19 [style = bold, label=""];
3->45 [style = dashed, label="0"];
1->23 [style = bold, label=""];
0->18 [style = solid, label="node"];
0->19 [style = solid, label="node"];
10->3 [style = bold, label=""];
1->37 [style = bold, label=""];
1->11 [style = bold, label=""];
43->42 [style = bold, label=""];
41->33 [style = dotted, label="true"];
20->23 [style = solid, label="propertyName"];
33->49 [style = solid, label="node"];
2->1 [style = bold, label=""];
1->24 [style = dotted, label="true"];
33->39 [style = solid, label="node"];
41->28 [style = dotted, label="true"];
21->1 [style = solid, label="propertyKey"];
1->30 [style = bold, label=""];
19->7 [style = bold, label=""];
0->15 [style = solid, label="node"];
18->29 [style = dashed, label="0"];
41->1 [style = bold, label=""];
23->27 [style = bold, label=""];
40->30 [style = bold, label=""];
14->37 [style = dashed, label="0"];
35->40 [style = bold, label=""];
29->50 [style = bold, label=""];
10->39 [style = dashed, label="0"];
1->9 [style = bold, label=""];
28->1 [style = solid, label="propertyKey"];
1->10 [style = bold, label=""];
6->1 [style = solid, label="propertyKey"];
44->35 [style = solid, label="val"];
50->48 [style = solid, label="val"];
7->9 [style = bold, label=""];
1->49 [style = bold, label=""];
1->29 [style = bold, label=""];
47->39 [style = bold, label=""];
34->7 [style = solid, label="val"];
48->44 [style = bold, label=""];
16->18 [style = solid, label="node"];
3->18 [style = bold, label=""];
45->29 [style = solid, label="val"];
1->14 [style = bold, label=""];
0->11 [style = solid, label="node"];
22->25 [style = dotted, label="true"];
1->39 [style = bold, label=""];
45->29 [style = bold, label=""];
1->44 [style = bold, label=""];
1->40 [style = bold, label=""];
1->13 [style = dotted, label="true"];
1->15 [style = bold, label=""];
1->26 [style = dotted, label="true"];
4->11 [style = solid, label="propertyName"];
22->1 [style = bold, label=""];
30->46 [style = solid, label="val"];
1->34 [style = bold, label=""];
46->43 [style = bold, label=""];
0->9 [style = solid, label="node"];
35->40 [style = solid, label="val"];
33->31 [style = solid, label="node"];
33->34 [style = solid, label="node"];
33->37 [style = solid, label="node"];
1->31 [style = bold, label=""];
19->49 [style = dashed, label="0"];
0->3 [style = solid, label="node"];
30->46 [style = bold, label=""];
16->7 [style = solid, label="node"];
33->43 [style = solid, label="node"];
34->7 [style = bold, label=""];
1->51 [style = dotted, label="true"];
9->15 [style = bold, label=""];
33->40 [style = solid, label="node"];
48->44 [style = solid, label="val"];
16->19 [style = solid, label="node"];
10->3 [style = solid, label="val"];
33->7 [style = solid, label="node"];
9->15 [style = solid, label="val"];
9->47 [style = solid, label="val"];
2->16 [style = dotted, label="true"];
39->45 [style = bold, label=""];
33->35 [style = solid, label="node"];
32->43 [style = solid, label="propertyName"];
1->45 [style = bold, label=""];
40->30 [style = solid, label="val"];
0->14 [style = solid, label="node"];
33->50 [style = solid, label="node"];
21->23 [style = solid, label="propertyKey"];
7->31 [style = bold, label=""];
0->10 [style = solid, label="node"];
16->3 [style = solid, label="node"];
1->12 [style = dotted, label="true"];
9->47 [style = bold, label=""];
16->38 [style = dashed, label="0"];
16->10 [style = solid, label="node"];
37->49 [style = bold, label=""];
1->7 [style = bold, label=""];
1->43 [style = bold, label=""];
15->10 [style = bold, label=""];
1->50 [style = bold, label=""];
18->11 [style = bold, label=""];
49->34 [style = solid, label="val"];
11->5 [style = bold, label=""];
18->23 [style = bold, label=""];
1->48 [style = bold, label=""];
22->21 [style = dotted, label="true"];
33->29 [style = solid, label="node"];
1->8 [style = dotted, label="true"];
16->9 [style = solid, label="node"];
2->4 [style = dotted, label="true"];
22->16 [style = dotted, label="true"];
1->46 [style = bold, label=""];
31->9 [style = solid, label="val"];
33->44 [style = solid, label="node"];
31->9 [style = bold, label=""];
37->49 [style = solid, label="val"];
33->46 [style = solid, label="node"];
0->7 [style = solid, label="node"];
1->36 [style = dotted, label="true"];
47->39 [style = solid, label="val"];
50->48 [style = bold, label=""];
2->6 [style = dotted, label="true"];
1->17 [style = dotted, label="true"];
15->10 [style = solid, label="val"];
7->31 [style = solid, label="val"];
44->35 [style = bold, label=""];
14->19 [style = solid, label="val"];
25->18 [style = solid, label="target"];
29->50 [style = solid, label="val"];
1->3 [style = bold, label=""];
16->23 [style = solid, label="node"];
1->35 [style = bold, label=""];
33->48 [style = solid, label="node"];
39->45 [style = solid, label="val"];
1->19 [style = bold, label=""];
41->32 [style = dotted, label="true"];
16->15 [style = solid, label="node"];
33->30 [style = solid, label="node"];
2->0 [style = dotted, label="true"];
49->34 [style = bold, label=""];
41->38 [style = dotted, label="true"];
15->47 [style = dashed, label="0"];
6->11 [style = solid, label="propertyKey"];
33->45 [style = solid, label="node"];
33->47 [style = solid, label="node"];
}
