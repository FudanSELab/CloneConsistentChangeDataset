digraph {
2 [style = filled, label = "listTables['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String name@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "dropDatabase['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "listTables['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "checkArgument(!StringUtils.isNullOrWhitespaceOnly(databaseName),\"databaseName cannot be null or empty\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "boolean cascade@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String databaseName@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "checkArgument(!isNullOrWhitespaceOnly(databaseName),\"databaseName cannot be null or empty\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "boolean ignoreIfNotExists@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "client.dropDatabase(name,true,ignoreIfNotExists,cascade)@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return client.getAllTables(databaseName)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2->3 [style = dotted, label="true"];
6->10 [style = dotted, label="true"];
9->7 [style = solid, label="name"];
2->0 [style = bold, label=""];
4->1 [style = bold, label=""];
5->4 [style = bold, label=""];
0->4 [style = dashed, label="0"];
3->10 [style = dashed, label="0"];
3->1 [style = solid, label="databaseName"];
6->7 [style = bold, label=""];
5->3 [style = dotted, label="true"];
10->7 [style = solid, label="ignoreIfNotExists"];
6->9 [style = dotted, label="true"];
6->8 [style = dotted, label="true"];
0->1 [style = bold, label=""];
8->7 [style = solid, label="cascade"];
}
