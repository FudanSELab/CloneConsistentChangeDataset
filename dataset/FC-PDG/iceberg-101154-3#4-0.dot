digraph {
11 [style = filled, label = "Assert.assertEquals(branch,pti.reference())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assertions.assertThat(path).isEqualTo(pti.tableIdentifier().name())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "TableReference pti = TableReference.parse(path)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertNull(pti.timestamp())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertNull(pti.reference())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "pti = TableReference.parse(path + \"@\" + branch)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "path = \"&&\"@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "noMarkings['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Assertions.assertThat(pti.reference()).isNull()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "strangeCharacters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String path = \"foo\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assertions.assertThat(pti.timestamp()).isNull()@@@7@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "pti = TableReference.parse(path)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertNull(pti.timestamp())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertNull(pti.timestamp())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(path,pti.tableIdentifier().name())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(branch,pti.reference())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(path,pti.tableIdentifier().name())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String path = \"/%\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(path,pti.tableIdentifier().name())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertNull(pti.timestamp())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertNull(pti.reference())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TableReference pti = TableReference.parse(path)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "pti = TableReference.parse(path + \"@\" + branch)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "String branch = \"bar\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(path,pti.tableIdentifier().name())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "noMarkings['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12->26 [style = bold, label=""];
26->22 [style = bold, label=""];
5->7 [style = dashed, label="0"];
0->5 [style = solid, label="path"];
7->8 [style = bold, label=""];
8->9 [style = bold, label=""];
20->13 [style = solid, label="branch"];
23->19 [style = solid, label="path"];
13->19 [style = bold, label=""];
21->26 [style = solid, label="path"];
6->0 [style = bold, label=""];
20->11 [style = solid, label="branch"];
22->16 [style = bold, label=""];
2->9 [style = dashed, label="0"];
11->18 [style = bold, label=""];
20->22 [style = solid, label="branch"];
0->20 [style = dashed, label="0"];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
23->10 [style = solid, label="path"];
4->2 [style = bold, label=""];
21->5 [style = solid, label="path"];
20->21 [style = bold, label=""];
16->23 [style = bold, label=""];
19->11 [style = bold, label=""];
23->13 [style = solid, label="path"];
3->0 [style = bold, label=""];
21->5 [style = bold, label=""];
25->13 [style = bold, label=""];
4->8 [style = dashed, label="0"];
14->25 [style = bold, label=""];
15->20 [style = bold, label=""];
2->24 [style = bold, label=""];
24->12 [style = bold, label=""];
0->1 [style = solid, label="path"];
1->7 [style = bold, label=""];
20->12 [style = solid, label="branch"];
23->17 [style = bold, label=""];
21->12 [style = solid, label="path"];
10->14 [style = bold, label=""];
17->10 [style = bold, label=""];
21->4 [style = solid, label="path"];
23->17 [style = solid, label="path"];
1->5 [style = bold, label=""];
}
