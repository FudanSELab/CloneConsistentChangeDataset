digraph {
0 [style = filled, label = "each instanceof ModifyColumnDefinitionSegment@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "MySQLCreateTableStatement result = new MySQLCreateTableStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "each instanceof ModifyConstraintDefinitionSegment@@@19@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final AlterTableContext ctx@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "each instanceof AddColumnDefinitionSegment@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "createDefinitions.getValue()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "result.getConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableName()))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "null != ctx.createDefinitionClause()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return result@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "result.getModifyConstraintDefinitions().add((ModifyConstraintDefinitionSegment)each)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "result.getDropColumnDefinitions().add((DropColumnDefinitionSegment)each)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "result.getAddConstraintDefinitions().add((AddConstraintDefinitionSegment)each)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "visitCreateTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "each instanceof ColumnDefinitionSegment@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "each instanceof AddConstraintDefinitionSegment@@@16@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "null != ctx.alterDefinitionClause()@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "result.getColumnDefinitions().add((ColumnDefinitionSegment)each)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "result.getAddConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "OracleAlterTableStatement result = new OracleAlterTableStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "AlterDefinitionSegment each@@@6@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "each instanceof DropConstraintDefinitionSegment@@@22@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "result.setContainsNotExistClause(null != ctx.notExistClause())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@16@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "result.getAddColumnDefinitions().add((AddColumnDefinitionSegment)each)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final CreateTableContext ctx@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return result@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "CreateDefinitionSegment each@@@8@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "((CollectionValue<AlterDefinitionSegment>)visit(ctx.alterDefinitionClause())).getValue()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "CollectionValue<CreateDefinitionSegment> createDefinitions = (CollectionValue<CreateDefinitionSegment>)visit(ctx.createDefinitionClause())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "visitAlterTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "each instanceof DropColumnDefinitionSegment@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "result.getModifyColumnDefinitions().add((ModifyColumnDefinitionSegment)each)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "result.getDropConstraintDefinitions().add((DropConstraintDefinitionSegment)each)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "((CollectionValue<AlterDefinitionSegment>)visit(ctx.alterDefinitionClause())).getValue()@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "visitAlterTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21->10 [style = bold, label=""];
15->10 [style = bold, label=""];
11->20 [style = dashed, label="0"];
24->35 [style = dotted, label="true"];
4->15 [style = bold, label=""];
21->8 [style = bold, label=""];
0->2 [style = dotted, label="false"];
0->6 [style = dotted, label="true"];
15->9 [style = dotted, label="true"];
8->0 [style = bold, label=""];
22->8 [style = bold, label=""];
19->5 [style = bold, label=""];
12->10 [style = bold, label=""];
20->16 [style = bold, label=""];
31->35 [style = bold, label=""];
15->8 [style = dotted, label="true"];
26->35 [style = bold, label=""];
20->18 [style = dotted, label="true"];
2->11 [style = dotted, label="false"];
8->0 [style = dotted, label="false"];
27->25 [style = bold, label=""];
26->36 [style = dotted, label="true"];
2->20 [style = bold, label=""];
16->21 [style = dotted, label="false"];
3->36 [style = dashed, label="0"];
7->13 [style = dotted, label="true"];
5->10 [style = solid, label="result"];
21->22 [style = dotted, label="true"];
12->30 [style = dashed, label="0"];
23->8 [style = bold, label=""];
15->14 [style = dotted, label="true"];
15->17 [style = dotted, label="true"];
20->18 [style = bold, label=""];
3->10 [style = bold, label=""];
7->5 [style = bold, label=""];
36->25 [style = bold, label=""];
8->12 [style = dotted, label="true"];
21->22 [style = bold, label=""];
5->33 [style = dashed, label="0"];
23->10 [style = bold, label=""];
11->8 [style = bold, label=""];
36->35 [style = bold, label=""];
1->8 [style = bold, label=""];
2->20 [style = dotted, label="false"];
29->34 [style = dotted, label="true"];
2->1 [style = bold, label=""];
33->4 [style = bold, label=""];
20->16 [style = dotted, label="false"];
15->32 [style = dashed, label="0"];
24->30 [style = dotted, label="true"];
16->23 [style = bold, label=""];
27->35 [style = bold, label=""];
18->10 [style = bold, label=""];
24->31 [style = bold, label=""];
11->3 [style = bold, label=""];
11->10 [style = bold, label=""];
12->8 [style = bold, label=""];
24->25 [style = bold, label=""];
3->8 [style = bold, label=""];
6->10 [style = bold, label=""];
5->4 [style = bold, label=""];
22->10 [style = bold, label=""];
18->8 [style = bold, label=""];
11->3 [style = dotted, label="true"];
13->34 [style = dashed, label="0"];
35->26 [style = bold, label=""];
15->8 [style = bold, label=""];
8->12 [style = bold, label=""];
2->11 [style = bold, label=""];
35->27 [style = bold, label=""];
33->25 [style = solid, label="result"];
0->6 [style = bold, label=""];
3->18 [style = dashed, label="0"];
26->36 [style = bold, label=""];
26->25 [style = bold, label=""];
0->2 [style = bold, label=""];
24->31 [style = dotted, label="true"];
19->13 [style = dotted, label="true"];
24->28 [style = dotted, label="true"];
16->23 [style = dotted, label="true"];
35->27 [style = dotted, label="true"];
29->33 [style = bold, label=""];
35->26 [style = dotted, label="false"];
2->1 [style = dotted, label="true"];
16->21 [style = bold, label=""];
6->8 [style = bold, label=""];
8->31 [style = dashed, label="0"];
1->10 [style = bold, label=""];
32->24 [style = bold, label=""];
4->32 [style = bold, label=""];
}
