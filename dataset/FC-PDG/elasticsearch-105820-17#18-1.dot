digraph {
12 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty())@@@55@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(42,searchResponse.getHits().getAt(1).docId())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(1,searchResponse.getHits().getHits().length)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "int resultSetSize = 1@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "results.consumeResult(queryResult)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(2,searchResponse.getHits().getTotalHits().value)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(2,searchResponse.getSuccessfulShards())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ArraySearchPhaseResults<SearchPhaseResult> results = controller.newSearchPhaseResults(NOOP,mockSearchPhaseContext.getRequest(),2)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testFetchTwoDocument['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "queryResult.size(resultSetSize)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int resultSetSize = randomIntBetween(2,10)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "FetchSearchPhase phase = new FetchSearchPhase(results,controller,mockSearchPhaseContext,null)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SearchPhaseController controller = new SearchPhaseController(null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testCleanupIrrelevantContexts['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "SearchResponse searchResponse = mockSearchPhaseContext.searchResponse.get()@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.releasedSearchContexts.size())@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "phase.run()@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "mockSearchPhaseContext.assertNoFailure()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "queryResult = new QuerySearchResult(321,new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",1),null,OriginalIndices.NONE))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ArraySearchPhaseResults<SearchPhaseResult> results = controller.newSearchPhaseResults(mockSearchPhaseContext.getRequest(),2)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "results.consumeResult(queryResult)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(2,searchResponse.getSuccessfulShards())@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "FetchSearchPhase phase = new FetchSearchPhase(results,controller,mockSearchPhaseContext,null)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "queryResult.setShardIndex(1)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123b19a),2.0F),new DocValueFormat(((()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "mockSearchPhaseContext.searchTransport = new SearchTransportService(null,null){@Override public void sendExecuteFetch(Transport.Connection connection,ShardFetchSearchRequest request,SearchTask task,SearchActionListener<FetchSearchResult> listener){FetchSearchResult fetchResult = new FetchSearchResult()if (request.id() == 321) {fetchResult.hits(new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123b1dc,new TotalHits(1,TotalHits.Relation.EQUAL_TO),2.0F))}{fail(\"requestID 123 should not be fetched but was\")}listener.onResponse(fetchResult)}}@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.contains(123L))@@@53@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(84,searchResponse.getHits().getAt(0).docId())@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123b15e),2.0F),new DocValueFormat(((()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "QuerySearchResult queryResult = new QuerySearchResult(123,new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertNotNull(searchResponse)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "queryResult.size(resultSetSize)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(\"fetch\",phase.getName())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testFetchTwoDocument['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertEquals(0,searchResponse.getFailedShards())@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "queryResult.setShardIndex(0)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
14->16 [style = bold, label=""];
32->5 [style = bold, label=""];
22->33 [style = solid, label="results"];
35->27 [style = bold, label=""];
15->13 [style = bold, label=""];
2->19 [style = bold, label=""];
22->1 [style = solid, label="results"];
4->25 [style = bold, label=""];
7->12 [style = bold, label=""];
10->27 [style = bold, label=""];
16->20 [style = solid, label="queryResult"];
31->32 [style = bold, label=""];
25->9 [style = bold, label=""];
3->14 [style = bold, label=""];
30->23 [style = bold, label=""];
23->15 [style = bold, label=""];
29->0 [style = bold, label=""];
0->13 [style = solid, label="resultSetSize"];
5->26 [style = bold, label=""];
11->29 [style = bold, label=""];
10->35 [style = bold, label=""];
22->29 [style = dashed, label="0"];
19->10 [style = bold, label=""];
9->20 [style = bold, label=""];
34->31 [style = bold, label=""];
2->19 [style = solid, label="searchResponse"];
29->1 [style = solid, label="results"];
26->6 [style = bold, label=""];
22->30 [style = bold, label=""];
23->14 [style = solid, label="queryResult"];
30->25 [style = solid, label="resultSetSize"];
0->25 [style = solid, label="resultSetSize"];
6->2 [style = bold, label=""];
17->7 [style = bold, label=""];
11->33 [style = solid, label="controller"];
24->33 [style = bold, label=""];
11->1 [style = solid, label="controller"];
30->13 [style = solid, label="resultSetSize"];
5->26 [style = solid, label="searchResponse"];
0->23 [style = bold, label=""];
22->0 [style = bold, label=""];
13->3 [style = bold, label=""];
8->1 [style = solid, label="mockSearchPhaseContext"];
28->8 [style = bold, label=""];
0->30 [style = dashed, label="0"];
12->27 [style = dashed, label="0"];
27->17 [style = bold, label=""];
8->33 [style = solid, label="mockSearchPhaseContext"];
11->22 [style = bold, label=""];
36->8 [style = bold, label=""];
18->8 [style = bold, label=""];
24->1 [style = bold, label=""];
16->4 [style = bold, label=""];
20->24 [style = bold, label=""];
8->11 [style = bold, label=""];
27->21 [style = bold, label=""];
21->17 [style = bold, label=""];
33->34 [style = bold, label=""];
}
