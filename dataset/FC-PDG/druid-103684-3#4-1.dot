digraph {
6 [style = filled, label = "Runnable restartRunnable@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "secondsToGenerateRemaining = secondsToGenerateRemaining - secondsToGenerateFirstRound@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "int newShardCount@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "boolean transactionEnabled@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Runnable waitForReadyRunnable@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "LOG.info(\"Druid process is now available\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ITRetryUtil.retryUntil(null,true,10000,30,\"Waiting for stream to finish resharding\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "restartRunnable.run()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testIndexWithStreamReshardHelper['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "LOG.info(\"Submitted supervisor\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final StreamGenerator streamGenerator = new WikipediaStreamEventStreamGenerator(new JsonEventSerializer(jsonMapper),EVENTS_PER_SECOND,CYCLE_PADDING_MS)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "int secondsToGenerateSecondRound = TOTAL_NUMBER_OF_SECOND / 3@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "LOG.info(\"supervisorSpec: (%s(\",taskSpec)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "wikipediaStreamEventGenerator.run(generatedTestConfig.getStreamName(),streamEventWriter,secondsToGenerateRemaining,FIRST_EVENT_TIME.plusSeconds(secondsToGenerateFirstRound + secondsToGenerateSecondRound))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ITRetryUtil.retryUntil(null,true,10000,30,\"Waiting for supervisor to be healthy\")@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "generatedTestConfig.setSupervisorId(indexer.submitSupervisor(taskSpec))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "streamAdminClient.updatePartitionCount(generatedTestConfig.getStreamName(),newShardCount,true)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final String taskSpec = generatedTestConfig.getStreamIngestionPropsTransform().apply(getResourceAsString(INDEXER_FILE_INPUT_FORMAT))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "{doMethodTeardown(generatedTestConfig,streamEventWriter)}@@@25@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Runnable restartRunnable@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "final GeneratedTestConfig generatedTestConfig = new GeneratedTestConfig(INPUT_FORMAT,getResourceAsString(JSON_INPUT_FORMAT_PATH))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "wikipediaStreamEventGenerator.run(generatedTestConfig.getStreamName(),streamEventWriter,secondsToGenerateFirstRound,FIRST_EVENT_TIME)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "{doMethodTeardown(generatedTestConfig,streamEventWriter)}@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "LOG.info(\"Restarting Druid process\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testIndexWithLosingNodeHelper['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "int secondsToGenerateFirstRound = TOTAL_NUMBER_OF_SECOND / 3@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int secondsToGenerateRemaining = TOTAL_NUMBER_OF_SECOND@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "streamGenerator.run(generatedTestConfig.getStreamName(),streamEventWriter,secondsToGenerateFirstRound,FIRST_EVENT_TIME)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "verifyIngestedData(generatedTestConfig)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ITRetryUtil.retryUntil(null,true,10000,30,\"Waiting for supervisor to be healthy\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "streamGenerator.run(generatedTestConfig.getStreamName(),streamEventWriter,secondsToGenerateSecondRound,FIRST_EVENT_TIME.plusSeconds(secondsToGenerateFirstRound))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "final String taskSpec = generatedTestConfig.getStreamIngestionPropsTransform().apply(getResourceAsString(SUPERVISOR_SPEC_TEMPLATE_PATH))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "LOG.info(\"Waiting for Druid process to be available\")@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Runnable waitForReadyRunnable@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "LOG.info(\"Waiting for Druid process to be available\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "StreamEventWriter streamEventWriter = createStreamEventWriter(config)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testIndexWithLosingNodeHelper['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "waitForReadyRunnable.run()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "ITRetryUtil.retryUntil(null,true,10000,30,\"Waiting for supervisor to be healthy\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "streamGenerator.run(generatedTestConfig.getStreamName(),streamEventWriter,secondsToGenerateRemaining,FIRST_EVENT_TIME.plusSeconds(secondsToGenerateFirstRound + secondsToGenerateSecondRound))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "verifyIngestedData(generatedTestConfig)@@@27@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "secondsToGenerateRemaining = secondsToGenerateRemaining - secondsToGenerateSecondRound@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ITRetryUtil.retryUntil(null,true,10000,30,\"Waiting for supervisor to be healthy\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "wikipediaStreamEventGenerator.run(generatedTestConfig.getStreamName(),streamEventWriter,secondsToGenerateSecondRound,FIRST_EVENT_TIME.plusSeconds(secondsToGenerateFirstRound))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ITRetryUtil.retryUntil(null,true,10000,30,\"Waiting for stream to finish resharding\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final GeneratedTestConfig generatedTestConfig = new GeneratedTestConfig()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->32 [style = bold, label=""];
25->22 [style = bold, label=""];
7->18 [style = solid, label="secondsToGenerateRemaining"];
38->42 [style = solid, label="secondsToGenerateSecondRound"];
1->20 [style = bold, label=""];
9->27 [style = dashed, label="0"];
21->16 [style = solid, label="streamEventWriter"];
7->16 [style = solid, label="secondsToGenerateRemaining"];
16->33 [style = solid, label="secondsToGenerateRemaining"];
4->33 [style = dashed, label="0"];
38->19 [style = solid, label="secondsToGenerateSecondRound"];
33->0 [style = bold, label=""];
30->11 [style = bold, label=""];
45->42 [style = solid, label="secondsToGenerateRemaining"];
43->24 [style = bold, label=""];
44->40 [style = dotted, label="true"];
2->15 [style = bold, label=""];
9->25 [style = solid, label="taskSpec"];
15->41 [style = bold, label=""];
21->42 [style = solid, label="streamEventWriter"];
16->42 [style = bold, label=""];
21->24 [style = solid, label="streamEventWriter"];
34->37 [style = dotted, label="true"];
13->2 [style = solid, label="secondsToGenerateFirstRound"];
27->25 [style = bold, label=""];
36->28 [style = solid, label="generatedTestConfig"];
10->18 [style = dashed, label="0"];
13->30 [style = solid, label="secondsToGenerateFirstRound"];
21->3 [style = bold, label=""];
10->11 [style = bold, label=""];
19->18 [style = bold, label=""];
44->21 [style = bold, label=""];
12->37 [style = dashed, label="0"];
20->7 [style = solid, label="secondsToGenerateRemaining"];
24->0 [style = bold, label=""];
0->17 [style = bold, label=""];
9->22 [style = solid, label="taskSpec"];
26->14 [style = bold, label=""];
21->17 [style = solid, label="streamEventWriter"];
3->24 [style = solid, label="generatedTestConfig"];
38->45 [style = bold, label=""];
27->25 [style = solid, label="taskSpec"];
29->23 [style = bold, label=""];
34->31 [style = dotted, label="true"];
8->12 [style = dotted, label="true"];
7->2 [style = bold, label=""];
34->36 [style = bold, label=""];
41->38 [style = bold, label=""];
19->4 [style = solid, label="secondsToGenerateSecondRound"];
18->33 [style = solid, label="secondsToGenerateSecondRound"];
21->4 [style = solid, label="streamEventWriter"];
13->4 [style = solid, label="secondsToGenerateFirstRound"];
21->19 [style = solid, label="streamEventWriter"];
20->13 [style = bold, label=""];
4->24 [style = bold, label=""];
13->16 [style = solid, label="secondsToGenerateFirstRound"];
42->39 [style = bold, label=""];
14->19 [style = bold, label=""];
4->33 [style = bold, label=""];
18->16 [style = solid, label="secondsToGenerateSecondRound"];
19->16 [style = solid, label="secondsToGenerateSecondRound"];
3->9 [style = bold, label=""];
11->5 [style = bold, label=""];
21->2 [style = solid, label="streamEventWriter"];
7->45 [style = solid, label="secondsToGenerateRemaining"];
19->18 [style = solid, label="secondsToGenerateSecondRound"];
8->6 [style = dotted, label="true"];
16->30 [style = dashed, label="0"];
34->35 [style = dotted, label="true"];
38->45 [style = solid, label="secondsToGenerateSecondRound"];
16->30 [style = bold, label=""];
5->4 [style = bold, label=""];
3->17 [style = solid, label="generatedTestConfig"];
13->33 [style = solid, label="secondsToGenerateFirstRound"];
22->1 [style = bold, label=""];
18->16 [style = bold, label=""];
15->23 [style = bold, label=""];
27->22 [style = solid, label="taskSpec"];
18->4 [style = solid, label="secondsToGenerateRemaining"];
3->0 [style = solid, label="generatedTestConfig"];
16->10 [style = bold, label=""];
39->43 [style = bold, label=""];
23->26 [style = bold, label=""];
18->30 [style = solid, label="secondsToGenerateSecondRound"];
32->29 [style = bold, label=""];
40->41 [style = solid, label="newShardCount"];
36->27 [style = bold, label=""];
12->40 [style = dashed, label="0"];
45->19 [style = bold, label=""];
13->7 [style = bold, label=""];
9->25 [style = bold, label=""];
13->19 [style = solid, label="secondsToGenerateFirstRound"];
13->42 [style = solid, label="secondsToGenerateFirstRound"];
8->21 [style = bold, label=""];
3->43 [style = solid, label="generatedTestConfig"];
13->7 [style = solid, label="secondsToGenerateFirstRound"];
0->28 [style = bold, label=""];
13->29 [style = solid, label="secondsToGenerateFirstRound"];
}
