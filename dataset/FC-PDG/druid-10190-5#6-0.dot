digraph {
20 [style = filled, label = "Assert.assertFalse(target.hasMore())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testNextRowWithRawParseable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "InputRowListPlusJson rowPlusRaw = target.nextRowWithRaw()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(expected,raw)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "final String data = PARSEABLE@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testMultiline['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertRawValue(LINE_1,rowPlusRaw.getRaw())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "byte(( raw = rowPlusRaw.getRaw()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertRowValue(VALUE_0,row0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertRawValue(data,raw)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Map<String,Object> expected = new HashMap<>()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Assert.assertNull(rowPlusRaw.getParseException())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertTrue(target.hasMore())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "InputRow row = Iterables.getOnlyElement(rowPlusRaw.getInputRows())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "InputRowListPlusJson rowPlusRaw = target.nextRowWithRaw()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Map<String,Object> raw = rowPlusRaw.getRawValues()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "InputRow row0 = target.nextRow()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "InlineFirehose target = create(MULTILINE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "InputRowListPlusRawValues rowPlusRaw = target.nextRowWithRaw()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "expected.put(\"timestamp\",TIMESTAMP_0)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testNextRowWithRawParseable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "InputRow row = rowPlusRaw.getInputRow()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertRowValue(VALUE_1,rowPlusRaw.getInputRow())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertNull(rowPlusRaw.getParseException())@@@10@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "InlineFirehose target = create(data)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertNull(rowPlusRaw.getParseException())@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "expected.put(\"value\",VALUE_0)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6->17 [style = bold, label=""];
5->6 [style = solid, label="data"];
11->16 [style = bold, label=""];
1->8 [style = bold, label=""];
18->23 [style = bold, label=""];
22->19 [style = bold, label=""];
8->15 [style = dashed, label="0"];
8->3 [style = bold, label=""];
8->3 [style = solid, label="row"];
23->26 [style = bold, label=""];
3->12 [style = bold, label=""];
9->10 [style = bold, label=""];
15->3 [style = bold, label=""];
22->19 [style = solid, label="row0"];
13->11 [style = bold, label=""];
12->9 [style = solid, label="raw"];
0->7 [style = bold, label=""];
3->18 [style = bold, label=""];
3->23 [style = dashed, label="0"];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
25->24 [style = bold, label=""];
2->12 [style = dashed, label="0"];
2->0 [style = bold, label=""];
1->17 [style = dashed, label="0"];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = solid, label="data"];
24->21 [style = bold, label=""];
21->22 [style = bold, label=""];
15->3 [style = solid, label="row"];
17->15 [style = bold, label=""];
2->0 [style = solid, label="raw"];
8->18 [style = dashed, label="0"];
13->9 [style = solid, label="expected"];
4->5 [style = bold, label=""];
19->3 [style = bold, label=""];
16->9 [style = bold, label=""];
26->20 [style = bold, label=""];
14->5 [style = bold, label=""];
}
