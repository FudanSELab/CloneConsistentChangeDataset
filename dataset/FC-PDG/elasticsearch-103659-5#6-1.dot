digraph {
14 [style = filled, label = "testCustomMetaDataNoChange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertFalse(metadata.hasIndexMetadata(indexMetadata))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Metadata upgrade = GatewayMetaState.upgradeMetadata(metadata,new MockMetadataIndexUpgradeService(true),metadataUpgrader)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "MetaData upgrade = GatewayMetaState.upgradeMetaData(metaData,new MockMetaDataIndexUpgradeService(false),metaDataUpgrader)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(MetaData.isGlobalStateEquals(upgrade,metaData))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(Metadata.isGlobalStateEquals(upgrade,metadata))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertTrue(metaData.hasIndexMetaData(indexMetaData))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertNotSame(upgrade,metadata)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "MetaData upgrade = GatewayMetaState.upgradeMetaData(metaData,new MockMetaDataIndexUpgradeService(true),metaDataUpgrader)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "MetaData metaData = randomMetaData(new CustomMetaData1(\"data\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "MetadataUpgrader metadataUpgrader = new MetadataUpgrader(Collections.emptyList())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "MetaData metaData = randomMetaData()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "Metadata metadata = randomMetadata()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertSame(upgrade,metaData)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "MetaDataUpgrader metaDataUpgrader = new MetaDataUpgrader(Collections.emptyList())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "testIndexMetadataUpgrade['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "MetaDataUpgrader metaDataUpgrader = new MetaDataUpgrader(Collections.singletonList(null))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFalse(metaData.hasIndexMetaData(indexMetaData))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertNotSame(upgrade,metaData)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "testIndexMetaDataUpgrade['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
6->4 [style = solid, label="metaData"];
15->5 [style = solid, label="metaData"];
7->11 [style = bold, label=""];
3->17 [style = dashed, label="0"];
4->16 [style = dashed, label="0"];
2->4 [style = solid, label="metaDataUpgrader"];
18->16 [style = solid, label="metaDataUpgrader"];
0->19 [style = dashed, label="0"];
15->19 [style = solid, label="metaData"];
13->10 [style = solid, label="metadata"];
10->7 [style = solid, label="upgrade"];
4->5 [style = solid, label="upgrade"];
13->7 [style = solid, label="metadata"];
9->10 [style = bold, label=""];
16->5 [style = solid, label="upgrade"];
16->19 [style = bold, label=""];
5->17 [style = bold, label=""];
2->4 [style = bold, label=""];
15->18 [style = bold, label=""];
4->0 [style = solid, label="upgrade"];
8->7 [style = bold, label=""];
4->0 [style = bold, label=""];
6->2 [style = bold, label=""];
19->5 [style = bold, label=""];
12->13 [style = bold, label=""];
1->6 [style = bold, label=""];
10->8 [style = solid, label="upgrade"];
6->13 [style = dashed, label="0"];
10->8 [style = bold, label=""];
13->8 [style = solid, label="metadata"];
2->9 [style = dashed, label="0"];
6->15 [style = dashed, label="0"];
6->0 [style = solid, label="metaData"];
15->16 [style = solid, label="metaData"];
2->18 [style = dashed, label="0"];
0->8 [style = dashed, label="0"];
14->15 [style = bold, label=""];
13->9 [style = bold, label=""];
5->7 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
9->10 [style = solid, label="metadataUpgrader"];
6->5 [style = solid, label="metaData"];
3->11 [style = dashed, label="0"];
16->19 [style = solid, label="upgrade"];
0->5 [style = bold, label=""];
18->16 [style = bold, label=""];
}
