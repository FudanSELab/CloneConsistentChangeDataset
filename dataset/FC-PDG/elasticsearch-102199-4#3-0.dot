digraph {
50 [style = filled, label = "MetaData metaData = MetaData.builder().put(IndexMetaData.builder(\"test1\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)).put(IndexMetaData.builder(\"test2\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)).build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "clusterState = startInitializingShardsAndReroute(strategy,clusterState,\"test2\")@@@73@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
63 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).shards().size(),equalTo(2))@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(\"test2\",INITIALIZING))@@@80@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
104 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@63@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "logger.info(\"start the test1 replica shards\")@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "i++@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@59@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
70 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).replicaShards().get(0).state(),equalTo(UNASSIGNED))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).shards().size(),equalTo(2))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@29@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "RoutingNodes routingNodes = clusterState.getRoutingNodes()@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node3\"))).build()@@@97@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "i++@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i++@@@55@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(\"test1\",INITIALIZING))@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "AllocationService strategy = createAllocationService(Settings.builder().put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),ClusterRebalanceAllocationDecider.ClusterRebalanceType.INDICES_PRIMARIES_ACTIVE.toString()).build())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "i < clusterState.routingTable().index(\"test2\").shards().size()@@@82@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "int i = 0@@@81@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
94 [style = filled, label = "logger.info(\"now, start 1 more node, check that rebalancing happen (for test1) because we set it to all_active\")@@@88@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
88 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(\"test2\",INITIALIZING))@@@62@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "AllocationService strategy = createAllocationService(Settings.builder().put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),ClusterRebalanceAllocationDecider.ClusterRebalanceType.INDICES_ALL_ACTIVE.toString()).build())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(initialRoutingTable).build()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "i++@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@77@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i < clusterState.routingTable().index(\"test2\").shards().size()@@@66@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "int i = 0@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
103 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).shards().size(),equalTo(2))@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "int i = 0@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "i++@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "i++@@@48@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@81@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
92 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@27@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
83 [style = filled, label = "testClusterAllActive1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "logger.info(\"start the test2 replica shards\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "logger.info(\"start two nodes\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@79@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).shards().size(),equalTo(2))@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "int i = 0@@@71@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "logger.info(\"start all the primary shards for test1, replicas will start initializing\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "assertThat(routingNodes.node(\"node3\").isEmpty(),equalTo(true))@@@64@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
113 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "int i = 0@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).primaryShard().state(),equalTo(STARTED))@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@43@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "int i = 0@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(routingNodes.node(\"node3\").iterator().next().shardId().getIndex().getName(),anyOf(equalTo(\"test1\"),equalTo(\"test2\")))@@@93@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(routingNodes.node(\"node3\").size(),equalTo(1))@@@100@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "RoutingNodes routingNodes = clusterState.getRoutingNodes()@@@91@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node3\"))).build()@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "clusterState = startInitializingShardsAndReroute(strategy,clusterState,\"test1\")@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
81 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@39@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@79@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "i < clusterState.routingTable().index(\"test2\").shards().size()@@@54@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).primaryShard().state(),equalTo(STARTED))@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(UNASSIGNED))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "i++@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "logger.info(\"now, start 1 more node, check that rebalancing happen (for test1) because we set it to all_active\")@@@96@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(INITIALIZING))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "clusterState = startInitializingShardsAndReroute(strategy,clusterState,\"test1\")@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
107 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@61@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(\"test1\",INITIALIZING))@@@44@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@94@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@62@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
79 [style = filled, label = "int i = 0@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).shards().size(),equalTo(2))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
112 [style = filled, label = "testClusterPrimariesActive2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@61@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "int i = 0@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@99@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@63@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
74 [style = filled, label = "i < clusterState.routingTable().index(\"test2\").shards().size()@@@36@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "testClusterAllActive1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "int i = 0@@@64@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).replicaShards().get(0).state(),equalTo(UNASSIGNED))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "int i = 0@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "i++@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertThat(routingNodes.node(\"node3\").size(),equalTo(1))@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@47@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).shards().size(),equalTo(2))@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).replicaShards().get(0).state(),equalTo(INITIALIZING))@@@70@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertThat(routingNodes.node(\"node3\").iterator().next().shardId().getIndex().getName(),anyOf(equalTo(\"test1\"),equalTo(\"test2\")))@@@101@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "logger.info(\"now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to primaries_active\")@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
111 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node3\"))).build()@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "i < clusterState.routingTable().index(\"test2\").shards().size()@@@34@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
72 [style = filled, label = "i++@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "i++@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "RoutingTable initialRoutingTable = RoutingTable.builder().addAsNew(metaData.index(\"test1\")).addAsNew(metaData.index(\"test2\")).build()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).replicaShards().get(0).state(),equalTo(UNASSIGNED))@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@87@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "i < clusterState.routingTable().index(\"test2\").shards().size()@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@45@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@98@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@75@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->78 [style = bold, label=""];
100->92 [style = solid, label="i"];
13->31 [style = solid, label="i"];
2->95 [style = bold, label=""];
73->74 [style = solid, label="i"];
43->68 [style = dotted, label="true"];
95->44 [style = bold, label=""];
4->25 [style = bold, label=""];
52->75 [style = dotted, label="true"];
75->52 [style = solid, label="i"];
102->29 [style = bold, label=""];
84->33 [style = bold, label=""];
20->70 [style = bold, label=""];
73->74 [style = bold, label=""];
91->104 [style = bold, label=""];
37->58 [style = dotted, label="true"];
35->51 [style = solid, label="i"];
108->3 [style = bold, label=""];
107->91 [style = bold, label=""];
32->71 [style = dotted, label="true"];
73->21 [style = bold, label=""];
89->10 [style = bold, label=""];
33->88 [style = bold, label=""];
98->9 [style = bold, label=""];
92->2 [style = bold, label=""];
74->81 [style = dotted, label="true"];
74->21 [style = bold, label=""];
70->51 [style = bold, label=""];
100->92 [style = bold, label=""];
114->111 [style = bold, label=""];
87->36 [style = dotted, label="true"];
108->84 [style = dotted, label="true"];
3->76 [style = bold, label=""];
78->4 [style = bold, label=""];
85->82 [style = solid, label="i"];
49->87 [style = dotted, label="true"];
92->72 [style = dotted, label="true"];
69->80 [style = dashed, label="0"];
34->68 [style = bold, label=""];
58->17 [style = bold, label=""];
51->38 [style = solid, label="i"];
78->4 [style = solid, label="i"];
11->98 [style = solid, label="strategy"];
27->68 [style = bold, label=""];
60->47 [style = bold, label=""];
18->78 [style = solid, label="clusterState"];
3->41 [style = dotted, label="true"];
34->27 [style = dotted, label="true"];
76->4 [style = bold, label=""];
0->108 [style = bold, label=""];
86->66 [style = solid, label="i"];
65->37 [style = bold, label=""];
52->25 [style = dotted, label="true"];
49->13 [style = bold, label=""];
13->36 [style = bold, label=""];
95->74 [style = bold, label=""];
59->39 [style = dotted, label="true"];
79->75 [style = solid, label="i"];
4->79 [style = bold, label=""];
75->52 [style = bold, label=""];
11->18 [style = solid, label="strategy"];
54->14 [style = solid, label="clusterState"];
22->74 [style = solid, label="i"];
38->26 [style = bold, label=""];
74->9 [style = bold, label=""];
35->38 [style = bold, label=""];
32->4 [style = bold, label=""];
81->44 [style = bold, label=""];
95->21 [style = dotted, label="true"];
92->30 [style = dotted, label="true"];
32->3 [style = bold, label=""];
74->44 [style = dotted, label="true"];
75->78 [style = bold, label=""];
8->57 [style = bold, label=""];
64->43 [style = bold, label=""];
18->0 [style = bold, label=""];
105->100 [style = bold, label=""];
65->37 [style = solid, label="i"];
11->105 [style = solid, label="strategy"];
80->58 [style = bold, label=""];
43->27 [style = solid, label="i"];
37->80 [style = dotted, label="true"];
28->88 [style = solid, label="clusterState"];
36->0 [style = dotted, label="true"];
38->46 [style = dotted, label="true"];
31->36 [style = solid, label="i"];
36->63 [style = bold, label=""];
19->34 [style = bold, label=""];
62->30 [style = dotted, label="true"];
29->49 [style = solid, label="i"];
3->71 [style = dotted, label="true"];
10->64 [style = bold, label=""];
106->75 [style = bold, label=""];
82->59 [style = bold, label=""];
63->18 [style = bold, label=""];
43->94 [style = bold, label=""];
71->41 [style = bold, label=""];
37->58 [style = bold, label=""];
44->73 [style = bold, label=""];
62->30 [style = bold, label=""];
62->15 [style = dotted, label="true"];
38->20 [style = dotted, label="true"];
32->96 [style = dotted, label="true"];
56->62 [style = bold, label=""];
96->71 [style = bold, label=""];
16->32 [style = bold, label=""];
32->3 [style = solid, label="i"];
76->78 [style = solid, label="i"];
34->7 [style = dotted, label="true"];
55->5 [style = bold, label=""];
109->113 [style = bold, label=""];
36->84 [style = bold, label=""];
36->31 [style = dotted, label="true"];
57->24 [style = bold, label=""];
4->52 [style = dotted, label="true"];
99->43 [style = bold, label=""];
89->78 [style = dashed, label="0"];
87->63 [style = bold, label=""];
25->106 [style = bold, label=""];
82->59 [style = solid, label="i"];
34->19 [style = dotted, label="true"];
92->62 [style = dotted, label="true"];
21->81 [style = bold, label=""];
101->102 [style = dotted, label="true"];
79->52 [style = bold, label=""];
101->102 [style = bold, label=""];
9->90 [style = solid, label="i"];
5->6 [style = bold, label=""];
61->80 [style = bold, label=""];
21->22 [style = bold, label=""];
43->34 [style = solid, label="i"];
59->82 [style = dotted, label="true"];
72->62 [style = solid, label="i"];
59->35 [style = bold, label=""];
3->71 [style = bold, label=""];
103->13 [style = bold, label=""];
43->27 [style = bold, label=""];
71->32 [style = bold, label=""];
56->92 [style = bold, label=""];
0->108 [style = solid, label="i"];
99->43 [style = solid, label="i"];
95->22 [style = dotted, label="true"];
99->34 [style = solid, label="i"];
72->30 [style = bold, label=""];
34->68 [style = dotted, label="true"];
38->46 [style = bold, label=""];
46->20 [style = bold, label=""];
56->72 [style = solid, label="i"];
101->86 [style = bold, label=""];
77->49 [style = solid, label="i"];
100->56 [style = solid, label="i"];
66->87 [style = solid, label="i"];
65->37 [style = solid, label="clusterState"];
2->95 [style = solid, label="i"];
27->34 [style = solid, label="i"];
43->34 [style = bold, label=""];
59->48 [style = bold, label=""];
36->66 [style = bold, label=""];
67->45 [style = bold, label=""];
49->86 [style = dotted, label="true"];
4->79 [style = dotted, label="true"];
0->84 [style = solid, label="i"];
0->31 [style = bold, label=""];
30->15 [style = bold, label=""];
14->5 [style = solid, label="clusterState"];
76->4 [style = solid, label="i"];
13->36 [style = solid, label="i"];
101->90 [style = dotted, label="true"];
42->98 [style = dashed, label="0"];
44->98 [style = bold, label=""];
98->18 [style = solid, label="clusterState"];
59->23 [style = dotted, label="true"];
62->22 [style = bold, label=""];
9->42 [style = bold, label=""];
47->3 [style = bold, label=""];
24->69 [style = bold, label=""];
79->52 [style = solid, label="i"];
49->66 [style = dotted, label="true"];
62->2 [style = dotted, label="true"];
78->79 [style = bold, label=""];
59->48 [style = dotted, label="true"];
92->56 [style = dotted, label="true"];
31->36 [style = bold, label=""];
84->108 [style = bold, label=""];
29->49 [style = bold, label=""];
2->22 [style = solid, label="i"];
108->107 [style = dotted, label="true"];
69->40 [style = bold, label=""];
108->107 [style = bold, label=""];
3->32 [style = solid, label="i"];
14->105 [style = solid, label="clusterState"];
80->37 [style = bold, label=""];
66->87 [style = bold, label=""];
16->96 [style = bold, label=""];
37->61 [style = dotted, label="true"];
34->65 [style = bold, label=""];
43->27 [style = dotted, label="true"];
26->105 [style = bold, label=""];
26->55 [style = bold, label=""];
88->60 [style = bold, label=""];
65->80 [style = solid, label="i"];
40->12 [style = bold, label=""];
48->23 [style = bold, label=""];
55->105 [style = dashed, label="0"];
6->56 [style = bold, label=""];
27->34 [style = bold, label=""];
111->109 [style = bold, label=""];
4->78 [style = dotted, label="true"];
88->10 [style = solid, label="clusterState"];
57->24 [style = solid, label="clusterState"];
49->90 [style = bold, label=""];
52->106 [style = dotted, label="true"];
80->37 [style = solid, label="i"];
90->101 [style = solid, label="i"];
23->39 [style = bold, label=""];
56->92 [style = solid, label="i"];
86->87 [style = solid, label="i"];
11->50 [style = bold, label=""];
101->49 [style = dotted, label="true"];
108->104 [style = dotted, label="true"];
41->16 [style = bold, label=""];
32->41 [style = bold, label=""];
39->82 [style = bold, label=""];
36->114 [style = bold, label=""];
35->38 [style = solid, label="i"];
42->28 [style = bold, label=""];
1->29 [style = bold, label=""];
37->8 [style = bold, label=""];
56->62 [style = solid, label="i"];
34->43 [style = bold, label=""];
105->98 [style = solid, label="clusterState"];
84->108 [style = solid, label="i"];
36->18 [style = dotted, label="true"];
53->67 [style = bold, label=""];
113->110 [style = bold, label=""];
54->14 [style = bold, label=""];
47->32 [style = solid, label="i"];
33->18 [style = dashed, label="0"];
108->91 [style = dotted, label="true"];
2->72 [style = bold, label=""];
92->62 [style = bold, label=""];
9->101 [style = solid, label="i"];
66->77 [style = bold, label=""];
83->11 [style = bold, label=""];
72->62 [style = bold, label=""];
112->115 [style = bold, label=""];
15->2 [style = bold, label=""];
17->61 [style = bold, label=""];
36->63 [style = dotted, label="true"];
40->110 [style = dashed, label="0"];
3->32 [style = dotted, label="true"];
37->80 [style = bold, label=""];
32->41 [style = dotted, label="true"];
3->71 [style = solid, label="i"];
22->74 [style = bold, label=""];
22->95 [style = bold, label=""];
74->73 [style = dotted, label="true"];
52->75 [style = bold, label=""];
52->93 [style = bold, label=""];
74->73 [style = bold, label=""];
87->103 [style = dotted, label="true"];
77->49 [style = bold, label=""];
4->75 [style = dotted, label="true"];
85->59 [style = solid, label="i"];
68->19 [style = bold, label=""];
11->78 [style = solid, label="strategy"];
95->74 [style = dotted, label="true"];
28->1 [style = bold, label=""];
85->59 [style = bold, label=""];
111->109 [style = solid, label="clusterState"];
71->32 [style = solid, label="i"];
104->84 [style = bold, label=""];
22->73 [style = solid, label="i"];
43->34 [style = dotted, label="true"];
5->28 [style = solid, label="clusterState"];
87->13 [style = dotted, label="true"];
86->87 [style = bold, label=""];
45->54 [style = bold, label=""];
37->17 [style = dotted, label="true"];
74->21 [style = dotted, label="true"];
49->77 [style = dotted, label="true"];
95->73 [style = dotted, label="true"];
29->77 [style = solid, label="i"];
90->101 [style = bold, label=""];
38->70 [style = dotted, label="true"];
51->38 [style = bold, label=""];
52->93 [style = dotted, label="true"];
11->115 [style = dashed, label="0"];
62->72 [style = dotted, label="true"];
87->66 [style = bold, label=""];
94->65 [style = bold, label=""];
62->72 [style = bold, label=""];
14->85 [style = bold, label=""];
7->27 [style = bold, label=""];
30->56 [style = bold, label=""];
9->101 [style = bold, label=""];
87->103 [style = bold, label=""];
25->89 [style = bold, label=""];
52->99 [style = bold, label=""];
97->11 [style = bold, label=""];
3->32 [style = bold, label=""];
47->3 [style = solid, label="i"];
34->43 [style = solid, label="i"];
38->51 [style = dotted, label="true"];
32->16 [style = dotted, label="true"];
19->7 [style = bold, label=""];
115->50 [style = bold, label=""];
50->53 [style = bold, label=""];
101->29 [style = dotted, label="true"];
3->16 [style = dotted, label="true"];
43->19 [style = dotted, label="true"];
93->25 [style = bold, label=""];
87->66 [style = dotted, label="true"];
22->95 [style = solid, label="i"];
49->86 [style = bold, label=""];
}
