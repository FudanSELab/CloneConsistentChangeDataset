digraph {
24 [style = filled, label = "killSession(curator)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Trigger deletedTrigger = Trigger.deleted()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i++@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(10,TimeUnit.SECONDS))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertNodeExists(observer,node.getActualPath())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(10,TimeUnit.SECONDS))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "killSession(curator)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Stat stat = observer.checkExists().usingWatcher(creationTrigger).forPath(path)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Trigger deletionTrigger = Trigger.deleted()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(deletedTrigger.firedWithin(10,TimeUnit.SECONDS))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{node.close()}@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "{node.close()}@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "node.waitForInitialCreate(5,TimeUnit.SECONDS)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i < 5@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "node.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int i = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertNodeExists(observer,path)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "observer.checkExists().usingWatcher(deletedTrigger).forPath(node.getActualPath())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String path = node.getActualPath()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Trigger creationTrigger = Trigger.created()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(deletedTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22->25 [style = bold, label=""];
5->12 [style = dashed, label="0"];
9->0 [style = bold, label=""];
26->17 [style = bold, label=""];
2->6 [style = bold, label=""];
1->2 [style = solid, label="observer"];
15->24 [style = dotted, label="true"];
21->15 [style = bold, label=""];
27->28 [style = bold, label=""];
1->28 [style = solid, label="observer"];
2->27 [style = dashed, label="0"];
15->20 [style = dotted, label="true"];
15->22 [style = dotted, label="true"];
11->12 [style = bold, label=""];
15->18 [style = bold, label=""];
17->23 [style = bold, label=""];
4->10 [style = solid, label="curator"];
7->3 [style = bold, label=""];
4->3 [style = solid, label="curator"];
27->23 [style = solid, label="path"];
21->25 [style = solid, label="i"];
19->24 [style = bold, label=""];
25->15 [style = solid, label="i"];
15->17 [style = dotted, label="true"];
3->9 [style = bold, label=""];
24->26 [style = bold, label=""];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
12->2 [style = bold, label=""];
28->21 [style = bold, label=""];
23->22 [style = bold, label=""];
15->19 [style = dotted, label="true"];
15->20 [style = bold, label=""];
9->26 [style = dashed, label="0"];
9->13 [style = dashed, label="0"];
3->13 [style = bold, label=""];
25->15 [style = bold, label=""];
4->1 [style = bold, label=""];
4->24 [style = solid, label="curator"];
21->15 [style = solid, label="i"];
5->27 [style = bold, label=""];
8->4 [style = bold, label=""];
15->23 [style = dotted, label="true"];
16->4 [style = bold, label=""];
6->7 [style = bold, label=""];
20->19 [style = bold, label=""];
27->19 [style = solid, label="path"];
1->10 [style = bold, label=""];
15->25 [style = dotted, label="true"];
23->22 [style = solid, label="stat"];
27->28 [style = solid, label="path"];
15->26 [style = dotted, label="true"];
13->0 [style = bold, label=""];
14->4 [style = bold, label=""];
10->11 [style = bold, label=""];
}
