digraph {
10 [style = filled, label = "final Method method = (fieldNullable(index)? (nullsFirst ^ descending? BuiltInMethod.COMPARE_NULLS_FIRST: BuiltInMethod.COMPARE_NULLS_LAST): BuiltInMethod.COMPARE).method@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final ParameterExpression parameterV1 = Expressions.parameter(javaRowClass,\"v1\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return Pair.of(selector,Expressions.call(BuiltInMethod.NULLS_COMPARATOR.method,Expressions.constant(collation.nullDirection == RelFieldCollation.NullDirection.FIRST),Expressions.constant(collation.getDirection() == RelFieldCollation.Direction.DESCENDING)))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Expression arg1 = fieldReference(parameterV1,index)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "selector = Expressions.call(BuiltInMethod.IDENTITY_SELECTOR.method)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Expression fieldComparator = generateCollatorExpression(fieldType.getCollation())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "selector = Expressions.lambda(,fieldReference(parameter,collation.getFieldIndex()),parameter)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(method.getDeclaringClass(),method.getName(),arg0,arg1))))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "generateComparator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final RelDataType fieldType = rowType.getFieldList().get(index).getType()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "final boolean descending = collation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "final Expression fieldComparator = generateCollatorExpression(fieldType.getCollation())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "body.add(Expressions.return_(null,Expressions.constant(0)))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final int index = collation.getFieldIndex()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "BlockBuilder body = new BlockBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Expression arg0 = fieldReference(parameterV0,index)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "final Type javaRowClass = Primitive.box(this.javaRowClass)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final List<RelFieldCollation> collations@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return Expressions.new_(,ImmutableList.of(),memberDeclarations)@@@32@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@36@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(,fieldNullable(index)? (nullsFirst != descending? \"compareNullsFirst\": \"compareNullsLast\"): \"compare\",Expressions.list(arg0,arg1).appendIfNotNull(fieldComparator)))))@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "final ParameterExpression parameterC = Expressions.parameter(,\"c\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final int index = fieldCollation.getFieldIndex()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "RelDataType fieldType = rowType.getFieldList() == null || rowType.getFieldList().isEmpty()? rowType: rowType.getFieldList().get(collation.getFieldIndex()).getType()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "final int mod = collations.size() == 1? Modifier.FINAL: 0@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "collations.size() == 1@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "generateCollationKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "final ParameterExpression parameterV0 = Expressions.parameter(javaRowClass,\"v0\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(,fieldNullable(index)? (nullsFirst != descending? \"compareNullsFirst\": \"compareNullsLast\"): \"compare\",arg0,arg1))))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@38@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "arg1 = EnumUtils.convert(arg1,)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "body.add(Expressions.return_(null,Expressions.constant(0)))@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "final int mod = collation.getFieldCollations().size() == 1? Modifier.FINAL: 0@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final boolean nullsFirst = collation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "body.add(Expressions.ifThen(Expressions.notEqual(parameterC,Expressions.constant(0)),Expressions.return_(null,descending? Expressions.negate(parameterC): parameterC)))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "return Pair.of(selector,Expressions.call(fieldComparator == null? BuiltInMethod.NULLS_COMPARATOR.method: BuiltInMethod.NULLS_COMPARATOR2.method,Expressions.list((Expression)Expressions.constant(collation.nullDirection == RelFieldCollation.NullDirection.FIRST),Expressions.constant(collation.direction == RelFieldCollation.Direction.DESCENDING)).appendIfNotNull(fieldComparator)))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "RelFieldCollation collation = collations.get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "generateCollationKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "RelCollation collation@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ParameterExpression parameter = Expressions.parameter(javaRowClass,\"v\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "body.add(Expressions.ifThen(Expressions.notEqual(parameterC,Expressions.constant(0)),Expressions.return_(null,descending? Expressions.negate(parameterC): parameterC)))@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "final boolean descending = fieldCollation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "return Pair.of(selector,Expressions.new_(,ImmutableList.of(),memberDeclarations))@@@43@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return Pair.of(selector,Expressions.new_(,ImmutableList.of(),memberDeclarations))@@@40@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "arg0 = EnumUtils.convert(arg0,)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final Expression selector@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final boolean nullsFirst = fieldCollation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58->54 [style = solid, label="parameterC"];
18->7 [style = solid, label="parameterO0"];
21->12 [style = dotted, label="true"];
61->45 [style = bold, label=""];
11->31 [style = solid, label="index"];
55->5 [style = solid, label="parameterV1"];
14->32 [style = dotted, label="true"];
17->15 [style = solid, label="parameter"];
29->2 [style = dotted, label="true"];
11->42 [style = solid, label="index"];
50->52 [style = dotted, label="true"];
35->41 [style = bold, label=""];
30->20 [style = bold, label=""];
12->37 [style = solid, label="selector"];
33->43 [style = solid, label="descending"];
21->8 [style = dotted, label="true"];
18->15 [style = dotted, label="true"];
21->8 [style = bold, label=""];
59->51 [style = bold, label=""];
58->31 [style = solid, label="parameterC"];
6->59 [style = dotted, label="true"];
21->27 [style = dotted, label="true"];
29->23 [style = dotted, label="true"];
32->30 [style = solid, label="arg0"];
6->16 [style = solid, label="parameterV1"];
26->11 [style = bold, label=""];
29->18 [style = bold, label=""];
37->3 [style = bold, label=""];
25->31 [style = bold, label=""];
10->15 [style = solid, label="method"];
3->40 [style = solid, label="selector"];
28->25 [style = solid, label="index"];
1->33 [style = bold, label=""];
34->24 [style = bold, label=""];
20->16 [style = bold, label=""];
28->6 [style = solid, label="index"];
46->54 [style = bold, label=""];
34->26 [style = solid, label="parameterC"];
33->42 [style = bold, label=""];
50->48 [style = dotted, label="true"];
15->0 [style = bold, label=""];
11->14 [style = solid, label="index"];
21->37 [style = dotted, label="true"];
32->4 [style = bold, label=""];
33->10 [style = solid, label="descending"];
48->52 [style = solid, label="parameterO1"];
11->25 [style = bold, label=""];
53->48 [style = bold, label=""];
21->3 [style = bold, label=""];
18->23 [style = dotted, label="true"];
31->14 [style = bold, label=""];
11->25 [style = solid, label="index"];
29->18 [style = dotted, label="true"];
28->5 [style = bold, label=""];
28->47 [style = solid, label="index"];
17->18 [style = solid, label="parameter"];
53->52 [style = solid, label="parameterO0"];
16->29 [style = bold, label=""];
62->60 [style = bold, label=""];
38->13 [style = dotted, label="true"];
24->46 [style = dashed, label="0"];
58->25 [style = solid, label="parameterC"];
59->25 [style = solid, label="arg1"];
21->17 [style = dotted, label="true"];
23->0 [style = solid, label="parameterO0"];
56->25 [style = bold, label=""];
12->37 [style = bold, label=""];
34->42 [style = solid, label="parameterC"];
12->27 [style = solid, label="selector"];
43->11 [style = bold, label=""];
8->17 [style = bold, label=""];
34->59 [style = bold, label=""];
44->42 [style = solid, label="fieldComparator"];
5->16 [style = solid, label="parameterV0"];
29->4 [style = dashed, label="0"];
5->6 [style = bold, label=""];
24->26 [style = solid, label="mod"];
17->6 [style = solid, label="parameter"];
55->4 [style = solid, label="parameterV1"];
18->9 [style = bold, label=""];
58->46 [style = bold, label=""];
36->16 [style = bold, label=""];
18->0 [style = dotted, label="true"];
33->56 [style = dashed, label="0"];
29->40 [style = bold, label=""];
25->32 [style = solid, label="arg0"];
31->28 [style = bold, label=""];
23->15 [style = solid, label="parameterO0"];
34->25 [style = solid, label="arg0"];
14->4 [style = dotted, label="true"];
17->7 [style = solid, label="parameter"];
19->22 [style = bold, label=""];
21->35 [style = dotted, label="true"];
6->31 [style = solid, label="parameterV1"];
28->5 [style = solid, label="index"];
17->34 [style = solid, label="parameter"];
56->31 [style = solid, label="descending"];
4->30 [style = solid, label="arg1"];
9->16 [style = dashed, label="0"];
2->15 [style = solid, label="parameterO1"];
18->7 [style = dotted, label="true"];
33->42 [style = solid, label="descending"];
6->34 [style = bold, label=""];
18->23 [style = bold, label=""];
45->55 [style = bold, label=""];
31->32 [style = bold, label=""];
28->47 [style = bold, label=""];
43->36 [style = bold, label=""];
29->7 [style = dotted, label="true"];
17->2 [style = solid, label="parameter"];
61->45 [style = solid, label="javaRowClass"];
1->51 [style = dashed, label="0"];
23->7 [style = solid, label="parameterO1"];
31->4 [style = solid, label="arg1"];
8->35 [style = bold, label=""];
18->15 [style = solid, label="parameterO0"];
27->37 [style = dashed, label="0"];
50->57 [style = dotted, label="true"];
24->26 [style = bold, label=""];
50->53 [style = dotted, label="true"];
3->28 [style = bold, label=""];
21->41 [style = dotted, label="true"];
17->12 [style = bold, label=""];
17->23 [style = solid, label="parameter"];
60->61 [style = bold, label=""];
61->52 [style = solid, label="javaRowClass"];
41->37 [style = solid, label="fieldComparator"];
23->15 [style = solid, label="parameterO1"];
47->5 [style = bold, label=""];
61->55 [style = solid, label="javaRowClass"];
5->59 [style = solid, label="arg1"];
45->47 [style = solid, label="parameterV0"];
7->15 [style = bold, label=""];
44->25 [style = bold, label=""];
15->40 [style = bold, label=""];
4->1 [style = bold, label=""];
23->2 [style = bold, label=""];
14->32 [style = bold, label=""];
54->28 [style = bold, label=""];
4->50 [style = bold, label=""];
5->29 [style = solid, label="parameterV0"];
12->27 [style = bold, label=""];
10->30 [style = bold, label=""];
34->30 [style = solid, label="parameterC"];
18->2 [style = dotted, label="true"];
20->11 [style = bold, label=""];
50->20 [style = dotted, label="true"];
0->9 [style = bold, label=""];
42->43 [style = bold, label=""];
39->44 [style = bold, label=""];
48->57 [style = bold, label=""];
33->20 [style = solid, label="descending"];
46->54 [style = solid, label="mod"];
27->3 [style = bold, label=""];
62->49 [style = dotted, label="true"];
22->21 [style = bold, label=""];
50->16 [style = bold, label=""];
51->56 [style = bold, label=""];
17->5 [style = solid, label="parameter"];
33->10 [style = bold, label=""];
19->13 [style = dotted, label="true"];
5->25 [style = solid, label="parameterV0"];
29->15 [style = dotted, label="true"];
3->9 [style = solid, label="selector"];
6->29 [style = solid, label="parameterV1"];
11->10 [style = solid, label="index"];
52->20 [style = bold, label=""];
48->20 [style = solid, label="parameterO1"];
57->52 [style = bold, label=""];
11->28 [style = dashed, label="0"];
41->17 [style = bold, label=""];
34->43 [style = solid, label="parameterC"];
16->40 [style = solid, label="memberDeclarations"];
10->0 [style = solid, label="method"];
53->20 [style = solid, label="parameterO0"];
29->9 [style = solid, label="memberDeclarations"];
45->4 [style = solid, label="parameterV0"];
4->16 [style = solid, label="memberDeclarations"];
6->34 [style = dotted, label="true"];
11->39 [style = bold, label=""];
2->7 [style = bold, label=""];
17->12 [style = solid, label="parameter"];
38->22 [style = bold, label=""];
56->25 [style = solid, label="descending"];
50->53 [style = bold, label=""];
55->58 [style = bold, label=""];
47->34 [style = solid, label="arg0"];
34->20 [style = solid, label="parameterC"];
2->0 [style = solid, label="parameterO1"];
}
