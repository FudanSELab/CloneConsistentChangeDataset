digraph {
34 [style = filled, label = "ZkTestHelper.simulateZkStateReconnected(client)@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "int i = 0@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final ZkClient client = controller.getZkClient()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@58@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "expectDisconnectCnt.incrementAndGet()@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertTrue(success,\"Leader should be gone after \" + (n + 1) + \" disconnects\")@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "LiveInstance leader = accessor.getProperty(keyBuilder.controllerLeader())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final int n = ZKHelixManager.MAX_DISCONNECT_THRESHOLD@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testParticipantFlapping['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "System.setProperty(SystemPropertyKeys.MAX_DISCONNECT_THRESHOLD,Integer.toString(_disconnectThreshold))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "ZkTestHelper.simulateZkStateDisconnected(client)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(newSessionId,oldSessionId)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "success = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){LiveInstance leader = accessor.getProperty(keyBuilder.controllerLeader())return leader == null}},5 * 1000)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "success = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName))return liveInstance == null}},3 * 1000)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.subscribeStateChanges(listener)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String instanceName = \"localhost_12918\"@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "String newSessionId = ZkTestHelper.getSessionId(client)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i < n@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final int n = _disconnectThreshold@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "final ZkStateCountListener listener = new ZkStateCountListener()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "boolean success = TestHelper.verify(new Verifier(){@Override public boolean verify(){return client.getShutdownTrigger()}},30 * 1000)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertNotNull(liveInstance,\"Live-instance should exist after \" + n + \" disconnects\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "i < _disconnectThreshold@@@21@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertTrue(success,\"The \" + (n + 1) + \"th disconnect event should trigger ZkHelixManager#disonnect\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "client.unsubscribeStateChanges(listener)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "TestHelper.verify(new Verifier(){@Override public boolean verify(){return listener.count == expectDisconnectCnt.get()}},30 * 1000)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "MockParticipantManager participant = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String oldSessionId = ZkTestHelper.getSessionId(client)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "controller.syncStart()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Assert.assertNotNull(leader,\"Leader should exist after \" + n + \" disconnects\")@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ZkTestHelper.simulateZkStateDisconnected(client)@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final ZkClient client = participant.getZkClient()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final PropertyKey.Builder keyBuilder = accessor.keyBuilder()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final AtomicInteger expectDisconnectCnt = new AtomicInteger(0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertTrue(success,\"The \" + (n + 1) + \"th disconnect event should trigger ZkHelixManager#disonnect\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,32,1,1,\"MasterSlave\",false)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "boolean success = TestHelper.verify(new Verifier(){@Override public boolean verify(){return client.getShutdownTrigger()}},30 * 1000)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(newSessionId,oldSessionId)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testControllerFlapping['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "{System.clearProperty(SystemPropertyKeys.MAX_DISCONNECT_THRESHOLD)}@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "i++@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestHelper.verify(new Verifier(){@Override public boolean verify(){return listener.count == expectDisconnectCnt.get()}},30 * 1000)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(success,\"Live-instance should be gone after \" + (n + 1) + \" disconnects\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testParticipantFlapping['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "ZkTestHelper.simulateZkStateReconnected(client)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "final HelixDataAccessor accessor = new ZKHelixDataAccessor(clusterName,new ZkBaseDataAccessor<ZNRecord>(_gZkClient))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "ZkTestHelper.simulateZkStateDisconnected(client)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "participant.syncStart()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
40->4 [style = bold, label=""];
9->53 [style = bold, label=""];
6->49 [style = solid, label="clusterName"];
21->10 [style = bold, label=""];
14->5 [style = solid, label="newSessionId"];
10->12 [style = solid, label="i"];
28->8 [style = solid, label="success"];
0->13 [style = bold, label=""];
25->33 [style = bold, label=""];
6->18 [style = solid, label="clusterName"];
46->11 [style = solid, label="client"];
27->28 [style = bold, label=""];
1->28 [style = solid, label="liveInstance"];
26->34 [style = bold, label=""];
46->24 [style = solid, label="client"];
40->5 [style = dotted, label="true"];
0->34 [style = solid, label="client"];
40->32 [style = dotted, label="true"];
13->4 [style = solid, label="listener"];
7->49 [style = bold, label=""];
46->48 [style = bold, label=""];
42->51 [style = solid, label="leader"];
40->9 [style = dotted, label="true"];
6->29 [style = bold, label=""];
3->18 [style = bold, label=""];
44->51 [style = bold, label=""];
0->24 [style = solid, label="client"];
8->36 [style = bold, label=""];
12->10 [style = bold, label=""];
20->16 [style = bold, label=""];
19->54 [style = solid, label="n"];
10->12 [style = bold, label=""];
15->20 [style = bold, label=""];
21->8 [style = solid, label="n"];
40->24 [style = bold, label=""];
1->26 [style = solid, label="liveInstance"];
36->17 [style = bold, label=""];
38->26 [style = solid, label="n"];
16->6 [style = solid, label="methodName"];
10->11 [style = bold, label=""];
25->34 [style = dashed, label="0"];
48->13 [style = solid, label="listener"];
16->6 [style = bold, label=""];
46->50 [style = solid, label="client"];
22->9 [style = bold, label=""];
9->32 [style = bold, label=""];
34->33 [style = bold, label=""];
31->2 [style = bold, label=""];
11->12 [style = bold, label=""];
51->45 [style = solid, label="success"];
33->27 [style = bold, label=""];
43->46 [style = bold, label=""];
10->11 [style = solid, label="i"];
40->35 [style = dotted, label="true"];
0->22 [style = solid, label="client"];
12->11 [style = dotted, label="true"];
8->17 [style = bold, label=""];
30->19 [style = bold, label=""];
12->22 [style = dotted, label="true"];
11->14 [style = solid, label="oldSessionId"];
12->32 [style = dotted, label="true"];
11->12 [style = solid, label="i"];
10->24 [style = dotted, label="true"];
5->11 [style = bold, label=""];
21->10 [style = solid, label="i"];
48->13 [style = bold, label=""];
39->20 [style = bold, label=""];
38->8 [style = solid, label="n"];
19->38 [style = bold, label=""];
50->41 [style = bold, label=""];
6->47 [style = solid, label="clusterName"];
0->35 [style = solid, label="client"];
11->40 [style = solid, label="i"];
13->30 [style = solid, label="listener"];
20->6 [style = solid, label="className"];
3->28 [style = solid, label="instanceName"];
46->53 [style = solid, label="client"];
19->45 [style = solid, label="n"];
18->23 [style = bold, label=""];
41->44 [style = solid, label="success"];
42->54 [style = solid, label="leader"];
35->9 [style = bold, label=""];
53->14 [style = solid, label="newSessionId"];
6->2 [style = solid, label="clusterName"];
32->14 [style = bold, label=""];
21->38 [style = dashed, label="0"];
12->24 [style = bold, label=""];
0->14 [style = solid, label="client"];
11->24 [style = bold, label=""];
10->9 [style = dotted, label="true"];
23->0 [style = bold, label=""];
19->10 [style = solid, label="n"];
37->7 [style = bold, label=""];
38->27 [style = solid, label="n"];
10->40 [style = solid, label="i"];
21->12 [style = solid, label="i"];
40->14 [style = dotted, label="true"];
53->14 [style = bold, label=""];
6->7 [style = solid, label="clusterName"];
51->45 [style = bold, label=""];
10->11 [style = dotted, label="true"];
28->8 [style = bold, label=""];
19->44 [style = solid, label="n"];
12->24 [style = dotted, label="true"];
10->40 [style = bold, label=""];
4->1 [style = bold, label=""];
3->1 [style = solid, label="instanceName"];
14->5 [style = bold, label=""];
22->35 [style = dashed, label="0"];
19->21 [style = bold, label=""];
6->29 [style = solid, label="clusterName"];
10->12 [style = dotted, label="true"];
38->10 [style = bold, label=""];
24->35 [style = bold, label=""];
21->27 [style = solid, label="n"];
29->31 [style = bold, label=""];
26->25 [style = bold, label=""];
10->53 [style = dotted, label="true"];
40->24 [style = dotted, label="true"];
3->18 [style = solid, label="instanceName"];
12->10 [style = solid, label="i"];
13->30 [style = bold, label=""];
1->26 [style = bold, label=""];
24->22 [style = bold, label=""];
11->40 [style = bold, label=""];
49->43 [style = bold, label=""];
7->3 [style = bold, label=""];
52->20 [style = bold, label=""];
54->50 [style = bold, label=""];
10->14 [style = dotted, label="true"];
12->14 [style = dotted, label="true"];
12->4 [style = bold, label=""];
10->42 [style = bold, label=""];
12->5 [style = dotted, label="true"];
40->11 [style = dotted, label="true"];
12->40 [style = dashed, label="0"];
24->5 [style = solid, label="oldSessionId"];
14->12 [style = bold, label=""];
45->47 [style = bold, label=""];
10->22 [style = dotted, label="true"];
8->45 [style = dashed, label="0"];
33->27 [style = solid, label="success"];
2->7 [style = bold, label=""];
2->37 [style = bold, label=""];
42->54 [style = bold, label=""];
0->25 [style = solid, label="client"];
41->44 [style = bold, label=""];
6->17 [style = solid, label="clusterName"];
12->9 [style = dotted, label="true"];
21->12 [style = solid, label="n"];
21->26 [style = solid, label="n"];
}
