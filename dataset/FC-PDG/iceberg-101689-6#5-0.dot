digraph {
8 [style = filled, label = "TableMetadata metadataV2 = updateTable(table,ops)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "failCommitAndThrowException(spyOps)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testFailedCommit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Mockito.verify(spyOps,Mockito.times(1)).refresh()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "AssertHelpers.assertThrows(\"GlueCatalog should fail on concurrent modifications\",,\"Glue detected concurrent update\",null)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "testConcurrentModificationExceptionDoesNotCheckCommitStatus['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Assert.assertTrue(\"Current metadata should still exist\",metadataFileExists(metadataV2))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "AssertHelpers.assertThrows(\"We should wrap the error to CommitFailedException if the \" + \"commit actually doesn't succeed\",,\"unexpected exception\",null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "failCommitAndThrowException(spyOps,ConcurrentModificationException.builder().build())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Current metadata should not have changed\",metadataV2,ops.current())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Mockito.verify(spyOps,Mockito.times(0)).refresh()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(\"No new metadata files should exist\",2,metadataFileCount(ops.current()))@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Table table = setupTable()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ops.refresh()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testConcurrentModificationExceptionDoesNotCheckCommitStatus['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "AssertHelpers.assertThrowsWithCause(\"GlueCatalog should fail on concurrent modifications\",,\"Glue detected concurrent update\",,null,null)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "GlueTableOperations ops = (GlueTableOperations)((HasTableOperations)table).operations()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "GlueTableOperations spyOps = Mockito.spy(ops)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TableMetadata metadataV1 = ops.current()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = bold, label=""];
1->4 [style = bold, label=""];
8->3 [style = solid, label="metadataV2"];
4->6 [style = bold, label=""];
9->2 [style = bold, label=""];
11->16 [style = dashed, label="0"];
18->12 [style = bold, label=""];
7->8 [style = bold, label=""];
11->9 [style = bold, label=""];
15->18 [style = bold, label=""];
2->12 [style = bold, label=""];
5->16 [style = bold, label=""];
5->11 [style = solid, label="spyOps"];
3->10 [style = bold, label=""];
8->5 [style = bold, label=""];
4->8 [style = solid, label="table"];
5->16 [style = solid, label="spyOps"];
10->0 [style = bold, label=""];
11->13 [style = bold, label=""];
9->13 [style = dashed, label="0"];
13->2 [style = bold, label=""];
2->18 [style = dashed, label="0"];
8->10 [style = solid, label="metadataV2"];
6->8 [style = solid, label="ops"];
5->11 [style = bold, label=""];
12->3 [style = bold, label=""];
6->7 [style = bold, label=""];
17->4 [style = bold, label=""];
9->15 [style = dashed, label="0"];
14->4 [style = bold, label=""];
6->5 [style = solid, label="ops"];
}
