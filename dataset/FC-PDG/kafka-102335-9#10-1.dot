digraph {
7 [style = filled, label = "final String rateDescription = \"The average per-second number of newly created tasks\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "mockStatic()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final String totalDescription = \"The total number of newly created tasks\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "shouldGetCloseTaskSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final Sensor sensor = ThreadMetrics.closeTaskSensor(THREAD_ID,streamsMetrics)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final String operation = \"task-closed\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "shouldGetCreateTaskSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "verify(,streamsMetrics)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String totalDescription = \"The total number of closed tasks\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "replay(,streamsMetrics)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String operation = \"task-created\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shouldGetCreateTaskSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Sensor sensor = ThreadMetrics.createTaskSensor(THREAD_ID,streamsMetrics)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final String rateDescription = \"The average per-second number of closed tasks\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,threadLevelGroup,tagMap,operation,rateDescription,totalDescription)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
0->9 [style = bold, label=""];
8->6 [style = solid, label="operation"];
2->1 [style = bold, label=""];
11->6 [style = bold, label=""];
0->16 [style = dashed, label="0"];
7->6 [style = solid, label="rateDescription"];
14->6 [style = solid, label="totalDescription"];
10->7 [style = bold, label=""];
1->11 [style = bold, label=""];
5->16 [style = bold, label=""];
13->6 [style = solid, label="rateDescription"];
6->5 [style = bold, label=""];
15->17 [style = bold, label=""];
1->6 [style = bold, label=""];
5->0 [style = bold, label=""];
17->14 [style = bold, label=""];
10->6 [style = solid, label="totalDescription"];
7->2 [style = bold, label=""];
12->8 [style = bold, label=""];
7->13 [style = dashed, label="0"];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
8->17 [style = dashed, label="0"];
0->3 [style = solid, label="sensor"];
14->13 [style = bold, label=""];
17->6 [style = solid, label="operation"];
16->9 [style = bold, label=""];
10->14 [style = dashed, label="0"];
16->3 [style = solid, label="sensor"];
13->2 [style = bold, label=""];
}
