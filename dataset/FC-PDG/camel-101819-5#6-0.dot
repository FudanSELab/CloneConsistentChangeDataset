digraph {
47 [style = filled, label = "assertEquals(COMMIT_MESSAGE,ex2.getOut().getBody().getShortMessage())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "repository.close()@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "File gitDir = new File(GIT_LOCAL_REPO,\".git\")@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "count = 0@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "status = new Git(repository).status().call()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE)@@@41@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "MockEndpoint added = getMockEndpoint(\"mock:result-commit\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,FILENAME_TO_ADD)}})@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertTrue(status.getAdded().contains(FILENAME_BRANCH_TO_ADD))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "File fileToAdd = new File(GIT_LOCAL_REPO,FILENAME_TO_ADD)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "count++@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "count == 0@@@40@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "assertEquals(count,2)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "File fileToAdd1 = new File(GIT_LOCAL_REPO,FILENAME_BRANCH_TO_ADD)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "count = 0@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "commitBranchTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "git.checkout().setCreateBranch(true).setName(BRANCH_TEST).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,FILENAME_BRANCH_TO_ADD)}})@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "commitBranchTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "Exchange ex2 = added.getExchanges().get(1)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "template.send(\"direct:commit-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessageBranch)}})@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "logs = git.log().call()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "count == 1@@@41@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "count++@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE_BRANCH)@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageBranch)@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "logs = new Git(repository).log().call()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getOut().getBody().getShortMessage())@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "count == 0@@@40@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "Thread.sleep(1 * 5000)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(count,1)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Status status = new Git(repository).status().call()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "fileToAdd.createNewFile()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Iterable<RevCommit> logs = new Git(repository).log().call()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "repository.close()@@@57@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "commitConsumerTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Git git = new Git(repository)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "fileToAdd1.createNewFile()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Exchange ex1 = added.getExchanges().get(0)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(status.getAdded().contains(FILENAME_TO_ADD))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,\"Test test Commit\")}})@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Repository repository = getTestRepository()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "count++@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int count = 0@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(count,2)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE)@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,COMMIT_MESSAGE)}})@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "count == 1@@@41@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
21->50 [style = dashed, label="0"];
32->22 [style = bold, label=""];
38->52 [style = bold, label=""];
16->35 [style = dashed, label="0"];
4->30 [style = dashed, label="0"];
53->47 [style = bold, label=""];
38->52 [style = solid, label="count"];
51->53 [style = bold, label=""];
23->28 [style = bold, label=""];
46->51 [style = bold, label=""];
22->18 [style = solid, label="count"];
18->22 [style = bold, label=""];
15->11 [style = bold, label=""];
0->34 [style = dashed, label="0"];
35->10 [style = bold, label=""];
50->54 [style = bold, label=""];
20->15 [style = bold, label=""];
23->5 [style = solid, label="count"];
24->28 [style = bold, label=""];
23->25 [style = bold, label=""];
22->33 [style = bold, label=""];
2->20 [style = bold, label=""];
21->0 [style = bold, label=""];
22->32 [style = solid, label="count"];
8->18 [style = bold, label=""];
22->9 [style = bold, label=""];
14->22 [style = bold, label=""];
10->26 [style = bold, label=""];
15->29 [style = dashed, label="0"];
3->33 [style = bold, label=""];
13->40 [style = dashed, label="0"];
32->36 [style = dotted, label="true"];
9->8 [style = bold, label=""];
26->4 [style = bold, label=""];
42->40 [style = bold, label=""];
9->8 [style = dotted, label="true"];
5->21 [style = bold, label=""];
30->7 [style = bold, label=""];
52->48 [style = bold, label=""];
32->36 [style = bold, label=""];
47->44 [style = bold, label=""];
39->41 [style = bold, label=""];
41->38 [style = bold, label=""];
3->18 [style = solid, label="count"];
3->33 [style = solid, label="count"];
52->48 [style = solid, label="count"];
44->45 [style = bold, label=""];
27->20 [style = bold, label=""];
22->33 [style = solid, label="count"];
29->11 [style = bold, label=""];
33->31 [style = dotted, label="true"];
7->17 [style = bold, label=""];
23->5 [style = bold, label=""];
31->32 [style = bold, label=""];
0->12 [style = bold, label=""];
21->34 [style = bold, label=""];
3->9 [style = solid, label="count"];
4->7 [style = bold, label=""];
19->16 [style = bold, label=""];
54->42 [style = bold, label=""];
48->46 [style = bold, label=""];
3->9 [style = bold, label=""];
12->13 [style = bold, label=""];
22->1 [style = solid, label="count"];
1->6 [style = bold, label=""];
12->42 [style = dashed, label="0"];
9->18 [style = bold, label=""];
28->23 [style = bold, label=""];
24->25 [style = bold, label=""];
18->36 [style = dashed, label="0"];
19->35 [style = bold, label=""];
49->15 [style = bold, label=""];
20->49 [style = bold, label=""];
33->32 [style = bold, label=""];
22->1 [style = bold, label=""];
40->43 [style = bold, label=""];
43->39 [style = bold, label=""];
20->29 [style = bold, label=""];
16->10 [style = bold, label=""];
25->23 [style = bold, label=""];
37->20 [style = bold, label=""];
3->22 [style = solid, label="count"];
11->19 [style = bold, label=""];
34->12 [style = bold, label=""];
18->14 [style = dotted, label="true"];
24->23 [style = solid, label="count"];
3->32 [style = solid, label="count"];
9->33 [style = dashed, label="0"];
26->30 [style = bold, label=""];
17->24 [style = bold, label=""];
13->3 [style = bold, label=""];
22->9 [style = solid, label="count"];
33->31 [style = bold, label=""];
25->28 [style = dashed, label="0"];
5->50 [style = bold, label=""];
18->14 [style = bold, label=""];
20->21 [style = solid, label="repository"];
36->22 [style = bold, label=""];
}
