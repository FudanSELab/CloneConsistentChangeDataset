digraph {
9 [style = filled, label = "double(( x1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1da0ba@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "double(( x1Start = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1da0c4@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Range r = DatasetUtils.findDomainBounds(dataset)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "double(( y1End = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1da0ec@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DefaultIntervalXYDataset dataset = new DefaultIntervalXYDataset()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "double(( y1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1da0d8@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "double(((( data1 = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1da0f6@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "double(( y1Start = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1da0e2@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "dataset.addSeries(\"S1\",data1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Range r = DatasetUtils.iterateToFindDomainBounds(dataset,Arrays.asList(\"S1\"),true)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testIterateToFindDomainBounds_IntervalXYDataset['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(3.2,r.getUpperBound(),EPSILON)@@@28@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testFindDomainBounds4['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "double(( x1End = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1da0ce@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testFindDomainBounds4['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "DefaultIntervalXYDataset<String> dataset = new DefaultIntervalXYDataset<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(0.8,r.getLowerBound(),EPSILON)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
2->6 [style = solid, label="y1End"];
0->9 [style = bold, label=""];
6->11 [style = solid, label="data1"];
14->3 [style = solid, label="dataset"];
2->6 [style = bold, label=""];
9->6 [style = solid, label="x1"];
0->16 [style = solid, label="dataset"];
0->3 [style = solid, label="dataset"];
9->10 [style = bold, label=""];
3->12 [style = bold, label=""];
10->7 [style = bold, label=""];
5->6 [style = solid, label="y1"];
4->0 [style = bold, label=""];
0->14 [style = dashed, label="0"];
5->1 [style = bold, label=""];
7->5 [style = bold, label=""];
11->3 [style = bold, label=""];
12->8 [style = bold, label=""];
15->0 [style = bold, label=""];
6->11 [style = bold, label=""];
1->6 [style = solid, label="y1Start"];
14->9 [style = bold, label=""];
1->2 [style = bold, label=""];
7->6 [style = solid, label="x1End"];
13->14 [style = bold, label=""];
16->12 [style = bold, label=""];
3->16 [style = dashed, label="0"];
10->6 [style = solid, label="x1Start"];
}
