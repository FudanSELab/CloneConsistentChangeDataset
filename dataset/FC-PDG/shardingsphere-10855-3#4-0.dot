digraph {
10 [style = filled, label = "when(engine.getCommandExecuteEngine()).thenReturn(executeEngine)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(queryCommandExecutor.execute()).thenReturn(Collections.emptyList())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "when(executeEngine.getCommandExecutor(eq(commandPacketType),eq(commandPacket),eq(backendConnection))).thenReturn(commandExecutor)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "when(backendConnection.getStateHandler()).thenReturn(stateHandler)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "verify(stateHandler).setRunningStatusIfNecessary()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "when(commandExecutor.execute()).thenReturn(Collections.singletonList(databasePacket))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "when(backendConnection.getConnectionSize()).thenReturn(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(codecEngine.createPacketPayload(eq(message))).thenReturn(payload)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertRunNeedFlushByFalse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "verify(handlerContext).flush()@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "CommandExecutorTask actual = new CommandExecutorTask(engine,backendConnection,handlerContext,message)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "actual.run()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertRunByCommandExecutor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "verify(handlerContext).write(databasePacket)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertRunNeedFlushByFalse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(engine.getCommandExecuteEngine()).thenReturn(executeEngine)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(backendConnection.getConnectionSize()).thenReturn(1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(executeEngine.getCommandPacketType(eq(payload))).thenReturn(commandPacketType)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(executeEngine.getCommandExecutor(eq(commandPacketType),eq(commandPacket),eq(backendConnection))).thenReturn(queryCommandExecutor)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(frontendContext.isFlushForPerCommandPacket()).thenReturn(true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "when(queryCommandExecutor.execute()).thenReturn(Collections.EMPTY_LIST)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "when(engine.getCodecEngine()).thenReturn(codecEngine)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verify(stateHandler).waitUntilConnectionReleasedIfNecessary()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(executeEngine.getCommandPacket(eq(payload),eq(commandPacketType),eq(backendConnection))).thenReturn(commandPacket)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "when(engine.getFrontendContext()).thenReturn(frontendContext)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12->23 [style = dashed, label="0"];
3->24 [style = bold, label=""];
22->19 [style = bold, label=""];
2->6 [style = bold, label=""];
9->17 [style = bold, label=""];
23->3 [style = bold, label=""];
7->4 [style = bold, label=""];
13->11 [style = bold, label=""];
10->7 [style = bold, label=""];
20->18 [style = bold, label=""];
12->13 [style = bold, label=""];
3->10 [style = bold, label=""];
5->2 [style = bold, label=""];
18->16 [style = bold, label=""];
12->14 [style = dashed, label="0"];
11->3 [style = bold, label=""];
0->1 [style = bold, label=""];
6->8 [style = bold, label=""];
11->24 [style = dashed, label="0"];
8->9 [style = bold, label=""];
13->23 [style = bold, label=""];
1->12 [style = bold, label=""];
1->14 [style = bold, label=""];
14->13 [style = bold, label=""];
24->7 [style = bold, label=""];
4->5 [style = bold, label=""];
21->13 [style = bold, label=""];
17->20 [style = bold, label=""];
15->1 [style = bold, label=""];
19->21 [style = bold, label=""];
}
