digraph {
38 [style = filled, label = "leaderAnnouncerLatch = new CountDownLatch(1)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "EasyMock.replay(configManager)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "scheduledExecutorFactory = new ScheduledExecutorFactory(){@Override public ScheduledExecutorService create(int corePoolSize,final String nameFormat){return Executors.newSingleThreadScheduledExecutor()}}@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "metadataRuleManager = EasyMock.createNiceMock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "serverInventoryView = EasyMock.createMock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "sourceLoadQueueChildrenCache = new PathChildrenCache(curator,SOURCE_LOAD_PATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache_src-%d\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "destinationLoadQueueChildrenCache = new PathChildrenCache(curator,DESTINATION_LOAD_PATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache_dest-%d\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "scheduledExecutorFactory = null@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorDynamicConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference(CoordinatorDynamicConfig.builder().build())).anyTimes()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "setupServerAndCurator()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(DESTINATION_LOAD_PATH)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorCompactionConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference(CoordinatorCompactionConfig.empty())).anyTimes()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "druidServer = EasyMock.createMock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "druidNode = new DruidNode(\"hey\",\"what\",false,1234,null,true,false)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "coordinatorRuntimeParams = EasyMock.createNiceMock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "configManager = EasyMock.createNiceMock()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorDynamicConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference<>(CoordinatorDynamicConfig.builder().build())).anyTimes()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "objectMapper = new DefaultObjectMapper()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "dataSourcesSnapshot = EasyMock.createNiceMock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(LOADPATH)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(SEGPATH)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "sourceLoadQueuePeon = new CuratorLoadQueuePeon(curator,SOURCE_LOAD_PATH,objectMapper,peonExec,callbackExec,druidCoordinatorConfig)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "loadQueuePeon.start()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "leaderUnannouncerLatch = new CountDownLatch(1)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "leaderAnnouncerLatch = new CountDownLatch(1)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "coordinator = new DruidCoordinator(druidCoordinatorConfig,new ZkPathsConfig(){@Override public String getBase(){return \"druid\"}},configManager,segmentsMetadataManager,baseView,metadataRuleManager,null,new NoopServiceEmitter(),scheduledExecutorFactory,null,null,new NoopServiceAnnouncer(){@Override public void announce(DruidNode node){leaderAnnouncerLatch.countDown()}@Override public void unannounce(DruidNode node){leaderUnannouncerLatch.countDown()}},druidNode,loadManagementPeons,null,new CostBalancerStrategyFactory(),EasyMock.createNiceMock(),new TestDruidLeaderSelector(),null,ZkEnablementConfig.ENABLED)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "druidCoordinatorConfig = new TestDruidCoordinatorConfig(new Duration(COORDINATOR_START_DELAY),new Duration(COORDINATOR_PERIOD),null,null,new Duration(COORDINATOR_PERIOD),null,10,new Duration(\"PT0s\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "curator.start()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "druidNode = new DruidNode(\"hey\",\"what\",false,1234,null,true,false)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "JacksonConfigManager configManager = EasyMock.createNiceMock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(SOURCE_LOAD_PATH)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "loadManagementPeons = new ConcurrentHashMap<>()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "druidCoordinatorConfig = new TestDruidCoordinatorConfig(new Duration(COORDINATOR_START_DELAY),new Duration(COORDINATOR_PERIOD),null,null,new Duration(COORDINATOR_PERIOD),null,10,new Duration(\"PT0s\"))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "segmentsMetadataManager = EasyMock.createNiceMock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "druidCoordinatorConfig = new TestDruidCoordinatorConfig(new Duration(COORDINATOR_START_DELAY),new Duration(COORDINATOR_PERIOD),null,null,null,new Duration(COORDINATOR_PERIOD),null,null,null,10,new Duration(\"PT0s\"))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "loadManagementPeons = new ConcurrentHashMap<>()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "curator.blockUntilConnected()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "leaderUnannouncerLatch = new CountDownLatch(1)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "objectMapper = new DefaultObjectMapper()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "coordinator = new DruidCoordinator(druidCoordinatorConfig,new ZkPathsConfig(){@Override public String getBase(){return \"druid\"}},configManager,segmentsMetadataManager,serverInventoryView,metadataRuleManager,null,serviceEmitter,scheduledExecutorFactory,null,null,new NoopServiceAnnouncer(){@Override public void announce(DruidNode node){leaderAnnouncerLatch.countDown()}@Override public void unannounce(DruidNode node){leaderUnannouncerLatch.countDown()}},druidNode,loadManagementPeons,null,new HashSet<>(),new CostBalancerStrategyFactory(),EasyMock.createNiceMock(),new TestDruidLeaderSelector(),null,ZkEnablementConfig.ENABLED)@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "destinationLoadQueuePeon = new CuratorLoadQueuePeon(curator,DESTINATION_LOAD_PATH,objectMapper,peonExec,callbackExec,druidCoordinatorConfig)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->33 [style = dashed, label="0"];
17->25 [style = bold, label=""];
37->0 [style = bold, label=""];
30->7 [style = solid, label="configManager"];
19->29 [style = solid, label="metadataRuleManager"];
21->27 [style = bold, label=""];
21->20 [style = solid, label="objectMapper"];
27->2 [style = solid, label="druidCoordinatorConfig"];
41->29 [style = solid, label="druidNode"];
11->34 [style = dashed, label="0"];
39->34 [style = bold, label=""];
19->2 [style = solid, label="metadataRuleManager"];
27->20 [style = solid, label="druidCoordinatorConfig"];
33->29 [style = solid, label="scheduledExecutorFactory"];
8->3 [style = bold, label=""];
27->3 [style = bold, label=""];
43->36 [style = bold, label=""];
21->8 [style = bold, label=""];
4->21 [style = bold, label=""];
26->18 [style = bold, label=""];
14->10 [style = bold, label=""];
20->32 [style = bold, label=""];
42->33 [style = bold, label=""];
34->31 [style = bold, label=""];
8->20 [style = solid, label="druidCoordinatorConfig"];
22->28 [style = bold, label=""];
24->13 [style = bold, label=""];
12->29 [style = solid, label="segmentsMetadataManager"];
30->29 [style = solid, label="configManager"];
20->29 [style = solid, label="druidCoordinatorConfig"];
12->24 [style = bold, label=""];
30->37 [style = bold, label=""];
1->2 [style = solid, label="scheduledExecutorFactory"];
16->22 [style = bold, label=""];
15->16 [style = bold, label=""];
8->2 [style = solid, label="druidCoordinatorConfig"];
25->2 [style = bold, label=""];
1->17 [style = bold, label=""];
4->28 [style = dashed, label="0"];
0->7 [style = bold, label=""];
22->4 [style = bold, label=""];
6->1 [style = bold, label=""];
20->34 [style = solid, label="druidCoordinatorConfig"];
11->5 [style = bold, label=""];
14->2 [style = solid, label="configManager"];
13->19 [style = bold, label=""];
3->20 [style = bold, label=""];
14->7 [style = solid, label="configManager"];
6->2 [style = solid, label="loadManagementPeons"];
19->14 [style = bold, label=""];
5->6 [style = bold, label=""];
28->43 [style = bold, label=""];
3->31 [style = solid, label="objectMapper"];
14->30 [style = dashed, label="0"];
10->0 [style = bold, label=""];
12->2 [style = solid, label="segmentsMetadataManager"];
9->2 [style = solid, label="serverInventoryView"];
18->9 [style = bold, label=""];
31->41 [style = bold, label=""];
20->31 [style = solid, label="druidCoordinatorConfig"];
10->37 [style = dashed, label="0"];
7->15 [style = bold, label=""];
33->38 [style = bold, label=""];
3->34 [style = solid, label="objectMapper"];
32->39 [style = bold, label=""];
8->27 [style = dashed, label="0"];
9->12 [style = bold, label=""];
42->29 [style = solid, label="loadManagementPeons"];
3->32 [style = dashed, label="0"];
5->2 [style = solid, label="druidNode"];
38->40 [style = bold, label=""];
23->18 [style = bold, label=""];
41->42 [style = bold, label=""];
35->12 [style = bold, label=""];
40->29 [style = bold, label=""];
20->11 [style = bold, label=""];
19->30 [style = bold, label=""];
36->3 [style = bold, label=""];
}
