digraph {
2 [style = filled, label = "assertEquals(0,duh2.commitCommands.get())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(1,duh2.rollbackCommands.get())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertQ(\"\"ZZZ\" must be found.\",req(\"q\",\"id:ZZZ\"),\"//*(@numFound='1'(\",\"//result/doc(1(/str(@name='id'((.='ZZZ'(\")@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "args.put(\"indent\",\"true\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ureq.close()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertU(adoc(\"id\",\"B\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "deleteCore()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(1,duh2.deleteByIdCommands.get())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertEquals(0,duh2.deleteByIdCommands.get())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "args.put(CommonParams.Q,\"id:A OR id:B\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "args.put(\"indent\",\"true\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(1,duh2.commitCommands.get())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testAddRollback['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertU(adoc(\"id\",\"A\"))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertQ(\"\"A\" and \"B\" should be found.\",req,\"//*(@numFound='2'(\",\"//result/doc(1(/str(@name='id'((.='A'(\",\"//result/doc(2(/str(@name='id'((.='B'(\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "SolrCore core = h.getCore()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertQ(\"\"ZZZ\" must be found.\",req(\"q\",\"id:ZZZ\"),\"//*(@numFound='1'(\",\"//result/doc(1(/str(@name='id'((.='ZZZ'(\")@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ureq = req()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(0,duh2.addCommands.get())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "initCore(\"solrconfig.xml\",\"schema12.xml\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,duh2.addCommands.get())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(updater instanceof DirectUpdateHandler2)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertQ(\"\"A\" and \"B\" should be found.\",req,\"//*(@numFound='2'(\",\"//result/doc(1(/str(@name='id'((.='A'(\",\"//result/doc(2(/str(@name='id'((.='B'(\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "updater.rollback(rbkCmd)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "cmtCmd.waitSearcher = true@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertU(commit())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "UpdateHandler updater = core.getUpdateHandler()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Map<String,String> args = new HashMap<>()@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "testAddRollback['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "SolrQueryRequest req = new LocalSolrQueryRequest(core,new MapSolrParams(args))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(1,duh2.rollbackCommands.get())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(0,duh2.rollbackCommands.get())@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Map<String,String> args = new HashMap<String,String>()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertU(adoc(\"id\",\"ZZZ\"))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "updater.commit(cmtCmd)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "SolrQueryRequest ureq = req()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(2,duh2.addCommands.get())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertU(delI(\"B\"))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(1,duh2.addCommandsCumulative.get())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "updater.rollback(rbkCmd)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(2,duh2.addCommandsCumulative.get())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertQ(\"\"B\" should not be found.\",req,\"//*(@numFound='1'(\",\"//result/doc(1(/str(@name='id'((.='A'(\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertU(commit())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(1,duh2.deleteByIdCommandsCumulative.get())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ureq.close()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ureq = req()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertQ(\"\"B\" should be found.\",req,\"//*(@numFound='2'(\",\"//result/doc(1(/str(@name='id'((.='A'(\",\"//result/doc(2(/str(@name='id'((.='B'(\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(1,duh2.addCommands.get())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testDeleteRollback['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(0,duh2.rollbackCommands.get())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(2,duh2.addCommandsCumulative.get())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq,false)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ureq.close()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1,duh2.addCommandsCumulative.get())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(2,duh2.addCommandsCumulative.get())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertU(adoc(\"id\",\"B\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "SolrQueryRequest req = new LocalSolrQueryRequest(core,new MapSolrParams(args))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(0,duh2.deleteByIdCommandsCumulative.get())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->49 [style = bold, label=""];
14->24 [style = bold, label=""];
21->10 [style = bold, label=""];
42->41 [style = bold, label=""];
52->44 [style = bold, label=""];
34->36 [style = solid, label="updater"];
41->22 [style = solid, label="req"];
53->41 [style = solid, label="args"];
43->42 [style = bold, label=""];
7->35 [style = bold, label=""];
26->9 [style = bold, label=""];
8->3 [style = solid, label="rbkCmd"];
21->59 [style = dashed, label="0"];
25->29 [style = bold, label=""];
29->34 [style = bold, label=""];
22->8 [style = bold, label=""];
28->0 [style = bold, label=""];
9->20 [style = solid, label="cmtCmd"];
51->50 [style = bold, label=""];
29->41 [style = solid, label="core"];
38->32 [style = solid, label="args"];
22->8 [style = solid, label="ureq"];
41->45 [style = solid, label="req"];
23->36 [style = bold, label=""];
7->35 [style = solid, label="ureq"];
2->20 [style = bold, label=""];
33->16 [style = bold, label=""];
40->51 [style = bold, label=""];
0->58 [style = bold, label=""];
56->46 [style = bold, label=""];
16->19 [style = bold, label=""];
48->17 [style = bold, label=""];
30->32 [style = solid, label="args"];
3->0 [style = bold, label=""];
35->31 [style = solid, label="rbkCmd"];
27->59 [style = bold, label=""];
47->2 [style = bold, label=""];
18->25 [style = bold, label=""];
16->54 [style = dashed, label="0"];
10->2 [style = bold, label=""];
8->55 [style = bold, label=""];
24->7 [style = bold, label=""];
53->43 [style = bold, label=""];
44->45 [style = bold, label=""];
32->28 [style = solid, label="req"];
41->57 [style = solid, label="req"];
30->38 [style = dashed, label="0"];
6->17 [style = bold, label=""];
26->9 [style = solid, label="ureq"];
33->55 [style = dashed, label="0"];
11->60 [style = dashed, label="0"];
32->37 [style = solid, label="req"];
38->3 [style = bold, label=""];
60->5 [style = bold, label=""];
9->27 [style = bold, label=""];
12->13 [style = bold, label=""];
59->47 [style = bold, label=""];
11->5 [style = bold, label=""];
41->56 [style = solid, label="req"];
30->3 [style = bold, label=""];
39->17 [style = bold, label=""];
0->1 [style = bold, label=""];
34->23 [style = bold, label=""];
14->53 [style = bold, label=""];
27->21 [style = bold, label=""];
46->57 [style = bold, label=""];
34->23 [style = solid, label="updater"];
8->12 [style = bold, label=""];
1->37 [style = bold, label=""];
49->29 [style = bold, label=""];
31->22 [style = bold, label=""];
19->31 [style = bold, label=""];
35->33 [style = bold, label=""];
4->60 [style = bold, label=""];
58->40 [style = bold, label=""];
41->56 [style = bold, label=""];
54->30 [style = bold, label=""];
29->32 [style = solid, label="core"];
3->15 [style = bold, label=""];
13->30 [style = bold, label=""];
36->26 [style = bold, label=""];
5->14 [style = bold, label=""];
50->52 [style = bold, label=""];
20->4 [style = bold, label=""];
41->50 [style = solid, label="req"];
13->38 [style = bold, label=""];
57->22 [style = bold, label=""];
55->54 [style = bold, label=""];
4->11 [style = bold, label=""];
15->32 [style = bold, label=""];
32->28 [style = bold, label=""];
10->47 [style = dashed, label="0"];
17->18 [style = bold, label=""];
}
