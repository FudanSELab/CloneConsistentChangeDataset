digraph {
35 [style = filled, label = "to.dispose()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "e.printStackTrace()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "w2.t.join()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "w1.t.join()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(observer,never()).onComplete()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "inOrder.verify(observer,never()).onNext(\"six\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"one\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "fail(e.getMessage())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final CountDownLatch okToContinue = new CountDownLatch(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Observer<String> observer = TestHelper.mockObserver()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "inOrder.verify(observer,never()).onNext(\"five\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final TestObservable<String> w2 = new TestObservable<>(callOnce,okToContinue,\"four\",\"five\",\"six\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "okToContinue.countDown()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final Observable<String> concat = Observable.concat(Observable.unsafeCreate(w1),Observable.unsafeCreate(w2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "TestObservable<Observable<String>> observableOfObservables = new TestObservable<>(Observable.unsafeCreate(w1),Observable.unsafeCreate(w2))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "concatF.subscribe(to)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "w1.t.join()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "concat.subscribe(to)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "@SuppressWarnings(\"unchecked\") TestObservable<Observable<String>> observableOfObservables = new TestObservable<>(Observable.unsafeCreate(w1),Observable.unsafeCreate(w2))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final TestObservable<String> w1 = new TestObservable<>(\"one\",\"two\",\"three\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "InOrder inOrder = inOrder(observer)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestObserver<String> to = new TestObserver<>(observer)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"two\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "concatUnsubscribe['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "inOrder.verify(observer,never()).onComplete()@@@29@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"three\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "inOrder.verify(observer,never()).onNext(\"six\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "concatUnsubscribeConcurrent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"four\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final CountDownLatch callOnce = new CountDownLatch(1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(observer,never()).onError(any())@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Observable<String> concatF = Observable.concat(Observable.unsafeCreate(observableOfObservables))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "callOnce.await()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "e.printStackTrace()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Throwable e@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "concatUnsubscribeConcurrent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27->16 [style = solid, label="observableOfObservables"];
32->35 [style = bold, label=""];
11->33 [style = dotted, label="true"];
8->10 [style = bold, label=""];
22->25 [style = bold, label=""];
9->27 [style = solid, label="w1"];
16->0 [style = bold, label=""];
24->27 [style = dashed, label="0"];
4->24 [style = bold, label=""];
28->15 [style = bold, label=""];
35->6 [style = bold, label=""];
0->6 [style = bold, label=""];
26->8 [style = solid, label="okToContinue"];
31->32 [style = bold, label=""];
25->30 [style = bold, label=""];
10->25 [style = solid, label="observer"];
29->31 [style = bold, label=""];
22->25 [style = dotted, label="true"];
25->3 [style = bold, label=""];
34->15 [style = bold, label=""];
24->29 [style = dashed, label="0"];
10->4 [style = solid, label="observer"];
26->9 [style = bold, label=""];
4->29 [style = bold, label=""];
8->29 [style = solid, label="w2"];
6->19 [style = bold, label=""];
24->16 [style = solid, label="observableOfObservables"];
21->25 [style = bold, label=""];
27->16 [style = bold, label=""];
8->27 [style = solid, label="w2"];
9->29 [style = solid, label="w1"];
9->8 [style = bold, label=""];
20->25 [style = bold, label=""];
13->11 [style = bold, label=""];
11->22 [style = dotted, label="true"];
1->23 [style = bold, label=""];
4->0 [style = solid, label="to"];
15->26 [style = bold, label=""];
7->14 [style = bold, label=""];
10->3 [style = solid, label="observer"];
24->16 [style = bold, label=""];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
17->12 [style = bold, label=""];
22->20 [style = dotted, label="true"];
22->20 [style = bold, label=""];
30->3 [style = bold, label=""];
11->3 [style = bold, label=""];
4->27 [style = bold, label=""];
2->15 [style = bold, label=""];
12->18 [style = bold, label=""];
10->4 [style = bold, label=""];
11->33 [style = bold, label=""];
7->12 [style = dashed, label="0"];
23->17 [style = bold, label=""];
4->31 [style = solid, label="to"];
18->7 [style = bold, label=""];
15->8 [style = solid, label="callOnce"];
9->24 [style = solid, label="w1"];
8->24 [style = solid, label="w2"];
33->22 [style = bold, label=""];
21->13 [style = bold, label=""];
19->21 [style = bold, label=""];
}
