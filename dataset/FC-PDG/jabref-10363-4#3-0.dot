digraph {
29 [style = filled, label = "assertEquals(expectedFieldMap,actualFieldMap)@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Map<String,String> expectedFieldMap = expectedEntry.getFieldMap().entrySet().stream().collect(Collectors.toMap(null,null))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(1,entryResultSet.getInt(\"VERSION\"))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"article\",entryResultSet.getString(\"TYPE\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "actualFieldMap.get(sharedId).put(fieldResultSet.getString(\"NAME\"),fieldResultSet.getString(\"VALUE\"))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "dbmsProcessor.insertEntries(entries)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(\"inproceedings\",entryResultSet.getString(\"TYPE\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "actualFieldMap.put(fieldResultSet.getString(\"NAME\"),fieldResultSet.getString(\"VALUE\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(1,entryResultSet.getInt(\"VERSION\"))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(1,entryResultSet.getInt(\"VERSION\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "fieldResultSet.next()@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(1,entryResultSet.getInt(\"VERSION\"))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "emptyEntry.getSharedBibEntryData().setSharedID(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(1,entryResultSet.getInt(\"VERSION\"))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "entries.add(new BibEntry(StandardEntryType.Article).withField(StandardField.JOURNAL,\"journal \" + i).withField(StandardField.ISSUE,Integer.toString(i)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i++@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(entryResultSet.next())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(5,entryResultSet.getInt(\"SHARED_ID\"))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "actualFieldMap.get(fieldResultSet.getInt(\"ENTRY_SHARED_ID\")).put(fieldResultSet.getString(\"NAME\"),fieldResultSet.getString(\"VALUE\"))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "actualFieldMap.keySet().contains(fieldResultSet.getInt(\"ENTRY_SHARED_ID\"))@@@36@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "i < 5@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int i = 0@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(expectedFieldMap,actualFieldMap)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertTrue(entryResultSet.next())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "fieldResultSet.next()@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(\"article\",entryResultSet.getString(\"TYPE\"))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(3,entryResultSet.getInt(\"SHARED_ID\"))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "BibEntry expectedEntry = getBibEntryExample()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "testInsertMultipleEntries['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertFalse(entryResultSet.next())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\"article\",entryResultSet.getString(\"TYPE\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "entries.get(3).setType(StandardEntryType.Thesis)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertTrue(entryResultSet.next())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Map<Integer,Map<String,String>> expectedFieldMap = entries.stream().collect(Collectors.toMap(null,null))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(entryResultSet.next())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(\"thesis\",entryResultSet.getString(\"TYPE\"))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testInsertMultipleEntries['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "dbmsProcessor.insertEntry(expectedEntry)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(4,entryResultSet.getInt(\"SHARED_ID\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "BibEntry emptyEntry = getBibEntryExample()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Map<Integer,Map<String,String>> actualFieldMap = new HashMap<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(\"article\",entryResultSet.getString(\"TYPE\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Map<String,String> actualFieldMap = new HashMap<>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(entryResultSet.next())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "actualFieldMap.containsKey(fieldResultSet.getInt(\"ENTRY_SHARED_ID\"))@@@36@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "dbmsProcessor.insertEntry(emptyEntry)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "testInsertEntry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(2,entryResultSet.getInt(\"SHARED_ID\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "actualFieldMap.put(sharedId,new HashMap<>())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(1,entryResultSet.getInt(\"SHARED_ID\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "int sharedId = fieldResultSet.getInt(\"ENTRY_SHARED_ID\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<BibEntry> entries = new ArrayList<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = dashed, label="0"];
16->37 [style = bold, label=""];
0->13 [style = bold, label=""];
7->30 [style = bold, label=""];
38->28 [style = dotted, label="false"];
42->45 [style = bold, label=""];
23->22 [style = solid, label="i"];
6->38 [style = dotted, label="true"];
38->10 [style = dotted, label="false"];
12->29 [style = solid, label="expectedFieldMap"];
34->23 [style = dotted, label="true"];
13->51 [style = bold, label=""];
43->40 [style = bold, label=""];
21->26 [style = bold, label=""];
34->2 [style = bold, label=""];
0->24 [style = bold, label=""];
18->35 [style = bold, label=""];
19->34 [style = solid, label="i"];
13->15 [style = dotted, label="true"];
24->47 [style = dashed, label="0"];
8->27 [style = bold, label=""];
27->25 [style = bold, label=""];
19->22 [style = solid, label="i"];
25->21 [style = bold, label=""];
23->34 [style = solid, label="i"];
10->11 [style = bold, label=""];
16->10 [style = dotted, label="false"];
19->34 [style = bold, label=""];
2->20 [style = bold, label=""];
15->13 [style = bold, label=""];
51->41 [style = solid, label="expectedFieldMap"];
26->32 [style = bold, label=""];
7->29 [style = solid, label="actualFieldMap"];
38->28 [style = bold, label=""];
44->50 [style = bold, label=""];
22->23 [style = bold, label=""];
38->11 [style = dotted, label="false"];
1->20 [style = solid, label="entries"];
34->22 [style = dotted, label="true"];
6->38 [style = bold, label=""];
12->29 [style = bold, label=""];
40->48 [style = solid, label="expectedEntry"];
38->37 [style = bold, label=""];
49->46 [style = bold, label=""];
14->18 [style = bold, label=""];
42->49 [style = solid, label="emptyEntry"];
13->15 [style = bold, label=""];
20->7 [style = bold, label=""];
1->19 [style = bold, label=""];
24->13 [style = bold, label=""];
46->44 [style = bold, label=""];
38->37 [style = dotted, label="true"];
17->1 [style = bold, label=""];
33->5 [style = bold, label=""];
4->33 [style = bold, label=""];
32->9 [style = bold, label=""];
16->11 [style = dotted, label="false"];
39->1 [style = bold, label=""];
30->0 [style = bold, label=""];
31->8 [style = bold, label=""];
19->23 [style = solid, label="i"];
6->12 [style = bold, label=""];
16->38 [style = dashed, label="0"];
16->37 [style = dotted, label="true"];
28->10 [style = bold, label=""];
40->48 [style = bold, label=""];
3->31 [style = bold, label=""];
45->49 [style = bold, label=""];
9->4 [style = bold, label=""];
11->6 [style = bold, label=""];
36->15 [style = bold, label=""];
15->6 [style = bold, label=""];
5->14 [style = bold, label=""];
37->6 [style = bold, label=""];
48->42 [style = bold, label=""];
46->41 [style = solid, label="actualFieldMap"];
34->22 [style = bold, label=""];
47->30 [style = bold, label=""];
16->28 [style = dotted, label="false"];
16->28 [style = bold, label=""];
13->3 [style = bold, label=""];
28->10 [style = solid, label="sharedId"];
6->16 [style = bold, label=""];
50->47 [style = bold, label=""];
23->34 [style = bold, label=""];
35->36 [style = bold, label=""];
51->41 [style = bold, label=""];
6->16 [style = dotted, label="true"];
}
