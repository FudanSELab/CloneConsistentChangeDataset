digraph {
13 [style = filled, label = "testFingerprintFileIsEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testDoesNotLogUnimportantExcessiveLogMessage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "cleanupThread.execute(testTaskListener)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TestTaskListener testTaskListener = new TestTaskListener()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "createFolderStructure()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testDoesNotLogUnimportantExcessiveLogMessage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "FingerprintCleanupThread cleanupThread = new FingerprintCleanupThread()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertFalse(\"Should not have logged unimportant, excessive message.\",logOutput.contains(\"possibly trimming\"))@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "FingerprintCleanupThread cleanupThread = new TestFingerprintCleanupThread(new TestFingerprint(true))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "configureLocalTestStorage(new TestFingerprint(true))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "FingerprintCleanupThread cleanupThread = new TestFingerprintCleanupThread(new TestFingerprint(false))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFalse(\"Should have deleted obsolete file.\",fpFile.toFile().exists())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String logOutput = testTaskListener.outputStream.toString()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String logOutput = testTaskListener.outputStream.toString()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->1 [style = solid, label="testTaskListener"];
8->1 [style = bold, label=""];
6->3 [style = bold, label=""];
5->10 [style = bold, label=""];
4->9 [style = bold, label=""];
1->4 [style = bold, label=""];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
3->5 [style = bold, label=""];
5->11 [style = bold, label=""];
11->0 [style = bold, label=""];
2->11 [style = dashed, label="0"];
10->8 [style = bold, label=""];
13->3 [style = bold, label=""];
5->0 [style = solid, label="testTaskListener"];
0->1 [style = bold, label=""];
7->3 [style = bold, label=""];
2->10 [style = dashed, label="0"];
1->12 [style = bold, label=""];
}
