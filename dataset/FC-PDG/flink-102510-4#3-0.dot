digraph {
9 [style = filled, label = "long checkpointId = 42L@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "SubtaskCheckpointCoordinator subtaskCheckpointCoordinator = new MockSubtaskCheckpointCoordinatorBuilder().setEnvironment(mockEnvironment).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "{subtaskCheckpointCoordinator.notifyCheckpointComplete(checkpointId,operatorChain,null)assertEquals(checkpointId,stateManager.getNotifiedCompletedCheckpointId())}@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(0,subtaskCheckpointCoordinator.getAbortedCheckpointSize())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testNotifyCheckpointAbortedAfterAsyncPhase['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testNotifyCheckpointComplete['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TestTaskStateManager stateManager = new TestTaskStateManager()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "subtaskCheckpointCoordinator.checkpointState(new CheckpointMetaData(checkpointId,System.currentTimeMillis()),CheckpointOptions.forCheckpointWithDefaultLocation(),new CheckpointMetrics(),operatorChain,null)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "SubtaskCheckpointCoordinatorImpl subtaskCheckpointCoordinator = (SubtaskCheckpointCoordinatorImpl)new MockSubtaskCheckpointCoordinatorBuilder().setEnvironment(mockEnvironment).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final OperatorChain<?,?> operatorChain = getOperatorChain(mockEnvironment)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long newCheckpointId = checkpointId + 1@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "subtaskCheckpointCoordinator.notifyCheckpointAborted(checkpointId,operatorChain,null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testNotifyCheckpointAbortedAfterAsyncPhase['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "subtaskCheckpointCoordinator.checkpointState(new CheckpointMetaData(checkpointId,System.currentTimeMillis()),CheckpointOptions.forCheckpointWithDefaultLocation(),new CheckpointMetricsBuilder(),operatorChain,null)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "{subtaskCheckpointCoordinator.notifyCheckpointComplete(newCheckpointId,operatorChain,null)assertEquals(newCheckpointId,stateManager.getNotifiedCompletedCheckpointId())}@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(checkpointId,stateManager.getNotifiedAbortedCheckpointId())@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MockEnvironment mockEnvironment = MockEnvironment.builder().setTaskStateManager(stateManager).build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
1->4 [style = bold, label=""];
0->13 [style = bold, label=""];
9->4 [style = solid, label="checkpointId"];
9->10 [style = solid, label="checkpointId"];
9->2 [style = bold, label=""];
9->16 [style = solid, label="checkpointId"];
11->6 [style = bold, label=""];
12->14 [style = solid, label="newCheckpointId"];
15->6 [style = bold, label=""];
6->0 [style = bold, label=""];
9->10 [style = bold, label=""];
7->10 [style = solid, label="operatorChain"];
3->13 [style = dashed, label="0"];
0->7 [style = solid, label="mockEnvironment"];
9->16 [style = bold, label=""];
2->10 [style = dashed, label="0"];
7->2 [style = solid, label="operatorChain"];
9->8 [style = solid, label="checkpointId"];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
3->7 [style = bold, label=""];
9->12 [style = solid, label="checkpointId"];
13->7 [style = bold, label=""];
12->14 [style = bold, label=""];
7->16 [style = solid, label="operatorChain"];
9->2 [style = solid, label="checkpointId"];
7->8 [style = solid, label="operatorChain"];
7->14 [style = solid, label="operatorChain"];
16->12 [style = bold, label=""];
2->8 [style = bold, label=""];
}
