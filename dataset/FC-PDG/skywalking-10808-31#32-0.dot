digraph {
18 [style = filled, label = "HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_elasticsearch\",MetricsTag.EMPTY_KEY,MetricsTag.EMPTY_VALUE)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "H2TableInstaller installer = new H2TableInstaller(h2Client,getManager(),config.getMaxSizeOfArrayColumn(),config.getNumOfSearchableValuesPerTag())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "throw new ModuleStartException(\"Size of searchableTracesTags(\" + numOfSearchableTags + \"( * numOfSearchableValuesPerTag(\" + config.getNumOfSearchableValuesPerTag() + \"( > maxSizeOfArrayColumn(\" + config.getMaxSizeOfArrayColumn() + \"(. Potential out of bound in the runtime.\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "throw new ModuleStartException(\"Size of searchableLogsTags(\" + numOfSearchableLogsTags + \"( * numOfSearchableValuesPerTag(\" + config.getNumOfSearchableValuesPerTag() + \"( > maxSizeOfArrayColumn(\" + config.getMaxSizeOfArrayColumn() + \"(. Potential out of bound in the runtime.\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final ConfigService configService = getManager().find(CoreModule.NAME).provider().getService()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "start['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "h2Client.connect()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "elasticSearchClient.registerChecker(healthChecker)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "getManager().find(CoreModule.NAME).provider().getService().addModelListener(installer)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "start['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "numOfSearchableTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()@@@5@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "elasticSearchClient.connect()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "getManager().find(CoreModule.NAME).provider().getService().addModelListener(installer)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "start['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "numOfSearchableTracesTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()@@@5@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "throw new ModuleStartException(\"Size of searchableTracesTags(\" + numOfSearchableTracesTags + \"( * numOfSearchableValuesPerTag(\" + config.getNumOfSearchableValuesPerTag() + \"( > maxSizeOfArrayColumn(\" + config.getMaxSizeOfArrayColumn() + \"(. Potential out of bound in the runtime.\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_h2\",MetricsTag.EMPTY_KEY,MetricsTag.EMPTY_VALUE)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final int numOfSearchableTracesTags = configService.getSearchableTracesTags().split(Const.COMMA).length@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "final int numOfSearchableLogsTags = configService.getSearchableLogsTags().split(Const.COMMA).length@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "StorageEsInstaller installer = new StorageEsInstaller(elasticSearchClient,getManager(),config)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "numOfSearchableLogsTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "h2Client.registerChecker(healthChecker)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final int numOfSearchableTags = configService.getSearchableTracesTags().split(Const.COMMA).length@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->23 [style = dashed, label="0"];
19->18 [style = bold, label=""];
9->16 [style = dashed, label="0"];
1->8 [style = bold, label=""];
24->19 [style = bold, label=""];
3->5 [style = solid, label="installer"];
15->7 [style = bold, label=""];
17->11 [style = solid, label="numOfSearchableLogsTags"];
0->10 [style = solid, label="healthChecker"];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
6->9 [style = solid, label="numOfSearchableTags"];
12->16 [style = solid, label="numOfSearchableTracesTags"];
14->17 [style = bold, label=""];
8->6 [style = bold, label=""];
7->0 [style = bold, label=""];
12->16 [style = bold, label=""];
16->17 [style = bold, label=""];
17->15 [style = solid, label="numOfSearchableLogsTags"];
9->7 [style = bold, label=""];
22->23 [style = bold, label=""];
4->7 [style = bold, label=""];
11->15 [style = bold, label=""];
6->12 [style = dashed, label="0"];
0->10 [style = bold, label=""];
3->5 [style = bold, label=""];
18->22 [style = bold, label=""];
21->20 [style = bold, label=""];
23->21 [style = bold, label=""];
16->14 [style = dotted, label="true"];
9->4 [style = dotted, label="true"];
16->14 [style = bold, label=""];
10->2 [style = bold, label=""];
4->14 [style = dashed, label="0"];
6->9 [style = bold, label=""];
13->8 [style = bold, label=""];
6->4 [style = solid, label="numOfSearchableTags"];
21->20 [style = solid, label="installer"];
11->15 [style = dotted, label="true"];
12->14 [style = solid, label="numOfSearchableTracesTags"];
8->12 [style = bold, label=""];
11->7 [style = bold, label=""];
18->22 [style = solid, label="healthChecker"];
17->11 [style = bold, label=""];
}
