digraph {
12 [style = filled, label = "++i@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "concurrentIndexible.set(idx,idx)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final Integer loops = totalIndexSize / concurrentThreads@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "executorService.shutdown()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < index.get()@@@47@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testConcurrentWrites['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int i = 1@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "futures.clear()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "futures.add(executorService.submit(new Runnable(){@Override public void run(){for (int i = 0 i < loops ++i){final Integer idx = index.getAndIncrement()concurrentIndexible.set(idx,idx)}}}))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "++i@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<ListenableFuture<?>> futures = new ArrayList<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final ListeningExecutorService executorService = MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(concurrentThreads,new ThreadFactoryBuilder().setDaemon(false).setNameFormat(\"indexible-writes-benchmark-%d\").build()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(i,concurrentIndexible.get(i).intValue())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Integer idx = index.getAndIncrement()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int i = 0@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i < index.get()@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testConcurrentReads['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "done.set(true)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i < concurrentThreads@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final ListeningExecutorService executorService = MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(concurrentThreads,new ThreadFactoryBuilder().setDaemon(false).setNameFormat(\"indexible-writes-benchmark-reader-%d\").build()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final CountDownLatch start = new CountDownLatch(1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "executorService.shutdown()@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "++i@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final AtomicInteger queryableIndex = new AtomicInteger(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "{final Integer idx = index.getAndIncrement()concurrentIndexible.set(idx,idx)start.countDown()}@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i < totalIndexSize@@@36@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Futures.allAsList(futures).get()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "queryableIndex.incrementAndGet()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testConcurrentReads['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "concurrentIndexible.clear()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertTrue(StringUtils.format(\"Index too small %d, expected %d across %d loops\",index.get(),totalIndexSize,loops),index.get() >= totalIndexSize)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(StringUtils.format(\"Index too small %d, expected %d across %d loops\",index.get(),totalIndexSize,loops),index.get() >= totalIndexSize)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Futures.allAsList(futures).get()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final AtomicInteger index = new AtomicInteger(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final AtomicBoolean done = new AtomicBoolean(false)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->19 [style = dotted, label="true"];
14->5 [style = bold, label=""];
18->3 [style = bold, label=""];
24->4 [style = solid, label="i"];
1->9 [style = bold, label=""];
2->26 [style = bold, label=""];
26->2 [style = bold, label=""];
28->12 [style = bold, label=""];
4->3 [style = dotted, label="true"];
17->16 [style = dotted, label="true"];
19->28 [style = bold, label=""];
22->34 [style = dashed, label="0"];
31->2 [style = dotted, label="true"];
1->0 [style = bold, label=""];
20->31 [style = bold, label=""];
13->17 [style = bold, label=""];
25->10 [style = bold, label=""];
16->19 [style = solid, label="idx"];
9->20 [style = bold, label=""];
16->19 [style = bold, label=""];
24->4 [style = bold, label=""];
4->18 [style = dotted, label="true"];
17->28 [style = dotted, label="true"];
1->20 [style = solid, label="i"];
14->8 [style = solid, label="loops"];
10->11 [style = bold, label=""];
9->0 [style = bold, label=""];
14->24 [style = bold, label=""];
21->24 [style = bold, label=""];
7->22 [style = bold, label=""];
31->26 [style = bold, label=""];
6->8 [style = bold, label=""];
11->14 [style = bold, label=""];
18->15 [style = solid, label="idx"];
4->1 [style = bold, label=""];
20->26 [style = solid, label="i"];
25->11 [style = bold, label=""];
8->1 [style = bold, label=""];
0->20 [style = bold, label=""];
30->33 [style = bold, label=""];
33->35 [style = bold, label=""];
12->17 [style = bold, label=""];
17->12 [style = dotted, label="true"];
20->31 [style = solid, label="i"];
0->9 [style = dotted, label="true"];
5->21 [style = bold, label=""];
22->25 [style = bold, label=""];
18->4 [style = solid, label="i"];
31->26 [style = dotted, label="true"];
0->20 [style = dotted, label="true"];
24->18 [style = solid, label="i"];
15->13 [style = bold, label=""];
2->31 [style = bold, label=""];
17->23 [style = bold, label=""];
29->22 [style = bold, label=""];
27->6 [style = bold, label=""];
32->34 [style = bold, label=""];
31->30 [style = bold, label=""];
20->9 [style = bold, label=""];
14->18 [style = solid, label="loops"];
0->2 [style = bold, label=""];
34->25 [style = bold, label=""];
1->0 [style = solid, label="i"];
4->15 [style = bold, label=""];
17->16 [style = bold, label=""];
13->17 [style = solid, label="i"];
3->4 [style = bold, label=""];
14->9 [style = solid, label="loops"];
4->18 [style = bold, label=""];
23->27 [style = bold, label=""];
}
