digraph {
20 [style = filled, label = "getLockAfterTXStateReplaced['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(txMgr.getLock(tx,txid))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Thread t1 = new Thread(new Runnable(){@Override public void run(){txMgr.removeHostedTXState(txid)}})@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Thread t1 = new Thread(new Runnable(){public void run(){txMgr.removeHostedTXState(txid)txMgr.getOrSetHostedTXState(txid,msg)}})@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertNotNull(curTx)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(tx,oldtx)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "TXStateProxy tx = txMgr.getOrSetHostedTXState(txid,msg)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "TXStateProxy curTx = txMgr.getHostedTXState(txid)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "getLockAfterTXStateRemoved['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "t1.join()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "tx.getLock().unlock()@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertNotEquals(tx,curTx)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TXStateProxy tx = txMgr.getOrSetHostedTXState(txid,msg)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(txMgr.getLock(tx,txid))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNotNull(tx)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(oldtx,txMgr.getHostedTXState(txid))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(txMgr.getLock(tx,txid))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "TXStateProxy oldtx = txMgr.getOrSetHostedTXState(txid,msg)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "t1.join()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "t1.start()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(tx,txMgr.getHostedTXState(txid))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(txMgr.getLock(oldtx,txid))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "t1.start()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "getLockAfterTXStateRemoved['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "oldtx.getLock().unlock()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "tx.getLock().unlock()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "TXStateProxy curTx = txMgr.getHostedTXState(txid)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(tx,oldtx)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertNull(curTx)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(tx,txMgr.getHostedTXState(txid))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertNotNull(oldtx)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertFalse(txMgr.getLock(tx,txid))@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31->27 [style = solid, label="curTx"];
18->31 [style = bold, label=""];
0->16 [style = bold, label=""];
31->23 [style = bold, label=""];
24->19 [style = bold, label=""];
8->15 [style = bold, label=""];
25->27 [style = solid, label="tx"];
23->27 [style = bold, label=""];
2->6 [style = solid, label="tx"];
2->10 [style = solid, label="tx"];
16->10 [style = bold, label=""];
25->13 [style = bold, label=""];
0->23 [style = dashed, label="0"];
2->3 [style = bold, label=""];
2->16 [style = solid, label="tx"];
30->21 [style = solid, label="oldtx"];
2->9 [style = solid, label="tx"];
12->11 [style = bold, label=""];
3->6 [style = bold, label=""];
5->0 [style = solid, label="curTx"];
2->15 [style = solid, label="tx"];
25->13 [style = solid, label="tx"];
1->13 [style = bold, label=""];
31->23 [style = solid, label="curTx"];
19->25 [style = bold, label=""];
21->28 [style = bold, label=""];
26->22 [style = bold, label=""];
7->5 [style = bold, label=""];
30->21 [style = bold, label=""];
22->18 [style = bold, label=""];
17->2 [style = bold, label=""];
5->0 [style = bold, label=""];
2->3 [style = solid, label="tx"];
30->28 [style = solid, label="oldtx"];
13->26 [style = bold, label=""];
30->13 [style = solid, label="oldtx"];
6->8 [style = bold, label=""];
10->4 [style = bold, label=""];
28->24 [style = bold, label=""];
25->29 [style = solid, label="tx"];
14->2 [style = bold, label=""];
30->24 [style = solid, label="oldtx"];
2->8 [style = solid, label="tx"];
13->9 [style = solid, label="oldtx"];
13->9 [style = bold, label=""];
9->12 [style = bold, label=""];
27->29 [style = bold, label=""];
20->30 [style = bold, label=""];
11->7 [style = bold, label=""];
15->1 [style = bold, label=""];
}
