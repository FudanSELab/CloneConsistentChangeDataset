digraph {
6 [style = filled, label = "final Path tempDir = createTempDir()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "plugins = new ArrayList<>(plugins)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Node node = new MockNode(settings,plugins,forbidPrivateIndexSettings())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "plugins.add()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "NodeValidationException e@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "plugins = new ArrayList<>(plugins)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return build@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "return Settings.builder().put(ClusterName.CLUSTER_NAME_SETTING.getKey(),InternalTestCluster.clusterName(\"single-node-cluster\",randomLong())).put(Environment.PATH_HOME_SETTING.getKey(),tempDir).put(NetworkModule.TRANSPORT_TYPE_KEY,getTestTransportType()).put(Node.NODE_DATA_SETTING.getKey(),true)@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "newNode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Node build = new MockNode(settings,plugins,forbidPrivateIndexSettings())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "plugins.contains(getTestTransportPlugin()) == false@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "plugins.contains() == false@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Collection<Class<? extends Plugin>> plugins = getPlugins()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "build.start()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "throw new RuntimeException(e)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "newNode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Settings settings = Settings.builder().put(ClusterName.CLUSTER_NAME_SETTING.getKey(),InternalTestCluster.clusterName(\"single-node-cluster\",random().nextLong())).put(Environment.PATH_HOME_SETTING.getKey(),tempDir).put(Environment.PATH_REPO_SETTING.getKey(),tempDir.resolve(\"repo\")).put(Environment.PATH_SHARED_DATA_SETTING.getKey(),createTempDir().getParent()).put(\"node.name\",\"node_s_0\").put(ScriptService.SCRIPT_MAX_COMPILATIONS_RATE.getKey(),\"1000/1m\").put(EsExecutors.PROCESSORS_SETTING.getKey(),1).put(\"transport.type\",getTestTransportType()).put(Node.NODE_DATA_SETTING.getKey(),true).put(TestZenDiscovery.USE_ZEN2.getKey(),getUseZen2()).put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(),random().nextLong()).put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(),\"1b\").put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(),\"1b\").put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(),\"1b\").put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(),false).putList(DISCOVERY_ZEN_PING_UNICAST_HOSTS_SETTING.getKey()).put(INITIAL_MASTER_NODE_COUNT_SETTING.getKey(),1).put(nodeSettings()).build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "addMockHttpTransport()@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "baseSettings['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "plugins.add()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return node@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "plugins.add(getTestTransportPlugin())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Settings settings = Settings.builder().put(ClusterName.CLUSTER_NAME_SETTING.getKey(),InternalTestCluster.clusterName(\"single-node-cluster\",random().nextLong())).put(Environment.PATH_HOME_SETTING.getKey(),tempDir).put(Environment.PATH_REPO_SETTING.getKey(),tempDir.resolve(\"repo\")).put(Environment.PATH_SHARED_DATA_SETTING.getKey(),createTempDir().getParent()).put(\"node.name\",\"node_s_0\").put(ScriptService.SCRIPT_MAX_COMPILATIONS_RATE.getKey(),\"1000/1m\").put(EsExecutors.PROCESSORS_SETTING.getKey(),1).put(\"transport.type\",getTestTransportType()).put(Node.NODE_DATA_SETTING.getKey(),true).put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(),random().nextLong()).put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(),\"1b\").put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(),\"1b\").put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(),\"1b\").put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(),false).putList(DISCOVERY_ZEN_PING_UNICAST_HOSTS_SETTING.getKey()).put(nodeSettings()).build()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "node.start()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3->11 [style = dotted, label="true"];
11->16 [style = bold, label=""];
0->12 [style = solid, label="plugins"];
4->3 [style = bold, label=""];
4->7 [style = solid, label="plugins"];
16->0 [style = bold, label=""];
15->13 [style = bold, label=""];
7->11 [style = bold, label=""];
19->20 [style = solid, label="settings"];
3->7 [style = dotted, label="true"];
12->20 [style = dashed, label="0"];
0->20 [style = solid, label="plugins"];
16->8 [style = bold, label=""];
21->6 [style = bold, label=""];
6->22 [style = bold, label=""];
2->6 [style = bold, label=""];
7->0 [style = solid, label="plugins"];
7->12 [style = solid, label="plugins"];
15->18 [style = dashed, label="0"];
12->15 [style = bold, label=""];
5->12 [style = solid, label="settings"];
18->17 [style = bold, label=""];
13->17 [style = dashed, label="0"];
14->17 [style = bold, label=""];
9->20 [style = bold, label=""];
12->13 [style = solid, label="build"];
4->12 [style = solid, label="plugins"];
6->19 [style = bold, label=""];
1->14 [style = dotted, label="true"];
3->16 [style = bold, label=""];
16->10 [style = dotted, label="true"];
20->18 [style = bold, label=""];
6->5 [style = bold, label=""];
4->0 [style = solid, label="plugins"];
0->10 [style = bold, label=""];
8->20 [style = bold, label=""];
7->20 [style = solid, label="plugins"];
16->0 [style = dotted, label="true"];
10->8 [style = bold, label=""];
3->7 [style = bold, label=""];
23->6 [style = bold, label=""];
5->4 [style = bold, label=""];
20->17 [style = solid, label="node"];
8->9 [style = bold, label=""];
1->14 [style = bold, label=""];
9->12 [style = bold, label=""];
19->4 [style = bold, label=""];
14->13 [style = bold, label=""];
8->9 [style = dotted, label="true"];
5->19 [style = dashed, label="0"];
8->12 [style = bold, label=""];
4->20 [style = solid, label="plugins"];
}
