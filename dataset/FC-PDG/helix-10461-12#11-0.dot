digraph {
3 [style = filled, label = "_driver.stop(flow1.getName())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int perNodeTaskLimitation = 5@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "HelixConfigScope scope = new HelixConfigScopeBuilder(HelixConfigScope.ConfigScopeProperty.CLUSTER).forCluster(CLUSTER_NAME).build()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "perNodeTaskLimitation = 2 * perNodeTaskLimitation@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "flow = WorkflowGenerator.generateSingleJobWorkflowBuilder(jobName2,jobConfig).build()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Thread.sleep(4000)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Workflow flow2 = WorkflowGenerator.generateSingleJobWorkflowBuilder(jobName2,jobConfig).build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "_driver.stop(flow.getName())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Thread.sleep(1000L)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "setParticipantsCapacity(perNodeTaskLimitation)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertEquals(countRunningPartition(flow,jobName1),numTasks)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "jobConfig.setJobCommandConfigMap(ImmutableMap.of(MockTask.JOB_DELAY,\"10\"))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertEquals(countRunningPartition(flow1,jobName1),_numNodes * perNodeTaskLimitation)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Thread.sleep(1500)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "_driver.pollForJobState(flow2.getName(),TaskUtil.getNamespacedJobName(flow2.getName(),jobName2),TaskState.IN_PROGRESS)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(countRunningPartition(flow2,jobName2),0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Workflow flow1 = WorkflowGenerator.generateSingleJobWorkflowBuilder(jobName1,jobConfig).build()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Workflow flow = WorkflowGenerator.generateSingleJobWorkflowBuilder(jobName1,jobConfig).build()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Thread.sleep(4000)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "_driver.start(flow2)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(countRunningPartition(flow2,jobName2),0)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String jobName1 = \"PriorityJob1\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JobConfig.Builder jobConfig = generateLongRunJobConfig(numTasks)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "_driver.stop(flow2.getName())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(countRunningPartition(flow,jobName2),_numNodes * perNodeTaskLimitation)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "_driver.start(flow)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "properties.put(ClusterConfig.ClusterConfigProperty.MAX_CONCURRENT_TASK_PER_INSTANCE.name(),new Integer(perNodeTaskLimitation).toString())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "_driver.pollForJobState(flow.getName(),TaskUtil.getNamespacedJobName(flow.getName(),jobName1),TaskState.IN_PROGRESS)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "_driver.pollForJobState(flow.getName(),TaskUtil.getNamespacedJobName(flow.getName(),jobName2),TaskState.IN_PROGRESS)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "_driver.pollForJobState(flow1.getName(),TaskUtil.getNamespacedJobName(flow1.getName(),jobName1),TaskState.IN_PROGRESS)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "setParticipantsCapacity(perNodeTaskLimitation)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testJobPriority['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "_gSetupTool.getClusterManagementTool().setConfig(scope,properties)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "_driver.pollForWorkflowState(flow.getName(),TaskState.STOPPED)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Thread.sleep(1500)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int numTasks = 30 * _numNodes@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "String jobName3 = \"Job3\"@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "_driver.start(flow)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "_driver.pollForWorkflowState(flow1.getName(),TaskState.STOPPED)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String jobName1 = \"Job1\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Map<String,String> properties = new HashMap<String,String>()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "_driver.pollForWorkflowState(flow2.getName(),TaskState.STOPPED)@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "_driver.start(flow)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "testTaskThrottle['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testJobPriority['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "flow = WorkflowGenerator.generateSingleJobWorkflowBuilder(jobName3,jobConfig).build()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "String jobName2 = \"Job2\"@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String jobName2 = \"PriorityJob2\"@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "_driver.pollForJobState(flow.getName(),TaskUtil.getNamespacedJobName(flow.getName(),jobName3),TaskState.COMPLETED)@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "_driver.pollForWorkflowState(flow.getName(),TaskState.STOPPED)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Thread.sleep(2000)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "_driver.stop(flow.getName())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "_driver.start(flow1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46->13 [style = bold, label=""];
4->15 [style = bold, label=""];
11->18 [style = solid, label="perNodeTaskLimitation"];
21->24 [style = bold, label=""];
40->38 [style = bold, label=""];
16->17 [style = solid, label="flow1"];
38->43 [style = solid, label="jobName3"];
23->32 [style = dashed, label="0"];
16->13 [style = solid, label="flow1"];
31->50 [style = bold, label=""];
48->52 [style = bold, label=""];
41->48 [style = bold, label=""];
20->16 [style = bold, label=""];
49->42 [style = solid, label="properties"];
24->11 [style = bold, label=""];
51->32 [style = solid, label="jobName2"];
15->19 [style = solid, label="flow2"];
51->47 [style = bold, label=""];
39->49 [style = bold, label=""];
11->0 [style = solid, label="perNodeTaskLimitation"];
31->48 [style = solid, label="jobName1"];
39->42 [style = solid, label="scope"];
37->33 [style = bold, label=""];
52->35 [style = bold, label=""];
20->23 [style = solid, label="jobName1"];
13->32 [style = bold, label=""];
8->23 [style = bold, label=""];
50->30 [style = bold, label=""];
22->9 [style = bold, label=""];
16->23 [style = solid, label="flow1"];
50->30 [style = solid, label="flow"];
0->13 [style = solid, label="perNodeTaskLimitation"];
14->10 [style = bold, label=""];
30->34 [style = bold, label=""];
16->17 [style = bold, label=""];
37->33 [style = solid, label="flow"];
5->1 [style = bold, label=""];
18->20 [style = bold, label=""];
36->46 [style = bold, label=""];
10->25 [style = bold, label=""];
38->37 [style = bold, label=""];
47->36 [style = bold, label=""];
47->32 [style = solid, label="flow"];
20->12 [style = solid, label="jobName1"];
6->18 [style = bold, label=""];
2->3 [style = bold, label=""];
47->36 [style = solid, label="flow"];
35->39 [style = bold, label=""];
31->34 [style = solid, label="jobName1"];
4->1 [style = solid, label="jobName2"];
1->7 [style = bold, label=""];
42->51 [style = bold, label=""];
19->0 [style = bold, label=""];
0->22 [style = solid, label="perNodeTaskLimitation"];
11->23 [style = solid, label="perNodeTaskLimitation"];
51->46 [style = solid, label="jobName2"];
17->12 [style = bold, label=""];
4->19 [style = solid, label="jobName2"];
15->5 [style = solid, label="flow2"];
12->8 [style = bold, label=""];
29->42 [style = bold, label=""];
15->2 [style = solid, label="flow2"];
33->43 [style = bold, label=""];
27->24 [style = bold, label=""];
44->24 [style = bold, label=""];
7->19 [style = bold, label=""];
49->29 [style = bold, label=""];
13->2 [style = bold, label=""];
8->26 [style = dashed, label="0"];
50->48 [style = solid, label="flow"];
32->45 [style = bold, label=""];
4->2 [style = solid, label="jobName2"];
28->40 [style = bold, label=""];
17->34 [style = dashed, label="0"];
24->6 [style = solid, label="numTasks"];
11->6 [style = bold, label=""];
3->14 [style = bold, label=""];
23->4 [style = bold, label=""];
34->41 [style = bold, label=""];
12->26 [style = bold, label=""];
45->28 [style = bold, label=""];
15->5 [style = bold, label=""];
20->50 [style = dashed, label="0"];
24->48 [style = solid, label="numTasks"];
20->13 [style = solid, label="jobName1"];
6->31 [style = bold, label=""];
11->32 [style = solid, label="perNodeTaskLimitation"];
0->22 [style = bold, label=""];
26->23 [style = bold, label=""];
9->13 [style = bold, label=""];
}
