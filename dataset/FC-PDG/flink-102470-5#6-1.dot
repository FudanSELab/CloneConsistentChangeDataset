digraph {
24 [style = filled, label = "testHarness.processElement(new StreamRecord<>(\"hello\"),1,0)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testHarness.waitForInputProcessing()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Counter numRecordsOutCounter = taskMetricGroup.getIOMetricGroup().getNumRecordsOutCounter()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testHarness.waitForTaskCompletion()@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "x++@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int x = 0@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testHarness.waitForTaskRunning()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "x++@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testOperatorMetricReuse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "x < numRecords2@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testOperatorMetricReuse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testHarness.invoke(env)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHarness.waitForInputProcessing()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "x < numRecords1@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testHarness.setupOperatorChain(new OperatorID(),new DuplicatingOperator()).chain(new OperatorID(),new DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).chain(new OperatorID(),new DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).finish()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final int numRecords2 = 3@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int x = 0@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final TaskMetricGroup taskMetricGroup = new UnregisteredMetricGroups.UnregisteredTaskMetricGroup(){@Override public OperatorMetricGroup getOrAddOperator(OperatorID operatorID,String name){return new OperatorMetricGroup(NoOpMetricRegistry.INSTANCE,this,operatorID,name)}}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final int numRecords = 5@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final StreamMockEnvironment env = new StreamMockEnvironment(testHarness.jobConfig,testHarness.taskConfig,testHarness.memorySize,new MockInputSplitProvider(),testHarness.bufferSize,new TestTaskStateManager()){@Override public TaskMetricGroup getMetricGroup(){return taskMetricGroup}}@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int x = 0@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(numRecords * 2 * 2 * 2,numRecordsOutCounter.getCount())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final int numRecords1 = 5@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testOperatorMetricReuse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(numRecords1 + numRecords2,numRecordsInCounter.getCount())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final OneInputStreamTaskTestHarness<String,String> testHarness = new OneInputStreamTaskTestHarness<>(null,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Counter numRecordsInCounter = taskMetricGroup.getIOMetricGroup().getNumRecordsInCounter()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "x++@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testHarness.endInput()@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "testHarness.processElement(new StreamRecord<>(\"hello\"),0,0)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testHarness.setupOperatorChain(new OperatorID(),new DuplicatingOperator()).chain(new OperatorID(),new OneInputStreamTaskTest.DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).chain(new OperatorID(),new OneInputStreamTaskTest.DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).finish()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals((numRecords1 + numRecords2) * 2 * 2 * 2,numRecordsOutCounter.getCount())@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final TwoInputStreamTaskTestHarness<String,String,String> testHarness = new TwoInputStreamTaskTestHarness<>(null,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->12 [style = solid, label="x"];
5->10 [style = bold, label=""];
12->27 [style = solid, label="x"];
30->24 [style = bold, label=""];
25->28 [style = solid, label="numRecords1"];
27->32 [style = dotted, label="true"];
19->18 [style = bold, label=""];
27->32 [style = bold, label=""];
30->1 [style = bold, label=""];
23->30 [style = bold, label=""];
30->24 [style = dotted, label="true"];
26->30 [style = solid, label="numRecords2"];
16->31 [style = dashed, label="0"];
21->23 [style = solid, label="x"];
3->25 [style = bold, label=""];
0->27 [style = bold, label=""];
32->0 [style = bold, label=""];
11->6 [style = bold, label=""];
29->31 [style = bold, label=""];
0->32 [style = dashed, label="0"];
12->15 [style = bold, label=""];
3->11 [style = bold, label=""];
0->27 [style = solid, label="x"];
10->3 [style = bold, label=""];
6->14 [style = solid, label="x"];
21->30 [style = bold, label=""];
1->28 [style = dashed, label="0"];
24->23 [style = bold, label=""];
12->0 [style = bold, label=""];
11->12 [style = solid, label="numRecords"];
1->13 [style = bold, label=""];
21->30 [style = solid, label="x"];
9->16 [style = bold, label=""];
4->7 [style = bold, label=""];
14->12 [style = solid, label="x"];
26->22 [style = solid, label="numRecords2"];
12->14 [style = dotted, label="true"];
26->12 [style = bold, label=""];
0->14 [style = bold, label=""];
13->19 [style = bold, label=""];
1->28 [style = bold, label=""];
2->10 [style = solid, label="env"];
11->1 [style = solid, label="numRecords"];
8->5 [style = bold, label=""];
26->28 [style = solid, label="numRecords2"];
27->0 [style = dotted, label="true"];
4->20 [style = dashed, label="0"];
7->2 [style = bold, label=""];
12->0 [style = solid, label="x"];
14->12 [style = bold, label=""];
25->26 [style = bold, label=""];
30->23 [style = dotted, label="true"];
11->25 [style = dashed, label="0"];
23->30 [style = solid, label="x"];
12->27 [style = dashed, label="0"];
12->0 [style = dotted, label="true"];
11->13 [style = solid, label="numRecords"];
7->2 [style = solid, label="taskMetricGroup"];
16->4 [style = bold, label=""];
31->20 [style = bold, label=""];
20->7 [style = bold, label=""];
25->27 [style = solid, label="numRecords1"];
27->21 [style = bold, label=""];
25->22 [style = solid, label="numRecords1"];
12->27 [style = bold, label=""];
13->22 [style = dashed, label="0"];
28->22 [style = bold, label=""];
17->16 [style = bold, label=""];
2->8 [style = bold, label=""];
15->1 [style = bold, label=""];
6->12 [style = bold, label=""];
}
