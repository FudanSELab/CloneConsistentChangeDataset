digraph {
0 [style = filled, label = "Set<Integer> ports = new HashSet<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int testPort@@@8@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "initializeUniquePortRange_willReturnUniquePortsForUniqueRanges['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "++i@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "initializeUniquePortRange_willReturnUniquePortsForUniqueRanges['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "getRandomAvailableTCPPortRange_returnsUniqueRanges['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "initializeUniquePortRange(i)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final boolean useMembershipPortRange@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testPorts@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final boolean useMembershipPortRange@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testPorts@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assumeFalse(\"Windows has ports scattered throughout the range that makes this test difficult to pass consistently\",SystemUtils.isWindows())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "i < 1000@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(ports).doesNotContain(testPort)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int(( testPorts = getRandomAvailableTCPPortRange(5,useMembershipPortRange)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int testPort@@@9@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ports.add(testPort)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ports.add(testPort)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i < 100@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int(( testPorts = getRandomAvailableTCPPorts(5,useMembershipPortRange)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->17 [style = dotted, label="true"];
9->18 [style = dashed, label="0"];
8->16 [style = dashed, label="0"];
9->8 [style = dotted, label="true"];
11->4 [style = bold, label=""];
18->20 [style = dotted, label="true"];
3->11 [style = bold, label=""];
6->4 [style = bold, label=""];
2->8 [style = solid, label="i"];
17->16 [style = solid, label="useMembershipPortRange"];
2->9 [style = solid, label="i"];
12->14 [style = bold, label=""];
6->11 [style = bold, label=""];
9->11 [style = dotted, label="true"];
9->13 [style = dotted, label="true"];
9->1 [style = dotted, label="true"];
14->0 [style = bold, label=""];
10->11 [style = bold, label=""];
11->6 [style = bold, label=""];
16->10 [style = bold, label=""];
9->6 [style = dotted, label="true"];
8->3 [style = bold, label=""];
9->10 [style = dotted, label="true"];
12->5 [style = dotted, label="true"];
5->3 [style = solid, label="useMembershipPortRange"];
7->5 [style = dotted, label="true"];
18->11 [style = dotted, label="true"];
18->16 [style = dotted, label="true"];
2->9 [style = bold, label=""];
15->0 [style = bold, label=""];
11->10 [style = bold, label=""];
2->18 [style = bold, label=""];
18->4 [style = dotted, label="true"];
4->9 [style = bold, label=""];
7->0 [style = bold, label=""];
9->4 [style = dotted, label="true"];
18->16 [style = bold, label=""];
18->19 [style = dotted, label="true"];
18->10 [style = dotted, label="true"];
2->18 [style = solid, label="i"];
9->3 [style = dotted, label="true"];
0->2 [style = bold, label=""];
9->8 [style = bold, label=""];
5->17 [style = dashed, label="0"];
4->18 [style = bold, label=""];
}
