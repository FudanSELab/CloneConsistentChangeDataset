digraph {
29 [style = filled, label = "testDagWithInsertUpsertAndValidate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "cfg.workloadDagGenerator = .getName()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "boolean useDeltaStreamer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "String tableType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "boolean useDeltaStreamer@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String inputBasePath = dfsBasePath + \"/input\"@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "HoodieTestSuiteConfig cfg = makeConfig(inputBasePath,outputBasePath,useDeltaStreamer,tableType)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "HoodieTableMetaClient metaClient = new HoodieTableMetaClient(new Configuration(),cfg.targetBasePath)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "HoodieTestSuiteJob hoodieTestSuiteJob = new HoodieTestSuiteJob(cfg,jsc)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "cfg.workloadDagGenerator = .getName()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "String tableType@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "dfs.delete(new Path(dfsBasePath + \"/result\"),true)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(metaClient.getActiveTimeline().getCommitsTimeline().getInstants().count(),2)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "String outputBasePath = dfsBasePath + \"/result/\" + UUID.randomUUID().toString()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "HoodieTestSuiteJob hoodieTestSuiteJob = new HoodieTestSuiteJob(cfg,jsc)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testHiveSync['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "cfg.workloadDagGenerator = .getName()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertEquals(metaClient.getActiveTimeline().getCommitsTimeline().getInstants().count(),1)@@@18@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "boolean useDeltaStreamer = false@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "this.cleanDFSDirs()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "hoodieTestSuiteJob.runTestSuite()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "HoodieTableMetaClient metaClient = new HoodieTableMetaClient(new Configuration(),cfg.targetBasePath)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cfg.workloadDagGenerator = .getName()@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String tableType = \"COPY_ON_WRITE\"@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "dfs.delete(new Path(dfsBasePath + \"/input\"),true)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "HoodieTestSuiteJob hoodieTestSuiteJob = new HoodieTestSuiteJob(cfg,jsc)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "tableType == HoodieTableType.COPY_ON_WRITE.name()@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "hoodieTestSuiteJob.runTestSuite()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String inputBasePath = dfsBasePath + \"/input\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "HoodieTestSuiteConfig cfg = makeConfig(inputBasePath,outputBasePath,useDeltaStreamer,tableType)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String inputBasePath = dfsBasePath + \"/input/\" + UUID.randomUUID().toString()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testHiveSync['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11->20 [style = bold, label=""];
4->3 [style = bold, label=""];
23->10 [style = solid, label="outputBasePath"];
9->24 [style = dashed, label="0"];
11->14 [style = bold, label=""];
5->26 [style = dashed, label="0"];
7->10 [style = solid, label="useDeltaStreamer"];
22->10 [style = solid, label="useDeltaStreamer"];
0->10 [style = solid, label="outputBasePath"];
10->28 [style = solid, label="cfg"];
0->23 [style = dashed, label="0"];
11->21 [style = bold, label=""];
9->10 [style = solid, label="tableType"];
24->10 [style = solid, label="tableType"];
5->18 [style = bold, label=""];
16->17 [style = bold, label=""];
27->10 [style = solid, label="inputBasePath"];
13->11 [style = bold, label=""];
10->13 [style = solid, label="outputBasePath"];
0->13 [style = solid, label="inputBasePath"];
20->4 [style = bold, label=""];
16->13 [style = solid, label="useDeltaStreamer"];
19->16 [style = bold, label=""];
25->31 [style = bold, label=""];
17->13 [style = solid, label="tableType"];
8->0 [style = bold, label=""];
6->1 [style = bold, label=""];
11->20 [style = dotted, label="false"];
31->26 [style = bold, label=""];
10->14 [style = solid, label="cfg"];
0->10 [style = bold, label=""];
3->5 [style = bold, label=""];
29->22 [style = dotted, label="true"];
13->12 [style = bold, label=""];
30->28 [style = bold, label=""];
13->4 [style = solid, label="cfg"];
10->13 [style = bold, label=""];
6->9 [style = dotted, label="true"];
13->12 [style = dotted, label="false"];
15->0 [style = bold, label=""];
17->11 [style = solid, label="tableType"];
12->14 [style = bold, label=""];
17->15 [style = bold, label=""];
23->10 [style = bold, label=""];
6->7 [style = dotted, label="true"];
2->27 [style = bold, label=""];
28->25 [style = bold, label=""];
13->11 [style = dotted, label="true"];
8->27 [style = dashed, label="0"];
27->23 [style = bold, label=""];
1->2 [style = bold, label=""];
21->4 [style = bold, label=""];
11->21 [style = dotted, label="true"];
29->1 [style = bold, label=""];
9->13 [style = solid, label="tableType"];
29->24 [style = dotted, label="true"];
8->10 [style = solid, label="inputBasePath"];
10->30 [style = bold, label=""];
2->8 [style = bold, label=""];
14->4 [style = bold, label=""];
}
