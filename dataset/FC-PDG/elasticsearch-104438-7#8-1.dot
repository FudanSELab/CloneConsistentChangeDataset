digraph {
15 [style = filled, label = "testCreateUnusedProcessorOptions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "metadata != null@@@8@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "processorConfig.put(Pipeline.ON_FAILURE_KEY,Collections.emptyList())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(e.getMessage(),equalTo(\"processor (test( doesn't support one or more provided configuration parameters (unused(\"))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Exception e = expectThrows(,null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "pipelineConfig.put(Pipeline.META_KEY,metadata)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertThat(e.getMessage(),equalTo(\"(on_failure( processors list cannot be empty\"))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "pipelineConfig.put(Pipeline.VERSION_KEY,versionString)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<String,Processor.Factory> processorRegistry = Collections.singletonMap(\"test\",new TestProcessor.Factory())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<String,Object> pipelineConfig = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "pipelineConfig.put(Pipeline.PROCESSORS_KEY,Collections.singletonList(Collections.singletonMap(\"test\",processorConfig)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCreateWithPipelineEmptyOnFailureInProcessor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "pipelineConfig.put(Pipeline.DESCRIPTION_KEY,\"_description\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testCreateWithPipelineEmptyOnFailureInProcessor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "processorConfig.put(\"unused\",\"value\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Map<String,Object> processorConfig = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
10->12 [style = dotted, label="true"];
15->7 [style = bold, label=""];
2->3 [style = bold, label=""];
4->13 [style = bold, label=""];
7->0 [style = bold, label=""];
9->7 [style = bold, label=""];
3->4 [style = bold, label=""];
14->1 [style = bold, label=""];
8->13 [style = dashed, label="0"];
6->2 [style = bold, label=""];
7->14 [style = bold, label=""];
0->14 [style = dashed, label="0"];
12->2 [style = bold, label=""];
5->6 [style = bold, label=""];
10->12 [style = bold, label=""];
7->2 [style = solid, label="processorConfig"];
0->1 [style = bold, label=""];
6->10 [style = bold, label=""];
4->8 [style = bold, label=""];
10->2 [style = bold, label=""];
11->7 [style = bold, label=""];
}
