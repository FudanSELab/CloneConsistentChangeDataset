digraph {
10 [style = filled, label = "assertEquals(54L,offsetAndTimestampMap.get(t2p0).offset())@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "client.prepareMetadataUpdate(initialMetadata)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "client.prepareMetadataUpdate(updatedMetadata)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "buildFetcher()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "client.updateMetadata(initialMetadata)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Map<TopicPartition,Long> timestampToSearch = new HashMap<>()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "MetadataResponse initialMetadata = TestUtils.metadataUpdateWith(3,singletonMap(topicName,2))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "client.prepareResponseFrom(listOffsetResponse(tp0,Errors.NONE,1000L,11L),metadata.fetch().leaderFor(tp0))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNotNull(\"Expect Fetcher.offsetsForTimes() to return non-null result for \" + tp0,offsetAndTimestampMap.get(tp0))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "partitionNumByTopic.put(topicName,2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final String anotherTopic = \"another-topic\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "client.prepareResponseFrom(listOffsetResponse(tp0,Errors.NONE,1000L,11L),metadata.fetch().leaderFor(tp0))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<TopicPartition,Long> timestampToSearch = new HashMap<>()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "client.prepareResponseFrom(listOffsetResponse(t2p0,Errors.NONE,1000L,54L),metadata.fetch().leaderFor(t2p0))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final TopicPartition t2p0 = new TopicPartition(anotherTopic,0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Map<String,Integer> partitionNumByTopic = new HashMap<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "MetadataResponse initialMetadata = RequestTestUtils.metadataUpdateWith(3,singletonMap(topicName,2))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertNotNull(\"Expect Fetcher.offsetsForTimes() to return non-null result for \" + t2p0,offsetAndTimestampMap.get(t2p0))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "subscriptions.assignFromUser(Utils.mkSet(tp0,t2p0))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "MetadataResponse updatedMetadata = TestUtils.metadataUpdateWith(3,partitionNumByTopic)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "Assert.assertNotNull(metadata.fetch().partitionCountForTopic(anotherTopic))@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "client.reset()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "MetadataResponse updatedMetadata = TestUtils.metadataUpdateWith(1,partitionNumByTopic)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "subscriptions.assignFromUser(Utils.mkSet(tp0,tp1))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.prepareResponseFrom(listOffsetResponse(tp1,Errors.NONE,1000L,32L),metadata.fetch().leaderFor(tp1))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testGetOffsetsForTimesWhenSomeTopicPartitionLeadersDisconnectException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "timestampToSearch.put(tp0,ListOffsetRequest.LATEST_TIMESTAMP)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testGetOffsetsForTimesWhenSomeTopicPartitionLeadersNotKnownInitially['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "partitionNumByTopic.put(topicName,1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(11L,offsetAndTimestampMap.get(tp0).offset())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<TopicPartition,OffsetAndTimestamp> offsetAndTimestampMap = fetcher.offsetsForTimes(timestampToSearch,time.timer(Long.MAX_VALUE))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "client.prepareResponse(listOffsetRequestMatcher(ListOffsetRequest.LATEST_TIMESTAMP),listOffsetResponse(tp0,Errors.NONE,1000L,11L),true)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(11L,offsetAndTimestampMap.get(tp0).offset())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "MetadataResponse updatedMetadata = RequestTestUtils.metadataUpdateWith(3,partitionNumByTopic)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "partitionNumByTopic.put(anotherTopic,1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "MetadataResponse initialMetadata = TestUtils.metadataUpdateWith(1,singletonMap(topicName,1))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Map<TopicPartition,OffsetAndTimestamp> offsetAndTimestampMap = fetcher.offsetsForTimes(timestampToSearch,time.timer(Long.MAX_VALUE))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "timestampToSearch.put(t2p0,ListOffsetRequest.LATEST_TIMESTAMP)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testGetOffsetsForTimesWhenSomeTopicPartitionLeadersNotKnownInitially['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19->33 [style = bold, label=""];
11->38 [style = bold, label=""];
11->3 [style = solid, label="t2p0"];
21->19 [style = bold, label=""];
25->23 [style = bold, label=""];
30->26 [style = solid, label="updatedMetadata"];
26->3 [style = bold, label=""];
16->6 [style = bold, label=""];
27->28 [style = bold, label=""];
3->37 [style = dashed, label="0"];
30->26 [style = bold, label=""];
35->19 [style = bold, label=""];
23->15 [style = bold, label=""];
11->14 [style = solid, label="t2p0"];
12->32 [style = bold, label=""];
11->38 [style = solid, label="t2p0"];
1->20 [style = bold, label=""];
38->27 [style = bold, label=""];
27->31 [style = bold, label=""];
31->4 [style = bold, label=""];
9->20 [style = bold, label=""];
24->32 [style = solid, label="anotherTopic"];
7->26 [style = solid, label="updatedMetadata"];
2->9 [style = bold, label=""];
29->23 [style = bold, label=""];
24->11 [style = solid, label="anotherTopic"];
18->2 [style = bold, label=""];
17->31 [style = dashed, label="0"];
28->4 [style = solid, label="initialMetadata"];
14->1 [style = bold, label=""];
33->26 [style = bold, label=""];
18->1 [style = solid, label="timestampToSearch"];
2->20 [style = solid, label="timestampToSearch"];
3->18 [style = bold, label=""];
7->26 [style = bold, label=""];
17->28 [style = dashed, label="0"];
5->21 [style = bold, label=""];
23->24 [style = bold, label=""];
12->10 [style = bold, label=""];
11->6 [style = solid, label="t2p0"];
17->4 [style = solid, label="initialMetadata"];
5->30 [style = solid, label="partitionNumByTopic"];
20->16 [style = bold, label=""];
36->23 [style = bold, label=""];
31->4 [style = solid, label="initialMetadata"];
34->2 [style = bold, label=""];
33->26 [style = solid, label="updatedMetadata"];
28->22 [style = solid, label="initialMetadata"];
24->11 [style = bold, label=""];
37->34 [style = bold, label=""];
15->24 [style = bold, label=""];
7->30 [style = dashed, label="0"];
6->8 [style = bold, label=""];
27->17 [style = bold, label=""];
9->14 [style = bold, label=""];
8->12 [style = bold, label=""];
13->0 [style = bold, label=""];
26->37 [style = bold, label=""];
5->33 [style = solid, label="partitionNumByTopic"];
24->19 [style = solid, label="anotherTopic"];
21->35 [style = dashed, label="0"];
7->33 [style = dashed, label="0"];
5->7 [style = solid, label="partitionNumByTopic"];
19->7 [style = bold, label=""];
4->22 [style = bold, label=""];
4->5 [style = bold, label=""];
17->4 [style = bold, label=""];
22->13 [style = bold, label=""];
5->35 [style = bold, label=""];
16->12 [style = bold, label=""];
28->4 [style = bold, label=""];
0->5 [style = bold, label=""];
11->27 [style = bold, label=""];
19->30 [style = bold, label=""];
17->22 [style = solid, label="initialMetadata"];
}
