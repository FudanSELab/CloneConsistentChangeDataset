digraph {
38 [style = filled, label = "assertThat(refCountChangeInfo.getUseCount()).isOne()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "RefCountChangeInfo rcci = list.get(0)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "refCountChangeInfo = info.get(0)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "decRefCount = true@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "rchi = getTrueFalse()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(1,info.size())@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "rcci = list.get(0)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "sor.mute()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "list = referenceCountHelperImpl.peekRefCountInfo(address)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "int rc = 1@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertThat(refCountChangeInfo.getUseCount()).isZero()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "PowerMockito.spy()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "boolean decRefCount = false@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "refCountChangeInfo = list.get(0)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertThat(list).isEmpty()@@@20@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "PowerMockito.verifyStatic()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "rchi = getTrueTrue()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(1,rcci.getUseCount())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(refCountChangeInfo.getUseCount()).isOne()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(1,rcci.getUseCount())@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(list).hasSize(1)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "MemoryAllocatorImpl.debugLog(\"freed after orphan detected for @1000\",true)@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "doGetRefCountInfoWithTrackRefsTrueAndTrackFreesFalse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "RefCountChangeInfo refCountChangeInfo = list.get(0)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(1,list.size())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(0,rcci.getUseCount())@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "referenceCountHelperImpl.refCountChanged(address,false,1)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "list = rchi.peekRefCountInfo(address)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "doGetRefCountInfoWithTrackRefsTrueAndTrackFreesFalse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "rcci = info.get(0)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<RefCountChangeInfo> info = referenceCountHelperImpl.getRefCountInfo(address)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assertThat(info).hasSize(1)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "List<RefCountChangeInfo> list = null@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "MemoryAllocatorImpl.debugLog(\"refCount inced after orphan detected for @1000\",true)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "List<RefCountChangeInfo> list = referenceCountHelperImpl.peekRefCountInfo(address)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "list = rchi.peekRefCountInfo(address)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "ReferenceCountHelperImpl referenceCountHelperImpl = newReferenceCountHelperImpl_TrueFalse()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "doRefCountChangedAfterGetRefCountInfoWithTrackRefsTrueAndTrackFreesTrue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "list = rchi.peekRefCountInfo(address)@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(0,list.size())@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "PowerMockito.verifyStatic()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(1,list.size())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "long address = (long)0x1000@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "MemoryAllocatorImpl.debugLog(\"refCount deced after orphan detected for @1000\",true)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<RefCountChangeInfo> info = rchi.getRefCountInfo(address)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "rchi.freeRefCountInfo(address)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "referenceCountHelperImpl.refCountChanged(address,false,1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertThat(list).hasSize(1)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "list = referenceCountHelperImpl.peekRefCountInfo(address)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "PowerMockito.verifyStatic()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52->53 [style = solid, label="decRefCount"];
17->5 [style = bold, label=""];
16->13 [style = bold, label=""];
48->49 [style = bold, label=""];
34->25 [style = bold, label=""];
28->37 [style = bold, label=""];
7->17 [style = bold, label=""];
10->15 [style = bold, label=""];
9->0 [style = bold, label=""];
46->0 [style = bold, label=""];
52->53 [style = bold, label=""];
37->27 [style = bold, label=""];
47->48 [style = bold, label=""];
50->43 [style = bold, label=""];
38->24 [style = bold, label=""];
0->20 [style = solid, label="address"];
25->23 [style = bold, label=""];
8->19 [style = bold, label=""];
6->21 [style = bold, label=""];
36->29 [style = bold, label=""];
19->20 [style = bold, label=""];
31->32 [style = bold, label=""];
0->19 [style = solid, label="address"];
43->51 [style = bold, label=""];
0->33 [style = solid, label="address"];
27->31 [style = bold, label=""];
0->1 [style = solid, label="address"];
0->6 [style = solid, label="address"];
32->26 [style = bold, label=""];
11->2 [style = bold, label=""];
13->1 [style = bold, label=""];
0->47 [style = solid, label="address"];
6->22 [style = dashed, label="0"];
0->24 [style = solid, label="address"];
24->30 [style = bold, label=""];
0->7 [style = bold, label=""];
20->10 [style = bold, label=""];
9->35 [style = dashed, label="0"];
23->28 [style = bold, label=""];
3->9 [style = bold, label=""];
26->38 [style = bold, label=""];
0->53 [style = solid, label="address"];
11->38 [style = dashed, label="0"];
12->40 [style = bold, label=""];
35->0 [style = bold, label=""];
7->6 [style = solid, label="decRefCount"];
5->6 [style = bold, label=""];
0->33 [style = bold, label=""];
49->52 [style = bold, label=""];
0->11 [style = solid, label="address"];
17->19 [style = solid, label="rc"];
45->50 [style = bold, label=""];
0->23 [style = solid, label="address"];
17->47 [style = solid, label="rc"];
39->35 [style = bold, label=""];
18->23 [style = dashed, label="0"];
33->36 [style = bold, label=""];
22->34 [style = bold, label=""];
17->6 [style = solid, label="rc"];
7->47 [style = solid, label="decRefCount"];
15->4 [style = bold, label=""];
1->12 [style = bold, label=""];
14->18 [style = bold, label=""];
41->46 [style = bold, label=""];
18->8 [style = bold, label=""];
7->19 [style = solid, label="decRefCount"];
0->36 [style = solid, label="address"];
29->22 [style = bold, label=""];
51->42 [style = bold, label=""];
17->53 [style = solid, label="rc"];
7->33 [style = dashed, label="0"];
4->11 [style = bold, label=""];
17->36 [style = dashed, label="0"];
9->46 [style = dashed, label="0"];
44->47 [style = bold, label=""];
0->21 [style = solid, label="address"];
19->37 [style = dashed, label="0"];
0->25 [style = solid, label="address"];
53->45 [style = bold, label=""];
40->44 [style = bold, label=""];
0->31 [style = solid, label="address"];
21->14 [style = bold, label=""];
0->43 [style = solid, label="address"];
2->16 [style = bold, label=""];
}
