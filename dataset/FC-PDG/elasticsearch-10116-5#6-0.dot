digraph {
15 [style = filled, label = "assertFalse(processor.isExtractDeviceType())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertThat(processor.getTargetField(),equalTo(\"attachment\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testBuildDefaults['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String processorTag = randomAlphaOfLength(10)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(processor.getUaParser().getDevicePatterns().size(),greaterThan(0))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testBuildDefaults['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertThat(processor.getUaParser().getUaPatterns().size(),greaterThan(0))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(processor.getProperties(),equalTo(EnumSet.allOf()))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(processor.getField(),equalTo(\"_field\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertFalse(processor.isIgnoreMissing())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "AttachmentProcessor processor = factory.create(null,processorTag,null,config)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "UserAgentProcessor processor = factory.create(null,processorTag,null,config)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "UserAgentProcessor.Factory factory = new UserAgentProcessor.Factory(userAgentParsers)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(processor.getTargetField(),equalTo(\"user_agent\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(processor.getUaParser().getOsPatterns().size(),greaterThan(0))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,Object> config = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(processor.getProperties(),sameInstance(AttachmentProcessor.Factory.DEFAULT_PROPERTIES))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertFalse(processor.isIgnoreMissing())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "config.put(\"field\",\"_field\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(processor.getTag(),equalTo(processorTag))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testBuildDefaults['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3->19 [style = dashed, label="0"];
3->11 [style = bold, label=""];
10->6 [style = bold, label=""];
8->4 [style = bold, label=""];
7->9 [style = bold, label=""];
2->13 [style = bold, label=""];
17->19 [style = bold, label=""];
19->20 [style = bold, label=""];
9->16 [style = bold, label=""];
9->2 [style = bold, label=""];
12->1 [style = bold, label=""];
9->13 [style = solid, label="processorTag"];
16->13 [style = bold, label=""];
5->10 [style = bold, label=""];
6->16 [style = solid, label="config"];
9->16 [style = solid, label="processorTag"];
2->16 [style = dashed, label="0"];
13->12 [style = bold, label=""];
1->3 [style = bold, label=""];
15->0 [style = bold, label=""];
12->17 [style = bold, label=""];
6->2 [style = solid, label="config"];
11->8 [style = bold, label=""];
9->2 [style = solid, label="processorTag"];
6->7 [style = bold, label=""];
4->15 [style = bold, label=""];
14->10 [style = bold, label=""];
1->17 [style = dashed, label="0"];
18->6 [style = bold, label=""];
4->0 [style = bold, label=""];
}
