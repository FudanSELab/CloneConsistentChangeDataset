digraph {
11 [style = filled, label = "ServiceInstances<String> instances = resource.path(\"/v1/service/test\").get(type)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ClientConfig config = new DefaultClientConfig(){@Override public Set<Object> getSingletons(){Set<Object> singletons = Sets.newHashSet()singletons.add(context)singletons.add(serviceNamesMarshaller)singletons.add(serviceInstanceMarshaller)singletons.add(serviceInstancesMarshaller)return singletons}}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testRegisterService['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertEquals(instance,service)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(instances.getServices().size(),1)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "ClientConfig config = new DefaultClientConfig(){@Override public Set<Object> getSingletons(){Set<Object> singletons = Sets.newHashSet()singletons.add(context)singletons.add(serviceNamesMarshaller)singletons.add(serviceInstanceMarshaller)singletons.add(serviceInstancesMarshaller)return singletons}}@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ServiceNames names = resource.path(\"/v1/service\").get()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ServiceInstance<String> service = ServiceInstance.builder().name(\"test\").payload(\"From Test\").serviceType(ServiceType.STATIC).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "GenericType<ServiceInstance<String>> singleInstanceType = new GenericType<ServiceInstance<String>>(){}@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(names.getNames(),Lists.newArrayList(\"test\"))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testRegisterService['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testEmptyServiceNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ServiceInstance<String> instance = resource.path(\"/v1/service/test/\" + service.getId()).get(singleInstanceType)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(instances.getServices().get(0),service)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "WebResource resource = client.resource(\"http://\" + HOST + \":\" + port)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "GenericType<ServiceInstances<String>> type = new GenericType<ServiceInstances<String>>(){}@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(instances.getServices().get(0),service)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(names.getNames(),Lists.newArrayList(\"test\"))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "resource.path(\"/v1/service/test/\" + service.getId()).type(MediaType.APPLICATION_JSON_TYPE).put(service)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(instance,service)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "Client client = Client.create(config)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(names.getNames(),Lists.newArrayList())@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(instances.getServices().size(),1)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "WebResource resource = client.resource(\"http://localhost:\" + port)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
4->18 [style = dashed, label="0"];
15->10 [style = bold, label=""];
8->2 [style = solid, label="service"];
2->20 [style = dashed, label="0"];
16->8 [style = bold, label=""];
9->2 [style = bold, label=""];
7->17 [style = dashed, label="0"];
13->9 [style = solid, label="singleInstanceType"];
11->4 [style = bold, label=""];
6->3 [style = dashed, label="0"];
18->17 [style = bold, label=""];
8->14 [style = bold, label=""];
5->15 [style = bold, label=""];
10->3 [style = bold, label=""];
3->6 [style = bold, label=""];
9->20 [style = bold, label=""];
1->11 [style = solid, label="type"];
8->7 [style = solid, label="service"];
8->20 [style = solid, label="service"];
23->21 [style = solid, label="config"];
22->23 [style = bold, label=""];
11->18 [style = bold, label=""];
4->7 [style = bold, label=""];
1->11 [style = bold, label=""];
6->1 [style = bold, label=""];
21->5 [style = bold, label=""];
19->1 [style = bold, label=""];
12->10 [style = bold, label=""];
8->17 [style = solid, label="service"];
3->19 [style = bold, label=""];
5->12 [style = bold, label=""];
23->21 [style = bold, label=""];
14->5 [style = solid, label="config"];
8->10 [style = solid, label="service"];
6->19 [style = dashed, label="0"];
0->8 [style = bold, label=""];
9->20 [style = solid, label="instance"];
12->15 [style = dashed, label="0"];
17->13 [style = bold, label=""];
12->3 [style = bold, label=""];
13->9 [style = bold, label=""];
9->2 [style = solid, label="instance"];
14->5 [style = bold, label=""];
}
