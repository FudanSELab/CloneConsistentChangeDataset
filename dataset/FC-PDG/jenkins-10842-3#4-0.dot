digraph {
12 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"/jenkins/job/i/\",result)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ItemGroup parent = j@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testGetRelativeLinkTo_JobContainedInView['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "String contextPath = \"/jenkins\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "mockStatic()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(view.getOwner()).thenReturn(j)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Jenkins j = createMockJenkins()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testGetRelativeLinkTo_JobContainedInView['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "createMockAncestors(req,createAncestor(view,\".\"),createAncestor(j,\"../..\"))@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(view.getOwnerItemGroup()).thenReturn(parent)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "StaplerRequest req = createMockRequest(contextPath)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Computer computer = mock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testGetRelativeLinkTo_JobFromComputer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "createMockAncestors(req,createAncestor(computer,\".\"),createAncestor(j,\"../..\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "when(j.getItemGroup()).thenReturn(j)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "View view = mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(Stapler.getCurrentRequest()).thenReturn(req)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"job/i/\",result)@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
5->3 [style = bold, label=""];
4->10 [style = bold, label=""];
3->20 [style = solid, label="j"];
18->12 [style = solid, label="i"];
3->15 [style = solid, label="j"];
6->0 [style = solid, label="req"];
2->19 [style = dashed, label="0"];
15->14 [style = bold, label=""];
7->6 [style = solid, label="contextPath"];
0->19 [style = bold, label=""];
2->1 [style = bold, label=""];
1->15 [style = dashed, label="0"];
19->20 [style = bold, label=""];
0->2 [style = bold, label=""];
18->12 [style = bold, label=""];
19->20 [style = solid, label="computer"];
12->10 [style = solid, label="i"];
13->10 [style = dashed, label="0"];
6->9 [style = solid, label="req"];
8->18 [style = solid, label="parent"];
21->3 [style = bold, label=""];
3->8 [style = solid, label="j"];
12->10 [style = solid, label="result"];
13->16 [style = bold, label=""];
4->13 [style = solid, label="i"];
1->9 [style = bold, label=""];
8->7 [style = bold, label=""];
20->18 [style = bold, label=""];
13->16 [style = solid, label="result"];
11->0 [style = bold, label=""];
12->10 [style = bold, label=""];
12->4 [style = bold, label=""];
10->13 [style = bold, label=""];
2->9 [style = solid, label="view"];
3->8 [style = bold, label=""];
12->4 [style = solid, label="i"];
6->11 [style = bold, label=""];
8->4 [style = solid, label="parent"];
7->6 [style = bold, label=""];
8->1 [style = solid, label="parent"];
2->15 [style = bold, label=""];
4->10 [style = solid, label="i"];
14->12 [style = bold, label=""];
17->3 [style = bold, label=""];
9->12 [style = bold, label=""];
3->12 [style = solid, label="j"];
2->12 [style = solid, label="view"];
10->13 [style = solid, label="result"];
6->20 [style = solid, label="req"];
3->9 [style = solid, label="j"];
6->12 [style = solid, label="req"];
8->12 [style = solid, label="parent"];
3->14 [style = solid, label="j"];
}
