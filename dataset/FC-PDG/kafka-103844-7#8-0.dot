digraph {
8 [style = filled, label = "data = new DescribeGroupsResponseData()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(expectedMemberDescriptions,groupDescription.members())@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testDescribeConsumerGroups['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(GROUP_ID,Errors.NONE,\"\",\"non-consumer\",\"\",asList(),Collections.emptySet()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(2,groupDescription.members().size())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testDescribeConsumerGroups['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "DescribeGroupsResponseData data = new DescribeGroupsResponseData()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(GROUP_ID,groupDescription.groupId())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "data = new DescribeGroupsResponseData()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final ConsumerGroupDescription groupDescription = result.describedGroups().get(GROUP_ID).get()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "data = new DescribeGroupsResponseData()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.COORDINATOR_NOT_AVAILABLE,Node.noNode()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(GROUP_ID,Errors.COORDINATOR_NOT_AVAILABLE,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "memberAssignment.get(memberAssignmentBytes)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.COORDINATOR_LOAD_IN_PROGRESS,Node.noNode()))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final List<TopicPartition> topicPartitions = new ArrayList<>()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "TestUtils.assertFutureError(result.describedGroups().get(GROUP_ID),)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expectedMemberDescriptions.add(convertToMemberDescriptions(memberOne,new MemberAssignment(new HashSet<>(topicPartitions))))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "TopicPartition myTopicPartition1 = new TopicPartition(\"my_topic\",1)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(GROUP_ID,Errors.COORDINATOR_NOT_AVAILABLE,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "expectedMemberDescriptions.add(convertToMemberDescriptions(memberTwo,new MemberAssignment(new HashSet<>(topicPartitions))))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(GROUP_ID,Errors.NOT_COORDINATOR,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "final DescribeConsumerGroupsResult result = env.adminClient().describeConsumerGroups(singletonList(GROUP_ID))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "DescribedGroupMember memberTwo = DescribeGroupsResponse.groupMember(\"1\",\"instance2\",\"clientId1\",\"clientHost\",memberAssignmentBytes,null)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(GROUP_ID,Errors.NONE,\"\",ConsumerProtocol.PROTOCOL_TYPE,\"\",asList(memberOne,memberTwo),Collections.emptySet()))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "topicPartitions.add(0,myTopicPartition0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<MemberDescription> expectedMemberDescriptions = new ArrayList<>()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final ByteBuffer memberAssignment = ConsumerProtocol.serializeAssignment(new ConsumerPartitionAssignor.Assignment(topicPartitions))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "topicPartitions.add(1,myTopicPartition1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(GROUP_ID,Errors.COORDINATOR_LOAD_IN_PROGRESS,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "byte(( memberAssignmentBytes = new byte((((@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testDescribeNonConsumerGroups['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(1,result.describedGroups().size())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "topicPartitions.add(2,myTopicPartition2)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(GROUP_ID,Errors.NOT_COORDINATOR,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "TopicPartition myTopicPartition2 = new TopicPartition(\"my_topic\",2)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "DescribedGroupMember memberOne = DescribeGroupsResponse.groupMember(\"0\",\"instance1\",\"clientId0\",\"clientHost\",memberAssignmentBytes,null)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "env.kafkaClient().setNodeApiVersions(NodeApiVersions.create())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TopicPartition myTopicPartition0 = new TopicPartition(\"my_topic\",0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->4 [style = bold, label=""];
14->3 [style = bold, label=""];
33->36 [style = solid, label="memberAssignmentBytes"];
27->1 [style = solid, label="data"];
28->34 [style = bold, label=""];
34->19 [style = bold, label=""];
38->11 [style = bold, label=""];
4->39 [style = bold, label=""];
38->29 [style = bold, label=""];
37->17 [style = bold, label=""];
22->9 [style = bold, label=""];
23->12 [style = solid, label="topicPartitions"];
8->14 [style = bold, label=""];
18->30 [style = bold, label=""];
9->20 [style = bold, label=""];
30->36 [style = bold, label=""];
37->38 [style = solid, label="data"];
41->1 [style = bold, label=""];
27->16 [style = bold, label=""];
39->27 [style = bold, label=""];
33->18 [style = solid, label="memberAssignmentBytes"];
30->5 [style = solid, label="memberOne"];
11->40 [style = bold, label=""];
24->15 [style = solid, label="expectedMemberDescriptions"];
32->2 [style = bold, label=""];
17->45 [style = dashed, label="0"];
42->0 [style = bold, label=""];
24->5 [style = bold, label=""];
6->29 [style = bold, label=""];
33->30 [style = solid, label="memberAssignmentBytes"];
3->35 [style = bold, label=""];
17->38 [style = bold, label=""];
36->12 [style = solid, label="memberTwo"];
12->13 [style = bold, label=""];
35->23 [style = bold, label=""];
26->0 [style = bold, label=""];
16->41 [style = dashed, label="0"];
36->24 [style = bold, label=""];
10->40 [style = dashed, label="0"];
7->28 [style = bold, label=""];
23->21 [style = bold, label=""];
16->1 [style = bold, label=""];
33->18 [style = bold, label=""];
5->12 [style = bold, label=""];
11->10 [style = bold, label=""];
31->33 [style = bold, label=""];
0->22 [style = bold, label=""];
4->27 [style = bold, label=""];
21->32 [style = bold, label=""];
27->41 [style = bold, label=""];
45->38 [style = bold, label=""];
20->37 [style = bold, label=""];
35->2 [style = solid, label="myTopicPartition2"];
10->4 [style = bold, label=""];
3->32 [style = solid, label="myTopicPartition1"];
29->7 [style = bold, label=""];
29->44 [style = bold, label=""];
43->0 [style = bold, label=""];
0->20 [style = bold, label=""];
25->8 [style = bold, label=""];
37->45 [style = bold, label=""];
8->6 [style = solid, label="data"];
36->13 [style = solid, label="memberTwo"];
30->13 [style = solid, label="memberOne"];
7->44 [style = dashed, label="0"];
13->6 [style = bold, label=""];
19->15 [style = bold, label=""];
23->5 [style = solid, label="topicPartitions"];
11->4 [style = solid, label="data"];
1->25 [style = bold, label=""];
14->21 [style = solid, label="myTopicPartition0"];
23->31 [style = solid, label="topicPartitions"];
2->31 [style = bold, label=""];
}
