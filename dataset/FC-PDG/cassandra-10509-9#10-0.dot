digraph {
2 [style = filled, label = "Map<KeyCacheKey,RowIndexEntry> savedMap = new HashMap<KeyCacheKey,RowIndexEntry>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertKeyCacheSize(0,KEYSPACE1,COLUMN_FAMILY2)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Iterator<KeyCacheKey> iter = CacheService.instance.keyCache.keyIterator()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CacheService.instance.keyCache.submitWrite(Integer.MAX_VALUE).get()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "size++@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "String columnFamily@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "CacheService.instance.invalidateKeyCache()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "savedMap.put(k,CacheService.instance.keyCache.get(k))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "k.desc.ksname.equals(KEYSPACE1) && k.desc.cfname.equals(COLUMN_FAMILY2)@@@16@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Iterator<KeyCacheKey> iter = CacheService.instance.keyCache.keyIterator()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "k.desc.ksname.equals(KEYSPACE1) && k.desc.cfname.equals(COLUMN_FAMILY2)@@@16@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "int size = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testKeyCacheLoad['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ColumnFamilyStore store = Keyspace.open(KEYSPACE1).getColumnFamilyStore(COLUMN_FAMILY2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "store.forceBlockingFlush()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expected.isIndexed()@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "KeyCacheKey k = iter.next()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(expected.columnsIndex(),actual.columnsIndex())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(expected,size)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "String keyspace@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "int expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "CacheService.instance.invalidateKeyCache()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(expected.deletionTime(),actual.deletionTime())@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertKeyCacheSize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CompactionManager.instance.disableAutoCompaction()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "CacheService.instance.keyCache.loadSaved()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "iter.hasNext()@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertKeyCacheSize(savedMap.size(),KEYSPACE1,COLUMN_FAMILY2)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "CacheService.instance.keyCache.loadSaved(store)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "RowIndexEntry actual = CacheService.instance.keyCache.get(entry.getKey())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "readData(KEYSPACE1,COLUMN_FAMILY2,100)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "KeyCacheKey k = iter.next()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SchemaLoader.insertData(KEYSPACE1,COLUMN_FAMILY2,0,100)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "RowIndexEntry expected = entry.getValue()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertKeyCacheSize(0,KEYSPACE1,COLUMN_FAMILY2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "iter.hasNext()@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testKeyCacheLoad['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertEquals(expected.position,actual.position)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertKeyCacheSize(100,KEYSPACE1,COLUMN_FAMILY2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "k.desc.ksname.equals(keyspace) && k.desc.cfname.equals(columnFamily)@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
8->26 [style = dotted, label="true"];
31->33 [style = solid, label="size"];
1->8 [style = bold, label=""];
8->15 [style = bold, label=""];
32->37 [style = bold, label=""];
18->23 [style = bold, label=""];
21->19 [style = bold, label=""];
28->20 [style = bold, label=""];
16->10 [style = bold, label=""];
39->38 [style = solid, label="keyspace"];
30->38 [style = solid, label="columnFamily"];
36->31 [style = bold, label=""];
8->15 [style = dotted, label="true"];
26->9 [style = bold, label=""];
32->33 [style = solid, label="size"];
13->5 [style = dotted, label="true"];
26->8 [style = bold, label=""];
38->32 [style = dotted, label="true"];
25->6 [style = bold, label=""];
11->24 [style = bold, label=""];
9->8 [style = bold, label=""];
2->4 [style = bold, label=""];
26->9 [style = dotted, label="true"];
27->6 [style = bold, label=""];
1->9 [style = bold, label=""];
19->0 [style = bold, label=""];
31->34 [style = bold, label=""];
15->26 [style = bold, label=""];
0->7 [style = bold, label=""];
38->32 [style = bold, label=""];
20->21 [style = bold, label=""];
6->14 [style = bold, label=""];
22->3 [style = bold, label=""];
5->21 [style = bold, label=""];
24->16 [style = bold, label=""];
8->1 [style = dotted, label="true"];
37->35 [style = dotted, label="true"];
3->28 [style = bold, label=""];
14->17 [style = solid, label="store"];
37->38 [style = dotted, label="true"];
17->28 [style = dashed, label="0"];
36->39 [style = dotted, label="true"];
34->37 [style = bold, label=""];
36->30 [style = dotted, label="true"];
38->37 [style = bold, label=""];
1->9 [style = dotted, label="true"];
15->9 [style = solid, label="k"];
8->12 [style = bold, label=""];
13->5 [style = bold, label=""];
4->8 [style = bold, label=""];
3->17 [style = bold, label=""];
14->18 [style = bold, label=""];
10->2 [style = bold, label=""];
35->38 [style = bold, label=""];
36->29 [style = dotted, label="true"];
37->35 [style = bold, label=""];
23->11 [style = bold, label=""];
37->33 [style = bold, label=""];
13->21 [style = bold, label=""];
31->32 [style = solid, label="size"];
12->22 [style = bold, label=""];
29->33 [style = solid, label="expected"];
17->20 [style = bold, label=""];
15->1 [style = bold, label=""];
}
