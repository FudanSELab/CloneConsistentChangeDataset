digraph {
6 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\",shouldRead)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThan(\"id\",79),SPEC,true).eval(FILE)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(\"Should read: may possible ids\",shouldRead)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(greaterThan(\"id\",79),SPEC,true).eval(FILE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThan(\"id\",INT_MAX_VALUE),SPEC,true).eval(FILE)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "boolean shouldRead = ManifestEvaluator.forRowFilter(greaterThan(\"id\",85),SPEC,true).eval(FILE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testIntegerGt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testIntegerLt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThan(\"id\",30),SPEC,true).eval(FILE)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "boolean shouldRead = ManifestEvaluator.forRowFilter(lessThan(\"id\",INT_MIN_VALUE - 25),SPEC,true).eval(FILE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThan(\"id\",INT_MIN_VALUE + 1),SPEC,true).eval(FILE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testIntegerLt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(greaterThan(\"id\",78),SPEC,true).eval(FILE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertTrue(\"Should read: one possible id\",shouldRead)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThan(\"id\",INT_MIN_VALUE),SPEC,true).eval(FILE)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "boolean shouldRead = ManifestEvaluator.forRowFilter(lessThan(\"id\",5),SPEC,true).eval(FILE)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(greaterThan(\"id\",75),SPEC,true).eval(FILE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (79 is not > 79)\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThan(\"id\",31),SPEC,true).eval(FILE)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (30 is not < 30)\",shouldRead)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->6 [style = solid, label="shouldRead"];
0->5 [style = solid, label="shouldRead"];
12->5 [style = bold, label=""];
5->9 [style = bold, label=""];
4->17 [style = dashed, label="0"];
7->12 [style = bold, label=""];
2->1 [style = bold, label=""];
18->1 [style = solid, label="shouldRead"];
8->3 [style = bold, label=""];
0->16 [style = dashed, label="0"];
7->20 [style = dashed, label="0"];
3->6 [style = bold, label=""];
7->0 [style = bold, label=""];
2->1 [style = solid, label="shouldRead"];
5->18 [style = bold, label=""];
0->12 [style = dashed, label="0"];
3->13 [style = dashed, label="0"];
4->7 [style = bold, label=""];
17->20 [style = solid, label="shouldRead"];
6->4 [style = bold, label=""];
12->5 [style = solid, label="shouldRead"];
14->15 [style = solid, label="shouldRead"];
5->2 [style = bold, label=""];
15->17 [style = bold, label=""];
11->7 [style = solid, label="shouldRead"];
9->1 [style = solid, label="shouldRead"];
20->16 [style = bold, label=""];
19->14 [style = bold, label=""];
10->13 [style = bold, label=""];
18->1 [style = bold, label=""];
6->15 [style = dashed, label="0"];
2->9 [style = dashed, label="0"];
6->11 [style = bold, label=""];
11->7 [style = bold, label=""];
2->18 [style = dashed, label="0"];
3->6 [style = solid, label="shouldRead"];
16->5 [style = bold, label=""];
14->15 [style = bold, label=""];
4->7 [style = solid, label="shouldRead"];
13->6 [style = bold, label=""];
4->11 [style = dashed, label="0"];
9->1 [style = bold, label=""];
3->14 [style = dashed, label="0"];
16->5 [style = solid, label="shouldRead"];
0->5 [style = bold, label=""];
17->20 [style = bold, label=""];
}
