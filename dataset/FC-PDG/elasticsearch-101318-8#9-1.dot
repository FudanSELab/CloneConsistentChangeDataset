digraph {
3 [style = filled, label = "getInterpreter().adaptivePredict(_input,95,_ctx)@@@30@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "enterOuterAlt(_localctx,2)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "getInterpreter().adaptivePredict(_input,37,_ctx)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "getInterpreter().adaptivePredict(_input,92,_ctx)@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "enterRule(_localctx,24,RULE_groupingExpressions)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "(((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << ANALYZE) | (1L << ANALYZED) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << DEBUG) | (1L << EXECUTABLE) | (1L << EXPLAIN) | (1L << FORMAT) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << MAPPED) | (1L << OPTIMIZED) | (1L << PARSED) | (1L << PHYSICAL) | (1L << PLAN) | (1L << RLIKE) | (1L << QUERY) | (1L << SCHEMAS) | (1L << SHOW) | (1L << SYS) | (1L << TABLES))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (TEXT - 64)) | (1L << (TYPE - 64)) | (1L << (TYPES - 64)) | (1L << (VERIFY - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (DIGIT_IDENTIFIER - 64)) | (1L << (QUOTED_IDENTIFIER - 64)) | (1L << (BACKQUOTED_IDENTIFIER - 64)))) != 0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "getInterpreter().adaptivePredict(_input,91,_ctx)@@@30@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "GroupingExpressionsContext _localctx = new GroupingExpressionsContext(_ctx,getState())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "enterOuterAlt(_localctx,1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "_localctx.exception = re@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "tableIdentifier['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "{setState(315)expression()}@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "{exitRule()}@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "enterRule(_localctx,86,RULE_tableIdentifier)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "enterRule(_localctx,84,RULE_tableIdentifier)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "setState(316)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "return _localctx@@@58@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "RecognitionException re@@@50@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "_errHandler.recover(this,re)@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "{setState(701)_errHandler.sync(this)switch (getInterpreter().adaptivePredict(_input,91,_ctx)) {case 1:{setState(698)((TableIdentifierContext)_localctx).catalog = identifier()setState(699)match(T__3)}breaksetState(703)((TableIdentifierContext)_localctx).name = identifier()}@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "_errHandler.sync(this)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RecognitionException re@@@45@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "groupingExpressions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "_localctx.exception = re@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tableIdentifier['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return _localctx@@@53@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "TableIdentifierContext _localctx = new TableIdentifierContext(_ctx,getState())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "getInterpreter().adaptivePredict(_input,96,_ctx)@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "(((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__0) | (1L << ANALYZE) | (1L << ANALYZED) | (1L << CAST) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << DEBUG) | (1L << EXECUTABLE) | (1L << EXISTS) | (1L << EXPLAIN) | (1L << EXTRACT) | (1L << FALSE) | (1L << FORMAT) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << LEFT) | (1L << MAPPED) | (1L << MATCH) | (1L << NOT) | (1L << NULL) | (1L << OPTIMIZED) | (1L << PARSED) | (1L << PHYSICAL) | (1L << PLAN) | (1L << RIGHT) | (1L << RLIKE) | (1L << QUERY) | (1L << SCHEMAS) | (1L << SHOW) | (1L << SYS) | (1L << TABLES))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (TEXT - 64)) | (1L << (TRUE - 64)) | (1L << (TYPE - 64)) | (1L << (TYPES - 64)) | (1L << (VERIFY - 64)) | (1L << (FUNCTION_ESC - 64)) | (1L << (DATE_ESC - 64)) | (1L << (TIME_ESC - 64)) | (1L << (TIMESTAMP_ESC - 64)) | (1L << (GUID_ESC - 64)) | (1L << (PLUS - 64)) | (1L << (MINUS - 64)) | (1L << (ASTERISK - 64)) | (1L << (PARAM - 64)) | (1L << (STRING - 64)) | (1L << (INTEGER_VALUE - 64)) | (1L << (DECIMAL_VALUE - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (DIGIT_IDENTIFIER - 64)) | (1L << (QUOTED_IDENTIFIER - 64)) | (1L << (BACKQUOTED_IDENTIFIER - 64)))) != 0)@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int _la@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "setState(708)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "{setState(303)match(T__0)setState(312)_la = _input.LA(1)if ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__0) | (1L << ANALYZE) | (1L << ANALYZED) | (1L << CAST) | (1L << CATALOGS) | (1L << COLUMNS) | (1L << DEBUG) | (1L << EXECUTABLE) | (1L << EXISTS) | (1L << EXPLAIN) | (1L << EXTRACT) | (1L << FALSE) | (1L << FORMAT) | (1L << FUNCTIONS) | (1L << GRAPHVIZ) | (1L << LEFT) | (1L << MAPPED) | (1L << MATCH) | (1L << NOT) | (1L << NULL) | (1L << OPTIMIZED) | (1L << PARSED) | (1L << PHYSICAL) | (1L << PLAN) | (1L << RIGHT) | (1L << RLIKE) | (1L << QUERY) | (1L << SCHEMAS) | (1L << SHOW) | (1L << SYS) | (1L << TABLES))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (TEXT - 64)) | (1L << (TRUE - 64)) | (1L << (TYPE - 64)) | (1L << (TYPES - 64)) | (1L << (VERIFY - 64)) | (1L << (FUNCTION_ESC - 64)) | (1L << (DATE_ESC - 64)) | (1L << (TIME_ESC - 64)) | (1L << (TIMESTAMP_ESC - 64)) | (1L << (GUID_ESC - 64)) | (1L << (PLUS - 64)) | (1L << (MINUS - 64)) | (1L << (ASTERISK - 64)) | (1L << (PARAM - 64)) | (1L << (STRING - 64)) | (1L << (INTEGER_VALUE - 64)) | (1L << (DECIMAL_VALUE - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (DIGIT_IDENTIFIER - 64)) | (1L << (QUOTED_IDENTIFIER - 64)) | (1L << (BACKQUOTED_IDENTIFIER - 64)))) != 0)) {{setState(304)expression()setState(309)_errHandler.sync(this)_la = _input.LA(1)while (_la == T__2) {{{setState(305)match(T__2)setState(306)expression()}}setState(311)_errHandler.sync(this)_la = _input.LA(1)}}}setState(314)match(T__1)}@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "setState(704)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "{exitRule()}@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "enterOuterAlt(_localctx,2)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "_errHandler.reportError(this,re)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
11->18 [style = solid, label="_la"];
15->13 [style = bold, label=""];
34->13 [style = solid, label="_localctx"];
17->8 [style = solid, label="_localctx"];
12->5 [style = bold, label=""];
17->34 [style = dashed, label="0"];
4->25 [style = bold, label=""];
21->1 [style = dotted, label="true"];
34->27 [style = solid, label="_localctx"];
17->6 [style = bold, label=""];
7->16 [style = solid, label="_localctx"];
25->13 [style = bold, label=""];
26->2 [style = dotted, label="true"];
6->20 [style = dashed, label="0"];
26->29 [style = bold, label=""];
21->8 [style = dotted, label="true"];
17->13 [style = solid, label="_localctx"];
6->32 [style = dashed, label="0"];
4->15 [style = bold, label=""];
12->2 [style = dotted, label="true"];
21->8 [style = bold, label=""];
4->21 [style = bold, label=""];
18->30 [style = bold, label=""];
31->4 [style = bold, label=""];
15->21 [style = dashed, label="0"];
10->17 [style = bold, label=""];
9->30 [style = bold, label=""];
25->28 [style = dotted, label="true"];
19->17 [style = bold, label=""];
2->9 [style = bold, label=""];
20->11 [style = bold, label=""];
25->13 [style = dotted, label="true"];
1->28 [style = dashed, label="0"];
26->9 [style = dotted, label="true"];
0->22 [style = dashed, label="0"];
34->35 [style = solid, label="_localctx"];
17->20 [style = solid, label="_localctx"];
8->7 [style = bold, label=""];
24->30 [style = bold, label=""];
22->4 [style = bold, label=""];
7->14 [style = bold, label=""];
15->13 [style = dotted, label="true"];
15->3 [style = dotted, label="true"];
3->23 [style = dashed, label="0"];
25->27 [style = bold, label=""];
11->31 [style = bold, label=""];
5->2 [style = bold, label=""];
15->25 [style = dashed, label="0"];
11->0 [style = bold, label=""];
18->16 [style = solid, label="_localctx"];
29->2 [style = bold, label=""];
30->35 [style = bold, label=""];
15->8 [style = dotted, label="true"];
12->5 [style = dotted, label="true"];
0->4 [style = bold, label=""];
15->1 [style = dotted, label="true"];
17->6 [style = solid, label="_localctx"];
6->11 [style = bold, label=""];
21->23 [style = dotted, label="true"];
0->31 [style = dashed, label="0"];
9->14 [style = bold, label=""];
11->22 [style = bold, label=""];
26->29 [style = dotted, label="true"];
34->32 [style = bold, label=""];
27->24 [style = bold, label=""];
21->13 [style = dotted, label="true"];
34->32 [style = solid, label="_localctx"];
25->27 [style = dotted, label="true"];
32->11 [style = bold, label=""];
12->9 [style = dotted, label="true"];
33->34 [style = bold, label=""];
18->14 [style = bold, label=""];
15->8 [style = bold, label=""];
13->18 [style = bold, label=""];
21->13 [style = bold, label=""];
17->20 [style = bold, label=""];
}
