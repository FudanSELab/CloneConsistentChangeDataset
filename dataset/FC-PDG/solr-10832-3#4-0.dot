digraph {
5 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(0L,result)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "multManyFieldsWithSubmults['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "values.put(\"a\",123456789123456789L)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(0L,result)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(24L,result)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(0D,result)@@@18@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "values.put(\"b\",123456789123456789L)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "subManyFieldsWithSubsubs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "values.put(\"d\",123456789123456789L)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "subManyFieldsWithSubsubs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "values.clear()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,mult(c,d))\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(0D,result)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"sub(a,b,sub(c,d))\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->10 [style = bold, label=""];
16->22 [style = solid, label="result"];
2->0 [style = solid, label="result"];
15->7 [style = bold, label=""];
21->19 [style = bold, label=""];
17->6 [style = bold, label=""];
7->12 [style = bold, label=""];
1->15 [style = bold, label=""];
23->4 [style = bold, label=""];
19->11 [style = bold, label=""];
20->14 [style = bold, label=""];
16->10 [style = solid, label="result"];
10->22 [style = dashed, label="0"];
12->9 [style = bold, label=""];
24->23 [style = bold, label=""];
9->16 [style = bold, label=""];
8->2 [style = solid, label="result"];
13->17 [style = bold, label=""];
2->0 [style = bold, label=""];
14->23 [style = dashed, label="0"];
8->2 [style = bold, label=""];
16->21 [style = bold, label=""];
16->21 [style = solid, label="result"];
11->13 [style = bold, label=""];
6->8 [style = bold, label=""];
16->5 [style = solid, label="result"];
16->5 [style = bold, label=""];
5->21 [style = dashed, label="0"];
0->2 [style = dashed, label="0"];
4->1 [style = bold, label=""];
5->22 [style = bold, label=""];
2->3 [style = solid, label="result"];
18->14 [style = bold, label=""];
14->4 [style = bold, label=""];
10->11 [style = bold, label=""];
}
