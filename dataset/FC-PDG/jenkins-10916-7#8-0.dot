digraph {
8 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.oldestOnPage)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(true,historyPageFilter.hasDownPage)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.runs.get(1).getEntryId())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(2,historyPageFilter.runs.size())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertFalse(historyPageFilter.hasDownPage)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(4,historyPageFilter.queueItems.get(0).getEntryId())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "test_latest_partial_page['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(10),historyPageFilter.runs.get(0).getEntryId())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasDownPage)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "List<ModelObject> runs = newRuns(1,2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "test_latest_longer_list['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "test_latest_partial_page['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "List<Queue.Item> queueItems = newQueueItems(11,12)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(4,historyPageFilter.newestOnPage)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(12,historyPageFilter.newestOnPage)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(12,historyPageFilter.queueItems.get(0).getEntryId())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "historyPageFilter.add(runs,queueItems)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(2),historyPageFilter.runs.get(0).getEntryId())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<Queue.Item> queueItems = newQueueItems(3,4)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertFalse(historyPageFilter.hasUpPage)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Assert.assertEquals(3,historyPageFilter.runs.size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,null,null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(3,historyPageFilter.queueItems.get(1).getEntryId())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(2,historyPageFilter.queueItems.size())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<ModelObject> runs = newRuns(1,10)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasUpPage)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->25 [style = bold, label=""];
15->13 [style = bold, label=""];
24->19 [style = bold, label=""];
13->24 [style = bold, label=""];
7->18 [style = dashed, label="0"];
6->12 [style = solid, label="runs"];
19->12 [style = bold, label=""];
7->17 [style = dashed, label="0"];
10->19 [style = dashed, label="0"];
14->5 [style = bold, label=""];
14->20 [style = dashed, label="0"];
11->23 [style = dashed, label="0"];
12->16 [style = bold, label=""];
1->0 [style = bold, label=""];
7->4 [style = bold, label=""];
16->17 [style = bold, label=""];
11->2 [style = bold, label=""];
3->18 [style = bold, label=""];
20->21 [style = bold, label=""];
5->1 [style = bold, label=""];
19->12 [style = solid, label="queueItems"];
25->20 [style = bold, label=""];
18->4 [style = bold, label=""];
3->7 [style = bold, label=""];
10->12 [style = bold, label=""];
6->24 [style = dashed, label="0"];
6->10 [style = bold, label=""];
2->14 [style = bold, label=""];
0->8 [style = bold, label=""];
2->25 [style = dashed, label="0"];
5->21 [style = dashed, label="0"];
12->3 [style = bold, label=""];
13->6 [style = bold, label=""];
22->13 [style = bold, label=""];
4->11 [style = bold, label=""];
24->12 [style = solid, label="runs"];
17->4 [style = bold, label=""];
4->23 [style = bold, label=""];
3->16 [style = dashed, label="0"];
10->12 [style = solid, label="queueItems"];
9->13 [style = bold, label=""];
}
