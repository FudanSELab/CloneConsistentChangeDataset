digraph {
20 [style = filled, label = "Assert.assertEquals(result.get(0).getFieldValue(\"j\"),new IntWritable(2))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "EmbeddedGobblin embeddedGobblin_nondedup = createEmbeddedGobblinCompactionJob(\"basic\",basePath.getAbsolutePath().toString()).setConfiguration(CompactionJobConfigurator.COMPACTION_JOB_CONFIGURATOR_FACTORY_CLASS_KEY,.getName()).setConfiguration(COMPACTION_OUTPUT_EXTENSION,\"orc\").setConfiguration(COMPACTION_SHOULD_DEDUPLICATE,\"false\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertEquals(result.size(),4)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "JobExecutionResult execution = embeddedGobblin_nondedup.run()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(result.get(2).getFieldValue(\"j\"),new IntWritable(3))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "File jobDir = new File(basePath,minutelyPath)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"i\"),new IntWritable(1))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String minutelyPath = \"Identity/MemberAccount_2/minutely/2017/04/03/10/20_30/run_2017-04-03-10-20\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(statuses.size() == 1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testNonDedup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "statuses.clear()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "EmbeddedGobblin embeddedGobblin_nondedup = createEmbeddedGobblin(\"basic\",basePath.getAbsolutePath().toString()).setConfiguration(CompactionJobConfigurator.COMPACTION_JOB_CONFIGURATOR_FACTORY_CLASS_KEY,.getName()).setConfiguration(COMPACTION_OUTPUT_EXTENSION,\"orc\").setConfiguration(COMPACTION_SHOULD_DEDUPLICATE,\"false\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "FileSystem fs@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "createTestingData(jobDir)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "FileSystem fs = FileSystem.getLocal(new Configuration())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "result.sort(new Comparator<OrcStruct>(){@Override public int compare(OrcStruct o1,OrcStruct o2){return o1.compareTo(o2)}})@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "statuses.add(status)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(execution.isSuccessful())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "reloadFolder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testNonDedup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "List<FileStatus> statuses@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<FileStatus> statuses = new ArrayList<>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "File basePath = Files.createTempDir()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "statuses.add(status)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "List<OrcStruct> result = readOrcFile(statuses.get(0).getPath())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "File outputDir@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"j\"),new IntWritable(2))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String hourlyPath = \"Identity/MemberAccount_2/hourly/2017/04/03/10/\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(result.get(2).getFieldValue(\"i\"),new IntWritable(2))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"j\"),new IntWritable(5))@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(result.get(0).getFieldValue(\"i\"),new IntWritable(1))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "File outputDir = new File(basePath,hourlyPath)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"i\"),new IntWritable(4))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(jobDir.mkdirs())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "basePath.deleteOnExit()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
13->25 [style = bold, label=""];
10->22 [style = bold, label=""];
15->10 [style = bold, label=""];
0->9 [style = bold, label=""];
16->18 [style = bold, label=""];
6->26 [style = bold, label=""];
13->18 [style = solid, label="basePath"];
3->1 [style = bold, label=""];
29->30 [style = bold, label=""];
29->34 [style = dotted, label="true"];
18->19 [style = solid, label="jobDir"];
12->20 [style = bold, label=""];
28->13 [style = bold, label=""];
25->14 [style = bold, label=""];
14->18 [style = solid, label="minutelyPath"];
7->3 [style = bold, label=""];
1->11 [style = bold, label=""];
22->4 [style = bold, label=""];
5->19 [style = bold, label=""];
13->4 [style = solid, label="basePath"];
26->0 [style = bold, label=""];
17->2 [style = bold, label=""];
30->31 [style = bold, label=""];
18->5 [style = bold, label=""];
23->6 [style = bold, label=""];
19->27 [style = bold, label=""];
27->10 [style = bold, label=""];
16->4 [style = solid, label="hourlyPath"];
4->8 [style = bold, label=""];
11->17 [style = bold, label=""];
29->33 [style = dotted, label="true"];
15->27 [style = dashed, label="0"];
9->12 [style = bold, label=""];
19->15 [style = bold, label=""];
20->7 [style = bold, label=""];
29->32 [style = dotted, label="true"];
21->13 [style = bold, label=""];
24->23 [style = bold, label=""];
8->24 [style = bold, label=""];
}
