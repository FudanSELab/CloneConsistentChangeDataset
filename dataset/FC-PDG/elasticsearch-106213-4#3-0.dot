digraph {
0 [style = filled, label = "testAutoExpandReplicasAdjustedWhenDataNodeJoins['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "client().admin().indices().create(createIndexRequest(\"test\").settings(Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS,0)).waitForActiveShards(ActiveShardCount.NONE)).actionGet()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "client().admin().cluster().prepareReroute().setRetryFailed(true).get()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "internalCluster().startNode()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(healthResponse1.getStatus(),equalTo(ClusterHealthStatus.RED))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final ClusterHealthResponse healthResponse1 = client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).execute().actionGet()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(healthResponse1.getActiveShards(),equalTo(0))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testShardsAllocatedAfterDataNodesStart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "internalCluster().startNode(nonDataNode())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "testAutoExpandReplicasAdjustedWhenDataNodeJoins['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "client().admin().indices().create(createIndexRequest(\"test\").settings(Settings.builder().put(IndexMetadata.SETTING_AUTO_EXPAND_REPLICAS,\"0-all\")).waitForActiveShards(ActiveShardCount.NONE)).actionGet()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "internalCluster().startNode(Settings.builder().put(Node.NODE_DATA_SETTING.getKey(),false).build())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "internalCluster().startNode(Settings.builder().put(Node.NODE_DATA_SETTING.getKey(),true).build())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(healthResponse1.isTimedOut(),equalTo(false))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "internalCluster().startNode()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForNodes(\"2\").setWaitForGreenStatus().execute().actionGet().isTimedOut(),equalTo(false))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->2 [style = bold, label=""];
4->5 [style = bold, label=""];
0->6 [style = bold, label=""];
10->7 [style = bold, label=""];
1->3 [style = bold, label=""];
11->10 [style = bold, label=""];
6->14 [style = bold, label=""];
7->14 [style = dashed, label="0"];
6->7 [style = bold, label=""];
7->8 [style = bold, label=""];
6->10 [style = dashed, label="0"];
5->13 [style = dashed, label="0"];
4->12 [style = dashed, label="0"];
3->9 [style = bold, label=""];
9->4 [style = bold, label=""];
15->6 [style = bold, label=""];
14->8 [style = bold, label=""];
9->12 [style = bold, label=""];
12->13 [style = bold, label=""];
8->1 [style = bold, label=""];
}
