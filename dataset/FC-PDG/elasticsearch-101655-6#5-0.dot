digraph {
3 [style = filled, label = "assertEquals(8,channelBuffer.getIndex())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(PAGE_SIZE - 20,channelBuffer.getRemaining())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(PAGE_SIZE - 10,channelBuffer.getRemaining())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageSupplier)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(0,channelBuffer.getIndex())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "channelBuffer.release(10)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testIncrementIndexWithOffset['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(PAGE_SIZE - 20,channelBuffer.getRemaining())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "testIncrementIndexWithOffset['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(PAGE_SIZE - 10,channelBuffer.getRemaining())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "channelBuffer.release(2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(InboundChannelBuffer.PAGE_SIZE,channelBuffer.getRemaining())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "channelBuffer.ensureCapacity(InboundChannelBuffer.PAGE_SIZE)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(InboundChannelBuffer.PAGE_SIZE - 20,channelBuffer.getRemaining())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "InboundChannelBuffer channelBuffer = new InboundChannelBuffer(defaultPageAllocator)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(InboundChannelBuffer.PAGE_SIZE - 10,channelBuffer.getRemaining())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(InboundChannelBuffer.PAGE_SIZE - 20,channelBuffer.getRemaining())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(10,channelBuffer.getIndex())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testIncrementIndex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "channelBuffer.ensureCapacity(PAGE_SIZE)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(PAGE_SIZE,channelBuffer.getRemaining())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "channelBuffer.incrementIndex(10)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
10->15 [style = dashed, label="0"];
0->16 [style = bold, label=""];
1->4 [style = bold, label=""];
7->11 [style = bold, label=""];
11->20 [style = dashed, label="0"];
2->6 [style = bold, label=""];
16->6 [style = bold, label=""];
4->13 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
3->15 [style = bold, label=""];
1->18 [style = dashed, label="0"];
19->17 [style = bold, label=""];
7->20 [style = bold, label=""];
12->9 [style = bold, label=""];
7->14 [style = bold, label=""];
3->10 [style = bold, label=""];
21->9 [style = bold, label=""];
18->4 [style = bold, label=""];
5->6 [style = bold, label=""];
5->0 [style = bold, label=""];
2->16 [style = dashed, label="0"];
9->17 [style = dashed, label="0"];
11->14 [style = dashed, label="0"];
11->8 [style = bold, label=""];
14->8 [style = bold, label=""];
9->1 [style = bold, label=""];
6->7 [style = bold, label=""];
4->5 [style = bold, label=""];
17->18 [style = bold, label=""];
13->0 [style = bold, label=""];
}
