digraph {
7 [style = filled, label = "Map<String,Object> connConfig = new HashMap<String,Object>()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "WorkerConfig configWithOverrides = new StandaloneConfig(props)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Map<String,Object> connConfig = new HashMap<>()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_CONSUMER_OVERRIDES_PREFIX)).andReturn(connConfig)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_ADMIN_OVERRIDES_PREFIX)).andReturn(connConfig)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "props.put(\"consumer.auto.offset.reset\",\"latest\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectedConfigs.put(\"group.id\",\"connect-test\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectedConfigs.put(\"max.poll.interval.ms\",\"1000\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "PowerMock.replayAll()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Map<String,String> expectedConfigs = new HashMap<>(defaultConsumerConfigs)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expectedConfigs.put(\"auto.offset.reset\",\"latest\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testAdminConfigsClientOverridesWithNonePolicy['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "connConfig.put(\"metadata.max.age.ms\",\"10000\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(expectedConfigs,Worker.consumerConfigs(new ConnectorTaskId(\"test\",1),configWithOverrides,connectorConfig,null,allConnectorClientConfigOverridePolicy,CLUSTER_ID))@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "props.put(\"admin.client.id\",\"testid\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "expectedConfigs.put(\"metrics.context.connect.kafka.cluster.id\",CLUSTER_ID)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expectedConfigs.put(\"max.poll.records\",\"5000\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testConsumerConfigsWithClientOverrides['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "props.put(\"admin.metadata.max.age.ms\",\"5000\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testConsumerConfigsWithClientOverrides['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expectedConfigs.put(\"client.id\",\"connector-consumer-test-1\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "connConfig.put(\"max.poll.interval.ms\",\"1000\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "props.put(\"consumer.max.poll.records\",\"5000\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,String> props = new HashMap<>(workerProps)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThrows(,null)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "connConfig.put(\"max.poll.records\",\"5000\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
0->9 [style = bold, label=""];
25->1 [style = bold, label=""];
10->14 [style = bold, label=""];
9->2 [style = bold, label=""];
13->20 [style = dashed, label="0"];
16->6 [style = bold, label=""];
7->21 [style = solid, label="connConfig"];
22->21 [style = bold, label=""];
0->15 [style = solid, label="expectedConfigs"];
6->1 [style = solid, label="props"];
21->24 [style = bold, label=""];
1->0 [style = bold, label=""];
7->4 [style = bold, label=""];
4->22 [style = dashed, label="0"];
1->15 [style = solid, label="configWithOverrides"];
20->25 [style = bold, label=""];
1->7 [style = bold, label=""];
24->14 [style = bold, label=""];
7->10 [style = solid, label="connConfig"];
6->20 [style = bold, label=""];
8->1 [style = bold, label=""];
7->22 [style = bold, label=""];
17->12 [style = bold, label=""];
19->10 [style = solid, label="connConfig"];
3->19 [style = bold, label=""];
3->7 [style = bold, label=""];
18->6 [style = bold, label=""];
7->19 [style = dashed, label="0"];
15->14 [style = dashed, label="0"];
6->13 [style = bold, label=""];
23->6 [style = bold, label=""];
5->21 [style = dashed, label="0"];
11->17 [style = bold, label=""];
8->25 [style = dashed, label="0"];
14->15 [style = bold, label=""];
12->3 [style = bold, label=""];
19->4 [style = bold, label=""];
13->8 [style = bold, label=""];
4->5 [style = bold, label=""];
2->11 [style = bold, label=""];
}
