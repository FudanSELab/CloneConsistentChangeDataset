digraph {
40 [style = filled, label = "assertEquals(commitTime1,hiveClient.getLastCommitTimeSynced(HiveTestUtil.hiveSyncConfig.tableName).get(),\"The last commit that was synced should be updated in the TBLPROPERTIES\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "HiveTestUtil.createCOWTable(instantTime,5,true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "HiveTestUtil.hiveSyncConfig.useJdbc = useJdbc@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "HoodieHiveClient hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "tool.syncHoodieTable()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "boolean useJdbc@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "String instantTime = \"100\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<String> writtenPartitionsSince = hiveClient.getPartitionsWrittenToSince(Option.of(commitTime1))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "HoodieHiveClient hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),fileSystem)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "List<PartitionEvent> partitionEvents = hiveClient.getPartitionEvents(hivePartitions,writtenPartitionsSince)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "HiveTestUtil.hiveSyncConfig.batchSyncNum = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "hiveSyncConfig.partitionFields = Arrays.asList(\"year\",\"month\",\"day\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(0,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table should not have partitions because of the NonPartitionedExtractor\")@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(hiveClient.getTableSchema(hiveSyncConfig.tableName).size(),hiveClient.getDataSchema().getColumns().size(),\"Hive Schema should match the table schema�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽignoring the partition fields\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String commitTime2 = \"101\"@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "hiveSyncConfig.syncMode = syncMode@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(PartitionEventType.ADD,partitionEvents.iterator().next().eventType,\"The one partition event must of type ADD\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "HiveTestUtil.addCOWPartitions(1,true,true,dateTime,commitTime2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "HiveTestUtil.getCreatedTablesSet().add(hiveSyncConfig.databaseName + \".\" + hiveSyncConfig.tableName)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(commitTime2,hiveClient.getLastCommitTimeSynced(HiveTestUtil.hiveSyncConfig.tableName).get(),\"The last commit that was synced should be 101\")@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "HiveSyncTool tool = new HiveSyncTool(HiveTestUtil.hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "hiveSyncConfig.partitionValueExtractorClass = .getCanonicalName()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String syncMode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "hiveClient = new HoodieHiveClient(HiveTestUtil.hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "HiveTestUtil.createCOWTable(commitTime1,5,true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(1,partitionEvents.size(),\"There should be only one partition event\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testSyncIncremental['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testNonPartitionedSync['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "HiveSyncTool tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "tool.syncHoodieTable()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(hiveClient.doesTableExist(hiveSyncConfig.tableName),\"Table \" + hiveSyncConfig.tableName + \" should exist after sync completes\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testNonPartitionedSync['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(6,hiveClient.scanTablePartitions(HiveTestUtil.hiveSyncConfig.tableName).size(),\"The one partition we wrote should be added to hive\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "String commitTime1 = \"100\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "DateTime dateTime = DateTime.now().plusDays(6)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "List<Partition> hivePartitions = hiveClient.scanTablePartitions(HiveTestUtil.hiveSyncConfig.tableName)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "boolean useJdbc@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertFalse(hiveClient.doesTableExist(hiveSyncConfig.tableName),\"Table \" + hiveSyncConfig.tableName + \" should not exist initially\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "HoodieHiveClient hiveClient = new HoodieHiveClient(HiveTestUtil.hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(5,hiveClient.scanTablePartitions(HiveTestUtil.hiveSyncConfig.tableName).size(),\"Table partitions should match the number of partitions we wrote\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "tool = new HiveSyncTool(HiveTestUtil.hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(1,writtenPartitionsSince.size(),\"We should have one partition written after 100 commit\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "HiveSyncTool tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),fileSystem)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "hiveSyncConfig.tableName = \"non_partitioned\"@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "HiveSyncConfig hiveSyncConfig = HiveSyncConfig.copy(HiveTestUtil.hiveSyncConfig)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
32->35 [style = bold, label=""];
27->38 [style = bold, label=""];
16->18 [style = bold, label=""];
31->23 [style = bold, label=""];
2->20 [style = dashed, label="0"];
34->40 [style = bold, label=""];
29->30 [style = bold, label=""];
22->16 [style = bold, label=""];
39->34 [style = bold, label=""];
3->18 [style = dashed, label="0"];
37->25 [style = bold, label=""];
12->11 [style = solid, label="tableName"];
14->3 [style = solid, label="hiveSyncConfig"];
12->16 [style = solid, label="tableName"];
14->15 [style = solid, label="hiveSyncConfig"];
3->6 [style = bold, label=""];
30->32 [style = bold, label=""];
25->43 [style = bold, label=""];
14->18 [style = solid, label="hiveSyncConfig"];
41->42 [style = solid, label="commitTime1"];
42->31 [style = bold, label=""];
6->24 [style = bold, label=""];
24->29 [style = bold, label=""];
19->20 [style = solid, label="syncMode"];
41->24 [style = solid, label="commitTime1"];
25->33 [style = solid, label="commitTime2"];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
15->16 [style = bold, label=""];
8->41 [style = dashed, label="0"];
4->41 [style = bold, label=""];
43->6 [style = bold, label=""];
11->15 [style = bold, label=""];
15->22 [style = dashed, label="0"];
1->11 [style = bold, label=""];
20->4 [style = bold, label=""];
8->0 [style = bold, label=""];
35->28 [style = bold, label=""];
25->43 [style = solid, label="commitTime2"];
37->43 [style = solid, label="dateTime"];
8->0 [style = solid, label="instantTime"];
6->5 [style = bold, label=""];
0->14 [style = bold, label=""];
13->17 [style = bold, label=""];
26->2 [style = bold, label=""];
21->20 [style = bold, label=""];
0->42 [style = dashed, label="0"];
18->6 [style = bold, label=""];
7->19 [style = dashed, label="0"];
5->13 [style = bold, label=""];
21->19 [style = dotted, label="true"];
30->32 [style = solid, label="hivePartitions"];
41->40 [style = solid, label="commitTime1"];
14->22 [style = solid, label="hiveSyncConfig"];
28->44 [style = bold, label=""];
11->22 [style = bold, label=""];
23->39 [style = bold, label=""];
7->2 [style = solid, label="useJdbc"];
4->8 [style = bold, label=""];
14->9 [style = bold, label=""];
10->2 [style = bold, label=""];
12->5 [style = solid, label="tableName"];
9->12 [style = bold, label=""];
44->27 [style = bold, label=""];
38->33 [style = bold, label=""];
26->36 [style = dotted, label="true"];
7->36 [style = dashed, label="0"];
10->7 [style = dotted, label="true"];
36->2 [style = solid, label="useJdbc"];
40->37 [style = bold, label=""];
24->32 [style = solid, label="writtenPartitionsSince"];
41->42 [style = bold, label=""];
14->31 [style = dashed, label="0"];
}
