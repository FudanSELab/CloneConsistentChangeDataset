digraph {
0 [style = filled, label = "builder.globalTable(\"anyTopic\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(streams.threads.size(),equalTo(0))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "shouldTransitToRunningWithGlobalOnlyTopology['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(streams.state(),KafkaStreams.State.CREATED)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final KafkaStreams streams = new KafkaStreams(builder.build(),props,supplier,time)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "streams.start()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "shouldNotCreateStreamThreadsForGlobalOnlyTopology['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "streams.close()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "waitForCondition(null,\"Streams never started, state is \" + streams.state())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "shouldNotCreateStreamThreadsForGlobalOnlyTopology['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "waitForCondition(null,\"Streams never stopped.\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6->4 [style = bold, label=""];
1->8 [style = bold, label=""];
9->7 [style = bold, label=""];
7->10 [style = bold, label=""];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
2->1 [style = bold, label=""];
5->4 [style = bold, label=""];
4->0 [style = bold, label=""];
0->2 [style = bold, label=""];
8->9 [style = bold, label=""];
10->11 [style = bold, label=""];
}
