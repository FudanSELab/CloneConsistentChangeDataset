digraph {
7 [style = filled, label = "testGetListOfTopicNamesByFilteringTag['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "result = ConfigStoreUtils.getListOfTopicNamesByFilteringTag(properties,configClient,Optional.absent(),configStoreUri,GOBBLIN_CONFIG_TAGS_BLACKLIST)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testGetListOfTopicNamesByFilteringTag['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Assert.assertTrue(result.contains(\"Topic2\"))@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "result = ConfigStoreUtils.getListOfTopicNamesByFilteringTag(properties,configClient,Optional.absent(),configStoreUri,GOBBLIN_CONFIG_TAGS_WHITELIST)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Properties properties = new Properties()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(result.size(),1)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testGetListOfTopicNamesByFilteringTag['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "properties.setProperty(GOBBLIN_CONFIG_FILTER,\"/data/tracking\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "properties.setProperty(GOBBLIN_CONFIG_COMMONPATH,\"/data/tracking\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "properties.setProperty(GOBBLIN_CONFIG_TAGS_WHITELIST,\"/tags/random\")@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "properties.setProperty(GOBBLIN_CONFIG_TAGS_WHITELIST,\"/tags/whitelist\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<String> result = ConfigStoreUtils.getListOfTopicNamesByFilteringTag(properties,configClient,Optional.absent(),configStoreUri,GOBBLIN_CONFIG_TAGS_WHITELIST)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(result.contains(\"Topic1\"))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(result.size(),2)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "properties.setProperty(GOBBLIN_CONFIG_TAGS_BLACKLIST,\"/tags/blacklist\")@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Assert.assertTrue(result.contains(\"Topic1\"))@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(result.size(),2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(result.contains(\"Topic3\"))@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertTrue(result.contains(\"Topic2\"))@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
5->2 [style = bold, label=""];
8->16 [style = bold, label=""];
9->18 [style = bold, label=""];
4->6 [style = bold, label=""];
13->15 [style = bold, label=""];
19->5 [style = bold, label=""];
10->9 [style = bold, label=""];
17->14 [style = bold, label=""];
0->3 [style = bold, label=""];
16->13 [style = bold, label=""];
6->8 [style = bold, label=""];
3->1 [style = bold, label=""];
12->5 [style = bold, label=""];
5->13 [style = solid, label="properties"];
1->4 [style = bold, label=""];
7->5 [style = bold, label=""];
5->1 [style = solid, label="properties"];
2->0 [style = bold, label=""];
5->10 [style = solid, label="properties"];
14->10 [style = bold, label=""];
18->11 [style = bold, label=""];
15->17 [style = bold, label=""];
}
