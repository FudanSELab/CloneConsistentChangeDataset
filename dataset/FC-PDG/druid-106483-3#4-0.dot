digraph {
0 [style = filled, label = "MapLookupExtractor mapLookupExtractor = new MapLookupExtractor(extractionMap,false)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testGroupByWithExtractionDimFilterWhenSearchValueNotInTheMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Map<String,String> extractionMap = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,results,\"dim-extraction\")@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,results,\"\")@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "extractionMap.put(\"mezzanine\",\"newsANDmezzanine\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "LookupExtractionFn lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,null,true,false)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory,runner,query)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "GroupByQuery query = GroupByQuery.builder().setDataSource(QueryRunnerTestHelper.dataSource).setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird).setDimensions(new DefaultDimensionSpec(\"quality\",\"alias\")).setAggregatorSpecs(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory(\"idx\",\"index\")).setGranularity(QueryRunnerTestHelper.dayGran).setDimFilter(new ExtractionDimFilter(\"quality\",\"newsANDmezzanine\",lookupExtractionFn,null)).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "LookupExtractionFn lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,null,true,true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<Row> expectedResults = Arrays.asList(GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"mezzanine\",\"rows\",3L,\"idx\",2870L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"news\",\"rows\",1L,\"idx\",121L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-02\",\"alias\",\"mezzanine\",\"rows\",3L,\"idx\",2447L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-02\",\"alias\",\"news\",\"rows\",1L,\"idx\",114L))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "GroupByQuery query = GroupByQuery.builder().setDataSource(QueryRunnerTestHelper.dataSource).setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird).setDimensions(new DefaultDimensionSpec(\"quality\",\"alias\")).setAggregatorSpecs(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory(\"idx\",\"index\")).setGranularity(QueryRunnerTestHelper.dayGran).setDimFilter(new ExtractionDimFilter(\"quality\",\"NOT_THERE\",lookupExtractionFn,null)).build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "extractionMap.put(\"news\",\"newsANDmezzanine\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "List<Row> expectedResults = Collections.emptyList()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testGroupByWithExtractionDimFilterOptimazitionManyToOne['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testGroupByWithExtractionDimFilterWhenSearchValueNotInTheMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->6 [style = bold, label=""];
10->2 [style = bold, label=""];
5->6 [style = solid, label="query"];
15->7 [style = solid, label="expectedResults"];
0->12 [style = solid, label="mapLookupExtractor"];
2->13 [style = bold, label=""];
11->6 [style = solid, label="query"];
4->15 [style = dashed, label="0"];
14->0 [style = bold, label=""];
0->3 [style = bold, label=""];
11->15 [style = bold, label=""];
3->5 [style = bold, label=""];
15->6 [style = bold, label=""];
5->4 [style = bold, label=""];
5->11 [style = dashed, label="0"];
6->9 [style = bold, label=""];
7->9 [style = dashed, label="0"];
4->7 [style = solid, label="expectedResults"];
8->2 [style = bold, label=""];
0->3 [style = solid, label="mapLookupExtractor"];
0->12 [style = bold, label=""];
6->7 [style = solid, label="results"];
4->9 [style = solid, label="expectedResults"];
12->11 [style = bold, label=""];
2->0 [style = bold, label=""];
6->7 [style = bold, label=""];
13->14 [style = bold, label=""];
2->0 [style = solid, label="extractionMap"];
3->12 [style = dashed, label="0"];
1->2 [style = bold, label=""];
6->9 [style = solid, label="results"];
}
