digraph {
5 [style = filled, label = "!m.matches()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Matcher fractionMatcher = Pattern.compile(\"((0-9(+\.(0-9(+)((a-z(+)?\").matcher(lower)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "timeStringAs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "long val = Long.parseLong(m.group(1))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String str@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "m.matches()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "throw new NumberFormatException(\"Invalid suffix: \"\" + suffix + \"\"\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Matcher m = Pattern.compile(\"((0-9(+)((a-z(+)?\").matcher(lower)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "timeStringAs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "String str@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return unit.convert(val,suffix != null? timeSuffixes.get(suffix): unit)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "throw new NumberFormatException(\"Failed to parse byte string: \" + str)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "fractionMatcher.matches()@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ByteUnit unit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "byteStringAs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "throw new NumberFormatException(\"Invalid suffix: \"\" + suffix + \"\"\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "suffix != null && !timeSuffixes.containsKey(suffix)@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String suffix = m.group(2)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TimeUnit unit@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TimeUnit unit@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Matcher m = Pattern.compile(\"(-?(0-9(+)((a-z(+)?\").matcher(lower)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "suffix != null && !byteSuffixes.containsKey(suffix)@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new NumberFormatException(\"Failed to parse time string: \" + str)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String lower = str.toLowerCase().trim()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String lower = str.toLowerCase(Locale.ROOT).trim()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "throw new NumberFormatException(\"Fractional values are not supported. Input was: \" + fractionMatcher.group(1))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return unit.convertFrom(val,suffix != null? byteSuffixes.get(suffix): unit)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
6->3 [style = bold, label=""];
19->25 [style = dotted, label="true"];
3->25 [style = solid, label="suffix"];
11->20 [style = dashed, label="0"];
0->26 [style = bold, label=""];
22->19 [style = bold, label=""];
0->10 [style = solid, label="suffix"];
16->24 [style = bold, label=""];
9->4 [style = bold, label=""];
26->25 [style = bold, label=""];
0->2 [style = bold, label=""];
9->11 [style = dotted, label="true"];
4->21 [style = bold, label=""];
23->4 [style = bold, label=""];
5->6 [style = dotted, label="true"];
1->21 [style = dashed, label="0"];
14->6 [style = solid, label="str"];
16->17 [style = bold, label=""];
15->25 [style = solid, label="val"];
0->8 [style = solid, label="suffix"];
19->15 [style = dotted, label="true"];
2->10 [style = bold, label=""];
12->1 [style = bold, label=""];
15->3 [style = bold, label=""];
4->1 [style = solid, label="lower"];
18->25 [style = solid, label="unit"];
3->26 [style = solid, label="suffix"];
4->22 [style = solid, label="lower"];
3->0 [style = bold, label=""];
4->12 [style = dashed, label="0"];
19->16 [style = bold, label=""];
3->8 [style = solid, label="val"];
3->0 [style = solid, label="suffix"];
23->20 [style = dotted, label="true"];
7->8 [style = solid, label="unit"];
13->12 [style = bold, label=""];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
19->16 [style = dotted, label="false"];
23->18 [style = dotted, label="true"];
2->0 [style = dashed, label="0"];
12->1 [style = solid, label="lower"];
21->22 [style = bold, label=""];
0->25 [style = bold, label=""];
19->3 [style = dotted, label="true"];
19->0 [style = dotted, label="true"];
4->21 [style = solid, label="lower"];
11->6 [style = solid, label="str"];
16->24 [style = dotted, label="true"];
13->11 [style = dotted, label="true"];
8->25 [style = dashed, label="0"];
4->1 [style = bold, label=""];
0->2 [style = solid, label="suffix"];
19->15 [style = bold, label=""];
20->17 [style = solid, label="str"];
9->7 [style = dotted, label="true"];
13->14 [style = dotted, label="true"];
11->8 [style = solid, label="unit"];
0->26 [style = dotted, label="true"];
16->17 [style = dotted, label="false"];
2->8 [style = bold, label=""];
2->10 [style = dotted, label="true"];
5->22 [style = dashed, label="0"];
}
