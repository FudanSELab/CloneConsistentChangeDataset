digraph {
17 [style = filled, label = "complete(v1Client.read(),null)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "complete(v1Client.read(),null)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "int count = manager.debugCount.get()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "complete(manager.migrate(migrationSet))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Migration m3 = null@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Migration m2 = null@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "complete(manager.migrate(migrationSet))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "migrationSet = MigrationSet.build(\"1\",Arrays.asList(m1,m2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "migrationSet = MigrationSet.build(\"1\",Arrays.asList(m1,m2,m3))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testStaged['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ModeledFramework<ModelV3> v3Client = ModeledFramework.wrap(client,v3Spec)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "complete(v2Client.read(),null)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ModeledFramework<ModelV1> v1Client = ModeledFramework.wrap(client,v1Spec)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "MigrationSet migrationSet = MigrationSet.build(\"1\",Arrays.asList(m1,m2,m3))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "complete(v3Client.read(),null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Migration m1 = null@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(manager.debugCount.get(),count)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testBasic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testStaged['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "MigrationSet migrationSet = MigrationSet.build(\"1\",Collections.singletonList(m1))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "complete(manager.migrate(migrationSet))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ModeledFramework<ModelV2> v2Client = ModeledFramework.wrap(client,v2Spec)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "complete(manager.migrate(migrationSet))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->18 [style = solid, label="m1"];
17->10 [style = bold, label=""];
18->11 [style = solid, label="migrationSet"];
16->0 [style = bold, label=""];
1->8 [style = bold, label=""];
10->8 [style = solid, label="m2"];
21->0 [style = bold, label=""];
4->6 [style = bold, label=""];
10->5 [style = solid, label="m2"];
0->5 [style = solid, label="m1"];
0->2 [style = bold, label=""];
12->17 [style = bold, label=""];
18->11 [style = bold, label=""];
2->9 [style = solid, label="migrationSet"];
10->18 [style = solid, label="m2"];
14->10 [style = bold, label=""];
1->18 [style = bold, label=""];
8->11 [style = solid, label="migrationSet"];
2->9 [style = bold, label=""];
5->4 [style = solid, label="migrationSet"];
13->1 [style = bold, label=""];
3->0 [style = bold, label=""];
15->22 [style = bold, label=""];
1->18 [style = solid, label="m3"];
0->10 [style = bold, label=""];
10->5 [style = bold, label=""];
22->20 [style = bold, label=""];
6->13 [style = bold, label=""];
5->4 [style = bold, label=""];
12->14 [style = bold, label=""];
0->2 [style = solid, label="m1"];
7->15 [style = bold, label=""];
14->17 [style = dashed, label="0"];
8->18 [style = dashed, label="0"];
9->12 [style = bold, label=""];
18->20 [style = solid, label="migrationSet"];
22->19 [style = solid, label="count"];
20->19 [style = bold, label=""];
10->1 [style = bold, label=""];
8->11 [style = bold, label=""];
0->8 [style = solid, label="m1"];
11->7 [style = bold, label=""];
1->8 [style = solid, label="m3"];
}
