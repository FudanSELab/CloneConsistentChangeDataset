digraph {
0 [style = filled, label = "QueryStringQueryBuilder queryStringQuery = queryStringQuery(STRING_FIELD_NAME + \":boosted^2\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertThat(((TermQuery)boostQuery.getQuery()).getTerm(),equalTo(new Term(TEXT_FIELD_NAME,\"boosted\")))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "queryStringQuery = queryStringQuery(\"((\" + TEXT_FIELD_NAME + \":boosted^2) AND (\" + TEXT_FIELD_NAME + \":foo^1.5))^3\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "MultiMatchQueryBuilder multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertThat(boostQuery2.getBoost(),equalTo(1.5f))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testToQueryBoosts['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(((TermQuery)boostQuery.getQuery()).getTerm(),equalTo(new Term(STRING_FIELD_NAME,\"boosted\")))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertThat(boostQuery.getQuery(),instanceOf())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "queryStringQuery.boost(2.0f)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(((TermQuery)boostQuery1.getQuery()).getTerm(),equalTo(new Term(STRING_FIELD_NAME,\"boosted\")))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertThat(boostQuery.getBoost(),equalTo(3.0f))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testToQueryBoost['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "query = multiMatchQueryBuilder.toQuery(shardContext)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(boostQuery.getBoost(),equalTo(2.0f))@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(boostQuery.getBoost(),equalTo(2.0f))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "BoostQuery boostQuery2 = assertBooleanSubQuery(boostQuery.getQuery(),,1)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "query = queryStringQuery.toQuery(shardContext)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(query,instanceOf())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "BoostQuery boostQuery = (BoostQuery)query@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(boostQuery.getQuery(),instanceOf())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "multiMatchQueryBuilder.field(STRING_FIELD_NAME,5f)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "boostQuery = (BoostQuery)boostQuery.getQuery()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "multiMatchQueryBuilder.boost(2f)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "boostQuery = (BoostQuery)query@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "queryStringQuery = queryStringQuery(\"((\" + STRING_FIELD_NAME + \":boosted^2) AND (\" + STRING_FIELD_NAME + \":foo^1.5))^3\")@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "assertTermOrBoostQuery(query,STRING_FIELD_NAME,\"test\",5f)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "queryStringQuery.boost(2.0f)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(boostQuery.getBoost(),equalTo(2.0f))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(((TermQuery)boostQuery2.getQuery()).getTerm(),equalTo(new Term(TEXT_FIELD_NAME,\"foo\")))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertThat(boostQuery2.getQuery(),instanceOf())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(boostQuery1.getQuery(),instanceOf())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(boostQuery.getBoost(),equalTo(2.0f))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "boostQuery = (BoostQuery)query@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "query = queryStringQuery.toQuery(shardContext)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(query,instanceOf())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(query,instanceOf())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Query query = multiMatchQueryBuilder.toQuery(shardContext)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(boostQuery1.getBoost(),equalTo(2.0f))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boostQuery = (BoostQuery)query@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "multiMatchQueryBuilder.field(STRING_FIELD_NAME,5f)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "BoostQuery boostQuery1 = assertBooleanSubQuery(boostQuery.getQuery(),,0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Query query = queryStringQuery.toQuery(shardContext)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testToQueryBoosts['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "QueryShardContext shardContext = createShardContext()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(((TermQuery)boostQuery1.getQuery()).getTerm(),equalTo(new Term(TEXT_FIELD_NAME,\"boosted\")))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertTermOrBoostQuery(boostQuery.getQuery(),STRING_FIELD_NAME,\"test\",5f)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(query,instanceOf())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "QueryStringQueryBuilder queryStringQuery = queryStringQuery(TEXT_FIELD_NAME + \":boosted^2\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertThat(((TermQuery)boostQuery2.getQuery()).getTerm(),equalTo(new Term(STRING_FIELD_NAME,\"foo\")))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "BoostQuery boostQuery = (BoostQuery)query@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertThat(boostQuery.getBoost(),equalTo(2f))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46->44 [style = bold, label=""];
17->39 [style = dashed, label="0"];
23->16 [style = bold, label=""];
33->40 [style = dashed, label="0"];
28->15 [style = bold, label=""];
6->25 [style = solid, label="query"];
28->37 [style = dashed, label="0"];
3->14 [style = solid, label="query"];
0->6 [style = bold, label=""];
11->1 [style = bold, label=""];
25->23 [style = bold, label=""];
42->45 [style = bold, label=""];
29->26 [style = solid, label="query"];
50->30 [style = solid, label="query"];
50->3 [style = bold, label=""];
49->48 [style = bold, label=""];
29->21 [style = solid, label="query"];
1->35 [style = bold, label=""];
41->49 [style = bold, label=""];
24->13 [style = bold, label=""];
20->3 [style = bold, label=""];
37->15 [style = bold, label=""];
15->24 [style = solid, label="query"];
34->12 [style = bold, label=""];
48->42 [style = bold, label=""];
0->38 [style = dashed, label="0"];
10->7 [style = bold, label=""];
0->28 [style = solid, label="queryStringQuery"];
29->21 [style = bold, label=""];
9->37 [style = bold, label=""];
3->30 [style = solid, label="query"];
41->49 [style = solid, label="query"];
38->6 [style = bold, label=""];
16->46 [style = dashed, label="0"];
32->29 [style = bold, label=""];
9->28 [style = bold, label=""];
22->6 [style = solid, label="shardContext"];
22->38 [style = bold, label=""];
21->26 [style = bold, label=""];
26->2 [style = bold, label=""];
12->40 [style = bold, label=""];
22->50 [style = solid, label="shardContext"];
18->22 [style = bold, label=""];
7->34 [style = bold, label=""];
15->13 [style = solid, label="query"];
22->0 [style = bold, label=""];
8->5 [style = bold, label=""];
19->9 [style = bold, label=""];
45->50 [style = bold, label=""];
16->31 [style = bold, label=""];
30->46 [style = bold, label=""];
15->24 [style = bold, label=""];
22->47 [style = bold, label=""];
4->27 [style = bold, label=""];
43->22 [style = bold, label=""];
47->51 [style = bold, label=""];
12->33 [style = bold, label=""];
40->32 [style = bold, label=""];
22->41 [style = solid, label="shardContext"];
30->14 [style = bold, label=""];
33->32 [style = bold, label=""];
17->20 [style = bold, label=""];
5->11 [style = bold, label=""];
27->19 [style = bold, label=""];
31->39 [style = bold, label=""];
31->17 [style = bold, label=""];
13->8 [style = bold, label=""];
39->20 [style = bold, label=""];
1->10 [style = bold, label=""];
3->30 [style = bold, label=""];
22->15 [style = solid, label="shardContext"];
51->41 [style = bold, label=""];
35->7 [style = bold, label=""];
38->37 [style = solid, label="queryStringQuery"];
22->29 [style = solid, label="shardContext"];
6->23 [style = solid, label="query"];
50->3 [style = solid, label="query"];
10->35 [style = dashed, label="0"];
6->25 [style = bold, label=""];
31->44 [style = dashed, label="0"];
14->4 [style = bold, label=""];
22->3 [style = solid, label="shardContext"];
36->22 [style = bold, label=""];
}
