digraph {
23 [style = filled, label = "assertEquals(new TimeWindow(5,13),mergeFunction.mergeTarget())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(new TimeWindow(10,13),windowSet.getStateWindow(new TimeWindow(10,13)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(new TimeWindow(5,13),windowSet.addWindow(new TimeWindow(8,10),mergeFunction))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "mergeFunction.reset()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(mergeFunction.mergedStateWindows(),anyOf(containsInAnyOrder(new TimeWindow(10,13)),containsInAnyOrder(new TimeWindow(5,8))))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "mergeFunction.reset()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "mergeFunction.reset()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "MergingWindowSet<TimeWindow> windowSet = new MergingWindowSet<>(EventTimeSessionWindows.withGap(Time.milliseconds(3)))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(new TimeWindow(1,2),windowSet.addWindow(new TimeWindow(1,2),mergeFunction))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(new TimeWindow(5,13),windowSet.addWindow(new TimeWindow(8,10),mergeFunction))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(mergeFunction.mergedStateWindows(),not(hasItem(mergeFunction.mergeTarget())))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(new TimeWindow(0,13),windowSet.addWindow(new TimeWindow(3,5),mergeFunction))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "mergeFunction.reset()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(mergeFunction.hasMerged())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(new TimeWindow(5,8),windowSet.addWindow(new TimeWindow(5,8),mergeFunction))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(new TimeWindow(5,13),windowSet.addWindow(new TimeWindow(5,8),mergeFunction))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertTrue(mergeFunction.hasMerged())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "testLateMerging['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "assertEquals(new TimeWindow(1,2),windowSet.getStateWindow(new TimeWindow(1,2)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(new TimeWindow(0,3),windowSet.getStateWindow(new TimeWindow(0,3)))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertThat(windowSet.getStateWindow(new TimeWindow(0,13)),anyOf(is(new TimeWindow(0,3)),is(new TimeWindow(5,8)),is(new TimeWindow(10,13))))@@@45@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(mergeFunction.stateWindow(),anyOf(is(new TimeWindow(0,3)),is(new TimeWindow(5,8)),is(new TimeWindow(10,13))))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "mergeFunction.reset()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(mergeFunction.mergedStateWindows(),anyOf(containsInAnyOrder(new TimeWindow(0,3)),containsInAnyOrder(new TimeWindow(5,8)),containsInAnyOrder(new TimeWindow(10,13))))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestingMergeFunction mergeFunction = new TestingMergeFunction()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "@SuppressWarnings(\"unchecked\") ListState<Tuple2<TimeWindow,TimeWindow>> mockState = mock()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(new TimeWindow(10,13),windowSet.addWindow(new TimeWindow(10,13),mergeFunction))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "mergeFunction.reset()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(new TimeWindow(1,2),windowSet.getStateWindow(new TimeWindow(0,3)))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(new TimeWindow(0,3),windowSet.addWindow(new TimeWindow(0,3),mergeFunction))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testLateMerging['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(new TimeWindow(0,13),mergeFunction.mergeTarget())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(mergeFunction.mergeSources(),containsInAnyOrder(new TimeWindow(0,3),new TimeWindow(5,13)))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "mergeFunction.reset()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(mergeFunction.mergedStateWindows(),not(hasItem(mergeFunction.mergeTarget())))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(mergeFunction.hasMerged())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testMergeLargeWindowCoveringSingleWindow['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "mergeFunction.reset()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "MergingWindowSet<TimeWindow> windowSet = new MergingWindowSet<>(EventTimeSessionWindows.withGap(Time.milliseconds(3)),mockState)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(windowSet.getStateWindow(new TimeWindow(5,13)),anyOf(is(new TimeWindow(5,8)),is(new TimeWindow(10,13))))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "mergeFunction.reset()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(mergeFunction.mergeSources(),containsInAnyOrder(new TimeWindow(5,8),new TimeWindow(10,13)))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "mergeFunction.reset()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(mergeFunction.hasMerged())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(new TimeWindow(5,8),windowSet.getStateWindow(new TimeWindow(5,8)))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertThat(mergeFunction.stateWindow(),anyOf(is(new TimeWindow(5,8)),is(new TimeWindow(10,13))))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(new TimeWindow(5,13),windowSet.addWindow(new TimeWindow(10,13),mergeFunction))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46->44 [style = bold, label=""];
52->11 [style = bold, label=""];
8->30 [style = bold, label=""];
0->52 [style = solid, label="mergeFunction"];
13->34 [style = bold, label=""];
46->44 [style = solid, label="mockState"];
18->28 [style = solid, label="mergeFunction"];
22->33 [style = bold, label=""];
28->6 [style = bold, label=""];
0->34 [style = solid, label="mergeFunction"];
4->24 [style = bold, label=""];
16->11 [style = bold, label=""];
30->13 [style = bold, label=""];
0->7 [style = solid, label="mergeFunction"];
15->7 [style = bold, label=""];
36->41 [style = bold, label=""];
16->52 [style = dashed, label="0"];
26->5 [style = bold, label=""];
24->0 [style = bold, label=""];
35->9 [style = bold, label=""];
51->24 [style = bold, label=""];
11->21 [style = bold, label=""];
50->17 [style = bold, label=""];
20->28 [style = bold, label=""];
14->47 [style = dashed, label="0"];
12->32 [style = bold, label=""];
0->8 [style = solid, label="mergeFunction"];
49->48 [style = bold, label=""];
27->31 [style = bold, label=""];
18->11 [style = solid, label="mergeFunction"];
0->37 [style = solid, label="mergeFunction"];
18->27 [style = solid, label="mergeFunction"];
17->37 [style = bold, label=""];
25->35 [style = bold, label=""];
38->15 [style = bold, label=""];
42->40 [style = bold, label=""];
0->49 [style = solid, label="mergeFunction"];
43->46 [style = bold, label=""];
18->22 [style = solid, label="mergeFunction"];
6->1 [style = bold, label=""];
0->16 [style = solid, label="mergeFunction"];
37->22 [style = bold, label=""];
3->20 [style = bold, label=""];
0->36 [style = solid, label="mergeFunction"];
18->42 [style = solid, label="mergeFunction"];
14->23 [style = bold, label=""];
0->26 [style = solid, label="mergeFunction"];
5->12 [style = bold, label=""];
17->49 [style = bold, label=""];
21->50 [style = dashed, label="0"];
0->20 [style = solid, label="mergeFunction"];
48->47 [style = bold, label=""];
19->26 [style = bold, label=""];
9->45 [style = bold, label=""];
23->39 [style = bold, label=""];
7->42 [style = bold, label=""];
32->36 [style = bold, label=""];
29->10 [style = bold, label=""];
0->18 [style = bold, label=""];
11->50 [style = bold, label=""];
18->41 [style = solid, label="mergeFunction"];
1->2 [style = bold, label=""];
18->30 [style = solid, label="mergeFunction"];
44->18 [style = bold, label=""];
33->19 [style = bold, label=""];
31->3 [style = bold, label=""];
37->49 [style = dashed, label="0"];
2->25 [style = bold, label=""];
18->52 [style = bold, label=""];
18->5 [style = solid, label="mergeFunction"];
21->17 [style = bold, label=""];
41->14 [style = bold, label=""];
10->38 [style = bold, label=""];
40->8 [style = bold, label=""];
39->29 [style = bold, label=""];
34->27 [style = bold, label=""];
18->16 [style = bold, label=""];
}
