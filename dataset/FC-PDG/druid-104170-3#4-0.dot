digraph {
5 [style = filled, label = "testDoInCriticalSectionWithSmallerInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Interval interval = Intervals.of(\"2017-01-01/2017-02-01\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final TaskLock lock = tryTimeChunkLock(TaskLockType.EXCLUSIVE,task,interval).getTaskLock()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "lockbox.add(task)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(lockbox.doInCriticalSection(task,Collections.singletonList(smallInterval),CriticalAction.builder().onValidLocks(null).onInvalidLocks(null).build()))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "final Task highPriorityTask = NoopTask.create(100)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertNotNull(lock)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "taskStorage.insert(highPriorityTask,TaskStatus.running(highPriorityTask.getId()))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final TaskLock lock = lockbox.tryLock(TaskLockType.EXCLUSIVE,highPriorityTask,interval).getTaskLock()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i < 5@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Task task = NoopTask.create()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(lockbox.doInCriticalSection(highPriorityTask,Collections.singletonList(interval),CriticalAction.builder().onValidLocks(null).onInvalidLocks(null).build()))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertTrue(lockbox.tryLock(TaskLockType.SHARED,task,interval).isOk())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "taskStorage.insert(task,TaskStatus.running(task.getId()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "lockbox.add(task)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(lockbox.doInCriticalSection(task,Collections.singletonList(interval),CriticalAction.builder().onValidLocks(null).onInvalidLocks(null).build()))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "lockbox.add(highPriorityTask)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int i = 0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "i++@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final Interval interval = Intervals.of(\"2017-01-01/2017-01-02\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Interval smallInterval = Intervals.of(\"2017-01-10/2017-01-11\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testDoInCriticalSectionWithSmallerInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "testPreemptionAndDoInCriticalSection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final Task task = NoopTask.create()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
15->23 [style = bold, label=""];
23->16 [style = bold, label=""];
1->2 [style = solid, label="task"];
14->0 [style = dotted, label="true"];
4->6 [style = bold, label=""];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
11->21 [style = bold, label=""];
7->8 [style = dashed, label="0"];
0->11 [style = bold, label=""];
16->22 [style = solid, label="i"];
14->17 [style = bold, label=""];
14->22 [style = dotted, label="true"];
10->0 [style = solid, label="lock"];
3->11 [style = solid, label="task"];
2->10 [style = bold, label=""];
3->0 [style = bold, label=""];
6->7 [style = solid, label="smallInterval"];
0->7 [style = bold, label=""];
17->19 [style = solid, label="highPriorityTask"];
6->1 [style = bold, label=""];
17->12 [style = bold, label=""];
16->14 [style = solid, label="i"];
17->12 [style = solid, label="highPriorityTask"];
14->21 [style = dotted, label="true"];
1->7 [style = solid, label="task"];
7->19 [style = dashed, label="0"];
21->22 [style = bold, label=""];
10->0 [style = bold, label=""];
5->4 [style = bold, label=""];
3->0 [style = solid, label="lock"];
12->18 [style = bold, label=""];
0->8 [style = bold, label=""];
18->13 [style = bold, label=""];
14->3 [style = dotted, label="true"];
16->14 [style = bold, label=""];
22->14 [style = solid, label="i"];
14->11 [style = dotted, label="true"];
23->19 [style = solid, label="interval"];
1->2 [style = bold, label=""];
17->18 [style = solid, label="highPriorityTask"];
13->20 [style = solid, label="lock"];
3->10 [style = dashed, label="0"];
4->8 [style = solid, label="interval"];
3->0 [style = solid, label="task"];
22->14 [style = bold, label=""];
20->19 [style = bold, label=""];
4->23 [style = dashed, label="0"];
13->20 [style = bold, label=""];
1->8 [style = solid, label="task"];
}
