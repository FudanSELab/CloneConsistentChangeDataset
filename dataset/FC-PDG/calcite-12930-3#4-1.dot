digraph {
38 [style = filled, label = "assertEquals(expected,linux(actual2))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final SqlNode sqlNode = parseExpressionAndHandleEx(sap.sql,transform,parserChecker)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final String sql3 = sqlNode.toSqlString(randomize(random)).getSql()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final UnaryOperator<SqlParser.ConfigBuilder> transform = getTransform(dialect)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(sql3,notNullValue())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Consumer<SqlParser> parserChecker@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final UnaryOperator<SqlParser.Config> transform = getTransform(dialect)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "SqlNode sqlNode2@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "StringAndPos sap@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StringAndPos sap@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "quoting = Quoting.DOUBLE_QUOTE@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final String actual2 = sqlNode.toSqlString(transform2).getSql()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final Random random = new Random()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Consumer<SqlParser> parserChecker@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final UnaryOperator<SqlWriterConfig> transform2 = null@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "check['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final String actual = sqlNode.toSqlString(transform2).getSql()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "{quoting = q}@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Consumer<SqlParser> parserChecker@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "SqlDialect dialect@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "SqlNode sqlNode = parseStmtAndHandleEx(sap.sql,transform,parserChecker)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SqlDialect dialect@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final String sql2 = sqlNode2.toSqlString(simple()).getSql()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "sqlNode2 = parseStmtAndHandleEx(sql1,null,null)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "StringAndPos sap@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "String expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String actual = sqlNode.toSqlString(null,true).getSql()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "SqlNode sqlNode4@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "SqlDialect dialect@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(sql1,sql2)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String expected@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "checkExp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals(sql1,sql4)@@@39@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final Quoting q = quoting@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "final String sql4 = sqlNode4.toSqlString(simple()).getSql()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final SqlDialect dialect2 = Util.first(dialect,AnsiSqlDialect.DEFAULT)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "checkExp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final String sql1 = sqlNode.toSqlString(simple()).getSql()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(expected,linux(actual))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "sqlNode4 = parseStmtAndHandleEx(sql1,null,null)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TestUtil.assertEqualsVerbose(expected,linux(actual))@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "quoting = Quoting.DOUBLE_QUOTE@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "{quoting = q}@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->20 [style = solid, label="transform"];
14->20 [style = solid, label="parserChecker"];
22->25 [style = bold, label=""];
34->29 [style = bold, label=""];
4->5 [style = dotted, label="true"];
17->41 [style = dotted, label="true"];
2->20 [style = bold, label=""];
30->22 [style = bold, label=""];
18->24 [style = bold, label=""];
40->35 [style = bold, label=""];
36->2 [style = solid, label="dialect"];
21->19 [style = bold, label=""];
4->1 [style = dotted, label="true"];
0->2 [style = solid, label="dialect"];
12->8 [style = solid, label="transform"];
4->0 [style = dotted, label="true"];
8->3 [style = bold, label=""];
8->20 [style = dashed, label="0"];
37->38 [style = solid, label="expected"];
23->32 [style = bold, label=""];
4->7 [style = dotted, label="true"];
17->14 [style = dotted, label="true"];
3->6 [style = bold, label=""];
31->18 [style = bold, label=""];
22->15 [style = solid, label="sql1"];
4->2 [style = bold, label=""];
38->31 [style = bold, label=""];
13->7 [style = dotted, label="true"];
18->24 [style = solid, label="sql3"];
1->8 [style = solid, label="parserChecker"];
37->30 [style = solid, label="expected"];
28->16 [style = bold, label=""];
13->10 [style = dotted, label="true"];
32->33 [style = bold, label=""];
29->26 [style = bold, label=""];
27->16 [style = solid, label="q"];
25->27 [style = bold, label=""];
2->8 [style = solid, label="transform"];
26->38 [style = bold, label=""];
2->12 [style = dashed, label="0"];
27->39 [style = bold, label=""];
13->12 [style = bold, label=""];
20->23 [style = bold, label=""];
7->6 [style = solid, label="expected"];
33->30 [style = solid, label="actual"];
22->29 [style = solid, label="sql1"];
24->21 [style = bold, label=""];
17->2 [style = bold, label=""];
13->9 [style = dotted, label="true"];
12->8 [style = bold, label=""];
27->35 [style = solid, label="q"];
39->40 [style = bold, label=""];
22->28 [style = solid, label="sql1"];
42->15 [style = solid, label="sql4"];
33->30 [style = bold, label=""];
36->23 [style = solid, label="dialect"];
13->11 [style = dotted, label="true"];
16->42 [style = bold, label=""];
7->41 [style = dashed, label="0"];
19->28 [style = bold, label=""];
17->36 [style = dotted, label="true"];
17->37 [style = dotted, label="true"];
11->6 [style = solid, label="expected"];
35->34 [style = bold, label=""];
26->38 [style = solid, label="actual2"];
2->8 [style = bold, label=""];
34->29 [style = solid, label="sql2"];
42->15 [style = bold, label=""];
22->40 [style = solid, label="sql1"];
3->6 [style = solid, label="actual"];
10->8 [style = solid, label="parserChecker"];
7->12 [style = solid, label="dialect"];
}
