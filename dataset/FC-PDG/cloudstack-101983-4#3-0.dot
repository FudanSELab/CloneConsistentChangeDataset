digraph {
12 [style = filled, label = "getDefaultNetworkForBasicZone['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "defaultNetworks.size() != 1@@@8@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int networksSize = defaultNetworks.size()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "dc.getNetworkType() != NetworkType.Basic@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "getDefaultNetworkForBasicZone['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return defaultNetworks.get(0)@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "throw new CloudRuntimeException(String.format(\"Found (%s( networks of type (%s( when expect to find 1.\",networksSize,defaultTrafficType))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "List<NetworkVO> defaultNetworks = _networkDao.listByZoneAndTrafficType(dc.getId(),defaultTrafficType)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DataCenter dc@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "throw new CloudRuntimeException(\"Found \" + defaultNetworks.size() + \" networks of type \" + defaultTrafficType + \" when expect to find 1\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return defaultNetworks.get(0)@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "TrafficType defaultTrafficType = TrafficType.Guest@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "getDefaultNetworkForBasicZone['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "throw new CloudRuntimeException(\"Zone \" + dc + \"is not basic.\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "throw new CloudRuntimeException(String.format(\"%s is not basic.\",dc.toString()))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "networksSize != 1@@@9@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
0->6 [style = bold, label=""];
14->7 [style = bold, label=""];
6->4 [style = bold, label=""];
5->14 [style = dashed, label="0"];
8->4 [style = bold, label=""];
3->1 [style = dotted, label="true"];
2->7 [style = bold, label=""];
3->2 [style = bold, label=""];
2->5 [style = bold, label=""];
15->1 [style = dotted, label="true"];
7->8 [style = solid, label="defaultTrafficType"];
10->9 [style = bold, label=""];
12->2 [style = bold, label=""];
2->5 [style = dotted, label="true"];
9->13 [style = bold, label=""];
1->5 [style = solid, label="dc"];
2->14 [style = dotted, label="true"];
6->8 [style = bold, label=""];
0->11 [style = bold, label=""];
11->10 [style = solid, label="networksSize"];
15->2 [style = bold, label=""];
11->9 [style = solid, label="networksSize"];
6->8 [style = dotted, label="true"];
11->10 [style = bold, label=""];
10->13 [style = bold, label=""];
7->0 [style = bold, label=""];
7->0 [style = solid, label="defaultTrafficType"];
7->9 [style = solid, label="defaultTrafficType"];
2->14 [style = bold, label=""];
6->11 [style = dashed, label="0"];
12->1 [style = dotted, label="true"];
10->9 [style = dotted, label="true"];
5->7 [style = bold, label=""];
}
