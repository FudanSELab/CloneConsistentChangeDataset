digraph {
6 [style = filled, label = "tester.checkScalar(\"LOCALTIME\",TIME_PATTERN,\"TIME(0) NOT NULL\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testLocalTimeFunc['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "tester.checkScalar(\"LOCALTIME(1)\",TIME_PATTERN,\"TIME(1) NOT NULL\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "tester.checkFails(\"^LOCALTIME()^\",\"No match found for function signature LOCALTIME\(\)\",false)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tester.checkScalar(\"CURRENT_TIME\",TIME_PATTERN,\"TIME(0) NOT NULL\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "tester.checkScalar(\"CURRENT_TIME(1)\",TIME_PATTERN,\"TIME(1) NOT NULL\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "tester.checkScalar(\"LOCALTIME\",Pattern.compile(pair.left.substring(11) + \"(0-9((0-9(:(0-9((0-9(\"),\"TIME(0) NOT NULL\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tester.setFor(SqlStdOperatorTable.LOCALTIME)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "pair.right.close()@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "tester.checkScalar(\"CURRENT_TIME\",Pattern.compile(pair.left.substring(11) + \"(0-9((0-9(:(0-9((0-9(\"),\"TIME(0) NOT NULL\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "tester.checkFails(\"^CURRENT_TIME()^\",\"No match found for function signature CURRENT_TIME\(\)\",false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testLocalTimeFunc['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Pair<String,Hook.Closeable> pair = currentTimeString(CURRENT_TZ)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final Pair<String,Hook.Closeable> pair = currentTimeString(LOCAL_TZ)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "testCurrentTimeFunc['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Pair<String,Hook.Closeable> pair@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "tester.setFor(SqlStdOperatorTable.CURRENT_TIME)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tester.checkScalar(\"CAST(LOCALTIME AS VARCHAR(30))\",Pattern.compile(pair.left.substring(11) + \"(0-9((0-9(:(0-9((0-9(\"),\"VARCHAR(30) NOT NULL\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tester.checkScalar(\"CAST(CURRENT_TIME AS VARCHAR(30))\",Pattern.compile(pair.left.substring(11) + \"(0-9((0-9(:(0-9((0-9(\"),\"VARCHAR(30) NOT NULL\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->17 [style = dashed, label="0"];
3->18 [style = dashed, label="0"];
11->4 [style = bold, label=""];
18->11 [style = bold, label=""];
12->17 [style = bold, label=""];
8->3 [style = bold, label=""];
0->11 [style = dashed, label="0"];
6->14 [style = dashed, label="0"];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
10->9 [style = dotted, label="true"];
1->7 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
8->13 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
6->1 [style = bold, label=""];
1->12 [style = dashed, label="0"];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
0->4 [style = bold, label=""];
14->12 [style = bold, label=""];
16->14 [style = bold, label=""];
17->13 [style = bold, label=""];
13->18 [style = bold, label=""];
2->5 [style = bold, label=""];
}
