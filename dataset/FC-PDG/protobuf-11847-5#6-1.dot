digraph {
6 [style = filled, label = "final int length = readRawVarint32()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final Parser<T> parser@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "checkRecursionLimit()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "throw InvalidProtocolBufferException.truncatedMessage()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "throw InvalidProtocolBufferException.recursionLimitExceeded()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "T result = parser.parsePartialFrom(this,extensionRegistry)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "recursionDepth >= recursionLimit@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "popLimit(oldLimit)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "readMessage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "++recursionDepth@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "readMessage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final int oldLimit = pushLimit(length)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "readMessage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "--recursionDepth@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "--recursionDepth@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return result@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "int length = readRawVarint32()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "checkLastTagWas(0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final int oldLimit = pushLimit(length)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "++recursionDepth@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final ExtensionRegistryLite extensionRegistry@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final ExtensionRegistryLite extensionRegistry@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "getBytesUntilLimit() != 0@@@12@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final MessageLite.Builder builder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final ExtensionRegistryLite extensionRegistry@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
4->18 [style = dashed, label="0"];
21->23 [style = solid, label="result"];
16->0 [style = bold, label=""];
24->19 [style = bold, label=""];
6->14 [style = solid, label="length"];
5->9 [style = bold, label=""];
13->3 [style = dotted, label="true"];
17->6 [style = bold, label=""];
6->18 [style = bold, label=""];
6->0 [style = solid, label="length"];
11->22 [style = dashed, label="0"];
0->9 [style = solid, label="oldLimit"];
11->0 [style = solid, label="extensionRegistry"];
12->0 [style = bold, label=""];
10->6 [style = bold, label=""];
4->0 [style = bold, label=""];
2->13 [style = bold, label=""];
0->7 [style = bold, label=""];
9->23 [style = bold, label=""];
20->21 [style = solid, label="extensionRegistry"];
6->4 [style = bold, label=""];
3->5 [style = bold, label=""];
17->15 [style = dotted, label="true"];
13->3 [style = bold, label=""];
8->5 [style = bold, label=""];
2->21 [style = dashed, label="0"];
8->5 [style = dotted, label="true"];
10->11 [style = dotted, label="true"];
7->2 [style = bold, label=""];
24->22 [style = dotted, label="true"];
3->8 [style = bold, label=""];
1->2 [style = solid, label="extensionRegistry"];
24->20 [style = dotted, label="true"];
6->19 [style = dashed, label="0"];
8->9 [style = bold, label=""];
19->0 [style = solid, label="length"];
13->5 [style = bold, label=""];
4->12 [style = bold, label=""];
7->21 [style = bold, label=""];
19->4 [style = bold, label=""];
10->1 [style = dotted, label="true"];
14->5 [style = solid, label="oldLimit"];
4->12 [style = dotted, label="true"];
18->14 [style = bold, label=""];
21->13 [style = bold, label=""];
17->11 [style = dotted, label="true"];
}
