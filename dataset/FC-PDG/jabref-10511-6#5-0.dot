digraph {
3 [style = filled, label = "assertEquals(fieldMap.get(\"abstract\").toUpperCase(),entry.getField(\"abstract\").get())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(fieldMap.get(\"month\").toUpperCase(),entry.getField(\"month\").get())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(fieldMap.get(\"doi\").toUpperCase(),entry.getField(\"doi\").get())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(fieldMap.get(StandardField.BOOKTITLE).toUpperCase(),entry.getField(StandardField.BOOKTITLE).get())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(fieldMap.get(\"issn\"),entry.getField(\"issn\").get())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(fieldMap.get(\"year\"),entry.getField(\"year\").get())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertEquals(fieldMap.get(StandardField.ISSN),entry.getField(StandardField.ISSN).get())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "testInternalAllField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(fieldMap.get(\"booktitle\").toUpperCase(),entry.getField(\"booktitle\").get())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testInternalAllTextFieldsField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(fieldMap.get(\"issn\").toUpperCase(),entry.getField(\"issn\").get())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(fieldMap.get(StandardField.DOI),entry.getField(StandardField.DOI).get())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testInternalAllTextFieldsField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertEquals(fieldMap.get(StandardField.ABSTRACT).toUpperCase(),entry.getField(StandardField.ABSTRACT).get())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(fieldMap.get(\"month\"),entry.getField(\"month\").get())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(fieldMap.get(StandardField.MONTH),entry.getField(StandardField.MONTH).get())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "FieldFormatterCleanup cleanup = new FieldFormatterCleanup(InternalField.INTERNAL_ALL_TEXT_FIELDS_FIELD,new UpperCaseFormatter())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "FieldFormatterCleanup cleanup = new FieldFormatterCleanup(FieldName.INTERNAL_ALL_TEXT_FIELDS_FIELD,new UpperCaseFormatter())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertEquals(fieldMap.get(\"year\").toUpperCase(),entry.getField(\"year\").get())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(fieldMap.get(\"doi\"),entry.getField(\"doi\").get())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "cleanup.cleanup(entry)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(fieldMap.get(StandardField.TITLE).toUpperCase(),entry.getField(StandardField.TITLE).get())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(fieldMap.get(\"title\").toUpperCase(),entry.getField(\"title\").get())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "FieldFormatterCleanup cleanup = new FieldFormatterCleanup(FieldName.INTERNAL_ALL_FIELD,new UpperCaseFormatter())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(fieldMap.get(StandardField.YEAR),entry.getField(StandardField.YEAR).get())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13->10 [style = bold, label=""];
23->20 [style = bold, label=""];
2->19 [style = bold, label=""];
3->17 [style = dashed, label="0"];
16->11 [style = bold, label=""];
4->16 [style = dashed, label="0"];
3->24 [style = bold, label=""];
20->9 [style = bold, label=""];
0->6 [style = bold, label=""];
7->14 [style = dashed, label="0"];
8->3 [style = bold, label=""];
0->15 [style = dashed, label="0"];
7->20 [style = dashed, label="0"];
8->21 [style = dashed, label="0"];
24->22 [style = bold, label=""];
2->4 [style = bold, label=""];
6->22 [style = dashed, label="0"];
3->0 [style = bold, label=""];
2->10 [style = dashed, label="0"];
6->12 [style = dashed, label="0"];
1->13 [style = dashed, label="0"];
7->9 [style = bold, label=""];
10->16 [style = bold, label=""];
17->15 [style = bold, label=""];
0->24 [style = dashed, label="0"];
4->8 [style = bold, label=""];
14->9 [style = solid, label="cleanup"];
5->7 [style = bold, label=""];
7->9 [style = solid, label="cleanup"];
1->2 [style = bold, label=""];
14->9 [style = bold, label=""];
11->17 [style = bold, label=""];
15->12 [style = bold, label=""];
4->19 [style = dashed, label="0"];
8->11 [style = dashed, label="0"];
9->1 [style = bold, label=""];
20->9 [style = solid, label="cleanup"];
18->14 [style = bold, label=""];
21->3 [style = bold, label=""];
9->13 [style = bold, label=""];
19->21 [style = bold, label=""];
}
