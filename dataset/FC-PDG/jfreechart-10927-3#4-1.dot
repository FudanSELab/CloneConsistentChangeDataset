digraph {
15 [style = filled, label = "d2 = (DefaultXYDataset)TestUtilities.serialised(d1)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(d1,d2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DefaultXYZDataset d2 = (DefaultXYZDataset)TestUtilities.serialised(d1)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "d2 = (DefaultXYZDataset)TestUtilities.serialised(d1)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "DefaultXYZDataset d1 = new DefaultXYZDataset()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "double(( z1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c98f4@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "DefaultXYZDataset d2 = (DefaultXYZDataset)TestUtils.serialised(d1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "d2 = (DefaultXYZDataset)TestUtils.serialised(d1)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "DefaultXYDataset d1 = new DefaultXYDataset()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "double(( y1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c9940@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "double(((( data1 = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c994a@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "d1.addSeries(\"S1\",data1)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(d1,d2)@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "double(( x1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c9936@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DefaultXYDataset d2 = (DefaultXYDataset)TestUtilities.serialised(d1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->2 [style = solid, label="x1"];
4->9 [style = bold, label=""];
13->10 [style = bold, label=""];
15->10 [style = bold, label=""];
13->10 [style = solid, label="d2"];
1->8 [style = bold, label=""];
17->14 [style = solid, label="d1"];
1->7 [style = solid, label="d1"];
9->2 [style = bold, label=""];
17->10 [style = solid, label="d1"];
8->7 [style = solid, label="d2"];
5->15 [style = bold, label=""];
1->13 [style = solid, label="d1"];
2->5 [style = solid, label="data1"];
17->15 [style = solid, label="d1"];
4->2 [style = bold, label=""];
17->7 [style = solid, label="d1"];
16->17 [style = bold, label=""];
8->14 [style = dashed, label="0"];
12->1 [style = bold, label=""];
3->4 [style = bold, label=""];
6->10 [style = solid, label="d2"];
7->3 [style = bold, label=""];
8->7 [style = bold, label=""];
1->11 [style = bold, label=""];
15->10 [style = solid, label="d2"];
14->7 [style = bold, label=""];
1->8 [style = solid, label="d1"];
9->2 [style = solid, label="z1"];
1->17 [style = dashed, label="0"];
6->13 [style = dashed, label="0"];
5->6 [style = bold, label=""];
6->15 [style = dashed, label="0"];
1->11 [style = solid, label="d1"];
17->14 [style = bold, label=""];
0->1 [style = bold, label=""];
6->10 [style = bold, label=""];
11->7 [style = bold, label=""];
5->13 [style = bold, label=""];
14->7 [style = solid, label="d2"];
1->6 [style = solid, label="d1"];
1->10 [style = solid, label="d1"];
8->11 [style = dashed, label="0"];
11->7 [style = solid, label="d2"];
2->5 [style = bold, label=""];
4->2 [style = solid, label="y1"];
}
