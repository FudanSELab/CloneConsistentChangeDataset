digraph {
10 [style = filled, label = "List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"),TooltipTextUtil.createText(\"not \"),TooltipTextUtil.createText(\"the field \"),TooltipTextUtil.createText(\"a\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" contains the term \"),TooltipTextUtil.createText(\"b\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" and \"),TooltipTextUtil.createText(\"the field \"),TooltipTextUtil.createText(\"c\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" contains the term \"),TooltipTextUtil.createText(\"e\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" or \"),TooltipTextUtil.createText(\"the field \"),TooltipTextUtil.createText(\"e\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" contains the term \"),TooltipTextUtil.createText(\"x\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\". \"),TooltipTextUtil.createText(\"The search is case insensitive.\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testComplexQueryRegex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "TextFlowEqualityHelper.assertEquals(expectedTexts,description)@@@6@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "testComplexQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TextFlow description = createDescription(query,false,true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testComplexQueryRegex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TextFlow description = createDescription(query,false,false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String query = \"not a=b and c=e or e=\"x\"\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String query = \"not a=b and c=e or e=\"x\"\"@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertTrue(TextFlowEqualityHelper.checkIfDescriptionEqualsExpectedTexts(description,expectedTexts))@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "double textSize = 13@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
0->1 [style = solid, label="expectedTexts"];
1->2 [style = solid, label="description"];
9->2 [style = bold, label=""];
8->3 [style = bold, label=""];
0->9 [style = solid, label="query"];
1->9 [style = dashed, label="0"];
7->0 [style = bold, label=""];
9->2 [style = solid, label="description"];
10->2 [style = solid, label="expectedTexts"];
3->0 [style = bold, label=""];
0->10 [style = bold, label=""];
0->1 [style = solid, label="query"];
0->4 [style = bold, label=""];
7->4 [style = solid, label="query"];
4->2 [style = solid, label="expectedTexts"];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
10->9 [style = bold, label=""];
2->1 [style = dashed, label="0"];
6->7 [style = bold, label=""];
4->10 [style = dashed, label="0"];
4->1 [style = solid, label="description"];
}
