digraph {
5 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"notThere\"))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "lookupReferencesManager.remove(\"test\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "EasyMock.expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Request request = new Request(HttpMethod.GET,new URL(\"http://localhost:1234/xx\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testGetNotThere['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "lookupMap.put(\"testMockForGetNotThere\",container)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "EasyMock.replay(config)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testGetNotThere['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "FullResponseHolder responseHolder = new FullResponseHolder(HttpResponseStatus.OK,EasyMock.createNiceMock(),new StringBuilder().append(strResult))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EasyMock.replay(druidLeaderClient)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "StringFullResponseHolder responseHolder = new StringFullResponseHolder(HttpResponseStatus.OK,newEmptyResponse(),StandardCharsets.UTF_8).addChunk(strResult)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testRemoveNonExisting['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "lookupReferencesManager.start()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "lookupMap.put(\"testMockForRemoveNonExisting\",container)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
16->15 [style = bold, label=""];
8->14 [style = solid, label="strResult"];
7->18 [style = dashed, label="0"];
17->6 [style = bold, label=""];
0->6 [style = bold, label=""];
6->18 [style = bold, label=""];
9->4 [style = bold, label=""];
1->3 [style = bold, label=""];
3->11 [style = bold, label=""];
11->12 [style = bold, label=""];
14->4 [style = solid, label="responseHolder"];
9->4 [style = solid, label="responseHolder"];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
8->9 [style = solid, label="strResult"];
1->12 [style = solid, label="request"];
5->16 [style = dashed, label="0"];
8->1 [style = bold, label=""];
9->14 [style = dashed, label="0"];
12->14 [style = bold, label=""];
6->8 [style = solid, label="lookupMap"];
10->2 [style = bold, label=""];
18->8 [style = bold, label=""];
13->6 [style = bold, label=""];
6->7 [style = bold, label=""];
2->5 [style = bold, label=""];
14->4 [style = bold, label=""];
2->16 [style = bold, label=""];
}
