digraph {
11 [style = filled, label = "itemList.addAll(newQueueItems(11,12))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasDownPage)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "itemList.addAll(newRuns(1,10))@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "test_latest_partial_page['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "historyPageFilter.add(runs,queueItems)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(12,historyPageFilter.newestOnPage)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "itemList.addAll(newQueueItems(3,4))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(10),historyPageFilter.runs.get(0).getEntryId())@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.oldestOnPage)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(2,historyPageFilter.queueItems.size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(2),historyPageFilter.runs.get(0).getEntryId())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(4,historyPageFilter.newestOnPage)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.runs.get(1).getEntryId())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(10),historyPageFilter.runs.get(0).getEntryId())@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<ModelObject> itemList = new ArrayList<ModelObject>()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "historyPageFilter.add(itemList)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(3,historyPageFilter.runs.size())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(4,HistoryPageEntry.getEntryId(itemList.get(0)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "itemList.addAll(newRuns(1,2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(4,historyPageFilter.queueItems.get(0).getEntryId())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),HistoryPageEntry.getEntryId(itemList.get(0)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(3,historyPageFilter.queueItems.get(1).getEntryId())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "test_latest_longer_list['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "test_latest_longer_list['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "historyPageFilter.add(itemList)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasUpPage)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,null,null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(2,historyPageFilter.runs.size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasUpPage)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<Queue.Item> queueItems = newQueueItems(11,12)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "List<ModelObject> runs = newRuns(1,10)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25->0 [style = bold, label=""];
14->16 [style = bold, label=""];
12->4 [style = solid, label="itemList"];
5->8 [style = bold, label=""];
15->10 [style = bold, label=""];
3->26 [style = dashed, label="0"];
4->25 [style = bold, label=""];
12->2 [style = solid, label="itemList"];
11->16 [style = dashed, label="0"];
1->29 [style = dashed, label="0"];
3->26 [style = bold, label=""];
19->10 [style = bold, label=""];
20->3 [style = bold, label=""];
16->17 [style = bold, label=""];
8->28 [style = dashed, label="0"];
5->18 [style = dashed, label="0"];
0->20 [style = dashed, label="0"];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
18->28 [style = bold, label=""];
11->2 [style = bold, label=""];
7->3 [style = bold, label=""];
4->0 [style = bold, label=""];
1->11 [style = bold, label=""];
24->30 [style = bold, label=""];
0->7 [style = bold, label=""];
3->5 [style = bold, label=""];
28->21 [style = bold, label=""];
12->29 [style = bold, label=""];
10->13 [style = bold, label=""];
22->27 [style = bold, label=""];
21->22 [style = bold, label=""];
10->12 [style = bold, label=""];
30->4 [style = bold, label=""];
9->21 [style = dashed, label="0"];
6->10 [style = bold, label=""];
14->16 [style = solid, label="queueItems"];
11->24 [style = dashed, label="0"];
8->9 [style = bold, label=""];
13->16 [style = solid, label="runs"];
0->20 [style = bold, label=""];
27->23 [style = bold, label=""];
12->13 [style = dashed, label="0"];
29->24 [style = bold, label=""];
13->14 [style = bold, label=""];
17->4 [style = bold, label=""];
26->18 [style = bold, label=""];
}
