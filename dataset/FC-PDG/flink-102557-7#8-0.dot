digraph {
15 [style = filled, label = "testHarness.waitForTaskCompletion()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "StreamTaskTestHarness<String> testHarness = setupSourceStreamTask(sourceOperator,BasicTypeInfo.STRING_TYPE_INFO,true)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "testNoMaxWatermarkOnImmediateCancel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "{}@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "new Thread(\"canceler\"){@Override public void run(){try {Thread.sleep(200)}catch (InterruptedException ignored) operator.cancel()}}.start()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testNoMaxWatermarkOnImmediateCancel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(testHarness.getOutput().isEmpty())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "operator.run(new Object(),mock(),new CollectorOutput<String>(output),operatorChain)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "fail(\"should throw an exception\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "StreamSource<String,?> sourceOperator = new StreamSource<>(new InfiniteSource<>())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertTrue(output.isEmpty())@@@26@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final StreamSource<String,InfiniteSource<String>> operator = new StreamSource<>(new InfiniteSource<String>())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "OperatorChain<?,?> operatorChain = createOperatorChain(operator)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "setupSourceOperator(operator,TimeCharacteristic.EventTime,0)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Throwable t@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "InterruptedException ignored@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "operator.cancel()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "testNoMaxWatermarkOnAsyncCancel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "{operatorChain.releaseOutputs()}@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testHarness.invoke()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final List<StreamElement> output = new ArrayList<>()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
1->8 [style = bold, label=""];
4->6 [style = bold, label=""];
4->8 [style = solid, label="output"];
12->2 [style = dotted, label="true"];
17->4 [style = bold, label=""];
11->10 [style = solid, label="sourceOperator"];
19->2 [style = bold, label=""];
2->9 [style = bold, label=""];
15->16 [style = bold, label=""];
3->18 [style = bold, label=""];
5->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
8->2 [style = bold, label=""];
10->13 [style = bold, label=""];
18->1 [style = bold, label=""];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
6->1 [style = solid, label="operator"];
7->9 [style = dashed, label="0"];
1->8 [style = solid, label="operatorChain"];
13->15 [style = bold, label=""];
2->7 [style = bold, label=""];
20->19 [style = bold, label=""];
14->11 [style = bold, label=""];
16->9 [style = bold, label=""];
6->3 [style = solid, label="operator"];
}
