digraph {
23 [style = filled, label = "Pipeline pipeline = new Pipeline(pipelineId,null,null,new CompoundProcessor(new TestProcessor(null),new CompoundProcessor(false,Collections.singletonList(new TestProcessor(null)),Collections.singletonList(new TestProcessor(null))),new TestProcessor(null)))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "String key3 = randomAlphaOfLength(10)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(ingestService.getPipeline(pipelineId)).thenReturn(pipeline)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String key2 = randomAlphaOfLength(10)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "PipelineProcessor.Factory factory = new PipelineProcessor.Factory(ingestService)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertNull(resultList.get(0).getConditionalWithResult())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Pipeline pipeline = new Pipeline(pipelineId,null,null,new CompoundProcessor(new TestProcessor(null),new TestProcessor(null)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "expectedResult.getIngestDocument().getIngestMetadata().put(\"pipeline\",pipelineId)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SimulateProcessorResult expectedResult = new SimulateProcessorResult(actualProcessor.getType(),actualProcessor.getTag(),actualProcessor.getDescription(),ingestDocument,null)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(resultList.get(3).getIngestDocument().hasField(key1))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNull(resultList.get(2).getIngestDocument())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Pipeline pipeline = new Pipeline(pipelineId,null,null,null,new CompoundProcessor(new TestProcessor(null),new CompoundProcessor(false,Collections.singletonList(new TestProcessor(null)),Collections.singletonList(new TestProcessor(null))),new TestProcessor(null)))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertThat(resultList.get(2).getFailure(),equalTo(exception))@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "String pipelineId = \"pipeline1\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "verify(ingestService,Mockito.atLeast(2)).getPipeline(pipelineId)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(resultList.get(2).getFailure().getMessage(),equalTo(exception.getMessage()))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "pipelineConfig.put(\"name\",pipelineId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(resultList.get(4).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testActualPipelineProcessorWithUnhandledFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "IngestService ingestService = createIngestService()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testActualPipelineProcessorWithHandledFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(resultList.get(4).getProcessorTag(),nullValue())@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(resultList.size(),equalTo(3))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(resultList.get(0).getType(),equalTo(\"pipeline\"))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "PipelineProcessor pipelineProcessor = factory.create(Collections.emptyMap(),null,null,pipelineConfig)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(resultList.get(4).getFailure(),nullValue())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(resultList.get(3).getIngestDocument().hasField(key2))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(resultList.size(),equalTo(5))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertFalse(resultList.get(1).getIngestDocument().hasField(key2))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(resultList.get(1).getIngestDocument().hasField(key1))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertFalse(resultList.get(1).getIngestDocument().hasField(key3))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "CompoundProcessor trackingProcessor = decorate(actualProcessor,null,resultList)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertNull(resultList.get(0).getConditionalWithResult())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertFalse(resultList.get(3).getIngestDocument().hasField(key3))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "when(ingestService.getPipeline(pipelineId)).thenReturn(pipeline)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "RuntimeException exception = new RuntimeException(\"processor failed\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "PipelineProcessor pipelineProcessor = factory.create(Collections.emptyMap(),null,null,pipelineConfig)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Map<String,Object> pipelineConfig = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(resultList.get(1).getIngestDocument().hasField(key1))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "IllegalStateException exception = new IllegalStateException(\"Not a pipeline cycle error\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(resultList.get(0).getType(),equalTo(\"pipeline\"))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "trackingProcessor.execute(ingestDocument,null)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "verify(ingestService,Mockito.atLeast(1)).getPipeline(pipelineId)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String key1 = randomAlphaOfLength(10)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testActualPipelineProcessorWithHandledFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "CompoundProcessor actualProcessor = new CompoundProcessor(pipelineProcessor)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->22 [style = bold, label=""];
8->34 [style = bold, label=""];
43->16 [style = bold, label=""];
10->15 [style = bold, label=""];
30->1 [style = bold, label=""];
8->23 [style = bold, label=""];
40->6 [style = bold, label=""];
16->22 [style = solid, label="pipelineId"];
8->7 [style = solid, label="key3"];
43->11 [style = solid, label="pipelineId"];
23->34 [style = dashed, label="0"];
27->41 [style = dashed, label="0"];
0->17 [style = bold, label=""];
38->37 [style = solid, label="actualProcessor"];
18->19 [style = solid, label="key1"];
34->12 [style = solid, label="pipeline"];
2->3 [style = bold, label=""];
11->6 [style = bold, label=""];
27->30 [style = bold, label=""];
20->0 [style = bold, label=""];
43->26 [style = solid, label="pipelineId"];
44->10 [style = bold, label=""];
43->15 [style = solid, label="pipelineId"];
16->25 [style = bold, label=""];
16->21 [style = solid, label="pipelineId"];
21->24 [style = bold, label=""];
8->30 [style = solid, label="key3"];
7->20 [style = bold, label=""];
42->36 [style = bold, label=""];
28->27 [style = solid, label="key2"];
16->34 [style = solid, label="pipelineId"];
34->12 [style = bold, label=""];
31->10 [style = solid, label="pipelineProcessor"];
24->18 [style = bold, label=""];
3->4 [style = bold, label=""];
33->13 [style = bold, label=""];
13->16 [style = bold, label=""];
18->28 [style = bold, label=""];
11->35 [style = bold, label=""];
24->9 [style = solid, label="key1"];
18->41 [style = solid, label="exception"];
26->21 [style = bold, label=""];
9->41 [style = bold, label=""];
19->5 [style = bold, label=""];
35->40 [style = bold, label=""];
22->11 [style = dashed, label="0"];
28->5 [style = solid, label="key2"];
15->11 [style = bold, label=""];
29->19 [style = bold, label=""];
18->39 [style = bold, label=""];
45->43 [style = bold, label=""];
38->37 [style = bold, label=""];
43->39 [style = solid, label="pipelineId"];
31->10 [style = bold, label=""];
16->9 [style = solid, label="pipelineId"];
16->23 [style = solid, label="pipelineId"];
16->21 [style = solid, label="ingestService"];
28->8 [style = bold, label=""];
4->27 [style = bold, label=""];
25->26 [style = bold, label=""];
26->31 [style = solid, label="pipelineConfig"];
39->42 [style = solid, label="pipeline"];
37->44 [style = bold, label=""];
36->38 [style = solid, label="pipelineProcessor"];
25->36 [style = solid, label="pipelineConfig"];
5->7 [style = bold, label=""];
14->35 [style = dashed, label="0"];
23->12 [style = bold, label=""];
14->2 [style = bold, label=""];
36->38 [style = bold, label=""];
6->9 [style = bold, label=""];
22->14 [style = bold, label=""];
1->29 [style = bold, label=""];
32->13 [style = bold, label=""];
39->42 [style = bold, label=""];
23->12 [style = solid, label="pipeline"];
25->24 [style = solid, label="ingestService"];
10->15 [style = solid, label="actualProcessor"];
12->31 [style = bold, label=""];
18->4 [style = solid, label="key1"];
}
