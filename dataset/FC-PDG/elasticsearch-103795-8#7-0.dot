digraph {
4 [style = filled, label = "DirectoryReader secondReader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "BytesReference termBytes = XContentHelper.toXContent(termQuery,XContentType.JSON,false)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "value = cache.getOrCompute(secondEntity,loader,secondReader,termBytes)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testCacheDifferentReaders['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "IndicesRequestCache cache = new IndicesRequestCache(Settings.EMPTY)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "loader = new Loader(secondReader,0)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "Directory dir = newDirectory()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "writer.addDocument(newDoc(0,\"foo\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "secondEntity = new TestEntity(requestCacheStats,indexShard)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(0,cache.count())@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(cacheSize,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "Loader loader = new Loader(reader,0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "indexShard.set(false)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TestEntity entity = new TestEntity(requestCacheStats,indexShard)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "IndicesRequestCache cache = new IndicesRequestCache(Settings.EMPTY)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(1,cache.count())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "DirectoryReader reader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "value = cache.getOrCompute(secondEntity,loader,secondReader,termBytes,null)@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
80 [style = filled, label = "value = cache.getOrCompute(entity,loader,secondReader,termBytes)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "cache.cleanCache()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "randomBoolean()@@@32@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "writer.flush()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "writer.updateDocument(new Term(\"id\",\"0\"),newDoc(0,\"bar\"))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@47@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "testCacheDifferentReaders['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "assertEquals(2,cache.count())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cache.clear(secondEntity)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(1,cache.count())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(0,cache.count())@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "loader = new Loader(reader,0)@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TermQueryBuilder termQuery = new TermQueryBuilder(\"id\",\"0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "secondReader.close()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "cache.cleanCache()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "randomBoolean()@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "value = cache.getOrCompute(entity,loader,secondReader,termBytes,null)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > cacheSize + value.length())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "IOUtils.close(reader,writer,dir,cache)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "IOUtils.close(secondReader,writer,dir,cache)@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertEquals(\"bar\",value.streamInput().readString())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "reader.close()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "IOUtils.close(writer)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "testBasicOperationsCache['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "ShardRequestCache requestCacheStats = new ShardRequestCache()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "loader = new Loader(secondReader,0)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(2,cache.count())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(2,cache.count())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@82@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes)@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertEquals(\"bar\",value.streamInput().readString())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "reader.close()@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final int cacheSize = requestCacheStats.stats().getMemorySize().bytesAsInt()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "writer = new IndexWriter(dir,newIndexWriterConfig())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "cache.clear(entity)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,newIndexWriterConfig())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getHitCount())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "TestEntity secondEntity = new TestEntity(requestCacheStats,indexShard)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(2,cache.numRegisteredCloseListeners())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78->9 [style = bold, label=""];
49->68 [style = solid, label="reader"];
54->27 [style = bold, label=""];
5->80 [style = solid, label="entity"];
32->37 [style = bold, label=""];
37->4 [style = solid, label="writer"];
84->6 [style = solid, label="requestCacheStats"];
29->30 [style = bold, label=""];
2->6 [style = bold, label=""];
82->25 [style = bold, label=""];
69->89 [style = bold, label=""];
17->9 [style = bold, label=""];
6->78 [style = solid, label="termBytes"];
65->80 [style = bold, label=""];
4->42 [style = solid, label="secondReader"];
93->69 [style = bold, label=""];
53->70 [style = solid, label="cacheSize"];
49->79 [style = solid, label="reader"];
38->31 [style = bold, label=""];
3->65 [style = bold, label=""];
85->86 [style = bold, label=""];
68->79 [style = dashed, label="0"];
7->8 [style = bold, label=""];
47->33 [style = bold, label=""];
92->94 [style = solid, label="loader"];
84->93 [style = bold, label=""];
45->68 [style = solid, label="loader"];
58->17 [style = bold, label=""];
58->9 [style = solid, label="entity"];
69->3 [style = solid, label="requestCacheStats"];
34->24 [style = bold, label=""];
65->50 [style = bold, label=""];
6->50 [style = solid, label="termBytes"];
76->41 [style = bold, label=""];
45->68 [style = bold, label=""];
32->10 [style = solid, label="dir"];
27->7 [style = bold, label=""];
31->60 [style = bold, label=""];
69->5 [style = solid, label="requestCacheStats"];
5->78 [style = solid, label="entity"];
20->14 [style = solid, label="indexShard"];
25->15 [style = bold, label=""];
40->26 [style = bold, label=""];
97->83 [style = bold, label=""];
33->45 [style = bold, label=""];
69->89 [style = solid, label="dir"];
49->9 [style = solid, label="termBytes"];
20->5 [style = solid, label="indexShard"];
4->60 [style = solid, label="secondReader"];
42->77 [style = bold, label=""];
49->78 [style = solid, label="reader"];
21->61 [style = bold, label=""];
89->37 [style = solid, label="writer"];
8->53 [style = bold, label=""];
83->90 [style = bold, label=""];
74->60 [style = solid, label="cache"];
75->0 [style = bold, label=""];
55->12 [style = bold, label=""];
79->48 [style = bold, label=""];
45->79 [style = solid, label="loader"];
23->49 [style = bold, label=""];
55->54 [style = dashed, label="0"];
6->92 [style = bold, label=""];
73->43 [style = bold, label=""];
98->91 [style = bold, label=""];
63->51 [style = bold, label=""];
50->75 [style = bold, label=""];
66->67 [style = bold, label=""];
57->55 [style = bold, label=""];
84->58 [style = solid, label="requestCacheStats"];
28->54 [style = bold, label=""];
25->96 [style = bold, label=""];
89->32 [style = bold, label=""];
53->46 [style = solid, label="cacheSize"];
6->80 [style = solid, label="termBytes"];
49->94 [style = solid, label="termBytes"];
89->95 [style = solid, label="writer"];
41->15 [style = dotted, label="false"];
42->40 [style = bold, label=""];
11->18 [style = bold, label=""];
2->6 [style = solid, label="indexShard"];
0->36 [style = bold, label=""];
58->78 [style = solid, label="loader"];
33->79 [style = solid, label="entity"];
64->11 [style = bold, label=""];
94->85 [style = bold, label=""];
7->33 [style = bold, label=""];
43->47 [style = bold, label=""];
58->17 [style = solid, label="loader"];
71->14 [style = bold, label=""];
32->37 [style = solid, label="dir"];
39->66 [style = bold, label=""];
34->62 [style = bold, label=""];
65->50 [style = solid, label="loader"];
93->95 [style = solid, label="cache"];
60->95 [style = dashed, label="0"];
14->77 [style = solid, label="secondEntity"];
2->6 [style = solid, label="termQuery"];
20->3 [style = solid, label="indexShard"];
18->70 [style = bold, label=""];
56->18 [style = bold, label=""];
58->78 [style = bold, label=""];
6->77 [style = solid, label="termBytes"];
6->40 [style = solid, label="termBytes"];
37->94 [style = solid, label="reader"];
90->5 [style = bold, label=""];
41->98 [style = bold, label=""];
19->74 [style = bold, label=""];
9->22 [style = bold, label=""];
4->80 [style = solid, label="secondReader"];
44->88 [style = dashed, label="0"];
69->95 [style = solid, label="dir"];
35->29 [style = bold, label=""];
10->4 [style = solid, label="writer"];
6->34 [style = bold, label=""];
42->40 [style = solid, label="loader"];
34->24 [style = dotted, label="true"];
87->84 [style = bold, label=""];
34->2 [style = dashed, label="0"];
42->77 [style = solid, label="loader"];
48->18 [style = dotted, label="false"];
6->94 [style = solid, label="entity"];
48->88 [style = dotted, label="true"];
34->10 [style = dotted, label="true"];
14->42 [style = bold, label=""];
44->72 [style = bold, label=""];
37->9 [style = solid, label="reader"];
17->78 [style = dashed, label="0"];
22->28 [style = bold, label=""];
14->40 [style = solid, label="secondEntity"];
70->76 [style = bold, label=""];
48->88 [style = bold, label=""];
51->13 [style = bold, label=""];
36->39 [style = bold, label=""];
56->35 [style = bold, label=""];
68->48 [style = bold, label=""];
26->21 [style = bold, label=""];
37->17 [style = solid, label="reader"];
4->50 [style = solid, label="secondReader"];
10->62 [style = bold, label=""];
14->15 [style = solid, label="secondEntity"];
2->58 [style = solid, label="indexShard"];
77->26 [style = bold, label=""];
72->63 [style = bold, label=""];
10->60 [style = solid, label="writer"];
12->56 [style = bold, label=""];
81->74 [style = bold, label=""];
49->2 [style = bold, label=""];
6->79 [style = solid, label="termBytes"];
65->80 [style = solid, label="loader"];
50->80 [style = dashed, label="0"];
5->58 [style = bold, label=""];
5->17 [style = solid, label="entity"];
60->52 [style = bold, label=""];
4->77 [style = solid, label="secondReader"];
37->92 [style = solid, label="reader"];
59->3 [style = bold, label=""];
37->16 [style = solid, label="writer"];
20->69 [style = bold, label=""];
4->5 [style = bold, label=""];
15->72 [style = bold, label=""];
45->79 [style = bold, label=""];
41->44 [style = dotted, label="true"];
69->32 [style = bold, label=""];
37->60 [style = solid, label="writer"];
80->75 [style = bold, label=""];
96->95 [style = bold, label=""];
58->18 [style = solid, label="entity"];
41->25 [style = dotted, label="false"];
48->56 [style = bold, label=""];
30->1 [style = bold, label=""];
20->33 [style = solid, label="indexShard"];
69->14 [style = solid, label="requestCacheStats"];
37->49 [style = solid, label="writer"];
48->57 [style = bold, label=""];
49->17 [style = solid, label="reader"];
16->10 [style = bold, label=""];
67->46 [style = bold, label=""];
4->65 [style = solid, label="secondReader"];
62->4 [style = bold, label=""];
15->18 [style = dashed, label="0"];
37->95 [style = solid, label="reader"];
6->68 [style = solid, label="termBytes"];
74->20 [style = bold, label=""];
88->76 [style = bold, label=""];
5->50 [style = solid, label="entity"];
86->97 [style = bold, label=""];
37->23 [style = bold, label=""];
70->45 [style = dashed, label="0"];
6->17 [style = solid, label="termBytes"];
18->76 [style = bold, label=""];
33->68 [style = solid, label="entity"];
46->71 [style = bold, label=""];
24->16 [style = bold, label=""];
4->40 [style = solid, label="secondReader"];
53->59 [style = bold, label=""];
23->49 [style = solid, label="termQuery"];
63->41 [style = dashed, label="0"];
61->73 [style = bold, label=""];
95->72 [style = bold, label=""];
49->58 [style = solid, label="reader"];
91->82 [style = bold, label=""];
48->56 [style = dotted, label="false"];
13->38 [style = bold, label=""];
92->94 [style = bold, label=""];
57->28 [style = dashed, label="0"];
41->25 [style = bold, label=""];
34->16 [style = dotted, label="true"];
69->33 [style = solid, label="requestCacheStats"];
41->44 [style = bold, label=""];
32->60 [style = solid, label="dir"];
17->9 [style = solid, label="loader"];
1->64 [style = bold, label=""];
49->45 [style = solid, label="reader"];
40->77 [style = dashed, label="0"];
}
