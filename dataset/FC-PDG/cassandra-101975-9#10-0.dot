digraph {
41 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval / 2)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),(long)Math.ceil(summarySpace / 2.0))@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval * 4)@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "List<SSTableReader> sstables = new ArrayList<>(cfs.getSSTables())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMaxIndexInterval(),sstable.getIndexSummarySize())@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfname)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(numRows / originalMinIndexInterval,sstable.getIndexSummarySize())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "IndexSummaryManager.instance.redistributeSummaries()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "sstable.overrideReadMeter(new RestorableMeter(100.0,100.0))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,Arrays.asList(sstable),10)@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "cfs.metadata.maxIndexInterval(cfs.metadata.getMaxIndexInterval() * 2)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "sstables = new ArrayList<>(cfs.getSSTables())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),10)@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "String ksname = KEYSPACE1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(previousInterval * (1.0 / 1.5),sstable.getEffectiveIndexInterval(),0.001)@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "SSTableReader sstable = cfs.getSSTables().iterator().next()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval)@@@38@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@54@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "String cfname = CF_STANDARDLOWiINTERVAL@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval * 2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "testChangeMaxIndexInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "sstables = new ArrayList<>(cfs.getSSTables())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "cfs.metadata.maxIndexInterval(originalMinIndexInterval * 4)@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,sstables,1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMaxIndexInterval(),sstable.getIndexSummarySize())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,Arrays.asList(sstable),summarySpace)@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Keyspace keyspace = Keyspace.open(ksname)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,sstables,1)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(originalMinIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(previousSize * 1.5,(double)sstable.getIndexSummarySize(),1)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),summarySpace)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals(previousSize * 1.5,(double)sstable.getIndexSummarySize(),1)@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "double previousInterval = sstable.getEffectiveIndexInterval()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(numRows / (originalMinIndexInterval * 2),sstable.getIndexSummarySize())@@@48@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "cfs.metadata.maxIndexInterval(cfs.metadata.getMaxIndexInterval() / 2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@55@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),(long)Math.ceil(summarySpace * 1.5))@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "int previousSize = sstable.getIndexSummarySize()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(originalMinIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int numSSTables = 1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(originalMinIndexInterval * 2,sstable.getEffectiveIndexInterval(),0.001)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testChangeMinIndexInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMinIndexInterval(),sstable.getIndexSummarySize())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "cfs.metadata.maxIndexInterval(originalMinIndexInterval * 4)@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "int numRows = 256@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "createSSTables(ksname,cfname,numSSTables,numRows)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "testChangeMinIndexInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "long summarySpace = sstable.getIndexSummaryOffHeapSize()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMinIndexInterval(),sstable.getIndexSummarySize())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(previousInterval * (1.0 / 1.5),sstable.getEffectiveIndexInterval(),0.001)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,sstables,1)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval * 4)@@@49@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "IndexSummaryManager.instance.redistributeSummaries()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->9 [style = solid, label="sstable"];
9->15 [style = solid, label="previousInterval"];
2->4 [style = bold, label=""];
56->53 [style = bold, label=""];
22->61 [style = dashed, label="0"];
20->10 [style = bold, label=""];
23->16 [style = bold, label=""];
30->38 [style = bold, label=""];
53->55 [style = solid, label="sstables"];
4->22 [style = bold, label=""];
39->18 [style = bold, label=""];
57->56 [style = bold, label=""];
35->32 [style = bold, label=""];
47->51 [style = bold, label=""];
10->49 [style = solid, label="summarySpace"];
37->0 [style = bold, label=""];
10->1 [style = solid, label="summarySpace"];
58->62 [style = bold, label=""];
13->11 [style = bold, label=""];
3->9 [style = bold, label=""];
49->1 [style = bold, label=""];
10->48 [style = solid, label="summarySpace"];
0->25 [style = solid, label="numRows"];
25->41 [style = bold, label=""];
55->61 [style = bold, label=""];
54->56 [style = solid, label="sstables"];
0->62 [style = solid, label="numRows"];
61->52 [style = bold, label=""];
31->37 [style = bold, label=""];
62->59 [style = bold, label=""];
52->61 [style = bold, label=""];
10->46 [style = solid, label="summarySpace"];
64->54 [style = bold, label=""];
11->26 [style = bold, label=""];
15->23 [style = bold, label=""];
51->42 [style = bold, label=""];
38->34 [style = bold, label=""];
0->12 [style = solid, label="numRows"];
14->45 [style = bold, label=""];
2->59 [style = dashed, label="0"];
0->3 [style = solid, label="numRows"];
54->63 [style = bold, label=""];
22->25 [style = bold, label=""];
30->35 [style = solid, label="ksname"];
44->50 [style = bold, label=""];
26->12 [style = bold, label=""];
19->14 [style = bold, label=""];
8->49 [style = bold, label=""];
0->23 [style = solid, label="numRows"];
6->36 [style = bold, label=""];
3->24 [style = solid, label="previousSize"];
7->27 [style = bold, label=""];
29->27 [style = bold, label=""];
4->55 [style = dashed, label="0"];
60->30 [style = bold, label=""];
45->44 [style = bold, label=""];
25->52 [style = dashed, label="0"];
29->2 [style = bold, label=""];
1->28 [style = bold, label=""];
21->30 [style = bold, label=""];
38->31 [style = solid, label="cfname"];
28->15 [style = bold, label=""];
0->45 [style = solid, label="numRows"];
33->40 [style = bold, label=""];
20->13 [style = solid, label="sstable"];
10->13 [style = bold, label=""];
34->31 [style = bold, label=""];
10->13 [style = solid, label="summarySpace"];
5->3 [style = bold, label=""];
43->30 [style = bold, label=""];
8->24 [style = bold, label=""];
17->7 [style = bold, label=""];
24->6 [style = bold, label=""];
38->35 [style = solid, label="cfname"];
46->12 [style = bold, label=""];
10->46 [style = bold, label=""];
10->9 [style = solid, label="summarySpace"];
0->52 [style = solid, label="numRows"];
28->40 [style = solid, label="sstable"];
0->35 [style = bold, label=""];
48->19 [style = bold, label=""];
32->39 [style = bold, label=""];
50->47 [style = bold, label=""];
39->64 [style = bold, label=""];
37->35 [style = solid, label="numSSTables"];
0->35 [style = solid, label="numRows"];
16->33 [style = bold, label=""];
32->64 [style = solid, label="sstables"];
5->6 [style = solid, label="previousInterval"];
27->29 [style = bold, label=""];
30->34 [style = solid, label="ksname"];
8->28 [style = solid, label="previousSize"];
12->5 [style = bold, label=""];
59->55 [style = bold, label=""];
8->1 [style = solid, label="sstable"];
36->1 [style = bold, label=""];
23->48 [style = bold, label=""];
63->57 [style = bold, label=""];
40->19 [style = bold, label=""];
18->17 [style = bold, label=""];
9->8 [style = bold, label=""];
25->22 [style = bold, label=""];
0->29 [style = solid, label="numRows"];
41->20 [style = bold, label=""];
62->58 [style = bold, label=""];
53->58 [style = bold, label=""];
}
