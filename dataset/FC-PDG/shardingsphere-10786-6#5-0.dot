digraph {
19 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(EncryptRuleBeanDefinitionTag.CIPHER_COLUMN_ATTRIBUTE))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.AUTO_AWARE_DATA_SOURCE_NAME))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(EncryptRuleBeanDefinitionTag.ENCRYPT_ALGORITHM_REF_ATTRIBUTE))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "factory.addConstructorArgValue(parseReadDataSourcesRef(element))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.READWRITE_SPLITTING_DATA_SOURCE_ID_ATTRIBUTE))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(EncryptRuleBeanDefinitionTag.ASSISTED_QUERY_COLUMN_ATTRIBUTE))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.WRITE_DATA_SOURCE_NAME_ATTRIBUTE))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(EncryptRuleBeanDefinitionTag.PLAIN_COLUMN_ATTRIBUTE))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "factory.addConstructorArgValue(parseReplicaDataSourcesRef(element))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "parseReadWriteSplittingDataSourceRuleConfiguration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "parseReadwriteSplittingDataSourceRuleConfiguration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "return factory.getBeanDefinition()@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ReadWriteSplittingRuleBeanDefinitionTag.AUTO_AWARE_DATA_SOURCE_NAME))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "parseEncryptColumnRuleConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ReadWriteSplittingRuleBeanDefinitionTag.LOAD_BALANCE_ALGORITHM_REF_ATTRIBUTE))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ReadWriteSplittingRuleBeanDefinitionTag.WRITE_DATA_SOURCE_NAME_ATTRIBUTE))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "final Element element@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(EncryptRuleBeanDefinitionTag.LOGIC_COLUMN_ATTRIBUTE))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ReadwriteSplittingRuleBeanDefinitionTag.LOAD_BALANCE_ALGORITHM_REF_ATTRIBUTE))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "final Element element@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "factory.addConstructorArgValue(element.getAttribute(ReadWriteSplittingRuleBeanDefinitionTag.READWRITE_SPLITTING_DATA_SOURCE_ID_ATTRIBUTE))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "final Element element@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16->0 [style = bold, label=""];
3->1 [style = bold, label=""];
21->0 [style = bold, label=""];
8->4 [style = solid, label="element"];
11->12 [style = dotted, label="true"];
5->9 [style = dashed, label="0"];
8->12 [style = dashed, label="0"];
19->17 [style = bold, label=""];
12->10 [style = solid, label="element"];
4->2 [style = bold, label=""];
9->10 [style = bold, label=""];
6->14 [style = dashed, label="0"];
24->22 [style = bold, label=""];
22->23 [style = bold, label=""];
1->22 [style = dashed, label="0"];
20->21 [style = bold, label=""];
1->13 [style = dashed, label="0"];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
5->17 [style = dashed, label="0"];
10->16 [style = bold, label=""];
2->21 [style = dashed, label="0"];
7->19 [style = dashed, label="0"];
4->20 [style = dashed, label="0"];
15->9 [style = bold, label=""];
2->16 [style = dashed, label="0"];
23->19 [style = bold, label=""];
11->13 [style = bold, label=""];
5->4 [style = bold, label=""];
7->15 [style = dashed, label="0"];
8->18 [style = dashed, label="0"];
14->15 [style = bold, label=""];
6->7 [style = bold, label=""];
4->10 [style = dashed, label="0"];
3->8 [style = dotted, label="true"];
13->14 [style = bold, label=""];
6->23 [style = dashed, label="0"];
24->18 [style = dotted, label="true"];
17->20 [style = bold, label=""];
}
