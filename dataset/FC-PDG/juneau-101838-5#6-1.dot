digraph {
22 [style = filled, label = "a2.op(op).roles(\"foo\",\"bar\").run().assertCode().is(200)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "a1.op(op).roles(\"foo2\",\"bar\").run().assertCode().is(403)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "a01a_onClass_simple['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "a2.op(op).roles(\"foo\").run().assertCode().is(200)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "a2.op(op).run().assertCode().is(403)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "MockRestClient a2 = MockRestClient.buildLax()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "a1.op(op).run().assertCode().is(403)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "a1.request(op).roles(\"foo\",\"bar\").run().assertCode().is(200)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "a1.request(op).roles(\"foo2\",\"bar\").run().assertCode().is(403)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "a02a_onMethod_simple['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "a1.op(op).roles(\"foo2\").run().assertCode().is(403)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "a1.request(op).roles(\"foo\").run().assertCode().is(200)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "a1.op(op).roles(\"foo\",\"bar\").run().assertCode().is(200)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "MockRestClient a1 = MockRestClient.buildLax()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "a2.op(op).roles(\"foo2\",\"bar\").run().assertCode().is(403)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "a1.op(op).roles(\"bar\",\"foo\").run().assertCode().is(200)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "a1.request(op).roles(\"bar\",\"foo\").run().assertCode().is(200)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "a01a_onClass_simple['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "a2.op(op).roles(\"foo2\").run().assertCode().is(403)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "a2.op(op).roles(\"bar\",\"foo\").run().assertCode().is(200)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "a1.request(op).roles(\"foo2\").run().assertCode().is(403)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "a1.request(op).run().assertCode().is(403)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "a1.op(op).roles(\"foo\").run().assertCode().is(200)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->10 [style = bold, label=""];
6->3 [style = bold, label=""];
7->11 [style = bold, label=""];
22->15 [style = bold, label=""];
3->21 [style = dashed, label="0"];
10->14 [style = bold, label=""];
0->6 [style = bold, label=""];
7->17 [style = dashed, label="0"];
15->21 [style = bold, label=""];
12->11 [style = bold, label=""];
19->17 [style = bold, label=""];
16->22 [style = bold, label=""];
11->9 [style = bold, label=""];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
0->22 [style = dashed, label="0"];
21->18 [style = bold, label=""];
8->7 [style = bold, label=""];
4->12 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
18->20 [style = bold, label=""];
7->5 [style = bold, label=""];
20->16 [style = bold, label=""];
6->13 [style = dashed, label="0"];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
5->11 [style = dashed, label="0"];
2->14 [style = dashed, label="0"];
6->15 [style = dashed, label="0"];
4->20 [style = dashed, label="0"];
14->12 [style = bold, label=""];
2->18 [style = dashed, label="0"];
3->10 [style = dashed, label="0"];
0->9 [style = dashed, label="0"];
4->5 [style = bold, label=""];
17->16 [style = bold, label=""];
9->13 [style = bold, label=""];
}
