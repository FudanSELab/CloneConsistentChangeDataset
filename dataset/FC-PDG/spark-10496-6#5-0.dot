digraph {
12 [style = filled, label = "i < metrics.labels().length@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "double accuracy = metrics.accuracy()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "JavaRDD<LabeledPoint> training = splits(0(.cache()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "System.out.println(\"Accuracy = \" + metrics.accuracy())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "System.out.format(\"Weighted recall = %f\",metrics.weightedRecall())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "System.out.format(\"Class %f precision = %f\",metrics.labels()(i(,metrics.precision(metrics.labels()(i())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final LogisticRegressionModel model = new LogisticRegressionWithLBFGS().setNumClasses(10).run(training.rdd())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "System.out.println(\"Confusion matrix: \" + confusion)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "SparkConf conf = new SparkConf().setAppName(\"Multi class Classification Metrics Example\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "model.save(sc,\"target/tmp/LogisticRegressionModel\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "JavaRDD<LabeledPoint> test = splits(1(@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> predictionAndLabels = test.map(new Function<LabeledPoint,Tuple2<Object,Object>>(){public Tuple2<Object,Object> call(LabeledPoint p){Double prediction = model.predict(p.features())return new Tuple2<Object,Object>(prediction,p.label())}})@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "System.out.format(\"Weighted F1 score = %f\",metrics.weightedFMeasure())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "JavaRDD<LabeledPoint>(( splits = data.randomSplit(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a79dbb,11L)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "System.out.format(\"Weighted precision = %f\",metrics.weightedPrecision())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "JavaRDD<LabeledPoint>(( splits = data.randomSplit(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a79eda,11L)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "SparkContext sc = new SparkContext(conf)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "System.out.format(\"Class %f F1 score = %f\",metrics.labels()(i(,metrics.fMeasure(metrics.labels()(i())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "model.save(sc,\"target/tmp/javaLogisticRegressionWithLBFGSModel\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "JavaRDD<LabeledPoint> data = MLUtils.loadLibSVMFile(sc,path).toJavaRDD()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i++@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final LogisticRegressionModel model = new LogisticRegressionWithLBFGS().setNumClasses(3).run(training.rdd())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Matrix confusion = metrics.confusionMatrix()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "System.out.format(\"Class %f recall = %f\",metrics.labels()(i(,metrics.recall(metrics.labels()(i())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MulticlassMetrics metrics = new MulticlassMetrics(predictionAndLabels.rdd())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "sc.stop()@@@37@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "LogisticRegressionModel sameModel = LogisticRegressionModel.load(sc,\"target/tmp/LogisticRegressionModel\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String path = \"data/mllib/sample_libsvm_data.txt\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "System.out.format(\"Weighted false positive rate = %f\",metrics.weightedFalsePositiveRate())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String path = \"data/mllib/sample_multiclass_classification_data.txt\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int i = 0@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "sc.stop()@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "System.out.println(\"Accuracy = \" + accuracy)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "SparkConf conf = new SparkConf().setAppName(\"JavaLogisticRegressionWithLBFGSExample\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "LogisticRegressionModel sameModel = LogisticRegressionModel.load(sc,\"target/tmp/javaLogisticRegressionWithLBFGSModel\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->26 [style = solid, label="i"];
3->10 [style = bold, label=""];
38->32 [style = bold, label=""];
31->37 [style = bold, label=""];
23->25 [style = bold, label=""];
26->8 [style = bold, label=""];
24->8 [style = solid, label="i"];
11->20 [style = bold, label=""];
17->27 [style = bold, label=""];
8->12 [style = bold, label=""];
10->35 [style = dashed, label="0"];
35->14 [style = solid, label="splits"];
22->24 [style = bold, label=""];
23->25 [style = solid, label="conf"];
6->26 [style = bold, label=""];
0->7 [style = bold, label=""];
13->2 [style = solid, label="confusion"];
12->15 [style = bold, label=""];
25->34 [style = solid, label="sc"];
1->21 [style = bold, label=""];
7->16 [style = bold, label=""];
18->5 [style = dotted, label="true"];
9->13 [style = bold, label=""];
12->26 [style = dotted, label="true"];
25->32 [style = solid, label="sc"];
24->26 [style = solid, label="i"];
12->1 [style = bold, label=""];
28->23 [style = bold, label=""];
37->25 [style = solid, label="conf"];
8->6 [style = solid, label="i"];
25->33 [style = bold, label=""];
34->36 [style = bold, label=""];
12->15 [style = dotted, label="true"];
11->30 [style = dashed, label="0"];
14->11 [style = bold, label=""];
8->15 [style = solid, label="i"];
15->6 [style = bold, label=""];
24->15 [style = solid, label="i"];
10->19 [style = bold, label=""];
28->5 [style = dotted, label="true"];
12->8 [style = dotted, label="true"];
30->20 [style = bold, label=""];
25->4 [style = bold, label=""];
14->30 [style = bold, label=""];
3->35 [style = bold, label=""];
24->6 [style = solid, label="i"];
33->3 [style = bold, label=""];
8->12 [style = solid, label="i"];
24->12 [style = solid, label="i"];
2->22 [style = bold, label=""];
13->29 [style = dashed, label="0"];
25->17 [style = solid, label="sc"];
4->33 [style = dashed, label="0"];
29->38 [style = solid, label="accuracy"];
25->16 [style = solid, label="sc"];
24->12 [style = bold, label=""];
9->29 [style = bold, label=""];
29->38 [style = bold, label=""];
16->17 [style = bold, label=""];
19->14 [style = bold, label=""];
20->9 [style = bold, label=""];
32->34 [style = bold, label=""];
23->37 [style = dashed, label="0"];
12->6 [style = dotted, label="true"];
13->2 [style = bold, label=""];
21->0 [style = bold, label=""];
35->19 [style = bold, label=""];
4->3 [style = bold, label=""];
10->14 [style = solid, label="splits"];
37->25 [style = bold, label=""];
31->5 [style = dotted, label="true"];
18->23 [style = bold, label=""];
2->38 [style = dashed, label="0"];
}
