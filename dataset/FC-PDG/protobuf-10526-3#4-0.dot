digraph {
9 [style = filled, label = "assertTrue(classUnderTest + \" must give the same bytes back from the CodedInputStream\",Arrays.equals(referenceBytes,roundTripBytes))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testNewCodedInput['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testNewCodedInput['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "byte(( roundTripBytes = cis.readRawBytes(referenceBytes.length)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testNewCodedInput['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CodedInputStream cis = stringUnderTest.newCodedInput()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "CodedInputStream cis = TEST_STRING.newCodedInput()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "byte(( roundTripBytes = cis.readRawBytes(BYTES.length)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(CLASSNAME + \" CodedInputStream must now be exhausted\",cis.isAtEnd())@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(classUnderTest + \" CodedInputStream must now be exhausted\",cis.isAtEnd())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "CodedInputStream cis = testString.newCodedInput()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertTrue(CLASSNAME + \" must give the same bytes back from the CodedInputStream\",Arrays.equals(BYTES,roundTripBytes))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->4 [style = solid, label="roundTripBytes"];
2->11 [style = dashed, label="0"];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
1->4 [style = bold, label=""];
1->8 [style = dashed, label="0"];
4->9 [style = dashed, label="0"];
4->2 [style = bold, label=""];
8->9 [style = solid, label="roundTripBytes"];
9->11 [style = bold, label=""];
0->5 [style = dashed, label="0"];
0->7 [style = dashed, label="0"];
7->8 [style = bold, label=""];
10->7 [style = bold, label=""];
0->1 [style = bold, label=""];
3->0 [style = bold, label=""];
8->9 [style = bold, label=""];
}
