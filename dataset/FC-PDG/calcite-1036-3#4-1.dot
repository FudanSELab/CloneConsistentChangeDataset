digraph {
6 [style = filled, label = "testOfType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "checkIterable(enumerator)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testCast['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Enumerator<Integer> enumerator = Linq4j.asEnumerable(numbers).cast().enumerator()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testCast['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final List<Number> numbers = Arrays.asList((Number)2,null,3.14,5)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkCast(enumerator)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Enumerator<Integer> enumerator = Linq4j.asEnumerable(numbers).ofType().enumerator()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->7 [style = bold, label=""];
1->0 [style = bold, label=""];
4->2 [style = bold, label=""];
1->5 [style = dashed, label="0"];
3->2 [style = bold, label=""];
1->0 [style = solid, label="enumerator"];
0->7 [style = dashed, label="0"];
2->1 [style = bold, label=""];
5->7 [style = solid, label="enumerator"];
2->5 [style = bold, label=""];
6->2 [style = bold, label=""];
}
