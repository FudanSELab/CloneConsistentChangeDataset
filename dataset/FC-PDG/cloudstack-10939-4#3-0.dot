digraph {
12 [style = filled, label = "updateVirtualMachineTestCleanUpTrue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Mockito.doNothing().when(userVmManagerImpl).updateDisplayVmFlag(false,vmId,userVmVoMock)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "configureDoNothingForMethodsThatWeDoNotWantToTest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Mockito.verify(userVmDetailVO,Mockito.times(0)).removeDetails(vmId)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Mockito.doNothing().when(userVmDetailVO).removeDetails(vmId)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Mockito.when(userVmVoMock.isDisplay()).thenReturn(true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Mockito.verify(userVmDetailVO).removeDetails(vmId)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Mockito.when(updateVmCommand.isCleanupDetails()).thenReturn(true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Mockito.lenient().doNothing().when(userVmManagerImpl).updateDisplayVmFlag(false,vmId,userVmVoMock)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "updateVirtualMachineTestCleanUpTrue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "userVmManagerImpl.updateVirtualMachine(updateVmCommand)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Mockito.verify(userVmManagerImpl).updateDisplayVmFlag(false,vmId,userVmVoMock)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "updateVirtualMachineTestDisplayChanged['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ServiceOffering offering = getSvcoffering(512)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "verifyMethodsThatAreAlwaysExecuted()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Mockito.verify(userVmManagerImpl,Mockito.times(0)).updateDisplayVmFlag(false,vmId,userVmVoMock)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Mockito.when(_serviceOfferingDao.findById(Mockito.anyLong(),Mockito.anyLong())).thenReturn((ServiceOfferingVO)offering)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12->7 [style = bold, label=""];
8->14 [style = dashed, label="0"];
9->11 [style = bold, label=""];
6->4 [style = bold, label=""];
2->7 [style = bold, label=""];
7->9 [style = bold, label=""];
4->5 [style = bold, label=""];
15->4 [style = bold, label=""];
4->10 [style = dashed, label="0"];
7->6 [style = bold, label=""];
0->8 [style = bold, label=""];
11->6 [style = bold, label=""];
3->13 [style = bold, label=""];
0->13 [style = dashed, label="0"];
4->1 [style = bold, label=""];
6->10 [style = bold, label=""];
10->1 [style = bold, label=""];
3->0 [style = bold, label=""];
9->11 [style = solid, label="offering"];
16->7 [style = bold, label=""];
6->15 [style = dashed, label="0"];
7->15 [style = bold, label=""];
5->3 [style = bold, label=""];
13->14 [style = bold, label=""];
1->5 [style = bold, label=""];
}
