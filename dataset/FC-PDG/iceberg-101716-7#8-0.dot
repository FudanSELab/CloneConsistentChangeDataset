digraph {
16 [style = filled, label = "Transaction txn = table.newTransaction()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "table.newAppend().appendFile(FILE_A).appendFile(FILE_B).commit()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "txn.newAppend().appendManifest(appendManifest).commit()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "ManifestWriter<DataFile> writer = ManifestFiles.write(table.spec(),manifestLocation)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "TableMetadata base = readMetadata()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ManifestFile mergedManifest = txn.table().currentSnapshot().allManifests().get(0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(\"Transaction should hijack the delete of the first merged manifest\",((BaseTransaction)txn).deletedFiles().contains(mergedManifest.path()))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Table should be on version 3 after real append\",3,(int)version())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testTransactionRetryAndAppendManifests['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ManifestFile appendManifest = writeManifestWithName(\"input.m0\",FILE_D)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertFalse(\"Append manifest should be deleted\",new File(copiedAppendManifest).exists())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertSame(\"Base metadata should not change when commit is created\",base,readMetadata())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Table should be on version 2 after txn create\",2,(int)version())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "OutputFile manifestLocation = Files.localOutput(\"/tmp/\" + UUID.randomUUID().toString() + \".avro\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ManifestWriter writer = ManifestFiles.write(table.spec(),manifestLocation)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(\"Table should be on version 4 after commit\",4,(int)version())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertFalse(\"Merged append manifest should be deleted\",new File(mergedManifest.path()).exists())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testTransactionRetryAndAppendManifests['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "table.newAppend().appendFile(FILE_C).commit()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ManifestFile v1manifest = table.currentSnapshot().allManifests().get(0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertFalse(\"Append manifest should be deleted\",new File(appendManifest.path()).exists())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "writer.add(FILE_D)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertTrue(\"Transaction should hijack the delete of the original append manifest\",((BaseTransaction)txn).deletedFiles().contains(appendManifest.path()))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "table.updateProperties().set(TableProperties.COMMIT_NUM_RETRIES,\"1\").set(TableProperties.MANIFEST_MIN_MERGE_COUNT,\"0\").set(TableProperties.SNAPSHOT_ID_INHERITANCE_ENABLED,\"true\").commit()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertEquals(\"Should merge all commit manifests into a single manifest\",1,table.currentSnapshot().allManifests().size())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "txn.newAppend().appendManifest(writer.toManifestFile()).commit()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertSame(\"Base metadata should not change when commit is created\",base,readMetadata())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(\"Copied append manifest should not be deleted yet\",new File(copiedAppendManifest).exists())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(\"Append should create one manifest\",1,table.currentSnapshot().allManifests().size())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "txn.commitTransaction()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(\"Should merge all commit manifests into a single manifest\",1,table.currentSnapshot().allManifests().size())@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Table should be on version 2 after append\",2,(int)version())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(\"Transaction should hijack the delete of the first merged manifest\",((BaseTransaction)txn).deletedFiles().contains(mergedManifest.path()))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(\"Append should have one merged manifest\",1,txn.table().currentSnapshot().allManifests().size())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testTransactionRetryAndAppendManifestsWithSnapshotIdInheritance['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertTrue(\"Transaction should hijack the delete of the original copied manifest\",((BaseTransaction)txn).deletedFiles().contains(copiedAppendManifest))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(\"Table should be on version 1\",1,(int)version())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "{writer.close()}@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "table.updateProperties().set(TableProperties.COMMIT_NUM_RETRIES,\"1\").set(TableProperties.MANIFEST_MIN_MERGE_COUNT,\"0\").commit()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "table.newAppend().appendFile(FILE_C).commit()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->18 [style = bold, label=""];
19->10 [style = solid, label="base"];
23->25 [style = bold, label=""];
24->19 [style = bold, label=""];
0->37 [style = dashed, label="0"];
0->13 [style = bold, label=""];
21->0 [style = bold, label=""];
21->34 [style = dashed, label="0"];
37->26 [style = bold, label=""];
17->6 [style = bold, label=""];
26->38 [style = dashed, label="0"];
29->9 [style = bold, label=""];
36->4 [style = bold, label=""];
21->34 [style = bold, label=""];
26->14 [style = bold, label=""];
18->12 [style = bold, label=""];
30->25 [style = bold, label=""];
9->17 [style = bold, label=""];
16->32 [style = bold, label=""];
11->19 [style = bold, label=""];
9->7 [style = bold, label=""];
1->32 [style = dashed, label="0"];
22->23 [style = bold, label=""];
22->30 [style = bold, label=""];
7->3 [style = bold, label=""];
22->23 [style = solid, label="manifestLocation"];
19->16 [style = bold, label=""];
39->18 [style = bold, label=""];
5->16 [style = bold, label=""];
26->38 [style = bold, label=""];
6->27 [style = bold, label=""];
12->29 [style = bold, label=""];
34->37 [style = bold, label=""];
16->1 [style = bold, label=""];
9->21 [style = solid, label="copiedAppendManifest"];
13->26 [style = bold, label=""];
28->36 [style = dashed, label="0"];
24->11 [style = bold, label=""];
3->8 [style = bold, label=""];
15->24 [style = bold, label=""];
27->7 [style = bold, label=""];
22->30 [style = solid, label="manifestLocation"];
4->20 [style = bold, label=""];
23->30 [style = dashed, label="0"];
8->21 [style = bold, label=""];
25->5 [style = bold, label=""];
9->17 [style = solid, label="copiedAppendManifest"];
32->39 [style = bold, label=""];
19->18 [style = solid, label="base"];
31->28 [style = bold, label=""];
35->36 [style = bold, label=""];
38->33 [style = bold, label=""];
1->10 [style = bold, label=""];
20->15 [style = bold, label=""];
19->22 [style = bold, label=""];
2->28 [style = bold, label=""];
28->4 [style = bold, label=""];
}
