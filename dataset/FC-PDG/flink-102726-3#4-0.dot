digraph {
11 [style = filled, label = "fail(\"should fail\")@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "TumblingProcessingTimeWindows.of(Time.seconds(10),Time.seconds(20))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SlidingProcessingTimeWindows.of(Time.seconds(20),Time.seconds(10),Time.seconds(11))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "SlidingProcessingTimeWindows.of(Time.seconds(2),Time.seconds(-1))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testInvalidParameters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(e.toString(),containsString(\"0 <= offset < size\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "IllegalArgumentException e@@@28@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "TumblingProcessingTimeWindows.of(Time.seconds(10),Time.seconds(-1))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "IllegalArgumentException e@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(e.toString(),containsString(\"abs(offset) < slide and size > 0\"))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "SlidingProcessingTimeWindows.of(Time.seconds(20),Time.seconds(10),Time.seconds(-11))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "SlidingProcessingTimeWindows.of(Time.seconds(-20),Time.seconds(10),Time.seconds(-1))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "fail(\"should fail\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "fail(\"should fail\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(e.toString(),containsString(\"0 <= offset < slide and size > 0\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertThat(e.toString(),containsString(\"abs(offset) < slide and size > 0\"))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(e.toString(),containsString(\"abs(offset) < slide and size > 0\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "SlidingProcessingTimeWindows.of(Time.seconds(-2),Time.seconds(1))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(e.toString(),containsString(\"0 <= offset < slide and size > 0\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "SlidingProcessingTimeWindows.of(Time.seconds(20),Time.seconds(10),Time.seconds(-1))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertThat(e.toString(),containsString(\"abs(offset) < slide and size > 0\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "testInvalidParameters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "IllegalArgumentException e@@@21@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "IllegalArgumentException e@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(e.toString(),containsString(\"0 <= offset < size\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "fail(\"should fail\")@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testInvalidParameters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "fail(\"should fail\")@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "TumblingProcessingTimeWindows.of(Time.seconds(-1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25->0 [style = bold, label=""];
10->15 [style = dashed, label="0"];
7->6 [style = dotted, label="true"];
9->26 [style = dotted, label="true"];
1->8 [style = bold, label=""];
5->26 [style = dashed, label="0"];
7->19 [style = dotted, label="true"];
0->27 [style = bold, label=""];
2->3 [style = bold, label=""];
4->13 [style = bold, label=""];
0->2 [style = bold, label=""];
27->3 [style = bold, label=""];
2->27 [style = dashed, label="0"];
23->4 [style = bold, label=""];
12->20 [style = bold, label=""];
11->12 [style = bold, label=""];
3->15 [style = bold, label=""];
21->17 [style = dotted, label="true"];
16->2 [style = bold, label=""];
13->11 [style = bold, label=""];
7->24 [style = dotted, label="true"];
18->14 [style = dotted, label="true"];
9->16 [style = bold, label=""];
8->0 [style = bold, label=""];
22->8 [style = bold, label=""];
9->26 [style = bold, label=""];
3->10 [style = bold, label=""];
5->16 [style = dashed, label="0"];
26->27 [style = bold, label=""];
5->2 [style = bold, label=""];
3->23 [style = bold, label=""];
7->24 [style = bold, label=""];
6->24 [style = dashed, label="0"];
6->10 [style = bold, label=""];
14->12 [style = bold, label=""];
7->6 [style = bold, label=""];
6->19 [style = dashed, label="0"];
15->4 [style = bold, label=""];
10->4 [style = bold, label=""];
9->5 [style = bold, label=""];
28->25 [style = bold, label=""];
8->25 [style = dashed, label="0"];
17->13 [style = bold, label=""];
9->16 [style = dotted, label="true"];
19->15 [style = bold, label=""];
7->19 [style = bold, label=""];
21->17 [style = bold, label=""];
18->14 [style = bold, label=""];
10->23 [style = dashed, label="0"];
24->23 [style = bold, label=""];
9->5 [style = dotted, label="true"];
}
