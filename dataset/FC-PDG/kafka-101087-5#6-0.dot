digraph {
1 [style = filled, label = "assertThat(changeLogging,instanceOf())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(changeLogging,instanceOf())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(caching,instanceOf())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldHaveCachingAndChangeLoggingWhenBothEnabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final WrappedStateStore changeLogging = (WrappedStateStore)caching.wrapped()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final SessionStore<String,String> store = builder.withLoggingEnabled(Collections.emptyMap()).withCachingEnabled().build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final WrappedStateStore caching = (WrappedStateStore)((WrappedStateStore)store).wrapped()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final WindowStore<String,String> store = builder.withLoggingEnabled(Collections.emptyMap()).withCachingEnabled().build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertThat(caching,instanceOf())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(changeLogging.wrapped(),CoreMatchers.equalTo(inner))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "shouldHaveCachingAndChangeLoggingWhenBothEnabled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(store,instanceOf())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final WindowStore<String,String> store = builder.withLoggingEnabled(Collections.emptyMap()).withCachingEnabled().build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertThat(changeLogging.wrapped(),CoreMatchers.equalTo(inner))@@@9@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(store,instanceOf())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldHaveCachingAndChangeLoggingWhenBothEnabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
1->8 [style = bold, label=""];
3->1 [style = bold, label=""];
15->14 [style = bold, label=""];
4->6 [style = bold, label=""];
6->3 [style = solid, label="caching"];
7->8 [style = dashed, label="0"];
2->1 [style = solid, label="changeLogging"];
2->12 [style = solid, label="changeLogging"];
4->0 [style = solid, label="store"];
0->11 [style = dashed, label="0"];
9->10 [style = bold, label=""];
10->0 [style = solid, label="store"];
3->13 [style = dashed, label="0"];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
12->7 [style = bold, label=""];
6->2 [style = bold, label=""];
1->12 [style = dashed, label="0"];
2->0 [style = bold, label=""];
13->12 [style = bold, label=""];
6->13 [style = solid, label="caching"];
14->11 [style = solid, label="store"];
11->13 [style = bold, label=""];
5->4 [style = bold, label=""];
4->14 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
14->6 [style = bold, label=""];
2->11 [style = bold, label=""];
}
