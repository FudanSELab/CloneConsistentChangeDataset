digraph {
8 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryNameUsingIsoCodeLookup(JoinType.LEFT))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "JoinFilterPreAnalysis preAnalysis = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(joinableClauses,VirtualColumns.EMPTY,filter,true,true,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "test_makeCursors_factToCountryLeftWithFilterOnJoinableUsingLookup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,preAnalysis).makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"k\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"v\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91edd7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91edde))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Filter filter = new SelectorDimFilter(\"channel\",\"#en.wikipedia\",null).toFilter()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Filter filter = new OrDimFilter(new SelectorDimFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"k\",\"DE\",null),new SelectorDimFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"v\",\"Norway\",null)).toFilter()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,preAnalysis).makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryNumber\"),NullHandling.sqlCompatible()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91eca6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ecae,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ecb6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ecbe,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ecc6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ecce,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ecd6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ecde,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ece6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ecee,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ecf6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ecfe): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ed09,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ed11,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ed19,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ed21,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ed29,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ed31,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ed39,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ed41,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ed49,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ed51,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ed59,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ed61,new Object((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91ed69))@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnNumber(JoinType.INNER))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JoinFilterPreAnalysis preAnalysis = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(JoinableClauses.fromList(joinableClauses),VirtualColumns.EMPTY,filter,true,true,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9->0 [style = bold, label=""];
3->1 [style = bold, label=""];
2->6 [style = solid, label="filter"];
2->6 [style = bold, label=""];
2->4 [style = solid, label="filter"];
0->6 [style = dashed, label="0"];
1->6 [style = solid, label="joinableClauses"];
7->8 [style = bold, label=""];
2->0 [style = solid, label="filter"];
9->0 [style = solid, label="filter"];
6->4 [style = bold, label=""];
5->1 [style = bold, label=""];
0->10 [style = bold, label=""];
2->0 [style = bold, label=""];
1->0 [style = solid, label="joinableClauses"];
9->10 [style = solid, label="filter"];
0->4 [style = bold, label=""];
8->0 [style = solid, label="joinableClauses"];
2->9 [style = dashed, label="0"];
8->9 [style = bold, label=""];
1->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
4->10 [style = dashed, label="0"];
}
