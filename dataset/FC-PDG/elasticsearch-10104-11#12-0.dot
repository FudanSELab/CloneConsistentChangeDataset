digraph {
4 [style = filled, label = "assertThat(processor.getTargetField(),equalTo(\"geoip\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "config.put(\"field\",\"_field\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "GeoIpProcessor processor = factory.create(null,processorTag,null,config)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "GeoIpProcessor.Factory factory = new GeoIpProcessor.Factory(localDatabases)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertThat(processor.getProperties(),sameInstance(GeoIpProcessor.Factory.DEFAULT_CITY_PROPERTIES))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(processor.getDatabaseType(),equalTo(\"GeoLite2-City\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "AttachmentProcessor processor = factory.create(null,processorTag,null,config)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testBuildDefaults['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Map<String,Object> config = new HashMap<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(processor.isIgnoreMissing())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testSetIgnoreMissing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "GeoIpProcessor.Factory factory = new GeoIpProcessor.Factory(databaseRegistry)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "config.put(\"ignore_missing\",true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String processorTag = randomAlphaOfLength(10)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testSetIgnoreMissing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertThat(processor.getTag(),equalTo(processorTag))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(processor.getProperties(),sameInstance(AttachmentProcessor.Factory.DEFAULT_PROPERTIES))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(processor.getTargetField(),equalTo(\"attachment\"))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFalse(processor.isIgnoreMissing())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(processor.getField(),equalTo(\"_field\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
18->3 [style = solid, label="config"];
6->3 [style = bold, label=""];
16->0 [style = bold, label=""];
5->9 [style = bold, label=""];
7->10 [style = bold, label=""];
7->14 [style = dashed, label="0"];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
3->11 [style = bold, label=""];
14->10 [style = bold, label=""];
3->16 [style = bold, label=""];
6->3 [style = solid, label="processorTag"];
2->4 [style = bold, label=""];
15->18 [style = bold, label=""];
10->6 [style = bold, label=""];
17->19 [style = bold, label=""];
12->7 [style = bold, label=""];
3->11 [style = solid, label="processorTag"];
11->3 [style = dashed, label="0"];
11->0 [style = bold, label=""];
5->17 [style = dashed, label="0"];
18->10 [style = bold, label=""];
10->11 [style = solid, label="config"];
4->2 [style = dashed, label="0"];
6->8 [style = bold, label=""];
3->0 [style = solid, label="processorTag"];
9->1 [style = bold, label=""];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
6->16 [style = solid, label="processorTag"];
}
