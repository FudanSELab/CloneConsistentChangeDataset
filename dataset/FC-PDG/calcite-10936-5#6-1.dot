digraph {
11 [style = filled, label = "checkMazeTableFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "resultSet = statement.executeQuery(sql2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "ResultSet resultSet = statement.executeQuery(sql)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SchemaPlus schema = rootSchema.add(\"s\",new AbstractSchema())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sql = \"select *\" + \"from table(\"s\".\"Maze\"(5, 3, 1)) as t(s)\"@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final TableFunction table = TableFunctionImpl.create(MAZE_METHOD)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(b.toString(),is(maze))@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final TableFunction table = TableFunctionImpl.create(Smalls.MAZE2_METHOD)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final String sql3 = \"select *\" + \"from table(\"s\".\"Maze\"(HEIGHT => 3, WIDTH => 5))\"@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "CalciteConnection calciteConnection = connection.unwrap()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "checkMazeTableFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "final String sql = \"select *\" + \"from table(\"s\".\"Maze\"(5, 3, 1))\"@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final String sql@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(CalciteAssert.toString(resultSet),is(result + \"S=generate2(w=5, h=3, s=1)\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final TableFunction table2 = TableFunctionImpl.create(SOLVE_METHOD)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "schema.add(\"Solve\",table2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(CalciteAssert.toString(resultSet),is(result + \"S=generate2(w=5, h=3, s=null)\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "resultSet = statement.executeQuery(sql3)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String maze@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "final Statement statement = connection.createStatement()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final String sql2 = \"select *\" + \"from table(\"s\".\"Maze\"(WIDTH => 5, HEIGHT => 3, SEED => 1))\"@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "SchemaPlus rootSchema = calciteConnection.getRootSchema()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String maze@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sql = \"select *\" + \"from table(\"s\".\"Solve\"(5, 3, 1)) as t(s)\"@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "resultSet.next()@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "solution@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Boolean solution@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "connection.close()@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Boolean solution@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "final String result = \"S=abcde\" + \"S=xyz\"@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testScannableTableFunctionWithNamedParameters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final StringBuilder b = new StringBuilder()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(CalciteAssert.toString(resultSet),is(result + \"S=generate2(w=5, h=3, s=1)\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ResultSet resultSet = connection.createStatement().executeQuery(sql)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Connection connection = DriverManager.getConnection(\"jdbc:calcite:\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "schema.add(\"Maze\",table)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "b.append(resultSet.getString(1)).append(\"\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->4 [style = solid, label="maze"];
13->10 [style = bold, label=""];
8->16 [style = bold, label=""];
14->3 [style = bold, label=""];
35->33 [style = solid, label="sql"];
21->16 [style = solid, label="solution"];
16->9 [style = dotted, label="true"];
7->2 [style = solid, label="sql"];
20->13 [style = bold, label=""];
27->36 [style = bold, label=""];
15->14 [style = bold, label=""];
9->2 [style = solid, label="sql"];
17->6 [style = bold, label=""];
9->2 [style = bold, label=""];
25->13 [style = bold, label=""];
6->18 [style = bold, label=""];
10->19 [style = bold, label=""];
5->16 [style = solid, label="solution"];
3->14 [style = bold, label=""];
12->17 [style = bold, label=""];
24->32 [style = bold, label=""];
16->7 [style = bold, label=""];
0->4 [style = solid, label="maze"];
31->29 [style = bold, label=""];
12->17 [style = solid, label="table"];
11->5 [style = dotted, label="true"];
34->17 [style = solid, label="table"];
20->21 [style = dotted, label="true"];
33->27 [style = bold, label=""];
33->36 [style = solid, label="resultSet"];
29->26 [style = bold, label=""];
26->30 [style = bold, label=""];
35->28 [style = bold, label=""];
23->24 [style = solid, label="sql2"];
31->29 [style = solid, label="sql3"];
19->1 [style = bold, label=""];
23->24 [style = bold, label=""];
1->34 [style = bold, label=""];
14->4 [style = bold, label=""];
28->33 [style = bold, label=""];
36->23 [style = bold, label=""];
7->2 [style = bold, label=""];
11->0 [style = dotted, label="true"];
34->17 [style = bold, label=""];
11->13 [style = bold, label=""];
27->32 [style = solid, label="result"];
24->32 [style = solid, label="resultSet"];
2->15 [style = bold, label=""];
27->26 [style = solid, label="result"];
1->12 [style = bold, label=""];
14->3 [style = dotted, label="true"];
18->8 [style = bold, label=""];
16->7 [style = dotted, label="false"];
20->22 [style = dotted, label="true"];
29->26 [style = solid, label="resultSet"];
12->34 [style = dashed, label="0"];
27->36 [style = solid, label="result"];
32->31 [style = bold, label=""];
16->9 [style = bold, label=""];
6->18 [style = solid, label="table2"];
17->35 [style = bold, label=""];
5->22 [style = dashed, label="0"];
}
