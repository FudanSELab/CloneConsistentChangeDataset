digraph {
0 [style = filled, label = "return new ContainerBuilder(container).withName(kubernetesTaskManagerParameters.getTaskManagerMainContainerName()).withImage(kubernetesTaskManagerParameters.getImage()).withImagePullPolicy(kubernetesTaskManagerParameters.getImagePullPolicy().name()).withResources(resourceRequirements).withPorts(new ContainerPortBuilder().withName(Constants.TASK_MANAGER_RPC_PORT_NAME).withContainerPort(kubernetesTaskManagerParameters.getRPCPort()).build()).withEnv(getCustomizedEnvs()).addNewEnv().withName(ENV_FLINK_POD_NAME).withValue(kubernetesTaskManagerParameters.getPodName()).endEnv().build()@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return new ContainerBuilder(container).withName(kubernetesJobManagerParameters.getJobManagerMainContainerName()).withImage(kubernetesJobManagerParameters.getImage()).withImagePullPolicy(kubernetesJobManagerParameters.getImagePullPolicy().name()).withResources(requirements).withPorts(getContainerPorts()).withEnv(getCustomizedEnvs()).addNewEnv().withName(ENV_FLINK_POD_IP_ADDRESS).withValueFrom(new EnvVarSourceBuilder().withNewFieldRef(API_VERSION,POD_IP_FIELD_PATH).build()).endEnv().build()@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "decorateMainContainer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final ResourceRequirements requirements = KubernetesUtils.getResourceRequirements(kubernetesJobManagerParameters.getJobManagerMemoryMB(),kubernetesJobManagerParameters.getJobManagerCPU())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final ResourceRequirements resourceRequirements = KubernetesUtils.getResourceRequirements(kubernetesTaskManagerParameters.getTaskManagerMemoryMB(),kubernetesTaskManagerParameters.getTaskManagerCPU(),kubernetesTaskManagerParameters.getTaskManagerExternalResources())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Container container@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "decorateMainContainer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final ResourceRequirements resourceRequirements = KubernetesUtils.getResourceRequirements(kubernetesTaskManagerParameters.getTaskManagerMemoryMB(),kubernetesTaskManagerParameters.getTaskManagerCPU())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "decorateMainContainer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6->8 [style = bold, label=""];
1->8 [style = dashed, label="0"];
6->2 [style = dotted, label="true"];
1->0 [style = bold, label=""];
1->5 [style = dashed, label="0"];
5->0 [style = bold, label=""];
3->1 [style = bold, label=""];
4->5 [style = bold, label=""];
4->2 [style = dotted, label="true"];
8->7 [style = bold, label=""];
3->2 [style = dotted, label="true"];
}
