digraph {
17 [style = filled, label = "assertEquals(new MultiLine(Collections.singletonList(new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b8773,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b8778))),wkt.fromWKT(\"multilinestring ((3 1, 4 2))\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"linestring EMPTY\",wkt.toWKT(Line.EMPTY))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testBasicSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"LINESTRING EMPTY\",wkt.toWKT(Line.EMPTY))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b86f1,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b86f6),wkt.fromWKT(\"LINESTRING (3 1, 4 2)\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Line.EMPTY,wkt.fromWKT(\"LINESTRING EMPTY)\"))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(\"LINESTRING (3.0 1.0 5.0, 4.0 2.0 6.0)\",wkt.toWKT(new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b8708,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b870d,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b8712)))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(MultiLine.EMPTY,wkt.fromWKT(\"multilinestring EMPTY)\"))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(Line.EMPTY,wkt.fromWKT(\"linestring EMPTY)\"))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"linestring (3.0 1.0, 4.0 2.0)\",wkt.toWKT(new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b866a,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b866f)))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "WellKnownText wkt = new WellKnownText(true,new GeographyValidator(true))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testBasicSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertEquals(\"LINESTRING (3.0 1.0, 4.0 2.0)\",wkt.toWKT(new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b86e2,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b86e7)))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b871c,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b8721,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b8726),wkt.fromWKT(\"LINESTRING (3 1 6, 4 2 5)\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"multilinestring EMPTY\",wkt.toWKT(MultiLine.EMPTY))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(\"multilinestring ((3.0 1.0, 4.0 2.0))\",wkt.toWKT(new MultiLine(Collections.singletonList(new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b875f,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b8764)))))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testBasicSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(\"linestring (3.0 1.0 5.0, 4.0 2.0 6.0)\",wkt.toWKT(new Line(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b8690,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b8695,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13b869a)))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->13 [style = dashed, label="0"];
4->10 [style = bold, label=""];
7->11 [style = bold, label=""];
7->1 [style = bold, label=""];
7->17 [style = dashed, label="0"];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
4->13 [style = bold, label=""];
0->12 [style = dashed, label="0"];
15->16 [style = bold, label=""];
10->7 [style = bold, label=""];
11->2 [style = bold, label=""];
3->0 [style = bold, label=""];
6->4 [style = bold, label=""];
13->17 [style = bold, label=""];
5->10 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
17->15 [style = bold, label=""];
3->8 [style = dashed, label="0"];
5->7 [style = bold, label=""];
1->2 [style = bold, label=""];
4->5 [style = bold, label=""];
8->12 [style = bold, label=""];
2->8 [style = bold, label=""];
14->4 [style = bold, label=""];
}
