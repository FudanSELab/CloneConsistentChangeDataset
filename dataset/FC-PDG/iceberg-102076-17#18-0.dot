digraph {
0 [style = filled, label = "String json = SnapshotParser.toJson(expected)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(\"Timestamp should match\",expected.timestampMillis(),snapshot.timestampMillis())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<ManifestFile> manifests = ImmutableList.of(new GenericManifestFile(localInput(\"file:/tmp/manifest1.avro\"),0),new GenericManifestFile(localInput(\"file:/tmp/manifest2.avro\"),0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "manifestList.deleteOnExit()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(\"Parent ID should match\",expected.parentId(),snapshot.parentId())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Snapshot expected = new BaseSnapshot(ops.io(),id,parentId,System.currentTimeMillis(),DataOperations.REPLACE,ImmutableMap.of(\"files-added\",\"4\",\"files-deleted\",\"100\"),manifests)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "testJsonConversionWithManifestList['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testJsonConversionWithOperation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(\"Sequence number should default to 0 for v1\",0,snapshot.sequenceNumber())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "writer.addAll(manifests)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Snapshot expected = new BaseSnapshot(ops.io(),id,34,parentId,System.currentTimeMillis(),null,null,localInput(manifestList).location())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "long parentId = 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(\"Manifest list should match\",expected.manifestListLocation(),snapshot.manifestListLocation())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(\"Sequence number should default to 0\",expected.sequenceNumber(),snapshot.sequenceNumber())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Snapshot snapshot = SnapshotParser.fromJson(ops.io(),json)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertNull(\"Operation should be null\",snapshot.operation())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(\"Parent ID should match\",expected.parentId(),snapshot.parentId())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "File manifestList = temp.newFile(\"manifests\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Files should match\",expected.allManifests(),snapshot.allManifests())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Snapshot snapshot = SnapshotParser.fromJson(ops.io(),json)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testJsonConversionWithOperation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String json = SnapshotParser.toJson(expected)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(manifestList.delete())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "long id = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(\"Files should match in memory list\",inMemory.allManifests(),expected.allManifests())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Schema ID should match\",expected.schemaId(),snapshot.schemaId())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(\"Snapshot ID should match\",expected.snapshotId(),snapshot.snapshotId())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Snapshot expected = new BaseSnapshot(ops.io(),id,parentId,System.currentTimeMillis(),DataOperations.REPLACE,ImmutableMap.of(\"files-added\",\"4\",\"files-deleted\",\"100\"),3,manifests)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Assert.assertEquals(\"Files should match\",expected.allManifests(),snapshot.allManifests())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(\"Manifest list should match\",expected.manifestListLocation(),snapshot.manifestListLocation())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertNull(\"Summary should be null\",snapshot.summary())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(\"Snapshot ID should match\",expected.snapshotId(),snapshot.snapshotId())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(\"Timestamp should match\",expected.timestampMillis(),snapshot.timestampMillis())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Snapshot inMemory = new BaseSnapshot(ops.io(),id,parentId,expected.timestampMillis(),null,null,manifests)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28->3 [style = solid, label="expected"];
16->0 [style = bold, label=""];
12->21 [style = solid, label="parentId"];
5->6 [style = solid, label="manifests"];
5->21 [style = solid, label="manifests"];
0->8 [style = solid, label="json"];
7->10 [style = bold, label=""];
19->31 [style = bold, label=""];
13->21 [style = solid, label="id"];
3->31 [style = dashed, label="0"];
26->29 [style = bold, label=""];
2->3 [style = bold, label=""];
4->15 [style = bold, label=""];
25->3 [style = bold, label=""];
30->23 [style = bold, label=""];
12->10 [style = solid, label="parentId"];
16->0 [style = solid, label="expected"];
8->14 [style = bold, label=""];
4->18 [style = bold, label=""];
6->0 [style = bold, label=""];
6->0 [style = solid, label="expected"];
21->25 [style = bold, label=""];
33->12 [style = bold, label=""];
13->6 [style = solid, label="id"];
3->4 [style = bold, label=""];
5->32 [style = solid, label="manifests"];
24->30 [style = bold, label=""];
5->16 [style = bold, label=""];
12->13 [style = bold, label=""];
12->30 [style = solid, label="parentId"];
17->12 [style = bold, label=""];
28->21 [style = bold, label=""];
18->22 [style = bold, label=""];
6->16 [style = dashed, label="0"];
5->6 [style = bold, label=""];
4->20 [style = dashed, label="0"];
29->32 [style = bold, label=""];
23->19 [style = bold, label=""];
12->16 [style = solid, label="parentId"];
12->28 [style = solid, label="parentId"];
0->8 [style = bold, label=""];
13->5 [style = bold, label=""];
5->16 [style = solid, label="manifests"];
1->2 [style = bold, label=""];
9->12 [style = bold, label=""];
5->27 [style = bold, label=""];
22->24 [style = bold, label=""];
14->18 [style = dashed, label="0"];
31->20 [style = bold, label=""];
10->1 [style = bold, label=""];
13->28 [style = solid, label="id"];
14->11 [style = bold, label=""];
32->28 [style = bold, label=""];
13->16 [style = solid, label="id"];
3->4 [style = solid, label="json"];
11->7 [style = bold, label=""];
12->6 [style = solid, label="parentId"];
27->26 [style = bold, label=""];
}
