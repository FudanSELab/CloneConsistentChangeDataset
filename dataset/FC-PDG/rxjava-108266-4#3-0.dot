digraph {
6 [style = filled, label = "ts.assertNoErrors()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Completable.complete().andThen(Observable.just(\"foo\")).subscribe(to)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "to.assertNoErrors()@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "andThenSingle['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Completable.complete().andThen(Flowable.just(\"foo\")).subscribe(ts)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "to.assertValue(\"foo\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "andThenSingle['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "TestObserver<String> to = new TestObserver<String>()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "andThen['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "TestSubscriber<String> ts = new TestSubscriber<>(0)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "ts.request(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ts.assertValue(\"foo\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ts.assertComplete()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TestSubscriber<String> ts = new TestSubscriber<String>(0)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "to.assertComplete()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Completable.complete().andThen(Single.just(\"foo\")).toFlowable().subscribe(ts)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->14 [style = solid, label="to"];
7->8 [style = bold, label=""];
0->4 [style = bold, label=""];
8->0 [style = bold, label=""];
12->2 [style = bold, label=""];
2->10 [style = solid, label="ts"];
2->8 [style = dashed, label="0"];
2->0 [style = solid, label="ts"];
9->15 [style = bold, label=""];
0->10 [style = dashed, label="0"];
6->13 [style = bold, label=""];
14->9 [style = bold, label=""];
2->10 [style = bold, label=""];
3->5 [style = bold, label=""];
15->11 [style = bold, label=""];
10->4 [style = bold, label=""];
2->0 [style = bold, label=""];
13->14 [style = bold, label=""];
4->3 [style = bold, label=""];
1->2 [style = bold, label=""];
8->0 [style = solid, label="ts"];
5->6 [style = bold, label=""];
}
