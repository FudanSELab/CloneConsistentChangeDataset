digraph {
14 [style = filled, label = "getMultiNodeClusterModel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Set<AssignableReplica> assignableReplicas = generateReplicas(testCache)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "clusterModel.assign(replica.getResourceName(),replica.getPartitionName(),replica.getReplicaState(),assignableNode.getInstanceName())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testNormalUsage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "clusterModel.assign(\"NOT-EXIST\",replica.getPartitionName(),replica.getReplicaState(),assignableNode.getInstanceName())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "HelixException ex@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "instanceConfigMap.put(TEST_INSTANCE_ID_2,testInstanceConfig2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.fail(\"Assigning a non existing resource partition shall fail.\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "instanceConfigMap.put(TEST_INSTANCE_ID_1,testInstanceConfig1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertTrue(assignableNode.getAssignedPartitionsMap().get(replica.getResourceName()).contains(replica.getPartitionName()))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "clusterModel.assign(replica.getResourceName(),replica.getPartitionName(),replica.getReplicaState(),\"NON-EXIST\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "InstanceConfig testInstanceConfig1 = createMockInstanceConfig(TEST_INSTANCE_ID_1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Set<AssignableNode> assignableNodes = generateNodes(testCache)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "initialize()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "AssignableReplica replica = assignableReplicas.iterator().next()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "when(testCache.getInstanceConfigMap()).thenReturn(instanceConfigMap)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "AssignableNode assignableNode = assignableNodes.iterator().next()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "getMultiNodeClusterModel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return new ClusterModel(context,assignableReplicas,assignableNodes)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(clusterModel.getContext().getAssignmentForFaultZoneMap().get(assignableNode.getFaultZone()).get(replica.getResourceName()).contains(replica.getPartitionName()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "HelixException ex@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertTrue(clusterModel.getContext().getAssignmentForFaultZoneMap().values().stream().allMatch(null))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertFalse(clusterModel.getAssignableNodes().values().stream().anyMatch(null))@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ClusterModel clusterModel = new ClusterModel(context,assignableReplicas,assignableNodes)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.fail(\"Assigning a resource partition to a non existing instance shall fail.\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertFalse(clusterModel.getAssignableNodes().values().stream().anyMatch(null))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "clusterModel.release(replica.getResourceName(),replica.getPartitionName(),replica.getReplicaState(),assignableNode.getInstanceName())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "{}@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "InstanceConfig testInstanceConfig2 = createMockInstanceConfig(TEST_INSTANCE_ID_2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<String,InstanceConfig> instanceConfigMap = new HashMap<>()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ResourceControllerDataProvider testCache = setupClusterDataCacheForNearFullUtil()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "ClusterContext context = new ClusterContext(assignableReplicas,assignableNodes,Collections.emptyMap(),Collections.emptyMap())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ResourceControllerDataProvider testCache = setupClusterDataCache()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "{}@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertTrue(clusterModel.getContext().getAssignmentForFaultZoneMap().values().stream().allMatch(null))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12->6 [style = solid, label="assignableReplicas"];
16->12 [style = solid, label="testCache"];
22->30 [style = bold, label=""];
6->5 [style = dashed, label="0"];
2->4 [style = bold, label=""];
11->7 [style = solid, label="instanceConfigMap"];
12->5 [style = solid, label="assignableNodes"];
8->12 [style = bold, label=""];
20->18 [style = bold, label=""];
17->19 [style = bold, label=""];
4->11 [style = bold, label=""];
16->8 [style = solid, label="testCache"];
16->8 [style = bold, label=""];
3->6 [style = solid, label="assignableNodes"];
8->13 [style = dashed, label="0"];
13->12 [style = solid, label="testCache"];
11->9 [style = bold, label=""];
26->33 [style = bold, label=""];
14->0 [style = bold, label=""];
0->8 [style = bold, label=""];
15->22 [style = bold, label=""];
3->5 [style = solid, label="context"];
0->13 [style = bold, label=""];
3->5 [style = bold, label=""];
5->6 [style = solid, label="context"];
8->3 [style = solid, label="testCache"];
19->21 [style = bold, label=""];
13->3 [style = solid, label="testCache"];
3->5 [style = solid, label="assignableNodes"];
10->7 [style = bold, label=""];
8->2 [style = bold, label=""];
7->12 [style = bold, label=""];
12->5 [style = solid, label="assignableReplicas"];
21->26 [style = bold, label=""];
33->15 [style = bold, label=""];
12->3 [style = bold, label=""];
8->3 [style = solid, label="assignableReplicas"];
27->30 [style = bold, label=""];
5->20 [style = bold, label=""];
32->16 [style = bold, label=""];
30->28 [style = bold, label=""];
25->31 [style = bold, label=""];
18->17 [style = bold, label=""];
12->3 [style = solid, label="assignableNodes"];
24->25 [style = bold, label=""];
2->9 [style = solid, label="testInstanceConfig1"];
29->24 [style = bold, label=""];
4->10 [style = solid, label="testInstanceConfig2"];
13->2 [style = bold, label=""];
31->23 [style = bold, label=""];
8->12 [style = solid, label="testCache"];
28->25 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = solid, label="assignableReplicas"];
9->10 [style = bold, label=""];
1->0 [style = bold, label=""];
34->27 [style = bold, label=""];
}
