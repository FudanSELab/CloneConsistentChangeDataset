digraph {
27 [style = filled, label = "Record record@@@30@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "batch@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertEquals(TimestampType.NO_TIMESTAMP_TYPE,batch.timestampType())@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Args args@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MemoryRecords records = builder.build()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "builder.append(0L,\"c\".getBytes(),\"3\".getBytes())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,magic,args.compressionType,TimestampType.LOG_APPEND_TIME,0L,logAppendTime,RecordBatch.NO_PRODUCER_ID,RecordBatch.NO_PRODUCER_EPOCH,RecordBatch.NO_SEQUENCE,false,false,RecordBatch.NO_PARTITION_LEADER_EPOCH,buffer.capacity())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1L,info.shallowOffsetOfMaxTimestamp)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "builder.append(0L,\"a\".getBytes(),\"1\".getBytes())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ByteBuffer buffer = allocateBuffer(1024,args)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "assertEquals(TimestampType.LOG_APPEND_TIME,batch.timestampType())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "builder.append(1L,\"c\".getBytes(),\"3\".getBytes())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1L,info.shallowOffsetOfMaxTimestamp)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "byte magic = args.magic@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(-1,info.maxTimestamp)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(logAppendTime,info.maxTimestamp)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assumeAtLeastV2OrNotZstd(magic,args.compressionType)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "builder.append(0L,\"a\".getBytes(),\"1\".getBytes())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MemoryRecordsBuilder.RecordsInfo info = builder.info()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "args.compressionType != CompressionType.NONE@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "byte magic = RecordBatch.MAGIC_VALUE_V1@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "args.compressionType == CompressionType.NONE && magic == MAGIC_VALUE_V1@@@18@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "args.compressionType == CompressionType.NONE@@@14@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(0L,info.shallowOffsetOfMaxTimestamp)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "MemoryRecords records = builder.build()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(2L,info.maxTimestamp)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(2L,info.maxTimestamp)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "long logAppendTime = System.currentTimeMillis()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(logAppendTime,record.timestamp())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Args args@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(expectedTimestamps(i++(,record.timestamp())@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ByteBuffer buffer = allocateBuffer(1024,args)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "builder.append(0L,\"b\".getBytes(),\"2\".getBytes())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(TimestampType.CREATE_TIME,batch.timestampType())@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "buildUsingCreateTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "buildUsingLogAppendTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "magic == MAGIC_VALUE_V0@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "long(( expectedTimestamps = new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c96643@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "buildUsingCreateTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->14 [style = bold, label=""];
35->40 [style = dotted, label="false"];
7->39 [style = dashed, label="0"];
1->15 [style = solid, label="magic"];
30->21 [style = bold, label=""];
14->5 [style = dotted, label="true"];
1->22 [style = dashed, label="0"];
42->1 [style = bold, label=""];
3->4 [style = dotted, label="false"];
35->32 [style = dotted, label="true"];
10->11 [style = bold, label=""];
11->16 [style = bold, label=""];
30->21 [style = dotted, label="true"];
22->31 [style = bold, label=""];
35->32 [style = bold, label=""];
3->6 [style = bold, label=""];
39->8 [style = solid, label="args"];
14->29 [style = bold, label=""];
15->38 [style = dashed, label="0"];
37->17 [style = bold, label=""];
2->1 [style = bold, label=""];
3->6 [style = dotted, label="true"];
18->33 [style = dashed, label="0"];
0->26 [style = dotted, label="false"];
41->34 [style = bold, label=""];
42->39 [style = dotted, label="true"];
14->41 [style = dashed, label="0"];
14->5 [style = bold, label=""];
28->30 [style = bold, label=""];
22->30 [style = solid, label="magic"];
35->40 [style = bold, label=""];
7->8 [style = solid, label="args"];
7->31 [style = solid, label="args"];
1->9 [style = bold, label=""];
38->10 [style = bold, label=""];
31->12 [style = solid, label="buffer"];
8->12 [style = solid, label="logAppendTime"];
22->14 [style = solid, label="magic"];
11->36 [style = dashed, label="0"];
1->38 [style = solid, label="magic"];
14->27 [style = dotted, label="false"];
33->35 [style = bold, label=""];
14->24 [style = dotted, label="false"];
30->23 [style = bold, label=""];
0->26 [style = bold, label=""];
19->14 [style = bold, label=""];
29->14 [style = bold, label=""];
19->5 [style = solid, label="expectedTimestamps"];
0->28 [style = dotted, label="true"];
21->13 [style = bold, label=""];
8->38 [style = solid, label="buffer"];
16->37 [style = dashed, label="0"];
13->19 [style = bold, label=""];
12->15 [style = solid, label="logAppendTime"];
12->34 [style = solid, label="logAppendTime"];
20->5 [style = bold, label=""];
13->5 [style = solid, label="i"];
22->0 [style = solid, label="magic"];
5->34 [style = dashed, label="0"];
23->13 [style = bold, label=""];
40->41 [style = bold, label=""];
34->41 [style = bold, label=""];
14->20 [style = dotted, label="false"];
4->13 [style = bold, label=""];
16->17 [style = bold, label=""];
15->10 [style = bold, label=""];
3->4 [style = bold, label=""];
17->0 [style = bold, label=""];
18->3 [style = bold, label=""];
8->15 [style = solid, label="buffer"];
0->33 [style = bold, label=""];
36->37 [style = bold, label=""];
8->12 [style = bold, label=""];
12->15 [style = bold, label=""];
31->8 [style = bold, label=""];
10->36 [style = bold, label=""];
6->13 [style = bold, label=""];
12->38 [style = bold, label=""];
12->38 [style = solid, label="logAppendTime"];
30->23 [style = dotted, label="false"];
4->40 [style = dashed, label="0"];
14->29 [style = dotted, label="true"];
25->7 [style = dotted, label="true"];
6->35 [style = dashed, label="0"];
1->9 [style = solid, label="magic"];
0->28 [style = bold, label=""];
9->8 [style = bold, label=""];
22->12 [style = solid, label="magic"];
26->30 [style = bold, label=""];
25->22 [style = bold, label=""];
32->41 [style = bold, label=""];
12->33 [style = solid, label="logAppendTime"];
0->18 [style = bold, label=""];
14->20 [style = bold, label=""];
2->7 [style = dotted, label="true"];
}
