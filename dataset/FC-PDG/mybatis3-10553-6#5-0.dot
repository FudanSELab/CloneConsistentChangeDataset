digraph {
7 [style = filled, label = "Assert.assertNull(\"iterator2 should be null\",iterator2)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(0,usersCursor.getCurrentIndex())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assertions.assertEquals(0,usersCursor.getCurrentIndex())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "return@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testCursorMultipleIteratorCall['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(0,usersCursor.getCurrentIndex())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.fail(\"We should have failed since calling iterator several times is not allowed\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Assert.fail(\"Should have returned earlier\")@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(iterator.hasNext())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertTrue(iterator.hasNext())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Cursor<User> usersCursor = mapper.getAllUsers()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(-1,usersCursor.getCurrentIndex())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testCursorMultipleHasNextCall['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(\"User1\",user.getName())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assertions.fail(\"We should have failed since calling iterator several times is not allowed\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Iterator<User> iterator2 = null@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assertions.assertEquals(\"User1\",user.getName())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "IllegalStateException e@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testCursorMultipleIteratorCall['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assertions.assertNull(iterator2,\"iterator2 should be null\")@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Iterator<User> iterator = usersCursor.iterator()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assertions.fail(\"Should have returned earlier\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "iterator2.hasNext()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(iterator.hasNext())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "iterator2 = usersCursor.iterator()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "User user = iterator.next()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->20 [style = dashed, label="0"];
21->10 [style = bold, label=""];
22->25 [style = bold, label=""];
20->17 [style = bold, label=""];
2->19 [style = bold, label=""];
6->26 [style = bold, label=""];
19->12 [style = bold, label=""];
4->17 [style = dashed, label="0"];
7->12 [style = bold, label=""];
11->1 [style = bold, label=""];
9->4 [style = bold, label=""];
8->15 [style = dashed, label="0"];
8->3 [style = bold, label=""];
6->0 [style = solid, label="iterator"];
14->22 [style = dashed, label="0"];
0->4 [style = dashed, label="0"];
12->16 [style = bold, label=""];
15->16 [style = bold, label=""];
26->13 [style = bold, label=""];
4->0 [style = bold, label=""];
25->24 [style = bold, label=""];
0->14 [style = bold, label=""];
17->0 [style = bold, label=""];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
18->1 [style = bold, label=""];
23->21 [style = bold, label=""];
7->19 [style = dashed, label="0"];
2->7 [style = dotted, label="true"];
6->13 [style = bold, label=""];
2->12 [style = dotted, label="true"];
14->15 [style = bold, label=""];
14->8 [style = bold, label=""];
12->3 [style = bold, label=""];
13->9 [style = bold, label=""];
2->7 [style = bold, label=""];
1->10 [style = bold, label=""];
4->22 [style = bold, label=""];
3->16 [style = dashed, label="0"];
2->19 [style = dotted, label="true"];
13->20 [style = bold, label=""];
}
