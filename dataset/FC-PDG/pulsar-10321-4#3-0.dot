digraph {
3 [style = filled, label = "assertNull(creater.getFunctionConfig().getOutput())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "consoleOutputCapturer.start()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "CreateFunction creater = cmd.getCreater()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(consoleOutputCapturer.getStdout().contains(\"Created successfully\"))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "cmd.run(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@18d1eac)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ConsoleOutputCapturer consoleOutputCapturer = new ConsoleOutputCapturer()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String output = consoleOutputCapturer.getStderr()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "String inputTopicName = TEST_NAME + \"-input-topic\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testCreateWithoutOutputTopic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "cmd.run(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@18d1ee8)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "verify(functions,times(1)).createFunction(any(),anyString())@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCreateWithoutOutputTopic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertNull(creater.getFunctionConfig().getOutput())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(output.contains(\"output topic is not present\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "testCreateWithoutOutputTopicWithSkipFlag['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String inputTopicName = TEST_NAME + \"-input-topic\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "consoleOutputCapturer.stop()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->11 [style = bold, label=""];
5->3 [style = bold, label=""];
9->3 [style = bold, label=""];
12->14 [style = bold, label=""];
8->6 [style = solid, label="inputTopicName"];
15->12 [style = bold, label=""];
8->6 [style = bold, label=""];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
14->13 [style = bold, label=""];
4->11 [style = dashed, label="0"];
5->9 [style = bold, label=""];
16->2 [style = bold, label=""];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
13->16 [style = bold, label=""];
12->14 [style = solid, label="inputTopicName"];
2->5 [style = bold, label=""];
0->7 [style = bold, label=""];
6->2 [style = bold, label=""];
}
