digraph {
20 [style = filled, label = "aggregate(selector,doubleAgg)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i < 500000000@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "i = 0@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "++i@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testAggregateMissingColumn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final JavaScriptAggregatorBenchmark.LoopingDoubleColumnSelector selector = new JavaScriptAggregatorBenchmark.LoopingDoubleColumnSelector(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@93ee4e)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "i = 0@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String args@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int i = 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "t = System.currentTimeMillis()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "agg.aggregate()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "long t2 = System.currentTimeMillis() - t@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "i < 10000@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "t = System.currentTimeMillis()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "i < 500000000@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "System.out.println(StringUtils.format(\"JavaScript is %2.1fx slower\",(double)t1 / t2))@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "long t1 = System.currentTimeMillis() - t@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "JavaScriptAggregator agg = new JavaScriptAggregator(Collections.singletonList(null),JavaScriptAggregatorFactory.compileScript(script.get(\"fnAggregate\"),script.get(\"fnReset\"),script.get(\"fnCombine\")))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testAggregateMissingColumn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "aggregate(selector,doubleAgg)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "System.out.println(StringUtils.format(\"JavaScript aggregator == %,f: %d ms\",aggRhino.getFloat(),t1))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "i < 10000@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<String,String> script = scriptDoubleSum@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Map<String,String> script = SCRIPT_DOUBLE_SUM@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "aggregate(selector,aggRhino)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Map<String,String> script = scriptDoubleSum@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "DoubleSumAggregator doubleAgg = new DoubleSumAggregator(selector)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "++i@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "i = 0@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "JavaScriptAggregator aggRhino = new JavaScriptAggregator(Collections.singletonList(selector),JavaScriptAggregatorFactory.compileScript(script.get(\"fnAggregate\"),script.get(\"fnReset\"),script.get(\"fnCombine\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "aggregate(selector,aggRhino)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "long t@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "agg.aggregate()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final double val = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "++i@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "System.out.println(StringUtils.format(\"DoubleSum aggregator == %,f: %d ms\",doubleAgg.getFloat(),t2))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(val,agg.get())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "++i@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32->22 [style = bold, label=""];
40->37 [style = solid, label="selector"];
39->18 [style = dotted, label="true"];
12->9 [style = bold, label=""];
0->8 [style = solid, label="val"];
32->42 [style = dotted, label="true"];
10->8 [style = bold, label=""];
25->19 [style = bold, label=""];
9->5 [style = bold, label=""];
27->36 [style = solid, label="t1"];
26->17 [style = solid, label="i"];
17->44 [style = bold, label=""];
45->17 [style = bold, label=""];
30->36 [style = solid, label="t2"];
0->9 [style = solid, label="val"];
40->34 [style = solid, label="selector"];
7->1 [style = bold, label=""];
0->13 [style = solid, label="val"];
37->26 [style = bold, label=""];
19->39 [style = bold, label=""];
14->10 [style = bold, label=""];
27->31 [style = bold, label=""];
43->44 [style = solid, label="aggRhino"];
3->0 [style = bold, label=""];
19->39 [style = solid, label="i"];
23->35 [style = bold, label=""];
2->15 [style = dashed, label="0"];
20->18 [style = bold, label=""];
43->22 [style = solid, label="aggRhino"];
5->6 [style = bold, label=""];
29->32 [style = bold, label=""];
40->44 [style = solid, label="selector"];
0->5 [style = solid, label="val"];
42->32 [style = bold, label=""];
30->38 [style = solid, label="t2"];
0->7 [style = solid, label="val"];
35->34 [style = bold, label=""];
39->20 [style = bold, label=""];
39->20 [style = dotted, label="true"];
27->31 [style = solid, label="t1"];
22->42 [style = bold, label=""];
31->25 [style = bold, label=""];
0->12 [style = bold, label=""];
2->3 [style = bold, label=""];
0->10 [style = solid, label="val"];
32->27 [style = bold, label=""];
15->3 [style = bold, label=""];
17->23 [style = bold, label=""];
4->7 [style = bold, label=""];
35->24 [style = bold, label=""];
40->12 [style = bold, label=""];
37->20 [style = solid, label="doubleAgg"];
0->14 [style = solid, label="val"];
33->21 [style = dotted, label="true"];
18->39 [style = bold, label=""];
23->35 [style = solid, label="i"];
6->13 [style = bold, label=""];
17->28 [style = dotted, label="true"];
35->41 [style = dotted, label="true"];
28->17 [style = bold, label=""];
40->43 [style = solid, label="selector"];
12->43 [style = bold, label=""];
17->44 [style = dotted, label="true"];
32->22 [style = dotted, label="true"];
41->35 [style = bold, label=""];
16->15 [style = bold, label=""];
30->38 [style = bold, label=""];
0->37 [style = dashed, label="0"];
0->4 [style = solid, label="val"];
25->30 [style = solid, label="t"];
29->32 [style = solid, label="i"];
40->20 [style = solid, label="selector"];
38->36 [style = bold, label=""];
34->41 [style = bold, label=""];
43->37 [style = bold, label=""];
24->29 [style = bold, label=""];
37->34 [style = solid, label="doubleAgg"];
24->27 [style = solid, label="t"];
11->2 [style = bold, label=""];
39->30 [style = bold, label=""];
0->12 [style = solid, label="val"];
33->40 [style = bold, label=""];
44->28 [style = bold, label=""];
3->43 [style = dashed, label="0"];
35->34 [style = dotted, label="true"];
1->14 [style = bold, label=""];
26->45 [style = bold, label=""];
40->22 [style = solid, label="selector"];
6->44 [style = dashed, label="0"];
13->4 [style = bold, label=""];
}
