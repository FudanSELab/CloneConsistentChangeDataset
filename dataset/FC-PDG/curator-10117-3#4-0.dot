digraph {
28 [style = filled, label = "assertEquals(client.getZookeeperClient().getCurrentConnectionString(),initialClusterCS)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "newInstances.addAll(newCluster.getInstances())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CountDownLatch latch = setChangeWaiter(client)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "newCluster.start()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "client.getZookeeperClient().getZooKeeper().getTestable().injectSessionExpiration()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(ensembleProvider.getConnectionString(),initialClusterCS)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertTrue(reconnectLatch.await(2,TimeUnit.SECONDS))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertConfig(oldConfig,cluster.getInstances())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "client.start()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertConfig(newConfig,newInstances)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(),initialClusterCS)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(ensembleProvider.getConnectionString(),initialClusterCS)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final CountDownLatch reconnectLatch = new CountDownLatch(1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testAdd['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "QuorumVerifier newConfig = toQuorumVerifier(newConfigData)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertNotEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertTrue(timing.awaitLatch(latch))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertNotEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(ensembleProvider.getConnectionString(),initialClusterCS)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "byte(( newConfigData = client.getConfig().forEnsemble()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testAddWithoutEnsembleTracker['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(((CuratorFrameworkImpl)client).getEnsembleTracker(),null)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(),initialClusterCS)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertConfig(newConfig,newInstances)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(client.getZookeeperClient().getCurrentConnectionString(),initialClusterCS)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final String initialClusterCS = cluster.getConnectString()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(reconnectLatch.await(2,TimeUnit.SECONDS))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertEquals(ensembleProvider.getConnectionString(),initialClusterCS)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(((CuratorFrameworkImpl)client).getEnsembleTracker(),null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testAddWithoutEnsembleTracker['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "client.getConnectionStateListenable().addListener(null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertConfig(oldConfig,cluster.getInstances())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "newConfigData = client.getConfig().forEnsemble()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39->37 [style = bold, label=""];
38->5 [style = bold, label=""];
8->16 [style = bold, label=""];
8->33 [style = bold, label=""];
32->22 [style = bold, label=""];
33->35 [style = bold, label=""];
10->20 [style = bold, label=""];
20->17 [style = bold, label=""];
24->8 [style = solid, label="newInstances"];
16->11 [style = bold, label=""];
3->33 [style = solid, label="initialClusterCS"];
9->0 [style = bold, label=""];
24->2 [style = bold, label=""];
27->14 [style = bold, label=""];
29->30 [style = bold, label=""];
15->25 [style = bold, label=""];
6->18 [style = bold, label=""];
1->15 [style = bold, label=""];
30->27 [style = bold, label=""];
34->18 [style = bold, label=""];
3->28 [style = solid, label="initialClusterCS"];
3->17 [style = solid, label="initialClusterCS"];
28->9 [style = bold, label=""];
3->6 [style = bold, label=""];
3->30 [style = solid, label="initialClusterCS"];
25->32 [style = solid, label="latch"];
1->5 [style = solid, label="latch"];
1->15 [style = solid, label="oldConfig"];
6->34 [style = dashed, label="0"];
12->24 [style = bold, label=""];
12->35 [style = solid, label="newConfig"];
37->18 [style = solid, label="oldConfig"];
10->29 [style = dashed, label="0"];
4->26 [style = dashed, label="0"];
7->24 [style = solid, label="newConfig"];
22->12 [style = solid, label="newConfigData"];
36->39 [style = bold, label=""];
3->20 [style = solid, label="initialClusterCS"];
12->4 [style = solid, label="newConfig"];
3->34 [style = bold, label=""];
23->29 [style = bold, label=""];
35->28 [style = bold, label=""];
5->21 [style = bold, label=""];
14->26 [style = bold, label=""];
7->22 [style = bold, label=""];
12->8 [style = solid, label="newConfig"];
13->28 [style = dashed, label="0"];
0->23 [style = bold, label=""];
7->2 [style = solid, label="newConfig"];
18->1 [style = bold, label=""];
17->14 [style = bold, label=""];
25->7 [style = solid, label="latch"];
22->12 [style = bold, label=""];
11->13 [style = bold, label=""];
21->32 [style = bold, label=""];
20->30 [style = dashed, label="0"];
23->10 [style = bold, label=""];
37->18 [style = bold, label=""];
3->13 [style = solid, label="initialClusterCS"];
21->7 [style = bold, label=""];
7->32 [style = dashed, label="0"];
25->5 [style = bold, label=""];
16->2 [style = dashed, label="0"];
13->9 [style = bold, label=""];
12->26 [style = solid, label="newConfig"];
21->7 [style = solid, label="newConfigData"];
16->33 [style = dashed, label="0"];
31->3 [style = bold, label=""];
3->16 [style = solid, label="initialClusterCS"];
3->27 [style = solid, label="initialClusterCS"];
19->3 [style = bold, label=""];
1->25 [style = bold, label=""];
22->24 [style = solid, label="newInstances"];
12->11 [style = solid, label="newConfig"];
11->35 [style = dashed, label="0"];
2->8 [style = bold, label=""];
14->4 [style = bold, label=""];
25->38 [style = bold, label=""];
17->27 [style = dashed, label="0"];
}
