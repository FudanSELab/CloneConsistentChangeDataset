digraph {
3 [style = filled, label = "Person person = personMapper.getWithoutComplex(2l)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertNotNull(\"parent must not be null\",parent)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(\"John\",parent.getFirstName())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testWithComplex3['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assertions.assertEquals(\"Christian\",person.getFirstName())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assertions.assertEquals(\"Poitras\",person.getLastName())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertEquals(\"Christian\",person.getFirstName())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertNotNull(\"person must not be null\",person)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Poitras\",person.getLastName())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Person parent = person.getParent()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testWithoutComplex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assertions.assertEquals(\"Smith\",parent.getLastName())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Assertions.assertEquals(\"John\",parent.getFirstName())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assertions.assertNotNull(person,\"person must not be null\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "PersonMapper personMapper = sqlSession.getMapper()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Person person = personMapper.getWithComplex3(2l)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testWithoutComplex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(\"Smith\",parent.getLastName())@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assertions.assertNotNull(parent,\"parent must not be null\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
4->1 [style = solid, label="parent"];
9->10 [style = dashed, label="0"];
3->17 [style = dashed, label="0"];
3->15 [style = solid, label="person"];
4->16 [style = solid, label="parent"];
14->10 [style = bold, label=""];
0->15 [style = dashed, label="0"];
11->12 [style = bold, label=""];
3->15 [style = bold, label=""];
6->14 [style = dashed, label="0"];
5->17 [style = bold, label=""];
2->4 [style = bold, label=""];
3->0 [style = bold, label=""];
2->12 [style = dashed, label="0"];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
17->0 [style = bold, label=""];
15->11 [style = bold, label=""];
3->0 [style = solid, label="person"];
8->2 [style = bold, label=""];
12->4 [style = bold, label=""];
17->0 [style = solid, label="person"];
1->16 [style = dashed, label="0"];
18->5 [style = bold, label=""];
0->8 [style = bold, label=""];
13->5 [style = bold, label=""];
16->14 [style = bold, label=""];
4->1 [style = bold, label=""];
6->9 [style = bold, label=""];
8->11 [style = dashed, label="0"];
4->16 [style = bold, label=""];
}
