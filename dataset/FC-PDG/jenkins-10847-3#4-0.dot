digraph {
10 [style = filled, label = "mockStatic()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(view.getItems()).thenReturn(Arrays.asList(i))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "createMockAncestors(req,createAncestor(j,\"../../..\"),createAncestor(parent,\"../..\"),createAncestor(view,\".\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "View view = mock()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(view.getItems()).thenReturn(Collections.emptyList())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Jenkins j = createMockJenkins()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\",\"parent/job/i/\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "when(view.getOwner().getItemGroup()).thenReturn(parent)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "when(view.getOwnerItemGroup()).thenReturn(parent)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testGetRelativeLinkTo_JobContainedInViewWithinItemGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(\"job/i/\",result)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "StaplerRequest req = createMockRequest(contextPath)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "TopLevelItemAndItemGroup parent = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testGetRelativeLinkTo_JobNotContainedInView['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String contextPath = \"/jenkins\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(Stapler.getCurrentRequest()).thenReturn(req)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testGetRelativeLinkTo_JobNotContainedInView['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "String contextPath = \"/jenkins\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ItemGroup parent = j@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "when(parent.getShortUrl()).thenReturn(\"parent/\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->19 [style = dashed, label="0"];
22->19 [style = solid, label="i"];
12->5 [style = solid, label="contextPath"];
22->19 [style = bold, label=""];
14->7 [style = bold, label=""];
8->16 [style = dashed, label="0"];
3->11 [style = bold, label=""];
15->9 [style = bold, label=""];
6->18 [style = solid, label="view"];
9->7 [style = solid, label="j"];
18->22 [style = bold, label=""];
13->17 [style = dashed, label="0"];
5->18 [style = solid, label="req"];
6->14 [style = dashed, label="0"];
13->17 [style = solid, label="result"];
7->18 [style = bold, label=""];
13->17 [style = bold, label=""];
9->16 [style = bold, label=""];
16->18 [style = solid, label="parent"];
0->3 [style = bold, label=""];
5->1 [style = solid, label="req"];
8->0 [style = solid, label="parent"];
5->10 [style = bold, label=""];
1->6 [style = bold, label=""];
1->14 [style = bold, label=""];
9->8 [style = solid, label="j"];
19->13 [style = bold, label=""];
1->7 [style = solid, label="view"];
16->22 [style = solid, label="parent"];
8->14 [style = solid, label="parent"];
10->1 [style = bold, label=""];
0->11 [style = solid, label="i"];
16->7 [style = solid, label="parent"];
12->5 [style = bold, label=""];
8->2 [style = bold, label=""];
9->18 [style = solid, label="j"];
2->12 [style = solid, label="contextPath"];
4->9 [style = bold, label=""];
11->13 [style = solid, label="result"];
7->0 [style = bold, label=""];
8->6 [style = solid, label="parent"];
11->13 [style = bold, label=""];
16->20 [style = bold, label=""];
12->10 [style = solid, label="req"];
22->13 [style = solid, label="i"];
9->8 [style = bold, label=""];
12->7 [style = solid, label="req"];
6->7 [style = bold, label=""];
21->9 [style = bold, label=""];
0->22 [style = dashed, label="0"];
20->12 [style = bold, label=""];
2->12 [style = bold, label=""];
7->18 [style = dashed, label="0"];
}
