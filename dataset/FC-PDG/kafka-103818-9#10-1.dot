digraph {
6 [style = filled, label = "testTimeoutWithoutMetadata['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testPropagatedMetadataFetchException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TestUtils.assertFutureError(future,)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "env.kafkaClient().setNodeApiVersions(NodeApiVersions.create())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Cluster cluster = mockCluster(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testTimeoutWithoutMetadata['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "env.kafkaClient().prepareResponse(prepareCreateTopicsResponse(\"myTopic\",Errors.NONE))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "env.kafkaClient().prepareResponse(new CreateTopicsResponse(Collections.singletonMap(\"myTopic\",new ApiError(Errors.NONE,\"\"))))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "env.kafkaClient().createPendingAuthenticationError(cluster.nodeById(0),TimeUnit.DAYS.toMillis(1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "KafkaFuture<Void> future = env.adminClient().createTopics(Collections.singleton(new NewTopic(\"myTopic\",Collections.singletonMap(0,asList(0,1,2)))),new CreateTopicsOptions().timeoutMs(1000)).all()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "env.kafkaClient().setNodeApiVersions(NodeApiVersions.create())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->5 [style = dashed, label="0"];
3->9 [style = bold, label=""];
4->8 [style = bold, label=""];
5->2 [style = bold, label=""];
2->3 [style = solid, label="future"];
6->0 [style = bold, label=""];
3->9 [style = solid, label="future"];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
7->4 [style = bold, label=""];
8->2 [style = bold, label=""];
3->9 [style = dashed, label="0"];
0->4 [style = bold, label=""];
10->7 [style = bold, label=""];
2->3 [style = bold, label=""];
0->5 [style = bold, label=""];
}
