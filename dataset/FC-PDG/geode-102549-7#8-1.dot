digraph {
24 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@108cbe,2,3)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertThat(cos.isEmpty()).isTrue()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "cos.write(9)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final CompositeOutputStream cos = new CompositeOutputStream(streamOne,streamTwo)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "cos.removeOutputStream(streamTwo)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertThat(cos.isEmpty()).isFalse()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(cos.size()).isEqualTo(0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "inOrderStreams.verify(streamOne,times(2)).flush()@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final OutputStream streamTwo = mock(,\"streamTwo\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(3)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@108d44,2,3)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(2)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "InOrder inOrderStreams = inOrder(streamOne)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "cos.flush()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(9)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@108d57)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "verifyNoMoreInteractions(streamTwo)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(9)@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(cos.size()).isEqualTo(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(9)@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testRemoveOutputStreamWithTwoStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final CompositeOutputStream cos = new CompositeOutputStream()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "InOrder inOrderStreams = inOrder(streamOne,streamTwo)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).close()@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "final OutputStream streamOne = mock(,\"streamOne\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@108c87,2,3)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testAddTwoOutputStreamsWhenEmpty['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "testAddTwoOutputStreamsWhenEmpty['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "inOrderStreams.verify(streamOne,times(2)).flush()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertThat(cos.isEmpty()).isFalse()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(0)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(4)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).close()@@@29@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(2)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "cos.addOutputStream(streamOne)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(1)@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@108cd7,0,2)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "cos.close()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "cos.addOutputStream(streamTwo)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(cos.size()).isEqualTo(2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
35->31 [style = bold, label=""];
4->32 [style = solid, label="streamTwo"];
32->22 [style = bold, label=""];
16->0 [style = bold, label=""];
2->5 [style = bold, label=""];
12->15 [style = solid, label="streamOne"];
37->36 [style = bold, label=""];
27->14 [style = bold, label=""];
38->28 [style = bold, label=""];
8->18 [style = bold, label=""];
19->20 [style = bold, label=""];
16->24 [style = bold, label=""];
23->26 [style = bold, label=""];
3->15 [style = bold, label=""];
4->2 [style = bold, label=""];
15->19 [style = bold, label=""];
4->19 [style = solid, label="streamTwo"];
12->22 [style = solid, label="streamOne"];
31->7 [style = bold, label=""];
20->21 [style = bold, label=""];
4->34 [style = solid, label="streamTwo"];
7->33 [style = bold, label=""];
7->22 [style = bold, label=""];
36->30 [style = bold, label=""];
29->12 [style = bold, label=""];
12->34 [style = solid, label="streamOne"];
10->16 [style = bold, label=""];
12->4 [style = bold, label=""];
14->23 [style = bold, label=""];
18->6 [style = bold, label=""];
17->14 [style = bold, label=""];
25->12 [style = bold, label=""];
13->7 [style = bold, label=""];
34->37 [style = bold, label=""];
6->27 [style = dashed, label="0"];
6->11 [style = bold, label=""];
28->8 [style = bold, label=""];
0->8 [style = bold, label=""];
2->34 [style = dashed, label="0"];
30->39 [style = bold, label=""];
12->16 [style = solid, label="streamOne"];
11->17 [style = bold, label=""];
33->32 [style = bold, label=""];
0->24 [style = dashed, label="0"];
9->12 [style = bold, label=""];
22->1 [style = bold, label=""];
21->35 [style = bold, label=""];
39->20 [style = bold, label=""];
1->10 [style = bold, label=""];
24->27 [style = bold, label=""];
4->16 [style = solid, label="streamTwo"];
4->30 [style = solid, label="streamTwo"];
4->34 [style = bold, label=""];
10->38 [style = bold, label=""];
21->13 [style = bold, label=""];
}
