digraph {
19 [style = filled, label = "transportService.acceptIncomingRequests()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertFalse(service.isRemoteNodeConnected(\"cluster_1\",c1N1Node))@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "builder.putList(\"search.remote.cluster_2.seeds\",c2N1Node.getAddress().toString())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testRemoteNodeRoles['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "builder.putList(\"search.remote.cluster_1.seeds\",c1N1Node.getAddress().toString())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "final Settings.Builder builder = Settings.builder()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(service.isRemoteNodeConnected(\"cluster_2\",c2N1Node))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "service.initializeRemoteClusters()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "builder.putList(\"cluster.remote.cluster_1.seeds\",c1N1Node.getAddress().toString())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "final DiscoveryNode c1N2Node = c1N2.getLocalDiscoNode()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(service.isRemoteClusterRegistered(\"cluster_1\"))@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final List<DiscoveryNode> knownNodes = new CopyOnWriteArrayList<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Settings data = Settings.builder().put(\"node.master\",false).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(service.isRemoteNodeConnected(\"cluster_1\",c1N2Node))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(0,transportService.getConnectionManager().size())@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(0,transportService.getConnectionManager().size())@@@42@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(service.isCrossClusterSearchEnabled())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "builder.putList(\"cluster.remote.cluster_2.seeds\",c2N1Node.getAddress().toString())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "knownNodes.add(c1N2Node)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final CountDownLatch firstLatch = new CountDownLatch(1)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "builder.putList(\"search.remote.cluster_2.seeds\",c2N1Node.getAddress().toString())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "secondLatch.await()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final DiscoveryNode c2N1Node = c2N1.getLocalDiscoNode()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final Settings settings = Settings.EMPTY@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Collections.shuffle(knownNodes,random())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final DiscoveryNode c2N2Node = c2N2.getLocalDiscoNode()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "transportService.start()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final Settings dedicatedMaster = Settings.builder().put(\"node.data\",false).put(\"node.ingest\",\"false\").build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final Settings gateway = Settings.builder().put(\"node.attr.gateway\",true).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(service.isRemoteClusterRegistered(\"cluster_2\"))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "knownNodes.add(c2N1Node)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "builder.putList(\"search.remote.cluster_1.seeds\",c1N1Node.getAddress().toString())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final Settings settings = Settings.builder().put(\"search.remote.node.attr\",\"gateway\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Collections.shuffle(knownNodes,random())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "service.updateRemoteCluster(\"cluster_2\",Arrays.asList(c2N1Node.getAddress().toString(),c2N2Node.getAddress().toString()),null,connectionListener(secondLatch))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testRemoteNodeRoles['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "assertTrue(service.isRemoteNodeConnected(\"cluster_2\",c2N2Node))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final CountDownLatch secondLatch = new CountDownLatch(1)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final DiscoveryNode c1N1Node = c1N1.getLocalDiscoNode()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "firstLatch.await()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testRemoteNodeAttribute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertFalse(service.isCrossClusterSearchEnabled())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertFalse(service.isCrossClusterSearchEnabled())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "service.updateRemoteCluster(\"cluster_1\",Arrays.asList(c1N1Node.getAddress().toString(),c1N2Node.getAddress().toString()),null,connectionListener(firstLatch))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "knownNodes.add(c2N2Node)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "knownNodes.add(c1N1Node)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->32 [style = bold, label=""];
16->15 [style = bold, label=""];
0->16 [style = bold, label=""];
35->27 [style = bold, label=""];
16->35 [style = solid, label="c2N1Node"];
1->8 [style = bold, label=""];
15->27 [style = solid, label="c2N2Node"];
10->31 [style = bold, label=""];
45->23 [style = bold, label=""];
24->21 [style = solid, label="c1N2Node"];
15->13 [style = solid, label="c2N2Node"];
18->10 [style = solid, label="firstLatch"];
15->21 [style = bold, label=""];
24->0 [style = bold, label=""];
25->36 [style = bold, label=""];
0->7 [style = solid, label="c2N1Node"];
31->5 [style = bold, label=""];
24->21 [style = solid, label="c1N1Node"];
42->39 [style = bold, label=""];
38->9 [style = bold, label=""];
10->31 [style = solid, label="firstLatch"];
37->29 [style = bold, label=""];
40->19 [style = bold, label=""];
39->24 [style = bold, label=""];
9->20 [style = bold, label=""];
17->30 [style = bold, label=""];
30->9 [style = bold, label=""];
13->40 [style = bold, label=""];
25->43 [style = bold, label=""];
29->23 [style = bold, label=""];
5->14 [style = bold, label=""];
0->7 [style = solid, label="c1N2Node"];
0->8 [style = solid, label="c2N1Node"];
30->43 [style = dashed, label="0"];
25->17 [style = bold, label=""];
8->35 [style = bold, label=""];
24->4 [style = solid, label="c1N1Node"];
16->35 [style = solid, label="c2N2Node"];
23->3 [style = solid, label="knownNodes"];
26->22 [style = bold, label=""];
5->14 [style = solid, label="secondLatch"];
24->4 [style = solid, label="c1N2Node"];
29->45 [style = dashed, label="0"];
2->13 [style = bold, label=""];
23->42 [style = bold, label=""];
17->25 [style = dashed, label="0"];
20->18 [style = bold, label=""];
14->26 [style = bold, label=""];
14->26 [style = solid, label="secondLatch"];
11->34 [style = bold, label=""];
34->24 [style = bold, label=""];
12->29 [style = bold, label=""];
39->32 [style = solid, label="c1N1Node"];
13->3 [style = bold, label=""];
3->19 [style = bold, label=""];
18->10 [style = bold, label=""];
23->13 [style = solid, label="knownNodes"];
7->2 [style = bold, label=""];
28->25 [style = bold, label=""];
21->7 [style = bold, label=""];
16->2 [style = solid, label="c2N1Node"];
16->2 [style = solid, label="c2N2Node"];
41->45 [style = bold, label=""];
4->1 [style = bold, label=""];
32->4 [style = bold, label=""];
27->33 [style = bold, label=""];
19->28 [style = bold, label=""];
36->38 [style = bold, label=""];
0->1 [style = solid, label="c1N2Node"];
23->11 [style = bold, label=""];
11->42 [style = dashed, label="0"];
17->36 [style = dashed, label="0"];
43->44 [style = bold, label=""];
44->9 [style = bold, label=""];
22->6 [style = bold, label=""];
39->15 [style = solid, label="c1N1Node"];
30->38 [style = dashed, label="0"];
}
