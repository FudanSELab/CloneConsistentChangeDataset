digraph {
1 [style = filled, label = "assertEquals(0,EnumerableDefaults.take(Linq4j.asEnumerable(depts),-2).toList().size())@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testTakeEnumerableZeroOrNegativeSize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "testTakeEnumerableZeroOrNegativeSize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(0,QueryableDefaults.take(Linq4j.asEnumerable(depts).asQueryable(),-2).toList().size())@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testTakeQueryableZeroOrNegativeSize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(0,QueryableDefaults.take(Linq4j.asEnumerable(depts).asQueryable(),0).toList().size())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(0,EnumerableDefaults.take(Linq4j.asEnumerable(depts),0).toList().size())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->5 [style = dashed, label="0"];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
4->5 [style = bold, label=""];
1->6 [style = dashed, label="0"];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
}
