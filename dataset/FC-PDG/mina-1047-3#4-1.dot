digraph {
21 [style = filled, label = "ioBuffer.position(2)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals('0' + i,ioBuffer.get())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(i,ioBuffer.position())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "ioBuffer.position(3)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "ioBuffer.position(5)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals('7',ioBuffer.get())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ioBuffer.position(6)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "bb1.flip()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i--@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ByteBuffer bb2 = ByteBuffer.allocate(4)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "bb3.put(\"789\".getBytes())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ioBuffer.get()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "ioBuffer.position(i)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "bb2.flip()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int i = 0@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testPositionBuffer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "i < ioBuffer.limit()@@@24@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals('2',ioBuffer.get())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "IoBuffer ioBuffer = IoBuffer.wrap(bb1,bb2,bb3)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "ioBuffer.position(7)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "int i = ioBuffer.limit() - 1@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "i++@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals('3',ioBuffer.get())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "bb3.flip()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "IoBuffer ioBuffer = new IoBuffer(bb1,bb2,bb3)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "bb2.put(\"3456\".getBytes())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals('6',ioBuffer.get())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals('0' + i,ioBuffer.get())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ByteBuffer bb3 = ByteBuffer.allocate(4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals('5',ioBuffer.get())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "bb1.put(\"012\".getBytes())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testPositionBuffer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testPositionCurrentBuffer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "i >= 0@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "ioBuffer.position(i)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ByteBuffer bb1 = ByteBuffer.allocate(4)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->32 [style = bold, label=""];
22->31 [style = solid, label="i"];
14->3 [style = bold, label=""];
8->19 [style = dashed, label="0"];
18->3 [style = bold, label=""];
25->28 [style = bold, label=""];
30->22 [style = bold, label=""];
9->35 [style = dotted, label="true"];
9->11 [style = bold, label=""];
33->20 [style = bold, label=""];
16->10 [style = bold, label=""];
10->35 [style = solid, label="i"];
9->11 [style = dotted, label="true"];
29->31 [style = bold, label=""];
26->34 [style = bold, label=""];
35->19 [style = bold, label=""];
23->26 [style = bold, label=""];
22->29 [style = bold, label=""];
32->27 [style = bold, label=""];
3->15 [style = bold, label=""];
24->29 [style = bold, label=""];
24->30 [style = solid, label="i"];
34->10 [style = bold, label=""];
20->25 [style = bold, label=""];
24->22 [style = solid, label="i"];
9->35 [style = bold, label=""];
7->9 [style = solid, label="i"];
8->7 [style = bold, label=""];
10->11 [style = solid, label="i"];
7->19 [style = solid, label="i"];
22->30 [style = solid, label="i"];
9->8 [style = dotted, label="true"];
5->16 [style = bold, label=""];
7->9 [style = bold, label=""];
3->16 [style = solid, label="bb1"];
12->13 [style = bold, label=""];
29->22 [style = dotted, label="true"];
28->21 [style = bold, label=""];
9->19 [style = dotted, label="true"];
6->16 [style = dashed, label="0"];
5->6 [style = bold, label=""];
7->35 [style = solid, label="i"];
12->6 [style = solid, label="bb2"];
0->1 [style = bold, label=""];
1->16 [style = solid, label="bb3"];
6->10 [style = bold, label=""];
24->31 [style = solid, label="i"];
31->30 [style = bold, label=""];
15->4 [style = bold, label=""];
29->30 [style = dotted, label="true"];
17->3 [style = bold, label=""];
4->12 [style = bold, label=""];
11->8 [style = bold, label=""];
13->0 [style = bold, label=""];
10->9 [style = solid, label="i"];
22->29 [style = solid, label="i"];
1->2 [style = bold, label=""];
10->9 [style = bold, label=""];
27->33 [style = bold, label=""];
24->29 [style = solid, label="i"];
1->6 [style = solid, label="bb3"];
12->16 [style = solid, label="bb2"];
9->7 [style = dotted, label="true"];
29->31 [style = dotted, label="true"];
10->7 [style = solid, label="i"];
19->7 [style = bold, label=""];
9->24 [style = bold, label=""];
7->11 [style = solid, label="i"];
10->19 [style = solid, label="i"];
2->5 [style = bold, label=""];
11->35 [style = dashed, label="0"];
21->23 [style = bold, label=""];
3->6 [style = solid, label="bb1"];
}
