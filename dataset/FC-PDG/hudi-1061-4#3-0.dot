digraph {
12 [style = filled, label = ".getSimpleName().equals(annotation.annotationType().getSimpleName())@@@12@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "boolean foundFileSplitsAnnotation = false@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testHoodieParquetInputFormatAnnotation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = ".getSimpleName().equals(annotation.annotationType().getSimpleName())@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertTrue(foundFileSplitsAnnotation)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "\"UseRecordReaderFromInputFormat\".equals(annotation.annotationType().getSimpleName())@@@12@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "Annotation(( annotations = .getAnnotations()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "found = true@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "\"UseFileSplitsFromInputFormat\".equals(annotation.annotationType().getSimpleName())@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(foundRecordReaderAnnotation)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(found)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "boolean foundRecordReaderAnnotation = false@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "foundFileSplitsAnnotation = true@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(.isAnnotationPresent())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHoodieParquetRealtimeInputFormatAnnotations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "\"UseFileSplitsFromInputFormat\".equals(annotation.annotationType().getSimpleName())@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertTrue(.isAnnotationPresent())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "boolean found = false@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testHoodieParquetRealtimeInputFormatAnnotations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "foundRecordReaderAnnotation = true@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Annotation(( annotations = .getAnnotations()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(.isAnnotationPresent())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
4->10 [style = bold, label=""];
5->10 [style = bold, label=""];
4->14 [style = bold, label=""];
16->18 [style = bold, label=""];
9->0 [style = bold, label=""];
12->5 [style = bold, label=""];
4->17 [style = dashed, label="0"];
19->20 [style = bold, label=""];
21->15 [style = bold, label=""];
3->11 [style = bold, label=""];
18->19 [style = bold, label=""];
7->6 [style = solid, label="foundRecordReaderAnnotation"];
3->4 [style = dotted, label="true"];
11->5 [style = dotted, label="true"];
21->17 [style = dotted, label="true"];
5->14 [style = bold, label=""];
11->12 [style = dashed, label="0"];
0->10 [style = solid, label="foundFileSplitsAnnotation"];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
7->3 [style = bold, label=""];
0->7 [style = bold, label=""];
7->14 [style = bold, label=""];
20->21 [style = bold, label=""];
14->12 [style = dotted, label="false"];
11->5 [style = bold, label=""];
12->10 [style = bold, label=""];
11->3 [style = bold, label=""];
12->5 [style = dotted, label="true"];
11->10 [style = bold, label=""];
17->15 [style = solid, label="found"];
14->12 [style = bold, label=""];
12->14 [style = bold, label=""];
8->9 [style = bold, label=""];
13->2 [style = bold, label=""];
17->15 [style = bold, label=""];
2->18 [style = dashed, label="0"];
1->2 [style = bold, label=""];
5->6 [style = solid, label="foundRecordReaderAnnotation"];
3->14 [style = dashed, label="0"];
4->11 [style = bold, label=""];
14->4 [style = dotted, label="true"];
21->17 [style = bold, label=""];
17->21 [style = bold, label=""];
4->10 [style = solid, label="foundFileSplitsAnnotation"];
20->15 [style = solid, label="found"];
2->8 [style = bold, label=""];
14->4 [style = bold, label=""];
}
