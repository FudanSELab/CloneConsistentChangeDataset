digraph {
26 [style = filled, label = "Assert.assertTrue(entrys1.getEvents().size() == bufferSize / 2)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "eventStore.rollback()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(first,entrys2.getPositionRange().getStart())@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Events<Event> entrys2 = eventStore.tryGet(entrys1.getPositionRange().getEnd(),bufferSize)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(first,CanalEventUtils.createPosition(buildEvent(\"1\",1L,1L)))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "i < bufferSize@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "System.out.println(\"first get size : \" + entrys1.getEvents().size())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testRollback['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "sleep(100L)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertTrue(entrys.size() == bufferSize)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sleep(50L)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Position first = eventStore.getFirstPosition()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "MemoryEventStoreWithBuffer eventStore = new MemoryEventStoreWithBuffer()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "eventStore.setBatchMode(BatchMode.MEMSIZE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "System.out.println(\"second get size : \" + entrys2.getEvents().size())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "List<Event> entrys = new ArrayList<>(entrys2.getEvents())@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "first = eventStore.getFirstPosition()@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "eventStore.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "lastest = eventStore.getLatestPosition()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Events<Event> entrys1 = eventStore.tryGet(first,bufferSize)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(lastest,CanalEventUtils.createPosition(buildEvent(\"1\",1L,1L + bufferSize / 2 - 1)))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "System.out.println(\"after rollback get size : \" + entrys2.getEvents().size())@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "eventStore.stop()@@@48@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testRollback['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "i++@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "eventStore.rollback()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testRollback['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(lastest,CanalEventUtils.createPosition(entrys.get(bufferSize - 1)))@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "i < bufferSize / 2@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "boolean result = eventStore.tryPut(buildEvent(\"1\",1L,1L + i))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Position lastest = eventStore.getLatestPosition()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int i = bufferSize / 2@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(result)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(lastest,entrys2.getPositionRange().getEnd())@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(result)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "boolean result = eventStore.tryPut(buildEvent(\"1\",1L,1L + i))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "eventStore.setBufferSize(bufferSize)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "System.out.println(\"start get\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(first,CanalEventUtils.createPosition(entrys.get(0)))@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "sleep(100L)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "entrys2 = eventStore.tryGet(entrys1.getPositionRange().getEnd(),bufferSize)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int bufferSize = 16@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<Event> entrys = new ArrayList<Event>(entrys2.getEvents())@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertTrue(entrys2.getEvents().size() == bufferSize)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "entrys1 = eventStore.tryGet(first,bufferSize)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "System.out.println(\"after rollback get size : \" + entrys1.getEvents().size())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->33 [style = solid, label="bufferSize"];
40->16 [style = solid, label="first"];
39->9 [style = bold, label=""];
38->41 [style = dotted, label="true"];
21->43 [style = bold, label=""];
1->17 [style = solid, label="bufferSize"];
38->4 [style = bold, label=""];
34->18 [style = bold, label=""];
8->20 [style = solid, label="i"];
5->28 [style = bold, label=""];
9->26 [style = bold, label=""];
31->41 [style = solid, label="i"];
1->6 [style = solid, label="bufferSize"];
43->8 [style = dotted, label="true"];
0->8 [style = bold, label=""];
43->14 [style = dotted, label="true"];
25->10 [style = bold, label=""];
27->33 [style = bold, label=""];
28->42 [style = bold, label=""];
2->24 [style = bold, label=""];
22->25 [style = bold, label=""];
1->39 [style = solid, label="bufferSize"];
41->4 [style = solid, label="i"];
16->6 [style = bold, label=""];
20->14 [style = bold, label=""];
23->3 [style = bold, label=""];
38->4 [style = dotted, label="true"];
35->21 [style = bold, label=""];
34->25 [style = solid, label="lastest"];
6->2 [style = bold, label=""];
45->1 [style = bold, label=""];
1->43 [style = solid, label="bufferSize"];
43->0 [style = dotted, label="true"];
42->22 [style = solid, label="first"];
38->23 [style = dotted, label="true"];
4->3 [style = solid, label="result"];
41->38 [style = bold, label=""];
44->37 [style = bold, label=""];
13->15 [style = bold, label=""];
19->46 [style = bold, label=""];
37->13 [style = bold, label=""];
38->17 [style = bold, label=""];
4->23 [style = bold, label=""];
47->1 [style = bold, label=""];
18->37 [style = bold, label=""];
24->12 [style = bold, label=""];
21->43 [style = solid, label="i"];
1->24 [style = solid, label="bufferSize"];
34->15 [style = solid, label="lastest"];
43->20 [style = bold, label=""];
12->36 [style = bold, label=""];
40->24 [style = solid, label="first"];
31->38 [style = solid, label="i"];
32->27 [style = bold, label=""];
31->38 [style = bold, label=""];
33->5 [style = bold, label=""];
30->6 [style = solid, label="lastest"];
36->39 [style = bold, label=""];
15->22 [style = bold, label=""];
43->7 [style = bold, label=""];
18->44 [style = dashed, label="0"];
26->31 [style = bold, label=""];
1->25 [style = solid, label="bufferSize"];
29->19 [style = bold, label=""];
20->0 [style = solid, label="result"];
19->35 [style = bold, label=""];
3->41 [style = bold, label=""];
46->35 [style = bold, label=""];
34->44 [style = bold, label=""];
40->30 [style = bold, label=""];
1->29 [style = bold, label=""];
7->40 [style = bold, label=""];
1->28 [style = solid, label="bufferSize"];
42->34 [style = bold, label=""];
1->37 [style = solid, label="bufferSize"];
11->1 [style = bold, label=""];
21->20 [style = solid, label="i"];
8->43 [style = bold, label=""];
41->38 [style = solid, label="i"];
17->32 [style = bold, label=""];
1->31 [style = solid, label="bufferSize"];
8->43 [style = solid, label="i"];
1->38 [style = solid, label="bufferSize"];
1->19 [style = solid, label="bufferSize"];
38->3 [style = dotted, label="true"];
40->39 [style = solid, label="first"];
14->0 [style = bold, label=""];
1->26 [style = solid, label="bufferSize"];
43->20 [style = dotted, label="true"];
31->4 [style = solid, label="i"];
21->8 [style = solid, label="i"];
30->16 [style = bold, label=""];
42->13 [style = solid, label="first"];
}
