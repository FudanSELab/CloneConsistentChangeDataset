digraph {
14 [style = filled, label = "final Observable<String> even = Observable.fromArray(e)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "list.add(even)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final String(( e = {\"2\",\"4\",\"6\"}@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final List<Flowable<String>> list = new ArrayList<>()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Observable<String> concat = Observable.concat(Observable.fromIterable(list))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final Observable<String> odds = Observable.fromArray(o)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Observer<String> observer = TestHelper.mockObserver()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "verify(observer,times(7)).onNext(anyString())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final List<Observable<String>> list = new ArrayList<Observable<String>>()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final List<Flowable<String>> list = new ArrayList<Flowable<String>>()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "concat.subscribe(subscriber)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final String(( o = {\"1\",\"3\",\"5\",\"7\"}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "concatWithList['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Subscriber<String> subscriber = TestHelper.mockSubscriber()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "concat.subscribe(observer)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Flowable<String> concat = Flowable.concat(Flowable.fromIterable(list))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "concatWithList['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "verify(subscriber,times(7)).onNext(anyString())@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "list.add(odds)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Flowable<String> even = Flowable.fromArray(e)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Flowable<String> odds = Flowable.fromArray(o)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "concatWithList['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3->4 [style = solid, label="even"];
0->3 [style = bold, label=""];
11->16 [style = bold, label=""];
5->8 [style = bold, label=""];
9->11 [style = bold, label=""];
4->17 [style = bold, label=""];
18->17 [style = solid, label="list"];
4->6 [style = bold, label=""];
1->15 [style = dashed, label="0"];
0->16 [style = dashed, label="0"];
11->3 [style = solid, label="e"];
6->17 [style = dashed, label="0"];
7->4 [style = bold, label=""];
3->12 [style = bold, label=""];
8->21 [style = dashed, label="0"];
21->15 [style = solid, label="observer"];
16->7 [style = solid, label="odds"];
12->7 [style = bold, label=""];
12->6 [style = solid, label="list"];
9->0 [style = solid, label="o"];
2->6 [style = solid, label="list"];
6->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
11->0 [style = bold, label=""];
21->9 [style = bold, label=""];
14->4 [style = solid, label="even"];
3->2 [style = bold, label=""];
11->14 [style = solid, label="e"];
15->20 [style = bold, label=""];
17->15 [style = bold, label=""];
8->9 [style = bold, label=""];
8->1 [style = solid, label="subscriber"];
2->18 [style = dashed, label="0"];
9->16 [style = solid, label="o"];
16->14 [style = bold, label=""];
10->20 [style = dashed, label="0"];
14->18 [style = bold, label=""];
2->7 [style = bold, label=""];
13->8 [style = bold, label=""];
18->7 [style = bold, label=""];
3->14 [style = dashed, label="0"];
0->7 [style = solid, label="odds"];
1->10 [style = bold, label=""];
19->21 [style = bold, label=""];
}
