digraph {
41 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,COMMIT_MESSAGE)}})@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,FILENAME_TO_ADD)}})@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "status = git.status().call()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Git git = new Git(repository)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "count = 0@@@47@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertFalse(status.getAdded().contains(filenameToAdd))@@@62@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "commitConsumerTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Status status = new Git(repository).status().call()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "removeFileBranchTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE)@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "git = new Git(repository)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Exchange ex2 = added.getExchanges().get(1)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "MockEndpoint added = getMockEndpoint(\"mock:result-commit\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "logs = new Git(repository).log().call()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "template.send(\"direct:commit-all-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessageAll)}})@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "status = new Git(repository).status().call()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "File gitDir = new File(GIT_LOCAL_REPO,\".git\")@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(count,2)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "count++@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,FILENAME_BRANCH_TO_ADD)}})@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "Thread.sleep(1 * 5000)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertTrue(status.getAdded().contains(FILENAME_BRANCH_TO_ADD))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "template.send(\"direct:add-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameBranchToAdd)}})@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "File fileToAdd1 = new File(GIT_LOCAL_REPO,FILENAME_BRANCH_TO_ADD)@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int count = 0@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "template.send(\"direct:remove-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "count == 0@@@48@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "assertEquals(COMMIT_MESSAGE,ex2.getOut().getBody().getShortMessage())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE)@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "count++@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "logs = git.log().call()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "repository.close()@@@63@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Repository repository = getTestRepository()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "fileToAdd1.createNewFile()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "git.checkout().setCreateBranch(false).setName(BRANCH_TEST).call()@@@60@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "count == 1@@@49@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "count == 1@@@49@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "git.checkout().setCreateBranch(true).setName(BRANCH_TEST).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "removeFileBranchTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "git.checkout().setCreateBranch(false).setName(branchTest).call()@@@60@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertTrue(status.getAdded().contains(FILENAME_TO_ADD))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(count,1)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getOut().getBody().getShortMessage())@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "count == 0@@@48@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageAll)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "count++@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "count = 0@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Iterable<RevCommit> logs = new Git(repository).log().call()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "File fileToAdd = new File(GIT_LOCAL_REPO,FILENAME_TO_ADD)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "fileToAdd.createNewFile()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "repository.close()@@@57@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,\"Test test Commit\")}})@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertFalse(status.getAdded().contains(FILENAME_TO_ADD))@@@62@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "Exchange ex1 = added.getExchanges().get(0)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25->13 [style = solid, label="count"];
12->45 [style = bold, label=""];
20->9 [style = bold, label=""];
6->22 [style = bold, label=""];
22->8 [style = solid, label="count"];
22->13 [style = solid, label="count"];
7->53 [style = solid, label="count"];
32->34 [style = bold, label=""];
15->40 [style = dashed, label="0"];
43->23 [style = bold, label=""];
22->8 [style = bold, label=""];
20->46 [style = dashed, label="0"];
3->19 [style = bold, label=""];
14->46 [style = bold, label=""];
42->3 [style = bold, label=""];
58->59 [style = bold, label=""];
13->22 [style = bold, label=""];
26->28 [style = bold, label=""];
18->0 [style = bold, label=""];
38->40 [style = dotted, label="true"];
14->20 [style = bold, label=""];
3->32 [style = solid, label="repository"];
2->31 [style = bold, label=""];
23->44 [style = bold, label=""];
26->17 [style = solid, label="count"];
13->6 [style = dotted, label="true"];
15->13 [style = bold, label=""];
7->1 [style = bold, label=""];
57->51 [style = bold, label=""];
9->33 [style = bold, label=""];
53->52 [style = bold, label=""];
28->47 [style = dashed, label="0"];
26->47 [style = bold, label=""];
4->21 [style = bold, label=""];
50->3 [style = bold, label=""];
25->35 [style = solid, label="count"];
22->7 [style = bold, label=""];
25->38 [style = solid, label="count"];
22->38 [style = bold, label=""];
41->30 [style = bold, label=""];
51->60 [style = bold, label=""];
0->23 [style = bold, label=""];
25->8 [style = solid, label="count"];
56->48 [style = bold, label=""];
59->55 [style = bold, label=""];
45->21 [style = bold, label=""];
27->29 [style = bold, label=""];
38->35 [style = bold, label=""];
54->61 [style = bold, label=""];
24->3 [style = bold, label=""];
37->16 [style = bold, label=""];
22->35 [style = solid, label="count"];
5->37 [style = dashed, label="0"];
52->54 [style = bold, label=""];
60->56 [style = bold, label=""];
25->38 [style = bold, label=""];
39->37 [style = bold, label=""];
10->57 [style = dashed, label="0"];
3->18 [style = solid, label="repository"];
46->9 [style = bold, label=""];
8->15 [style = bold, label=""];
40->35 [style = bold, label=""];
25->22 [style = solid, label="count"];
8->15 [style = dotted, label="true"];
11->32 [style = bold, label=""];
0->43 [style = dashed, label="0"];
19->41 [style = dashed, label="0"];
33->26 [style = bold, label=""];
29->48 [style = dashed, label="0"];
5->16 [style = bold, label=""];
4->45 [style = dashed, label="0"];
11->5 [style = bold, label=""];
15->7 [style = solid, label="count"];
30->12 [style = bold, label=""];
34->39 [style = dashed, label="0"];
3->41 [style = bold, label=""];
49->19 [style = bold, label=""];
28->17 [style = bold, label=""];
32->39 [style = bold, label=""];
2->44 [style = dashed, label="0"];
23->2 [style = bold, label=""];
13->6 [style = bold, label=""];
38->40 [style = bold, label=""];
44->31 [style = bold, label=""];
8->13 [style = bold, label=""];
21->14 [style = bold, label=""];
13->36 [style = dashed, label="0"];
15->7 [style = bold, label=""];
16->10 [style = bold, label=""];
34->5 [style = bold, label=""];
10->27 [style = bold, label=""];
17->47 [style = bold, label=""];
35->22 [style = bold, label=""];
35->36 [style = dotted, label="true"];
29->25 [style = bold, label=""];
1->18 [style = bold, label=""];
61->58 [style = bold, label=""];
17->11 [style = bold, label=""];
17->11 [style = solid, label="count"];
17->28 [style = bold, label=""];
18->43 [style = bold, label=""];
12->4 [style = bold, label=""];
16->57 [style = bold, label=""];
48->15 [style = bold, label=""];
25->8 [style = bold, label=""];
3->49 [style = bold, label=""];
47->17 [style = bold, label=""];
35->36 [style = bold, label=""];
22->7 [style = solid, label="count"];
22->38 [style = solid, label="count"];
7->53 [style = bold, label=""];
19->30 [style = bold, label=""];
36->22 [style = bold, label=""];
}
