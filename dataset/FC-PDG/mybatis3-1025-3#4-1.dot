digraph {
15 [style = filled, label = "assertEquals(,paramType.getActualTypeArguments()(0()@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testReturn_SimpleWildcard['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertTrue(paramType.getActualTypeArguments()(0( instanceof WildcardType)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testReturn_Lv2CustomClass['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Class<?> clazz = @@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(,paramType.getRawType())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(result instanceof ParameterizedType)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(1,paramType.getActualTypeArguments().length)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "WildcardType wildcard = (WildcardType)paramType.getActualTypeArguments()(0(@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Method method = clazz.getMethod(\"simpleSelectWildcard\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(,paramType.getRawType())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Type result = TypeParameterResolver.resolveReturnType(method,clazz)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testReturn_SimpleWildcard['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Method method = clazz.getMethod(\"selectCalculator\",)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(,wildcard.getUpperBounds()(0()@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Class<?> clazz = @@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ParameterizedType paramType = (ParameterizedType)result@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->8 [style = solid, label="method"];
1->8 [style = bold, label=""];
8->10 [style = solid, label="result"];
9->8 [style = solid, label="clazz"];
13->8 [style = solid, label="method"];
8->3 [style = bold, label=""];
0->16 [style = dashed, label="0"];
16->7 [style = bold, label=""];
11->9 [style = bold, label=""];
0->7 [style = bold, label=""];
2->15 [style = dashed, label="0"];
1->13 [style = dashed, label="0"];
3->10 [style = bold, label=""];
12->13 [style = bold, label=""];
10->16 [style = bold, label=""];
7->2 [style = bold, label=""];
14->12 [style = bold, label=""];
5->4 [style = bold, label=""];
10->0 [style = bold, label=""];
12->8 [style = solid, label="clazz"];
7->15 [style = bold, label=""];
9->12 [style = dashed, label="0"];
8->3 [style = solid, label="result"];
6->9 [style = bold, label=""];
9->1 [style = bold, label=""];
13->8 [style = bold, label=""];
2->5 [style = bold, label=""];
}
