digraph {
19 [style = filled, label = "boolean allRows@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "navigationInMeasure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "node = new NavigationReplacer(alpha).go(node)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Set<String> prefix = node.accept(new PatternValidator(false))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "!isRunningOrFinal(ops.get(0).getKind()) || ops.get(0).getKind() == SqlKind.RUNNING@@@7@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SqlOperator defaultOp = SqlStdOperatorTable.FINAL@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "SqlNode newNode = defaultOp.createCall(SqlParserPos.ZERO,op0)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "SqlNode node@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "String alpha@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "navigationInMeasure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "SqlNode node@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "SqlNode newNode = defaultOp.createCall(SqlParserPos.ZERO,ops.get(0))@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "!isRunningOrFinal(op0.getKind()) || !allRows && op0.getKind() == SqlKind.RUNNING@@@8@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Set<String> prefix = node.accept(new PatternValidator(true))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "node = SqlStdOperatorTable.AS.createCall(SqlParserPos.ZERO,newNode,ops.get(1))@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Util.discard(prefix)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return node@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return node@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final SqlOperator defaultOp = allRows? SqlStdOperatorTable.RUNNING: SqlStdOperatorTable.FINAL@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "node = SqlStdOperatorTable.AS.createCall(SqlParserPos.ZERO,newNode,ops.get(1))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "navigationInDefine['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final List<SqlNode> ops = ((SqlCall)node).getOperandList()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "List<SqlNode> ops = ((SqlCall)node).getOperandList()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "final Set<String> prefix = node.accept(new PatternValidator(true))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final SqlNode op0 = ops.get(0)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "SqlNode node@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "return node@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "node = new NavigationExpander().go(node)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->15 [style = solid, label="newNode"];
16->19 [style = dotted, label="true"];
7->9 [style = solid, label="newNode"];
19->13 [style = solid, label="allRows"];
10->14 [style = bold, label=""];
4->6 [style = bold, label=""];
25->23 [style = bold, label=""];
0->19 [style = dashed, label="0"];
16->17 [style = dotted, label="true"];
8->20 [style = dashed, label="0"];
9->1 [style = solid, label="node"];
4->18 [style = bold, label=""];
0->26 [style = dashed, label="0"];
17->12 [style = solid, label="node"];
13->11 [style = bold, label=""];
27->25 [style = solid, label="node"];
20->4 [style = bold, label=""];
22->4 [style = bold, label=""];
6->2 [style = bold, label=""];
10->14 [style = dotted, label="true"];
10->15 [style = dotted, label="true"];
8->4 [style = solid, label="prefix"];
11->14 [style = solid, label="op0"];
7->9 [style = bold, label=""];
5->1 [style = bold, label=""];
6->18 [style = dashed, label="0"];
8->22 [style = dashed, label="0"];
15->12 [style = solid, label="node"];
21->26 [style = dotted, label="true"];
21->24 [style = dotted, label="true"];
21->22 [style = bold, label=""];
11->10 [style = bold, label=""];
20->4 [style = solid, label="prefix"];
10->12 [style = bold, label=""];
3->8 [style = bold, label=""];
5->7 [style = dotted, label="true"];
2->13 [style = dashed, label="0"];
4->27 [style = bold, label=""];
22->4 [style = solid, label="prefix"];
0->1 [style = solid, label="node"];
3->0 [style = dotted, label="true"];
18->13 [style = bold, label=""];
26->27 [style = solid, label="node"];
5->9 [style = dotted, label="true"];
5->7 [style = bold, label=""];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
8->4 [style = bold, label=""];
25->23 [style = solid, label="node"];
9->1 [style = bold, label=""];
16->20 [style = bold, label=""];
27->25 [style = bold, label=""];
2->5 [style = bold, label=""];
}
