digraph {
16 [style = filled, label = "testAddKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String partitionPath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "addPartitionPathField@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "HoodieAvroWriteSupport writeSupport = new HoodieAvroWriteSupport(new AvroSchemaConverter().convert(schema),schema,Option.of(filter))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "HoodieAvroWriteSupport writeSupport = new HoodieAvroWriteSupport(new AvroSchemaConverter().convert(schema),schema,filter)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "writeSupport.add(rowKey)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String filePath = tempDir.resolve(\"test.parquet\").toAbsolutePath().toString()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "HoodieAvroWriteSupport writeSupport = new HoodieAvroWriteSupport(new AvroSchemaConverter().convert(schema),schema,filter)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "writer.write(rec)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "rec.put(HoodieRecord.RECORD_KEY_METADATA_FIELD,rowKey)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i < 1000@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Schema schema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "rec.put(HoodieRecord.PARTITION_PATH_METADATA_FIELD,partitionPath)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<String> rowKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "BloomFilter filter = BloomFilterFactory.createBloomFilter(1000,0.0001,10000,typeCode)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i++@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "writer.write(rec)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "writer.close()@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "boolean addPartitionPathField@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "ParquetWriter writer = new ParquetWriter(new Path(filePath),writeSupport,CompressionCodecName.GZIP,120 * 1024 * 1024,ParquetWriter.DEFAULT_PAGE_SIZE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "writeSupport.add(rowKey)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "rowKeys.add(UUID.randomUUID().toString())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "@TempDir java.nio.file.Path tempDir@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<String> rowKeys = new ArrayList<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String filePath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "BloomFilter filter = BloomFilterFactory.createBloomFilter(1000,0.0001,10000,BloomFilterTypeCode.SIMPLE.name())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Schema schema = HoodieAvroUtils.getRecordKeySchema()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testAddKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "writeParquetFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "GenericRecord rec = new GenericData.Record(schema)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "rec.put(HoodieRecord.RECORD_KEY_METADATA_FIELD,rowKey)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "writer.close()@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String typeCode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
4->12 [style = solid, label="i"];
30->22 [style = solid, label="writeSupport"];
27->32 [style = bold, label=""];
30->22 [style = bold, label=""];
16->11 [style = bold, label=""];
26->32 [style = bold, label=""];
6->18 [style = solid, label="schema"];
2->1 [style = bold, label=""];
24->30 [style = solid, label="filter"];
26->27 [style = dotted, label="true"];
3->18 [style = dashed, label="0"];
11->4 [style = bold, label=""];
33->28 [style = dotted, label="true"];
12->2 [style = dotted, label="true"];
23->26 [style = bold, label=""];
22->21 [style = bold, label=""];
4->1 [style = solid, label="i"];
14->10 [style = bold, label=""];
5->3 [style = solid, label="filter"];
3->9 [style = solid, label="writeSupport"];
12->1 [style = dotted, label="true"];
18->9 [style = solid, label="writeSupport"];
5->18 [style = bold, label=""];
7->8 [style = bold, label=""];
6->3 [style = solid, label="schema"];
24->30 [style = bold, label=""];
0->7 [style = bold, label=""];
7->14 [style = bold, label=""];
33->20 [style = dotted, label="true"];
3->9 [style = bold, label=""];
12->13 [style = bold, label=""];
32->9 [style = bold, label=""];
6->5 [style = bold, label=""];
12->2 [style = bold, label=""];
26->27 [style = bold, label=""];
13->9 [style = solid, label="filePath"];
6->14 [style = solid, label="schema"];
17->15 [style = dotted, label="true"];
33->25 [style = dotted, label="true"];
21->32 [style = solid, label="rec"];
33->24 [style = bold, label=""];
25->27 [style = solid, label="partitionPath"];
1->12 [style = solid, label="i"];
10->0 [style = bold, label=""];
18->9 [style = bold, label=""];
9->14 [style = bold, label=""];
1->12 [style = bold, label=""];
9->21 [style = bold, label=""];
4->12 [style = bold, label=""];
33->19 [style = dotted, label="true"];
33->29 [style = dotted, label="true"];
14->0 [style = solid, label="rec"];
28->24 [style = solid, label="typeCode"];
13->6 [style = bold, label=""];
29->26 [style = solid, label="addPartitionPathField"];
19->21 [style = solid, label="schema"];
21->23 [style = bold, label=""];
33->31 [style = dotted, label="true"];
5->18 [style = solid, label="filter"];
19->30 [style = solid, label="schema"];
16->15 [style = dotted, label="true"];
17->11 [style = bold, label=""];
31->22 [style = solid, label="filePath"];
}
