digraph {
28 [style = filled, label = "int handlerNb = controllerManager.getHandlers().size()@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "int particHandlerNb = participantManagerToExpire.getHandlers().size()@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
68 [style = filled, label = "controllerHandlerNb = controllerManager.getHandlers().size()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ZkTestHelper.expireSession(participantManagerToExpire.getZkClient())@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "Assert.assertTrue(result)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "System.out.println(\"Expiring participant session...\")@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManagerToExpire.getSessionId())return watchPaths.size() == 2}},500)@@@61@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "final ZkHelixTestManager participantManagerToExpire = (ZkHelixTestManager)participants(1(.getManager()@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "int controllerHandlerNb = controllerManager.getHandlers().size()@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "String oldSessionId = participantManagerToExpire.getSessionId()@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "testCbHandlerLeakOnControllerSessionExpiry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "ZkHelixTestManager controllerManager = controller.getManager()@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertEquals(handlerNb,controllerHandlerNb,\"controller callback handlers should not increase after participant session expiry\")@@@71@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "int controllerHandlerNb = controllerManager.getHandlers().size()@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controllerManager.getSessionId())return watchPaths.size() == (6 + 5 * n)}},500)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
82 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,9,\"HelixController should have 9 (5+2n) callback handlers for 2 participant, but was \" + controllerHandlerNb + \", \" + printHandlers(controllerManager))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "System.out.println(\"Expried participant session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@49@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "String instanceName = \"localhost_\" + (12918 + i)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String oldSessionId = participantManagerToExpire.getSessionId()@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "Assert.assertEquals(handlerNb,controllerHandlerNb,\"controller callback handlers should not increase after participant session expiry, but was \" + printHandlers(controllerManager))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(handlerNb,controllerHandlerNb,\"controller callback handlers should not increase after participant session expiry\")@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "handlerNb = participantManager.getHandlers().size()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "result = ClusterStateVerifier.verifyByPolling(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "handlerNb = participantManagerToExpire.getHandlers().size()@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@74@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry\")@@@73@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
77 [style = filled, label = "String newSessionId = controllerManager.getSessionId()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "result = ClusterStateVerifier.verifyByPolling(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int n = 2@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controllerManager.getSessionId())return watchPaths.size() == (6 + 5 * n)}},500)@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
86 [style = filled, label = "particHandlerNb = participantManager.getHandlers().size()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int particHandlerNb = participantManagerToExpire.getHandlers().size()@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String newSessionId = participantManagerToExpire.getSessionId()@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final ZkHelixTestManager controllerManager = controller.getManager()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "i++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "controller.syncStart()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Assert.assertTrue(result,\"Controller should have 6 + 5*n zk-watchers after session expiry.\")@@@60@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "ZkHelixTestManager participantManager = participants(0(.getManager()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "result = ClusterStateVerifier.verifyByPolling(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "Assert.assertEquals(particHandlerNb,2,\"HelixParticipant should have 2 (msg+cur-state) callback handlers\")@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,9,\"HelixController should have 9 (5+2n) callback handlers for 2 (n) participant\")@@@43@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
69 [style = filled, label = "int i = 0@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "Assert.assertEquals(particHandlerNb,2,\"HelixParticipant should have 2 (msg+cur-state) callback handlers, but was \" + particHandlerNb + \", \" + printHandlers(participantManager))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "participants(i( = new MockParticipant(clusterName,instanceName,ZK_ADDR,null)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int i = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "ZkTestHelper.expireSession(participantManagerToExpire.getZkClient())@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "i++@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertTrue(result,\"Controller should have 6 + 5*n zk-watchers.\")@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assert.assertTrue(result)@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry\")@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "int handlerNb = controllerManager.getHandlers().size()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManagerToExpire.getSessionId())return watchPaths.size() == 2}},500)@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "int handlerNb = controllerManager.getHandlers().size()@@@70@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "Assert.assertTrue(result)@@@51@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "int particHandlerNb = participantManager.getHandlers().size()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "boolean result = ClusterStateVerifier.verifyByZkCallback(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testCbHandlerLeakOnParticipantSessionExpiry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "System.out.println(\"Expired controller session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry, but was \" + printHandlers(participantManager))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "System.out.println(\"Expiring participant session...\")@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "participants(i(.syncStart()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 2 zk-watchers after session expiry.\")@@@69@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "i < 10@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,9,\"HelixController should have 9 (5+2n) callback handlers for 2 (n) participant\")@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(result)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@38@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "Thread.sleep(100)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "MockParticipant(( participants = new MockParticipant((((@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "System.out.println(\"Expiring controller session...\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@46@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 2 zk-watchers.\")@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "final int n = 2@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "handlerNb = participantManagerToExpire.getHandlers().size()@@@72@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "ZkHelixTestManager participantManagerToExpire = (ZkHelixTestManager)participants(1(.getManager()@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,32,n,2,\"MasterSlave\",true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "controllerHandlerNb == 9 && particHandlerNb == 2@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "ZkTestHelper.expireSession(controllerManager.getZkClient())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "System.out.println(\"Expried participant session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "String oldSessionId = controllerManager.getSessionId()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "testCbHandlerLeakOnParticipantSessionExpiry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "i < n@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "ClusterController controller = new ClusterController(clusterName,\"controller_0\",ZK_ADDR)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(particHandlerNb,2,\"HelixParticipant should have 2 (msg+cur-state) callback handlers\")@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "String newSessionId = participantManagerToExpire.getSessionId()@@@48@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33->67 [style = dashed, label="0"];
67->73 [style = solid, label="handlerNb"];
79->66 [style = bold, label=""];
68->78 [style = solid, label="controllerHandlerNb"];
9->71 [style = bold, label=""];
81->83 [style = bold, label=""];
2->16 [style = solid, label="n"];
55->51 [style = solid, label="n"];
59->51 [style = bold, label=""];
23->20 [style = solid, label="result"];
8->87 [style = solid, label="clusterName"];
17->71 [style = dashed, label="0"];
19->11 [style = bold, label=""];
31->26 [style = solid, label="oldSessionId"];
9->78 [style = solid, label="controllerHandlerNb"];
64->70 [style = solid, label="i"];
73->75 [style = bold, label=""];
43->61 [style = solid, label="result"];
63->36 [style = bold, label=""];
72->76 [style = solid, label="participantManager"];
53->39 [style = bold, label=""];
9->12 [style = solid, label="controllerHandlerNb"];
58->53 [style = solid, label="result"];
82->76 [style = bold, label=""];
32->59 [style = dashed, label="0"];
74->67 [style = bold, label=""];
8->7 [style = solid, label="clusterName"];
54->29 [style = bold, label=""];
25->16 [style = solid, label="i"];
70->80 [style = dotted, label="true"];
21->72 [style = bold, label=""];
41->46 [style = solid, label="result"];
8->75 [style = solid, label="clusterName"];
8->34 [style = solid, label="clusterName"];
28->5 [style = solid, label="handlerNb"];
78->80 [style = bold, label=""];
2->15 [style = bold, label=""];
3->8 [style = solid, label="methodName"];
50->45 [style = bold, label=""];
76->81 [style = bold, label=""];
6->4 [style = solid, label="result"];
16->14 [style = bold, label=""];
8->57 [style = solid, label="clusterName"];
83->85 [style = bold, label=""];
32->72 [style = dashed, label="0"];
1->31 [style = bold, label=""];
18->0 [style = bold, label=""];
11->25 [style = bold, label=""];
28->5 [style = bold, label=""];
70->82 [style = bold, label=""];
8->23 [style = solid, label="clusterName"];
85->77 [style = bold, label=""];
5->33 [style = bold, label=""];
68->82 [style = solid, label="controllerHandlerNb"];
87->79 [style = solid, label="result"];
16->6 [style = bold, label=""];
21->74 [style = solid, label="controllerManager"];
4->21 [style = bold, label=""];
56->62 [style = bold, label=""];
9->17 [style = bold, label=""];
2->7 [style = solid, label="n"];
67->73 [style = bold, label=""];
14->19 [style = solid, label="instanceName"];
8->41 [style = solid, label="clusterName"];
25->14 [style = solid, label="i"];
61->38 [style = bold, label=""];
71->73 [style = solid, label="particHandlerNb"];
5->74 [style = dashed, label="0"];
6->4 [style = bold, label=""];
19->25 [style = solid, label="i"];
38->36 [style = solid, label="controllerHandlerNb"];
70->68 [style = dotted, label="true"];
22->18 [style = bold, label=""];
42->56 [style = bold, label=""];
68->86 [style = bold, label=""];
16->14 [style = dotted, label="true"];
9->5 [style = solid, label="controllerHandlerNb"];
42->56 [style = solid, label="handlerNb"];
62->52 [style = solid, label="handlerNb"];
9->82 [style = solid, label="controllerHandlerNb"];
41->46 [style = bold, label=""];
55->16 [style = solid, label="n"];
87->79 [style = bold, label=""];
8->55 [style = bold, label=""];
16->25 [style = dotted, label="true"];
78->82 [style = bold, label=""];
4->47 [style = bold, label=""];
16->11 [style = dotted, label="true"];
65->29 [style = bold, label=""];
72->9 [style = bold, label=""];
70->78 [style = bold, label=""];
21->82 [style = solid, label="controllerManager"];
55->7 [style = solid, label="n"];
72->73 [style = solid, label="participantManager"];
69->64 [style = solid, label="i"];
0->16 [style = bold, label=""];
44->42 [style = bold, label=""];
23->20 [style = bold, label=""];
71->78 [style = solid, label="particHandlerNb"];
35->73 [style = dashed, label="0"];
86->76 [style = solid, label="particHandlerNb"];
37->41 [style = bold, label=""];
14->19 [style = bold, label=""];
38->56 [style = solid, label="controllerHandlerNb"];
66->74 [style = solid, label="handlerNb"];
25->16 [style = bold, label=""];
86->73 [style = solid, label="particHandlerNb"];
2->55 [style = dashed, label="0"];
47->59 [style = bold, label=""];
49->50 [style = bold, label=""];
60->49 [style = bold, label=""];
43->61 [style = bold, label=""];
29->8 [style = solid, label="className"];
33->35 [style = solid, label="handlerNb"];
32->9 [style = bold, label=""];
51->40 [style = bold, label=""];
17->12 [style = bold, label=""];
58->53 [style = bold, label=""];
21->47 [style = dashed, label="0"];
8->2 [style = bold, label=""];
10->13 [style = bold, label=""];
0->16 [style = solid, label="i"];
13->26 [style = bold, label=""];
31->10 [style = bold, label=""];
80->68 [style = bold, label=""];
63->48 [style = solid, label="particHandlerNb"];
3->8 [style = bold, label=""];
70->78 [style = dotted, label="true"];
55->15 [style = bold, label=""];
69->70 [style = solid, label="i"];
17->35 [style = solid, label="particHandlerNb"];
40->43 [style = bold, label=""];
51->40 [style = solid, label="result"];
86->64 [style = bold, label=""];
16->19 [style = dotted, label="true"];
33->35 [style = bold, label=""];
35->27 [style = bold, label=""];
39->44 [style = solid, label="result"];
77->84 [style = solid, label="newSessionId"];
30->1 [style = bold, label=""];
15->7 [style = bold, label=""];
39->44 [style = bold, label=""];
62->52 [style = bold, label=""];
29->3 [style = bold, label=""];
20->28 [style = bold, label=""];
66->74 [style = bold, label=""];
12->30 [style = bold, label=""];
83->84 [style = solid, label="oldSessionId"];
24->29 [style = bold, label=""];
46->58 [style = bold, label=""];
48->60 [style = bold, label=""];
8->19 [style = solid, label="clusterName"];
71->76 [style = solid, label="particHandlerNb"];
70->64 [style = dotted, label="true"];
71->69 [style = bold, label=""];
34->22 [style = bold, label=""];
13->26 [style = solid, label="newSessionId"];
68->74 [style = solid, label="controllerHandlerNb"];
8->27 [style = solid, label="clusterName"];
0->14 [style = solid, label="i"];
7->34 [style = bold, label=""];
49->37 [style = solid, label="oldSessionId"];
84->87 [style = bold, label=""];
8->6 [style = solid, label="clusterName"];
55->58 [style = solid, label="n"];
9->74 [style = solid, label="controllerHandlerNb"];
63->52 [style = solid, label="particHandlerNb"];
38->63 [style = bold, label=""];
26->23 [style = bold, label=""];
21->32 [style = bold, label=""];
36->48 [style = bold, label=""];
8->15 [style = solid, label="clusterName"];
86->78 [style = solid, label="particHandlerNb"];
45->37 [style = bold, label=""];
69->70 [style = bold, label=""];
52->57 [style = bold, label=""];
77->84 [style = bold, label=""];
70->86 [style = dotted, label="true"];
45->37 [style = solid, label="newSessionId"];
64->70 [style = bold, label=""];
17->30 [style = solid, label="particHandlerNb"];
}
