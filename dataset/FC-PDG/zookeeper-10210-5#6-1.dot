digraph {
3 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testConnectWithSSLToStrictServer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testConnectWithoutSSLToNonStrictServerPartialWrite['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "socket.getOutputStream().flush()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final Boolean hostnameVerification@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Thread.sleep(TIMEOUT / 2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "socket.getOutputStream().flush()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "!handshakeCompleted@@@16@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "socket.getOutputStream().write(DATA_FROM_CLIENT,2,DATA_FROM_CLIENT.length - 2)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testConnectWithSSLToStrictServer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Socket socket = connectWithoutSSL()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "socket.getOutputStream().write(DATA_FROM_CLIENT,0,2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "byte(( buf = new byte((((@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "{forceClose(sslSocket)serverThread.shutdown(TIMEOUT)}@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Socket sslSocket = connectWithSSL()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "{forceClose(socket)serverThread.shutdown(TIMEOUT)}@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final X509KeyType caKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "byte(( buf = new byte((((@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "init(caKeyType,certKeyType,hostnameVerification,paramIndex)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "final Integer paramIndex@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "setUp()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "int bytesRead = socket.getInputStream().read(buf,0,buf.length)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(handshakeCompleted)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final X509KeyType certKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "sslSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "sslSocket.getOutputStream().flush()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sslSocket.getOutputStream().flush()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "serverThread.start()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "serverThread.start()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->22 [style = solid, label="certKeyType"];
23->16 [style = dotted, label="true"];
4->10 [style = bold, label=""];
31->9 [style = solid, label="bytesRead"];
17->5 [style = bold, label=""];
10->1 [style = solid, label="buf"];
3->35 [style = dashed, label="0"];
1->13 [style = solid, label="bytesRead"];
9->11 [style = bold, label=""];
11->14 [style = bold, label=""];
35->6 [style = bold, label=""];
31->9 [style = bold, label=""];
26->29 [style = bold, label=""];
9->11 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
30->27 [style = bold, label=""];
12->15 [style = bold, label=""];
23->21 [style = dotted, label="true"];
4->30 [style = dashed, label="0"];
3->6 [style = bold, label=""];
11->32 [style = bold, label=""];
5->18 [style = bold, label=""];
25->14 [style = bold, label=""];
1->11 [style = solid, label="buf"];
25->14 [style = dotted, label="true"];
18->2 [style = bold, label=""];
15->19 [style = bold, label=""];
2->10 [style = bold, label=""];
36->33 [style = bold, label=""];
2->4 [style = bold, label=""];
20->22 [style = solid, label="paramIndex"];
1->13 [style = bold, label=""];
6->36 [style = bold, label=""];
2->19 [style = solid, label="sslSocket"];
7->3 [style = bold, label=""];
8->9 [style = solid, label="buf"];
5->36 [style = dashed, label="0"];
36->28 [style = solid, label="socket"];
8->1 [style = bold, label=""];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
23->20 [style = dotted, label="true"];
23->22 [style = bold, label=""];
11->25 [style = dotted, label="true"];
13->9 [style = dotted, label="true"];
25->12 [style = bold, label=""];
5->15 [style = solid, label="sslSocket"];
14->12 [style = bold, label=""];
10->0 [style = bold, label=""];
10->0 [style = solid, label="buf"];
8->1 [style = solid, label="buf"];
0->8 [style = bold, label=""];
16->22 [style = solid, label="caKeyType"];
9->14 [style = bold, label=""];
33->30 [style = bold, label=""];
0->31 [style = dashed, label="0"];
22->17 [style = bold, label=""];
2->33 [style = dashed, label="0"];
13->9 [style = bold, label=""];
34->35 [style = bold, label=""];
29->1 [style = bold, label=""];
1->31 [style = bold, label=""];
24->22 [style = solid, label="hostnameVerification"];
13->14 [style = dotted, label="true"];
32->28 [style = bold, label=""];
23->24 [style = dotted, label="true"];
0->8 [style = solid, label="bytesRead"];
11->25 [style = bold, label=""];
27->26 [style = bold, label=""];
1->31 [style = solid, label="buf"];
}
