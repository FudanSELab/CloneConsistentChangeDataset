digraph {
24 [style = filled, label = "assertSame(wheels.get(i),vehicleBuilder.getWheel(i))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "i < wheels.size()@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i++@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < 3@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "vehicleBuilder.addWheelBuilder().setRadius(3).setWidth(4)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "vehicleBuilder.addWheelBuilder().setRadius(2).setWidth(2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "i++@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < wheels.size()@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Vehicle.Builder vehicleBuilder = Vehicle.newBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<Wheel> wheels = new ArrayList<Wheel>(vehicleBuilder.getWheelList())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i++@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertNotSame(wheels.get(i),vehicleBuilder.getWheel(i))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertEquals(1,vehicleBuilder.getWheelCount())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertSame(wheels.get(i),vehicleBuilder.getWheel(i))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "vehicleBuilder.addWheelBuilder().setRadius(1).setWidth(1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "i++@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testRemove_WithNestedBuilders['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "vehicleBuilder.addWheelBuilder().setRadius(1).setWidth(2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i < wheels.size()@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 0@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(2,vehicleBuilder.getWheel(0).getRadius())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertThat(wheels.get(i)).isSameInstanceAs(vehicleBuilder.getWheel(i))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "vehicleBuilder.getWheel(i)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(wheels.get(i)).isSameInstanceAs(vehicleBuilder.getWheel(i))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertThat(wheels.get(i)).isNotSameInstanceAs(vehicleBuilder.getWheel(i))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertThat(wheels.get(i)).isSameInstanceAs(vehicleBuilder.getWheel(i))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "vehicleBuilder.removeWheel(0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int i = 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testMessagesAreCached['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertSame(wheels.get(i),vehicleBuilder.getWheel(i))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "vehicleBuilder.getWheelBuilder(3).setRadius(20).setWidth(20)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i < wheels.size()@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testMessagesAreCached['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "vehicleBuilder.addWheelBuilder().setRadius(5).setWidth(6)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int i = 0@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "vehicleBuilder.addWheelBuilder().setRadius(7).setWidth(8)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->35 [style = bold, label=""];
0->30 [style = bold, label=""];
17->35 [style = dashed, label="0"];
22->29 [style = dashed, label="0"];
11->26 [style = solid, label="i"];
11->20 [style = solid, label="i"];
24->30 [style = dashed, label="0"];
3->16 [style = bold, label=""];
15->7 [style = dotted, label="true"];
30->6 [style = bold, label=""];
0->6 [style = dotted, label="true"];
26->11 [style = bold, label=""];
16->3 [style = solid, label="i"];
5->13 [style = dotted, label="true"];
16->27 [style = solid, label="i"];
5->11 [style = dotted, label="true"];
28->4 [style = bold, label=""];
0->24 [style = dotted, label="true"];
0->24 [style = bold, label=""];
2->15 [style = bold, label=""];
13->22 [style = bold, label=""];
19->15 [style = bold, label=""];
19->15 [style = solid, label="i"];
13->26 [style = dotted, label="false"];
18->0 [style = bold, label=""];
10->20 [style = solid, label="i"];
20->26 [style = dashed, label="0"];
12->3 [style = dotted, label="true"];
2->19 [style = solid, label="i"];
34->33 [style = bold, label=""];
36->4 [style = bold, label=""];
18->24 [style = solid, label="i"];
4->21 [style = bold, label=""];
8->34 [style = dashed, label="0"];
11->22 [style = solid, label="i"];
9->16 [style = solid, label="i"];
21->25 [style = bold, label=""];
27->16 [style = bold, label=""];
11->5 [style = solid, label="i"];
12->1 [style = bold, label=""];
14->33 [style = dashed, label="0"];
10->11 [style = solid, label="i"];
12->27 [style = dotted, label="true"];
13->22 [style = dotted, label="true"];
15->9 [style = bold, label=""];
13->29 [style = dotted, label="true"];
10->22 [style = solid, label="i"];
14->18 [style = bold, label=""];
13->20 [style = dotted, label="false"];
35->34 [style = bold, label=""];
22->11 [style = bold, label=""];
29->11 [style = bold, label=""];
18->6 [style = solid, label="i"];
17->8 [style = bold, label=""];
11->13 [style = solid, label="i"];
10->5 [style = solid, label="i"];
31->32 [style = bold, label=""];
3->27 [style = dashed, label="0"];
8->14 [style = bold, label=""];
19->7 [style = solid, label="i"];
25->17 [style = bold, label=""];
10->13 [style = solid, label="i"];
0->30 [style = dotted, label="true"];
21->31 [style = dashed, label="0"];
4->31 [style = bold, label=""];
11->5 [style = bold, label=""];
10->5 [style = bold, label=""];
13->26 [style = bold, label=""];
5->13 [style = bold, label=""];
18->30 [style = solid, label="i"];
12->3 [style = bold, label=""];
9->12 [style = bold, label=""];
7->19 [style = bold, label=""];
12->27 [style = bold, label=""];
10->26 [style = solid, label="i"];
20->11 [style = bold, label=""];
2->7 [style = solid, label="i"];
25->32 [style = dashed, label="0"];
15->7 [style = bold, label=""];
18->0 [style = solid, label="i"];
0->2 [style = bold, label=""];
23->4 [style = bold, label=""];
11->29 [style = solid, label="i"];
6->0 [style = bold, label=""];
6->24 [style = solid, label="i"];
2->15 [style = solid, label="i"];
6->0 [style = solid, label="i"];
13->29 [style = bold, label=""];
12->16 [style = dotted, label="true"];
6->30 [style = solid, label="i"];
15->19 [style = dotted, label="true"];
10->29 [style = solid, label="i"];
16->12 [style = solid, label="i"];
9->27 [style = solid, label="i"];
24->6 [style = bold, label=""];
1->10 [style = bold, label=""];
16->12 [style = bold, label=""];
9->12 [style = solid, label="i"];
9->3 [style = solid, label="i"];
13->20 [style = bold, label=""];
}
