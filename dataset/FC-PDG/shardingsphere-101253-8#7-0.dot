digraph {
2 [style = filled, label = "PostgreSQLAuthenticationOKPacket packet = new PostgreSQLAuthenticationOKPacket(isSuccess)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(byteBuf.writerIndex(),is(4))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(packet.getIdentifier(),is(PostgreSQLCommandPacketType.AUTHENTICATION_REQUEST.getValue()))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "ByteBuf byteBuf = ByteBufTestUtils.createByteBuf(1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PostgreSQLPacketPayload payload = new PostgreSQLPacketPayload(byteBuf)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final boolean isSuccess@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(packet.getMessageType(),is(PostgreSQLCommandPacketType.AUTHENTICATION_REQUEST.getValue()))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertThat(byteBuf.writerIndex(),is(1))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertReadWrite['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(byteBuf.readInt(),is(isSuccess? 0: 1))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(payload.readInt1(),is((int)'N'))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "packet.write(payload)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertReadWrite['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertReadWrite['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ByteBuf byteBuf = ByteBufTestUtils.createByteBuf(4)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "PostgreSQLSSLNegativePacket packet = new PostgreSQLSSLNegativePacket()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15->13 [style = bold, label=""];
12->3 [style = solid, label="byteBuf"];
3->4 [style = solid, label="payload"];
8->3 [style = bold, label=""];
1->5 [style = solid, label="isSuccess"];
8->3 [style = solid, label="byteBuf"];
6->1 [style = dotted, label="true"];
8->12 [style = dashed, label="0"];
0->4 [style = dashed, label="0"];
3->15 [style = bold, label=""];
7->4 [style = bold, label=""];
2->10 [style = bold, label=""];
9->8 [style = bold, label=""];
4->0 [style = bold, label=""];
2->15 [style = dashed, label="0"];
3->2 [style = bold, label=""];
5->11 [style = dashed, label="0"];
1->2 [style = solid, label="isSuccess"];
14->12 [style = bold, label=""];
6->8 [style = bold, label=""];
9->1 [style = dotted, label="true"];
10->4 [style = bold, label=""];
7->10 [style = dashed, label="0"];
12->3 [style = bold, label=""];
2->7 [style = bold, label=""];
4->11 [style = bold, label=""];
3->13 [style = solid, label="payload"];
0->5 [style = bold, label=""];
13->4 [style = bold, label=""];
}
