digraph {
0 [style = filled, label = "clone.setField(descriptor,entry.getValue())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "return clone@@@16@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final CodedOutputStream output@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "clone['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "clone.hasLazyField = hasLazyField@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "clone.setField(entry.getKey(),entry.getValue())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "int i = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "clone.setField(entry.getKey(),entry.getValue())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "FieldDescriptorType descriptor = entry.getKey()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "FieldSet<FieldDescriptorType> clone = FieldSet.newFieldSet()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "Map.Entry<T,Object> entry = fields.getArrayEntryAt(i)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "FieldDescriptorType descriptor = entry.getKey()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "clone.hasLazyField = hasLazyField@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "writeField(entry.getKey(),entry.getValue(),output)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "clone['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i < fields.getNumArrayEntries()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "writeTo['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "clone.setField(descriptor,entry.getValue())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "return clone@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "FieldSet<T> clone = FieldSet.newFieldSet()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Map.Entry<FieldDescriptorType,Object> entry = fields.getArrayEntryAt(i)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "final Map.Entry<FieldDescriptorType,Object> entry = fields.getArrayEntryAt(i)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "writeField(entry.getKey(),entry.getValue(),output)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->7 [style = solid, label="i"];
5->10 [style = bold, label=""];
6->3 [style = bold, label=""];
5->14 [style = dotted, label="true"];
4->5 [style = dotted, label="true"];
7->11 [style = bold, label=""];
23->20 [style = solid, label="output"];
21->19 [style = bold, label=""];
18->17 [style = solid, label="clone"];
9->2 [style = bold, label=""];
5->4 [style = solid, label="i"];
3->18 [style = dashed, label="0"];
10->12 [style = dashed, label="0"];
7->8 [style = dashed, label="0"];
11->22 [style = dashed, label="0"];
4->8 [style = dotted, label="true"];
23->22 [style = solid, label="output"];
12->16 [style = bold, label=""];
5->0 [style = dotted, label="true"];
16->17 [style = bold, label=""];
4->5 [style = solid, label="i"];
3->4 [style = bold, label=""];
15->18 [style = bold, label=""];
22->5 [style = bold, label=""];
4->13 [style = solid, label="i"];
1->9 [style = bold, label=""];
4->8 [style = solid, label="i"];
8->22 [style = bold, label=""];
8->13 [style = solid, label="i"];
11->0 [style = solid, label="descriptor"];
3->2 [style = solid, label="clone"];
5->13 [style = dotted, label="true"];
11->0 [style = bold, label=""];
5->11 [style = dotted, label="true"];
18->4 [style = bold, label=""];
8->5 [style = bold, label=""];
5->12 [style = bold, label=""];
10->1 [style = solid, label="descriptor"];
19->5 [style = solid, label="i"];
5->7 [style = dotted, label="true"];
8->5 [style = solid, label="i"];
4->22 [style = dotted, label="true"];
21->23 [style = dotted, label="true"];
5->13 [style = bold, label=""];
11->14 [style = dashed, label="0"];
5->4 [style = bold, label=""];
0->8 [style = bold, label=""];
4->20 [style = bold, label=""];
19->4 [style = solid, label="i"];
7->13 [style = dashed, label="0"];
19->8 [style = solid, label="i"];
5->7 [style = bold, label=""];
4->8 [style = bold, label=""];
10->20 [style = dashed, label="0"];
14->8 [style = bold, label=""];
19->4 [style = bold, label=""];
5->8 [style = dotted, label="true"];
10->1 [style = bold, label=""];
1->10 [style = bold, label=""];
8->7 [style = solid, label="i"];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
5->8 [style = solid, label="i"];
}
