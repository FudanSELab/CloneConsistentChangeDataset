digraph {
10 [style = filled, label = "return spec@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "subTaskSpecs.put(spec.getId(),spec)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "newTaskSpec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final TestSubTaskSpec spec = new TestSubTaskSpec(supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),supervisorTask.getGroupId(),supervisorTask,new ParallelIndexIngestionSpec(getIngestionSchema().getDataSchema(),new ParallelIndexIOConfig(null,baseInputSource.withSplit(split),getIngestionSchema().getIOConfig().getInputFormat(),getIngestionSchema().getIOConfig().isAppendToExisting()),getIngestionSchema().getTuningConfig()),supervisorTask.getContext(),split)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "newTaskSpec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "final SplittableInputSource baseInputSource = (SplittableInputSource)getIngestionSchema().getIOConfig().getInputSource()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return new TestSinglePhaseSubTaskSpec(supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),supervisorTask.getGroupId(),supervisorTask,new ParallelIndexIngestionSpec(getIngestionSchema().getDataSchema(),new ParallelIndexIOConfig(null,baseInputSource.withSplit(split),getIngestionSchema().getIOConfig().getInputFormat(),getIngestionSchema().getIOConfig().isAppendToExisting()),getIngestionSchema().getTuningConfig()),supervisorTask.getContext(),split)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final TestInputSource baseInputSource = (TestInputSource)getIngestionSchema().getIOConfig().getInputSource()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "InputSplit split@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "newTaskSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return new TestSinglePhaseSubTaskSpec(supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),supervisorTask.getGroupId(),supervisorTask,new ParallelIndexIngestionSpec(getIngestionSchema().getDataSchema(),new ParallelIndexIOConfig(null,baseInputSource.withSplit(split),getIngestionSchema().getIOConfig().getInputFormat(),getIngestionSchema().getIOConfig().isAppendToExisting(),getIngestionSchema().getIOConfig().isDropExisting()),getIngestionSchema().getTuningConfig()),supervisorTask.getContext(),split)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7->6 [style = solid, label="spec"];
3->0 [style = bold, label=""];
1->2 [style = solid, label="split"];
8->1 [style = dotted, label="true"];
2->4 [style = dashed, label="0"];
7->6 [style = bold, label=""];
1->7 [style = solid, label="split"];
0->9 [style = dashed, label="0"];
5->0 [style = bold, label=""];
9->7 [style = bold, label=""];
2->7 [style = dashed, label="0"];
0->4 [style = bold, label=""];
3->1 [style = dotted, label="true"];
6->10 [style = bold, label=""];
1->4 [style = solid, label="split"];
7->10 [style = solid, label="spec"];
5->1 [style = dotted, label="true"];
0->2 [style = bold, label=""];
8->9 [style = bold, label=""];
}
