digraph {
5 [style = filled, label = "Mockito.verify(clusterClient,times(1)).stopWithSavepoint(eq(jid),eq(false),eq(\"test-target-dir\"))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String jidString = jid.toString()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testStopWithExplicitSavepointDir['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final ClusterClient<String> clusterClient = createClusterClient(null)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testStopWithExplicitSavepointDir['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "String(( parameters = {jidString}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testFrontend.stop(parameters)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Mockito.verify(clusterClient,times(1)).stopWithSavepoint(eq(jid),eq(false),isNull())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "JobID jid = new JobID()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testStopWithOnlyJobId['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10->1 [style = bold, label=""];
1->8 [style = bold, label=""];
4->0 [style = solid, label="clusterClient"];
8->2 [style = bold, label=""];
7->1 [style = bold, label=""];
2->3 [style = solid, label="parameters"];
0->3 [style = bold, label=""];
2->4 [style = bold, label=""];
1->5 [style = solid, label="jid"];
1->9 [style = solid, label="jid"];
6->1 [style = bold, label=""];
3->9 [style = bold, label=""];
1->2 [style = bold, label=""];
8->2 [style = solid, label="jidString"];
3->5 [style = bold, label=""];
5->9 [style = dashed, label="0"];
4->0 [style = bold, label=""];
}
