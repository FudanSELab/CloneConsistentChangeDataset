digraph {
17 [style = filled, label = "Assert.assertTrue(\"Should be a position DeleteFile\",obj instanceof DeleteFile)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(\"Should be a equality DeleteFile\",obj instanceof DeleteFile)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "Assertions.assertThat(obj).as(\"Should be a position DeleteFile\").isInstanceOf()@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "TestHelpers.assertEquals(DATA_FILE,(DataFile)obj)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TestHelpers.assertEquals(POS_DELETE_FILE,(DeleteFile)obj)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ByteArrayOutputStream bytes = new ByteArrayOutputStream()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "out.writeObject(POS_DELETE_FILE.copy())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertTrue(\"Should be a ManifestFile\",obj instanceof ManifestFile)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testJavaSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "i < 3@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "out.writeObject(POS_DELETE_FILE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assertions.assertThat(obj).as(\"Should be a equality DeleteFile\").isInstanceOf()@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "i < 2@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i += 1@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "i += 1@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assertions.assertThat(obj).as(\"Should be a DataFile\").isInstanceOf()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "out.writeObject(manifest)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int i = 0@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i += 1@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "out.writeObject(DATA_FILE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestHelpers.assertEquals(EQ_DELETE_FILE,(DeleteFile)obj)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i < 2@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Object obj = in.readObject()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < 2@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "out.writeObject(DATA_FILE.copy())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "out.writeObject(EQ_DELETE_FILE.copy())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "out.writeObject(manifest.copy())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "int i = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "ManifestFile manifest = writeManifest(FILE_A,FILE_B)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertTrue(\"Should be a DataFile\",obj instanceof DataFile)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Object obj = in.readObject()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Object obj = in.readObject()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "out.writeObject(EQ_DELETE_FILE)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testJavaSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testJavaSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "out.writeObject(GenericManifestFile.copyOf(manifest).build())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "TestHelpers.assertEquals(manifest,(ManifestFile)obj)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Object obj = in.readObject()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->35 [style = bold, label=""];
14->3 [style = bold, label=""];
21->10 [style = bold, label=""];
25->4 [style = dotted, label="true"];
6->11 [style = dashed, label="0"];
28->9 [style = bold, label=""];
22->34 [style = dashed, label="0"];
13->1 [style = bold, label=""];
10->29 [style = dotted, label="true"];
29->6 [style = bold, label=""];
12->2 [style = bold, label=""];
38->30 [style = bold, label=""];
10->20 [style = dotted, label="true"];
15->20 [style = bold, label=""];
36->2 [style = bold, label=""];
6->11 [style = bold, label=""];
2->14 [style = bold, label=""];
20->32 [style = dashed, label="0"];
1->0 [style = dotted, label="true"];
15->6 [style = solid, label="obj"];
32->11 [style = bold, label=""];
4->23 [style = solid, label="obj"];
9->24 [style = bold, label=""];
7->0 [style = solid, label="obj"];
27->2 [style = bold, label=""];
10->6 [style = dotted, label="true"];
19->18 [style = bold, label=""];
3->31 [style = dashed, label="0"];
11->37 [style = bold, label=""];
7->0 [style = bold, label=""];
23->8 [style = bold, label=""];
0->28 [style = dashed, label="0"];
14->33 [style = dashed, label="0"];
20->29 [style = dashed, label="0"];
8->25 [style = solid, label="i"];
5->21 [style = bold, label=""];
30->32 [style = dotted, label="true"];
37->30 [style = solid, label="i"];
21->10 [style = solid, label="i"];
25->23 [style = dotted, label="true"];
34->38 [style = bold, label=""];
25->26 [style = dotted, label="true"];
15->29 [style = bold, label=""];
25->8 [style = dotted, label="true"];
1->28 [style = dotted, label="true"];
11->10 [style = solid, label="i"];
4->17 [style = bold, label=""];
22->19 [style = bold, label=""];
13->1 [style = solid, label="i"];
37->30 [style = bold, label=""];
21->32 [style = solid, label="obj"];
1->7 [style = bold, label=""];
38->30 [style = solid, label="i"];
17->23 [style = bold, label=""];
31->34 [style = bold, label=""];
24->1 [style = solid, label="i"];
30->21 [style = bold, label=""];
10->30 [style = dashed, label="0"];
10->16 [style = bold, label=""];
7->28 [style = bold, label=""];
10->11 [style = dotted, label="true"];
11->10 [style = bold, label=""];
1->9 [style = dotted, label="true"];
30->37 [style = dotted, label="true"];
24->1 [style = bold, label=""];
30->11 [style = dotted, label="true"];
0->9 [style = bold, label=""];
10->15 [style = bold, label=""];
25->13 [style = bold, label=""];
1->24 [style = dotted, label="true"];
35->33 [style = bold, label=""];
35->33 [style = solid, label="manifest"];
4->26 [style = bold, label=""];
25->4 [style = bold, label=""];
15->20 [style = solid, label="obj"];
16->25 [style = bold, label=""];
20->6 [style = bold, label=""];
3->22 [style = bold, label=""];
21->11 [style = solid, label="obj"];
30->21 [style = dotted, label="true"];
4->17 [style = solid, label="obj"];
16->25 [style = solid, label="i"];
1->7 [style = dotted, label="true"];
10->15 [style = dotted, label="true"];
7->9 [style = solid, label="obj"];
25->17 [style = dotted, label="true"];
18->5 [style = bold, label=""];
26->23 [style = bold, label=""];
21->32 [style = bold, label=""];
35->11 [style = solid, label="manifest"];
33->31 [style = bold, label=""];
17->26 [style = dashed, label="0"];
8->25 [style = bold, label=""];
}
