digraph {
17 [style = filled, label = "grid_fromDomainObjectResourceServerside_shouldContainMultiline['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "DomainObjectResourceServerside.addLinks(resourceContext,domainType,instanceId,grid)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNotNull(logoProperty)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "val instanceId = objectManager.identifyObject(objectAdapter).getIdentifier()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "val linkCountHavingGET = _Strings.grep(jaxbEntity.toString(),\"\"method\"\").map(null).filter(null).count()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "val filteredResult = _Strings.grep(jaxbEntity.toString(),\"multiLine\").map(null).collect(Collectors.joining())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "val spec = objectAdapter.getSpecification()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "val layoutResourceDescriptor = ResourceDescriptor.of(RepresentationType.OBJECT_LAYOUT,Where.ANYWHERE,RepresentationService.Intent.NOT_APPLICABLE)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "val jaxbEntity = SerializationStrategy.JSON_INDENTED.entity(grid)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNotNull(jaxbEntity)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "blobProperty_fromDomainObjectResourceServerside_shouldHaveActionSemantics_GET['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "val grid = (BS3Grid)spec.getFacet().getGrid(objectAdapter)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "val domainType = spec.getLogicalTypeName()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "val logoProperty = grid.getAllPropertiesById().get(\"logo\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "val instanceId = objectManager.bookmarkObject(objectAdapter).getIdentifier()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertNotNull(jaxbEntity)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNotNull(domainObjectResourceServerside)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "grid_fromDomainObjectResourceServerside_shouldContainMultiline['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "val objectAdapter = objectManager.adapt(blobDemo)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "val layoutDemo = factoryService.viewModel()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "val objectAdapter = objectManager.adapt(layoutDemo)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "val blobDemo = factoryService.viewModel()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "val resourceContext = domainObjectResourceServerside.resourceContextForTesting(layoutResourceDescriptor,null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1L,linkCountHavingGET)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertNotNull(grid)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "val jaxbEntity = SerializationStrategy.JSON_INDENTED.entity(logoProperty)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->8 [style = solid, label="instanceId"];
5->3 [style = bold, label=""];
17->10 [style = bold, label=""];
4->2 [style = solid, label="grid"];
24->18 [style = solid, label="logoProperty"];
18->23 [style = bold, label=""];
24->23 [style = solid, label="logoProperty"];
4->8 [style = solid, label="grid"];
9->4 [style = bold, label=""];
7->4 [style = solid, label="objectAdapter"];
20->0 [style = bold, label=""];
25->20 [style = solid, label="blobDemo"];
23->15 [style = bold, label=""];
3->11 [style = bold, label=""];
4->5 [style = solid, label="grid"];
7->20 [style = dashed, label="0"];
7->0 [style = bold, label=""];
19->21 [style = solid, label="linkCountHavingGET"];
6->7 [style = solid, label="layoutDemo"];
14->9 [style = solid, label="layoutResourceDescriptor"];
15->19 [style = bold, label=""];
20->4 [style = solid, label="objectAdapter"];
24->18 [style = bold, label=""];
1->8 [style = solid, label="domainType"];
1->13 [style = bold, label=""];
10->6 [style = bold, label=""];
9->8 [style = solid, label="resourceContext"];
11->15 [style = bold, label=""];
23->15 [style = solid, label="jaxbEntity"];
5->3 [style = solid, label="jaxbEntity"];
25->20 [style = bold, label=""];
12->10 [style = bold, label=""];
6->25 [style = dashed, label="0"];
8->2 [style = bold, label=""];
10->25 [style = bold, label=""];
11->19 [style = dashed, label="0"];
1->16 [style = bold, label=""];
0->1 [style = bold, label=""];
22->10 [style = bold, label=""];
13->16 [style = dashed, label="0"];
4->8 [style = bold, label=""];
16->14 [style = bold, label=""];
14->9 [style = bold, label=""];
11->15 [style = solid, label="filteredResult"];
2->24 [style = bold, label=""];
6->7 [style = bold, label=""];
13->14 [style = bold, label=""];
2->5 [style = bold, label=""];
13->8 [style = solid, label="instanceId"];
19->21 [style = bold, label=""];
}
