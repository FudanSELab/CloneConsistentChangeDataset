digraph {
0 [style = filled, label = "tester.checkBoolean(\"1.2>=1\",Boolean.TRUE)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "tester.checkBoolean(\"120000>=cast(1e5 as real)\",Boolean.TRUE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tester.checkBoolean(\"1.1>=1.2\",Boolean.FALSE)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "tester.checkBoolean(\"false>false\",Boolean.FALSE)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "tester.setFor(SqlStdOperatorTable.GREATER_THAN_OR_EQUAL)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tester.checkBoolean(\"1>=2\",Boolean.FALSE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "tester.checkBoolean(\"1.2>1\",Boolean.TRUE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tester.checkBoolean(\"1.1>=1.1\",Boolean.TRUE)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tester.checkBoolean(\"true>=false\",Boolean.TRUE)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "tester.checkBoolean(\"1.2e4>=cast(1e5 as real)\",Boolean.FALSE)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tester.checkBoolean(\"2>=1\",Boolean.TRUE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "tester.checkBoolean(\"true>false\",Boolean.TRUE)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testGreaterThanOperator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "tester.checkBoolean(\"false>=true\",Boolean.FALSE)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "tester.checkBoolean(\"cast(-1 as TINYINT)>cast(1 as TINYINT)\",Boolean.FALSE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "tester.checkNull(\"cast(null as real)>=999\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "tester.checkBoolean(\"1.1>1.2\",Boolean.FALSE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "tester.checkBoolean(\"-1>=1\",Boolean.FALSE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tester.checkBoolean(\"-1.1>=-1.2\",Boolean.TRUE)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tester.checkBoolean(\"1>=1\",Boolean.TRUE)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testGreaterThanOrEqualOperator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "tester.checkBoolean(\"cast(-1.1 as real) > cast(-1.2 as real)\",Boolean.TRUE)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "tester.checkBoolean(\"1.2>=cast(1e5 as double)\",Boolean.FALSE)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tester.checkBoolean(\"x'0A0001B0'>=x'0A0001B0'\",Boolean.TRUE)@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "tester.checkBoolean(\"DATE '2013-02-23' > CAST(NULL AS DATE)\",null)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "tester.checkBoolean(\"1.2e4>=1e5\",Boolean.FALSE)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "tester.checkBoolean(\"false>true\",Boolean.FALSE)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "tester.checkBoolean(\"1>2\",Boolean.FALSE)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "tester.checkNull(\"3.0>cast(null as double)\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "tester.checkBoolean(\"1.1e1>1.2e1\",Boolean.FALSE)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testGreaterThanOrEqualOperator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "tester.checkBoolean(\"x'0A000130'>=x'0A0001B0'\",Boolean.FALSE)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "tester.checkBoolean(\"1.1>1.1\",Boolean.FALSE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "tester.checkBoolean(\"cast(1.2e0 as real)>1\",Boolean.TRUE)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "tester.checkBoolean(\"-1.1>-1.2\",Boolean.TRUE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "tester.setFor(SqlStdOperatorTable.GREATER_THAN)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "tester.checkBoolean(\"false>=false\",Boolean.TRUE)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "tester.checkBoolean(\"1.2e0>1\",Boolean.TRUE)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "tester.checkBoolean(\"1.1e2>1.1e2\",Boolean.FALSE)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "tester.checkBoolean(\"2>1\",Boolean.TRUE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "tester.checkBoolean(\"cast(1 as SMALLINT)>cast(1 as SMALLINT)\",Boolean.FALSE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "tester.checkBoolean(\"true>true\",Boolean.FALSE)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "tester.checkBoolean(\"true>=true\",Boolean.TRUE)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "tester.checkBoolean(\"DATE '2013-02-23' > DATE '1945-02-24'\",Boolean.TRUE)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->18 [style = bold, label=""];
9->39 [style = dashed, label="0"];
8->28 [style = dashed, label="0"];
14->17 [style = bold, label=""];
24->35 [style = bold, label=""];
29->27 [style = bold, label=""];
23->32 [style = bold, label=""];
3->11 [style = bold, label=""];
4->27 [style = dashed, label="0"];
42->24 [style = bold, label=""];
22->42 [style = bold, label=""];
34->28 [style = bold, label=""];
2->25 [style = dashed, label="0"];
4->16 [style = bold, label=""];
12->15 [style = bold, label=""];
1->8 [style = bold, label=""];
18->5 [style = bold, label=""];
31->22 [style = bold, label=""];
36->25 [style = bold, label=""];
7->21 [style = bold, label=""];
0->1 [style = bold, label=""];
15->6 [style = bold, label=""];
5->4 [style = bold, label=""];
43->39 [style = bold, label=""];
14->35 [style = dashed, label="0"];
11->38 [style = dashed, label="0"];
10->12 [style = bold, label=""];
32->26 [style = bold, label=""];
7->23 [style = dashed, label="0"];
37->29 [style = bold, label=""];
18->37 [style = dashed, label="0"];
28->43 [style = bold, label=""];
11->10 [style = bold, label=""];
6->14 [style = bold, label=""];
21->20 [style = bold, label=""];
16->30 [style = dashed, label="0"];
19->11 [style = bold, label=""];
10->31 [style = dashed, label="0"];
30->23 [style = bold, label=""];
27->30 [style = bold, label=""];
40->34 [style = bold, label=""];
6->24 [style = dashed, label="0"];
35->36 [style = bold, label=""];
8->13 [style = bold, label=""];
13->43 [style = dashed, label="0"];
33->38 [style = bold, label=""];
38->31 [style = bold, label=""];
15->42 [style = dashed, label="0"];
17->36 [style = dashed, label="0"];
16->7 [style = bold, label=""];
2->0 [style = bold, label=""];
26->41 [style = bold, label=""];
13->9 [style = bold, label=""];
1->34 [style = dashed, label="0"];
39->37 [style = bold, label=""];
12->22 [style = dashed, label="0"];
25->40 [style = bold, label=""];
0->40 [style = dashed, label="0"];
5->29 [style = dashed, label="0"];
17->2 [style = bold, label=""];
}
