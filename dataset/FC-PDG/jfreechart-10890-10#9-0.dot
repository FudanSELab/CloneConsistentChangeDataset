digraph {
23 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertFalse(c1.equals(c2))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "XIntervalSeries<String> s1 = new XIntervalSeries<>(\"Series\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "c1.addSeries(new XIntervalSeries<>(\"Empty Series\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "OHLCSeriesCollection c1 = new OHLCSeriesCollection()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "OHLCSeriesCollection c2 = TestUtils.serialised(c1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "s2.add(1.0,1.1,1.2,1.3)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(c1.equals(c2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "XIntervalSeriesCollection<String> c1 = new XIntervalSeriesCollection<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(c1.equals(c2))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "XIntervalSeries<String> s2 = new XIntervalSeries<>(\"Series\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "c1.addSeries(s1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "OHLCSeries<String> s1 = new OHLCSeries<>(\"Series\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"Series\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "XIntervalSeriesCollection<String> c2 = new XIntervalSeriesCollection<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "s1.add(new Year(2006),1.0,1.1,1.2,1.3)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(c1,c2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "c2.addSeries(new XIntervalSeries<>(\"Empty Series\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "c2.addSeries(s2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(c1.equals(c2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
13->16 [style = solid, label="c2"];
6->3 [style = bold, label=""];
21->10 [style = bold, label=""];
15->13 [style = bold, label=""];
16->18 [style = bold, label=""];
3->1 [style = bold, label=""];
0->6 [style = bold, label=""];
2->1 [style = solid, label="c1"];
1->5 [style = solid, label="c2"];
23->15 [style = bold, label=""];
0->3 [style = solid, label="s1"];
8->6 [style = bold, label=""];
20->14 [style = bold, label=""];
12->16 [style = bold, label=""];
4->2 [style = bold, label=""];
11->9 [style = bold, label=""];
5->17 [style = bold, label=""];
13->11 [style = bold, label=""];
13->17 [style = solid, label="c2"];
13->11 [style = solid, label="c2"];
2->15 [style = dashed, label="0"];
19->5 [style = bold, label=""];
21->12 [style = solid, label="s2"];
2->0 [style = bold, label=""];
18->22 [style = bold, label=""];
22->20 [style = bold, label=""];
10->12 [style = bold, label=""];
7->2 [style = bold, label=""];
8->3 [style = solid, label="s1"];
9->19 [style = bold, label=""];
13->22 [style = solid, label="c2"];
0->8 [style = dashed, label="0"];
2->5 [style = solid, label="c1"];
13->14 [style = solid, label="c2"];
17->21 [style = bold, label=""];
15->11 [style = solid, label="c1"];
9->5 [style = solid, label="s1"];
2->8 [style = bold, label=""];
}
