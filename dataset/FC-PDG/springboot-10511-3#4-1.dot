digraph {
12 [style = filled, label = "filterWhenExceptionThrownShouldRecordTimer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ClientRequest request = ClientRequest.create(HttpMethod.GET,URI.create(\"http://example.com/projects/spring-boot\")).build()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(this.registry.get(\"http.client.requests\").tags(\"method\",\"GET\",\"uri\",\"/projects/spring-boot\",\"status\",\"IO_ERROR\").timer().count()).isEqualTo(1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "ExchangeFunction errorExchange = null@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertThat(this.registry.get(\"http.client.requests\").tags(\"method\",\"GET\",\"uri\",\"/projects/spring-boot\",\"status\",\"CLIENT_ERROR\").timer().count()).isEqualTo(1)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(this.registry.get(\"http.client.requests\").tags(\"method\",\"GET\",\"uri\",\"/projects/spring-boot\",\"status\",\"IO_ERROR\").timer().count()).isEqualTo(1)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "ExchangeFunction errorExchange = null@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "this.filterFunction.filter(request,errorExchange).onErrorResume(,null).block()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "ExchangeFunction exchange = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "filterWhenIoExceptionThrownShouldRecordTimer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "this.filterFunction.filter(request,exchange).onErrorResume(,null).block()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ClientRequest request = ClientRequest.create(HttpMethod.GET,URI.create(\"http://example.com/projects/spring-boot\")).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "filterWhenIoExceptionThrownShouldRecordTimer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "this.filterFunction.filter(request,errorExchange).onErrorResume(,null).block()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3->13 [style = bold, label=""];
13->10 [style = bold, label=""];
3->8 [style = dashed, label="0"];
4->3 [style = bold, label=""];
2->5 [style = dashed, label="0"];
2->0 [style = bold, label=""];
12->3 [style = bold, label=""];
0->9 [style = dashed, label="0"];
3->2 [style = bold, label=""];
8->5 [style = bold, label=""];
5->9 [style = bold, label=""];
7->8 [style = bold, label=""];
1->6 [style = dashed, label="0"];
0->1 [style = bold, label=""];
2->13 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
0->10 [style = dashed, label="0"];
9->6 [style = bold, label=""];
10->11 [style = bold, label=""];
}
