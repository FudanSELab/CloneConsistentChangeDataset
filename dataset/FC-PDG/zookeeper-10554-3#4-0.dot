digraph {
6 [style = filled, label = "LOG.info(\"perform a revalidation test\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "zk.create(\"/obstest\",\"test\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "Assert.assertTrue(\"waiting for server 2 being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP2,CONNECTION_TIMEOUT))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
64 [style = filled, label = "assertNotNull(\"Read-after write failed\",client.exists(\"/revalidtest\",null))@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assert.assertNotSame(\"Client is still connected to non-quorate cluster\",KeeperState.SyncConnected,lastEvent.getState())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "client.create(\"/revalidtest\",\"test\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL)@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "final int leaderProxyPort = PortAssignment.unique()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(new String(zk.getData(\"/obstest\",null,null)),\"test\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "LOG.info(\"Waiting for server 2 to come up\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(zk.getState(),States.CONNECTED)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertEquals(new String(client.getData(\"/revalidtest\",null,null)),\"test\")@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "int obsProxyPort = PortAssignment.unique()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(\"observer failed to connect to observer master\",masterPort,OM_PORT)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "q2.start()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testObserverMaster@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertTrue(\"waiting for server 3 being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_OBS,CONNECTION_TIMEOUT))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "ZooKeeper client = new ZooKeeper(String.format(\"127.0.0.1:%d,127.0.0.1:%d\",leaderProxyPort,obsProxyPort),ClientBase.CONNECTION_TIMEOUT,this)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "latch = new CountDownLatch(2)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "latch = new CountDownLatch(1)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "PortForwarder obsPF = new PortForwarder(obsProxyPort,CLIENT_PORT_OBS)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertNotEquals(\"Shouldn't get a response when cluster not quorate!\",\"test\",new String(zk.getData(\"/obstest\",null,null)))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
80 [style = filled, label = "obsPF.shutdown()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "LOG.info(\"Latch returned\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "PortForwarder leaderPF = new PortForwarder(leaderProxyPort,leaderPort)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "zk.create(\"/revalidtest\",\"test\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "{}@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "testRevalidation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertNotSame(\"Client is still connected to non-quorate cluster\",KeeperState.SyncConnected,lastEvent.getState())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
79 [style = filled, label = "latch.await()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "latch = new CountDownLatch(1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "final int obsProxyPort = PortAssignment.unique()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertTrue(\"Client didn't reconnect to quorate ensemble (state was\" + lastEvent.getState() + \")\",(KeeperState.SyncConnected == lastEvent.getState() || KeeperState.Expired == lastEvent.getState()))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "LOG.info(\"Restarting server 2\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "latch.await()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "shutdown()@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "LOG.info(\"port \" + masterPort + \" \" + OM_PORT)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testObserver['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
77 [style = filled, label = "zk = new ZooKeeper(String.format(\"127.0.0.1:%d,127.0.0.1:%d\",leaderProxyPort,obsProxyPort),ClientBase.CONNECTION_TIMEOUT,this)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "int leaderPort = q1.getQuorumPeer().leader == null? CLIENT_PORT_QP2: CLIENT_PORT_QP1@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertTrue(\"waiting for server 2 being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP2,CONNECTION_TIMEOUT))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "LOG.info(\"Server 2 started, waiting for latch\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(\"Waiting for server 2 to shut down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP2,ClientBase.CONNECTION_TIMEOUT))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(new String(zk.getData(\"/obstest\",null,null)),\"test\")@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "latch = new CountDownLatch(2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "zk.setData(\"/obstest\",\"test2\".getBytes(),-1)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "client.create(\"/revalidtest\",\"test\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
75 [style = filled, label = "Assert.assertEquals(new String(zk.getData(\"/revalidtest\",null,null)),\"test\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "Assert.assertNotNull(\"Read-after write failed\",client.exists(\"/revalidtest\",null))@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "latch = new CountDownLatch(2)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "zk.getChildren(\"/\",false)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertEquals(zk.getState(),States.CONNECTED)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "LOG.info(\"Connection loss exception caught - ensemble not quorate (this is expected)\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "PortForwarder obsPF = new PortForwarder(obsProxyPort,CLIENT_PORT_OBS)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "{}@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int masterPort = q3.getQuorumPeer().observer.getSocket().getPort()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "{}@@@55@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testObserver['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.close()@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(\"Client didn't reconnect to quorate ensemble (state was\" + lastEvent.getState() + \")\",(KeeperState.SyncConnected == lastEvent.getState() || KeeperState.Expired == lastEvent.getState()))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "q3.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "latch.await()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "q2.shutdown()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "latch.await()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "obsPF.shutdown()@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "leaderPF.shutdown()@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertTrue(\"Waiting for server 2 to shut down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP2,ClientBase.CONNECTION_TIMEOUT))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "latch.await()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(\"observer failed to connect to observer master\",masterPort,OM_PORT)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "Assert.assertTrue(\"waiting for server 3 being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_OBS,CONNECTION_TIMEOUT))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "LOG.info(\"Shutting down server 2\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "PortForwarder leaderPF = new PortForwarder(leaderProxyPort,leaderPort)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertNotEquals(\"Shouldn't get a response when cluster not quorate!\",\"test\",new String(zk.getData(\"/obstest\",null,null)))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "shutdown()@@@61@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "zk = new ZooKeeper(\"127.0.0.1:\" + CLIENT_PORT_OBS,ClientBase.CONNECTION_TIMEOUT,this)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "LOG.info(\"Server 2 down\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "Exception e@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Assert.assertEquals(new String(client.getData(\"/revalidtest\",null,null)),\"test\")@@@58@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "Exception e@@@55@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "latch = new CountDownLatch(1)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int leaderProxyPort = PortAssignment.unique()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "int leaderPort = q1.getQuorumPeer().leader == null? CLIENT_PORT_QP2: CLIENT_PORT_QP1@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "latch.await()@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ConnectionLossException c@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "setUp(-1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "zk.create(\"/obstest\",\"test\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "zk.sync(\"/\",null,null)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "leaderPF.shutdown()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "Assert.assertNotNull(\"Read-after write failed\",zk.exists(\"/revalidtest\",null))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27->13 [style = bold, label=""];
41->0 [style = bold, label=""];
51->5 [style = bold, label=""];
62->13 [style = bold, label=""];
34->9 [style = bold, label=""];
20->57 [style = bold, label=""];
77->86 [style = bold, label=""];
32->52 [style = bold, label=""];
24->39 [style = bold, label=""];
52->87 [style = dashed, label="0"];
25->57 [style = dashed, label="0"];
26->40 [style = bold, label=""];
50->61 [style = dashed, label="0"];
46->48 [style = bold, label=""];
0->59 [style = dashed, label="0"];
13->67 [style = dotted, label="true"];
7->26 [style = bold, label=""];
39->68 [style = dashed, label="0"];
48->12 [style = bold, label=""];
80->82 [style = bold, label=""];
3->19 [style = bold, label=""];
37->32 [style = bold, label=""];
70->31 [style = bold, label=""];
4->67 [style = bold, label=""];
8->4 [style = bold, label=""];
53->60 [style = bold, label=""];
59->6 [style = bold, label=""];
58->22 [style = bold, label=""];
11->15 [style = dotted, label="true"];
23->46 [style = solid, label="leaderProxyPort"];
13->4 [style = dotted, label="true"];
17->35 [style = bold, label=""];
27->77 [style = solid, label="leaderProxyPort"];
25->28 [style = bold, label=""];
12->77 [style = dashed, label="0"];
32->74 [style = dashed, label="0"];
55->29 [style = bold, label=""];
51->75 [style = dashed, label="0"];
34->54 [style = bold, label=""];
23->3 [style = bold, label=""];
84->78 [style = bold, label=""];
49->62 [style = bold, label=""];
74->87 [style = bold, label=""];
20->25 [style = bold, label=""];
41->59 [style = bold, label=""];
12->37 [style = bold, label=""];
8->4 [style = solid, label="masterPort"];
86->74 [style = bold, label=""];
10->44 [style = bold, label=""];
21->22 [style = bold, label=""];
64->38 [style = bold, label=""];
87->69 [style = bold, label=""];
23->12 [style = solid, label="leaderProxyPort"];
38->47 [style = bold, label=""];
36->16 [style = bold, label=""];
27->72 [style = solid, label="leaderProxyPort"];
27->71 [style = bold, label=""];
19->46 [style = bold, label=""];
29->35 [style = bold, label=""];
19->46 [style = solid, label="leaderPort"];
81->72 [style = solid, label="leaderPort"];
73->83 [style = bold, label=""];
35->51 [style = bold, label=""];
2->43 [style = bold, label=""];
1->67 [style = dashed, label="0"];
83->79 [style = bold, label=""];
7->66 [style = bold, label=""];
29->17 [style = bold, label=""];
13->24 [style = bold, label=""];
71->81 [style = bold, label=""];
6->23 [style = bold, label=""];
52->64 [style = dashed, label="0"];
68->63 [style = bold, label=""];
78->79 [style = bold, label=""];
24->68 [style = bold, label=""];
56->5 [style = bold, label=""];
16->61 [style = bold, label=""];
27->62 [style = dashed, label="0"];
9->20 [style = bold, label=""];
51->56 [style = dashed, label="0"];
31->49 [style = bold, label=""];
37->65 [style = bold, label=""];
16->50 [style = bold, label=""];
43->7 [style = bold, label=""];
53->14 [style = bold, label=""];
30->35 [style = bold, label=""];
15->28 [style = bold, label=""];
13->8 [style = dotted, label="true"];
79->75 [style = bold, label=""];
8->1 [style = solid, label="masterPort"];
4->1 [style = bold, label=""];
50->33 [style = bold, label=""];
69->84 [style = bold, label=""];
63->44 [style = bold, label=""];
75->80 [style = bold, label=""];
42->18 [style = bold, label=""];
71->77 [style = solid, label="obsProxyPort"];
44->36 [style = bold, label=""];
0->6 [style = bold, label=""];
57->28 [style = bold, label=""];
66->40 [style = bold, label=""];
3->47 [style = solid, label="obsProxyPort"];
65->64 [style = bold, label=""];
76->77 [style = bold, label=""];
22->31 [style = bold, label=""];
52->38 [style = bold, label=""];
85->70 [style = bold, label=""];
54->20 [style = bold, label=""];
49->27 [style = bold, label=""];
14->45 [style = bold, label=""];
35->56 [style = bold, label=""];
32->65 [style = dashed, label="0"];
33->53 [style = bold, label=""];
11->15 [style = bold, label=""];
72->76 [style = bold, label=""];
47->30 [style = bold, label=""];
26->66 [style = dashed, label="0"];
60->45 [style = bold, label=""];
14->60 [style = dashed, label="0"];
28->2 [style = bold, label=""];
13->1 [style = dotted, label="true"];
81->72 [style = bold, label=""];
1->24 [style = bold, label=""];
39->10 [style = bold, label=""];
40->41 [style = bold, label=""];
67->24 [style = bold, label=""];
5->42 [style = bold, label=""];
3->12 [style = solid, label="obsProxyPort"];
13->8 [style = bold, label=""];
8->67 [style = solid, label="masterPort"];
9->54 [style = dashed, label="0"];
10->63 [style = dashed, label="0"];
61->33 [style = bold, label=""];
45->34 [style = bold, label=""];
71->84 [style = solid, label="obsProxyPort"];
}
