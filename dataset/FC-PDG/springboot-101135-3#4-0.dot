digraph {
2 [style = filled, label = "MockEnvironment environment = new MockEnvironment()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "LogFile logFile = getLogFile(file.getPath(),null)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "LoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(getLineWithText(file,\"Hello world\")).contains(\"INFO\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testMaxFileSizeProperty['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "File file = new File(tmpDir(),\"logback-test.log\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String sizeValue@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertThat(ReflectionTestUtils.getField(getRollingPolicy(),\"maxFileSize\").toString()).isEqualTo(expectedFileSize)@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "this.logger.info(\"Hello world\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testMaxFileSizeProperty['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "environment.setProperty(\"logging.file.total-size-cap\",expectedSize)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String expectedSize = \"101 MB\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(ReflectionTestUtils.getField(getRollingPolicy(),\"totalSizeCap\").toString()).isEqualTo(expectedSize)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "MockEnvironment environment = new MockEnvironment()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "environment.setProperty(\"logging.file.max-size\",sizeValue)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "String expectedFileSize@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "LoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this.loggingSystem.initialize(loggingInitializationContext,null,logFile)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testTotalSizeCapProperty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12->10 [style = dotted, label="true"];
1->0 [style = solid, label="loggingInitializationContext"];
12->7 [style = bold, label=""];
6->18 [style = bold, label=""];
15->16 [style = solid, label="expectedSize"];
1->9 [style = bold, label=""];
2->4 [style = bold, label=""];
5->0 [style = solid, label="logFile"];
6->18 [style = dashed, label="0"];
12->11 [style = dotted, label="true"];
10->14 [style = solid, label="sizeValue"];
6->13 [style = dashed, label="0"];
0->3 [style = bold, label=""];
3->13 [style = bold, label=""];
15->2 [style = bold, label=""];
4->1 [style = bold, label=""];
7->14 [style = bold, label=""];
3->6 [style = bold, label=""];
2->16 [style = dashed, label="0"];
4->5 [style = solid, label="loggingInitializationContext"];
5->0 [style = bold, label=""];
16->1 [style = bold, label=""];
17->15 [style = bold, label=""];
2->14 [style = dashed, label="0"];
9->5 [style = solid, label="logFile"];
8->7 [style = bold, label=""];
2->16 [style = bold, label=""];
14->4 [style = bold, label=""];
15->18 [style = solid, label="expectedSize"];
7->4 [style = solid, label="environment"];
9->5 [style = bold, label=""];
11->13 [style = solid, label="expectedFileSize"];
2->1 [style = solid, label="environment"];
7->2 [style = bold, label=""];
}
