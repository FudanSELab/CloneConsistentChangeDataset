digraph {
9 [style = filled, label = "Map<String,String> props = new HashMap<>(workerProps)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "PowerMock.replayAll()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(expectedConfigs,Worker.consumerConfigs(new ConnectorTaskId(\"test\",1),config,connectorConfig,null,noneConnectorClientConfigOverridePolicy))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(expectedConfigs,Worker.producerConfigs(TASK_ID,\"connector-producer-\" + TASK_ID,configWithOverrides,connectorConfig,null,allConnectorClientConfigOverridePolicy))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "testProducerConfigsWithOverrides['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "expectedConfigs.put(\"acks\",\"-1\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,String> expectedConfigs = new HashMap<>(defaultProducerConfigs)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "WorkerConfig configWithOverrides = new StandaloneConfig(props)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(expectedConfigs,Worker.producerConfigs(TASK_ID,\"connector-producer-\" + TASK_ID,configWithOverrides,connectorConfig,null,allConnectorClientConfigOverridePolicy,CLUSTER_ID))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "expectedConfigs.put(\"linger.ms\",\"1000\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testConsumerConfigsWithoutOverrides['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "expectedConfigs.put(\"group.id\",\"connect-test\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "PowerMock.replayAll()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "props.put(\"producer.acks\",\"-1\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expectedConfigs.put(\"metrics.context.connect.kafka.cluster.id\",CLUSTER_ID)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "props.put(\"producer.client.id\",\"producer-test-id\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX)).andReturn(new HashMap<String,Object>())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_CONSUMER_OVERRIDES_PREFIX)).andReturn(new HashMap<>())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "props.put(\"producer.linger.ms\",\"1000\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Map<String,String> expectedConfigs = new HashMap<>(defaultConsumerConfigs)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expectedConfigs.put(\"client.id\",\"producer-test-id\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testProducerConfigsWithOverrides['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expectedConfigs.put(\"client.id\",\"connector-consumer-test-1\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
6->3 [style = bold, label=""];
19->18 [style = bold, label=""];
22->19 [style = bold, label=""];
12->16 [style = dashed, label="0"];
2->6 [style = bold, label=""];
10->19 [style = dashed, label="0"];
0->12 [style = solid, label="expectedConfigs"];
18->17 [style = bold, label=""];
8->14 [style = bold, label=""];
9->3 [style = solid, label="props"];
9->22 [style = dashed, label="0"];
9->10 [style = bold, label=""];
3->0 [style = bold, label=""];
14->1 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
0->13 [style = solid, label="expectedConfigs"];
20->16 [style = bold, label=""];
5->12 [style = bold, label=""];
0->4 [style = bold, label=""];
15->9 [style = bold, label=""];
21->22 [style = bold, label=""];
5->13 [style = bold, label=""];
3->12 [style = solid, label="configWithOverrides"];
11->8 [style = bold, label=""];
10->2 [style = bold, label=""];
12->13 [style = dashed, label="0"];
3->13 [style = solid, label="configWithOverrides"];
4->11 [style = bold, label=""];
22->16 [style = solid, label="expectedConfigs"];
17->20 [style = bold, label=""];
}
