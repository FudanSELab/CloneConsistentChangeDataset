digraph {
11 [style = filled, label = "builder.add(intersectExp)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "implement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Expression intersectExp = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "intersectExp = Expressions.call(intersectExp,BuiltInMethod.INTERSECT.method,Expressions.list(childExp).appendIfNotNull(result.physType.comparer()))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "intersectExp = Expressions.call(intersectExp,all? BuiltInMethod.CONCAT.method: BuiltInMethod.INTERSECT.method,childExp)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "intersectExp == null@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Result result = implementor.visitChild(this,ord.i,input,pref)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "intersectExp = childExp@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Expression childExp = builder.append(\"child\" + ord.i,result.block)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Expression minusExp = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "minusExp == null@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Prefer pref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final PhysType physType = PhysTypeImpl.of(implementor.getTypeFactory(),getRowType(),pref.prefer(JavaRowFormat.CUSTOM))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "minusExp = childExp@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "EnumerableRel input = (EnumerableRel)ord.e@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "builder.add(minusExp)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "implement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "pref = pref.of(result.format)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Prefer pref@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final BlockBuilder builder = new BlockBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "implement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "minusExp = Expressions.call(minusExp,BuiltInMethod.EXCEPT.method,childExp)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return implementor.result(physType,builder.toBlock())@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
2->10 [style = dotted, label="true"];
12->8 [style = solid, label="childExp"];
12->19 [style = solid, label="childExp"];
5->17 [style = solid, label="intersectExp"];
1->8 [style = bold, label=""];
15->7 [style = bold, label=""];
1->17 [style = dotted, label="false"];
9->24 [style = dashed, label="0"];
0->6 [style = bold, label=""];
5->11 [style = solid, label="intersectExp"];
21->18 [style = dotted, label="true"];
5->23 [style = dashed, label="0"];
24->20 [style = solid, label="minusExp"];
14->4 [style = solid, label="pref"];
11->22 [style = dashed, label="0"];
9->1 [style = solid, label="intersectExp"];
12->20 [style = bold, label=""];
19->20 [style = solid, label="minusExp"];
21->7 [style = bold, label=""];
8->17 [style = dashed, label="0"];
9->17 [style = solid, label="intersectExp"];
19->22 [style = solid, label="minusExp"];
15->14 [style = dotted, label="true"];
15->16 [style = dotted, label="true"];
23->19 [style = solid, label="minusExp"];
12->1 [style = bold, label=""];
3->4 [style = bold, label=""];
13->11 [style = bold, label=""];
16->4 [style = solid, label="pref"];
13->4 [style = solid, label="pref"];
23->22 [style = solid, label="minusExp"];
1->17 [style = bold, label=""];
8->1 [style = solid, label="intersectExp"];
1->20 [style = dashed, label="0"];
7->9 [style = bold, label=""];
24->19 [style = solid, label="minusExp"];
9->8 [style = solid, label="intersectExp"];
7->24 [style = bold, label=""];
11->0 [style = bold, label=""];
22->0 [style = bold, label=""];
20->23 [style = bold, label=""];
13->3 [style = bold, label=""];
19->13 [style = bold, label=""];
1->8 [style = dotted, label="false"];
23->13 [style = bold, label=""];
12->5 [style = solid, label="childExp"];
5->13 [style = bold, label=""];
20->23 [style = dotted, label="true"];
18->4 [style = solid, label="pref"];
21->14 [style = dotted, label="true"];
5->1 [style = solid, label="intersectExp"];
9->3 [style = bold, label=""];
8->11 [style = solid, label="intersectExp"];
3->4 [style = solid, label="input"];
17->1 [style = solid, label="intersectExp"];
4->6 [style = solid, label="result"];
4->12 [style = bold, label=""];
17->13 [style = bold, label=""];
13->22 [style = bold, label=""];
23->20 [style = solid, label="minusExp"];
2->7 [style = bold, label=""];
2->14 [style = dotted, label="true"];
20->19 [style = dotted, label="false"];
20->19 [style = bold, label=""];
1->5 [style = dotted, label="true"];
24->3 [style = bold, label=""];
5->8 [style = solid, label="intersectExp"];
12->23 [style = solid, label="childExp"];
8->13 [style = bold, label=""];
17->11 [style = solid, label="intersectExp"];
0->6 [style = solid, label="physType"];
}
