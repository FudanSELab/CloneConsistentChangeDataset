digraph {
54 [style = filled, label = "PowerMock.expectNew(,EasyMock.eq(TASK_ID),EasyMock.eq(task),EasyMock.anyObject(),EasyMock.eq(TargetState.STARTED),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.eq(TransformationChain.noOp()),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.eq(pluginLoader),EasyMock.anyObject()).andReturn(workerTask)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "EasyMock.expect(workerTask.awaitStop(EasyMock.anyLong())).andReturn(true)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "PowerMock.expectNew(,EasyMock.eq(TASK_ID),EasyMock.eq(task),EasyMock.anyObject(),EasyMock.eq(TargetState.STARTED),EasyMock.capture(keyConverter),EasyMock.capture(valueConverter),EasyMock.eq(TransformationChain.noOp()),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.eq(pluginLoader),EasyMock.anyObject()).andReturn(workerTask)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EasyMock.expect(task.version()).andReturn(\"1.0\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Capture<TestConverter> keyConverter = EasyMock.newCapture()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "PowerMock.verifyAll()@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "connProps.put(ConnectorConfig.KEY_CONVERTER_CLASS_CONFIG,.getName())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testCleanupTasksOnStop['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "workerTask.stop()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expectStartStorage()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(pluginLoader)).andReturn(delegatingLoader).times(2)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "WorkerSourceTask workerTask = PowerMock.createMock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "EasyMock.expectLastCall()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Capture<TestConverter> valueConverter = EasyMock.newCapture()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"foo\",keyConverter.getValue().configs.get(\"extra.config\"))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "EasyMock.expect(workerTask.awaitStop(EasyMock.anyLong())).andStubReturn(true)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expectConverters()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "EasyMock.expect(plugins.newTask()).andReturn(task)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "EasyMock.expect(workerTask.loader()).andReturn(pluginLoader)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "expectStopStorage()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testConverterOverrides['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "EasyMock.expect(plugins.delegatingLoader()).andReturn(delegatingLoader)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.expectLastCall()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "worker.stopAndAwaitTask(TASK_ID)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "PowerMock.verifyAll()@@@51@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testConverterOverrides['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "worker.start()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "worker.stop()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "EasyMock.expectLastCall()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "connProps.put(\"value.converter.extra.config\",\"bar\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "TaskConfig taskConfig = new TaskConfig(origProps)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "connProps.put(ConnectorConfig.VALUE_CONVERTER_CLASS_CONFIG,.getName())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<String,String> origProps = new HashMap<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "worker.startTask(TASK_ID,connProps,origProps,taskStatusListener,TargetState.STARTED)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertStatistics(worker,0,1)@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(2)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertStatistics(worker,0,0)@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "expectConverters(true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Map<String,String> connProps = anyConnectorConfigMap()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(TASK_ID)),worker.taskIds())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "connProps.put(\"key.converter.extra.config\",\"foo\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestSourceTask task = PowerMock.createMock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "origProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertStatistics(worker,0,0)@@@48@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "workerTask.initialize(taskConfig)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "workerTask.run()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "EasyMock.expect(delegatingLoader.connectorLoader(.getName())).andReturn(pluginLoader)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "EasyMock.expectLastCall()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Collections.emptySet(),worker.taskIds())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "worker.stop()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(Collections.emptySet(),worker.taskIds())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "EasyMock.expect(workerTask.id()).andStubReturn(TASK_ID)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(\"bar\",valueConverter.getValue().configs.get(\"extra.config\"))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertStatistics(worker,0,0)@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "PowerMock.replayAll()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "worker.startTask(TASK_ID,anyConnectorConfigMap(),origProps,taskStatusListener,TargetState.STARTED)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28->21 [style = bold, label=""];
32->19 [style = bold, label=""];
12->53 [style = dashed, label="0"];
29->45 [style = bold, label=""];
3->10 [style = bold, label=""];
24->40 [style = solid, label="connProps"];
26->4 [style = solid, label="workerTask"];
50->7 [style = bold, label=""];
7->24 [style = bold, label=""];
14->43 [style = bold, label=""];
56->53 [style = bold, label=""];
19->30 [style = bold, label=""];
26->16 [style = bold, label=""];
20->44 [style = bold, label=""];
28->47 [style = solid, label="worker"];
21->50 [style = bold, label=""];
55->51 [style = bold, label=""];
11->26 [style = bold, label=""];
15->4 [style = bold, label=""];
46->31 [style = bold, label=""];
27->52 [style = bold, label=""];
1->29 [style = bold, label=""];
16->15 [style = bold, label=""];
16->33 [style = bold, label=""];
10->42 [style = bold, label=""];
25->38 [style = bold, label=""];
27->32 [style = bold, label=""];
23->11 [style = bold, label=""];
53->23 [style = bold, label=""];
12->23 [style = bold, label=""];
40->31 [style = bold, label=""];
15->54 [style = bold, label=""];
6->8 [style = bold, label=""];
4->1 [style = bold, label=""];
45->42 [style = solid, label="taskConfig"];
45->3 [style = bold, label=""];
33->2 [style = bold, label=""];
43->34 [style = bold, label=""];
0->27 [style = bold, label=""];
13->37 [style = bold, label=""];
40->46 [style = bold, label=""];
11->3 [style = solid, label="task"];
28->50 [style = solid, label="worker"];
26->54 [style = solid, label="workerTask"];
18->41 [style = bold, label=""];
39->12 [style = bold, label=""];
4->54 [style = dashed, label="0"];
32->52 [style = dashed, label="0"];
17->6 [style = bold, label=""];
36->13 [style = bold, label=""];
22->25 [style = bold, label=""];
9->17 [style = bold, label=""];
30->5 [style = bold, label=""];
35->18 [style = bold, label=""];
21->7 [style = bold, label=""];
24->9 [style = bold, label=""];
21->57 [style = bold, label=""];
38->0 [style = bold, label=""];
28->46 [style = solid, label="worker"];
57->55 [style = bold, label=""];
42->35 [style = bold, label=""];
31->36 [style = bold, label=""];
8->40 [style = bold, label=""];
37->47 [style = bold, label=""];
5->28 [style = bold, label=""];
1->40 [style = solid, label="origProps"];
36->48 [style = bold, label=""];
1->45 [style = solid, label="origProps"];
28->48 [style = solid, label="worker"];
47->14 [style = bold, label=""];
48->13 [style = bold, label=""];
54->1 [style = bold, label=""];
49->12 [style = bold, label=""];
2->15 [style = bold, label=""];
41->20 [style = bold, label=""];
44->22 [style = bold, label=""];
1->57 [style = solid, label="origProps"];
52->19 [style = bold, label=""];
37->14 [style = bold, label=""];
}
