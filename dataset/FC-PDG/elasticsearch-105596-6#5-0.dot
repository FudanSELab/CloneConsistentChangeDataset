digraph {
12 [style = filled, label = "addTask(tasks,\"assign_based_on_non_cluster_state_condition\",null)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(task.isAssigned(),equalTo(true))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ClusterState clusterState = initialState()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "DiscoveryNodes.Builder nodes = DiscoveryNodes.builder(clusterState.nodes())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(task.getExecutorNode(),nullValue())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertThat(task.getAssignment().getExplanation(),equalTo(\"non-cluster state condition prevents assignment\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "service.setRecheckInterval(TimeValue.timeValueMillis(1))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ClusterState finalClusterState = reassign(newClusterState)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ClusterState newClusterState = recheckTestClusterService.state()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Metadata.Builder metadata = Metadata.builder(clusterState.metadata()).putCustom(PersistentTasksCustomMetadata.TYPE,tasks.build())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testPeriodicRecheck['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(tasksInProgress.tasks().size(),equalTo(1))@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "PersistentTasksCustomMetadata tasksInProgress = newClusterState.getMetadata().custom(PersistentTasksCustomMetadata.TYPE)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "nonClusterStateCondition = true@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "nonClusterStateCondition = false@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "boolean shouldSimulateFailure = randomBoolean()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ClusterState clusterState = builder.metadata(metadata).nodes(nodes).build()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "PersistentTasksClusterService service = createService(recheckTestClusterService,null)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "ClusterChangedEvent event = new ClusterChangedEvent(\"test\",clusterState,initialState)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ClusterState newClusterState = reassign(clusterState)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "tasksInProgress = finalClusterState.getMetadata().custom(PersistentTasksCustomMetadata.TYPE)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertThat(task.isAssigned(),equalTo(false))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "PersistentTasksCustomMetadata.Builder tasks = PersistentTasksCustomMetadata.builder(clusterState.metadata().custom(PersistentTasksCustomMetadata.TYPE))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ClusterState initialState = initialState()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertThat(tasksInProgress,notNullValue())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "{PersistentTasksCustomMetadata tasksInProgress = newClusterState.getMetadata().custom(PersistentTasksCustomMetadata.TYPE)assertThat(tasksInProgress,notNullValue())for (PersistentTask<?> task : tasksInProgress.tasks()){assertThat(task.getExecutorNode(),nullValue())assertThat(task.isAssigned(),equalTo(false))assertThat(task.getAssignment().getExplanation(),equalTo(shouldSimulateFailure? \"explanation: assign_based_on_non_cluster_state_condition\": \"non-cluster state condition prevents assignment\"))}assertThat(tasksInProgress.tasks().size(),equalTo(1))}@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "clusterState = builder.metadata(metadata).nodes(nodes).build()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(tasksInProgress,notNullValue())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testNonClusterStateConditionAssignment['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "PersistentTasksCustomMetadata.Builder tasks = PersistentTasksCustomMetadata.builder(initialState.metadata().custom(PersistentTasksCustomMetadata.TYPE))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ClusterService recheckTestClusterService = createRecheckTestClusterService(clusterState,shouldSimulateFailure)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "addTestNodes(nodes,randomIntBetween(1,3))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Metadata.Builder metadata = Metadata.builder(initialState.metadata()).putCustom(PersistentTasksCustomMetadata.TYPE,tasks.build())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "service.clusterChanged(event)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DiscoveryNodes.Builder nodes = DiscoveryNodes.builder(initialState.nodes())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "PersistentTasksClusterService service = createService(recheckTestClusterService,null)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertBusy(null)@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testPeriodicRecheck['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "ClusterState.Builder builder = ClusterState.builder(clusterState)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertThat(task.getExecutorNode(),notNullValue())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(tasksInProgress.tasks().size(),equalTo(1))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertThat(task.getAssignment().getExplanation(),equalTo(\"test assignment\"))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ClusterState.Builder builder = ClusterState.builder(initialState)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->8 [style = bold, label=""];
4->10 [style = bold, label=""];
42->23 [style = bold, label=""];
1->37 [style = dashed, label="0"];
0->11 [style = solid, label="tasks"];
25->33 [style = bold, label=""];
35->6 [style = bold, label=""];
8->19 [style = bold, label=""];
2->13 [style = solid, label="event"];
6->18 [style = bold, label=""];
28->39 [style = bold, label=""];
27->28 [style = bold, label=""];
32->36 [style = solid, label="clusterState"];
11->6 [style = bold, label=""];
9->28 [style = dashed, label="0"];
12->15 [style = bold, label=""];
17->4 [style = solid, label="clusterState"];
0->12 [style = solid, label="tasks"];
22->41 [style = bold, label=""];
9->3 [style = solid, label="initialState"];
39->26 [style = solid, label="builder"];
6->42 [style = bold, label=""];
36->30 [style = solid, label="newClusterState"];
0->26 [style = dashed, label="0"];
15->29 [style = dashed, label="0"];
17->32 [style = dashed, label="0"];
3->39 [style = dashed, label="0"];
40->38 [style = bold, label=""];
19->4 [style = solid, label="shouldSimulateFailure"];
39->26 [style = bold, label=""];
3->0 [style = bold, label=""];
31->34 [style = bold, label=""];
9->2 [style = solid, label="initialState"];
2->13 [style = bold, label=""];
24->25 [style = solid, label="tasksInProgress"];
17->2 [style = solid, label="clusterState"];
20->2 [style = bold, label=""];
7->9 [style = bold, label=""];
19->11 [style = solid, label="shouldSimulateFailure"];
42->35 [style = bold, label=""];
3->0 [style = solid, label="builder"];
37->14 [style = bold, label=""];
15->17 [style = bold, label=""];
8->36 [style = bold, label=""];
21->9 [style = bold, label=""];
32->8 [style = bold, label=""];
12->29 [style = bold, label=""];
36->24 [style = bold, label=""];
1->14 [style = solid, label="nodes"];
33->40 [style = bold, label=""];
41->30 [style = bold, label=""];
28->39 [style = solid, label="clusterState"];
26->12 [style = solid, label="tasks"];
31->34 [style = solid, label="tasksInProgress"];
0->1 [style = bold, label=""];
29->32 [style = bold, label=""];
24->25 [style = bold, label=""];
14->12 [style = bold, label=""];
30->31 [style = bold, label=""];
37->14 [style = solid, label="nodes"];
4->20 [style = bold, label=""];
4->10 [style = solid, label="recheckTestClusterService"];
13->5 [style = bold, label=""];
9->3 [style = bold, label=""];
26->37 [style = bold, label=""];
10->20 [style = dashed, label="0"];
1->14 [style = bold, label=""];
10->2 [style = bold, label=""];
5->11 [style = bold, label=""];
19->4 [style = bold, label=""];
34->35 [style = bold, label=""];
4->20 [style = solid, label="recheckTestClusterService"];
38->22 [style = bold, label=""];
38->33 [style = bold, label=""];
3->1 [style = solid, label="builder"];
39->37 [style = solid, label="builder"];
18->16 [style = bold, label=""];
}
