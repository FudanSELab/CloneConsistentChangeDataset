digraph {
34 [style = filled, label = "accessor.removeProperty(liveInstanceKey)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "handleMessage(_initialMaster,_db)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(messages.get(0).getTgtName(),secondMaster)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getRelayMessages().entrySet().size(),1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "currentState.setPreviousState(_partition.getPartitionName(),MasterSlaveSMD.States.MASTER.name())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "accessor.setProperty(currentStateKey,currentState)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(messages.get(0).getToState(),MasterSlaveSMD.States.MASTER.name())@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertEquals(messages.get(0).getToState(),MasterSlaveSMD.States.MASTER.name())@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "String session = _dataCache.getLiveInstances().get(_initialMaster).getEphemeralOwner()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "reset(_initialStateMap)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(messages.get(0).getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "messages = getMessages(thirdMaster)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "messages = getMessages(secondMaster)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "_fullPipeline.handle(event)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "PropertyKey messageKey = new PropertyKey.Builder(_clusterName).message(_initialMaster,messages.get(0).getMsgId())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "PropertyKey liveInstanceKey = new PropertyKey.Builder(_clusterName).liveInstance(secondMaster)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(relayMessage.getMsgSubType(),Message.MessageType.RELAYED_MESSAGE.name())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "CurrentState currentState = accessor.getProperty(currentStateKey)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "_fullPipeline.handle(event)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "_dataCache.notifyDataChange(HelixConstants.ChangeType.INSTANCE_CONFIG)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String thirdMaster = getTopStateInstance(bestpossibleState.getInstanceStateMap(_db,_partition),MasterSlaveSMD.States.MASTER.name())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String secondMaster = getTopStateInstance(bestpossibleState.getInstanceStateMap(_db,_partition),MasterSlaveSMD.States.MASTER.name())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testP2PWithErrorState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "List<Message> messages = getMessages(_initialMaster)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Message relayMessage = toSlaveMessage.getRelayMessage(secondMaster)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "currentState.setEndTime(_partition.getPartitionName(),System.currentTimeMillis())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ResourcesStateMap bestpossibleState = event.getAttribute(AttributeName.INTERMEDIATE_STATE.name())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(secondMaster != thirdMaster)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(relayMessage.getTgtName(),secondMaster)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Message toSlaveMessage = messages.get(0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(messages.get(0).getTgtName(),thirdMaster)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testP2PWithErrorState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "accessor.removeProperty(messageKey)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "_dataCache.requireFullRefresh()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "bestpossibleState = event.getAttribute(AttributeName.INTERMEDIATE_STATE.name())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String session = _dataCache.getLiveInstances().get(_initialMaster).getSessionId()@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "currentState.setState(_partition.getPartitionName(),HelixDefinedState.ERROR.name())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testP2PWithInstanceOffline['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "_fullPipeline.handle(event)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(messages.get(0).getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "admin.enableInstance(_clusterName,_initialMaster,false)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "PropertyKey currentStateKey = new PropertyKey.Builder(_clusterName).currentState(_initialMaster,session,_db)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->22 [style = bold, label=""];
27->32 [style = solid, label="thirdMaster"];
27->18 [style = bold, label=""];
32->45 [style = bold, label=""];
9->11 [style = solid, label="secondMaster"];
44->8 [style = bold, label=""];
46->34 [style = bold, label=""];
24->2 [style = bold, label=""];
3->1 [style = bold, label=""];
25->13 [style = bold, label=""];
26->3 [style = bold, label=""];
9->18 [style = solid, label="secondMaster"];
11->6 [style = bold, label=""];
34->47 [style = bold, label=""];
18->15 [style = bold, label=""];
45->36 [style = bold, label=""];
6->28 [style = solid, label="session"];
38->27 [style = bold, label=""];
6->31 [style = dashed, label="0"];
0->29 [style = bold, label=""];
47->37 [style = bold, label=""];
15->19 [style = bold, label=""];
14->44 [style = bold, label=""];
36->39 [style = bold, label=""];
31->28 [style = solid, label="session"];
46->34 [style = solid, label="liveInstanceKey"];
4->0 [style = bold, label=""];
1->11 [style = bold, label=""];
19->16 [style = bold, label=""];
42->35 [style = bold, label=""];
40->46 [style = bold, label=""];
9->26 [style = bold, label=""];
28->10 [style = solid, label="currentStateKey"];
5->21 [style = bold, label=""];
11->31 [style = bold, label=""];
35->40 [style = bold, label=""];
9->35 [style = solid, label="secondMaster"];
23->24 [style = bold, label=""];
7->5 [style = bold, label=""];
26->3 [style = solid, label="relayMessage"];
22->12 [style = solid, label="messageKey"];
9->46 [style = solid, label="secondMaster"];
43->5 [style = bold, label=""];
30->5 [style = bold, label=""];
19->36 [style = dashed, label="0"];
22->12 [style = bold, label=""];
33->42 [style = bold, label=""];
37->38 [style = bold, label=""];
28->17 [style = solid, label="currentStateKey"];
17->10 [style = solid, label="currentState"];
9->19 [style = solid, label="secondMaster"];
8->9 [style = bold, label=""];
18->32 [style = bold, label=""];
11->33 [style = bold, label=""];
28->17 [style = bold, label=""];
29->10 [style = bold, label=""];
39->41 [style = bold, label=""];
9->26 [style = solid, label="secondMaster"];
14->8 [style = bold, label=""];
31->28 [style = bold, label=""];
2->25 [style = bold, label=""];
16->20 [style = bold, label=""];
13->14 [style = bold, label=""];
12->27 [style = bold, label=""];
27->18 [style = solid, label="thirdMaster"];
17->4 [style = bold, label=""];
27->36 [style = solid, label="thirdMaster"];
6->28 [style = bold, label=""];
21->23 [style = bold, label=""];
}
