digraph {
18 [style = filled, label = "return null@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int ordinal@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final int months = (int)Platform.getLong(baseObject,baseOffset + offset)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final long microseconds = Platform.getLong(baseObject,baseOffset + offset + 8)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final int offset = (int)(offsetAndSize >> 32)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "getInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "isNullAt(ordinal)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return new CalendarInterval(months,microseconds)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final int offset = (int)(offsetAndSize >> 32)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "return null@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "isNullAt(ordinal)@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertIndexIsValid(ordinal)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "final long microseconds = Platform.getLong(baseObject,baseOffset + offset + 8)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final long offsetAndSize = getLong(ordinal)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final int months = (int)Platform.getLong(baseObject,baseOffset + offset)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "offset < 0@@@5@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "getInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final long offsetAndSize = getLong(ordinal)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final int offset = getElementOffset(ordinal)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "return new CalendarInterval(months,microseconds)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "getInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return null@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
13->10 [style = bold, label=""];
14->16 [style = bold, label=""];
16->15 [style = bold, label=""];
19->18 [style = bold, label=""];
5->12 [style = dashed, label="0"];
2->19 [style = dashed, label="0"];
4->8 [style = solid, label="microseconds"];
7->2 [style = solid, label="ordinal"];
3->8 [style = solid, label="months"];
19->14 [style = dotted, label="false"];
5->1 [style = dotted, label="true"];
7->0 [style = solid, label="ordinal"];
19->18 [style = dotted, label="true"];
14->15 [style = solid, label="offset"];
7->9 [style = solid, label="ordinal"];
1->3 [style = bold, label=""];
19->15 [style = dotted, label="false"];
16->17 [style = solid, label="months"];
15->17 [style = solid, label="microseconds"];
13->7 [style = dotted, label="true"];
19->17 [style = dotted, label="false"];
0->5 [style = solid, label="offset"];
20->7 [style = dotted, label="true"];
11->9 [style = bold, label=""];
7->19 [style = solid, label="ordinal"];
3->4 [style = bold, label=""];
7->21 [style = solid, label="ordinal"];
9->12 [style = solid, label="offsetAndSize"];
12->3 [style = solid, label="offset"];
12->4 [style = solid, label="offset"];
6->2 [style = bold, label=""];
5->1 [style = bold, label=""];
7->10 [style = solid, label="ordinal"];
15->17 [style = bold, label=""];
2->0 [style = bold, label=""];
10->11 [style = bold, label=""];
19->16 [style = dotted, label="false"];
10->11 [style = dotted, label="true"];
0->3 [style = solid, label="offset"];
21->14 [style = bold, label=""];
19->21 [style = dotted, label="false"];
6->7 [style = dotted, label="true"];
4->8 [style = bold, label=""];
2->11 [style = dashed, label="0"];
10->9 [style = bold, label=""];
12->3 [style = bold, label=""];
9->12 [style = bold, label=""];
0->9 [style = dashed, label="0"];
14->16 [style = solid, label="offset"];
20->19 [style = bold, label=""];
0->5 [style = bold, label=""];
0->4 [style = solid, label="offset"];
21->14 [style = solid, label="offsetAndSize"];
19->21 [style = bold, label=""];
}
