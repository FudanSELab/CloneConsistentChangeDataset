digraph {
9 [style = filled, label = "assertEquals(\"testDistPath\",wrapper.getConfiguration().getDistributionPath())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "loadWrapperMetadataFromFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertEquals(\"testDistBase\",wrapper.getConfiguration().getDistributionBase())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertEquals(Installer.DEFAULT_DISTRIBUTION_PATH,wrapper.getConfiguration().getDistributionPath())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(\"testZipPath\",wrapper.getConfiguration().getZipPath())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"testZipBase\",wrapper.getConfiguration().getZipBase())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(\"testZipBase\",wrapper.getConfiguration().getZipBase())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "useDefaultMetadataNoProeprtiesFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "WrapperExecutor wrapper = WrapperExecutor.forWrapperPropertiesFile(propertiesFile)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "WrapperExecutor wrapper = WrapperExecutor.forProjectDirectory(testDir.getRoot().toPath().resolve(\"unknown\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(\"testDistBase\",wrapper.getConfiguration().getDistributionBase())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(new URI(\"http://server/test/maven.zip\"),wrapper.getConfiguration().getDistribution())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Assert.assertEquals(new URI(\"http://server/test/maven.zip\"),wrapper.getDistribution())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(new URI(\"http://server/test/maven.zip\"),wrapper.getConfiguration().getDistribution())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(Installer.DEFAULT_DISTRIBUTION_PATH,wrapper.getConfiguration().getZipPath())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(\"testZipPath\",wrapper.getConfiguration().getZipPath())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "loadWrapperMetadataFromFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(\"testDistPath\",wrapper.getConfiguration().getDistributionPath())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(new URI(\"http://server/test/maven.zip\"),wrapper.getDistribution())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Assert.assertEquals(PathAssembler.MAVEN_USER_HOME_STRING,wrapper.getConfiguration().getDistributionBase())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(PathAssembler.MAVEN_USER_HOME_STRING,wrapper.getConfiguration().getZipBase())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertNull(wrapper.getDistribution())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertNull(wrapper.getConfiguration().getDistribution())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->21 [style = dashed, label="0"];
4->3 [style = bold, label=""];
5->12 [style = dashed, label="0"];
7->14 [style = dashed, label="0"];
18->15 [style = bold, label=""];
0->15 [style = dashed, label="0"];
11->12 [style = bold, label=""];
15->19 [style = bold, label=""];
12->9 [style = bold, label=""];
2->17 [style = dashed, label="0"];
5->18 [style = dashed, label="0"];
10->6 [style = bold, label=""];
19->16 [style = bold, label=""];
20->21 [style = bold, label=""];
6->14 [style = bold, label=""];
1->6 [style = bold, label=""];
5->0 [style = bold, label=""];
0->4 [style = bold, label=""];
21->22 [style = bold, label=""];
7->2 [style = bold, label=""];
22->17 [style = bold, label=""];
3->8 [style = dashed, label="0"];
2->11 [style = dashed, label="0"];
4->19 [style = dashed, label="0"];
0->9 [style = dashed, label="0"];
13->8 [style = bold, label=""];
6->7 [style = bold, label=""];
4->13 [style = dashed, label="0"];
14->11 [style = bold, label=""];
7->22 [style = dashed, label="0"];
17->18 [style = bold, label=""];
3->16 [style = dashed, label="0"];
2->5 [style = bold, label=""];
9->13 [style = bold, label=""];
}
