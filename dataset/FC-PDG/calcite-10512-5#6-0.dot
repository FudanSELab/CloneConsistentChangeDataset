digraph {
20 [style = filled, label = "types.add(type)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "return protoRowType.apply(typeFactory)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "throw new RuntimeException(\"Couldn't read \" + source,e)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "jsonFieldMap = (LinkedHashMap)list.get(0)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "list.add(0,jsonObj)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final List<RelDataType> types = new ArrayList<RelDataType>(jsonFieldMap.size())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "!e.getMessage().contains(\"No content\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "names.add(key.toString())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "return typeFactory.createStructType(Pair.zip(names,types))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final List<String> names = new ArrayList<String>(jsonFieldMap.size())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "RelDataTypeFactory typeFactory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "types.add(type)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "getRowType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "throw new RuntimeException(\"Couldn't read \" + source,e)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final RelDataType type = typeFactory.createJavaType(allFields.get(key).getClass())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "jsonFieldMap = (LinkedHashMap)jsonObj@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "jsonObj = objectMapper.readValue(source.file(),)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "jsonFieldMap = (LinkedHashMap)(list.get(0))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Exception e@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final List<String> names = new ArrayList<String>(allFields.size())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "RelDataTypeFactory typeFactory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "LinkedHashMap<String,Object> jsonFieldMap = new LinkedHashMap<>(1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Source source@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "RelDataTypeFactory typeFactory@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "deduceRowType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "protoRowType != null@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "jsonFieldMap.put(\"line\",jsonObj)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final RelDataType type = typeFactory.createJavaType(jsonFieldMap.get(key).getClass())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "jsonFieldMap.put(\"EmptyFileHasNoColumns\",Boolean.TRUE)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "jsonObj = objectMapper.readValue(source.url(),)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "return new JsonDataConverter(relDataType,list)@@@52@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Arrays.asList(\"http\",\"https\",\"ftp\").contains(source.protocol())@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "\"file\".equals(source.protocol()) && source.file().exists()@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "list = new ArrayList(((LinkedHashMap)jsonObj).values())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<Object> list@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Object jsonObj = null@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final ObjectMapper objectMapper = new ObjectMapper()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "jsonObj instanceof Map@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "MismatchedInputException e@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "jsonObj == null@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "objectMapper.configure(JsonParser.Feature.ALLOW_UNQUOTED_FIELD_NAMES,true).configure(JsonParser.Feature.ALLOW_SINGLE_QUOTES,true).configure(JsonParser.Feature.ALLOW_COMMENTS,true)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "list = new ArrayList<>()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "names.add(key.toString())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "list = (List<Object>)jsonObj@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "jsonObj instanceof Collection@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "deduceRowType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "final List<RelDataType> types = new ArrayList<RelDataType>(allFields.size())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "RelDataType relDataType = typeFactory.createStructType(Pair.zip(names,types))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "list = new ArrayList<>()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "jsonObj = objectMapper.readValue(source.reader(),)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->39 [style = dashed, label="0"];
25->22 [style = bold, label=""];
7->30 [style = bold, label=""];
43->42 [style = bold, label=""];
18->30 [style = bold, label=""];
14->27 [style = solid, label="names"];
10->32 [style = bold, label=""];
34->33 [style = solid, label="list"];
0->6 [style = dotted, label="true"];
2->18 [style = dotted, label="true"];
1->13 [style = bold, label=""];
21->2 [style = bold, label=""];
24->30 [style = bold, label=""];
20->27 [style = bold, label=""];
47->49 [style = bold, label=""];
44->46 [style = bold, label=""];
42->44 [style = bold, label=""];
8->20 [style = bold, label=""];
35->22 [style = solid, label="jsonObj"];
48->43 [style = bold, label=""];
6->11 [style = bold, label=""];
12->20 [style = solid, label="type"];
27->33 [style = bold, label=""];
26->28 [style = bold, label=""];
5->30 [style = bold, label=""];
35->30 [style = solid, label="jsonObj"];
27->45 [style = dashed, label="0"];
43->44 [style = bold, label=""];
0->11 [style = dotted, label="true"];
30->25 [style = dotted, label="false"];
28->36 [style = bold, label=""];
23->5 [style = dotted, label="false"];
5->0 [style = solid, label="jsonObj"];
35->6 [style = solid, label="jsonObj"];
15->24 [style = dotted, label="true"];
36->31 [style = bold, label=""];
22->9 [style = bold, label=""];
9->32 [style = bold, label=""];
16->26 [style = bold, label=""];
2->18 [style = bold, label=""];
40->42 [style = solid, label="typeFactory"];
30->34 [style = bold, label=""];
5->1 [style = solid, label="jsonObj"];
46->41 [style = bold, label=""];
23->35 [style = bold, label=""];
27->33 [style = solid, label="relDataType"];
35->1 [style = solid, label="jsonObj"];
7->30 [style = solid, label="jsonObj"];
5->10 [style = solid, label="jsonObj"];
49->41 [style = bold, label=""];
46->45 [style = solid, label="names"];
0->13 [style = dotted, label="false"];
22->33 [style = solid, label="list"];
29->16 [style = bold, label=""];
25->0 [style = bold, label=""];
38->37 [style = dotted, label="true"];
13->10 [style = bold, label=""];
49->45 [style = bold, label=""];
29->17 [style = dotted, label="true"];
23->5 [style = bold, label=""];
5->6 [style = solid, label="jsonObj"];
5->22 [style = solid, label="jsonObj"];
35->10 [style = solid, label="jsonObj"];
38->16 [style = bold, label=""];
19->23 [style = dotted, label="false"];
32->14 [style = bold, label=""];
21->2 [style = dotted, label="true"];
30->4 [style = dotted, label="true"];
11->32 [style = bold, label=""];
7->25 [style = solid, label="jsonObj"];
44->45 [style = solid, label="types"];
35->0 [style = solid, label="jsonObj"];
19->7 [style = dotted, label="true"];
25->39 [style = dotted, label="true"];
48->40 [style = dotted, label="true"];
30->34 [style = dotted, label="true"];
7->10 [style = solid, label="jsonObj"];
7->1 [style = solid, label="jsonObj"];
12->8 [style = bold, label=""];
0->1 [style = bold, label=""];
39->32 [style = bold, label=""];
23->35 [style = dotted, label="true"];
25->0 [style = dotted, label="false"];
22->39 [style = bold, label=""];
41->47 [style = bold, label=""];
35->30 [style = bold, label=""];
29->3 [style = dotted, label="true"];
31->19 [style = bold, label=""];
7->0 [style = solid, label="jsonObj"];
0->10 [style = dotted, label="false"];
11->33 [style = solid, label="list"];
0->6 [style = bold, label=""];
41->49 [style = solid, label="type"];
30->25 [style = bold, label=""];
5->30 [style = solid, label="jsonObj"];
0->1 [style = dotted, label="false"];
43->42 [style = dotted, label="true"];
32->27 [style = solid, label="types"];
13->33 [style = solid, label="list"];
7->22 [style = solid, label="jsonObj"];
7->6 [style = solid, label="jsonObj"];
25->9 [style = dotted, label="true"];
17->40 [style = dashed, label="0"];
19->23 [style = bold, label=""];
15->24 [style = bold, label=""];
14->12 [style = bold, label=""];
38->17 [style = dotted, label="true"];
20->12 [style = bold, label=""];
25->22 [style = dotted, label="true"];
34->4 [style = bold, label=""];
2->30 [style = bold, label=""];
19->7 [style = bold, label=""];
5->25 [style = solid, label="jsonObj"];
4->32 [style = bold, label=""];
35->25 [style = solid, label="jsonObj"];
}
