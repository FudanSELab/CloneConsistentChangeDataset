digraph {
15 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_SAVE_PASSWORD,dataSource.isSavePassword())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_SHOW_SYSTEM_OBJECTS,dataSource.isShowSystemObjects())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "{SimplePreferenceStore prefStore = dataSource.getPreferenceStore()Map<String,String> props = new TreeMap<>()for (String propName : prefStore.preferenceNames()){String propValue = prefStore.getString(propName)String defValue = prefStore.getDefaultString(propName)if (propValue != null && !CommonUtils.equalObjects(propValue,defValue)) {props.put(propName,propValue)}}if (!props.isEmpty()) {JSONUtils.serializeProperties(json,RegistryConstants.TAG_CUSTOM_PROPERTIES,props)}}@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "dataSource.getFolder() != null@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "JSONUtils.serializeStringList(json,RegistryConstants.TAG_INCLUDE,filter.getInclude())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "JSONUtils.field(json,\"virtual-model-id\",dataSource.getVirtualModel().getId())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "JSONUtils.fieldNE(json,RegistryConstants.TAG_DESCRIPTION,dataSource.getDescription())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final String lockPasswordHash = dataSource.getLockPasswordHash()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String objectID@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "JSONUtils.fieldNE(json,RegistryConstants.ATTR_NAME,filter.getName())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "JSONUtils.fieldNE(json,RegistryConstants.ATTR_DESCRIPTION,filter.getDescription())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "{Collection<FilterMapping> filterMappings = dataSource.getObjectFilters()if (!CommonUtils.isEmpty(filterMappings)) {json.name(RegistryConstants.TAG_FILTERS)json.beginArray()for (FilterMapping filter : filterMappings){if (filter.defaultFilter != null && !filter.defaultFilter.isEmpty()) {saveObjectFiler(json,filter.typeName,null,filter.defaultFilter)}for (Map.Entry<String,DBSObjectFilter> cf : filter.customFilters.entrySet()){if (!cf.getValue().isEmpty()) {saveObjectFiler(json,filter.typeName,cf.getKey(),cf.getValue())}}}json.endArray()}}@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_READ_ONLY,dataSource.isConnectionReadOnly())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "JSONUtils.fieldNE(json,RegistryConstants.ATTR_TYPE,typeName)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "saveObjectFiler['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_LOCK_PASSWORD,lockPasswordHash)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "saveDataSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "!CommonUtils.isEmpty(lockPasswordHash)@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "!filter.isEnabled()@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "DataSourceDescriptor dataSource@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_DRIVER,dataSource.getDriver().getId())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "json.name(dataSource.getId())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "dataSource.isShowUtilityObjects()@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "DBSObjectFilter filter@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "saveDataSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_NAME,dataSource.getName())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DataSourceDescriptor dataSource@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "dataSource.isShowSystemObjects()@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String typeName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "json.beginObject()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "JsonWriter json@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "JSONUtils.serializeStringList(json,RegistryConstants.TAG_EXCLUDE,filter.getExclude())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_PROVIDER,dataSource.getDriver().getProviderDescriptor().getId())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "{DBPConnectionConfiguration connectionInfo = dataSource.getConnectionConfiguration()json.name(\"configuration\")json.beginObject()JSONUtils.fieldNE(json,RegistryConstants.ATTR_HOST,connectionInfo.getHostName())JSONUtils.fieldNE(json,RegistryConstants.ATTR_PORT,connectionInfo.getHostPort())JSONUtils.fieldNE(json,RegistryConstants.ATTR_SERVER,connectionInfo.getServerName())JSONUtils.fieldNE(json,RegistryConstants.ATTR_DATABASE,connectionInfo.getDatabaseName())JSONUtils.fieldNE(json,RegistryConstants.ATTR_URL,connectionInfo.getUrl())saveSecuredCredentials(json,dataSource,null,connectionInfo.getUserName(),dataSource.isSavePassword()? connectionInfo.getUserPassword(): null)JSONUtils.fieldNE(json,RegistryConstants.ATTR_HOME,connectionInfo.getClientHomeId())if (connectionInfo.getConnectionType() != null) {JSONUtils.field(json,RegistryConstants.ATTR_TYPE,connectionInfo.getConnectionType().getId())}JSONUtils.fieldNE(json,RegistryConstants.ATTR_COLOR,connectionInfo.getConnectionColor())if (connectionInfo.getKeepAliveInterval() > 0) {JSONUtils.field(json,RegistryConstants.ATTR_KEEP_ALIVE,connectionInfo.getKeepAliveInterval())}JSONUtils.serializeProperties(json,RegistryConstants.TAG_PROPERTIES,connectionInfo.getProperties())JSONUtils.serializeProperties(json,RegistryConstants.TAG_PROVIDER_PROPERTIES,connectionInfo.getProviderProperties())if (!ArrayUtils.isEmpty(connectionInfo.getDeclaredEvents())) {json.name(RegistryConstants.TAG_EVENTS)json.beginObject()for (DBPConnectionEventType eventType : connectionInfo.getDeclaredEvents()){DBRShellCommand command = connectionInfo.getEvent(eventType)json.name(eventType.name())json.beginObject()JSONUtils.field(json,RegistryConstants.ATTR_ENABLED,command.isEnabled())JSONUtils.field(json,RegistryConstants.ATTR_SHOW_PANEL,command.isShowProcessPanel())JSONUtils.field(json,RegistryConstants.ATTR_WAIT_PROCESS,command.isWaitProcessFinish())if (command.isWaitProcessFinish()) {JSONUtils.field(json,RegistryConstants.ATTR_WAIT_PROCESS_TIMEOUT,command.getWaitProcessTimeoutMs())}JSONUtils.field(json,RegistryConstants.ATTR_TERMINATE_AT_DISCONNECT,command.isTerminateAtDisconnect())JSONUtils.field(json,RegistryConstants.ATTR_PAUSE_AFTER_EXECUTE,command.getPauseAfterExecute())JSONUtils.fieldNE(json,RegistryConstants.ATTR_WORKING_DIRECTORY,command.getWorkingDirectory())JSONUtils.fieldNE(json,RegistryConstants.ATTR_COMMAND,command.getCommand())json.endObject()}json.endObject()}if (!CommonUtils.isEmpty(connectionInfo.getDeclaredHandlers())) {json.name(RegistryConstants.TAG_HANDLERS)json.beginObject()for (DBWHandlerConfiguration configuration : connectionInfo.getDeclaredHandlers()){json.name(CommonUtils.notEmpty(configuration.getId()))json.beginObject()JSONUtils.field(json,RegistryConstants.ATTR_TYPE,configuration.getType().name())JSONUtils.field(json,RegistryConstants.ATTR_ENABLED,configuration.isEnabled())JSONUtils.field(json,RegistryConstants.ATTR_SAVE_PASSWORD,configuration.isSavePassword())if (!CommonUtils.isEmpty(configuration.getUserName())) {saveSecuredCredentials(json,dataSource,\"network/\" + configuration.getId(),configuration.getUserName(),configuration.isSavePassword()? configuration.getPassword(): null)}JSONUtils.serializeProperties(json,RegistryConstants.TAG_PROPERTIES,configuration.getProperties())json.endObject()}json.endObject()}{DBPConnectionBootstrap bootstrap = connectionInfo.getBootstrap()if (bootstrap.hasData()) {json.name(RegistryConstants.TAG_BOOTSTRAP)json.beginObject()if (bootstrap.getDefaultAutoCommit() != null) {JSONUtils.field(json,RegistryConstants.ATTR_AUTOCOMMIT,bootstrap.getDefaultAutoCommit())}if (bootstrap.getDefaultTransactionIsolation() != null) {JSONUtils.field(json,RegistryConstants.ATTR_TXN_ISOLATION,bootstrap.getDefaultTransactionIsolation())}JSONUtils.fieldNE(json,RegistryConstants.ATTR_DEFAULT_OBJECT,bootstrap.getDefaultObjectName())if (bootstrap.isIgnoreErrors()) {JSONUtils.field(json,RegistryConstants.ATTR_IGNORE_ERRORS,true)}JSONUtils.serializeStringList(json,RegistryConstants.TAG_QUERY,bootstrap.getInitQueries())json.endObject()}}json.endObject()}@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "json.endObject()@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "dataSource.hasSharedVirtualModel()@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_FOLDER,dataSource.getFolder().getFolderPath())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_ENABLED,false)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "JSONUtils.field(json,RegistryConstants.ATTR_SHOW_UTIL_OBJECTS,dataSource.isShowUtilityObjects())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "JSONUtils.fieldNE(json,RegistryConstants.ATTR_ID,objectID)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "json.endObject()@@@138@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JsonWriter json@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6->12 [style = solid, label="json"];
20->23 [style = bold, label=""];
25->9 [style = dotted, label="true"];
14->3 [style = bold, label=""];
20->10 [style = bold, label=""];
10->23 [style = bold, label=""];
6->16 [style = solid, label="json"];
12->1 [style = bold, label=""];
4->23 [style = solid, label="dataSource"];
17->4 [style = dotted, label="true"];
20->10 [style = dotted, label="true"];
33->13 [style = solid, label="objectID"];
11->19 [style = dotted, label="true"];
39->40 [style = solid, label="json"];
38->35 [style = bold, label=""];
17->8 [style = bold, label=""];
29->38 [style = bold, label=""];
6->19 [style = solid, label="json"];
26->6 [style = dotted, label="true"];
39->38 [style = solid, label="json"];
28->29 [style = bold, label=""];
11->20 [style = bold, label=""];
0->22 [style = bold, label=""];
39->35 [style = solid, label="json"];
13->31 [style = bold, label=""];
25->21 [style = bold, label=""];
6->0 [style = solid, label="json"];
32->31 [style = solid, label="typeName"];
7->12 [style = bold, label=""];
36->33 [style = dotted, label="true"];
6->14 [style = solid, label="json"];
25->9 [style = bold, label=""];
6->3 [style = solid, label="json"];
2->24 [style = bold, label=""];
30->28 [style = bold, label=""];
2->16 [style = bold, label=""];
22->28 [style = dashed, label="0"];
24->25 [style = bold, label=""];
16->35 [style = dashed, label="0"];
39->31 [style = solid, label="json"];
34->13 [style = bold, label=""];
21->11 [style = bold, label=""];
6->9 [style = solid, label="json"];
6->15 [style = solid, label="json"];
27->23 [style = solid, label="dataSource"];
26->8 [style = bold, label=""];
6->23 [style = solid, label="json"];
35->41 [style = bold, label=""];
21->19 [style = solid, label="lockPasswordHash"];
15->18 [style = bold, label=""];
6->7 [style = solid, label="json"];
3->31 [style = dashed, label="0"];
2->16 [style = dotted, label="true"];
6->24 [style = solid, label="json"];
6->39 [style = dashed, label="0"];
36->39 [style = dotted, label="true"];
11->19 [style = bold, label=""];
6->10 [style = solid, label="json"];
14->13 [style = dashed, label="0"];
8->13 [style = bold, label=""];
31->30 [style = bold, label=""];
6->5 [style = solid, label="json"];
29->40 [style = bold, label=""];
5->2 [style = bold, label=""];
40->38 [style = bold, label=""];
16->24 [style = bold, label=""];
18->2 [style = bold, label=""];
18->5 [style = dotted, label="true"];
36->32 [style = dotted, label="true"];
19->20 [style = bold, label=""];
18->5 [style = bold, label=""];
39->30 [style = solid, label="json"];
29->40 [style = dotted, label="true"];
9->21 [style = bold, label=""];
22->15 [style = bold, label=""];
39->28 [style = solid, label="json"];
36->37 [style = dotted, label="true"];
36->34 [style = bold, label=""];
0->30 [style = dashed, label="0"];
3->0 [style = bold, label=""];
23->7 [style = bold, label=""];
17->6 [style = dotted, label="true"];
26->27 [style = dotted, label="true"];
13->14 [style = bold, label=""];
6->22 [style = solid, label="json"];
39->13 [style = solid, label="json"];
}
