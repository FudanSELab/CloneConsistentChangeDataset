digraph {
12 [style = filled, label = "testThroughputMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final String operation = \"put\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "streamsMetrics.removeSensor(sensor1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testThroughputMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(defaultMetrics,streamsMetrics.metrics().size())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "streamsMetrics.removeSensor(sensor1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final int otherMetricsCount = 4@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(defaultMetrics + meterMetricsCount * 2 + otherMetricsCount,streamsMetrics.metrics().size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String scope = \"scope\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final int defaultMetrics = streamsMetrics.metrics().size()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(defaultMetrics + meterMetricsCount,streamsMetrics.metrics().size())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testLatencyMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final Sensor sensor1 = streamsMetrics.addThroughputSensor(scope,entity,operation,RecordingLevel.DEBUG)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(defaultMetrics + meterMetricsCount * 2,streamsMetrics.metrics().size())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "final Sensor sensor1 = streamsMetrics.addRateTotalSensor(scope,entity,operation,RecordingLevel.DEBUG)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final Sensor sensor1 = streamsMetrics.addLatencyAndThroughputSensor(scope,entity,operation,RecordingLevel.DEBUG)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final int meterMetricsCount = 2@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String entity = \"entity\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
15->2 [style = bold, label=""];
8->11 [style = solid, label="operation"];
11->5 [style = solid, label="sensor1"];
8->15 [style = bold, label=""];
2->10 [style = solid, label="meterMetricsCount"];
4->14 [style = solid, label="defaultMetrics"];
9->2 [style = bold, label=""];
8->9 [style = solid, label="operation"];
7->8 [style = bold, label=""];
2->10 [style = bold, label=""];
7->9 [style = solid, label="entity"];
11->2 [style = bold, label=""];
4->16 [style = solid, label="defaultMetrics"];
4->6 [style = solid, label="defaultMetrics"];
0->10 [style = dashed, label="0"];
2->13 [style = bold, label=""];
13->14 [style = solid, label="otherMetricsCount"];
2->0 [style = bold, label=""];
2->14 [style = solid, label="meterMetricsCount"];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
3->9 [style = solid, label="scope"];
12->4 [style = bold, label=""];
3->7 [style = bold, label=""];
4->10 [style = solid, label="defaultMetrics"];
9->15 [style = dashed, label="0"];
6->16 [style = bold, label=""];
15->6 [style = solid, label="sensor1"];
3->15 [style = solid, label="scope"];
7->15 [style = solid, label="entity"];
8->9 [style = bold, label=""];
9->11 [style = dashed, label="0"];
7->11 [style = solid, label="entity"];
8->11 [style = bold, label=""];
2->0 [style = solid, label="meterMetricsCount"];
13->14 [style = bold, label=""];
8->15 [style = solid, label="operation"];
14->6 [style = bold, label=""];
17->4 [style = bold, label=""];
9->5 [style = solid, label="sensor1"];
3->11 [style = solid, label="scope"];
0->5 [style = bold, label=""];
4->0 [style = solid, label="defaultMetrics"];
}
