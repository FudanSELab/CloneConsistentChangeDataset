digraph {
33 [style = filled, label = "Account owner = accountDao.findById(kubernetesCluster.getAccountId())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "k8sNodeConfig = getKubernetesNodeConfig(joinIp,Hypervisor.HypervisorType.VMware.equals(clusterTemplate.getHypervisorType()))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "LOGGER.isInfoEnabled()@@@25@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "UserVm additionalControlVm = null@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "LOGGER.info(String.format(\"Created control VM ID : %s, %s in the Kubernetes cluster : %s\",additionalControlVm.getUuid(),hostName,kubernetesCluster.getName()))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String hostName = getKubernetesClusterNodeAvailableName(String.format(\"%s-control-%d\",kubernetesClusterNodeNamePrefix,additionalControlNodeInstance + 1))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "LOGGER.info(String.format(\"Created node VM : %s, %s in the Kubernetes cluster : %s\",hostName,nodeVm.getUuid(),kubernetesCluster.getName()))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "createKubernetesAdditionalControlNode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "long rootDiskSize = kubernetesCluster.getNodeRootDiskSize()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Map<String,String> customParameterMap = new HashMap<String,String>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return additionalControlVm@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String base64UserData = Base64.encodeBase64String(k8sControlNodeConfig.getBytes(StringUtils.getPreferredCharset()))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "UserVm nodeVm = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Network.IpAddresses addrs = new Network.IpAddresses(null,null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "createKubernetesNode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final String joinIp@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "logAndThrow(Level.ERROR,\"Failed to read Kubernetes control configuration file\",e)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "networkIds.add(kubernetesCluster.getNetworkId())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String k8sNodeConfig = null@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "int nodeInstance@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "logAndThrow(Level.ERROR,\"Failed to read Kubernetes node configuration file\",e)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final String joinIp@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "String k8sControlNodeConfig = null@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "String base64UserData = Base64.encodeBase64String(k8sNodeConfig.getBytes(StringUtils.getPreferredCharset()))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<Long> networkIds = new ArrayList<Long>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String k8sControlConfig = null@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "return nodeVm@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "String hostName = getKubernetesClusterNodeAvailableName(String.format(\"%s-node-%s\",kubernetesClusterNodeNamePrefix,nodeInstance))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ServiceOffering serviceOffering = serviceOfferingDao.findById(kubernetesCluster.getServiceOfferingId())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "createKubernetesAdditionalControlNode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "customParameterMap.put(\"rootdisksize\",String.valueOf(rootDiskSize))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "nodeVm = userVmService.createAdvancedVirtualMachine(zone,serviceOffering,clusterTemplate,networkIds,owner,hostName,hostName,null,null,null,Hypervisor.HypervisorType.None,BaseCmd.HTTPMethod.POST,base64UserData,kubernetesCluster.getKeyPair(),null,addrs,null,null,null,customParameterMap,null,null,null,null,true)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "String joinIp@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "k8sControlNodeConfig = getKubernetesAdditionalControlNodeConfig(joinIp,Hypervisor.HypervisorType.VMware.equals(clusterTemplate.getHypervisorType()))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "rootDiskSize > 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "additionalControlVm = userVmService.createAdvancedVirtualMachine(zone,serviceOffering,clusterTemplate,networkIds,owner,hostName,hostName,null,null,null,Hypervisor.HypervisorType.None,BaseCmd.HTTPMethod.POST,base64UserData,kubernetesCluster.getKeyPair(),null,addrs,null,null,null,customParameterMap,null,null,null,null,true)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "k8sControlConfig = getKubernetesAdditionalControlConfig(joinIp,Hypervisor.HypervisorType.VMware.equals(clusterTemplate.getHypervisorType()))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "DataCenter zone = dataCenterDao.findById(kubernetesCluster.getZoneId())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "IOException e@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final int additionalControlNodeInstance@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String base64UserData = Base64.encodeBase64String(k8sControlConfig.getBytes(StringUtils.getPreferredCharset()))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3->40 [style = dashed, label="0"];
22->1 [style = solid, label="base64UserData"];
3->24 [style = bold, label=""];
7->30 [style = solid, label="addrs"];
36->28 [style = bold, label=""];
11->40 [style = dotted, label="true"];
8->6 [style = bold, label=""];
9->10 [style = bold, label=""];
40->38 [style = bold, label=""];
5->1 [style = solid, label="serviceOffering"];
34->39 [style = solid, label="joinIp"];
7->14 [style = bold, label=""];
15->17 [style = bold, label=""];
38->30 [style = bold, label=""];
15->0 [style = bold, label=""];
22->38 [style = dashed, label="0"];
39->38 [style = bold, label=""];
26->27 [style = solid, label="joinIp"];
12->1 [style = solid, label="customParameterMap"];
37->32 [style = bold, label=""];
25->10 [style = bold, label=""];
31->20 [style = bold, label=""];
17->36 [style = dashed, label="0"];
4->16 [style = bold, label=""];
25->21 [style = dotted, label="true"];
18->32 [style = dashed, label="0"];
33->7 [style = bold, label=""];
37->36 [style = solid, label="hostName"];
16->37 [style = dashed, label="0"];
20->1 [style = solid, label="zone"];
2->27 [style = dashed, label="0"];
10->31 [style = dashed, label="0"];
5->30 [style = solid, label="serviceOffering"];
9->21 [style = dotted, label="true"];
0->28 [style = dashed, label="0"];
13->16 [style = bold, label=""];
15->17 [style = dotted, label="true"];
4->13 [style = dotted, label="true"];
12->30 [style = solid, label="customParameterMap"];
13->37 [style = bold, label=""];
2->39 [style = dashed, label="0"];
6->7 [style = bold, label=""];
35->37 [style = solid, label="nodeInstance"];
25->26 [style = dotted, label="true"];
30->15 [style = bold, label=""];
15->36 [style = bold, label=""];
16->18 [style = bold, label=""];
29->34 [style = dotted, label="true"];
37->30 [style = solid, label="hostName"];
1->30 [style = dashed, label="0"];
16->17 [style = solid, label="hostName"];
4->13 [style = bold, label=""];
16->23 [style = bold, label=""];
22->24 [style = dashed, label="0"];
19->2 [style = solid, label="joinIp"];
20->30 [style = solid, label="zone"];
9->19 [style = dotted, label="true"];
17->0 [style = bold, label=""];
1->0 [style = solid, label="additionalControlVm"];
15->28 [style = bold, label=""];
11->3 [style = bold, label=""];
18->23 [style = dashed, label="0"];
6->33 [style = bold, label=""];
27->24 [style = bold, label=""];
32->39 [style = bold, label=""];
22->1 [style = bold, label=""];
24->1 [style = bold, label=""];
21->35 [style = dashed, label="0"];
14->13 [style = solid, label="rootDiskSize"];
16->1 [style = solid, label="hostName"];
11->3 [style = dotted, label="true"];
8->30 [style = solid, label="networkIds"];
8->1 [style = solid, label="networkIds"];
5->8 [style = bold, label=""];
10->20 [style = bold, label=""];
21->16 [style = solid, label="additionalControlNodeInstance"];
23->27 [style = bold, label=""];
33->30 [style = solid, label="owner"];
1->15 [style = bold, label=""];
29->31 [style = bold, label=""];
15->36 [style = dotted, label="true"];
38->30 [style = solid, label="base64UserData"];
7->1 [style = solid, label="addrs"];
18->2 [style = bold, label=""];
3->22 [style = bold, label=""];
11->40 [style = bold, label=""];
20->5 [style = bold, label=""];
4->37 [style = bold, label=""];
12->4 [style = bold, label=""];
14->12 [style = bold, label=""];
14->4 [style = solid, label="rootDiskSize"];
2->22 [style = bold, label=""];
30->28 [style = solid, label="nodeVm"];
24->1 [style = solid, label="base64UserData"];
29->35 [style = dotted, label="true"];
}
