digraph {
8 [style = filled, label = "client.blockUntilConnected()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "client.watchers().add().withMode(AddWatchMode.PERSISTENT).inBackground(backgroundCallback).usingWatcher(watcher).forPath(\"/test/foo\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testPersistentWatchesNotAvailableAsync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "AsyncCuratorFramework async = AsyncCuratorFramework.wrap(client)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CountDownLatch latch = new CountDownLatch(3)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testPersistentWatchInBackground['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "CountDownLatch backgroundLatch = new CountDownLatch(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "async.addWatch().forPath(\"/foo\")@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testPersistentWatchInBackground['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(timing.awaitLatch(latch))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "client.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "BackgroundCallback backgroundCallback = null@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(timing.awaitLatch(backgroundLatch))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "client.create().creatingParentsIfNeeded().forPath(\"/test/foo\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Watcher watcher = null@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.setData().forPath(\"/test/foo\",\"hey\".getBytes())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(backgroundLatch))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "client.delete().forPath(\"/test/foo\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->6 [style = bold, label=""];
2->6 [style = bold, label=""];
6->18 [style = bold, label=""];
9->4 [style = bold, label=""];
15->6 [style = bold, label=""];
3->13 [style = solid, label="latch"];
3->0 [style = bold, label=""];
7->14 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
11->5 [style = bold, label=""];
1->9 [style = solid, label="backgroundLatch"];
0->10 [style = bold, label=""];
9->14 [style = dashed, label="0"];
3->4 [style = solid, label="latch"];
6->8 [style = bold, label=""];
1->12 [style = bold, label=""];
5->7 [style = bold, label=""];
8->18 [style = dashed, label="0"];
12->3 [style = bold, label=""];
1->14 [style = solid, label="backgroundLatch"];
14->13 [style = bold, label=""];
4->13 [style = dashed, label="0"];
10->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
