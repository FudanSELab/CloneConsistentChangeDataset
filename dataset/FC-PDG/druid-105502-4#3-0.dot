digraph {
3 [style = filled, label = "isIdentifier != null@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Set<Expr> arrayArguments@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Set<Expr> scalarArguments@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "moreScalars.add((IdentifierExpr)expr)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "withArrayArguments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Set<IdentifierExpr> arrayIdentifiers = new HashSet<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "withArrayArguments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return new BindingDetails(ImmutableSet.copyOf(Sets.union(freeVariables,arrayIdentifiers)),scalarVariables,ImmutableSet.copyOf(Sets.union(arrayVariables,arrayIdentifiers)),hasInputArrays || arrayArguments.size() > 0,isOutputArray)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "return new BindingDetails(ImmutableSet.copyOf(Sets.union(freeVariables,moreScalars)),ImmutableSet.copyOf(Sets.union(scalarVariables,moreScalars)),arrayVariables)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "arrayIdentifiers.add((IdentifierExpr)expr)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "withScalarArguments['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return new BindingDetails(ImmutableSet.copyOf(Sets.union(freeVariables,arrayIdentifiers)),scalarVariables,ImmutableSet.copyOf(Sets.union(arrayVariables,arrayIdentifiers)))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "final IdentifierExpr stringIdentifier = expr.getIdentifierExprIfIdentifierExpr()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "stringIdentifier != null@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final IdentifierExpr isIdentifier = expr.getIdentifierExprIfIdentifierExpr()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Set<IdentifierExpr> moreScalars = new HashSet<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
5->14 [style = dashed, label="0"];
11->14 [style = bold, label=""];
6->7 [style = dashed, label="0"];
2->7 [style = solid, label="arrayIdentifiers"];
15->11 [style = solid, label="stringIdentifier"];
6->9 [style = dashed, label="0"];
12->15 [style = bold, label=""];
11->14 [style = dotted, label="true"];
0->15 [style = dashed, label="0"];
3->6 [style = bold, label=""];
1->4 [style = dotted, label="true"];
11->9 [style = bold, label=""];
13->10 [style = dotted, label="true"];
8->4 [style = dotted, label="true"];
11->15 [style = bold, label=""];
3->0 [style = bold, label=""];
2->12 [style = dashed, label="0"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
3->5 [style = dotted, label="true"];
13->12 [style = bold, label=""];
5->6 [style = bold, label=""];
15->11 [style = bold, label=""];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
8->2 [style = bold, label=""];
12->9 [style = solid, label="moreScalars"];
2->6 [style = solid, label="arrayIdentifiers"];
5->7 [style = bold, label=""];
14->9 [style = bold, label=""];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
4->10 [style = dashed, label="0"];
0->3 [style = solid, label="isIdentifier"];
3->11 [style = dashed, label="0"];
}
