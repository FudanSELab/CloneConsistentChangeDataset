digraph {
2 [style = filled, label = "newConnectionFactory['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "newConnectionFactory['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return new CalciteAssert.ConnectionFactory(){@Override public Connection createConnection(){final Connection connection = DriverManager.getConnection(\"jdbc:calcite:\")final SchemaPlus root = connection.unwrap().getRootSchema()root.add(\"elastic\",new ElasticsearchSchema(NODE.restClient(),NODE.mapper(),NAME))final String viewSql = String.format(Locale.ROOT,\"select cast(_MAP('a'( AS varchar(2)) AS a, \" + \" cast(_MAP('b'( AS varchar(2)) AS b, \" + \" cast(_MAP('c'( AS varchar(2)) AS c, \" + \" cast(_MAP('int'( AS integer) AS num\" + \" from \"elastic\".\"%s\"\",NAME)ViewTableMacro macro = ViewTable.viewMacro(root,viewSql,Collections.singletonList(\"elastic\"),Arrays.asList(\"elastic\",\"view\"),false)root.add(\"VIEW\",macro)return connection}}@@@3@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "newConnectionFactory['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3->1 [style = bold, label=""];
2->1 [style = bold, label=""];
0->1 [style = bold, label=""];
}
