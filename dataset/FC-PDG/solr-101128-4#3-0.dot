digraph {
3 [style = filled, label = "final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(10,queryResponse.getResults().size())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(199.5,topLevelFacetingData.getQueryFacet(\"high_popularity\").getStatValue(\"average_price\"))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "QueryFacetMap queryFacet = new QueryFacetMap(\"popularity:(8 TO 10(\").withStatSubFacet(\"average_price\",\"avg(price)\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(2,topLevelFacetingData.getQueryFacet(\"high_popularity\").getCount())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SolrClient solrClient = cluster.getSolrClient()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(199.5,topLevelFacetingData.getQueryFacet(\"high_popularity\").getStatFacetValue(\"average_price\"))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "testQueryFacetExpanded['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testQueryFacetExpanded['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "QueryFacetMap queryFacet = new QueryFacetMap(\"popularity:(8 TO 10(\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testQueryFacetSimple['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "QueryResponse queryResponse = request.process(solrClient,COLLECTION_NAME)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(32,queryResponse.getResults().getNumFound())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(0,queryResponse.getStatus())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final JsonQueryRequest request = new JsonQueryRequest().setQuery(\"*:*\").withFacet(\"high_popularity\",queryFacet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
6->4 [style = bold, label=""];
3->6 [style = bold, label=""];
1->8 [style = solid, label="queryFacet"];
11->0 [style = bold, label=""];
1->13 [style = dashed, label="0"];
1->8 [style = bold, label=""];
2->9 [style = bold, label=""];
13->8 [style = bold, label=""];
8->5 [style = bold, label=""];
0->13 [style = bold, label=""];
14->0 [style = bold, label=""];
0->5 [style = solid, label="solrClient"];
13->8 [style = solid, label="queryFacet"];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
10->0 [style = bold, label=""];
4->12 [style = dashed, label="0"];
6->12 [style = bold, label=""];
}
