digraph {
16 [style = filled, label = "shape = ShapeParser.parse(parser).build()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ShapeParser.parse(parser).build()@@@16@@@", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ElasticsearchGeoAssertions.assertMultiPolygon(shape)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testParseSelfCrossingPolygon['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "ElasticsearchGeoAssertions.assertValidException(parser,)@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(183.0).value(10.0).endArray().startArray().value(183.0).value(-10.0).endArray().startArray().value(176.0).value(-15.0).endArray().startArray().value(172.0).value(0.0).endArray().startArray().value(176.0).value(15.0).endArray().startArray().value(183.0).value(10.0).endArray().endArray().startArray().startArray().value(178.0).value(8.0).endArray().startArray().value(182.0).value(8.0).endArray().startArray().value(180.0).value(-8.0).endArray().startArray().value(178.0).value(8.0).endArray().endArray().endArray().endObject())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(-177.0).value(10.0).endArray().startArray().value(176.0).value(15.0).endArray().startArray().value(172.0).value(0.0).endArray().startArray().value(176.0).value(-15.0).endArray().startArray().value(-177.0).value(-10.0).endArray().startArray().value(-177.0).value(10.0).endArray().endArray().startArray().startArray().value(178.0).value(8.0).endArray().startArray().value(-178.0).value(8.0).endArray().startArray().value(-180.0).value(-8.0).endArray().startArray().value(178.0).value(8.0).endArray().endArray().endArray().endObject())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Shape shape = ShapeParser.parse(parser).build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ShapeParser.parse(parser).build()@@@6@@@", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "parser = createParser(JsonXContent.jsonXContent,polygonGeoJson)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "parser = createParser(JsonXContent.jsonXContent,polygonGeoJson)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testParseOGCPolygonWithHoles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "parser.nextToken()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testParseSelfCrossingPolygon['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "parser.nextToken()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(176.0).value(15.0).endArray().startArray().value(180.0).value(10.0).endArray().startArray().value(179.0).value(-10.0).endArray().startArray().value(176.0).value(-15.0).endArray().startArray().value(172.0).value(0.0).endArray().startArray().value(176.0).value(15.0).endArray().endArray().startArray().startArray().value(177.0).value(8.0).endArray().startArray().value(179.0).value(10.0).endArray().startArray().value(179.0).value(-8.0).endArray().startArray().value(177.0).value(8.0).endArray().endArray().endArray().endObject())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ElasticsearchGeoAssertions.assertPolygon(shape)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "shape = ShapeParser.parse(parser).build()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ShapeParser.parse(parser).build()@@@11@@@", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "parser.nextToken()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "XContentParser parser = createParser(JsonXContent.jsonXContent,polygonGeoJson)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "parser.nextToken()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(176.0).value(15.0).endArray().startArray().value(-177.0).value(10.0).endArray().startArray().value(-177.0).value(-10.0).endArray().startArray().value(176.0).value(-15.0).endArray().startArray().value(-177.0).value(15.0).endArray().startArray().value(172.0).value(0.0).endArray().startArray().value(176.0).value(15.0).endArray().endArray().endArray().endObject())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "shape = ShapeParser.parse(parser).build()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ShapeParser.parse(parser).build()@@@21@@@", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(176.0).value(15.0).endArray().startArray().value(-177.0).value(10.0).endArray().startArray().value(-177.0).value(-10.0).endArray().startArray().value(176.0).value(-15.0).endArray().startArray().value(172.0).value(0.0).endArray().startArray().value(176.0).value(15.0).endArray().endArray().startArray().startArray().value(-172.0).value(8.0).endArray().startArray().value(174.0).value(10.0).endArray().startArray().value(-172.0).value(-8.0).endArray().startArray().value(-172.0).value(8.0).endArray().endArray().endArray().endObject())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "parser = createParser(JsonXContent.jsonXContent,polygonGeoJson)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ElasticsearchGeoAssertions.assertMultiPolygon(shape)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ElasticsearchGeoAssertions.assertPolygon(shape)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12->15 [style = solid, label="polygonGeoJson"];
19->9 [style = bold, label=""];
17->18 [style = solid, label="shape"];
19->9 [style = solid, label="shape"];
12->15 [style = bold, label=""];
9->20 [style = bold, label=""];
15->23 [style = bold, label=""];
10->3 [style = solid, label="polygonGeoJson"];
16->11 [style = solid, label="shape"];
23->16 [style = bold, label=""];
0->10 [style = dashed, label="0"];
20->14 [style = solid, label="polygonGeoJson"];
6->24 [style = bold, label=""];
0->3 [style = bold, label=""];
8->6 [style = bold, label=""];
0->1 [style = bold, label=""];
0->3 [style = solid, label="polygonGeoJson"];
10->3 [style = bold, label=""];
3->1 [style = bold, label=""];
5->0 [style = bold, label=""];
3->4 [style = solid, label="parser"];
13->21 [style = solid, label="polygonGeoJson"];
14->8 [style = bold, label=""];
11->13 [style = bold, label=""];
21->7 [style = bold, label=""];
1->19 [style = bold, label=""];
1->4 [style = bold, label=""];
7->17 [style = bold, label=""];
24->12 [style = bold, label=""];
2->0 [style = bold, label=""];
6->24 [style = solid, label="shape"];
20->14 [style = bold, label=""];
16->11 [style = bold, label=""];
22->10 [style = bold, label=""];
13->21 [style = bold, label=""];
17->18 [style = bold, label=""];
}
