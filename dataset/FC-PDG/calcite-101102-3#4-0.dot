digraph {
38 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "groupSets = new ArrayList<>()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "groupSets = Lists.newArrayList()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "testInduceGroupingType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "List<ImmutableBitSet> groupSets = Lists.newArrayList()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "groupSets = ImmutableBitSet.ORDERING.sortedCopy(groupSet.powerSet())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of(2)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "groupSets.add(groupSet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "groupSets = new ArrayList<>()@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(Aggregate.Group.SIMPLE,Aggregate.Group.induce(groupSet,groupSets))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "groupSets = Lists.newArrayList()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of(1,2,4,5)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final Aggregate.Group x = Aggregate.Group.induce(groupSet,groupSets)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "groupSets = Lists.newArrayList()@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "groupSets = new ArrayList<>()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@46@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "groupSets = new ArrayList<>()@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertEquals(Aggregate.Group.SIMPLE,Aggregate.Group.induce(groupSet,groupSets))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "fail(\"expected error, got \" + x)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{}@@@38@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "groupSets = Lists.newArrayList()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "groupSets = Lists.newArrayList()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "groupSets = ImmutableBitSet.ORDERING.sortedCopy(groupSets)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "IllegalArgumentException ignore@@@38@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet,groupSets))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,5))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "groupSets = Lists.newArrayList()@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "groupSets.add(groupSet)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testInduceGroupingType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "groupSets = Lists.newArrayList()@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "groupSets = new ArrayList<>()@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "{}@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "testInduceGroupingType1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "groupSets = new ArrayList<>()@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "List<ImmutableBitSet> groupSets = new ArrayList<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13->47 [style = bold, label=""];
4->51 [style = dashed, label="0"];
41->19 [style = bold, label=""];
54->57 [style = bold, label=""];
50->14 [style = solid, label="groupSets"];
13->39 [style = solid, label="groupSet"];
36->54 [style = solid, label="groupSets"];
30->36 [style = bold, label=""];
19->36 [style = bold, label=""];
29->14 [style = solid, label="groupSets"];
21->52 [style = bold, label=""];
43->39 [style = solid, label="groupSets"];
36->33 [style = bold, label=""];
26->11 [style = bold, label=""];
35->39 [style = solid, label="groupSets"];
23->29 [style = bold, label=""];
13->58 [style = dashed, label="0"];
37->38 [style = bold, label=""];
49->13 [style = bold, label=""];
13->36 [style = solid, label="groupSet"];
48->10 [style = bold, label=""];
58->19 [style = solid, label="groupSet"];
1->31 [style = bold, label=""];
32->20 [style = bold, label=""];
21->3 [style = bold, label=""];
23->19 [style = solid, label="groupSets"];
18->31 [style = bold, label=""];
44->31 [style = solid, label="groupSets"];
7->46 [style = bold, label=""];
24->46 [style = dashed, label="0"];
20->31 [style = bold, label=""];
24->40 [style = bold, label=""];
34->0 [style = bold, label=""];
38->32 [style = bold, label=""];
29->26 [style = bold, label=""];
5->21 [style = bold, label=""];
7->24 [style = bold, label=""];
18->1 [style = bold, label=""];
46->40 [style = solid, label="groupSets"];
33->28 [style = solid, label="groupSets"];
27->32 [style = solid, label="groupSets"];
17->39 [style = bold, label=""];
57->56 [style = solid, label="groupSets"];
35->17 [style = bold, label=""];
13->5 [style = bold, label=""];
11->8 [style = bold, label=""];
35->43 [style = dashed, label="0"];
46->40 [style = bold, label=""];
31->7 [style = solid, label="groupSets"];
14->4 [style = bold, label=""];
44->42 [style = bold, label=""];
58->33 [style = solid, label="groupSet"];
33->48 [style = dashed, label="0"];
40->35 [style = bold, label=""];
8->41 [style = bold, label=""];
13->3 [style = solid, label="groupSet"];
51->36 [style = solid, label="groupSets"];
42->16 [style = bold, label=""];
22->28 [style = bold, label=""];
4->36 [style = solid, label="groupSets"];
47->3 [style = solid, label="groupSets"];
10->6 [style = bold, label=""];
31->7 [style = bold, label=""];
6->15 [style = bold, label=""];
15->22 [style = bold, label=""];
12->13 [style = bold, label=""];
43->17 [style = bold, label=""];
44->32 [style = solid, label="groupSets"];
19->14 [style = bold, label=""];
29->19 [style = bold, label=""];
13->23 [style = solid, label="groupSet"];
58->56 [style = solid, label="groupSet"];
53->23 [style = bold, label=""];
13->32 [style = solid, label="groupSet"];
27->44 [style = dashed, label="0"];
47->21 [style = bold, label=""];
40->43 [style = bold, label=""];
58->54 [style = solid, label="groupSet"];
13->7 [style = solid, label="groupSet"];
4->34 [style = bold, label=""];
13->40 [style = solid, label="groupSet"];
6->54 [style = dashed, label="0"];
23->50 [style = bold, label=""];
45->18 [style = bold, label=""];
32->20 [style = solid, label="x"];
50->26 [style = bold, label=""];
0->9 [style = bold, label=""];
52->53 [style = bold, label=""];
3->25 [style = bold, label=""];
25->23 [style = bold, label=""];
5->47 [style = dashed, label="0"];
14->51 [style = bold, label=""];
10->33 [style = dashed, label="0"];
9->30 [style = bold, label=""];
33->10 [style = bold, label=""];
13->14 [style = solid, label="groupSet"];
58->53 [style = solid, label="groupSet"];
16->2 [style = bold, label=""];
5->3 [style = solid, label="groupSets"];
27->31 [style = solid, label="groupSets"];
27->42 [style = bold, label=""];
25->23 [style = solid, label="groupSets"];
57->56 [style = bold, label=""];
5->53 [style = solid, label="groupSets"];
29->50 [style = dashed, label="0"];
36->48 [style = bold, label=""];
58->5 [style = bold, label=""];
28->44 [style = bold, label=""];
13->28 [style = solid, label="groupSet"];
28->27 [style = bold, label=""];
51->34 [style = bold, label=""];
13->21 [style = solid, label="groupSet"];
2->37 [style = bold, label=""];
24->40 [style = solid, label="groupSets"];
58->21 [style = solid, label="groupSet"];
48->28 [style = solid, label="groupSets"];
33->54 [style = bold, label=""];
55->58 [style = bold, label=""];
}
