digraph {
23 [style = filled, label = "Exception e@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.fail()@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{TestCleanState.closeAndTestClean(client)}@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertFalse(goodLock.isAcquiredInThisProcess())@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "InterProcessMultiLock lock = new InterProcessMultiLock(Arrays.asList(goodLock,badLock))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "client.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "{TestCleanState.closeAndTestClean(client)}@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "lock.acquire()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Exception e@@@29@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "InterProcessMultiLock lock = new InterProcessMultiLock(Arrays.asList(goodLock,badLock))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertFalse(goodLock.isAcquiredInThisProcess())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertTrue(otherGoodLock.isAcquiredInThisProcess())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final InterProcessLock otherGoodLock = new InterProcessMutex(client,LOCK_PATH_2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "InterProcessLock goodLock = new InterProcessMutex(client,LOCK_PATH_1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "lock.acquire()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertFalse(goodLock.isAcquiredInThisProcess())@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testSomeReleasesFail['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "{}@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final AtomicBoolean goodLockWasLocked = new AtomicBoolean(false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.fail()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "InterProcessLock badLock = new InterProcessLock(){@Override public void acquire(){if (goodLock.isAcquiredInThisProcess()) {goodLockWasLocked.set(true)}throw new Exception(\"foo\")}@Override public boolean acquire(long time,TimeUnit unit){throw new Exception(\"foo\")}@Override public void release(){throw new Exception(\"foo\")}@Override public boolean isAcquiredInThisProcess(){return false}}@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final InterProcessLock goodLock = new InterProcessMutex(client,LOCK_PATH_1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Exception e@@@29@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSomeReleasesFail['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Assert.assertTrue(goodLockWasLocked.get())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testSomeLocksFailToLock['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "{}@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "fail()@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22->21 [style = solid, label="goodLock"];
5->10 [style = bold, label=""];
23->25 [style = bold, label=""];
16->0 [style = bold, label=""];
10->20 [style = bold, label=""];
2->26 [style = bold, label=""];
5->9 [style = solid, label="client"];
9->11 [style = bold, label=""];
12->28 [style = bold, label=""];
3->1 [style = bold, label=""];
11->21 [style = bold, label=""];
12->17 [style = bold, label=""];
7->3 [style = solid, label="goodLock"];
14->19 [style = bold, label=""];
9->22 [style = dashed, label="0"];
4->2 [style = bold, label=""];
10->7 [style = bold, label=""];
17->19 [style = bold, label=""];
25->2 [style = bold, label=""];
15->5 [style = bold, label=""];
24->5 [style = bold, label=""];
19->16 [style = bold, label=""];
20->22 [style = bold, label=""];
21->12 [style = bold, label=""];
5->22 [style = solid, label="client"];
7->9 [style = bold, label=""];
28->2 [style = bold, label=""];
6->5 [style = bold, label=""];
26->27 [style = bold, label=""];
2->0 [style = bold, label=""];
5->7 [style = solid, label="client"];
11->21 [style = solid, label="badLock"];
5->0 [style = solid, label="client"];
11->3 [style = bold, label=""];
12->8 [style = bold, label=""];
2->16 [style = dashed, label="0"];
1->12 [style = bold, label=""];
8->17 [style = dashed, label="0"];
4->19 [style = dashed, label="0"];
11->3 [style = solid, label="badLock"];
8->4 [style = bold, label=""];
2->26 [style = dashed, label="0"];
5->27 [style = solid, label="client"];
13->14 [style = bold, label=""];
18->14 [style = bold, label=""];
22->11 [style = bold, label=""];
14->4 [style = bold, label=""];
}
