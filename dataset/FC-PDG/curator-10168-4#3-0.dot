digraph {
7 [style = filled, label = "client.start()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "discovery.unregisterService(instance)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ServiceInstance<String> instance = ServiceInstance.builder().payload(\"thing\").name(\"test\").port(10064).build()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ServiceDiscovery<String> discovery = ServiceDiscoveryBuilder.builder().basePath(\"/test\").client(client).thisInstance(instance).build()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(((ServiceDiscoveryImpl)discovery).debugServicesQty(),0)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testCleaning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "closeables.add(client)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "{Collections.reverse(closeables)for (Closeable c : closeables){CloseableUtils.closeQuietly(c)}}@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(discovery.queryForNames(),Collections.singletonList(\"test\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testNoServerOnStart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "discovery.start()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "list.add(instance)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testCleaning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "discovery.queryForNames()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "{Collections.reverse(closeables)for (Closeable c : closeables){CloseableUtils.closeQuietly(c)}}@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(discovery.queryForInstances(\"test\"),list)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "server.stop()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "closeables.add(discovery)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<Closeable> closeables = Lists.newArrayList()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "System.setProperty(\"curator-discovery-clean-threshold-ms\",\"10\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "Thread.sleep(100)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "server.restart()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "List<ServiceInstance<String>> list = Lists.newArrayList()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21->17 [style = solid, label="list"];
18->17 [style = bold, label=""];
3->6 [style = bold, label=""];
7->8 [style = bold, label=""];
11->9 [style = bold, label=""];
2->4 [style = bold, label=""];
22->23 [style = bold, label=""];
1->13 [style = bold, label=""];
17->19 [style = bold, label=""];
21->18 [style = bold, label=""];
3->6 [style = solid, label="client"];
1->11 [style = bold, label=""];
12->14 [style = solid, label="closeables"];
5->2 [style = bold, label=""];
0->10 [style = bold, label=""];
12->19 [style = solid, label="closeables"];
8->18 [style = solid, label="instance"];
8->5 [style = bold, label=""];
23->21 [style = bold, label=""];
5->2 [style = solid, label="discovery"];
10->12 [style = bold, label=""];
20->12 [style = bold, label=""];
4->1 [style = bold, label=""];
12->3 [style = bold, label=""];
15->12 [style = bold, label=""];
8->1 [style = solid, label="instance"];
6->7 [style = bold, label=""];
16->20 [style = bold, label=""];
13->14 [style = bold, label=""];
4->22 [style = bold, label=""];
9->13 [style = bold, label=""];
}
