digraph {
7 [style = filled, label = "final Matcher<String> matcher = Matcher.builder(p.toAutomaton()).add(\"a\",null).add(\"b\",null).build()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "final String expected = \"((a, ab(, (ab, b((\"@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Matcher<String> matcher = Matcher.builder(p.toAutomaton()).add(\"a\",null).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(p.toString(),is(\"a b\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final Pattern p = Pattern.builder().symbol(\"a\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(matcher.match(rows).toString(),is(expected))@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSequence['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testSequence['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Matcher<String> matcher = Matcher.builder(p.toAutomaton()).add(\"a\",null).add(\"b\",null).build()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "final String expected = \"((a(, (a((\"@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(p.toString(),is(\"a\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final Pattern p = Pattern.builder().symbol(\"a\").symbol(\"b\").seq().build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testSimple['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String(( rows = {\"\",\"a\",\"\",\"a\"}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
4->3 [style = bold, label=""];
6->7 [style = dashed, label="0"];
12->11 [style = bold, label=""];
3->6 [style = bold, label=""];
0->12 [style = dashed, label="0"];
13->1 [style = bold, label=""];
6->10 [style = dashed, label="0"];
5->1 [style = solid, label="expected"];
8->0 [style = bold, label=""];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
13->1 [style = solid, label="expected"];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
10->13 [style = bold, label=""];
3->7 [style = bold, label=""];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
9->12 [style = bold, label=""];
4->11 [style = dashed, label="0"];
}
