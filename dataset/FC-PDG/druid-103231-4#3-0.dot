digraph {
5 [style = filled, label = "killer.kill(dataSegment)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EasyMock.expectLastCall().andThrow(exception)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "expectLastCall()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "replayAll()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectLastCall()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expectLastCall().andThrow(exception)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "killWithErrorTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "storage.delete(EasyMock.eq(BUCKET),EasyMock.eq(INDEX_PATH))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "GoogleDataSegmentKiller killer = new GoogleDataSegmentKiller(storage)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "killWithErrorTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "killer.kill(DATA_SEGMENT)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "replayAll()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "killTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "verifyAll()@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "storage.delete(EasyMock.eq(bucket),EasyMock.eq(indexPath))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final GoogleJsonResponseException exception = GoogleJsonResponseExceptionFactoryTesting.newMock(JacksonFactory.getDefaultInstance(),300,\"test\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "storage.delete(EasyMock.eq(bucket),EasyMock.eq(descriptorPath))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->1 [style = bold, label=""];
15->14 [style = bold, label=""];
2->3 [style = bold, label=""];
12->15 [style = bold, label=""];
0->11 [style = bold, label=""];
3->6 [style = bold, label=""];
10->3 [style = bold, label=""];
7->0 [style = bold, label=""];
16->17 [style = bold, label=""];
2->10 [style = dashed, label="0"];
8->0 [style = bold, label=""];
6->4 [style = bold, label=""];
4->9 [style = dashed, label="0"];
11->10 [style = bold, label=""];
1->11 [style = dashed, label="0"];
0->1 [style = bold, label=""];
5->13 [style = bold, label=""];
0->2 [style = solid, label="exception"];
1->12 [style = bold, label=""];
9->5 [style = bold, label=""];
0->10 [style = solid, label="exception"];
1->2 [style = bold, label=""];
2->1 [style = dashed, label="0"];
6->9 [style = bold, label=""];
4->5 [style = bold, label=""];
14->4 [style = bold, label=""];
}
