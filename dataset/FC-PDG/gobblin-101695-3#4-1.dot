digraph {
11 [style = filled, label = "String actualDMLQuery = StringUtils.substringAfter(\"SELECT\",queries.get(0).trim())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testFlattenSchemaDDLandDML['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<String> queries = queryBasedHiveConversionEntity.getQueries()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(conversionEntities.size(),1,\"Only one query entity should be returned\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String dbName = \"testdb\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(actualDDLQuery,expectedDDLQuery)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testFlattenSchemaDDLandDML['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "List<QueryBasedHiveConversionEntity> conversionEntities = Lists.newArrayList(converter.convertRecord(converter.convertSchema(schema,wus),new QueryBasedHiveConversionEntity(cd,new SchemaAwareHiveTable(table,schema)),wus))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Schema schema = ConversionHiveTestUtils.readSchemaFromJsonFile(resourceDir,\"recordWithinRecordWithinRecord_nested.json\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testNestedSchemaDDLandDML['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Table table = this.hiveMetastoreTestUtils.createTestTable(dbName,tableName,tableSdLoc,Optional.absent())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(conversionEntities.size(),1,\"Only one query entity should be returned\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String tableSdLoc = \"/tmp/testtable\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(queries.size(),4,\"4 DDL and one DML query should be returned\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String expectedDMLQuery = StringUtils.substringAfter(\"SELECT\",ConversionHiveTestUtils.readQueryFromFile(resourceDir,\"recordWithinRecordWithinRecord_nested.dml\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Config config = ConfigFactory.parseMap(ImmutableMap.builder().put(\"destinationFormats\",\"nestedOrc\").put(\"nestedOrc.destination.tableName\",\"testtable_orc_nested\").put(\"nestedOrc.destination.dbName\",dbName).put(\"nestedOrc.destination.dataPath\",\"file:/tmp/testtable_orc_nested\").build())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "this.hiveMetastoreTestUtils.getLocalMetastoreClient().dropDatabase(dbName,false,true,true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String expectedDMLQuery = StringUtils.substringAfter(\"SELECT\",ConversionHiveTestUtils.readQueryFromFile(resourceDir,\"recordWithinRecordWithinRecord_flattened.dml\"))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ConvertibleHiveDataset cd = ConvertibleHiveDatasetTest.createTestConvertibleDataset(config)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "WorkUnitState wus = ConversionHiveTestUtils.createWus(dbName,tableName,0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Table table = this.hiveMetastoreTestUtils.createTestAvroTable(dbName,tableName,tableSdLoc,Optional.absent())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assert.assertEquals(actualDDLQuery,expectedDDLQuery)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "wus.getJobState().setProp(\"orc.table.flatten.schema\",\"false\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Config config = ConfigFactory.parseMap(ImmutableMap.builder().put(\"destinationFormats\",\"flattenedOrc\").put(\"flattenedOrc.destination.dbName\",dbName).put(\"flattenedOrc.destination.tableName\",tableName + \"_orc\").put(\"flattenedOrc.destination.dataPath\",\"file:\" + tableSdLoc + \"_orc\").build())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String tableName = \"testtable\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String actualDDLQuery = StringUtils.substringAfter(\"(\",queries.get(0).trim())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String expectedDDLQuery = StringUtils.substringAfter(\"(\",ConversionHiveTestUtils.readQueryFromFile(resourceDir,\"recordWithinRecordWithinRecord_nested.ddl\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "QueryBasedHiveConversionEntity queryBasedHiveConversionEntity = conversionEntities.get(0)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ConvertibleHiveDataset cd = ConvertibleHiveDatasetTest.createTestConvertibleDataset(config)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(actualDMLQuery,expectedDMLQuery)@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3->27 [style = solid, label="table"];
11->28 [style = bold, label=""];
0->5 [style = solid, label="config"];
8->27 [style = solid, label="schema"];
23->15 [style = solid, label="config"];
20->13 [style = bold, label=""];
12->21 [style = solid, label="tableSdLoc"];
9->0 [style = bold, label=""];
15->27 [style = solid, label="cd"];
3->21 [style = dashed, label="0"];
6->21 [style = solid, label="dbName"];
25->13 [style = bold, label=""];
2->3 [style = bold, label=""];
8->15 [style = solid, label="schema"];
23->15 [style = bold, label=""];
21->8 [style = bold, label=""];
6->2 [style = solid, label="dbName"];
9->27 [style = solid, label="wus"];
5->15 [style = bold, label=""];
9->15 [style = solid, label="wus"];
19->10 [style = bold, label=""];
16->17 [style = bold, label=""];
7->20 [style = bold, label=""];
11->29 [style = solid, label="actualDMLQuery"];
15->19 [style = bold, label=""];
6->9 [style = solid, label="dbName"];
21->15 [style = solid, label="table"];
9->26 [style = bold, label=""];
11->28 [style = dashed, label="0"];
6->1 [style = bold, label=""];
14->20 [style = solid, label="actualDDLQuery"];
4->13 [style = solid, label="actualDMLQuery"];
12->2 [style = bold, label=""];
13->29 [style = bold, label=""];
5->15 [style = solid, label="cd"];
28->13 [style = solid, label="expectedDDLQuery"];
12->3 [style = solid, label="tableSdLoc"];
10->16 [style = bold, label=""];
18->6 [style = bold, label=""];
17->14 [style = bold, label=""];
2->21 [style = bold, label=""];
3->8 [style = bold, label=""];
26->23 [style = bold, label=""];
27->10 [style = bold, label=""];
1->9 [style = solid, label="tableName"];
1->21 [style = solid, label="tableName"];
8->9 [style = bold, label=""];
1->12 [style = bold, label=""];
6->3 [style = solid, label="dbName"];
7->25 [style = dashed, label="0"];
28->25 [style = bold, label=""];
4->13 [style = solid, label="actualDDLQuery"];
22->6 [style = bold, label=""];
3->15 [style = solid, label="table"];
7->13 [style = solid, label="expectedDMLQuery"];
15->27 [style = dashed, label="0"];
25->29 [style = solid, label="expectedDMLQuery"];
11->20 [style = solid, label="expectedDDLQuery"];
4->11 [style = bold, label=""];
24->6 [style = bold, label=""];
15->27 [style = bold, label=""];
1->3 [style = solid, label="tableName"];
11->7 [style = bold, label=""];
0->5 [style = bold, label=""];
14->4 [style = bold, label=""];
}
