digraph {
18 [style = filled, label = "DefaultKeyedValue<String> v2 = CloneUtils.clone(v1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(v1.equals(v2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "v1.addValue(\"V1\",new Integer(1))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertTrue(v1.equals(v2))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "DefaultKeyedValues<String> v2 = CloneUtils.clone(v1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "DefaultKeyedValues<String> v1 = new DefaultKeyedValues<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "v1.addValue(\"V3\",3)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "v1.addValue(\"V3\",new Integer(3))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "v1.addValue(\"V2\",null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "v2.setValue(\"V1\",44)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "v2.setValue(12.3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "v1.addValue(\"V1\",1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "DefaultKeyedValue<String> v1 = new DefaultKeyedValue<>(\"Test\",45.5)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertFalse(v1.equals(v2))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "v2.setValue(\"V1\",new Integer(44))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertTrue(v1 != v2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(v1.getClass() == v2.getClass())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertFalse(v1.equals(v2))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DefaultKeyedValues<String> v2 = (DefaultKeyedValues)v1.clone()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11->3 [style = solid, label="v2"];
4->9 [style = bold, label=""];
10->5 [style = solid, label="v2"];
8->10 [style = bold, label=""];
17->20 [style = solid, label="v1"];
18->1 [style = solid, label="v2"];
8->15 [style = dashed, label="0"];
1->3 [style = bold, label=""];
3->6 [style = bold, label=""];
6->0 [style = bold, label=""];
3->12 [style = bold, label=""];
10->3 [style = solid, label="v2"];
11->5 [style = solid, label="v2"];
16->19 [style = bold, label=""];
9->8 [style = bold, label=""];
17->18 [style = solid, label="v1"];
2->4 [style = bold, label=""];
12->0 [style = bold, label=""];
2->17 [style = dashed, label="0"];
2->13 [style = bold, label=""];
10->11 [style = dashed, label="0"];
18->19 [style = solid, label="v2"];
6->12 [style = dashed, label="0"];
2->11 [style = solid, label="v1"];
19->5 [style = bold, label=""];
5->1 [style = bold, label=""];
11->5 [style = bold, label=""];
18->20 [style = bold, label=""];
11->0 [style = solid, label="v2"];
10->5 [style = bold, label=""];
15->11 [style = bold, label=""];
20->16 [style = bold, label=""];
7->2 [style = bold, label=""];
9->15 [style = bold, label=""];
2->5 [style = solid, label="v1"];
6->5 [style = dashed, label="0"];
14->2 [style = bold, label=""];
13->9 [style = bold, label=""];
18->20 [style = solid, label="v2"];
4->13 [style = dashed, label="0"];
21->17 [style = bold, label=""];
17->18 [style = bold, label=""];
10->0 [style = solid, label="v2"];
}
