digraph {
1 [style = filled, label = "final ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "loadFromRes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "asStream.close()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "asStream.close()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "reader.accept(cv,ClassWriter.COMPUTE_MAXS)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "loadAbstract['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ClassReader reader = new ClassReader(asStream)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String name@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final InputStream asStream = .getClassLoader().getResourceAsStream(resName(\"org.codehaus.groovy.runtime.callsite.AbstractCallSite\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "define(cw.toByteArray(),\"org.codehaus.groovy.runtime.callsite.AbstractCallSite\")@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final ClassVisitor cv = new ClassVisitor(CompilerConfiguration.ASM_API_VERSION,cw){public void visit(int version,int access,String name,String signature,String superName,String(( interfaces){super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@161566cversionaccessnamesignature\"sun/reflect/GroovyMagic\"interfaces}}@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "reader.accept(cw,ClassWriter.COMPUTE_MAXS)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "define(cw.toByteArray(),name)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "loadFromRes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final InputStream asStream = .getClassLoader().getResourceAsStream(resName(name))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->10 [style = bold, label=""];
6->3 [style = bold, label=""];
11->14 [style = bold, label=""];
12->11 [style = bold, label=""];
1->9 [style = solid, label="cw"];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
1->9 [style = bold, label=""];
0->3 [style = solid, label="name"];
1->7 [style = solid, label="cw"];
10->4 [style = solid, label="asStream"];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
2->14 [style = dashed, label="0"];
7->2 [style = bold, label=""];
9->12 [style = solid, label="cv"];
10->4 [style = bold, label=""];
8->0 [style = dotted, label="true"];
4->1 [style = bold, label=""];
3->10 [style = dashed, label="0"];
9->12 [style = bold, label=""];
6->0 [style = dotted, label="true"];
8->4 [style = bold, label=""];
0->2 [style = solid, label="name"];
3->4 [style = solid, label="asStream"];
}
