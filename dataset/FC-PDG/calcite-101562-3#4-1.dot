digraph {
6 [style = filled, label = "final String sql = \"select *\" + \" from (\" + \"select *\" + \"from \"sales_fact_1997\" as s\" + \"join \"customer\" as c using (\"customer_id\")\" + \"join \"product\" as p using (\"product_id\")\" + \"join \"product_class\" as pc using (\"product_class_id\")\" + \"where c.\"city\" = 'San Francisco'\" + \"and pc.\"product_department\" = 'Snacks'\" + \") match_recognize\" + \" (\" + \" pattern (strt down+ up+)\" + \" define\" + \" down as down.\"net_weight\" < PREV(down.\"net_weight\"),\" + \" up as up.\"net_weight\" > prev(up.\"net_weight\")\" + \" ) mr order by MR.\"net_weight\"\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String expected = \"SELECT *\" + \"FROM (SELECT *\" + \"FROM \"foodmart\".\"product\") MATCH_RECOGNIZE(\" + \"PATTERN (\"STRT\" \"DOWN\" + \"UP\" +)\" + \"DEFINE \" + \"\"DOWN\" AS PREV(\"net_weight\", 0) < PREV(\"net_weight\", 1), \" + \"\"UP\" AS PREV(\"net_weight\", 0) > PREV(\"net_weight\", 1))\" + \"ORDER BY \"net_weight\"\"@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "testMatchRecognizePatternExpression12['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String sql = \"select *\" + \" from \"product\" match_recognize\" + \" (\" + \" pattern (strt down+ up+)\" + \" define\" + \" down as down.\"net_weight\" < PREV(down.\"net_weight\"),\" + \" up as up.\"net_weight\" > prev(up.\"net_weight\")\" + \" ) mr order by MR.\"net_weight\"\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String expected = \"SELECT *\" + \"FROM (SELECT *\" + \"FROM \"foodmart\".\"sales_fact_1997\"\" + \"INNER JOIN \"foodmart\".\"customer\" \" + \"ON \"sales_fact_1997\".\"customer_id\" = \"customer\".\"customer_id\"\" + \"INNER JOIN \"foodmart\".\"product\" \" + \"ON \"sales_fact_1997\".\"product_id\" = \"product\".\"product_id\"\" + \"INNER JOIN \"foodmart\".\"product_class\" \" + \"ON \"product\".\"product_class_id\" = \"product_class\".\"product_class_id\"\" + \"WHERE \"customer\".\"city\" = 'San Francisco' \" + \"AND \"product_class\".\"product_department\" = 'Snacks') \" + \"MATCH_RECOGNIZE(\" + \"PATTERN (\"STRT\" \"DOWN\" + \"UP\" +)\" + \"DEFINE \" + \"\"DOWN\" AS PREV(\"net_weight\", 0) < PREV(\"net_weight\", 1), \" + \"\"UP\" AS PREV(\"net_weight\", 0) > PREV(\"net_weight\", 1))\" + \"ORDER BY \"net_weight\"\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "sql(sql).ok(expected)@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testMatchRecognizePatternExpression13['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final String expected = \"SELECT *\" + \"FROM (SELECT *\" + \"FROM \"foodmart\".\"product\") MATCH_RECOGNIZE(\" + \"PATTERN (\"STRT\" \"DOWN\" + \"UP\" +)\" + \"DEFINE \" + \"\"DOWN\" AS PREV(\"DOWN\".\"net_weight\", 0) < \" + \"PREV(\"DOWN\".\"net_weight\", 1), \" + \"\"UP\" AS PREV(\"UP\".\"net_weight\", 0) > \" + \"PREV(\"UP\".\"net_weight\", 1))\" + \"ORDER BY \"net_weight\"\"@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testMatchRecognizePatternExpression12['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->3 [style = bold, label=""];
4->2 [style = solid, label="expected"];
3->2 [style = solid, label="expected"];
5->1 [style = bold, label=""];
1->4 [style = bold, label=""];
8->6 [style = bold, label=""];
4->2 [style = bold, label=""];
3->2 [style = bold, label=""];
6->7 [style = bold, label=""];
3->4 [style = dashed, label="0"];
3->7 [style = dashed, label="0"];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
1->6 [style = dashed, label="0"];
7->2 [style = solid, label="expected"];
}
