digraph {
35 [style = filled, label = "int index = rnd.nextInt(buffers.size())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(0,chunk.free())@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "sum += BufferPool.currentChunk().roundUp(buffer.capacity())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Arrays.fill(sizes,size)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNotNull(chunk)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "BufferPool.Chunk chunk = BufferPool.currentChunk()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int(( sizes = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@33e59f@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final int size = BufferPool.NORMAL_CHUNK_SIZE / 64@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "rnd.setSeed(298347529L)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i < sizes.length@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ByteBuffer buffer = BufferPool.get(sizes(i()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "BufferPool.put(buffer)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testChunkExhausted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "!buffers.isEmpty()@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testDifferentSizeBuffersOnOneChunk['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(null,BufferPool.currentChunk())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "int(( sizes = new int((((@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<ByteBuffer> buffers = new ArrayList<>(sizes.length)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int sum = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(null,BufferPool.currentChunk())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNotNull(buffer)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i < sizes.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ByteBuffer buffer = buffers.remove(index)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(sum <= BufferPool.GlobalPool.MACRO_CHUNK_SIZE)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "BufferPool.put(buffers.get(i))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Random rnd = new Random()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(buffer.capacity() >= sizes(i()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "buffers.add(buffer)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(0,chunk.free())@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(null,BufferPool.unsafeCurrentChunk())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "BufferPool.Chunk chunk = BufferPool.unsafeCurrentChunk()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "sum += buffer.capacity()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testChunkExhausted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final int size = BufferPool.CHUNK_SIZE / 64@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32->35 [style = bold, label=""];
11->9 [style = solid, label="buffer"];
22->31 [style = dotted, label="true"];
35->37 [style = solid, label="index"];
16->35 [style = dashed, label="0"];
20->0 [style = bold, label=""];
14->11 [style = solid, label="i"];
11->9 [style = bold, label=""];
22->8 [style = bold, label=""];
19->1 [style = bold, label=""];
19->16 [style = solid, label="i"];
35->37 [style = bold, label=""];
1->21 [style = bold, label=""];
32->37 [style = dotted, label="true"];
14->4 [style = solid, label="i"];
21->24 [style = dashed, label="0"];
12->22 [style = bold, label=""];
21->13 [style = bold, label=""];
17->20 [style = bold, label=""];
6->16 [style = solid, label="i"];
6->1 [style = solid, label="i"];
18->31 [style = bold, label=""];
32->35 [style = dotted, label="true"];
8->23 [style = bold, label=""];
37->36 [style = bold, label=""];
5->8 [style = solid, label="sum"];
6->19 [style = solid, label="i"];
14->22 [style = bold, label=""];
10->8 [style = solid, label="sum"];
4->18 [style = bold, label=""];
14->12 [style = solid, label="i"];
32->36 [style = dotted, label="true"];
16->19 [style = bold, label=""];
20->0 [style = solid, label="sizes"];
27->11 [style = solid, label="sizes"];
14->22 [style = solid, label="i"];
1->16 [style = bold, label=""];
37->36 [style = solid, label="buffer"];
12->11 [style = solid, label="i"];
19->32 [style = dashed, label="0"];
22->9 [style = dotted, label="true"];
20->4 [style = solid, label="sizes"];
22->4 [style = dotted, label="true"];
22->11 [style = bold, label=""];
15->29 [style = bold, label=""];
24->13 [style = bold, label=""];
2->17 [style = bold, label=""];
23->15 [style = solid, label="chunk"];
11->18 [style = solid, label="buffer"];
7->23 [style = dashed, label="0"];
22->18 [style = dotted, label="true"];
30->33 [style = bold, label=""];
23->15 [style = bold, label=""];
32->30 [style = bold, label=""];
1->19 [style = dotted, label="true"];
31->12 [style = bold, label=""];
17->25 [style = dashed, label="0"];
28->32 [style = bold, label=""];
22->5 [style = dotted, label="true"];
27->4 [style = solid, label="sizes"];
6->1 [style = bold, label=""];
19->1 [style = solid, label="i"];
25->20 [style = bold, label=""];
27->10 [style = bold, label=""];
5->31 [style = dashed, label="0"];
7->15 [style = bold, label=""];
1->16 [style = dotted, label="true"];
25->0 [style = solid, label="size"];
9->4 [style = bold, label=""];
26->25 [style = bold, label=""];
3->14 [style = bold, label=""];
12->22 [style = solid, label="i"];
10->3 [style = bold, label=""];
36->32 [style = bold, label=""];
22->11 [style = dotted, label="true"];
15->6 [style = bold, label=""];
7->15 [style = solid, label="chunk"];
8->7 [style = bold, label=""];
31->8 [style = solid, label="sum"];
22->12 [style = dotted, label="true"];
17->0 [style = solid, label="size"];
29->28 [style = bold, label=""];
0->10 [style = bold, label=""];
5->12 [style = bold, label=""];
1->24 [style = bold, label=""];
18->5 [style = bold, label=""];
12->4 [style = solid, label="i"];
20->11 [style = solid, label="sizes"];
34->27 [style = bold, label=""];
}
