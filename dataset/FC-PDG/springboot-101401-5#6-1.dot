digraph {
4 [style = filled, label = "bindToArrayWhenEmptyStringShouldReturnEmptyArray['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "bindToArrayWhenEmptyStringShouldReturnEmptyArray['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "List<String> result = this.binder.bind(\"foo\",STRING_LIST).get()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "this.sources.add(source)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "source.put(\"foo\",\"\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "MockConfigurationPropertySource source = new MockConfigurationPropertySource()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "bindToCollectionWhenEmptyStringShouldReturnEmptyCollection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(result).isNotNull().isEmpty()@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String(( result = this.binder.bind(\"foo\",Bindable.of()).get()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
8->1 [style = bold, label=""];
6->1 [style = bold, label=""];
1->2 [style = solid, label="source"];
4->1 [style = bold, label=""];
7->0 [style = bold, label=""];
2->7 [style = bold, label=""];
5->7 [style = dashed, label="0"];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
2->5 [style = bold, label=""];
}
