digraph {
49 [style = filled, label = "Assert.assertEquals(handlerNb,controllerHandlerNb,\"controller callback handlers should not increase after participant session expiry\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertTrue(verifier.verifyByPolling())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry, but was \" + printHandlers(participantManager))@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ZkHelixClusterVerifier verifier = new BestPossibleExternalViewVerifier.Builder(clusterName).setZkClient(_gZkClient).build()@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "int controllerHandlerNb = controller.getHandlers().size()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@81@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "i++@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "final int r = 1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "testCbHandlerLeakOnControllerSessionExpiry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "int controllerHandlerNb = controller.getHandlers().size()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "i < n@@@68@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "String oldSessionId = controller.getSessionId()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final int n = 2@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "final MockParticipantManager participantManager = participants(0(@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@73@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "ZkHelixClusterVerifier verifier = new BestPossibleExternalViewVerifier.Builder(clusterName).setZkClient(_gZkClient).setWaitTillVerify(TestHelper.DEFAULT_REBALANCE_PROCESSING_WAIT_TIME).build()@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "participants(i( = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 1 zk-watcher after session expiry.\")@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "ZkTestHelper.expireSession(controller.getZkClient())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "Assert.assertEquals(particHandlerNb,1,\"HelixParticipant should have 1 (msgHelixTaskExecutor) callback handler, but was \" + particHandlerNb + \", \" + printHandlers(participantManager))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "i < n@@@76@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",r,32,n,2,\"MasterSlave\",true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,8 + 3 * n,\"HelixController should have 14 (8+3n) callback handlers for 2 participant, but was \" + controllerHandlerNb + \", \" + printHandlers(controller))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "Assert.assertTrue(result,\"Controller has incorrect zk-watchers after session expiry.\")@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "TestHelper.dropCluster(clusterName,_gZkClient)@@@72@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "controller.syncStop()@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String oldSessionId = participantManagerToExpire.getSessionId()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "handlerNb = participantManager.getHandlers().size()@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "testCbHandlerLeakOnParticipantSessionExpiry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "Assert.assertTrue(verifier.verifyByPolling())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "result = ClusterStateVerifier.verifyByPolling(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertTrue(result,\"Controller has incorrect number of zk-watchers.\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String instanceName = \"localhost_\" + (12918 + i)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){int controllerHandlerNb = controller.getHandlers().size()int particHandlerNb = participantManager.getHandlers().size()if (controllerHandlerNb == 10 && particHandlerNb == 2) return truereturn false}},1000)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,14,\"HelixController should have 14 (8+3n) callback handlers for 2 (n) participant\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManager.getSessionId())return watchPaths.size() == 1}},2000)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "System.out.println(\"Expiring controller session...\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "controller.syncStop()@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testCbHandlerLeakOnParticipantSessionExpiry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "participants(i(.syncStop()@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i++@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "MockParticipantManager(( participants = new MockParticipantManager((((@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "String newSessionId = controller.getSessionId()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "Assert.assertEquals(handlerNb,controllerHandlerNb,\"controller callback handlers should not increase after participant session expiry, but was \" + printHandlers(controller))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "ZkTestHelper.expireSession(participantManagerToExpire.getZkClient())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())return watchPaths.size() == (8 + r + (5 + r) * n)}},2000)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "participants(i(.syncStart()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final MockParticipantManager participantManagerToExpire = participants(1(@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller_0\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(particHandlerNb,1,\"HelixParticipant should have 1 (msgHelixTaskExecutor) callback handlers\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManagerToExpire.getSessionId())return watchPaths.size() == 1}},2000)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "int particHandlerNb = participantManager.getHandlers().size()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "TestHelper.dropCluster(clusterName,_gZkClient)@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 1 zk-watcher. MESSAGESHelixTaskExecutor\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < n@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final int r = 2@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(result)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "System.out.println(\"Expired participant session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "System.out.println(\"Expiring participant session...\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "int handlerNb = controller.getHandlers().size()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertTrue(result,\"Controller has incorrect number of zk-watchers after session expiry.\")@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "int i = 0@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "System.out.println(\"Expired controller session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "controller.syncStart()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boolean result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())return watchPaths.size() == (8 + r + (5 + r) * n)}},2000)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "int i = 0@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "participants(i(.syncStop()@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String newSessionId = participantManagerToExpire.getSessionId()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "boolean result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())System.err.println(\"controller watch paths after session expiry: \" + watchPaths.size())int expected = (8 + r + (5 + r) * n)return watchPaths.size() == expected}},2000)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26->41 [style = solid, label="clusterName"];
56->71 [style = solid, label="i"];
16->26 [style = solid, label="className"];
40->39 [style = solid, label="controllerHandlerNb"];
6->49 [style = solid, label="handlerNb"];
10->50 [style = dashed, label="0"];
25->74 [style = solid, label="participants"];
59->62 [style = solid, label="particHandlerNb"];
26->23 [style = solid, label="clusterName"];
65->43 [style = solid, label="r"];
43->59 [style = dashed, label="0"];
27->1 [style = solid, label="i"];
19->36 [style = bold, label=""];
42->48 [style = bold, label=""];
72->63 [style = solid, label="newSessionId"];
41->11 [style = bold, label=""];
59->58 [style = bold, label=""];
41->58 [style = solid, label="controller"];
57->63 [style = solid, label="oldSessionId"];
22->65 [style = bold, label=""];
64->73 [style = bold, label=""];
4->44 [style = bold, label=""];
26->22 [style = bold, label=""];
7->14 [style = bold, label=""];
49->8 [style = bold, label=""];
5->69 [style = dashed, label="0"];
22->43 [style = solid, label="n"];
1->13 [style = dotted, label="true"];
1->33 [style = bold, label=""];
58->62 [style = bold, label=""];
48->9 [style = dotted, label="true"];
22->58 [style = solid, label="n"];
46->7 [style = bold, label=""];
18->32 [style = bold, label=""];
9->48 [style = solid, label="i"];
48->18 [style = bold, label=""];
66->58 [style = solid, label="controllerHandlerNb"];
31->20 [style = bold, label=""];
47->0 [style = bold, label=""];
71->38 [style = dotted, label="true"];
19->65 [style = dashed, label="0"];
17->21 [style = bold, label=""];
22->14 [style = solid, label="n"];
19->44 [style = solid, label="r"];
11->25 [style = bold, label=""];
1->27 [style = dotted, label="true"];
55->60 [style = bold, label=""];
5->29 [style = bold, label=""];
73->67 [style = bold, label=""];
1->50 [style = bold, label=""];
57->61 [style = bold, label=""];
42->48 [style = solid, label="i"];
52->29 [style = solid, label="result"];
16->45 [style = bold, label=""];
31->61 [style = dashed, label="0"];
63->54 [style = bold, label=""];
56->71 [style = bold, label=""];
26->36 [style = solid, label="clusterName"];
26->37 [style = solid, label="clusterName"];
22->1 [style = solid, label="n"];
6->49 [style = bold, label=""];
9->48 [style = bold, label=""];
19->14 [style = solid, label="r"];
37->27 [style = solid, label="i"];
49->73 [style = dashed, label="0"];
21->4 [style = solid, label="result"];
51->16 [style = bold, label=""];
74->55 [style = solid, label="participantManager"];
24->55 [style = dashed, label="0"];
12->1 [style = bold, label=""];
43->35 [style = solid, label="particHandlerNb"];
7->74 [style = dashed, label="0"];
14->47 [style = solid, label="result"];
65->23 [style = solid, label="r"];
38->6 [style = bold, label=""];
35->62 [style = dashed, label="0"];
0->34 [style = bold, label=""];
6->38 [style = bold, label=""];
43->69 [style = solid, label="result"];
1->33 [style = dotted, label="true"];
33->37 [style = solid, label="instanceName"];
39->35 [style = bold, label=""];
48->30 [style = dotted, label="true"];
29->64 [style = bold, label=""];
43->69 [style = bold, label=""];
29->38 [style = bold, label=""];
62->68 [style = bold, label=""];
39->58 [style = dashed, label="0"];
37->13 [style = bold, label=""];
64->73 [style = solid, label="handlerNb"];
61->72 [style = bold, label=""];
21->4 [style = bold, label=""];
60->56 [style = bold, label=""];
8->24 [style = bold, label=""];
12->33 [style = solid, label="i"];
43->24 [style = solid, label="particHandlerNb"];
42->9 [style = solid, label="i"];
34->40 [style = bold, label=""];
22->19 [style = bold, label=""];
35->15 [style = bold, label=""];
0->34 [style = solid, label="result"];
3->57 [style = dashed, label="0"];
54->43 [style = bold, label=""];
44->5 [style = solid, label="result"];
59->55 [style = solid, label="particHandlerNb"];
26->8 [style = solid, label="clusterName"];
38->71 [style = solid, label="i"];
22->44 [style = solid, label="n"];
40->49 [style = solid, label="controllerHandlerNb"];
74->62 [style = solid, label="participantManager"];
27->33 [style = solid, label="i"];
30->9 [style = bold, label=""];
22->71 [style = solid, label="n"];
23->41 [style = bold, label=""];
8->67 [style = dashed, label="0"];
15->3 [style = bold, label=""];
22->48 [style = solid, label="n"];
70->16 [style = bold, label=""];
22->23 [style = solid, label="n"];
45->26 [style = solid, label="methodName"];
13->27 [style = bold, label=""];
4->43 [style = dashed, label="0"];
72->63 [style = bold, label=""];
20->72 [style = dashed, label="0"];
37->7 [style = solid, label="participants"];
3->17 [style = solid, label="oldSessionId"];
12->1 [style = solid, label="i"];
14->47 [style = bold, label=""];
20->17 [style = solid, label="newSessionId"];
29->38 [style = solid, label="result"];
40->43 [style = bold, label=""];
26->18 [style = solid, label="clusterName"];
71->8 [style = bold, label=""];
33->37 [style = bold, label=""];
48->30 [style = bold, label=""];
43->39 [style = bold, label=""];
44->5 [style = bold, label=""];
66->73 [style = solid, label="controllerHandlerNb"];
46->74 [style = bold, label=""];
1->37 [style = dotted, label="true"];
71->6 [style = bold, label=""];
56->38 [style = solid, label="i"];
67->55 [style = solid, label="handlerNb"];
41->73 [style = solid, label="controller"];
27->1 [style = bold, label=""];
20->17 [style = bold, label=""];
14->53 [style = dashed, label="0"];
24->2 [style = bold, label=""];
3->31 [style = bold, label=""];
50->46 [style = bold, label=""];
8->24 [style = solid, label="handlerNb"];
10->46 [style = bold, label=""];
28->16 [style = bold, label=""];
26->24 [style = solid, label="clusterName"];
26->21 [style = solid, label="clusterName"];
74->53 [style = bold, label=""];
68->57 [style = bold, label=""];
65->36 [style = bold, label=""];
67->55 [style = bold, label=""];
36->23 [style = bold, label=""];
15->68 [style = dashed, label="0"];
25->12 [style = bold, label=""];
71->6 [style = dotted, label="true"];
25->7 [style = solid, label="participants"];
19->23 [style = solid, label="r"];
53->66 [style = bold, label=""];
17->63 [style = dashed, label="0"];
52->29 [style = bold, label=""];
45->26 [style = bold, label=""];
37->74 [style = solid, label="participants"];
69->52 [style = bold, label=""];
1->10 [style = bold, label=""];
66->59 [style = bold, label=""];
2->42 [style = bold, label=""];
26->32 [style = solid, label="clusterName"];
38->71 [style = bold, label=""];
}
