digraph {
22 [style = filled, label = "c1.addSeries(new YIntervalSeries<>(\"Empty Series\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "s1.add(new Year(2006),1.0,1.1,1.2,1.3)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFalse(c1.equals(c2))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "c2.setXPosition(TimePeriodAnchor.END)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "YIntervalSeries<String> s1 = new YIntervalSeries<>(\"Series\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "YIntervalSeriesCollection c2 = new YIntervalSeriesCollection()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(c1,c2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "OHLCSeriesCollection c1 = new OHLCSeriesCollection()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "c1.addSeries(new OHLCSeries(\"Empty Series\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertFalse(c1.equals(c2))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertFalse(c1.equals(c2))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "c1.addSeries(s1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "OHLCSeriesCollection c2 = new OHLCSeriesCollection()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "s2.add(new Year(2006),1.0,1.1,1.2,1.3)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "YIntervalSeriesCollection c1 = new YIntervalSeriesCollection()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "OHLCSeries s2 = new OHLCSeries(\"Series\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "YIntervalSeries s2 = new YIntervalSeries(\"Series\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "c2.addSeries(new YIntervalSeries<>(\"Empty Series\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "c2.addSeries(s2)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(c1.equals(c2))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"Series\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "YIntervalSeriesCollection<String> c1 = new YIntervalSeriesCollection<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "s2.add(1.0,1.1,1.2,1.3)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "c2.addSeries(new OHLCSeries(\"Empty Series\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "YIntervalSeries s1 = new YIntervalSeries(\"Series\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "YIntervalSeriesCollection<String> c2 = new YIntervalSeriesCollection<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "c2.addSeries(new YIntervalSeries(\"Empty Series\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "c1.setXPosition(TimePeriodAnchor.END)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(c1.equals(c2))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(c1.equals(c2))@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "c1.addSeries(new YIntervalSeries(\"Empty Series\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "YIntervalSeries<String> s2 = new YIntervalSeries<>(\"Series\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11->32 [style = dashed, label="0"];
32->35 [style = bold, label=""];
6->3 [style = bold, label=""];
18->3 [style = bold, label=""];
1->4 [style = bold, label=""];
15->10 [style = bold, label=""];
24->12 [style = bold, label=""];
16->10 [style = solid, label="c2"];
35->31 [style = solid, label="c2"];
9->11 [style = bold, label=""];
1->35 [style = dashed, label="0"];
35->34 [style = solid, label="c2"];
11->1 [style = bold, label=""];
14->25 [style = dashed, label="0"];
35->12 [style = solid, label="c2"];
13->20 [style = dashed, label="0"];
10->19 [style = bold, label=""];
1->10 [style = solid, label="c2"];
13->29 [style = dashed, label="0"];
4->13 [style = bold, label=""];
27->3 [style = bold, label=""];
26->34 [style = bold, label=""];
20->15 [style = solid, label="s1"];
32->4 [style = solid, label="c1"];
5->7 [style = solid, label="s2"];
0->23 [style = dashed, label="0"];
29->25 [style = bold, label=""];
1->4 [style = solid, label="c2"];
20->14 [style = bold, label=""];
4->29 [style = bold, label=""];
11->4 [style = solid, label="c1"];
11->17 [style = dashed, label="0"];
16->12 [style = solid, label="c2"];
8->24 [style = dashed, label="0"];
35->2 [style = solid, label="c2"];
12->6 [style = bold, label=""];
35->4 [style = bold, label=""];
19->0 [style = bold, label=""];
35->10 [style = solid, label="c2"];
28->32 [style = bold, label=""];
0->7 [style = bold, label=""];
33->23 [style = bold, label=""];
6->18 [style = dashed, label="0"];
8->22 [style = dashed, label="0"];
31->26 [style = bold, label=""];
19->7 [style = solid, label="s2"];
10->5 [style = bold, label=""];
16->2 [style = solid, label="c2"];
35->3 [style = solid, label="c2"];
5->0 [style = bold, label=""];
1->12 [style = solid, label="c2"];
6->27 [style = dashed, label="0"];
30->31 [style = bold, label=""];
7->2 [style = bold, label=""];
22->12 [style = bold, label=""];
1->16 [style = dashed, label="0"];
5->19 [style = dashed, label="0"];
35->4 [style = solid, label="c2"];
4->20 [style = bold, label=""];
12->18 [style = bold, label=""];
5->33 [style = dashed, label="0"];
25->15 [style = bold, label=""];
29->15 [style = solid, label="s1"];
14->15 [style = bold, label=""];
10->33 [style = bold, label=""];
23->7 [style = bold, label=""];
1->3 [style = solid, label="c2"];
2->24 [style = bold, label=""];
16->4 [style = bold, label=""];
2->22 [style = bold, label=""];
33->7 [style = solid, label="s2"];
3->30 [style = bold, label=""];
17->4 [style = solid, label="c1"];
13->14 [style = bold, label=""];
21->17 [style = bold, label=""];
12->27 [style = bold, label=""];
8->12 [style = bold, label=""];
13->15 [style = solid, label="s1"];
17->16 [style = bold, label=""];
1->2 [style = solid, label="c2"];
2->8 [style = bold, label=""];
16->3 [style = solid, label="c2"];
16->4 [style = solid, label="c2"];
}
