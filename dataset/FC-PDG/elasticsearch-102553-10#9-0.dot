digraph {
29 [style = filled, label = "termsQuery = mapperService.fieldType(\"nested2.foo\").termsQuery(Collections.singletonList(\"bar\"),null)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "rangeQuery = mapperService.fieldType(\"nested2.foo2\").rangeQuery(2,5,true,true,null,null,null,context)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested2\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "QueryShardContext context = createSearchContext(indexService).getQueryShardContext()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertFalse(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "rangeQuery = mapperService.fieldType(\"nested1.foo2\").rangeQuery(2,5,true,true,null,null,null,context)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested_missing\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "termsQuery = mapperService.fieldType(\"nested3.foo\").termsQuery(Collections.singletonList(\"bar\"),null)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested1\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested_missing\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "SearchExecutionContext context = createSearchContext(indexService).getSearchExecutionContext()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested1\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "rangeQuery = mapperService.fieldType(\"nested3.foo2\").rangeQuery(2,5,true,true,null,null,null,context)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested_missing\"))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested3\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested1\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertFalse(buildNestedHelper(mapperService).mightMatchNestedDocs(termsQuery))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested2\"))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Query rangeQuery = mapperService.fieldType(\"foo2\").rangeQuery(2,5,true,true,null,null,null,context)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNestedDocs(termsQuery))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNestedDocs(termsQuery))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested2\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested2\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested3\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNestedDocs(termsQuery))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertFalse(buildNestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "termsQuery = mapperService.fieldType(\"nested1.foo\").termsQuery(Collections.singletonList(\"bar\"),null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested3\"))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested3\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertFalse(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested1\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "testTermsQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Query termsQuery = mapperService.fieldType(\"foo\").termsQuery(Collections.singletonList(\"bar\"),null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertTrue(buildNestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested_missing\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testRangeQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "testRangeQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
10->24 [style = solid, label="rangeQuery"];
40->49 [style = bold, label=""];
32->37 [style = bold, label=""];
47->36 [style = solid, label="termsQuery"];
29->30 [style = solid, label="termsQuery"];
29->35 [style = solid, label="termsQuery"];
6->21 [style = solid, label="rangeQuery"];
45->33 [style = bold, label=""];
42->48 [style = bold, label=""];
29->50 [style = solid, label="termsQuery"];
0->13 [style = solid, label="rangeQuery"];
12->7 [style = bold, label=""];
1->23 [style = bold, label=""];
38->30 [style = bold, label=""];
6->12 [style = solid, label="rangeQuery"];
3->6 [style = solid, label="context"];
2->15 [style = bold, label=""];
10->17 [style = solid, label="rangeQuery"];
41->45 [style = bold, label=""];
47->51 [style = solid, label="termsQuery"];
43->44 [style = bold, label=""];
10->22 [style = solid, label="rangeQuery"];
27->6 [style = solid, label="context"];
3->0 [style = solid, label="context"];
17->5 [style = bold, label=""];
23->25 [style = bold, label=""];
48->41 [style = bold, label=""];
12->37 [style = dashed, label="0"];
6->10 [style = solid, label="rangeQuery"];
37->36 [style = bold, label=""];
27->0 [style = bold, label=""];
43->49 [style = solid, label="termsQuery"];
3->10 [style = solid, label="context"];
10->11 [style = solid, label="rangeQuery"];
6->7 [style = solid, label="rangeQuery"];
2->30 [style = dashed, label="0"];
6->8 [style = solid, label="rangeQuery"];
0->14 [style = solid, label="rangeQuery"];
3->0 [style = bold, label=""];
35->52 [style = bold, label=""];
43->46 [style = solid, label="termsQuery"];
21->32 [style = dashed, label="0"];
15->50 [style = dashed, label="0"];
5->1 [style = bold, label=""];
26->27 [style = bold, label=""];
52->42 [style = bold, label=""];
20->8 [style = bold, label=""];
27->10 [style = solid, label="context"];
49->46 [style = bold, label=""];
19->46 [style = dashed, label="0"];
17->1 [style = solid, label="rangeQuery"];
13->49 [style = dashed, label="0"];
11->17 [style = bold, label=""];
17->5 [style = solid, label="rangeQuery"];
10->2 [style = bold, label=""];
29->38 [style = bold, label=""];
34->35 [style = bold, label=""];
29->52 [style = solid, label="termsQuery"];
24->34 [style = dashed, label="0"];
22->11 [style = bold, label=""];
29->34 [style = solid, label="termsQuery"];
14->40 [style = dashed, label="0"];
50->34 [style = bold, label=""];
47->29 [style = solid, label="termsQuery"];
3->17 [style = solid, label="context"];
27->17 [style = solid, label="context"];
36->51 [style = bold, label=""];
6->21 [style = bold, label=""];
47->31 [style = bold, label=""];
31->32 [style = bold, label=""];
3->27 [style = dashed, label="0"];
0->4 [style = solid, label="rangeQuery"];
7->20 [style = bold, label=""];
27->0 [style = solid, label="context"];
25->16 [style = bold, label=""];
47->37 [style = solid, label="termsQuery"];
30->50 [style = bold, label=""];
21->12 [style = bold, label=""];
51->29 [style = bold, label=""];
10->15 [style = solid, label="rangeQuery"];
13->19 [style = bold, label=""];
10->2 [style = solid, label="rangeQuery"];
0->19 [style = solid, label="rangeQuery"];
18->28 [style = dashed, label="0"];
9->3 [style = bold, label=""];
0->18 [style = bold, label=""];
14->13 [style = bold, label=""];
0->18 [style = solid, label="rangeQuery"];
6->20 [style = solid, label="rangeQuery"];
43->44 [style = solid, label="termsQuery"];
22->35 [style = dashed, label="0"];
28->40 [style = bold, label=""];
47->32 [style = solid, label="termsQuery"];
4->6 [style = bold, label=""];
20->51 [style = dashed, label="0"];
39->43 [style = bold, label=""];
52->48 [style = solid, label="termsQuery"];
23->45 [style = dashed, label="0"];
29->38 [style = solid, label="termsQuery"];
17->16 [style = solid, label="rangeQuery"];
43->28 [style = solid, label="termsQuery"];
43->40 [style = solid, label="termsQuery"];
1->41 [style = dashed, label="0"];
52->45 [style = solid, label="termsQuery"];
24->22 [style = bold, label=""];
46->47 [style = bold, label=""];
17->25 [style = solid, label="rangeQuery"];
5->48 [style = dashed, label="0"];
47->31 [style = solid, label="termsQuery"];
44->28 [style = bold, label=""];
43->47 [style = solid, label="termsQuery"];
52->41 [style = solid, label="termsQuery"];
52->33 [style = solid, label="termsQuery"];
15->24 [style = bold, label=""];
0->6 [style = solid, label="rangeQuery"];
25->33 [style = dashed, label="0"];
19->4 [style = bold, label=""];
17->23 [style = solid, label="rangeQuery"];
18->14 [style = bold, label=""];
7->36 [style = dashed, label="0"];
52->42 [style = solid, label="termsQuery"];
}
