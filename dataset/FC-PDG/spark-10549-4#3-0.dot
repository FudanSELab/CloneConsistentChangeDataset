digraph {
6 [style = filled, label = "File file1 = new File(tempDirName + \"/part-00000\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String tempDirName = tempDir.getAbsolutePath()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ByteBuffer bbuf = ByteBuffer.wrap(content1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "binaryFilesCaching['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "channel1.write(bbuf)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertArrayEquals(content1,res._2().toArray())@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "binaryFiles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "FileChannel channel1 = fos1.getChannel()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "binaryFilesCaching['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "readRDD.foreach(null)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "JavaPairRDD<String,PortableDataStream> readRDD = sc.binaryFiles(tempDirName).cache()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<Tuple2<String,PortableDataStream>> result = readRDD.collect()@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertArrayEquals(content1,res._2().toArray())@@@20@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "FileOutputStream fos1 = new FileOutputStream(file1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "byte(( content1 = \"spark is easy to use.\".getBytes(StandardCharsets.UTF_8)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<Tuple2<String,PortableDataStream>> result = readRDD.collect()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "readRDD.foreach(new VoidFunction<Tuple2<String,PortableDataStream>>(){@Override public void call(Tuple2<String,PortableDataStream> pair){pair._2().toArray()}})@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "List<Tuple2<String,PortableDataStream>> result = readRDD.collect()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "JavaPairRDD<String,PortableDataStream> readRDD = sc.binaryFiles(tempDirName,3)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertArrayEquals(content1,res._2().toArray())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "channel1.close()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
11->20 [style = bold, label=""];
15->13 [style = bold, label=""];
9->0 [style = bold, label=""];
12->5 [style = bold, label=""];
10->17 [style = solid, label="content1"];
16->10 [style = bold, label=""];
2->6 [style = bold, label=""];
7->20 [style = dashed, label="0"];
0->11 [style = bold, label=""];
2->20 [style = solid, label="tempDirName"];
19->17 [style = bold, label=""];
3->12 [style = bold, label=""];
10->5 [style = solid, label="content1"];
9->0 [style = solid, label="bbuf"];
7->3 [style = bold, label=""];
2->6 [style = solid, label="tempDirName"];
10->13 [style = solid, label="content1"];
7->14 [style = bold, label=""];
18->10 [style = bold, label=""];
6->8 [style = bold, label=""];
6->8 [style = solid, label="file1"];
10->9 [style = solid, label="content1"];
10->2 [style = bold, label=""];
14->15 [style = bold, label=""];
8->4 [style = bold, label=""];
3->14 [style = dashed, label="0"];
20->19 [style = bold, label=""];
1->10 [style = bold, label=""];
11->7 [style = bold, label=""];
}
