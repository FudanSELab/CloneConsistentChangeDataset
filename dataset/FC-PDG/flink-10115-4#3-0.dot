digraph {
23 [style = filled, label = "assertEquals(totalStateSize,stateMap.totalSize())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "CopyOnWriteSkipListStateMap<Integer,Long,String> stateMap = createEmptyStateMap(0,0.0f,spaceAllocator)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testPhysicallyRemoveWithFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "CopyOnWriteSkipListStateMapSnapshot<Integer,Long,String> snapshot1 = stateMap.stateSnapshot()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(0,stateMap.size())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i <= 100@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(totalSizeIncludingLogicallyRemovedStatesAfterSecondSnapshot,stateMap.getLogicallyRemovedNodes().size())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "expectedSize += f.apply(stateMap,referenceStates,i)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(totalStateSize * 2,spaceAllocator.getTotalSpaceNumber())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "addToReferenceState(referenceStates,i,(long)i,String.valueOf(i))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "TriFunction<CopyOnWriteSkipListStateMap<Integer,Long,String>,Map<Long,Map<Integer,String>>,Integer,Integer> f@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "verifySnapshotWithoutTransform(expectedSnapshot1,snapshot1,keySerializer,namespaceSerializer,stateSerializer)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "int totalSizeIncludingLogicallyRemovedStatesAfterSecondSnapshot = 0@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(totalSizeIncludingLogicallyRemovedStates * 3,spaceAllocator.getTotalSpaceNumber())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "int expectedSize = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "CopyOnWriteSkipListStateMap<Integer,Long,String> stateMap = createEmptyStateMap(2,1.0f,spaceAllocator)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int i = 1@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestAllocator spaceAllocator = new TestAllocator(256)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertFalse(stateMap.iterator().hasNext())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "prepareLogicallyRemovedStates(referenceStates,stateMap,keySerializer,namespaceSerializer,stateSerializer)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<Long,Map<Integer,String>> expectedSnapshot1 = snapshotReferenceStates(referenceStates)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(totalSizeIncludingLogicallyRemovedStates,stateMap.totalSize())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "SnapshotVerificationMode verificationMode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "verifySnapshotWithoutTransform(expectedSnapshot2,snapshot2,keySerializer,namespaceSerializer,stateSerializer,verificationMode)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "testPhysicallyRemoveDuringSyncPartOfSnapshot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "i += 2@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(0,spaceAllocator.getTotalSpaceNumber())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "i++@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(expectedSize,stateMap.size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(expectedSize * 2,spaceAllocator.getTotalSpaceNumber())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Map<Long,Map<Integer,String>> expectedSnapshot2 = snapshotReferenceStates(referenceStates)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "totalSizeIncludingLogicallyRemovedStates++@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "verifyState(referenceStates,stateMap)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "totalStateSize++@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "stateMap.put(i,(long)i,String.valueOf(i))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(0,totalStateSize)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "totalStateSize--@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(totalSizeIncludingLogicallyRemovedStatesAfterSecondSnapshot,stateMap.totalSize())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "CopyOnWriteSkipListStateMapSnapshot<Integer,Long,String> snapshot2 = stateMap.stateSnapshot()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int i = 1@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "verifyState(referenceStates,stateMap)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "i <= 100@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testPhysicallyRemoveDuringSyncPartOfSnapshot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertEquals(totalSizeIncludingLogicallyRemovedStates,stateMap.getLogicallyRemovedNodes().size())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "verifySnapshotWithoutTransform(expectedSnapshot1,snapshot1,keySerializer,namespaceSerializer,stateSerializer,verificationMode)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "removeFromReferenceState(referenceStates,i,(long)i)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(totalSizeIncludingLogicallyRemovedStates * 3,spaceAllocator.getTotalSpaceNumber())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "stateMap.close()@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "int i = 0@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "int totalStateSize = 0@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verifySnapshotWithoutTransform(expectedSnapshot2,snapshot2,keySerializer,namespaceSerializer,stateSerializer)@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "Map<Long,Map<Integer,String>> referenceStates = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(0,spaceAllocator.getTotalSpaceNumber())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(expectedSize,stateMap.totalSize())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "verifyState(referenceStates,stateMap)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "snapshot1.release()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int totalSizeIncludingLogicallyRemovedStates = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "verifyState(referenceStates,stateMap)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(0,stateMap.totalSize())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "stateMap.close()@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(totalStateSize,stateMap.size())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "snapshot2.release()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "stateMap.remove(i,(long)i)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51->59 [style = solid, label="expectedSize"];
10->2 [style = solid, label="stateMap"];
25->49 [style = bold, label=""];
8->10 [style = bold, label=""];
61->60 [style = solid, label="stateMap"];
32->22 [style = bold, label=""];
39->36 [style = dotted, label="true"];
28->6 [style = bold, label=""];
6->31 [style = dotted, label="true"];
10->11 [style = solid, label="stateMap"];
10->25 [style = solid, label="stateMap"];
34->11 [style = solid, label="referenceStates"];
39->24 [style = dotted, label="true"];
36->29 [style = bold, label=""];
24->20 [style = solid, label="totalSizeIncludingLogicallyRemovedStates"];
30->49 [style = solid, label="snapshot1"];
6->1 [style = dotted, label="true"];
28->6 [style = solid, label="i"];
51->53 [style = bold, label=""];
52->55 [style = bold, label=""];
14->40 [style = solid, label="totalSizeIncludingLogicallyRemovedStates"];
53->39 [style = solid, label="i"];
25->35 [style = bold, label=""];
51->56 [style = solid, label="expectedSize"];
53->39 [style = bold, label=""];
29->45 [style = bold, label=""];
39->55 [style = dotted, label="true"];
1->28 [style = bold, label=""];
55->52 [style = solid, label="i"];
40->11 [style = bold, label=""];
57->63 [style = bold, label=""];
30->35 [style = solid, label="snapshot1"];
28->15 [style = solid, label="i"];
37->38 [style = bold, label=""];
27->7 [style = bold, label=""];
14->24 [style = solid, label="totalSizeIncludingLogicallyRemovedStates"];
58->59 [style = bold, label=""];
5->28 [style = solid, label="i"];
14->9 [style = solid, label="totalSizeIncludingLogicallyRemovedStates"];
39->58 [style = bold, label=""];
45->29 [style = solid, label="i"];
31->19 [style = solid, label="totalStateSize"];
51->58 [style = solid, label="expectedSize"];
6->15 [style = dotted, label="true"];
60->51 [style = bold, label=""];
19->42 [style = bold, label=""];
52->58 [style = solid, label="expectedSize"];
43->16 [style = bold, label=""];
10->61 [style = dashed, label="0"];
12->16 [style = solid, label="expectedSnapshot2"];
35->49 [style = dashed, label="0"];
44->19 [style = solid, label="totalStateSize"];
44->18 [style = solid, label="totalStateSize"];
17->41 [style = bold, label=""];
22->43 [style = bold, label=""];
34->57 [style = solid, label="referenceStates"];
18->19 [style = bold, label=""];
45->36 [style = solid, label="i"];
11->12 [style = bold, label=""];
16->17 [style = bold, label=""];
56->57 [style = bold, label=""];
34->2 [style = solid, label="referenceStates"];
53->52 [style = solid, label="i"];
20->25 [style = bold, label=""];
46->37 [style = bold, label=""];
0->39 [style = solid, label="i"];
8->61 [style = bold, label=""];
39->29 [style = dotted, label="true"];
7->32 [style = solid, label="totalSizeIncludingLogicallyRemovedStatesAfterSecondSnapshot"];
31->18 [style = solid, label="totalStateSize"];
44->60 [style = dashed, label="0"];
14->20 [style = solid, label="totalSizeIncludingLogicallyRemovedStates"];
13->21 [style = solid, label="totalStateSize"];
39->52 [style = bold, label=""];
10->34 [style = bold, label=""];
5->6 [style = bold, label=""];
48->47 [style = dotted, label="true"];
2->21 [style = bold, label=""];
13->52 [style = dashed, label="0"];
7->23 [style = bold, label=""];
24->42 [style = solid, label="totalSizeIncludingLogicallyRemovedStates"];
49->3 [style = bold, label=""];
34->60 [style = solid, label="referenceStates"];
0->45 [style = solid, label="i"];
41->46 [style = bold, label=""];
28->1 [style = solid, label="i"];
38->33 [style = bold, label=""];
59->56 [style = bold, label=""];
34->4 [style = solid, label="referenceStates"];
0->39 [style = bold, label=""];
12->50 [style = solid, label="expectedSnapshot2"];
21->4 [style = bold, label=""];
13->24 [style = bold, label=""];
35->3 [style = bold, label=""];
47->49 [style = solid, label="verificationMode"];
61->52 [style = solid, label="stateMap"];
39->13 [style = bold, label=""];
50->17 [style = bold, label=""];
31->23 [style = solid, label="totalStateSize"];
44->21 [style = solid, label="totalStateSize"];
23->32 [style = bold, label=""];
4->49 [style = solid, label="expectedSnapshot1"];
13->23 [style = solid, label="totalStateSize"];
26->8 [style = bold, label=""];
24->40 [style = solid, label="totalSizeIncludingLogicallyRemovedStates"];
27->50 [style = solid, label="snapshot2"];
45->55 [style = dashed, label="0"];
44->14 [style = bold, label=""];
55->39 [style = bold, label=""];
34->1 [style = solid, label="referenceStates"];
0->36 [style = solid, label="i"];
13->31 [style = solid, label="totalStateSize"];
61->34 [style = bold, label=""];
52->59 [style = solid, label="expectedSize"];
9->18 [style = bold, label=""];
55->39 [style = solid, label="i"];
30->5 [style = bold, label=""];
39->2 [style = bold, label=""];
34->44 [style = bold, label=""];
34->12 [style = solid, label="referenceStates"];
39->13 [style = dotted, label="true"];
12->27 [style = bold, label=""];
39->45 [style = dotted, label="true"];
45->39 [style = bold, label=""];
24->9 [style = solid, label="totalSizeIncludingLogicallyRemovedStates"];
62->8 [style = bold, label=""];
27->16 [style = solid, label="snapshot2"];
13->18 [style = solid, label="totalStateSize"];
15->1 [style = bold, label=""];
61->57 [style = solid, label="stateMap"];
43->50 [style = bold, label=""];
39->52 [style = dotted, label="true"];
13->19 [style = solid, label="totalStateSize"];
4->35 [style = solid, label="expectedSnapshot1"];
44->31 [style = solid, label="totalStateSize"];
3->40 [style = bold, label=""];
44->13 [style = solid, label="totalStateSize"];
42->20 [style = bold, label=""];
14->42 [style = solid, label="totalSizeIncludingLogicallyRemovedStates"];
0->53 [style = dashed, label="0"];
34->25 [style = solid, label="referenceStates"];
48->8 [style = bold, label=""];
5->1 [style = solid, label="i"];
7->22 [style = solid, label="totalSizeIncludingLogicallyRemovedStatesAfterSecondSnapshot"];
8->61 [style = solid, label="spaceAllocator"];
31->15 [style = bold, label=""];
6->28 [style = dotted, label="true"];
0->29 [style = solid, label="i"];
45->39 [style = solid, label="i"];
24->36 [style = bold, label=""];
34->60 [style = bold, label=""];
6->31 [style = bold, label=""];
4->30 [style = bold, label=""];
14->0 [style = bold, label=""];
5->15 [style = solid, label="i"];
44->23 [style = solid, label="totalStateSize"];
34->29 [style = solid, label="referenceStates"];
47->50 [style = solid, label="verificationMode"];
62->54 [style = dotted, label="true"];
16->50 [style = dashed, label="0"];
34->52 [style = solid, label="referenceStates"];
8->10 [style = solid, label="spaceAllocator"];
6->9 [style = bold, label=""];
5->6 [style = solid, label="i"];
52->56 [style = solid, label="expectedSize"];
}
