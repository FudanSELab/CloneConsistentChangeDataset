digraph {
22 [style = filled, label = "assertTrue(consumerClient.poll(future,mockTime.timer(REQUEST_TIMEOUT_MS)))@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "RequestFuture<ByteBuffer> future = coordinator.sendJoinGroupRequest()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "mockClient.prepareResponse(null,joinGroupResponse(Errors.UNKNOWN_MEMBER_ID))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertTrue(coordinator.hasMatchingGenerationId(generation))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "coordinator.ensureCoordinatorReady(mockTime.timer(0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Errors.UNKNOWN_MEMBER_ID.message(),future.exception().getMessage())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "mockClient.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){if (!(body instanceof JoinGroupRequest)) {return false}JoinGroupRequest joinGroupRequest = (JoinGroupRequest)bodyif (!joinGroupRequest.data().memberId().equals(memberId)) {return false}return true}},joinGroupResponse(Errors.UNKNOWN_MEMBER_ID))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertTrue(coordinator.rejoinNeededOrPending())@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "mockClient.prepareResponse(joinGroupFollowerResponse(defaultGeneration,memberId,JoinGroupResponse.UNKNOWN_MEMBER_ID,Errors.MEMBER_ID_REQUIRED))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testJoinGroupRequestWithMemberIdRequired['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertTrue(coordinator.hasValidMemberId())@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "setupCoordinator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testJoinGroupRequestWithMemberIdRequired['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "mockClient.prepareResponse(joinGroupFollowerResponse(generation,memberId,JoinGroupResponse.UNKNOWN_MEMBER_ID,Errors.UNKNOWN_MEMBER_ID))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(consumerClient.poll(future,mockTime.timer(REBALANCE_TIMEOUT_MS)))@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(coordinator.hasValidMemberId())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(consumerClient.poll(future,mockTime.timer(REQUEST_TIMEOUT_MS)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "RequestFuture<ByteBuffer> future = coordinator.sendJoinGroupRequest()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "future = coordinator.sendJoinGroupRequest()@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(consumerClient.poll(future,mockTime.timer(REBALANCE_TIMEOUT_MS)))@@@29@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(Errors.MEMBER_ID_REQUIRED.message(),future.exception().getMessage())@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "mockClient.prepareResponse(groupCoordinatorResponse(node,Errors.NONE))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final String memberId = \"memberId\"@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(coordinator.hasMatchingGenerationId(generation))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "future = coordinator.sendJoinGroupRequest()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(coordinator.rejoinNeededOrPending())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testJoinGroupRequestWithGroupInstanceIdNotFound['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "mockClient.prepareResponse(joinGroupFollowerResponse(generation,memberId,JoinGroupResponse.UNKNOWN_MEMBER_ID,Errors.MEMBER_ID_REQUIRED))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertTrue(coordinator.hasMatchingGenerationId(defaultGeneration))@@@20@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final int generation = -1@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
23->25 [style = bold, label=""];
4->24 [style = bold, label=""];
16->8 [style = bold, label=""];
10->19 [style = bold, label=""];
9->4 [style = bold, label=""];
26->29 [style = bold, label=""];
15->11 [style = dashed, label="0"];
22->21 [style = bold, label=""];
9->24 [style = solid, label="memberId"];
11->12 [style = bold, label=""];
15->6 [style = bold, label=""];
19->17 [style = bold, label=""];
4->15 [style = solid, label="generation"];
7->8 [style = bold, label=""];
4->29 [style = solid, label="generation"];
20->5 [style = bold, label=""];
2->13 [style = bold, label=""];
8->0 [style = bold, label=""];
9->19 [style = dashed, label="0"];
12->2 [style = bold, label=""];
0->10 [style = bold, label=""];
18->22 [style = bold, label=""];
12->25 [style = dashed, label="0"];
21->20 [style = bold, label=""];
18->22 [style = solid, label="future"];
1->24 [style = dashed, label="0"];
28->8 [style = bold, label=""];
25->26 [style = bold, label=""];
4->1 [style = solid, label="generation"];
9->1 [style = solid, label="memberId"];
5->11 [style = solid, label="future"];
4->24 [style = solid, label="generation"];
1->14 [style = bold, label=""];
10->9 [style = bold, label=""];
4->1 [style = bold, label=""];
5->11 [style = bold, label=""];
13->15 [style = bold, label=""];
27->23 [style = bold, label=""];
12->2 [style = solid, label="future"];
6->3 [style = solid, label="future"];
27->23 [style = solid, label="future"];
24->27 [style = bold, label=""];
17->18 [style = bold, label=""];
14->5 [style = bold, label=""];
}
