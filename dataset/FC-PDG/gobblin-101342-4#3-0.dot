digraph {
10 [style = filled, label = "schemaWithComplexUnion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "JsonObject schema = getSchemaData(testName).getAsJsonObject()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(avroSchemaToJsonElement(converter),expected)@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String testName = \"schemaWithComplexUnion\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "UnionConverter converter = new UnionConverter(new JsonSchema(schema),state)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "schemaWithArrayIsNullable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "String testName = \"schemaWithArrayIsNullable\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ArrayConverter converter = new ArrayConverter(new JsonSchema(schema),state)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "schemaWithArrayIsNullable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "JsonArray expected = getExpectedSchema(testName).getAsJsonArray()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ArrayConverter converter = new ArrayConverter(new JsonSchema(schema),state,null)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
9->2 [style = bold, label=""];
8->3 [style = bold, label=""];
1->9 [style = dashed, label="0"];
0->3 [style = solid, label="expected"];
7->3 [style = bold, label=""];
7->3 [style = solid, label="converter"];
0->7 [style = bold, label=""];
6->1 [style = bold, label=""];
2->0 [style = bold, label=""];
2->8 [style = solid, label="schema"];
0->8 [style = bold, label=""];
5->8 [style = dashed, label="0"];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
10->9 [style = bold, label=""];
8->3 [style = solid, label="converter"];
2->7 [style = solid, label="schema"];
5->7 [style = dashed, label="0"];
5->3 [style = solid, label="converter"];
0->5 [style = bold, label=""];
2->5 [style = solid, label="schema"];
}
