digraph {
16 [style = filled, label = "Assertions.assertEquals(\"User1\",user.getName())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "Assert.assertEquals(2,user.getGroups().size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testCursorMultipleCloseCall['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "user = iterator.next()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertFalse(iterator.hasNext())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertEquals(3,user.getRoles().size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertTrue(usersCursor.isOpen())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(3,user.getGroups().size())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testCursorMultipleCloseCall['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Assert.assertEquals(1,user.getRoles().size())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assertions.assertFalse(iterator.hasNext())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Assert.assertEquals(3,user.getRoles().size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertEquals(2,user.getRoles().size())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "usersCursor = mapper.getAllUsers()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(iterator.hasNext())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "usersCursor.close()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "user = iterator.next()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertTrue(usersCursor.isOpen())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assert.assertFalse(iterator.hasNext())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(2,user.getGroups().size())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Iterator<User> iterator = usersCursor.iterator()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(1,user.getGroups().size())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "Cursor<User> usersCursor@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "user = iterator.next()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "usersCursor.close()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "User user = iterator.next()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "shouldGetAllUser['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertTrue(usersCursor.isConsumed())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
4->18 [style = dashed, label="0"];
2->19 [style = bold, label=""];
7->21 [style = dashed, label="0"];
0->26 [style = bold, label=""];
9->11 [style = bold, label=""];
24->42 [style = bold, label=""];
25->34 [style = bold, label=""];
16->8 [style = bold, label=""];
15->21 [style = bold, label=""];
31->32 [style = bold, label=""];
26->29 [style = bold, label=""];
28->39 [style = bold, label=""];
29->31 [style = bold, label=""];
11->4 [style = bold, label=""];
12->17 [style = bold, label=""];
0->16 [style = dashed, label="0"];
12->31 [style = dashed, label="0"];
5->15 [style = bold, label=""];
14->22 [style = dashed, label="0"];
11->23 [style = dashed, label="0"];
0->26 [style = dashed, label="0"];
6->0 [style = bold, label=""];
20->1 [style = bold, label=""];
33->5 [style = bold, label=""];
30->37 [style = bold, label=""];
13->19 [style = dashed, label="0"];
12->9 [style = bold, label=""];
17->23 [style = bold, label=""];
2->13 [style = bold, label=""];
7->14 [style = bold, label=""];
43->40 [style = bold, label=""];
19->5 [style = bold, label=""];
37->43 [style = bold, label=""];
3->7 [style = bold, label=""];
21->22 [style = bold, label=""];
6->16 [style = bold, label=""];
42->30 [style = bold, label=""];
39->2 [style = bold, label=""];
9->17 [style = dashed, label="0"];
40->41 [style = bold, label=""];
0->8 [style = bold, label=""];
13->5 [style = bold, label=""];
2->33 [style = bold, label=""];
38->25 [style = bold, label=""];
32->36 [style = bold, label=""];
3->15 [style = dashed, label="0"];
27->24 [style = bold, label=""];
1->2 [style = bold, label=""];
2->33 [style = dashed, label="0"];
36->38 [style = bold, label=""];
10->1 [style = bold, label=""];
14->6 [style = bold, label=""];
8->12 [style = bold, label=""];
23->18 [style = bold, label=""];
8->29 [style = dashed, label="0"];
22->6 [style = bold, label=""];
34->27 [style = bold, label=""];
4->41 [style = dashed, label="0"];
41->35 [style = bold, label=""];
}
