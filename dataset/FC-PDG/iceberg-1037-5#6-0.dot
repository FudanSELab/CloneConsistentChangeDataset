digraph {
0 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThanOrEqual(\"id\",29)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\",shouldRead)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(\"Should read: one possible id\",shouldRead)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThanOrEqual(\"id\",79)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (29 < 30)\",shouldRead)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(\"Should read: many possible ids\",shouldRead)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThanOrEqual(\"struct_not_null.int_field\",85)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThanOrEqual(\"id\",INT_MAX_VALUE)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThanOrEqual(\"id\",30)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThanOrEqual(\"id\",5)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThanOrEqual(\"struct_not_null.int_field\",79)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThanOrEqual(\"struct_not_null.int_field\",80)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testIntegerLtEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testStructFieldGtEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testIntegerLtEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (80 > 79)\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThanOrEqual(\"id\",INT_MIN_VALUE - 25)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertTrue(\"Should read: may possible ids\",shouldRead)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThanOrEqual(\"id\",INT_MIN_VALUE - 1)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThanOrEqual(\"id\",INT_MIN_VALUE)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThanOrEqual(\"struct_not_null.int_field\",75)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->0 [style = solid, label="shouldRead"];
7->11 [style = bold, label=""];
1->8 [style = bold, label=""];
14->17 [style = solid, label="shouldRead"];
3->21 [style = dashed, label="0"];
12->1 [style = solid, label="shouldRead"];
0->19 [style = dashed, label="0"];
19->20 [style = bold, label=""];
21->15 [style = bold, label=""];
11->6 [style = bold, label=""];
13->11 [style = solid, label="shouldRead"];
3->6 [style = bold, label=""];
14->17 [style = bold, label=""];
9->12 [style = solid, label="shouldRead"];
0->12 [style = dashed, label="0"];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
21->15 [style = solid, label="shouldRead"];
1->13 [style = bold, label=""];
17->19 [style = bold, label=""];
14->19 [style = solid, label="shouldRead"];
7->3 [style = bold, label=""];
8->7 [style = bold, label=""];
8->13 [style = dashed, label="0"];
4->5 [style = solid, label="shouldRead"];
1->20 [style = dashed, label="0"];
8->7 [style = solid, label="shouldRead"];
20->18 [style = bold, label=""];
19->20 [style = solid, label="shouldRead"];
4->9 [style = dashed, label="0"];
18->21 [style = solid, label="shouldRead"];
11->6 [style = solid, label="shouldRead"];
5->17 [style = dashed, label="0"];
5->0 [style = bold, label=""];
5->12 [style = bold, label=""];
6->15 [style = dashed, label="0"];
13->7 [style = bold, label=""];
0->1 [style = bold, label=""];
0->1 [style = solid, label="shouldRead"];
3->6 [style = solid, label="shouldRead"];
12->13 [style = solid, label="shouldRead"];
9->5 [style = bold, label=""];
18->7 [style = solid, label="shouldRead"];
7->21 [style = bold, label=""];
9->5 [style = solid, label="shouldRead"];
19->18 [style = solid, label="shouldRead"];
16->14 [style = bold, label=""];
10->9 [style = bold, label=""];
4->14 [style = dashed, label="0"];
8->18 [style = dashed, label="0"];
18->7 [style = bold, label=""];
4->5 [style = bold, label=""];
8->3 [style = solid, label="shouldRead"];
3->11 [style = dashed, label="0"];
13->7 [style = solid, label="shouldRead"];
0->8 [style = solid, label="shouldRead"];
}
