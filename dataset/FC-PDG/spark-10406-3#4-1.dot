digraph {
14 [style = filled, label = "byte(( data2 = new byte((((@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "row1.setLong(0,(relativeOffset(numFields) << 32) | (long)arrayData1.getSizeInBytes())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(0,compare(0,0))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "testBinaryComparatorForMixedColumns['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "row2.pointTo(data2,computeSizeInBytes(numFields * 8 + arrayData2.getSizeInBytes()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "UTF8String str2 = UTF8String.fromString(\"Java\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "UnsafeRow row2 = new UnsafeRow(numFields)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "row2.setLong(0,(relativeOffset(numFields) << 32) | (long)arrayData2.getSizeInBytes())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "insertRow(row2)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "UnsafeArrayData arrayData1 = UnsafeArrayData.fromPrimitiveArray(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a6eca1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "row1.pointTo(data1,computeSizeInBytes(numFields * 8 + arrayData1.getSizeInBytes()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Platform.copyMemory(arrayData1.getBaseObject(),arrayData1.getBaseOffset(),data1,row1.getBaseOffset() + relativeOffset(numFields),arrayData1.getSizeInBytes())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assert(compare(0,0) == 0)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "UTF8String str1 = UTF8String.fromString(\"Milk tea\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "insertRow(row2)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "row1.setDouble(1,3.14)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "row2.setInt(2,-1)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testBinaryComparatorForArrayColumn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Platform.copyMemory(arrayData2.getBaseObject(),arrayData2.getBaseOffset(),data2,row2.getBaseOffset() + relativeOffset(numFields),arrayData2.getSizeInBytes())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int numFields = 1@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "row2.setDouble(1,3.14)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "UnsafeRow row1 = new UnsafeRow(numFields)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "byte(( data1 = new byte((((@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "row2.pointTo(data2,computeSizeInBytes(numFields * 8 + str2.numBytes()))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertTrue(compare(0,1) > 0)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "UnsafeRow row2 = new UnsafeRow(numFields)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "row1.pointTo(data1,computeSizeInBytes(numFields * 8 + str1.numBytes()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "row2.setInt(0,11)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "row1.setInt(2,-1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "insertRow(row1)@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "row1.setInt(0,11)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "row2.setLong(3,(relativeOffset(numFields) << 32) | (long)str2.numBytes())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "insertRow(row1)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int numFields = 4@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "row1.setLong(3,(relativeOffset(numFields) << 32) | (long)str1.numBytes())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Platform.copyMemory(str1.getBaseObject(),str1.getBaseOffset(),data1,row1.getBaseOffset() + relativeOffset(numFields),str1.numBytes())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testBinaryComparatorForArrayColumn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Platform.copyMemory(str2.getBaseObject(),str2.getBaseOffset(),data2,row2.getBaseOffset() + relativeOffset(numFields),str2.numBytes())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assert(compare(0,1) > 0)@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
13->10 [style = bold, label=""];
9->6 [style = solid, label="row1"];
27->36 [style = bold, label=""];
34->9 [style = bold, label=""];
31->23 [style = bold, label=""];
32->37 [style = bold, label=""];
2->20 [style = dashed, label="0"];
12->13 [style = solid, label="numFields"];
11->14 [style = bold, label=""];
3->24 [style = bold, label=""];
38->11 [style = bold, label=""];
12->7 [style = solid, label="numFields"];
12->10 [style = solid, label="numFields"];
11->16 [style = solid, label="data2"];
0->15 [style = solid, label="row2"];
34->21 [style = solid, label="numFields"];
16->6 [style = bold, label=""];
19->20 [style = bold, label=""];
26->34 [style = bold, label=""];
12->16 [style = solid, label="numFields"];
18->12 [style = bold, label=""];
12->9 [style = solid, label="numFields"];
37->21 [style = bold, label=""];
0->11 [style = bold, label=""];
30->25 [style = bold, label=""];
34->37 [style = solid, label="numFields"];
1->19 [style = dashed, label="0"];
3->27 [style = solid, label="data1"];
12->4 [style = solid, label="numFields"];
3->7 [style = solid, label="data1"];
15->19 [style = bold, label=""];
12->9 [style = bold, label=""];
12->5 [style = solid, label="numFields"];
34->9 [style = solid, label="numFields"];
14->23 [style = solid, label="data2"];
6->15 [style = bold, label=""];
8->7 [style = bold, label=""];
11->2 [style = solid, label="row2"];
5->16 [style = bold, label=""];
23->28 [style = bold, label=""];
17->12 [style = bold, label=""];
34->27 [style = solid, label="numFields"];
28->33 [style = bold, label=""];
34->38 [style = solid, label="numFields"];
12->0 [style = solid, label="numFields"];
3->8 [style = bold, label=""];
3->38 [style = solid, label="data1"];
10->0 [style = bold, label=""];
14->31 [style = bold, label=""];
21->1 [style = bold, label=""];
9->3 [style = bold, label=""];
33->32 [style = bold, label=""];
1->2 [style = bold, label=""];
9->1 [style = solid, label="row1"];
29->22 [style = bold, label=""];
34->23 [style = solid, label="numFields"];
34->11 [style = solid, label="numFields"];
3->10 [style = solid, label="data1"];
34->25 [style = solid, label="numFields"];
36->35 [style = bold, label=""];
25->38 [style = bold, label=""];
35->30 [style = bold, label=""];
2->29 [style = bold, label=""];
14->21 [style = solid, label="data2"];
4->5 [style = bold, label=""];
24->27 [style = bold, label=""];
12->34 [style = dashed, label="0"];
11->4 [style = solid, label="data2"];
14->4 [style = bold, label=""];
15->1 [style = bold, label=""];
}
