digraph {
19 [style = filled, label = "EasyMock.replay(taskManager)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "partitionAssignor.setInternalTopicManager(internalTopicManager)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "builder.setApplicationId(applicationId)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final List<String> topics = asList(\"topic1\",\"test-topicX\",\"test-topicZ\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final Set<TaskId> allTasks = Utils.mkSet(task0_0,task0_1,task0_2)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final UUID uuid1 = UUID.randomUUID()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "builder.addSink(\"sink1\",\"topicX\",null,null,null,\"processor1\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String applicationId = \"test\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testAssignWithInternalTopicThatsSourceIsAnotherInternalTopic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "final Set<TaskId> allTasks = mkSet(task0_0,task0_1,task0_2)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "partitionAssignor.assign(metadata,new GroupSubscription(subscriptions)).groupAssignment()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "builder.addSink(\"sink2\",\"topicZ\",null,null,null,\"processor2\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(allTasks.size(),(long)internalTopicManager.readyTopics.get(applicationId + \"-topicX\"))@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final MockInternalTopicManager internalTopicManager = new MockInternalTopicManager(streamsConfig,mockClientSupplier.restoreConsumer)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "builder.addSource(null,\"source2\",null,null,null,\"topicX\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "configurePartitionAssignor(emptyMap())@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "builder.addSource(null,\"source3\",null,null,null,\"topicZ\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "builder.addInternalTopic(\"topicZ\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "configurePartitionAssignor(Collections.emptyMap())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testAssignWithInternalTopicThatsSourceIsAnotherInternalTopic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(1,internalTopicManager.readyTopics.size())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(2,internalTopicManager.readyTopics.size())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "builder.addProcessor(\"processor1\",new MockProcessorSupplier(),\"source1\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "subscriptions.put(\"consumer10\",new ConsumerPartitionAssignor.Subscription(topics,getInfo(uuid1,emptyTasks,emptyTasks).encode()))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "builder.addSource(null,\"source1\",null,null,null,\"topic1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "partitionAssignor.assign(metadata,new GroupSubscription(subscriptions)).groupAssignment()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final List<String> topics = asList(\"topic1\",applicationId + \"-topicX\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(allTasks.size(),(long)internalTopicManager.readyTopics.get(\"test-topicZ\"))@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testAssignWithInternalTopics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "createMockTaskManager(emptyTasks,emptyTasks,uuid1,builder)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "builder.addInternalTopic(\"topicX\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "builder.addProcessor(\"processor2\",new MockProcessorSupplier(),\"source2\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->22 [style = bold, label=""];
12->7 [style = bold, label=""];
21->3 [style = bold, label=""];
29->19 [style = bold, label=""];
0->4 [style = bold, label=""];
2->26 [style = bold, label=""];
10->23 [style = bold, label=""];
28->29 [style = solid, label="uuid1"];
19->5 [style = bold, label=""];
27->28 [style = bold, label=""];
13->17 [style = bold, label=""];
21->16 [style = bold, label=""];
31->8 [style = bold, label=""];
25->14 [style = bold, label=""];
15->2 [style = solid, label="internalTopicManager"];
19->24 [style = dashed, label="0"];
2->10 [style = bold, label=""];
4->9 [style = solid, label="topics"];
22->9 [style = bold, label=""];
5->15 [style = bold, label=""];
15->2 [style = bold, label=""];
11->14 [style = bold, label=""];
23->22 [style = solid, label="internalTopicManager"];
9->6 [style = bold, label=""];
30->31 [style = bold, label=""];
7->9 [style = dashed, label="0"];
4->24 [style = bold, label=""];
20->13 [style = bold, label=""];
4->19 [style = bold, label=""];
16->1 [style = bold, label=""];
16->27 [style = bold, label=""];
14->8 [style = bold, label=""];
6->12 [style = bold, label=""];
18->21 [style = bold, label=""];
10->26 [style = dashed, label="0"];
26->23 [style = bold, label=""];
5->15 [style = solid, label="uuid1"];
3->16 [style = bold, label=""];
24->5 [style = bold, label=""];
12->22 [style = dashed, label="0"];
8->20 [style = bold, label=""];
28->29 [style = bold, label=""];
16->10 [style = solid, label="topics"];
14->8 [style = solid, label="applicationId"];
1->0 [style = bold, label=""];
17->18 [style = bold, label=""];
}
