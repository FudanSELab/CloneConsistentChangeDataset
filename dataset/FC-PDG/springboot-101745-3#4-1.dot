digraph {
3 [style = filled, label = "List<EnvironmentPostProcessor> processors = factory.getEnvironmentPostProcessors(this.logFactory)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<EnvironmentPostProcessor> processors = factory.getEnvironmentPostProcessors(this.logFactory,this.bootstrapRegistry)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "ofClassesReturnsFactory['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "ofClassesReturnsFactory['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(processors.get(0)).isInstanceOf()@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ofClassNamesReturnsFactory['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "EnvironmentPostProcessorsFactory factory = EnvironmentPostProcessorsFactory.of()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(processors).hasSize(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EnvironmentPostProcessorsFactory factory = EnvironmentPostProcessorsFactory.of(.getName())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
1->5 [style = bold, label=""];
3->5 [style = dashed, label="0"];
6->1 [style = bold, label=""];
1->8 [style = dashed, label="0"];
5->0 [style = bold, label=""];
7->8 [style = bold, label=""];
0->4 [style = bold, label=""];
2->1 [style = bold, label=""];
3->0 [style = bold, label=""];
8->3 [style = bold, label=""];
}
