digraph {
20 [style = filled, label = "methodEntries@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "find['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "e.matches(c)@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "MethodEntry<V> e@@@3@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "return Optional.of(e.value)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Class<?> c@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "!noClassEntries@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "ClassEntry<V> e@@@3@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ClassEntry<V> e@@@3@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "classEntries@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "e.matches(c)@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return Optional.of(e.value)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "find['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Class<? extends V> ofType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Class<?> c@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "!noMethodEntries@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "e.matches(m)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Method m@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "classEntries@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Class<? extends V> ofType@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "find['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "return Optional.empty()@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return Optional.ofNullable(e.value)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "!noClassEntries@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7->2 [style = dotted, label="true"];
18->21 [style = solid, label="ofType"];
1->4 [style = bold, label=""];
10->15 [style = bold, label=""];
9->24 [style = dashed, label="0"];
16->10 [style = bold, label=""];
25->23 [style = bold, label=""];
9->4 [style = bold, label=""];
11->12 [style = dotted, label="true"];
11->4 [style = bold, label=""];
12->15 [style = bold, label=""];
1->3 [style = bold, label=""];
23->4 [style = bold, label=""];
5->6 [style = dotted, label="true"];
0->3 [style = solid, label="c"];
21->22 [style = dotted, label="true"];
11->12 [style = bold, label=""];
21->24 [style = bold, label=""];
5->0 [style = dotted, label="true"];
7->4 [style = bold, label=""];
3->9 [style = dotted, label="true"];
23->19 [style = dotted, label="true"];
3->4 [style = bold, label=""];
7->3 [style = bold, label=""];
11->15 [style = bold, label=""];
14->15 [style = solid, label="c"];
25->18 [style = dotted, label="true"];
10->17 [style = dotted, label="true"];
22->4 [style = bold, label=""];
10->15 [style = dotted, label="true"];
3->9 [style = bold, label=""];
23->20 [style = dotted, label="true"];
23->24 [style = bold, label=""];
24->4 [style = bold, label=""];
15->11 [style = bold, label=""];
6->9 [style = solid, label="ofType"];
10->13 [style = dotted, label="true"];
12->4 [style = bold, label=""];
24->21 [style = bold, label=""];
7->3 [style = dotted, label="true"];
21->22 [style = bold, label=""];
6->26 [style = dashed, label="0"];
9->17 [style = dashed, label="0"];
16->14 [style = dotted, label="true"];
15->4 [style = bold, label=""];
15->11 [style = dotted, label="true"];
9->1 [style = dotted, label="true"];
10->4 [style = bold, label=""];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
26->24 [style = solid, label="m"];
6->11 [style = solid, label="ofType"];
22->24 [style = bold, label=""];
9->1 [style = bold, label=""];
7->8 [style = dotted, label="true"];
24->21 [style = dotted, label="true"];
23->24 [style = dotted, label="true"];
25->26 [style = dotted, label="true"];
16->6 [style = dotted, label="true"];
21->4 [style = bold, label=""];
}
