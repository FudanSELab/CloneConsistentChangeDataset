digraph {
40 [style = filled, label = "++i@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "int i = 0@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "qs.createIndex(\"PortFolioID\",IndexType.FUNCTIONAL,\"ID\",\"/pos\")@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(expectedTypes(i(,sr(i((1(.getCollectionType().getElementType())@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final boolean(( expectedProjectionCallabck = new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1138fa@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i < queries.length@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final boolean(( actualUnionCallback = new boolean((((@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testBug39851['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final boolean(( actualIndexUsed = new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1138f1@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Query q = qs.newQuery(queries(i()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Query q = qs.newQuery(queries(i()@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(expectedIntersectionCallback(i(,actualIntersectionCallback(i()@@@78@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CacheUtils.compareResultsOfWithAndWithoutIndex(sr,this)@@@80@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "sr(i((0( = (SelectResults)q.execute()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "pf.setCreateTime(10l)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "i < queries.length@@@70@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testUnionDuringIndexEvaluationForIN['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Portfolio pf = new Portfolio(i)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "++i@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ObjectType(( expectedTypes = new ObjectType((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@113924@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "QueryService qs = CacheUtils.getQueryService()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "QueryObserverHolder.setInstance(new QueryObserverAdapter(){public void invokedQueryUtilsUnion(SelectResults r1,SelectResults r2){actualUnionCallback(i( = true}public void invokedQueryUtilsIntersection(SelectResults r1,SelectResults r2){actualIntersectionCallback(i( = true}public void beforeIndexLookup(Index index,int oper,Object key){actualIndexUsed(i( = true}public void beforeApplyingProjectionOnFilterEvaluatedResults(Object preProjectionApplied){actualProjectionCallback(i( = true}public void afterQueryEvaluation(Object result){++i}})@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final boolean(( actualIntersectionCallback = new boolean((((@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "rgn.put(\"\" + i,pf)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "sr(i((1( = (SelectResults)q.execute()@@@73@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "++i@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Region rgn = CacheUtils.getRegion(\"/pos\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SelectResults(((( sr = new SelectResults((((((@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(expectedTypes(i(,sr(i((1(.getCollectionType().getElementType())@@@75@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final boolean(( expectedIntersectionCallback = {false}@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final boolean(( actualProjectionCallback = new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@113903@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(expectedProjectionCallabck(i(,actualProjectionCallback(i()@@@77@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(expectedIndexUsed(i(,actualIndexUsed(i()@@@76@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String(( queries = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1138a9@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int i = 100@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final boolean(( expectedIndexUsed = new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1138e8@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testUnionDuringIndexEvaluationForIN['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "CacheUtils.compareResultsOfWithAndWithoutIndex(sr,this)@@@84@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "QueryObserverHolder.setInstance(new QueryObserverAdapter(){@Override public void invokedQueryUtilsUnion(SelectResults r1,SelectResults r2){actualUnionCallback(i( = true}@Override public void invokedQueryUtilsIntersection(SelectResults r1,SelectResults r2){actualIntersectionCallback(i( = true}@Override public void beforeIndexLookup(Index index,int oper,Object key){actualIndexUsed(i( = true}@Override public void beforeApplyingProjectionOnFilterEvaluatedResults(Object preProjectionApplied){actualProjectionCallback(i( = true}@Override public void afterQueryEvaluation(Object result){++i}})@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(expectedUnionCallback(i(,actualUnionCallback(i()@@@74@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(expectedIntersectionCallback(i(,actualIntersectionCallback(i()@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final boolean(( expectedUnionCallback = {false}@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "int i = 0@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(expectedProjectionCallabck(i(,actualProjectionCallback(i()@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "i < 200@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19->4 [style = solid, label="expectedTypes"];
18->31 [style = solid, label="i"];
42->41 [style = bold, label=""];
30->13 [style = bold, label=""];
13->36 [style = solid, label="queries"];
12->8 [style = dotted, label="true"];
32->12 [style = bold, label=""];
35->15 [style = solid, label="sr"];
27->28 [style = bold, label=""];
17->9 [style = bold, label=""];
32->9 [style = solid, label="i"];
34->18 [style = bold, label=""];
32->42 [style = solid, label="i"];
18->30 [style = bold, label=""];
20->36 [style = dotted, label="true"];
22->36 [style = solid, label="i"];
21->30 [style = bold, label=""];
9->10 [style = bold, label=""];
17->8 [style = solid, label="i"];
35->36 [style = solid, label="i"];
42->17 [style = dotted, label="true"];
8->0 [style = bold, label=""];
32->4 [style = solid, label="i"];
44->41 [style = solid, label="i"];
39->26 [style = solid, label="actualIndexUsed"];
10->8 [style = bold, label=""];
3->19 [style = bold, label=""];
43->1 [style = bold, label=""];
29->14 [style = bold, label=""];
20->37 [style = bold, label=""];
39->17 [style = solid, label="actualProjectionCallback"];
42->32 [style = dotted, label="true"];
30->33 [style = dotted, label="true"];
9->40 [style = bold, label=""];
32->12 [style = solid, label="i"];
12->17 [style = dotted, label="true"];
24->16 [style = solid, label="expectedIntersectionCallback"];
2->20 [style = bold, label=""];
41->32 [style = bold, label=""];
42->26 [style = dotted, label="true"];
26->17 [style = bold, label=""];
30->6 [style = dotted, label="true"];
19->39 [style = bold, label=""];
37->29 [style = bold, label=""];
17->26 [style = solid, label="i"];
13->11 [style = bold, label=""];
19->25 [style = bold, label=""];
11->8 [style = solid, label="sr"];
5->1 [style = bold, label=""];
31->6 [style = solid, label="pf"];
13->26 [style = solid, label="queries"];
25->8 [style = solid, label="actualIndexUsed"];
12->10 [style = dotted, label="true"];
22->20 [style = bold, label=""];
31->33 [style = bold, label=""];
25->16 [style = solid, label="actualIntersectionCallback"];
12->0 [style = dotted, label="true"];
28->24 [style = bold, label=""];
25->0 [style = solid, label="actualProjectionCallback"];
12->4 [style = dotted, label="true"];
23->7 [style = bold, label=""];
36->35 [style = bold, label=""];
17->15 [style = solid, label="sr"];
24->3 [style = bold, label=""];
18->6 [style = solid, label="i"];
27->12 [style = solid, label="expectedUnionCallback"];
25->9 [style = solid, label="actualUnionCallback"];
0->16 [style = bold, label=""];
44->42 [style = bold, label=""];
27->9 [style = solid, label="expectedUnionCallback"];
20->35 [style = dotted, label="true"];
17->0 [style = solid, label="i"];
6->21 [style = bold, label=""];
42->8 [style = bold, label=""];
35->2 [style = bold, label=""];
32->26 [style = solid, label="i"];
35->8 [style = solid, label="sr"];
35->20 [style = solid, label="i"];
42->40 [style = dotted, label="true"];
38->1 [style = bold, label=""];
17->12 [style = solid, label="i"];
42->41 [style = dotted, label="true"];
12->26 [style = dotted, label="true"];
1->34 [style = bold, label=""];
14->23 [style = bold, label=""];
23->17 [style = solid, label="expectedProjectionCallabck"];
30->31 [style = bold, label=""];
32->8 [style = solid, label="sr"];
29->8 [style = solid, label="expectedIndexUsed"];
11->22 [style = bold, label=""];
4->12 [style = bold, label=""];
18->30 [style = solid, label="i"];
16->4 [style = bold, label=""];
20->36 [style = bold, label=""];
30->31 [style = dotted, label="true"];
17->10 [style = solid, label="i"];
39->12 [style = solid, label="actualUnionCallback"];
39->44 [style = bold, label=""];
29->26 [style = solid, label="expectedIndexUsed"];
33->6 [style = bold, label=""];
12->15 [style = bold, label=""];
25->32 [style = bold, label=""];
4->26 [style = bold, label=""];
42->4 [style = dotted, label="true"];
24->9 [style = solid, label="expectedIntersectionCallback"];
12->26 [style = bold, label=""];
44->42 [style = solid, label="i"];
30->21 [style = dotted, label="true"];
17->9 [style = solid, label="i"];
39->9 [style = solid, label="actualIntersectionCallback"];
22->20 [style = solid, label="i"];
42->12 [style = dotted, label="true"];
17->16 [style = solid, label="i"];
11->15 [style = solid, label="sr"];
12->4 [style = bold, label=""];
12->16 [style = dotted, label="true"];
19->10 [style = solid, label="expectedTypes"];
32->17 [style = solid, label="i"];
42->9 [style = dotted, label="true"];
7->27 [style = bold, label=""];
20->2 [style = dotted, label="true"];
23->0 [style = solid, label="expectedProjectionCallabck"];
13->41 [style = solid, label="queries"];
40->42 [style = bold, label=""];
32->41 [style = solid, label="i"];
12->9 [style = dotted, label="true"];
}
