digraph {
14 [style = filled, label = "customEventType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(ev.getIdentifier(),is(identifier))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final CollectionDomainEvent<SomeDomainObject,SomeReferencedObject> ev = new DomainEventHelper(null).newCollectionDomainEvent(,AbstractDomainEvent.Phase.EXECUTED,identifier,sdo,CollectionDomainEvent.Of.REMOVE_FROM,other)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(ev.getOf(),is(CollectionDomainEvent.Of.REMOVE_FROM))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "customEventType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(ev.getValue(),is(other))@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SomeReferencedObject other = new SomeReferencedObject()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final Identifier identifier = Identifier.propertyOrCollectionIdentifier(,\"references\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final SomeReferencedObject other = new SomeReferencedObject()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final SomeDomainObject sdo = new SomeDomainObject()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(ev.getSource(),is(sdo))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final CollectionDomainEvent<SomeDomainObject,SomeReferencedObject> ev = new DomainEventHelper(null).newCollectionDomainEvent(,AbstractDomainEvent.Phase.EXECUTED,identifier,sdo,CollectionDomainEvent.Of.ADD_TO,other)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "SomeDomainObject sdo = new SomeDomainObject()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Identifier identifier = Identifier.propertyOrCollectionIdentifier(,\"references\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(ev.getOf(),is(CollectionDomainEvent.Of.ADD_TO))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final CollectionDomainEvent<SomeDomainObject,SomeReferencedObject> ev = new DomainEventHelper(null).newCollectionDomainEvent(,AbstractDomainEvent.Phase.EXECUTED,identifier,sdo,CollectionDomainEvent.Of.ADD_TO,other)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "customEventType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
1->4 [style = bold, label=""];
0->9 [style = bold, label=""];
15->13 [style = bold, label=""];
5->12 [style = dashed, label="0"];
7->1 [style = bold, label=""];
5->9 [style = solid, label="sdo"];
3->6 [style = solid, label="other"];
0->6 [style = bold, label=""];
15->16 [style = solid, label="other"];
6->9 [style = dashed, label="0"];
12->15 [style = bold, label=""];
16->7 [style = bold, label=""];
13->16 [style = solid, label="identifier"];
15->2 [style = solid, label="other"];
4->2 [style = bold, label=""];
9->7 [style = bold, label=""];
0->9 [style = solid, label="identifier"];
13->16 [style = bold, label=""];
11->2 [style = bold, label=""];
3->0 [style = bold, label=""];
1->11 [style = bold, label=""];
3->2 [style = solid, label="other"];
12->16 [style = solid, label="sdo"];
6->16 [style = dashed, label="0"];
10->5 [style = bold, label=""];
8->5 [style = bold, label=""];
0->6 [style = solid, label="identifier"];
12->7 [style = solid, label="sdo"];
14->12 [style = bold, label=""];
0->13 [style = dashed, label="0"];
0->1 [style = solid, label="identifier"];
3->15 [style = dashed, label="0"];
3->9 [style = solid, label="other"];
5->6 [style = solid, label="sdo"];
4->11 [style = dashed, label="0"];
6->7 [style = bold, label=""];
5->7 [style = solid, label="sdo"];
13->1 [style = solid, label="identifier"];
}
