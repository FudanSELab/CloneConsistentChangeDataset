digraph {
12 [style = filled, label = "TextFormat.ParseException e@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String error@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "parserWithOverwriteForbidden.merge(text,TestUtil.getExtensionRegistry(),builder)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "parserWithOverwriteForbidden.merge(text,TestUtil.getFullExtensionRegistry(),builder)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertParseErrorWithOverwriteForbidden['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertEquals(error,e.getMessage())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String text@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TestAllTypes.Builder builder = TestAllTypes.newBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String error@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertParseErrorWithOverwriteForbidden['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String text@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "String error@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "fail(\"Expected parse exception.\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "fail(\"Expected parse exception.\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TextFormat.merge(text,TestUtil.getExtensionRegistry(),builder)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TextFormat.parse(text,TestUtil.getExtensionRegistry(),)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertParseError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
13->10 [style = bold, label=""];
16->9 [style = dotted, label="true"];
10->14 [style = bold, label=""];
5->1 [style = dotted, label="true"];
2->0 [style = solid, label="builder"];
2->15 [style = solid, label="builder"];
9->10 [style = solid, label="text"];
0->15 [style = dashed, label="0"];
7->4 [style = bold, label=""];
5->3 [style = dotted, label="true"];
16->2 [style = bold, label=""];
8->3 [style = dotted, label="true"];
2->7 [style = solid, label="builder"];
12->13 [style = bold, label=""];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
12->13 [style = dotted, label="true"];
8->6 [style = dotted, label="true"];
8->2 [style = bold, label=""];
0->4 [style = bold, label=""];
2->15 [style = bold, label=""];
15->4 [style = bold, label=""];
6->7 [style = solid, label="text"];
2->7 [style = bold, label=""];
9->15 [style = solid, label="text"];
16->11 [style = dotted, label="true"];
0->7 [style = dashed, label="0"];
3->0 [style = solid, label="text"];
3->11 [style = dashed, label="0"];
}
