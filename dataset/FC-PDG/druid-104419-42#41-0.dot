digraph {
26 [style = filled, label = "final TaskToolboxFactory toolboxFactory = new TaskToolboxFactory(taskConfig,null,taskActionClientFactory,EMITTER,new TestDataSegmentPusher(),new TestDataSegmentKiller(),null,null,new TestDataSegmentAnnouncer(),EasyMock.createNiceMock(),handoffNotifierFactory,null,Execs.directExecutor(),NoopJoinableFactory.INSTANCE,null,new SegmentLoaderFactory(null,testUtils.getTestObjectMapper()),testUtils.getTestObjectMapper(),testUtils.getTestIndexIO(),MapCache.create(1024),new CacheConfig(),new CachePopulatorStats(),testUtils.getTestIndexMergerV9(),EasyMock.createNiceMock(),EasyMock.createNiceMock(),new LookupNodeService(\"tier\"),new DataNodeService(\"tier\",1000,ServerType.INDEXER_EXECUTOR,0),new NoopTestTaskReportFileWriter(),null,AuthTestUtils.TEST_AUTHORIZER_MAPPER,new NoopChatHandlerProvider(),testUtils.getRowIngestionMetersFactory(),new TestAppenderatorsManager(),new NoopIndexingServiceClient(),null,null,null)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "handOffCallbacks = new ConcurrentHashMap<>()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final Task task@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "return toolboxFactory.build(task)@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final File directory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final SegmentHandoffNotifierFactory handoffNotifierFactory = new SegmentHandoffNotifierFactory(){@Override public SegmentHandoffNotifier createSegmentHandoffNotifier(String dataSource){return new SegmentHandoffNotifier(){@Override public boolean registerSegmentHandoffCallback(SegmentDescriptor descriptor,Executor exec,Runnable handOffRunnable){handOffCallbacks.put(descriptor,new Pair<>(exec,handOffRunnable))return true}@Override public void start(){}@Override public void close(){}}}}@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "mapper.registerSubtypes()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final TestUtils testUtils = new TestUtils()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "handOffCallbacks = new ConcurrentHashMap<>()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final TaskStorage taskStorage@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "taskStorage = new HeapMemoryTaskStorage(new TaskStorageConfig(null))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final QueryRunnerFactoryConglomerate conglomerate = new DefaultQueryRunnerFactoryConglomerate(ImmutableMap.of(,new TimeseriesQueryRunnerFactory(new TimeseriesQueryQueryToolChest(),new TimeseriesQueryEngine(),new QueryWatcher(){@Override public void registerQueryFuture(Query query,ListenableFuture future){}})))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final IndexerMetadataStorageCoordinator mdc@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final TaskActionToolbox taskActionToolbox = new TaskActionToolbox(taskLockbox,taskStorage,mdc,EMITTER,EasyMock.createMock())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "{}@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final TaskConfig taskConfig = new TaskConfig(directory.getPath(),null,null,50000,null,true,null,null,null,false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final TaskConfig taskConfig = new TaskConfig(directory.getPath(),null,null,50000,null,true,null,null,null,false)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "taskToolboxFactory = new TaskToolboxFactory(taskConfig,new DruidNode(\"druid/middlemanager\",\"localhost\",false,8091,null,true,false),taskActionClientFactory,EMITTER,new TestDataSegmentPusher(),new TestDataSegmentKiller(),null,null,new TestDataSegmentAnnouncer(),EasyMock.createNiceMock(),handoffNotifierFactory,null,Execs.directExecutor(),NoopJoinableFactory.INSTANCE,null,new SegmentLoaderFactory(null,testUtils.getTestObjectMapper()),testUtils.getTestObjectMapper(),testUtils.getTestIndexIO(),MapCache.create(1024),new CacheConfig(),new CachePopulatorStats(),testUtils.getTestIndexMergerV9(),EasyMock.createNiceMock(),EasyMock.createNiceMock(),new LookupNodeService(\"tier\"),new DataNodeService(\"tier\",1000,ServerType.INDEXER_EXECUTOR,0),new SingleFileTaskReportFileWriter(reportsFile),null,AuthTestUtils.TEST_AUTHORIZER_MAPPER,new NoopChatHandlerProvider(),testUtils.getRowIngestionMetersFactory(),new TestAppenderatorsManager(),new NoopIndexingServiceClient(),null,null,null)@@@46@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "IndexerSQLMetadataStorageCoordinator mdc = new IndexerSQLMetadataStorageCoordinator(mapper,derbyConnectorRule.metadataTablesConfigSupplier().get(),derbyConnectorRule.getConnector()){@Override public Set<DataSegment> announceHistoricalSegments(Set<DataSegment> segments){Set<DataSegment> result = super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@aa1b01segmentsAssert.assertFalse(\"Segment latch not initialized, did you forget to call expectPublishSegments?\",segmentLatch == null)publishedSegments.addAll(result)segments.forEach(null)return result}@Override public SegmentPublishResult announceHistoricalSegments(Set<DataSegment> segments,Set<DataSegment> segmentsToDrop,DataSourceMetadata startMetadata,DataSourceMetadata endMetadata){SegmentPublishResult result = super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@aa1b27segmentssegmentsToDropstartMetadataendMetadataAssert.assertFalse(\"Segment latch not initialized, did you forget to call expectPublishSegments?\",segmentLatch == null)publishedSegments.addAll(result.getSegments())result.getSegments().forEach(null)return result}}@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final TaskActionToolbox taskActionToolbox = new TaskActionToolbox(taskLockbox,taskStorage,mdc,EMITTER,EasyMock.createMock())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final TaskActionClientFactory taskActionClientFactory = new LocalTaskActionClientFactory(taskStorage,taskActionToolbox,new TaskAuditLogConfig(false))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "makeToolboxFactory['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "ObjectMapper mapper = new DefaultObjectMapper()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "taskStorage.insert(task,TaskStatus.running(task.getId()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "publishedSegments = new CopyOnWriteArrayList<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "taskLockbox = new TaskLockbox(taskStorage,mdc)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "makeToolbox['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final TestUtils testUtils = new TestUtils()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "mapper.registerSubtypes()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "makeToolboxFactory['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final File directory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final TaskActionClientFactory taskActionClientFactory = new LocalTaskActionClientFactory(taskStorage,taskActionToolbox,new TaskAuditLogConfig(false))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final SegmentHandoffNotifierFactory handoffNotifierFactory = null@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final TaskLockbox taskLockbox = new TaskLockbox(taskStorage,mdc)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final QueryRunnerFactoryConglomerate conglomerate = new DefaultQueryRunnerFactoryConglomerate(ImmutableMap.of(,new TimeseriesQueryRunnerFactory(new TimeseriesQueryQueryToolChest(),new TimeseriesQueryEngine(),null)))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "EntryExistsException e@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "taskLockbox.syncFromStorage()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->7 [style = bold, label=""];
14->3 [style = solid, label="taskConfig"];
33->26 [style = solid, label="taskConfig"];
22->23 [style = dotted, label="true"];
31->19 [style = solid, label="taskLockbox"];
29->19 [style = bold, label=""];
15->1 [style = bold, label=""];
33->31 [style = bold, label=""];
24->18 [style = bold, label=""];
9->4 [style = bold, label=""];
25->19 [style = solid, label="mdc"];
27->28 [style = bold, label=""];
36->20 [style = bold, label=""];
7->9 [style = bold, label=""];
10->7 [style = solid, label="taskLockbox"];
22->30 [style = dotted, label="true"];
11->0 [style = bold, label=""];
6->11 [style = bold, label=""];
28->32 [style = bold, label=""];
26->35 [style = bold, label=""];
22->33 [style = bold, label=""];
13->6 [style = bold, label=""];
23->35 [style = solid, label="task"];
3->26 [style = dashed, label="0"];
19->24 [style = bold, label=""];
16->10 [style = bold, label=""];
7->9 [style = solid, label="taskActionToolbox"];
5->13 [style = bold, label=""];
2->3 [style = bold, label=""];
25->31 [style = solid, label="mdc"];
32->26 [style = bold, label=""];
28->26 [style = solid, label="handoffNotifierFactory"];
5->9 [style = solid, label="taskStorage"];
12->8 [style = dotted, label="true"];
5->10 [style = solid, label="taskStorage"];
22->25 [style = dotted, label="true"];
12->5 [style = bold, label=""];
8->30 [style = dashed, label="0"];
30->31 [style = solid, label="taskStorage"];
1->28 [style = dashed, label="0"];
1->3 [style = solid, label="handoffNotifierFactory"];
5->7 [style = solid, label="taskStorage"];
30->19 [style = solid, label="taskStorage"];
16->10 [style = solid, label="mdc"];
6->16 [style = solid, label="mapper"];
17->8 [style = dotted, label="true"];
16->7 [style = solid, label="mdc"];
20->29 [style = bold, label=""];
24->26 [style = solid, label="taskActionClientFactory"];
19->24 [style = solid, label="taskActionToolbox"];
23->34 [style = solid, label="task"];
9->3 [style = solid, label="taskActionClientFactory"];
4->18 [style = dashed, label="0"];
34->29 [style = bold, label=""];
4->15 [style = bold, label=""];
18->27 [style = bold, label=""];
10->14 [style = bold, label=""];
1->2 [style = bold, label=""];
17->5 [style = bold, label=""];
31->34 [style = bold, label=""];
30->24 [style = solid, label="taskStorage"];
22->21 [style = dotted, label="true"];
0->16 [style = bold, label=""];
}
