digraph {
1 [style = filled, label = "this.pathTrie.addPath(\"node1/node2\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(this.pathTrie.existsNode(\"/node1\"))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "addPathToRootLeaves['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "this.pathTrie.addPath(\"node1\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(this.pathTrie.existsNode(\"/node1/node2\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertTrue(this.pathTrie.existsNode(\"/node1\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "this.pathTrie.addPath(\"node1/node3\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "addPathToRootLeaves['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "deletePathDoesNotExist['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "this.pathTrie.deletePath(\"node1/node3\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(this.pathTrie.existsNode(\"/node1/node3\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertTrue(this.pathTrie.existsNode(\"/node1/node2\"))@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(this.pathTrie.existsNode(\"/node1/node3\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->3 [style = bold, label=""];
6->5 [style = bold, label=""];
11->5 [style = bold, label=""];
5->9 [style = dashed, label="0"];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
6->9 [style = bold, label=""];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
12->0 [style = bold, label=""];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
3->7 [style = dashed, label="0"];
10->0 [style = bold, label=""];
1->11 [style = bold, label=""];
4->8 [style = dashed, label="0"];
6->11 [style = dashed, label="0"];
}
