digraph {
1 [style = filled, label = "final InternalDistributedSystem mockSystem = mock()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return Pair.of(m1,messageListener)@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final SecurityService securityService = SecurityServiceFactory.create()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final DMStats stats1 = mock()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DSFIDSerializer serializer = InternalDataSerializer.getDSFIDSerializer()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final MessageListener messageListener = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "m1.startEventProcessing()@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final boolean replyExpected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "m1.start()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "when(memberFactory.create(isA())).thenAnswer(new Answer<MemberIdentifier>(){@Override public MemberIdentifier answer(InvocationOnMock invocation){return new InternalDistributedMember((GMSMemberData)invocation.getArgument(0))}})@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final RemoteTransportConfig transport@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "final String hostName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final RemoteTransportConfig transport@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "issueRequest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final Object request@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return new TcpClient(asTcpSocketCreator(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer()).requestToServer(InetAddress.getByName(hostName),locatorPort,request,10000,replyExpected)@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "createMembershipManager['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final int locatorPort@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final DistributionConfigImpl config@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final MembershipManager m1 = MembershipBuilder.newMembershipBuilder(null).setAuthenticator(new GMSAuthenticator(config.getSecurityProps(),securityService,mockSystem.getSecurityLogWriter(),mockSystem.getInternalLogWriter())).setStatistics(stats1).setMessageListener(messageListener).setMembershipListener(listener).setConfig(new ServiceConfig(transport,config)).setSerializer(serializer).setLocatorClient(new TcpClient(asTcpSocketCreator(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())).create()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "final Membership m1 = MembershipBuilder.newMembershipBuilder(null).setAuthenticator(new GMSAuthenticator(config.getSecurityProps(),securityService,mockSystem.getSecurityLogWriter(),mockSystem.getInternalLogWriter())).setStatistics(stats1).setMessageListener(messageListener).setMembershipListener(listener).setConfig(new ServiceConfig(transport,config)).setSerializer(serializer).setLifecycleListener(mock()).setLocatorClient(new TcpClient(asTcpSocketCreator(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())).create()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final DistributionConfigImpl config@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final MembershipListener listener = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "m1.startEventProcessing()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final MemberIdentifierFactory memberFactory = mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "createMembershipManager['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
8->16 [style = bold, label=""];
23->25 [style = solid, label="locatorPort"];
7->18 [style = dashed, label="0"];
3->1 [style = bold, label=""];
20->24 [style = dotted, label="true"];
11->10 [style = dotted, label="true"];
13->16 [style = solid, label="messageListener"];
11->6 [style = bold, label=""];
21->25 [style = solid, label="hostName"];
18->19 [style = bold, label=""];
15->6 [style = bold, label=""];
20->21 [style = dotted, label="true"];
7->4 [style = bold, label=""];
15->14 [style = dotted, label="true"];
9->7 [style = bold, label=""];
12->9 [style = bold, label=""];
20->25 [style = bold, label=""];
19->8 [style = bold, label=""];
2->12 [style = bold, label=""];
15->17 [style = dotted, label="true"];
5->2 [style = bold, label=""];
9->18 [style = bold, label=""];
13->3 [style = bold, label=""];
6->13 [style = bold, label=""];
11->0 [style = dotted, label="true"];
20->23 [style = dotted, label="true"];
13->8 [style = solid, label="messageListener"];
10->17 [style = dashed, label="0"];
4->8 [style = bold, label=""];
24->25 [style = solid, label="request"];
22->25 [style = solid, label="replyExpected"];
20->22 [style = dotted, label="true"];
18->16 [style = solid, label="m1"];
7->8 [style = solid, label="m1"];
}
