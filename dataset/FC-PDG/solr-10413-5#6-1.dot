digraph {
6 [style = filled, label = "IOUtils.copy(is,zos)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"application/xml\",stream.getContentType())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "File file = new File(createTempDir().toFile(),\"README.CSV.gz\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"text/csv\",stream.getContentType())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testURLStreamGZIP['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertTrue(IOUtils.contentEquals(zis2,s))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(IOUtils.contentEquals(isr,r))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(file.length(),stream.getSize().intValue())@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testURLStreamGZIP['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testURLStreamCSVGZIPExtention['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ContentStreamBase stream = new ContentStreamBase.URLStream(new URL(file.toURI().toASCIIString()))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "File file = new File(createTempDir().toFile(),\"README.gz\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
6->4 [style = bold, label=""];
1->9 [style = dashed, label="0"];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
4->1 [style = bold, label=""];
3->5 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
5->11 [style = dashed, label="0"];
9->2 [style = bold, label=""];
11->6 [style = bold, label=""];
0->7 [style = bold, label=""];
10->11 [style = bold, label=""];
}
