digraph {
4 [style = filled, label = "final Topology topology = builder.build()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "shouldEnableLoggingWithCustomConfigOnStreamJoined['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "final KStream<String,Integer> left = builder.stream(\"left\",Consumed.with(Serdes.String(),Serdes.Integer()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final StreamJoined<String,Integer,Integer> streamJoined = StreamJoined.with(Serdes.String(),Serdes.Integer(),Serdes.Integer()).withStoreName(\"store\").withLoggingDisabled()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final InternalTopologyBuilder internalTopologyBuilder = TopologyWrapper.getInternalTopologyBuilder(topology)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "internalTopologyBuilder.buildSubtopology(0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shouldDisableLoggingOnStreamJoined['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "shouldEnableLoggingWithCustomConfigOnStreamJoined['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(internalTopologyBuilder.stateStores().get(\"store-this-join-store\").loggingEnabled(),equalTo(false))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final JoinWindows joinWindows = JoinWindows.of(ofMillis(100)).grace(Duration.ofMillis(50))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(internalTopologyBuilder.topicGroups().get(SUBTOPOLOGY_0).stateChangelogTopics.size(),equalTo(2))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThat(internalTopologyBuilder.topicGroups().get(0).stateChangelogTopics.size(),equalTo(2))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(internalTopologyBuilder.stateStores().get(\"store-other-join-store\").loggingEnabled(),equalTo(false))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final StreamJoined<String,Integer,Integer> streamJoined = StreamJoined.with(Serdes.String(),Serdes.Integer(),Serdes.Integer()).withStoreName(\"store\").withLoggingEnabled(Collections.singletonMap(\"test\",\"property\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(internalTopologyBuilder.stateStores().get(\"store-other-join-store\").loggingEnabled(),equalTo(true))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(config.getProperties(Collections.emptyMap(),0).get(\"test\"),equalTo(\"property\"))@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(internalTopologyBuilder.stateStores().get(\"store-this-join-store\").loggingEnabled(),equalTo(true))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final KStream<String,Integer> right = builder.stream(\"right\",Consumed.with(Serdes.String(),Serdes.Integer()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "left.join(right,null,joinWindows,streamJoined)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->7 [style = solid, label="right"];
3->7 [style = solid, label="streamJoined"];
15->13 [style = bold, label=""];
16->7 [style = solid, label="streamJoined"];
16->6 [style = bold, label=""];
12->11 [style = bold, label=""];
14->10 [style = bold, label=""];
3->6 [style = bold, label=""];
10->3 [style = bold, label=""];
6->0 [style = bold, label=""];
19->17 [style = bold, label=""];
7->4 [style = bold, label=""];
2->9 [style = bold, label=""];
8->7 [style = bold, label=""];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
5->17 [style = dashed, label="0"];
10->16 [style = bold, label=""];
18->10 [style = bold, label=""];
11->19 [style = dashed, label="0"];
4->12 [style = solid, label="topology"];
10->7 [style = solid, label="joinWindows"];
2->15 [style = bold, label=""];
0->8 [style = bold, label=""];
4->12 [style = bold, label=""];
12->19 [style = bold, label=""];
1->10 [style = bold, label=""];
3->16 [style = dashed, label="0"];
9->15 [style = dashed, label="0"];
9->13 [style = bold, label=""];
}
