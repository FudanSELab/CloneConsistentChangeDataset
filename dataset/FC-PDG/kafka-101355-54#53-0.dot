digraph {
53 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@49@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "windowStore.init((StateStoreContext)context,windowStore)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
85 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "windowStore.put(7,\"seven\",startTime + increment * 7)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "windowStore.put(8,\"eight\",startTime + increment * 8)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "setCurrentTime(startTime)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"zero\")),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "windowStore.put(4,\"four\",startTime + increment * 4)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
106 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "setCurrentTime(startTime + increment * 2)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "windowStore.put(5,\"five\",startTime + increment * 5)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
97 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3)),segmentDirs(baseDir))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "windowStore.flush()@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "setCurrentTime(startTime + increment * 3)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
72 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "windowStore.put(3,\"three\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "windowStore.put(3,\"three\",startTime + increment * 3)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "setCurrentTime(startTime + increment)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "windowStore.close()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "testRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "windowStore.put(6,\"six\")@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "windowStore.put(0,\"zero\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "changeLog.add(new KeyValue<>(((Bytes)record.key()).get(),(byte(()record.value()))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "context.restore(STORE_NAME,changeLog)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "windowStore = buildWindowStore(RETENTION_PERIOD,WINDOW_SIZE,false,Serdes.Integer(),Serdes.String())@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"eight\")),valuesToSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@38@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"one\")),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@60@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "windowStore.put(1,\"one\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "windowStore.put(7,\"seven\")@@@37@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "Utils.delete(baseDir)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
99 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "testRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
89 [style = filled, label = "windowStore.put(8,\"eight\")@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "testRolling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"eight\")),valuesToSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "windowStore.put(2,\"two\")@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@47@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@48@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "windowStore.put(5,\"five\")@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "windowStore.put(8,\"eight\")@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "windowStore.put(2,\"two\",startTime + increment * 2)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
86 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "windowStore.put(0,\"zero\",startTime)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "windowStore.put(6,\"six\",startTime + increment * 6)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "final long increment = SEGMENT_INTERVAL / 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
105 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "windowStore.put(1,\"one\",startTime + increment)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "windowStore.flush()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "windowStore.flush()@@@51@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final long startTime = SEGMENT_INTERVAL * 2@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "windowStore.put(4,\"four\")@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@46@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@47@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"eight\")),valuesToSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@50@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@52@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->50 [style = dashed, label="0"];
36->28 [style = solid, label="startTime"];
91->71 [style = bold, label=""];
36->107 [style = solid, label="startTime"];
46->34 [style = bold, label=""];
39->51 [style = dashed, label="0"];
65->54 [style = bold, label=""];
37->0 [style = solid, label="increment"];
36->83 [style = solid, label="startTime"];
37->49 [style = solid, label="increment"];
25->98 [style = dashed, label="0"];
55->62 [style = bold, label=""];
29->106 [style = dashed, label="0"];
37->18 [style = solid, label="increment"];
39->24 [style = bold, label=""];
82->22 [style = bold, label=""];
98->32 [style = bold, label=""];
37->15 [style = bold, label=""];
37->35 [style = solid, label="increment"];
33->91 [style = bold, label=""];
105->103 [style = bold, label=""];
36->71 [style = solid, label="startTime"];
25->48 [style = bold, label=""];
69->68 [style = bold, label=""];
7->26 [style = solid, label="changeLog"];
36->61 [style = solid, label="startTime"];
36->85 [style = solid, label="startTime"];
5->38 [style = bold, label=""];
63->36 [style = bold, label=""];
27->49 [style = bold, label=""];
37->79 [style = solid, label="increment"];
45->7 [style = bold, label=""];
37->42 [style = solid, label="increment"];
36->87 [style = solid, label="startTime"];
36->73 [style = solid, label="startTime"];
37->70 [style = solid, label="increment"];
37->32 [style = solid, label="increment"];
108->11 [style = bold, label=""];
30->78 [style = bold, label=""];
37->4 [style = solid, label="increment"];
37->48 [style = solid, label="increment"];
36->99 [style = solid, label="startTime"];
16->101 [style = bold, label=""];
97->108 [style = bold, label=""];
37->31 [style = solid, label="increment"];
36->101 [style = solid, label="startTime"];
37->94 [style = solid, label="increment"];
76->87 [style = bold, label=""];
71->74 [style = bold, label=""];
107->105 [style = bold, label=""];
37->2 [style = solid, label="increment"];
1->21 [style = bold, label=""];
24->11 [style = bold, label=""];
36->49 [style = solid, label="startTime"];
36->80 [style = solid, label="startTime"];
13->36 [style = bold, label=""];
15->59 [style = dashed, label="0"];
14->58 [style = dashed, label="0"];
36->41 [style = solid, label="startTime"];
36->108 [style = solid, label="startTime"];
36->56 [style = solid, label="startTime"];
36->7 [style = solid, label="startTime"];
54->53 [style = bold, label=""];
79->95 [style = bold, label=""];
37->5 [style = solid, label="increment"];
36->98 [style = solid, label="startTime"];
36->96 [style = solid, label="startTime"];
36->46 [style = solid, label="startTime"];
32->18 [style = bold, label=""];
74->76 [style = bold, label=""];
2->28 [style = bold, label=""];
67->52 [style = bold, label=""];
37->17 [style = solid, label="increment"];
37->21 [style = solid, label="increment"];
9->40 [style = bold, label=""];
64->27 [style = bold, label=""];
88->83 [style = bold, label=""];
11->16 [style = bold, label=""];
35->31 [style = bold, label=""];
37->19 [style = solid, label="increment"];
36->58 [style = solid, label="startTime"];
36->4 [style = solid, label="startTime"];
36->0 [style = solid, label="startTime"];
41->32 [style = bold, label=""];
36->26 [style = solid, label="startTime"];
14->97 [style = bold, label=""];
36->29 [style = solid, label="startTime"];
1->100 [style = bold, label=""];
89->19 [style = bold, label=""];
37->6 [style = solid, label="increment"];
96->72 [style = bold, label=""];
36->78 [style = solid, label="startTime"];
37->73 [style = solid, label="increment"];
37->72 [style = solid, label="increment"];
37->43 [style = solid, label="increment"];
37->57 [style = solid, label="increment"];
3->56 [style = dashed, label="0"];
19->86 [style = bold, label=""];
37->62 [style = solid, label="increment"];
37->84 [style = solid, label="increment"];
6->2 [style = bold, label=""];
101->12 [style = bold, label=""];
36->32 [style = solid, label="startTime"];
36->105 [style = solid, label="startTime"];
75->5 [style = bold, label=""];
36->34 [style = solid, label="startTime"];
10->44 [style = bold, label=""];
22->55 [style = dashed, label="0"];
58->51 [style = bold, label=""];
37->9 [style = solid, label="increment"];
37->80 [style = solid, label="increment"];
104->4 [style = bold, label=""];
36->15 [style = solid, label="startTime"];
37->10 [style = solid, label="increment"];
37->28 [style = solid, label="increment"];
31->41 [style = solid, label="windowStore"];
12->33 [style = bold, label=""];
31->41 [style = bold, label=""];
18->9 [style = bold, label=""];
78->107 [style = bold, label=""];
36->59 [style = solid, label="startTime"];
36->106 [style = solid, label="startTime"];
37->22 [style = solid, label="increment"];
66->61 [style = bold, label=""];
37->105 [style = solid, label="increment"];
37->29 [style = solid, label="increment"];
95->20 [style = bold, label=""];
48->32 [style = dashed, label="0"];
36->37 [style = bold, label=""];
37->34 [style = solid, label="increment"];
102->73 [style = bold, label=""];
65->54 [style = solid, label="windowStore"];
14->39 [style = bold, label=""];
59->56 [style = bold, label=""];
38->99 [style = bold, label=""];
37->23 [style = solid, label="increment"];
32->40 [style = solid, label="changeLog"];
36->93 [style = solid, label="startTime"];
36->51 [style = solid, label="startTime"];
26->20 [style = bold, label=""];
85->96 [style = bold, label=""];
40->29 [style = bold, label=""];
27->26 [style = bold, label=""];
36->43 [style = solid, label="startTime"];
37->66 [style = solid, label="increment"];
44->42 [style = bold, label=""];
36->92 [style = solid, label="startTime"];
37->76 [style = solid, label="increment"];
37->107 [style = solid, label="increment"];
37->56 [style = solid, label="increment"];
50->58 [style = bold, label=""];
103->80 [style = bold, label=""];
36->90 [style = solid, label="startTime"];
7->64 [style = bold, label=""];
36->23 [style = solid, label="startTime"];
36->86 [style = solid, label="startTime"];
33->4 [style = bold, label=""];
23->43 [style = bold, label=""];
68->65 [style = bold, label=""];
36->27 [style = solid, label="startTime"];
37->51 [style = solid, label="increment"];
36->104 [style = solid, label="startTime"];
83->106 [style = bold, label=""];
36->40 [style = solid, label="startTime"];
36->35 [style = solid, label="startTime"];
18->89 [style = bold, label=""];
15->3 [style = bold, label=""];
81->36 [style = bold, label=""];
37->98 [style = solid, label="increment"];
36->21 [style = solid, label="startTime"];
42->0 [style = bold, label=""];
36->76 [style = solid, label="startTime"];
37->64 [style = solid, label="increment"];
36->53 [style = solid, label="startTime"];
86->102 [style = bold, label=""];
36->2 [style = solid, label="startTime"];
32->9 [style = bold, label=""];
43->17 [style = bold, label=""];
36->5 [style = solid, label="startTime"];
37->7 [style = solid, label="increment"];
40->83 [style = dashed, label="0"];
36->72 [style = solid, label="startTime"];
92->79 [style = bold, label=""];
87->70 [style = bold, label=""];
36->94 [style = solid, label="startTime"];
30->5 [style = bold, label=""];
36->50 [style = solid, label="startTime"];
36->25 [style = solid, label="startTime"];
37->93 [style = solid, label="increment"];
37->45 [style = solid, label="increment"];
37->92 [style = solid, label="increment"];
37->12 [style = solid, label="increment"];
37->71 [style = solid, label="increment"];
77->85 [style = bold, label=""];
9->19 [style = bold, label=""];
36->18 [style = solid, label="startTime"];
37->104 [style = solid, label="increment"];
37->74 [style = solid, label="increment"];
34->23 [style = bold, label=""];
36->11 [style = solid, label="startTime"];
22->1 [style = bold, label=""];
99->90 [style = bold, label=""];
37->77 [style = solid, label="increment"];
19->40 [style = bold, label=""];
60->69 [style = bold, label=""];
1->62 [style = dashed, label="0"];
37->67 [style = solid, label="increment"];
53->67 [style = bold, label=""];
36->12 [style = solid, label="startTime"];
36->67 [style = solid, label="startTime"];
37->27 [style = solid, label="increment"];
21->14 [style = bold, label=""];
37->103 [style = solid, label="increment"];
106->98 [style = bold, label=""];
36->20 [style = solid, label="startTime"];
37->90 [style = solid, label="increment"];
94->84 [style = bold, label=""];
37->83 [style = solid, label="increment"];
3->82 [style = bold, label=""];
57->42 [style = bold, label=""];
36->17 [style = solid, label="startTime"];
61->60 [style = bold, label=""];
37->11 [style = solid, label="increment"];
36->42 [style = solid, label="startTime"];
47->8 [style = bold, label=""];
90->93 [style = bold, label=""];
36->75 [style = solid, label="startTime"];
37->88 [style = solid, label="increment"];
38->10 [style = bold, label=""];
36->64 [style = solid, label="startTime"];
36->10 [style = solid, label="startTime"];
36->70 [style = solid, label="startTime"];
17->47 [style = bold, label=""];
37->55 [style = solid, label="increment"];
37->108 [style = solid, label="increment"];
37->87 [style = solid, label="increment"];
8->20 [style = dashed, label="0"];
36->74 [style = solid, label="startTime"];
29->25 [style = bold, label=""];
84->75 [style = bold, label=""];
36->45 [style = solid, label="startTime"];
37->41 [style = solid, label="increment"];
24->66 [style = dashed, label="0"];
36->102 [style = solid, label="startTime"];
20->6 [style = bold, label=""];
37->39 [style = solid, label="increment"];
36->66 [style = solid, label="startTime"];
3->22 [style = bold, label=""];
37->52 [style = solid, label="increment"];
37->96 [style = solid, label="increment"];
37->102 [style = solid, label="increment"];
37->46 [style = solid, label="increment"];
36->57 [style = solid, label="startTime"];
36->48 [style = solid, label="startTime"];
36->88 [style = solid, label="startTime"];
28->46 [style = bold, label=""];
48->45 [style = bold, label=""];
36->77 [style = solid, label="startTime"];
100->21 [style = bold, label=""];
36->6 [style = solid, label="startTime"];
4->30 [style = bold, label=""];
72->92 [style = bold, label=""];
70->104 [style = bold, label=""];
80->94 [style = bold, label=""];
36->9 [style = solid, label="startTime"];
36->19 [style = solid, label="startTime"];
37->25 [style = solid, label="increment"];
36->55 [style = solid, label="startTime"];
37->50 [style = solid, label="increment"];
37->61 [style = solid, label="increment"];
37->59 [style = bold, label=""];
37->26 [style = solid, label="increment"];
36->91 [style = solid, label="startTime"];
36->22 [style = solid, label="startTime"];
37->58 [style = solid, label="increment"];
36->84 [style = solid, label="startTime"];
37->85 [style = solid, label="increment"];
11->61 [style = dashed, label="0"];
7->27 [style = bold, label=""];
0->35 [style = bold, label=""];
62->50 [style = bold, label=""];
36->62 [style = solid, label="startTime"];
9->93 [style = dashed, label="0"];
36->103 [style = solid, label="startTime"];
73->77 [style = bold, label=""];
37->101 [style = solid, label="increment"];
93->88 [style = bold, label=""];
37->106 [style = solid, label="increment"];
49->26 [style = bold, label=""];
52->57 [style = bold, label=""];
36->39 [style = solid, label="startTime"];
36->31 [style = solid, label="startTime"];
16->12 [style = bold, label=""];
37->40 [style = solid, label="increment"];
36->52 [style = solid, label="startTime"];
36->79 [style = solid, label="startTime"];
37->75 [style = solid, label="increment"];
51->66 [style = bold, label=""];
56->55 [style = bold, label=""];
}
