digraph {
3 [style = filled, label = "Iterator<SpanQueryBuilder> spanQueryBuilderIterator = queryBuilder.clauses().iterator()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "doAssertLuceneQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertThat(query,either(instanceOf()).or(instanceOf()).or(instanceOf()).or(instanceOf()).or(instanceOf()))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "SpanQueryBuilder spanQB = spanQueryBuilderIterator.next()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertThat(query,equalTo(queryBuilder.clauses().get(0).toQuery(context.getQueryShardContext())))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "doAssertLuceneQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(spanQuery,equalTo(spanQueryBuilderIterator.next().toQuery(context.getQueryShardContext())))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(spanNearQuery.isInOrder(),equalTo(queryBuilder.inOrder()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(queryBuilder.clauses().size(),equalTo(1))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Query query@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(spanNearQuery.getClauses().length,equalTo(queryBuilder.clauses().size()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "SpanQuery spanQuery@@@10@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "spanNearQuery.getClauses()@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "query instanceof SpanNearQuery@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SearchContext context@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertThat(spanQuery,equalTo(spanQB.toQuery(context.getQueryShardContext())))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "SearchContext context@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "query instanceof SpanTermQuery || query instanceof SpanBoostQuery@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "SpanNearQueryBuilder queryBuilder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(query,either(instanceOf()).or(instanceOf()).or(instanceOf()).or(instanceOf()))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "spanNearQuery.getClauses()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SpanNearQuery spanNearQuery = (SpanNearQuery)query@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Query query@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "doAssertLuceneQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Query query@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertThat(spanNearQuery.getSlop(),equalTo(queryBuilder.slop()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "spanQB instanceof SpanGapQueryBuilder@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(queryBuilder.clauses().size(),equalTo(1))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "query instanceof SpanTermQuery || query instanceof SpanBoostQuery@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SearchContext context@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "SpanQuery spanQuery@@@10@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17->19 [style = dotted, label="true"];
26->29 [style = dotted, label="true"];
4->14 [style = dotted, label="false"];
26->15 [style = dotted, label="true"];
13->28 [style = dashed, label="0"];
14->0 [style = dotted, label="true"];
23->11 [style = solid, label="query"];
7->8 [style = bold, label=""];
26->8 [style = bold, label=""];
8->18 [style = dashed, label="0"];
18->4 [style = bold, label=""];
8->4 [style = bold, label=""];
4->16 [style = dotted, label="true"];
4->3 [style = dotted, label="true"];
1->11 [style = solid, label="query"];
27->28 [style = bold, label=""];
4->21 [style = dotted, label="true"];
4->12 [style = dotted, label="true"];
1->4 [style = solid, label="query"];
4->11 [style = bold, label=""];
20->4 [style = solid, label="query"];
4->24 [style = dotted, label="true"];
4->11 [style = dotted, label="true"];
14->0 [style = bold, label=""];
7->1 [style = dotted, label="true"];
10->30 [style = dotted, label="true"];
10->25 [style = bold, label=""];
3->13 [style = bold, label=""];
27->22 [style = bold, label=""];
7->6 [style = dotted, label="true"];
26->23 [style = dotted, label="true"];
0->10 [style = bold, label=""];
16->12 [style = bold, label=""];
28->27 [style = bold, label=""];
4->10 [style = dotted, label="false"];
17->15 [style = dotted, label="true"];
23->4 [style = solid, label="query"];
10->25 [style = dotted, label="true"];
20->10 [style = solid, label="query"];
17->20 [style = dotted, label="true"];
12->3 [style = bold, label=""];
7->15 [style = dotted, label="true"];
22->28 [style = bold, label=""];
4->27 [style = dotted, label="true"];
14->10 [style = dotted, label="true"];
1->14 [style = solid, label="query"];
4->14 [style = bold, label=""];
4->10 [style = bold, label=""];
4->5 [style = dotted, label="true"];
4->9 [style = dotted, label="true"];
23->30 [style = solid, label="query"];
20->11 [style = solid, label="query"];
23->8 [style = solid, label="query"];
23->10 [style = solid, label="query"];
4->13 [style = dotted, label="true"];
3->28 [style = bold, label=""];
25->30 [style = bold, label=""];
4->28 [style = dotted, label="true"];
28->27 [style = solid, label="spanQB"];
5->16 [style = bold, label=""];
20->14 [style = solid, label="query"];
4->22 [style = dotted, label="true"];
20->18 [style = solid, label="query"];
11->5 [style = bold, label=""];
1->10 [style = solid, label="query"];
4->2 [style = dotted, label="true"];
1->8 [style = solid, label="query"];
17->18 [style = bold, label=""];
}
