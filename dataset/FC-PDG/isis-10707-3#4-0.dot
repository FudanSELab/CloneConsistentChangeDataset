digraph {
0 [style = filled, label = "final TitleFacetViaTitleAnnotation titleFacetViaTitleAnnotation = (TitleFacetViaTitleAnnotation)facet@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(titleMethods.get(i),titleEvaluator.getMethod())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertNotNull(facet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testTitleAnnotatedMethodsPickedUpOnClass['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final Facet facet = facetedMethod.getFacet()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final String title = titleFacetViaTitleAnnotation.title(mockObjectAdapter,mockLocalizationProvider.getLocalization())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "facetFactory.process(new ProcessClassContext(,mockMethodRemover,facetedMethod))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final Annotations.MethodEvaluator<Title> titleEvaluator = (Annotations.MethodEvaluator<Title>)titleFacetViaTitleAnnotation.getComponents().get(i).getTitleEvaluator()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Assert.assertEquals(titleMethods.get(i),components.get(i).getMethod())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int i = 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "facetFactory.process(new ProcessClassContext(,mockMethodRemover,facetedMethod))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "context.checking(new Expectations(){})@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "i++@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final Customer2 customer = new Customer2()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testTitleAnnotatedMethodPickedUpOnClassRemoved['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final List<TitleComponent> components = titleFacetViaTitleAnnotation.getComponents()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(title,is(\"titleElement1. titleElement3,titleElement2\"))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final List<Method> titleMethods = Arrays.asList(.getMethod(\"someTitle\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testTitleAnnotatedMethodPickedUpOnClassRemoved['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Assert.assertTrue(facet instanceof TitleFacetViaTitleAnnotation)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final List<Method> titleMethods = Arrays.asList(.getMethod(\"titleElement1\"),.getMethod(\"titleElement3\"),.getMethod(\"titleElement2\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i < titleMethods.size()@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9->19 [style = bold, label=""];
8->16 [style = dashed, label="0"];
9->12 [style = solid, label="i"];
0->4 [style = bold, label=""];
6->2 [style = solid, label="i"];
0->22 [style = bold, label=""];
2->9 [style = solid, label="i"];
20->18 [style = bold, label=""];
4->5 [style = bold, label=""];
5->12 [style = solid, label="i"];
10->8 [style = bold, label=""];
3->0 [style = solid, label="facet"];
5->6 [style = solid, label="i"];
6->9 [style = solid, label="i"];
6->13 [style = bold, label=""];
18->21 [style = solid, label="title"];
22->15 [style = bold, label=""];
6->19 [style = solid, label="i"];
9->2 [style = dotted, label="true"];
9->6 [style = solid, label="i"];
15->6 [style = bold, label=""];
3->1 [style = bold, label=""];
6->2 [style = bold, label=""];
8->3 [style = bold, label=""];
9->6 [style = bold, label=""];
6->9 [style = bold, label=""];
3->7 [style = solid, label="facet"];
12->9 [style = bold, label=""];
3->1 [style = solid, label="facet"];
6->13 [style = dotted, label="true"];
2->19 [style = dashed, label="0"];
2->9 [style = bold, label=""];
13->12 [style = bold, label=""];
11->8 [style = bold, label=""];
16->3 [style = bold, label=""];
4->22 [style = dashed, label="0"];
7->0 [style = bold, label=""];
5->9 [style = solid, label="i"];
9->2 [style = solid, label="i"];
9->14 [style = bold, label=""];
18->21 [style = bold, label=""];
6->9 [style = dotted, label="true"];
19->2 [style = bold, label=""];
6->12 [style = dotted, label="true"];
1->7 [style = bold, label=""];
6->2 [style = dotted, label="true"];
2->19 [style = solid, label="i"];
17->16 [style = bold, label=""];
9->19 [style = dotted, label="true"];
14->20 [style = bold, label=""];
5->6 [style = bold, label=""];
2->13 [style = dashed, label="0"];
5->2 [style = solid, label="i"];
}
