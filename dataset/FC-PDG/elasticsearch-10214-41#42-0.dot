digraph {
6 [style = filled, label = "mappers.put(ScaledFloatFieldMapper.CONTENT_TYPE,ScaledFloatFieldMapper.PARSER)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "mappers.put(ObjectMapper.NESTED_CONTENT_TYPE,new ObjectMapper.TypeParser())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "DateFieldMapper.Resolution milliseconds = DateFieldMapper.Resolution.MILLISECONDS@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "mappers.put(RankFeaturesFieldMapper.CONTENT_TYPE,RankFeaturesFieldMapper.PARSER)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "mappers.put(nanoseconds.type(),DateFieldMapper.NANOS_PARSER)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "mappers.put(type.typeName(),type.parser())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "mappers.put(TextFieldMapper.CONTENT_TYPE,new TextFieldMapper.TypeParser())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "mappers.put(TokenCountFieldMapper.CONTENT_TYPE,TokenCountFieldMapper.PARSER)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "List<MapperPlugin> mapperPlugins@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "mappers.put(ObjectMapper.CONTENT_TYPE,new ObjectMapper.TypeParser())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "mappers.put(SearchAsYouTypeFieldMapper.CONTENT_TYPE,SearchAsYouTypeFieldMapper.PARSER)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "return Collections.unmodifiableMap(mappers)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "mappers.put(IpFieldMapper.CONTENT_TYPE,IpFieldMapper.PARSER)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "mappers.put(RankFeatureFieldMapper.CONTENT_TYPE,new RankFeatureFieldMapper.TypeParser())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "DateFieldMapper.Resolution nanoseconds = DateFieldMapper.Resolution.NANOSECONDS@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "mappers.put(GeoPointFieldMapper.CONTENT_TYPE,new GeoPointFieldMapper.TypeParser())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "mappers.put(type.typeName(),type.parser())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "mappers.put(KeywordFieldMapper.CONTENT_TYPE,KeywordFieldMapper.PARSER)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "mappers.put(milliseconds.type(),DateFieldMapper.MILLIS_PARSER)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "mappers.put(TokenCountFieldMapper.CONTENT_TYPE,new TokenCountFieldMapper.TypeParser())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "getMappers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "mappers.put(RankFeaturesFieldMapper.CONTENT_TYPE,new RankFeaturesFieldMapper.TypeParser())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Map<String,Mapper.TypeParser> mappers = new LinkedHashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "mappers.put(BooleanFieldMapper.CONTENT_TYPE,BooleanFieldMapper.PARSER)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "throw new IllegalArgumentException(\"Mapper (\" + entry.getKey() + \"( is already registered\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "mappers.put(BinaryFieldMapper.CONTENT_TYPE,BinaryFieldMapper.PARSER)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "mappers.put(CompletionFieldMapper.CONTENT_TYPE,CompletionFieldMapper.PARSER)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "getMappers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "getMappers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "mappers.put(entry.getKey(),entry.getValue()) != null@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "return Collections.unmodifiableMap(mappers)@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "mappers.put(SearchAsYouTypeFieldMapper.CONTENT_TYPE,new SearchAsYouTypeFieldMapper.TypeParser())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "mappers.put(FieldAliasMapper.CONTENT_TYPE,new FieldAliasMapper.TypeParser())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "mappers.put(RankFeatureFieldMapper.CONTENT_TYPE,RankFeatureFieldMapper.PARSER)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
25->28 [style = bold, label=""];
9->0 [style = bold, label=""];
0->33 [style = solid, label="mappers"];
0->6 [style = bold, label=""];
28->13 [style = bold, label=""];
22->32 [style = bold, label=""];
7->0 [style = bold, label=""];
20->14 [style = bold, label=""];
19->21 [style = dotted, label="true"];
16->23 [style = bold, label=""];
32->16 [style = bold, label=""];
24->22 [style = bold, label=""];
11->2 [style = bold, label=""];
27->15 [style = bold, label=""];
14->33 [style = bold, label=""];
20->33 [style = bold, label=""];
19->0 [style = bold, label=""];
26->30 [style = bold, label=""];
29->26 [style = bold, label=""];
23->14 [style = bold, label=""];
14->20 [style = dotted, label="true"];
1->12 [style = dashed, label="0"];
6->4 [style = bold, label=""];
0->2 [style = solid, label="mappers"];
13->29 [style = bold, label=""];
3->2 [style = bold, label=""];
18->27 [style = bold, label=""];
0->25 [style = bold, label=""];
10->12 [style = bold, label=""];
12->8 [style = bold, label=""];
30->31 [style = bold, label=""];
6->10 [style = bold, label=""];
15->24 [style = bold, label=""];
5->8 [style = dashed, label="0"];
4->1 [style = bold, label=""];
31->17 [style = bold, label=""];
4->10 [style = dashed, label="0"];
8->11 [style = bold, label=""];
17->18 [style = bold, label=""];
3->11 [style = dashed, label="0"];
14->20 [style = bold, label=""];
}
