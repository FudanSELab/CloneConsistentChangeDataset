digraph {
21 [style = filled, label = "aggregate(selector,agg,buffer,0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "vectorColumnSelectorFactory = EasyMock.createMock()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertValues((VarianceAggregatorCollector)agg.get(buffer,0),2,3.8d,1.28d)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "setup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EasyMock.expect(vectorColumnSelectorFactory.getColumnCapabilities(\"lngFld\")).andReturn(new ColumnCapabilitiesImpl().setType(ValueType.LONG).setDictionaryEncoded(true)).anyTimes()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "EasyMock.expect(vectorColumnSelectorFactory.makeValueSelector(\"lngFld\")).andReturn(vectorValueSelector).anyTimes()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "selector = new TestLongColumnSelector(values)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(selector)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "EasyMock.replay(vectorValueSelector)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "VarianceBufferAggregator agg = (VarianceBufferAggregator)aggFactory.factorizeBuffered(colSelectorFactory)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testDoubleVarianceBufferAggregator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertValues((VarianceAggregatorCollector)agg.get(buffer,0),4,8.6d,3.95d)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "NullHandling.initializeForTests()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "EasyMock.expect(vectorValueSelector.getLongVector()).andReturn(longValues1).anyTimes()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "VectorValueSelector vectorValueSelector = EasyMock.createMock()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertValues((VarianceAggregatorCollector)agg.get(buffer,0),1,1.1d,0d)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "EasyMock.expect(colSelectorFactory.getColumnCapabilities(\"nilly\")).andReturn(null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "EasyMock.replay(colSelectorFactory)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "aggregate(selector,agg,buffer,0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "aggregate(selector,agg,buffer,0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "setup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "agg.init(buffer,0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "EasyMock.expect(vectorValueSelector.getNullVector()).andReturn(null).anyTimes()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "ByteBuffer buffer = ByteBuffer.wrap(new byte(((()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "aggregate(selector,agg,buffer,0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "colSelectorFactory = EasyMock.createMock()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "EasyMock.replay(vectorColumnSelectorFactory)@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertValues((VarianceAggregatorCollector)agg.get(buffer,0),0,0d,0d)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertValues((VarianceAggregatorCollector)agg.get(buffer,0),3,7.3d,2.9866d)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24->21 [style = bold, label=""];
17->27 [style = solid, label="agg"];
17->21 [style = solid, label="agg"];
0->3 [style = solid, label="selector"];
26->17 [style = bold, label=""];
2->4 [style = bold, label=""];
15->9 [style = bold, label=""];
3->2 [style = bold, label=""];
22->24 [style = bold, label=""];
21->28 [style = bold, label=""];
25->19 [style = bold, label=""];
6->0 [style = bold, label=""];
18->25 [style = solid, label="buffer"];
18->25 [style = bold, label=""];
19->22 [style = bold, label=""];
18->19 [style = solid, label="buffer"];
18->28 [style = solid, label="buffer"];
11->6 [style = bold, label=""];
0->1 [style = bold, label=""];
18->22 [style = solid, label="buffer"];
9->7 [style = bold, label=""];
27->16 [style = bold, label=""];
10->12 [style = bold, label=""];
7->13 [style = bold, label=""];
28->27 [style = bold, label=""];
18->24 [style = solid, label="buffer"];
18->16 [style = solid, label="buffer"];
5->0 [style = bold, label=""];
1->3 [style = bold, label=""];
16->23 [style = bold, label=""];
18->20 [style = solid, label="buffer"];
23->20 [style = bold, label=""];
18->21 [style = solid, label="buffer"];
4->10 [style = bold, label=""];
17->22 [style = solid, label="agg"];
9->14 [style = solid, label="vectorColumnSelectorFactory"];
18->27 [style = solid, label="buffer"];
13->14 [style = bold, label=""];
18->23 [style = solid, label="buffer"];
12->8 [style = bold, label=""];
10->15 [style = solid, label="vectorValueSelector"];
8->15 [style = bold, label=""];
17->23 [style = solid, label="agg"];
1->4 [style = solid, label="colSelectorFactory"];
17->18 [style = bold, label=""];
}
