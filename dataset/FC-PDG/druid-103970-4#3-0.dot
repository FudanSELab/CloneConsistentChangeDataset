digraph {
1 [style = filled, label = "testApplyMultipleInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(expectedDay2,actual.getRows())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(expectedDay1,actual.getRows())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(expectedDay4,actual.getRows())@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(expectedDay6,actual.getRows())@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(expectedDay3,actual.getRows())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "intervals.add(INTERVAL_JAN_1_4)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "intervals = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(expectedDay4,actual.getRows())@@@25@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Sequence<Row> seq = Sequences.simple(rows)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(expectedDay6,actual.getRows())@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "rows.add(JAN_8_U_30)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(expectedDay4,actual.getRows())@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "rows.add(JAN_7_F_20)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "rows.add(JAN_4_U_30)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<Row> expectedDay7 = Collections.singletonList(JAN_7_F_20)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RowBucket actual = iter.next()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "List<Row> expectedDay4 = Collections.emptyList()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(JAN_4,actual.getDateTime())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertEquals(expectedDay2,actual.getRows())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "intervals.add(INTERVAL_JAN_6_8)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "actual = iter.next()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<Row> expectedDay8 = Collections.singletonList(JAN_8_U_30)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "actual = iter.next()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "actual = iter.next()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(expectedDay7,actual.getRows())@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "List<Row> expectedDay4 = Arrays.asList(JAN_4_M_10,JAN_4_F_20,JAN_4_U_30)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "actual = iter.next()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "actual = iter.next()@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "rows.add(JAN_4_F_20)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "actual = iter.next()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testApplyMultipleInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "assertEquals(expectedDay3,actual.getRows())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "rows.add(JAN_6_M_10)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Iterator<RowBucket> iter = rbi.iterator()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testApplyLastDayNoRows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(expectedDay8,actual.getRows())@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "rows.add(JAN_4_M_10)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "actual = iter.next()@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assert.assertEquals(expectedDay1,actual.getRows())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "List<Row> expectedDay6 = Collections.singletonList(JAN_6_M_10)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "rows = new ArrayList<>()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "rows.add(JAN_3_F_20)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<Row> expectedDay2 = Collections.singletonList(JAN_2_M_10)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertEquals(expectedDay7,actual.getRows())@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "rows.add(JAN_1_M_10)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "List<Row> expectedDay3 = Collections.singletonList(JAN_3_F_20)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rows.add(JAN_2_M_10)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<Row> expectedDay1 = Arrays.asList(JAN_1_M_10,JAN_1_F_20)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "rows.add(JAN_1_F_20)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Assert.assertEquals(expectedDay8,actual.getRows())@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "RowBucketIterable rbi = new RowBucketIterable(seq,intervals,ONE_DAY)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->35 [style = bold, label=""];
9->39 [style = dashed, label="0"];
8->16 [style = bold, label=""];
30->13 [style = bold, label=""];
38->44 [style = bold, label=""];
11->14 [style = bold, label=""];
44->35 [style = bold, label=""];
21->15 [style = bold, label=""];
10->32 [style = bold, label=""];
28->20 [style = solid, label="expectedDay1"];
8->0 [style = bold, label=""];
36->24 [style = bold, label=""];
51->50 [style = bold, label=""];
50->36 [style = solid, label="rows"];
49->10 [style = bold, label=""];
33->42 [style = bold, label=""];
4->27 [style = solid, label="expectedDay6"];
34->38 [style = solid, label="expectedDay3"];
7->43 [style = bold, label=""];
35->45 [style = bold, label=""];
10->22 [style = solid, label="intervals"];
32->3 [style = bold, label=""];
17->2 [style = solid, label="expectedDay2"];
47->48 [style = bold, label=""];
9->33 [style = bold, label=""];
4->18 [style = bold, label=""];
20->38 [style = bold, label=""];
33->27 [style = bold, label=""];
12->37 [style = bold, label=""];
10->24 [style = solid, label="intervals"];
38->2 [style = bold, label=""];
30->45 [style = dashed, label="0"];
17->34 [style = bold, label=""];
31->46 [style = dashed, label="0"];
5->6 [style = bold, label=""];
27->11 [style = bold, label=""];
36->24 [style = solid, label="seq"];
51->30 [style = solid, label="expectedDay4"];
48->5 [style = bold, label=""];
24->8 [style = bold, label=""];
23->31 [style = bold, label=""];
34->45 [style = solid, label="expectedDay3"];
25->9 [style = solid, label="expectedDay4"];
18->41 [style = solid, label="expectedDay7"];
28->22 [style = solid, label="expectedDay1"];
0->12 [style = bold, label=""];
18->26 [style = bold, label=""];
25->51 [style = dashed, label="0"];
22->29 [style = bold, label=""];
13->39 [style = bold, label=""];
7->20 [style = bold, label=""];
27->42 [style = dashed, label="0"];
16->22 [style = solid, label="seq"];
39->33 [style = bold, label=""];
5->16 [style = solid, label="rows"];
34->51 [style = bold, label=""];
11->41 [style = bold, label=""];
3->28 [style = bold, label=""];
43->38 [style = bold, label=""];
14->23 [style = bold, label=""];
42->11 [style = bold, label=""];
34->30 [style = solid, label="expectedDay3"];
28->17 [style = bold, label=""];
13->9 [style = bold, label=""];
35->30 [style = bold, label=""];
20->43 [style = dashed, label="0"];
18->14 [style = solid, label="expectedDay7"];
14->41 [style = dashed, label="0"];
19->21 [style = bold, label=""];
40->10 [style = bold, label=""];
17->7 [style = solid, label="expectedDay2"];
25->39 [style = solid, label="expectedDay4"];
34->25 [style = bold, label=""];
26->5 [style = bold, label=""];
25->4 [style = bold, label=""];
23->46 [style = bold, label=""];
17->44 [style = solid, label="expectedDay2"];
4->42 [style = solid, label="expectedDay6"];
45->13 [style = bold, label=""];
16->22 [style = bold, label=""];
15->16 [style = bold, label=""];
6->36 [style = bold, label=""];
50->47 [style = bold, label=""];
26->46 [style = solid, label="expectedDay8"];
29->7 [style = bold, label=""];
37->19 [style = bold, label=""];
1->10 [style = bold, label=""];
41->23 [style = bold, label=""];
32->28 [style = bold, label=""];
28->43 [style = solid, label="expectedDay1"];
2->44 [style = dashed, label="0"];
26->31 [style = solid, label="expectedDay8"];
}
