digraph {
13 [style = filled, label = "Query query = new SimpleQueryStringBuilder(\"aBc*\").field(TEXT_FIELD_NAME).analyzer(\"redspace\").toQuery(createSearchExecutionContext())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "query = new SimpleQueryStringBuilder(\"aBc*\").field(TEXT_FIELD_NAME).analyzer(\"standard\").toQuery(createShardContext())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "query = new SimpleQueryStringBuilder(\"aBc~1\").field(TEXT_FIELD_NAME).analyzer(\"redspace\").toQuery(createSearchExecutionContext())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(expected,query)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(new Term(TEXT_FIELD_NAME,\"abc\"),fuzzyQuery.getTerm())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "query = new SimpleQueryStringBuilder(\"aBc~1\").field(TEXT_FIELD_NAME).analyzer(\"standard\").toQuery(createSearchExecutionContext())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "query = new QueryStringQueryBuilder(\"aBc~1\").field(TEXT_FIELD_NAME).analyzer(\"whitespace\").toQuery(createShardContext())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(new PrefixQuery(new Term(TEXT_FIELD_NAME,\"abc\")),query)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "query = new SimpleQueryStringBuilder(\"aBc~1\").field(TEXT_FIELD_NAME).analyzer(\"redspace\").toQuery(createShardContext())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertEquals(new TermRangeQuery(TEXT_FIELD_NAME,new BytesRef(\"abc\"),new BytesRef(\"bcd\"),true,true),query)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expected = new FuzzyQuery(new Term(TEXT_FIELD_NAME,\"abc\"),1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "query = new SimpleQueryStringBuilder(\"aBc*\").field(TEXT_FIELD_NAME).analyzer(\"standard\").toQuery(createSearchExecutionContext())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "testExpandedTerms['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "query = new SimpleQueryStringBuilder(\"aBc~1\").field(TEXT_FIELD_NAME).analyzer(\"standard\").toQuery(createShardContext())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "Query query = new SimpleQueryStringBuilder(\"aBc*\").field(TEXT_FIELD_NAME).analyzer(\"redspace\").toQuery(createShardContext())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertEquals(new Term(TEXT_FIELD_NAME,\"aBc\"),fuzzyQuery.getTerm())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "query = new QueryStringQueryBuilder(\"aBc*D\").field(TEXT_FIELD_NAME).analyzer(\"whitespace\").toQuery(createShardContext())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "fuzzyQuery = (FuzzyQuery)query@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "FuzzyQuery fuzzyQuery = (FuzzyQuery)query@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(new PrefixQuery(new Term(TEXT_FIELD_NAME,\"aBc\")),query)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "FuzzyQuery expected = new FuzzyQuery(new Term(TEXT_FIELD_NAME,\"aBc\"),1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(new TermRangeQuery(TEXT_FIELD_NAME,new BytesRef(\"aBc\"),new BytesRef(\"BcD\"),true,true),query)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(new WildcardQuery(new Term(TEXT_FIELD_NAME,\"abc*d\")),query)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "query = new QueryStringQueryBuilder(\"(aBc TO BcD(\").field(TEXT_FIELD_NAME).analyzer(\"standard\").toQuery(createShardContext())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "query = new QueryStringQueryBuilder(\"aBc~1\").field(TEXT_FIELD_NAME).analyzer(\"standard\").toQuery(createShardContext())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(expected,query)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testExpandedTerms['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "query = new QueryStringQueryBuilder(\"(aBc TO BcD(\").field(TEXT_FIELD_NAME).analyzer(\"whitespace\").toQuery(createShardContext())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Query query = new QueryStringQueryBuilder(\"aBc*\").field(TEXT_FIELD_NAME).analyzer(\"whitespace\").toQuery(createShardContext())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(new WildcardQuery(new Term(TEXT_FIELD_NAME,\"aBc*D\")),query)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testExpandedTerms['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "query = new QueryStringQueryBuilder(\"aBc*\").field(TEXT_FIELD_NAME).analyzer(\"standard\").toQuery(createShardContext())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "query = new QueryStringQueryBuilder(\"aBc*D\").field(TEXT_FIELD_NAME).analyzer(\"standard\").toQuery(createShardContext())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32->22 [style = bold, label=""];
27->32 [style = bold, label=""];
8->15 [style = bold, label=""];
26->7 [style = bold, label=""];
1->9 [style = solid, label="query"];
5->20 [style = bold, label=""];
1->15 [style = dashed, label="0"];
6->9 [style = solid, label="expected"];
3->24 [style = dashed, label="0"];
15->6 [style = bold, label=""];
22->28 [style = bold, label=""];
10->7 [style = solid, label="query"];
4->2 [style = bold, label=""];
10->13 [style = dashed, label="0"];
14->5 [style = solid, label="query"];
23->17 [style = solid, label="query"];
10->7 [style = bold, label=""];
20->25 [style = bold, label=""];
25->16 [style = bold, label=""];
19->30 [style = solid, label="query"];
7->3 [style = bold, label=""];
21->18 [style = bold, label=""];
24->5 [style = bold, label=""];
4->12 [style = dashed, label="0"];
29->26 [style = bold, label=""];
7->14 [style = bold, label=""];
8->1 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
0->10 [style = bold, label=""];
1->6 [style = bold, label=""];
15->9 [style = solid, label="query"];
7->24 [style = bold, label=""];
30->21 [style = bold, label=""];
22->28 [style = solid, label="query"];
10->26 [style = dashed, label="0"];
5->12 [style = bold, label=""];
18->27 [style = bold, label=""];
4->20 [style = dashed, label="0"];
28->23 [style = bold, label=""];
13->7 [style = bold, label=""];
16->31 [style = bold, label=""];
12->8 [style = solid, label="query"];
5->4 [style = bold, label=""];
11->13 [style = bold, label=""];
6->19 [style = dashed, label="0"];
2->25 [style = dashed, label="0"];
2->8 [style = solid, label="expected"];
26->7 [style = solid, label="query"];
18->27 [style = solid, label="query"];
24->5 [style = solid, label="query"];
3->5 [style = solid, label="query"];
23->17 [style = bold, label=""];
13->7 [style = solid, label="query"];
6->9 [style = bold, label=""];
3->14 [style = dashed, label="0"];
20->25 [style = solid, label="query"];
16->31 [style = solid, label="query"];
31->19 [style = bold, label=""];
4->8 [style = solid, label="query"];
2->8 [style = bold, label=""];
14->5 [style = bold, label=""];
19->30 [style = bold, label=""];
}
