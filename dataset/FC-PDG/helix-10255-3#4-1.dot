digraph {
4 [style = filled, label = "testFullZNRecordSerializeDeserialize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ZNRecordStreamingSerializer znRecordSerializer = new ZNRecordStreamingSerializer()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testFullZNRecordSerializeDeserialize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final String RECORD_ID = \"testFullZNRecordStreamingSerializeDeserialize\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testFullZNRecordStreamingSerializeDeserialize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "znRecord.setPayload(sample)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SampleDeserialized sample = getSample()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(duplicate,sample)@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ZNRecord deserialized = (ZNRecord)znRecordSerializer.deserialize(serialized)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "znRecord.setPayload(sample)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "byte(( serialized = znRecordSerializer.serialize(znRecord)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ZNRecord znRecord = new ZNRecord(RECORD_ID,new JacksonPayloadSerializer())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String RECORD_ID = \"testFullZNRecordSerializeDeserialize\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "deserialized.setPayloadSerializer(new JacksonPayloadSerializer())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "znRecord.setPayloadSerializer(new JacksonPayloadSerializer())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "ZNRecord znRecord = new ZNRecord(RECORD_ID)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(duplicate,sample)@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "SampleDeserialized duplicate = deserialized.getPayload()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->12 [style = solid, label="sample"];
14->3 [style = bold, label=""];
5->10 [style = bold, label=""];
4->3 [style = bold, label=""];
3->17 [style = dashed, label="0"];
1->8 [style = bold, label=""];
3->13 [style = solid, label="RECORD_ID"];
0->13 [style = bold, label=""];
11->1 [style = bold, label=""];
1->15 [style = dashed, label="0"];
0->1 [style = solid, label="sample"];
13->5 [style = solid, label="znRecord"];
2->9 [style = bold, label=""];
16->17 [style = bold, label=""];
13->11 [style = bold, label=""];
6->15 [style = bold, label=""];
3->0 [style = bold, label=""];
8->5 [style = solid, label="serialized"];
5->10 [style = solid, label="serialized"];
0->7 [style = bold, label=""];
9->12 [style = solid, label="duplicate"];
6->1 [style = bold, label=""];
17->0 [style = bold, label=""];
8->5 [style = bold, label=""];
0->9 [style = solid, label="sample"];
3->7 [style = solid, label="RECORD_ID"];
7->6 [style = bold, label=""];
7->13 [style = dashed, label="0"];
10->2 [style = bold, label=""];
9->12 [style = bold, label=""];
7->8 [style = solid, label="znRecord"];
0->6 [style = solid, label="sample"];
17->7 [style = solid, label="RECORD_ID"];
15->8 [style = bold, label=""];
2->9 [style = solid, label="duplicate"];
}
