digraph {
10 [style = filled, label = "verify(indexShard).refresh(\"refresh_flag_index\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNull(listener.response)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "result.respond(listener)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testReplicaImmediateRefresh['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "TransportWriteAction.WriteReplicaResult<TestRequest> writeReplicaResult = testAction.shardOperationOnReplica(request,indexShard)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TestRequest request = new TestRequest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "writeReplicaResult.respond(listener)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(indexShard,never()).addRefreshListener(any(),any())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TestAction testAction = new TestAction()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNotNull(listener.failure)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertNotNull(listener.response)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "result.runPostReplicaActions(ActionListener.map(listener,null))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertNull(listener.failure)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "CapturingActionListener<TransportResponse.Empty> listener = new CapturingActionListener<>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testReplicaImmediateRefresh['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "TestAction testAction = new TestAction(randomBoolean(),true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "request.setRefreshPolicy(RefreshPolicy.IMMEDIATE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testDocumentFailureInShardOperationOnReplica['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TransportWriteAction.WriteReplicaResult<TestRequest> result = testAction.shardOperationOnReplica(request,indexShard)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
14->3 [style = bold, label=""];
16->15 [style = bold, label=""];
6->7 [style = solid, label="request"];
3->0 [style = solid, label="listener"];
0->3 [style = dashed, label="0"];
17->6 [style = bold, label=""];
2->6 [style = bold, label=""];
6->18 [style = bold, label=""];
11->6 [style = bold, label=""];
3->12 [style = solid, label="listener"];
9->10 [style = bold, label=""];
3->12 [style = bold, label=""];
3->16 [style = bold, label=""];
0->12 [style = dashed, label="0"];
12->1 [style = bold, label=""];
7->3 [style = bold, label=""];
1->9 [style = bold, label=""];
3->0 [style = bold, label=""];
14->3 [style = solid, label="listener"];
8->5 [style = bold, label=""];
1->16 [style = dashed, label="0"];
0->1 [style = bold, label=""];
6->13 [style = solid, label="request"];
6->8 [style = bold, label=""];
18->13 [style = bold, label=""];
10->4 [style = bold, label=""];
5->7 [style = bold, label=""];
13->14 [style = bold, label=""];
9->15 [style = dashed, label="0"];
}
