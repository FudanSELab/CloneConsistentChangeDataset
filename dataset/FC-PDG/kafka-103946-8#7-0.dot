digraph {
2 [style = filled, label = "v++@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "subscriptions.assignFromUser(Utils.mkSet(tp1,tp2))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "subscriptions.seek(tp1,1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MemoryRecords records = builder.build()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(1,fetcher.sendFetches())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testFetchResponseMetricsWithOnePartitionAtTheWrongOffset['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "partitions.put(tp0,new FetchResponse.PartitionData(Errors.NONE,100,FetchResponse.INVALID_LAST_STABLE_OFFSET,0L,null,records))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "subscriptions.seek(tp1,5)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "subscriptions.assignFromUser(singleton(tp1))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Map<TopicPartition,FetchResponse.PartitionData> partitions = new HashMap<>()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "KafkaMetric fetchSizeAverage = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchSizeAvg))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "v++@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "subscriptions.assignFromUser(Utils.mkSet(tp0,tp1))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "expectedBytes += record.sizeInBytes()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testFetchResponseMetricsWithOnePartitionAtTheWrongOffset['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "v < 3@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int expectedBytes = 0@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(2,recordsCountAverage.value(),EPSILON)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "subscriptions.seek(tp0,0)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(expectedBytes,fetchSizeAverage.value(),EPSILON)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int v = 0@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int expectedBytes = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "KafkaMetric recordsCountAverage = allMetrics.get(metrics.metricInstance(metricsRegistry.recordsPerRequestAvg))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MemoryRecords records = builder.build()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "fetchRecords(tp1,records,Errors.NONE,100L,0)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "subscriptions.seek(tp1,0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(expectedBytes,fetchSizeAverage.value(),EPSILON)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "client.prepareResponse(new FetchResponse(new LinkedHashMap<>(partitions),0))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "subscriptions.seek(tp1,0)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(3,recordsCountAverage.value(),EPSILON)@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "testFetchResponseMetricsPartialResponse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "KafkaMetric recordsCountAverage = allMetrics.get(metrics.metricInstance(metricsRegistry.recordsPerRequestAvg))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "consumerClient.poll(0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "client.prepareResponse(new FetchResponse(new LinkedHashMap<>(partitions),0))@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "record.offset() >= 1@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "partitions.put(tp1,new FetchResponse.PartitionData(Errors.NONE,100,FetchResponse.INVALID_LAST_STABLE_OFFSET,0L,null,MemoryRecords.withRecords(CompressionType.NONE,new SimpleRecord(\"val\".getBytes()))))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "fetcher.fetchedRecords()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "partitions.put(tp2,new FetchResponse.PartitionData(Errors.NONE,100,FetchResponse.INVALID_LAST_STABLE_OFFSET,0L,null,MemoryRecords.withRecords(CompressionType.NONE,new SimpleRecord(\"val\".getBytes()))))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "expectedBytes += record.sizeInBytes()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->13 [style = bold, label=""];
2->23 [style = solid, label="v"];
24->27 [style = dashed, label="0"];
2->9 [style = solid, label="v"];
11->14 [style = bold, label=""];
10->24 [style = bold, label=""];
2->26 [style = solid, label="v"];
3->2 [style = solid, label="v"];
16->7 [style = bold, label=""];
23->9 [style = solid, label="v"];
1->20 [style = solid, label="partitions"];
23->36 [style = solid, label="expectedBytes"];
18->8 [style = solid, label="expectedBytes"];
9->26 [style = bold, label=""];
2->23 [style = bold, label=""];
30->28 [style = bold, label=""];
34->2 [style = bold, label=""];
22->38 [style = dashed, label="0"];
14->13 [style = solid, label="v"];
17->21 [style = bold, label=""];
24->27 [style = bold, label=""];
8->19 [style = solid, label="expectedBytes"];
16->4 [style = solid, label="partitions"];
2->3 [style = dotted, label="true"];
13->34 [style = bold, label=""];
9->26 [style = dotted, label="true"];
12->37 [style = dashed, label="0"];
0->17 [style = bold, label=""];
0->21 [style = bold, label=""];
2->9 [style = bold, label=""];
13->9 [style = solid, label="v"];
19->25 [style = bold, label=""];
13->2 [style = solid, label="v"];
3->2 [style = bold, label=""];
21->11 [style = bold, label=""];
38->37 [style = bold, label=""];
1->16 [style = bold, label=""];
29->32 [style = bold, label=""];
35->17 [style = bold, label=""];
13->3 [style = solid, label="v"];
39->41 [style = bold, label=""];
9->40 [style = solid, label="records"];
9->1 [style = bold, label=""];
5->22 [style = bold, label=""];
32->31 [style = bold, label=""];
36->42 [style = bold, label=""];
13->34 [style = dotted, label="true"];
23->26 [style = solid, label="v"];
31->0 [style = bold, label=""];
7->20 [style = bold, label=""];
23->41 [style = bold, label=""];
6->15 [style = bold, label=""];
13->2 [style = dotted, label="true"];
39->36 [style = solid, label="expectedBytes"];
2->9 [style = dotted, label="true"];
16->30 [style = dashed, label="0"];
41->40 [style = bold, label=""];
40->36 [style = bold, label=""];
7->28 [style = dashed, label="0"];
9->23 [style = dotted, label="true"];
11->10 [style = bold, label=""];
39->40 [style = bold, label=""];
1->30 [style = solid, label="records"];
16->30 [style = bold, label=""];
9->3 [style = bold, label=""];
18->8 [style = bold, label=""];
13->9 [style = bold, label=""];
14->13 [style = bold, label=""];
37->35 [style = bold, label=""];
2->13 [style = solid, label="v"];
19->42 [style = dashed, label="0"];
13->2 [style = bold, label=""];
3->9 [style = solid, label="v"];
4->6 [style = bold, label=""];
8->19 [style = bold, label=""];
14->2 [style = solid, label="v"];
22->32 [style = dashed, label="0"];
41->39 [style = dotted, label="true"];
12->0 [style = bold, label=""];
15->18 [style = bold, label=""];
2->34 [style = solid, label="v"];
20->4 [style = bold, label=""];
24->14 [style = bold, label=""];
2->13 [style = bold, label=""];
9->23 [style = bold, label=""];
14->34 [style = solid, label="v"];
22->12 [style = bold, label=""];
26->23 [style = bold, label=""];
23->1 [style = bold, label=""];
33->38 [style = bold, label=""];
41->39 [style = bold, label=""];
23->16 [style = solid, label="records"];
23->9 [style = bold, label=""];
28->4 [style = bold, label=""];
}
