digraph {
2 [style = filled, label = "assertEquals(0,ret)@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sshd.setPort(0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(baos.toString(),containsString(\"Authenticated as: anonymous\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "redirectToEndpointShouldBeFollowed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(rsp.getContentAsString(),HttpURLConnection.HTTP_MOVED_TEMP,rsp.getStatusCode())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "JenkinsRule.WebClient wc = r.createWebClient().withRedirectEnabled(false).withThrowExceptionOnFailingStatusCode(false)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "grabCliJar()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "redirectToEndpointShouldBeFollowed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(baos.toString(),containsString(\"There's no Jenkins running at\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(rsp.getContentAsString(),null,rsp.getResponseHeaderValue(\"X-Jenkins-CLI-Port\"))@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "int ret = new Launcher.LocalLauncher(StreamTaskListener.fromStderr()).launch().cmds(\"java\",\"-Duser.home=\" + home,\"-jar\",jar.getAbsolutePath(),\"-s\",url,transport,\"-user\",\"asdf\",\"who-am-i\").stdout(baos).stderr(baos).join()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(rsp.getContentAsString(),null,rsp.getResponseHeaderValue(\"X-Jenkins\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "WebResponse rsp = wc.goTo(\"cli-proxy/\").getWebResponse()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertEquals(rsp.getContentAsString(),null,rsp.getResponseHeaderValue(\"X-SSH-Endpoint\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(0,ret)@@@21@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(rsp.getContentAsString(),null,rsp.getResponseHeaderValue(\"X-Jenkins-CLI-Port\"))@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(rsp.getContentAsString(),302,rsp.getStatusCode())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "SSHD sshd = GlobalConfiguration.all().get()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "home = tempHome()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String url = r.getURL().toString() + \"cli-proxy/\"@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "reportNotJenkins['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "wc.getOptions().setRedirectEnabled(false)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "String url = r.getURL().toExternalForm() + \"not-jenkins/\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "wc.getOptions().setThrowExceptionOnFailingStatusCode(false)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "JenkinsRule.WebClient wc = r.createWebClient()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertNotEquals(0,ret)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "sshd.start()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(baos.toString(),containsString(\"Authenticated as: anonymous\"))@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int ret = new Launcher.LocalLauncher(StreamTaskListener.fromStderr()).launch().cmds(\"java\",\"-Duser.home=\" + home,\"-jar\",jar.getAbsolutePath(),\"-s\",url,transport,\"-user\",\"asdf\",\"who-am-i\").stdout(baos).stderr(baos).join()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
8->16 [style = bold, label=""];
2->9 [style = solid, label="ret"];
16->0 [style = bold, label=""];
15->13 [style = bold, label=""];
28->5 [style = bold, label=""];
10->15 [style = bold, label=""];
10->19 [style = dashed, label="0"];
17->9 [style = bold, label=""];
18->19 [style = bold, label=""];
29->25 [style = bold, label=""];
4->18 [style = bold, label=""];
7->8 [style = bold, label=""];
24->22 [style = bold, label=""];
22->7 [style = bold, label=""];
11->2 [style = bold, label=""];
30->29 [style = bold, label=""];
14->1 [style = bold, label=""];
1->11 [style = bold, label=""];
20->5 [style = bold, label=""];
19->24 [style = bold, label=""];
26->30 [style = bold, label=""];
8->22 [style = dashed, label="0"];
6->27 [style = bold, label=""];
0->14 [style = bold, label=""];
3->5 [style = bold, label=""];
5->6 [style = bold, label=""];
18->10 [style = bold, label=""];
12->4 [style = bold, label=""];
14->23 [style = bold, label=""];
13->7 [style = bold, label=""];
2->14 [style = bold, label=""];
25->26 [style = bold, label=""];
1->2 [style = solid, label="ret"];
21->16 [style = bold, label=""];
7->21 [style = bold, label=""];
23->1 [style = bold, label=""];
16->14 [style = bold, label=""];
17->26 [style = dashed, label="0"];
27->29 [style = bold, label=""];
9->30 [style = dashed, label="0"];
9->1 [style = bold, label=""];
25->30 [style = solid, label="ret"];
6->12 [style = bold, label=""];
}
