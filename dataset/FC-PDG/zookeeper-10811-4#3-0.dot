digraph {
28 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "ZooKeeper clients = new ZooKeeper((((@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "createNremoveMtest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int n@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "data = queueHandles(1(.remove()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final int num_clients = 1@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "int m@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "i++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "String dir = \"/testRemove1\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "NoSuchElementException e@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "testRemove1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertTrue(false)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "clients(i( = createClient()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "createNremoveMtest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String offerString = testString + i@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int n@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int m@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i < clients.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "return@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "DistributedQueue queueHandles = new DistributedQueue((((@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < n@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "byte data = null@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "queueHandles(0(.remove()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String testString = \"Hello World\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "byte(( data = null@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(new String(data),testString + (m - 1))@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ZooKeeper clients = new ZooKeeper((((@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String dir@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i < m@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32->35 [style = bold, label=""];
6->3 [style = bold, label=""];
18->15 [style = dotted, label="true"];
19->11 [style = bold, label=""];
27->15 [style = dotted, label="true"];
22->0 [style = solid, label="i"];
15->21 [style = solid, label="dir"];
5->34 [style = bold, label=""];
21->31 [style = bold, label=""];
22->0 [style = bold, label=""];
24->6 [style = solid, label="m"];
4->8 [style = bold, label=""];
27->19 [style = bold, label=""];
16->28 [style = dashed, label="0"];
7->0 [style = solid, label="n"];
20->26 [style = dashed, label="0"];
11->16 [style = bold, label=""];
11->28 [style = bold, label=""];
27->25 [style = dotted, label="true"];
0->10 [style = dotted, label="true"];
3->33 [style = dashed, label="0"];
19->10 [style = solid, label="testString"];
34->33 [style = bold, label=""];
18->19 [style = bold, label=""];
11->37 [style = bold, label=""];
26->3 [style = solid, label="data"];
4->2 [style = bold, label=""];
27->24 [style = dotted, label="true"];
2->10 [style = solid, label="i"];
26->13 [style = bold, label=""];
23->14 [style = bold, label=""];
5->21 [style = bold, label=""];
36->30 [style = bold, label=""];
14->6 [style = solid, label="i"];
6->14 [style = dotted, label="true"];
20->3 [style = solid, label="data"];
35->31 [style = solid, label="dir"];
21->5 [style = solid, label="i"];
0->20 [style = bold, label=""];
13->14 [style = solid, label="i"];
5->8 [style = dotted, label="true"];
10->1 [style = bold, label=""];
14->6 [style = bold, label=""];
13->6 [style = solid, label="i"];
28->29 [style = bold, label=""];
4->5 [style = dotted, label="true"];
29->17 [style = bold, label=""];
20->13 [style = bold, label=""];
21->31 [style = solid, label="clients"];
18->7 [style = dotted, label="true"];
30->33 [style = bold, label=""];
6->23 [style = bold, label=""];
5->31 [style = dotted, label="true"];
12->17 [style = bold, label=""];
2->22 [style = solid, label="i"];
4->5 [style = solid, label="i"];
24->3 [style = solid, label="m"];
37->12 [style = bold, label=""];
4->21 [style = dotted, label="true"];
21->5 [style = bold, label=""];
2->0 [style = bold, label=""];
23->3 [style = solid, label="data"];
5->4 [style = bold, label=""];
18->9 [style = dotted, label="true"];
22->10 [style = solid, label="i"];
2->0 [style = solid, label="i"];
5->21 [style = dotted, label="true"];
13->6 [style = bold, label=""];
9->6 [style = solid, label="m"];
4->5 [style = bold, label=""];
31->8 [style = bold, label=""];
17->4 [style = bold, label=""];
31->8 [style = solid, label="i"];
36->30 [style = dotted, label="true"];
0->1 [style = dotted, label="true"];
0->26 [style = bold, label=""];
17->4 [style = solid, label="i"];
5->4 [style = solid, label="i"];
25->0 [style = solid, label="n"];
6->23 [style = dotted, label="true"];
4->8 [style = dotted, label="true"];
0->22 [style = dotted, label="true"];
1->22 [style = bold, label=""];
19->3 [style = solid, label="testString"];
0->10 [style = bold, label=""];
8->5 [style = bold, label=""];
8->5 [style = solid, label="i"];
9->3 [style = solid, label="m"];
12->29 [style = dashed, label="0"];
8->21 [style = bold, label=""];
11->37 [style = dashed, label="0"];
16->12 [style = bold, label=""];
8->21 [style = solid, label="clients"];
35->11 [style = bold, label=""];
}
