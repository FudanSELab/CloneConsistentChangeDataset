digraph {
4 [style = filled, label = "final RelOptTable relOptTable@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "RelOptTable relOptTable@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "RelOptCluster cluster@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final Table table = relOptTable.unwrap()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RelTraitSet traitSet = cluster.traitSetOf(EnumerableConvention.INSTANCE).replaceIfs(RelCollationTraitDef.INSTANCE,new Supplier<List<RelCollation>>(){public List<RelCollation> get(){if (table != null) {return table.getStatistic().getCollations()}return ImmutableList.of()}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "create['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final RelTraitSet traitSet = cluster.traitSetOf(Convention.NONE).replaceIfs(RelCollationTraitDef.INSTANCE,new Supplier<List<RelCollation>>(){public List<RelCollation> get(){if (table != null) {return table.getStatistic().getCollations()}return ImmutableList.of()}})@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "final RelTraitSet traitSet = cluster.traitSetOf(Convention.NONE).replaceIfs(RelCollationTraitDef.INSTANCE,null)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "return new EnumerableTableScan(cluster,traitSet,relOptTable,elementType)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "RelOptCluster cluster@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "create['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Class elementType = EnumerableTableScan.deduceElementType(table)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return new LogicalTableScan(cluster,traitSet,relOptTable)@@@13@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return new LogicalTableScan(cluster,traitSet,relOptTable)@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "RelOptCluster cluster@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "create['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->12 [style = dashed, label="0"];
3->1 [style = bold, label=""];
1->10 [style = solid, label="table"];
6->9 [style = solid, label="traitSet"];
11->12 [style = solid, label="elementType"];
7->9 [style = solid, label="cluster"];
4->9 [style = solid, label="relOptTable"];
3->4 [style = dotted, label="true"];
8->7 [style = dotted, label="true"];
14->12 [style = solid, label="cluster"];
4->5 [style = solid, label="relOptTable"];
8->4 [style = dotted, label="true"];
2->5 [style = solid, label="traitSet"];
13->1 [style = bold, label=""];
1->11 [style = bold, label=""];
8->1 [style = bold, label=""];
1->11 [style = solid, label="table"];
1->6 [style = bold, label=""];
1->2 [style = solid, label="table"];
11->10 [style = bold, label=""];
10->12 [style = bold, label=""];
4->15 [style = dashed, label="0"];
3->0 [style = dotted, label="true"];
2->6 [style = dashed, label="0"];
10->12 [style = solid, label="traitSet"];
13->15 [style = dotted, label="true"];
1->2 [style = bold, label=""];
15->12 [style = solid, label="relOptTable"];
6->9 [style = bold, label=""];
13->14 [style = dotted, label="true"];
0->5 [style = solid, label="cluster"];
2->5 [style = bold, label=""];
}
