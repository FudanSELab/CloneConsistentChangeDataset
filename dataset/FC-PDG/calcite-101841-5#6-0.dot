digraph {
3 [style = filled, label = "return new SqlExplain(pos,operands(0(,(SqlLiteral)operands(1(,(SqlLiteral)operands(2(,(SqlLiteral)operands(3(,0)@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "createCall['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "createCall['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SqlNode operands@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "SqlParserPos pos@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "@Nullable SqlNode operands@@@3@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "SqlLiteral functionQualifier@@@3@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "SqlParserPos pos@@@3@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "SqlLiteral functionQualifier@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SqlParserPos pos@@@3@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SqlNode operands@@@3@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "@Nullable SqlLiteral functionQualifier@@@3@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "createCall['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6->3 [style = bold, label=""];
0->3 [style = solid, label="pos"];
4->3 [style = bold, label=""];
1->3 [style = solid, label="operands"];
6->5 [style = dotted, label="true"];
11->9 [style = dotted, label="true"];
7->3 [style = solid, label="operands"];
4->1 [style = dotted, label="true"];
5->3 [style = solid, label="pos"];
6->8 [style = dotted, label="true"];
2->8 [style = dashed, label="0"];
11->10 [style = dotted, label="true"];
4->2 [style = dotted, label="true"];
4->0 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
6->7 [style = dotted, label="true"];
}
