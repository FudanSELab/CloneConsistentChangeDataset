digraph {
34 [style = filled, label = "testHighWatermarkNotExceeded['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(restoreInfo.successfulShards(),is(snapshotInfo.totalShards()))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "internalCluster().getCurrentMasterNodeInstance().addListener(null)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final SnapshotInfo snapshotInfo = createSnapshotResponse.getSnapshotInfo()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(snapshotInfo.successfulShards(),is(snapshotInfo.totalShards()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fileSystemProvider.getTestFileStore(dataNode0Path).setTotalSpace(minShardSize + WATERMARK_BYTES + 1L)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertBusyWithDiskUsageRefresh(dataNode0Id,indexName,hasSize(1))@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(Settings.builder().put(EnableAllocationDecider.CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),Rebalance.NONE.toString()).build()).get())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertAcked(client().admin().indices().prepareDelete(indexName).get())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final InternalClusterInfoService clusterInfoService = (InternalClusterInfoService)internalCluster().getCurrentMasterNodeInstance()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "refreshDiskUsage()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "createIndex(indexName,Settings.builder().put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS,0).put(IndexMetadata.SETTING_NUMBER_OF_SHARDS,6).put(INDEX_STORE_STATS_REFRESH_INTERVAL_SETTING.getKey(),\"0ms\").build())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final InternalClusterInfoService clusterInfoService = (InternalClusterInfoService)internalCluster().getMasterNodeInstance()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(snapshotInfo.state(),is(SnapshotState.SUCCESS))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ensureStableCluster(3)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertAcked(client().admin().cluster().preparePutRepository(\"repo\").setType(FsRepository.TYPE).setSettings(Settings.builder().put(\"location\",randomRepoPath()).put(\"compress\",randomBoolean())))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final String dataNode0Id = internalCluster().getInstance(,dataNodeName).nodeId()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "fileSystemProvider.getTestFileStore(dataNode0Path).setTotalSpace(minShardSize + WATERMARK_BYTES - 1L)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testRestoreSnapshotAllocationDoesNotExceedWatermark['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final Path dataNode0Path = internalCluster().getInstance(,dataNodeName).dataFiles()(0(@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RestoreInfo restoreInfo = restoreSnapshotResponse.getRestoreInfo()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(Settings.builder().putNull(EnableAllocationDecider.CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey()).build()).get())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "internalCluster().startDataOnlyNode()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final RestoreSnapshotResponse restoreSnapshotResponse = client().admin().cluster().prepareRestoreSnapshot(\"repo\",\"snap\").setWaitForCompletion(true).get()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "refreshDiskUsage()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertBusy(null)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String dataNodeName = internalCluster().startDataOnlyNode()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertBusy(null)@@@19@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final long minShardSize = createReasonableSizedShards(indexName)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "internalCluster().getMasterNodeInstance().addListener(null)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(restoreInfo.failedShards(),is(0))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testRestoreSnapshotAllocationDoesNotExceedWatermark['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final String indexName = randomAlphaOfLength(10).toLowerCase(Locale.ROOT)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final CreateSnapshotResponse createSnapshotResponse = client().admin().cluster().prepareCreateSnapshot(\"repo\",\"snap\").setWaitForCompletion(true).get()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "internalCluster().startMasterOnlyNode()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->5 [style = bold, label=""];
12->7 [style = bold, label=""];
28->3 [style = bold, label=""];
23->2 [style = bold, label=""];
8->14 [style = bold, label=""];
22->30 [style = bold, label=""];
34->18 [style = bold, label=""];
22->24 [style = bold, label=""];
13->9 [style = solid, label="indexName"];
19->33 [style = dashed, label="0"];
9->16 [style = bold, label=""];
5->1 [style = bold, label=""];
15->4 [style = bold, label=""];
20->22 [style = bold, label=""];
16->0 [style = bold, label=""];
4->17 [style = bold, label=""];
11->18 [style = bold, label=""];
31->18 [style = bold, label=""];
7->20 [style = bold, label=""];
26->27 [style = bold, label=""];
3->13 [style = bold, label=""];
1->33 [style = bold, label=""];
27->29 [style = bold, label=""];
14->1 [style = bold, label=""];
0->10 [style = bold, label=""];
19->21 [style = bold, label=""];
25->28 [style = bold, label=""];
29->6 [style = bold, label=""];
25->32 [style = dashed, label="0"];
28->33 [style = solid, label="dataNode0Id"];
32->28 [style = bold, label=""];
30->32 [style = bold, label=""];
13->33 [style = solid, label="indexName"];
24->30 [style = dashed, label="0"];
16->6 [style = bold, label=""];
1->19 [style = bold, label=""];
17->8 [style = bold, label=""];
20->24 [style = bold, label=""];
23->14 [style = bold, label=""];
24->25 [style = bold, label=""];
13->9 [style = bold, label=""];
18->12 [style = bold, label=""];
6->23 [style = bold, label=""];
13->16 [style = solid, label="indexName"];
16->1 [style = solid, label="minShardSize"];
2->15 [style = bold, label=""];
10->26 [style = bold, label=""];
16->6 [style = solid, label="minShardSize"];
}
