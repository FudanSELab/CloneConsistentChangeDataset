digraph {
2 [style = filled, label = "String factoryName = TransformerFactory.newInstance().getClass().getName()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ClassLoader orig = Thread.currentThread().getContextClassLoader()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Thread.currentThread().setContextClassLoader(new ClassLoader(ClassLoader.getSystemClassLoader().getParent()){public InputStream getResourceAsStream(String name){if (name.startsWith(\"META-INF/services/\")) {return new ByteArrayInputStream(new byte(((()}return super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d49963name}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "File xsl = getFile(\"/taskdefs/optional/xalan-redirect-in.xsl\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testXalan2RedirectViaXalan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Exception exc@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{out.delete()System.setSecurityManager(null)}@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assume.assumeNoException(\"xalan redirect is not on the classpath\",exc)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "liaison.addParam(\"xalan-version\",\"2\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "throw new RuntimeException(exc)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "System.setSecurityManager(new SecurityManager(){public void checkPermission(Permission perm){}})@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "{System.setSecurityManager(null)Thread.currentThread().setContextClassLoader(orig)}@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "commonIndexFileAssertions()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assume.assumeTrue(\"TraxFactory is \" + factoryName + \" and not Xalan\",\"org.apache.xalan.processor.TransformerFactoryImpl\".equals(factoryName))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "testWithSecurityManagerAndJDKFactory['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "buildRule.executeTarget(\"testWithStyleFromClasspath\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "liaison.setStylesheet(xsl)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "File out = new File(\"xalan2-redirect-out-dummy.tmp\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "File in = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testXalan2RedirectViaXalan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TransformerFactoryConfigurationError exc@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "liaison.transform(in,out)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assumeNoException(\"xalan redirect is not on the classpath\",exc)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assumeTrue(\"TraxFactory is \" + factoryName + \" and not Xalan\",\"org.apache.xalan.processor.TransformerFactoryImpl\".equals(factoryName))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "System.setSecurityManager(new SecurityManager(){public void checkPermission(Permission perm){}})@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
22->19 [style = bold, label=""];
2->12 [style = solid, label="factoryName"];
22->21 [style = solid, label="orig"];
4->15 [style = bold, label=""];
2->17 [style = solid, label="factoryName"];
6->1 [style = dotted, label="true"];
12->17 [style = dashed, label="0"];
15->10 [style = solid, label="in"];
16->2 [style = bold, label=""];
9->8 [style = bold, label=""];
3->4 [style = bold, label=""];
12->7 [style = bold, label=""];
7->3 [style = bold, label=""];
15->5 [style = bold, label=""];
2->12 [style = bold, label=""];
8->7 [style = bold, label=""];
19->25 [style = bold, label=""];
9->8 [style = dotted, label="true"];
17->7 [style = bold, label=""];
6->1 [style = bold, label=""];
25->20 [style = bold, label=""];
0->10 [style = bold, label=""];
23->22 [style = bold, label=""];
5->0 [style = bold, label=""];
24->21 [style = bold, label=""];
6->16 [style = bold, label=""];
1->16 [style = dashed, label="0"];
4->10 [style = solid, label="out"];
1->2 [style = bold, label=""];
14->2 [style = bold, label=""];
20->24 [style = bold, label=""];
13->14 [style = bold, label=""];
18->14 [style = bold, label=""];
7->3 [style = solid, label="xsl"];
6->16 [style = dotted, label="true"];
10->11 [style = bold, label=""];
}
