digraph {
42 [style = filled, label = "assertSinkMetricValue(\"sink-record-active-count-max\",1.0)@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertTaskMetricValue(\"batch-size-avg\",0.33333)@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "EasyMock.expectLastCall()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertSinkMetricValue(\"offset-commit-completion-total\",1.0)@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertSinkMetricValue(\"partition-count\",2)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "PowerMock.replayAll()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "sinkTask.put(EasyMock.anyObject())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "PowerMock.verifyAll()@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "time.sleep(30000L)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertSinkMetricValue(\"sink-record-active-count\",0.0)@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertTaskMetricValue(\"status-running\",1.0)@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "expectConversionAndTransformation(1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(0,workerTask.commitFailures())@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "expectConsumerPoll(1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertFalse(sinkTaskContext.getValue().isCommitRequested())@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertTaskMetricValue(\"status-paused\",0.0)@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertTaskMetricValue(\"offset-commit-success-percentage\",0.0)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertTaskMetricValue(\"running-ratio\",1.0)@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "workerTask.initializeAndStart()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertSinkMetricValue(\"offset-commit-completion-total\",0.0)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final Capture<OffsetCommitCallback> callback = EasyMock.newCapture()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "consumer.commitAsync(EasyMock.eq(offsets),EasyMock.capture(callback))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertTaskMetricValue(\"status-running\",1.0)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertTaskMetricValue(\"pause-ratio\",0.0)@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertSinkMetricValue(\"sink-record-read-total\",1.0)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertTaskMetricValue(\"offset-commit-success-percentage\",1.0)@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertSinkMetricValue(\"sink-record-active-count-avg\",0.333333)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertSinkMetricValue(\"offset-commit-seq-no\",0.0)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertTaskMetricValue(\"batch-size-max\",1.0)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "PowerMock.verifyAll()@@@79@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertSinkMetricValue(\"sink-record-active-count-max\",1.0)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertTaskMetricValue(\"offset-commit-failure-percentage\",0.0)@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertTaskMetricValue(\"pause-ratio\",0.0)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "EasyMock.expectLastCall().andReturn(offsets)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertSinkMetricValue(\"sink-record-active-count-avg\",0.2)@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "createTask(initialState)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.expectLastCall()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertTaskMetricValue(\"offset-commit-failure-percentage\",0.0)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertSinkMetricValue(\"sink-record-send-total\",1.0)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertNotEquals(offsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertTaskMetricValue(\"offset-commit-avg-time-ms\",0.0)@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertSinkMetricValue(\"offset-commit-seq-no\",1.0)@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assertSinkMetricValue(\"sink-record-read-total\",1.0)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "expectPollInitialAssignment()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expectInitializeTask()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertSinkMetricValue(\"offset-commit-skip-total\",0.0)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertSinkMetricValue(\"offset-commit-skip-total\",0.0)@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertSinkMetricValue(\"partition-count\",2)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "workerTask.iteration()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertSinkMetricValue(\"sink-record-active-count\",1.0)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> offsets = new HashMap<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(sinkTaskContext.getValue().isCommitRequested())@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "sinkTask.put(Collections.emptyList())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "workerTask.iteration()@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(offsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(1.0,metrics.currentMetricValueAsDouble(workerTask.taskMetricsGroup().metricGroup(),\"batch-size-max\"),0.0001)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "sinkTask.preCommit(offsets)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.expectLastCall().andAnswer(new IAnswer<Void>(){@Override public Void answer(){callback.getValue().onComplete(offsets,null)return null}})@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testDeliveryWithMutatingTransform['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "assertTaskMetricValue(\"status-paused\",0.0)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "expectConsumerPoll(0)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertTaskMetricValue(\"running-ratio\",1.0)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(1.0,metrics.currentMetricValue(workerTask.taskMetricsGroup().metricGroup(),\"batch-size-max\"),0.0001)@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "assertTaskMetricValue(\"batch-size-max\",1.0)@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "offsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "offsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testRequestCommit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "workerTask.iteration()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "time.sleep(10000L)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertSinkMetricValue(\"partition-count\",2)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "sinkTaskContext.getValue().requestCommit()@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testDeliveryWithMutatingTransform['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertSinkMetricValue(\"sink-record-send-total\",1.0)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertTaskMetricValue(\"offset-commit-max-time-ms\",0.0)@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "expectConversionAndTransformation(1,\"newtopic_\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "time.sleep(10000L)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertTaskMetricValue(\"batch-size-avg\",0.5)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65->67 [style = bold, label=""];
70->64 [style = bold, label=""];
71->44 [style = bold, label=""];
6->11 [style = solid, label="offsets"];
15->21 [style = bold, label=""];
28->66 [style = dashed, label="0"];
16->7 [style = bold, label=""];
4->62 [style = bold, label=""];
60->71 [style = bold, label=""];
41->77 [style = bold, label=""];
55->51 [style = bold, label=""];
46->31 [style = bold, label=""];
63->56 [style = bold, label=""];
35->43 [style = bold, label=""];
37->55 [style = bold, label=""];
77->70 [style = bold, label=""];
59->12 [style = bold, label=""];
20->27 [style = bold, label=""];
6->15 [style = solid, label="offsets"];
12->47 [style = bold, label=""];
0->14 [style = bold, label=""];
29->2 [style = bold, label=""];
45->61 [style = bold, label=""];
69->58 [style = bold, label=""];
38->7 [style = bold, label=""];
30->8 [style = bold, label=""];
56->53 [style = bold, label=""];
24->28 [style = bold, label=""];
23->25 [style = bold, label=""];
8->23 [style = bold, label=""];
9->33 [style = bold, label=""];
9->17 [style = bold, label=""];
2->9 [style = bold, label=""];
26->6 [style = bold, label=""];
64->75 [style = bold, label=""];
58->39 [style = bold, label=""];
7->5 [style = bold, label=""];
19->13 [style = bold, label=""];
21->11 [style = bold, label=""];
6->3 [style = solid, label="offsets"];
44->37 [style = bold, label=""];
39->42 [style = bold, label=""];
32->31 [style = bold, label=""];
57->69 [style = bold, label=""];
51->63 [style = bold, label=""];
76->40 [style = bold, label=""];
14->4 [style = bold, label=""];
22->26 [style = bold, label=""];
4->10 [style = bold, label=""];
49->45 [style = bold, label=""];
18->24 [style = bold, label=""];
31->59 [style = bold, label=""];
32->46 [style = bold, label=""];
17->1 [style = bold, label=""];
24->66 [style = bold, label=""];
73->49 [style = bold, label=""];
68->65 [style = bold, label=""];
17->33 [style = dashed, label="0"];
5->18 [style = bold, label=""];
6->2 [style = solid, label="offsets"];
67->72 [style = bold, label=""];
31->12 [style = bold, label=""];
6->20 [style = bold, label=""];
53->74 [style = bold, label=""];
21->11 [style = solid, label="callback"];
66->22 [style = bold, label=""];
28->22 [style = bold, label=""];
61->35 [style = bold, label=""];
43->50 [style = bold, label=""];
6->19 [style = solid, label="offsets"];
9->57 [style = bold, label=""];
27->3 [style = bold, label=""];
25->32 [style = bold, label=""];
47->68 [style = bold, label=""];
34->7 [style = bold, label=""];
54->48 [style = bold, label=""];
62->10 [style = bold, label=""];
3->15 [style = bold, label=""];
33->1 [style = bold, label=""];
13->30 [style = bold, label=""];
50->76 [style = bold, label=""];
11->19 [style = bold, label=""];
72->60 [style = bold, label=""];
12->0 [style = bold, label=""];
10->52 [style = bold, label=""];
48->0 [style = bold, label=""];
10->29 [style = bold, label=""];
40->41 [style = bold, label=""];
52->29 [style = bold, label=""];
75->36 [style = bold, label=""];
74->54 [style = bold, label=""];
42->73 [style = bold, label=""];
6->4 [style = solid, label="offsets"];
}
