digraph {
10 [style = filled, label = "final int responseSize = 16@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "callback0.wait(FOREVER)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final Semaphore semaphore = new Semaphore(1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "client.sendRpc(ByteBuffer.allocate(0),callback1)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assert(callback1.failure != null)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "timeoutCleanlyClosesClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "clientFactory = context.createClientFactory()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(callback0.failure instanceof IOException)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(responseSize,callback0.successLength)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assert(callback0.failure instanceof IOException)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "server = context.createServer()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "client0.sendRpc(ByteBuffer.allocate(0),callback0)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "timeoutInactiveRequests['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertFalse(client0.isActive())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "semaphore.release()@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "callback1.wait(4 * 1000)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "client.sendRpc(ByteBuffer.allocate(0),callback0)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "TransportClient client1 = clientFactory.createClient(TestUtils.getLocalHost(),server.getPort())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "semaphore.release(2)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TestCallback callback0 = new TestCallback()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "client1.sendRpc(ByteBuffer.allocate(0),callback1)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TransportContext context = new TransportContext(conf,handler)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RpcHandler handler = new RpcHandler(){@Override public void receive(TransportClient client,ByteBuffer message,RpcResponseCallback callback){try {semaphore.tryAcquire(FOREVER,TimeUnit.MILLISECONDS)callback.onSuccess(ByteBuffer.allocate(responseSize))}catch (InterruptedException e) }@Override public StreamManager getStreamManager(){return defaultManager}}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TransportClient client0 = clientFactory.createClient(TestUtils.getLocalHost(),server.getPort())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assert(callback1.failure instanceof IOException)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "callback1@@@30@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "callback1.wait(FOREVER)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNull(callback1.failure)@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "TransportClient client = clientFactory.createClient(TestUtils.getLocalHost(),server.getPort())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "TestCallback callback1 = new TestCallback()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "callback0@@@24@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "timeoutCleanlyClosesClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(responseSize,callback1.successLength)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assert(!client0.isActive())@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10->28 [style = solid, label="responseSize"];
17->8 [style = bold, label=""];
6->30 [style = dotted, label="true"];
18->3 [style = bold, label=""];
12->17 [style = dotted, label="true"];
25->1 [style = bold, label=""];
1->19 [style = solid, label="callback0"];
20->9 [style = dotted, label="true"];
6->31 [style = dotted, label="true"];
28->34 [style = bold, label=""];
21->6 [style = bold, label=""];
20->29 [style = bold, label=""];
11->1 [style = bold, label=""];
22->16 [style = bold, label=""];
10->5 [style = solid, label="responseSize"];
12->8 [style = dotted, label="true"];
20->24 [style = dotted, label="true"];
3->33 [style = dashed, label="0"];
12->17 [style = bold, label=""];
10->14 [style = solid, label="responseSize"];
19->29 [style = dashed, label="0"];
4->31 [style = dashed, label="0"];
1->20 [style = bold, label=""];
0->11 [style = bold, label=""];
8->14 [style = bold, label=""];
9->22 [style = dashed, label="0"];
23->3 [style = bold, label=""];
33->10 [style = bold, label=""];
19->2 [style = bold, label=""];
12->26 [style = bold, label=""];
1->29 [style = solid, label="callback0"];
5->7 [style = solid, label="handler"];
24->22 [style = bold, label=""];
9->16 [style = bold, label=""];
32->33 [style = bold, label=""];
2->13 [style = bold, label=""];
26->30 [style = bold, label=""];
3->10 [style = bold, label=""];
12->14 [style = dotted, label="true"];
13->24 [style = dashed, label="0"];
6->26 [style = dotted, label="true"];
29->2 [style = bold, label=""];
6->17 [style = solid, label="callback1"];
10->5 [style = bold, label=""];
31->27 [style = bold, label=""];
20->29 [style = dotted, label="true"];
0->25 [style = bold, label=""];
30->31 [style = bold, label=""];
1->20 [style = solid, label="callback0"];
16->21 [style = bold, label=""];
20->28 [style = dotted, label="true"];
15->0 [style = bold, label=""];
34->6 [style = bold, label=""];
11->25 [style = dashed, label="0"];
7->15 [style = bold, label=""];
5->7 [style = bold, label=""];
34->12 [style = solid, label="callback1"];
20->2 [style = dotted, label="true"];
20->19 [style = dotted, label="true"];
20->13 [style = dotted, label="true"];
13->9 [style = bold, label=""];
12->4 [style = dotted, label="true"];
20->22 [style = dotted, label="true"];
2->24 [style = bold, label=""];
6->12 [style = dotted, label="true"];
17->12 [style = dashed, label="0"];
20->19 [style = bold, label=""];
2->28 [style = bold, label=""];
6->12 [style = solid, label="callback1"];
34->6 [style = solid, label="callback1"];
14->4 [style = bold, label=""];
8->26 [style = dashed, label="0"];
6->12 [style = bold, label=""];
}
