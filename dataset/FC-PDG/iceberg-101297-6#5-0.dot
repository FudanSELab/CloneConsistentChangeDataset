digraph {
18 [style = filled, label = "testIntegerNotEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (29 < 30)\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertTrue(\"Should read: id below lower bound\",shouldRead)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testIntegerNotEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "boolean shouldRead = ManifestEvaluator.forRowFilter(lessThanOrEqual(\"id\",5),SPEC,true).eval(FILE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",80),SPEC,true).eval(FILE)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Assert.assertTrue(\"Should read: one possible id\",shouldRead)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThanOrEqual(\"id\",29),SPEC,true).eval(FILE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",75),SPEC,true).eval(FILE)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(\"Should read: id above upper bound\",shouldRead)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",30),SPEC,true).eval(FILE)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",INT_MIN_VALUE),SPEC,true).eval(FILE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "testIntegerLtEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",INT_MAX_VALUE + 6),SPEC,true).eval(FILE)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",INT_MIN_VALUE - 1),SPEC,true).eval(FILE)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",79),SPEC,true).eval(FILE)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",INT_MAX_VALUE),SPEC,true).eval(FILE)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThanOrEqual(\"id\",79),SPEC,true).eval(FILE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "boolean shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",5),SPEC,true).eval(FILE)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "boolean shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",INT_MIN_VALUE - 25),SPEC,true).eval(FILE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThanOrEqual(\"id\",30),SPEC,true).eval(FILE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",85),SPEC,true).eval(FILE)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(\"Should read: id between lower and upper bounds\",shouldRead)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",INT_MAX_VALUE - 4),SPEC,true).eval(FILE)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",INT_MAX_VALUE + 1),SPEC,true).eval(FILE)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertTrue(\"Should read: id above upper bound\",shouldRead)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(\"Should read: id equal to lower bound\",shouldRead)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(\"Should read: id below lower bound\",shouldRead)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(\"Should read: id equal to upper bound\",shouldRead)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(notEqual(\"id\",29),SPEC,true).eval(FILE)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "Assert.assertTrue(\"Should read: many possible ids\",shouldRead)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25->24 [style = solid, label="shouldRead"];
23->31 [style = bold, label=""];
17->10 [style = solid, label="shouldRead"];
17->10 [style = bold, label=""];
4->3 [style = bold, label=""];
24->28 [style = bold, label=""];
23->31 [style = solid, label="shouldRead"];
16->13 [style = bold, label=""];
28->29 [style = bold, label=""];
7->11 [style = bold, label=""];
31->25 [style = bold, label=""];
2->19 [style = dashed, label="0"];
3->30 [style = dashed, label="0"];
12->23 [style = dashed, label="0"];
3->1 [style = bold, label=""];
12->16 [style = dashed, label="0"];
20->5 [style = solid, label="shouldRead"];
1->27 [style = dashed, label="0"];
10->19 [style = bold, label=""];
30->27 [style = bold, label=""];
18->15 [style = bold, label=""];
21->8 [style = bold, label=""];
22->14 [style = solid, label="shouldRead"];
21->8 [style = solid, label="shouldRead"];
6->17 [style = dashed, label="0"];
19->7 [style = solid, label="shouldRead"];
0->22 [style = dashed, label="0"];
8->22 [style = bold, label=""];
20->5 [style = bold, label=""];
26->30 [style = bold, label=""];
11->8 [style = solid, label="shouldRead"];
8->0 [style = bold, label=""];
12->13 [style = bold, label=""];
30->27 [style = solid, label="shouldRead"];
13->17 [style = bold, label=""];
25->24 [style = bold, label=""];
0->14 [style = bold, label=""];
28->29 [style = solid, label="shouldRead"];
13->31 [style = dashed, label="0"];
6->25 [style = dashed, label="0"];
6->10 [style = solid, label="shouldRead"];
1->16 [style = bold, label=""];
9->20 [style = dashed, label="0"];
6->10 [style = bold, label=""];
2->28 [style = dashed, label="0"];
1->12 [style = bold, label=""];
12->13 [style = solid, label="shouldRead"];
9->5 [style = bold, label=""];
7->21 [style = bold, label=""];
3->15 [style = dashed, label="0"];
11->8 [style = bold, label=""];
2->7 [style = solid, label="shouldRead"];
9->5 [style = solid, label="shouldRead"];
10->2 [style = bold, label=""];
14->9 [style = bold, label=""];
3->1 [style = solid, label="shouldRead"];
27->23 [style = bold, label=""];
7->29 [style = dashed, label="0"];
2->7 [style = bold, label=""];
13->6 [style = bold, label=""];
22->14 [style = bold, label=""];
0->14 [style = solid, label="shouldRead"];
16->13 [style = solid, label="shouldRead"];
19->7 [style = bold, label=""];
10->24 [style = dashed, label="0"];
15->1 [style = solid, label="shouldRead"];
14->20 [style = bold, label=""];
15->1 [style = bold, label=""];
11->21 [style = dashed, label="0"];
}
