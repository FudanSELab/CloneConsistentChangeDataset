digraph {
4 [style = filled, label = "VolcanoPlanner planner = new VolcanoPlanner()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "planner.ambitious = true@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "planner.setRoot(convertedRel)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "NoneSingleRel singleRel = new NoneSingleRel(cluster,leafRel)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testRemoveSingleReformed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "planner.addRule(new GoodSingleRule())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "NoneLeafRel leafRel = new NoneLeafRel(cluster,\"a\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "planner.addRule(new GoodRemoveSingleRule())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(\"c\",resultLeaf.getLabel())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "planner.addRelTraitDef(ConventionTraitDef.INSTANCE)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RelNode convertedRel = planner.changeTraits(singleRel,cluster.traitSetOf(PHYS_CALLING_CONVENTION))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RelNode result = planner.chooseDelegate().findBestExp()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "planner.addRule(new ReformedRemoveSingleRule())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "RelOptCluster cluster = newCluster(planner)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(result instanceof PhysLeafRel)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "PhysLeafRel resultLeaf = (PhysLeafRel)result@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "planner.addRule(new PhysLeafRule())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testRemoveSingleReformed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testRemoveSingleGood['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "RelOptCluster cluster = newCluster(planner)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"c\",resultLeaf.label)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->16 [style = bold, label=""];
7->1 [style = bold, label=""];
11->3 [style = solid, label="cluster"];
0->13 [style = bold, label=""];
2->10 [style = solid, label="convertedRel"];
5->6 [style = solid, label="result"];
13->11 [style = solid, label="cluster"];
18->17 [style = bold, label=""];
10->9 [style = solid, label="convertedRel"];
4->13 [style = solid, label="planner"];
5->14 [style = bold, label=""];
2->10 [style = bold, label=""];
12->0 [style = bold, label=""];
13->11 [style = bold, label=""];
11->3 [style = solid, label="leafRel"];
2->10 [style = solid, label="singleRel"];
4->7 [style = bold, label=""];
3->2 [style = solid, label="leafRel"];
6->20 [style = bold, label=""];
11->2 [style = solid, label="cluster"];
6->16 [style = dashed, label="0"];
13->3 [style = solid, label="cluster"];
3->2 [style = bold, label=""];
11->3 [style = bold, label=""];
12->18 [style = bold, label=""];
15->4 [style = bold, label=""];
1->12 [style = bold, label=""];
9->14 [style = solid, label="result"];
9->5 [style = bold, label=""];
5->14 [style = solid, label="result"];
0->18 [style = dashed, label="0"];
3->2 [style = solid, label="singleRel"];
10->9 [style = bold, label=""];
19->4 [style = bold, label=""];
8->4 [style = bold, label=""];
4->11 [style = solid, label="planner"];
14->6 [style = bold, label=""];
9->5 [style = solid, label="result"];
17->11 [style = bold, label=""];
}
