digraph {
5 [style = filled, label = "testScheduler.advanceTimeBy(2,TimeUnit.SECONDS)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "withTimeout.subscribe(subscriber)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldCompleteIfUnderlyingComletes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "to.dispose()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Subscriber<String> subscriber = TestHelper.mockSubscriber()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "withTimeout.subscribe(observer)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verify(observer,never()).onError(any())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "TestObserver<String> to = new TestObserver<String>(observer)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "TestSubscriber<String> ts = new TestSubscriber<>(subscriber)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "shouldCompleteIfUnderlyingComletes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shouldCompleteIfUnderlyingComletes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "verify(observer).onComplete()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "underlyingSubject.onComplete()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "TestSubscriber<String> ts = new TestSubscriber<String>(subscriber)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Observer<String> observer = TestHelper.mockObserver()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "verify(subscriber).onComplete()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "verify(subscriber,never()).onError(any())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ts.cancel()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testScheduler.advanceTimeBy(2,TimeUnit.SECONDS)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->18 [style = solid, label="observer"];
8->16 [style = dashed, label="0"];
7->11 [style = bold, label=""];
7->11 [style = solid, label="subscriber"];
1->14 [style = dashed, label="0"];
7->17 [style = dashed, label="0"];
3->18 [style = dashed, label="0"];
0->12 [style = bold, label=""];
11->6 [style = bold, label=""];
0->2 [style = bold, label=""];
18->15 [style = bold, label=""];
3->6 [style = bold, label=""];
12->16 [style = bold, label=""];
7->6 [style = solid, label="subscriber"];
9->7 [style = bold, label=""];
10->7 [style = bold, label=""];
7->3 [style = bold, label=""];
15->5 [style = bold, label=""];
4->0 [style = bold, label=""];
7->3 [style = solid, label="subscriber"];
8->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
6->5 [style = bold, label=""];
13->17 [style = bold, label=""];
6->15 [style = dashed, label="0"];
5->4 [style = bold, label=""];
17->15 [style = solid, label="observer"];
16->14 [style = bold, label=""];
17->18 [style = bold, label=""];
3->11 [style = dashed, label="0"];
2->8 [style = bold, label=""];
}
