digraph {
5 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,preAnalysis).makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"countryNumber\"),NullHandling.sqlCompatible()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c65c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c664,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c66c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c674,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c67c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c684,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c68c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c694,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c69c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c6a4,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c6ac,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c6b4): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c6bf,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c6c7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c6cf,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c6d7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c6df,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c6e7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c6ef,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c6f7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c6ff,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c707,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c70f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c717,new Object((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c71f))@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnIsoCode(JoinType.LEFT))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Filter filter = new SelectorDimFilter(\"channel\",\"#de.wikipedia\",null).toFilter()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "JoinFilterPreAnalysis preAnalysis = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(joinableClauses,VirtualColumns.EMPTY,filter,true,true,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE_KEY)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "test_makeCursors_factToCountryInnerUsingCountryNumber['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Filter filter = new SelectorDimFilter(\"channel\",\"#en.wikipedia\",null).toFilter()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JoinFilterPreAnalysis preAnalysis = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(joinableClauses,VirtualColumns.EMPTY,filter,true,true,true,QueryContexts.DEFAULT_ENABLE_JOIN_FILTER_REWRITE_MAX_SIZE)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "test_makeCursors_factToCountryLeftWithFilterOnFacts['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,preAnalysis).makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryNumber\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90c784))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnNumber(JoinType.INNER))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->0 [style = solid, label="filter"];
9->0 [style = bold, label=""];
3->6 [style = solid, label="filter"];
2->1 [style = bold, label=""];
7->0 [style = solid, label="joinableClauses"];
0->6 [style = dashed, label="0"];
1->3 [style = bold, label=""];
3->6 [style = bold, label=""];
1->6 [style = solid, label="joinableClauses"];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
7->9 [style = bold, label=""];
9->0 [style = solid, label="filter"];
6->4 [style = bold, label=""];
5->1 [style = bold, label=""];
0->10 [style = bold, label=""];
1->0 [style = solid, label="joinableClauses"];
9->10 [style = solid, label="filter"];
3->9 [style = dashed, label="0"];
0->4 [style = bold, label=""];
1->7 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
3->4 [style = solid, label="filter"];
}
