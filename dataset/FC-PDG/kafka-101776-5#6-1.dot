digraph {
12 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new TimeWindow(0L,100L))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "processor.process(key,value)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "context.setRecordMetadata(\"\",0,0L,null,timestamp)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final long timestamp = ARBITRARY_LONG@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new SessionWindow(0L,0L))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(context.forwarded(),hasSize(1))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final long timestamp = 100L@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "harness.processor.process(key,value)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "windowedZeroTimeLimitShouldImmediatelyEmit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final KTableSuppressProcessor<Windowed<String>,Long> processor = harness.processor@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "finalResultsShouldDropTombstonesForSessionWindows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(capturedForward.timestamp(),is(timestamp))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Harness<Windowed<String>,Long> harness = new Harness<>(untilTimeLimit(ZERO,unbounded()),timeWindowedSerdeFrom(,100L),Long())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Change<Long> value = ARBITRARY_CHANGE@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(capturedForward.keyValue(),is(new KeyValue<>(key,value)))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final MockInternalProcessorContext context = harness.context@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(context.forwarded(),hasSize(0))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final Harness<Windowed<String>,Long> harness = new Harness<>(finalResults(ofMillis(0L)),sessionWindowedSerdeFrom(),Long())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final MockProcessorContext.CapturedForward capturedForward = context.forwarded().get(0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Change<Long> value = new Change<>(null,ARBITRARY_LONG)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "windowedZeroTimeLimitShouldImmediatelyEmit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
15->10 [style = solid, label="value"];
1->4 [style = bold, label=""];
17->5 [style = bold, label=""];
15->10 [style = bold, label=""];
10->20 [style = bold, label=""];
16->18 [style = bold, label=""];
7->17 [style = bold, label=""];
6->2 [style = solid, label="value"];
6->13 [style = solid, label="value"];
3->18 [style = dashed, label="0"];
18->11 [style = bold, label=""];
8->3 [style = bold, label=""];
6->10 [style = solid, label="value"];
12->2 [style = solid, label="key"];
3->11 [style = bold, label=""];
12->10 [style = solid, label="key"];
4->2 [style = bold, label=""];
10->13 [style = dashed, label="0"];
11->9 [style = bold, label=""];
12->6 [style = bold, label=""];
13->1 [style = bold, label=""];
1->20 [style = dashed, label="0"];
7->9 [style = bold, label=""];
5->19 [style = bold, label=""];
17->5 [style = solid, label="timestamp"];
9->5 [style = solid, label="timestamp"];
2->0 [style = bold, label=""];
12->19 [style = dashed, label="0"];
5->12 [style = bold, label=""];
6->15 [style = dashed, label="0"];
19->10 [style = solid, label="key"];
9->0 [style = solid, label="timestamp"];
6->10 [style = bold, label=""];
6->13 [style = bold, label=""];
9->17 [style = dashed, label="0"];
9->5 [style = bold, label=""];
19->15 [style = bold, label=""];
10->1 [style = bold, label=""];
12->13 [style = solid, label="key"];
11->7 [style = bold, label=""];
}
