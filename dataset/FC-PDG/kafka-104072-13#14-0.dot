digraph {
6 [style = filled, label = "testWakeupAfterJoinGroupSent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "WakeupException e@@@21@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "coordinator.ensureActiveGroup()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "fail(\"Should have woken up from ensureActiveGroup()\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "mockClient.prepareResponse(syncGroupResponse(Errors.NONE))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(1,coordinator.onJoinPrepareInvokes)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,coordinator.onJoinPrepareInvokes)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "setupCoordinator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "fail(\"Should have woken up from ensureActiveGroup()\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{}@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "mockClient.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){invocations++boolean isJoinGroupRequest = body instanceof JoinGroupRequestif (isJoinGroupRequest && invocations == 1) throw new WakeupException()return isJoinGroupRequest}},joinGroupFollowerResponse(1,memberId,leaderId,Errors.NONE))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "mockClient.prepareResponse(groupCoordinatorResponse(node,Errors.NONE))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(1,coordinator.onJoinPrepareInvokes)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertFalse(heartbeatReceived.get())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(0,coordinator.onJoinCompleteInvokes)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testWakeupAfterJoinGroupSent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "WakeupException ignored@@@21@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "WakeupException e@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "awaitFirstHeartbeat(heartbeatReceived)@@@26@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testWakeupAfterJoinGroupReceivedExternalCompletion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "consumerClient.poll(mockTime.timer(0))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "awaitFirstHeartbeat(heartbeatReceived)@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(1,coordinator.onJoinCompleteInvokes)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "AtomicBoolean heartbeatReceived = prepareFirstHeartbeat()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "{}@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(1,coordinator.onJoinCompleteInvokes)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "mockClient.prepareResponse(null,joinGroupFollowerResponse(1,memberId,leaderId,Errors.NONE))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "coordinator.ensureActiveGroup()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->5 [style = bold, label=""];
19->3 [style = bold, label=""];
20->3 [style = bold, label=""];
11->21 [style = bold, label=""];
26->2 [style = bold, label=""];
13->0 [style = bold, label=""];
0->7 [style = bold, label=""];
12->14 [style = bold, label=""];
2->13 [style = bold, label=""];
9->20 [style = bold, label=""];
13->22 [style = bold, label=""];
9->3 [style = bold, label=""];
22->27 [style = bold, label=""];
27->23 [style = bold, label=""];
24->11 [style = bold, label=""];
15->21 [style = bold, label=""];
16->10 [style = bold, label=""];
6->2 [style = bold, label=""];
8->3 [style = bold, label=""];
10->1 [style = bold, label=""];
9->19 [style = dashed, label="0"];
25->5 [style = bold, label=""];
15->11 [style = bold, label=""];
3->12 [style = bold, label=""];
11->8 [style = bold, label=""];
18->19 [style = bold, label=""];
4->9 [style = bold, label=""];
23->7 [style = bold, label=""];
14->25 [style = bold, label=""];
15->1 [style = solid, label="heartbeatReceived"];
7->15 [style = bold, label=""];
21->9 [style = bold, label=""];
0->22 [style = dashed, label="0"];
5->16 [style = bold, label=""];
17->2 [style = bold, label=""];
23->5 [style = solid, label="heartbeatReceived"];
}
