digraph {
23 [style = filled, label = "_bucketDataAccessor = new ZkBucketDataAccessor(ZK_ADDR,50 * 1024,VERSION_TTL_MS)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ZkBucketDataAccessor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "_zkBaseDataAccessor = new ZkBaseDataAccessor<>(_zkClient)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Boolean.getBoolean(SystemPropertyKeys.MULTI_ZK_ENABLED) || zkAddr == null@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "record.setSimpleField(NAME_KEY,NAME_KEY)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "_versionTTLms = versionTTLms@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "IllegalArgumentException|IOException|InvalidRoutingDataException e@@@10@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "record.setMapField(NAME_KEY,MAP_FIELD)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int bucketSize@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "int bucketSize@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "_bucketSize = bucketSize@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "HelixZkClient zkClient = DedicatedZkClientFactory.getInstance().buildZkClient(new HelixZkClient.ZkConnectionConfig(ZK_ADDR))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "long versionTTLms@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "_zkClient.setZkSerializer(new ZkSerializer(){@Override public byte(( serialize(Object data){if (data instanceof byte(() {return (byte(()data}throw new HelixException(\"ZkBucketDataAccesor only supports a byte array as an argument!\")}@Override public Object deserialize(byte(( data){return data}})@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "beforeClass['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "record.setListField(NAME_KEY,LIST_FIELD)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "_zkClient = new FederatedZkClient(connectionConfig,clientConfig)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "_zkSerializer = new ZNRecordJacksonSerializer()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ZkBucketDataAccessor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "IllegalArgumentException|InvalidRoutingDataException e@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "RealmAwareZkClient.RealmAwareZkConnectionConfig connectionConfig = new RealmAwareZkClient.RealmAwareZkConnectionConfig.Builder().build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String zkAddr@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "RealmAwareZkClient.RealmAwareZkClientConfig clientConfig = new RealmAwareZkClient.RealmAwareZkClientConfig()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long versionTTLms@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "zkClient.setZkSerializer(new ZkSerializer(){@Override public byte(( serialize(Object data){if (data instanceof byte(() {return (byte(()data}throw new HelixException(\"ZkBucketDataAccesor only supports a byte array as an argument!\")}@Override public Object deserialize(byte(( data){return data}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "_zkBaseDataAccessor = new ZkBaseDataAccessor<>(zkClient)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "LOG.warn(\"ZkBucketDataAccessor: either multi-zk enabled or zkAddr is null - \" + \"starting ZkBucketDataAccessor in multi-zk mode!\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "_zkClient = DedicatedZkClientFactory.getInstance().buildZkClient(new HelixZkClient.ZkConnectionConfig(zkAddr))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "throw new HelixException(\"Not able to connect on realm-aware mode\",e)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
15->10 [style = bold, label=""];
8->15 [style = bold, label=""];
21->27 [style = bold, label=""];
5->2 [style = solid, label="clientConfig"];
0->6 [style = bold, label=""];
20->17 [style = dotted, label="true"];
8->2 [style = dotted, label="true"];
19->1 [style = solid, label="zkAddr"];
16->8 [style = solid, label="zkAddr"];
27->28 [style = bold, label=""];
26->25 [style = bold, label=""];
9->18 [style = dashed, label="0"];
23->26 [style = bold, label=""];
26->21 [style = solid, label="zkClient"];
8->15 [style = dotted, label="true"];
3->4 [style = dotted, label="true"];
10->2 [style = solid, label="connectionConfig"];
8->10 [style = dotted, label="true"];
22->23 [style = bold, label=""];
4->7 [style = solid, label="bucketSize"];
9->14 [style = dotted, label="true"];
18->14 [style = dotted, label="true"];
1->11 [style = bold, label=""];
8->1 [style = bold, label=""];
16->1 [style = solid, label="zkAddr"];
19->8 [style = solid, label="zkAddr"];
5->2 [style = bold, label=""];
20->8 [style = bold, label=""];
11->0 [style = bold, label=""];
10->5 [style = bold, label=""];
8->5 [style = dotted, label="true"];
0->21 [style = dashed, label="0"];
12->13 [style = solid, label="versionTTLms"];
17->7 [style = solid, label="bucketSize"];
3->12 [style = dotted, label="true"];
3->8 [style = bold, label=""];
9->14 [style = bold, label=""];
28->24 [style = bold, label=""];
1->0 [style = solid, label="_zkClient"];
16->13 [style = solid, label="versionTTLms"];
20->19 [style = dotted, label="true"];
6->7 [style = bold, label=""];
8->1 [style = dotted, label="false"];
14->11 [style = bold, label=""];
18->14 [style = bold, label=""];
2->0 [style = solid, label="_zkClient"];
2->11 [style = bold, label=""];
3->16 [style = dotted, label="true"];
25->21 [style = bold, label=""];
20->16 [style = dotted, label="true"];
}
