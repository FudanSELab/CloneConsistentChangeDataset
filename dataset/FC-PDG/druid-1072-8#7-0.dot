digraph {
5 [style = filled, label = "List<JoinableClause> joinableClausesIndexedTableStringKey = ImmutableList.of(new JoinableClause(prefix,new IndexedTableJoinable(JoinTestHelper.createCountriesIndexedTable()),JoinType.LEFT,JoinConditionAnalysis.forExpression(StringUtils.format(\"countryIsoCode == \"%scountryIsoCode\"\",prefix),prefix,ExprMacroTable.nil())))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "setup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "lookupVirtualColumns = VirtualColumns.create(ImmutableList.of(new ExpressionVirtualColumn(LOOKUP_COUNTRY_CODE_TO_NAME,\"lookup(countryIsoCode, '\" + LOOKUP_COUNTRY_CODE_TO_NAME + \"')\",ValueType.STRING,exprMacroTable),new ExpressionVirtualColumn(LOOKUP_COUNTRY_NUMBER_TO_NAME,\"lookup(countryNumber, '\" + LOOKUP_COUNTRY_NUMBER_TO_NAME + \"')\",ValueType.STRING,exprMacroTable)))@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final String lookupName@@@6@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "JoinFilterPreAnalysis preAnalysisLookupLongKey = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(JoinableClauses.fromList(joinableClausesLookupLongKey),VirtualColumns.EMPTY,null,false,false,false,0)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "hashJoinIndexedTableStringKeySegment = new HashJoinSegment(ReferenceCountingSegment.wrapRootGenerationSegment(baseSegment),joinableClausesIndexedTableStringKey,preAnalysisIndexedTableStringKey)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "JoinFilterPreAnalysis preAnalysisIndexedTableLongKey = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(JoinableClauses.fromList(joinableClausesIndexedTableLonggKey),VirtualColumns.EMPTY,null,false,false,false,0)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "get['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "return Optional.empty()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "JoinFilterPreAnalysisGroup preAnalysisGroupLookupLongKey = new JoinFilterPreAnalysisGroup(new JoinFilterRewriteConfig(false,false,false,0),true)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "JoinFilterPreAnalysis preAnalysisLookupStringKey = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(JoinableClauses.fromList(joinableClausesLookupStringKey),VirtualColumns.EMPTY,null,false,false,false,0)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<JoinableClause> joinableClausesLookupStringKey = ImmutableList.of(new JoinableClause(prefix,LookupJoinable.wrap(JoinTestHelper.createCountryIsoCodeToNameLookup()),JoinType.LEFT,JoinConditionAnalysis.forExpression(StringUtils.format(\"countryIsoCode == \"%sk\"\",prefix),prefix,ExprMacroTable.nil())))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "setup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "JoinFilterPreAnalysis preAnalysisIndexedTableStringKey = JoinFilterAnalyzer.computeJoinFilterPreAnalysis(JoinableClauses.fromList(joinableClausesIndexedTableStringKey),VirtualColumns.EMPTY,null,false,false,false,0)@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Map<String,String> countryNumberToNameMap = JoinTestHelper.createCountryNumberToNameLookup().getMap()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "hashJoinLookupLongKeySegment = new HashJoinSegment(ReferenceCountingSegment.wrapRootGenerationSegment(baseSegment),joinableClausesLookupLongKey,preAnalysisLookupLongKey)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "hashJoinIndexedTableLongKeySegment = new HashJoinSegment(ReferenceCountingSegment.wrapRootGenerationSegment(baseSegment),joinableClausesIndexedTableLonggKey,preAnalysisGroupIndexedLongKey)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "final ExprMacroTable exprMacroTable = new ExprMacroTable(ImmutableList.of(new LookupExprMacro(new LookupExtractorFactoryContainerProvider(){@Override public Set<String> getAllLookupNames(){return ImmutableSet.of(LOOKUP_COUNTRY_CODE_TO_NAME,LOOKUP_COUNTRY_NUMBER_TO_NAME)}@Override public Optional<LookupExtractorFactoryContainer> get(String lookupName){if (LOOKUP_COUNTRY_CODE_TO_NAME.equals(lookupName)) {return Optional.of(new LookupExtractorFactoryContainer(\"0\",new MapLookupExtractorFactory(countryCodeToNameMap,false)))}if (LOOKUP_COUNTRY_NUMBER_TO_NAME.equals(lookupName)) {return Optional.of(new LookupExtractorFactoryContainer(\"0\",new MapLookupExtractorFactory(countryNumberToNameMap,false)))}{return Optional.empty()}}})))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ColumnConfig columnConfig = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tmpDir = FileUtils.createTempDir()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<JoinableClause> joinableClausesIndexedTableLonggKey = ImmutableList.of(new JoinableClause(prefix,new IndexedTableJoinable(JoinTestHelper.createCountriesIndexedTable()),JoinType.LEFT,JoinConditionAnalysis.forExpression(StringUtils.format(\"countryNumber == \"%scountryNumber\"\",prefix),prefix,ExprMacroTable.nil())))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "hashJoinLookupStringKeySegment = new HashJoinSegment(ReferenceCountingSegment.wrapRootGenerationSegment(baseSegment),joinableClausesLookupStringKey,preAnalysisLookupStringKey)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "JoinFilterPreAnalysisGroup preAnalysisGroupIndexedStringKey = new JoinFilterPreAnalysisGroup(new JoinFilterRewriteConfig(false,false,false,0),true)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "hashJoinLookupLongKeySegment = new HashJoinSegment(ReferenceCountingSegment.wrapRootGenerationSegment(baseSegment),joinableClausesLookupLongKey,preAnalysisGroupLookupLongKey)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "hashJoinIndexedTableLongKeySegment = new HashJoinSegment(ReferenceCountingSegment.wrapRootGenerationSegment(baseSegment),joinableClausesIndexedTableLonggKey,preAnalysisIndexedTableLongKey)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "hashJoinLookupStringKeySegment = new HashJoinSegment(ReferenceCountingSegment.wrapRootGenerationSegment(baseSegment),joinableClausesLookupStringKey,preAnalysisGroupLookupStringKey)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final String prefix = \"c.\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "JoinFilterPreAnalysisGroup preAnalysisGroupIndexedLongKey = new JoinFilterPreAnalysisGroup(new JoinFilterRewriteConfig(false,false,false,0),true)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "index = JoinTestHelper.createFactIndexBuilder(tmpDir,rows).buildMMappedIndex(columnConfig)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "JoinFilterPreAnalysisGroup preAnalysisGroupLookupStringKey = new JoinFilterPreAnalysisGroup(new JoinFilterRewriteConfig(false,false,false,0),true)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "LookupSegmentTest.LOOKUP_NAME.equals(lookupName)@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "hashJoinIndexedTableStringKeySegment = new HashJoinSegment(ReferenceCountingSegment.wrapRootGenerationSegment(baseSegment),joinableClausesIndexedTableStringKey,preAnalysisGroupIndexedStringKey)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final Map<String,String> countryCodeToNameMap = JoinTestHelper.createCountryIsoCodeToNameLookup().getMap()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<JoinableClause> joinableClausesLookupLongKey = ImmutableList.of(new JoinableClause(prefix,LookupJoinable.wrap(JoinTestHelper.createCountryIsoCodeToNameLookup()),JoinType.LEFT,JoinConditionAnalysis.forExpression(StringUtils.format(\"countryIsoCode == \"%sk\"\",prefix),prefix,ExprMacroTable.nil())))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "return Optional.of(new LookupExtractorFactoryContainer(\"v0\",LookupSegmentTest.LOOKUP_EXTRACTOR_FACTORY))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "baseSegment = new QueryableIndexSegment(index,SegmentId.dummy(\"join\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->35 [style = bold, label=""];
6->12 [style = solid, label="countryCodeToNameMap"];
4->12 [style = solid, label="countryNumberToNameMap"];
30->27 [style = solid, label="preAnalysisGroupLookupStringKey"];
17->26 [style = bold, label=""];
22->28 [style = solid, label="preAnalysisGroupIndexedStringKey"];
0->13 [style = bold, label=""];
17->1 [style = bold, label=""];
16->23 [style = solid, label="joinableClausesIndexedTableLonggKey"];
21->6 [style = bold, label=""];
32->35 [style = dotted, label="true"];
16->10 [style = bold, label=""];
14->18 [style = solid, label="preAnalysisLookupStringKey"];
2->0 [style = solid, label="index"];
17->3 [style = solid, label="joinableClausesLookupLongKey"];
16->29 [style = bold, label=""];
18->27 [style = dashed, label="0"];
30->27 [style = bold, label=""];
3->24 [style = dashed, label="0"];
9->28 [style = dashed, label="0"];
1->3 [style = bold, label=""];
18->17 [style = bold, label=""];
12->19 [style = solid, label="exprMacroTable"];
5->15 [style = bold, label=""];
26->24 [style = solid, label="preAnalysisGroupLookupLongKey"];
22->28 [style = bold, label=""];
10->21 [style = bold, label=""];
7->20 [style = bold, label=""];
13->30 [style = bold, label=""];
29->23 [style = bold, label=""];
17->1 [style = solid, label="joinableClausesLookupLongKey"];
0->24 [style = solid, label="baseSegment"];
26->24 [style = bold, label=""];
17->24 [style = solid, label="joinableClausesLookupLongKey"];
28->16 [style = bold, label=""];
11->5 [style = solid, label="prefix"];
9->16 [style = bold, label=""];
32->33 [style = bold, label=""];
11->17 [style = solid, label="prefix"];
24->5 [style = bold, label=""];
0->23 [style = solid, label="baseSegment"];
11->13 [style = solid, label="prefix"];
10->21 [style = solid, label="preAnalysisIndexedTableLongKey"];
1->3 [style = solid, label="preAnalysisLookupLongKey"];
0->3 [style = solid, label="baseSegment"];
11->16 [style = solid, label="prefix"];
6->4 [style = bold, label=""];
15->9 [style = solid, label="preAnalysisIndexedTableStringKey"];
25->20 [style = bold, label=""];
20->8 [style = bold, label=""];
11->0 [style = bold, label=""];
3->5 [style = bold, label=""];
5->15 [style = solid, label="joinableClausesIndexedTableStringKey"];
0->18 [style = solid, label="baseSegment"];
5->9 [style = solid, label="joinableClausesIndexedTableStringKey"];
31->32 [style = solid, label="lookupName"];
34->31 [style = dotted, label="true"];
8->2 [style = bold, label=""];
16->21 [style = solid, label="joinableClausesIndexedTableLonggKey"];
0->9 [style = solid, label="baseSegment"];
15->9 [style = bold, label=""];
13->18 [style = solid, label="joinableClausesLookupStringKey"];
23->6 [style = bold, label=""];
27->17 [style = bold, label=""];
4->12 [style = bold, label=""];
29->23 [style = solid, label="preAnalysisGroupIndexedLongKey"];
14->18 [style = bold, label=""];
34->32 [style = bold, label=""];
8->2 [style = solid, label="columnConfig"];
5->28 [style = solid, label="joinableClausesIndexedTableStringKey"];
13->14 [style = solid, label="joinableClausesLookupStringKey"];
0->21 [style = solid, label="baseSegment"];
0->28 [style = solid, label="baseSegment"];
12->19 [style = bold, label=""];
16->10 [style = solid, label="joinableClausesIndexedTableLonggKey"];
21->23 [style = dashed, label="0"];
0->27 [style = solid, label="baseSegment"];
5->22 [style = bold, label=""];
13->14 [style = bold, label=""];
2->11 [style = bold, label=""];
32->31 [style = bold, label=""];
32->33 [style = dotted, label="false"];
13->27 [style = solid, label="joinableClausesLookupStringKey"];
}
