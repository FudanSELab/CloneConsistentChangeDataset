digraph {
1 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(c1.hasListener(l1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(c1.hasListener(l1))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DialCap c2 = (DialCap)c1.clone()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "MyDialLayerChangeListener l1 = new MyDialLayerChangeListener()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "c1.addChangeListener(l1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(c1,c2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFalse(c2.hasListener(l1))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFalse(c2.hasListener(l1))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(c1 != c2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "DialCap c1 = new DialCap()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(c1.equals(c2))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DialCap c2 = (DialCap)TestUtils.serialised(c1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "DialCap c2 = CloneUtils.clone(c1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12->14 [style = solid, label="c2"];
5->3 [style = bold, label=""];
14->16 [style = bold, label=""];
16->13 [style = bold, label=""];
5->3 [style = solid, label="l1"];
5->7 [style = solid, label="l1"];
16->13 [style = solid, label="l1"];
5->6 [style = solid, label="l1"];
0->9 [style = solid, label="c2"];
3->6 [style = bold, label=""];
16->3 [style = solid, label="l1"];
0->11 [style = dashed, label="0"];
0->12 [style = dashed, label="0"];
8->14 [style = dashed, label="0"];
2->4 [style = bold, label=""];
1->9 [style = bold, label=""];
4->0 [style = bold, label=""];
8->1 [style = bold, label=""];
4->11 [style = solid, label="c1"];
4->12 [style = solid, label="c1"];
16->5 [style = solid, label="l1"];
4->8 [style = solid, label="c1"];
0->8 [style = solid, label="c2"];
11->9 [style = solid, label="c2"];
11->8 [style = solid, label="c2"];
12->14 [style = bold, label=""];
15->4 [style = bold, label=""];
0->8 [style = bold, label=""];
13->5 [style = bold, label=""];
9->5 [style = bold, label=""];
4->12 [style = bold, label=""];
10->4 [style = bold, label=""];
11->8 [style = bold, label=""];
4->14 [style = solid, label="c1"];
6->7 [style = bold, label=""];
4->11 [style = bold, label=""];
}
