digraph {
31 [style = filled, label = "junctionAndSymlink_outsideWorkspace_areNotAllowed_windowsJunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "wc.getOptions().setThrowExceptionOnFailingStatusCode(false)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "p.getBuildersList().add(new BatchFile(script))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/intermediateFolder/to_secrets2j/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_FORBIDDEN))}@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "{Page zipPage = wc.goTo(p.getUrl() + \"ws/*zip*/ws.zip\",null)assertThat(zipPage.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK))List<String> entryNames = getListOfEntriesInDownloadedZip((UnexpectedPage)zipPage)assertThat(entryNames,containsInAnyOrder(p.getName() + \"/intermediateFolder/public2.key\",p.getName() + \"/public1.key\"))}@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String script = loadContentFromResource(\"outsideWorkspaceStructure.sh\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "p.getBuildersList().add(new BatchFile(script))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assume.assumeTrue(Functions.isWindows())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(Result.SUCCESS,p.scheduleBuild2(0).get().getResult())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "p.getBuildersList().add(new Shell(script))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/to_secrets_goal1/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_FORBIDDEN))}@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "FreeStyleProject p = j.createFreeStyleProject()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/intermediateFolder/to_secrets2s/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_FORBIDDEN))}@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "{Page zipPage = wc.goTo(p.getUrl() + \"ws/intermediateFolder/*zip*/intermediateFolder.zip\",null)assertThat(zipPage.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK))List<String> entryNames = getListOfEntriesInDownloadedZip((UnexpectedPage)zipPage)assertThat(entryNames,contains(\"intermediateFolder/public2.key\"))}@@@70@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "FileUtils.write(secretTarget,secretContent,StandardCharsets.UTF_8)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String script = loadContentFromResource(\"outsideWorkspaceStructure.bat\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "File secretsFolder = new File(j.jenkins.getRootDir(),\"secrets\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/intermediateFolder/to_secrets_goal2/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_FORBIDDEN))}@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "FreeStyleProject p = j.createFreeStyleProject()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "File secretTarget = new File(secretsFolder,\"goal.txt\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String secretContent = \"secret\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String script = loadContentFromResource(\"outsideWorkspaceStructureWithJunctions.bat\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/intermediateFolder/to_secrets2j/master.key\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_FORBIDDEN))}@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/**/*.key\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK))String workspaceContent = page.getWebResponse().getContentAsString()assertThat(workspaceContent,allOf(not(containsString(\"master.key\")),containsString(\"public1.key\"),containsString(\"public2.key\"),containsString(\"intermediateFolder\"),not(containsString(\"otherFolder\")),not(containsString(\"to_secrets3j\")),not(containsString(\"to_secrets3s\")),not(containsString(\"to_secrets2j\")),not(containsString(\"to_secrets2s\")),not(containsString(\"to_secrets1j\")),not(containsString(\"to_secrets1s\"))))}@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "JenkinsRule.WebClient wc = j.createWebClient()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/to_secrets1j/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_FORBIDDEN))}@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK))String workspaceContent = page.getWebResponse().getContentAsString()assertThat(workspaceContent,allOf(containsString(\"public1.key\"),containsString(\"intermediateFolder\"),containsString(\"to_secrets1j\"),containsString(\"to_secrets1s\"),containsString(\"to_secrets_goal1\"),not(containsString(\"to_secrets2\")),not(containsString(\"to_secrets_goal2\"))))}@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "symlink_outsideWorkspace_areNotAllowed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/to_secrets1s/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_FORBIDDEN))}@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "symlink_outsideWorkspace_areNotAllowed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/intermediateFolder/to_secrets2s/master.key\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_FORBIDDEN))}@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/intermediateFolder/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK))String workspaceContent = page.getWebResponse().getContentAsString()assertThat(workspaceContent,allOf(not(containsString(\"to_secrets1\")),not(containsString(\"to_secrets_goal1\")),containsString(\"to_secrets2s\"),containsString(\"to_secrets2j\"),containsString(\"to_secrets_goal2\")))}@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Result.SUCCESS,p.scheduleBuild2(0).get().getResult())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->21 [style = bold, label=""];
22->29 [style = bold, label=""];
23->22 [style = bold, label=""];
8->14 [style = bold, label=""];
30->26 [style = bold, label=""];
16->1 [style = solid, label="script"];
2->1 [style = dotted, label="false"];
22->8 [style = bold, label=""];
10->2 [style = bold, label=""];
11->20 [style = bold, label=""];
29->8 [style = bold, label=""];
13->19 [style = bold, label=""];
6->10 [style = solid, label="secretContent"];
2->13 [style = bold, label=""];
21->17 [style = bold, label=""];
27->32 [style = bold, label=""];
32->11 [style = bold, label=""];
14->0 [style = bold, label=""];
18->8 [style = solid, label="workspaceContent"];
7->21 [style = bold, label=""];
6->10 [style = bold, label=""];
9->5 [style = solid, label="secretsFolder"];
8->11 [style = solid, label="workspaceContent"];
15->27 [style = bold, label=""];
2->16 [style = dotted, label="false"];
0->15 [style = bold, label=""];
16->1 [style = bold, label=""];
15->11 [style = bold, label=""];
2->30 [style = dashed, label="0"];
30->26 [style = solid, label="script"];
2->13 [style = dotted, label="true"];
3->9 [style = bold, label=""];
24->3 [style = bold, label=""];
10->2 [style = solid, label="secretContent"];
5->6 [style = solid, label="secretsFolder"];
26->28 [style = bold, label=""];
25->9 [style = bold, label=""];
2->30 [style = bold, label=""];
5->10 [style = solid, label="secretTarget"];
2->16 [style = bold, label=""];
6->2 [style = solid, label="secretTarget"];
19->7 [style = bold, label=""];
1->7 [style = bold, label=""];
13->19 [style = solid, label="script"];
20->12 [style = solid, label="entryNames"];
9->5 [style = bold, label=""];
4->3 [style = bold, label=""];
2->19 [style = dotted, label="true"];
20->12 [style = bold, label=""];
31->25 [style = bold, label=""];
5->6 [style = bold, label=""];
18->23 [style = bold, label=""];
17->18 [style = bold, label=""];
}
