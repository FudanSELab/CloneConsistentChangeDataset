digraph {
27 [style = filled, label = "assertTrue(selectStatementContext.isSameGroupByAndOrderByItems())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "createSelectStatementContext['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "projectionsSegment.getProjections().add(new AggregationProjectionSegment(0,0,AggregationType.AVG,\"(num)\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "createSelectStatementContext['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "aggregationProjection2.setIndex(5)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "AggregationProjection derivedAggregationProjection2 = new AggregationProjection(AggregationType.SUM,\"(num)\",\"AVG_DERIVED_SUM_0\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "return new SelectStatementContext(Collections.singletonMap(DefaultSchema.LOGIC_NAME,metaData),Collections.emptyList(),selectStatement,DefaultSchema.LOGIC_NAME)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "selectStatement.setOrderBy(new OrderBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,3,OrderDirection.DESC,OrderDirection.ASC))))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "aggregationProjection2.setIndex(4)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "aggregationProjection2.getDerivedAggregationProjections().add(derivedAggregationProjection2)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "AggregationProjection derivedAggregationProjection1 = new AggregationProjection(AggregationType.COUNT,\"(num)\",\"AVG_DERIVED_COUNT_0\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "selectStatement.setOrderBy(new OrderBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.DESC))))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ProjectionsSegment projectionsSegment = new ProjectionsSegment(0,0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return new SelectStatementContext(selectStatement,new GroupByContext(Collections.singletonList(createOrderByItem(new IndexOrderByItemSegment(0,0,3,OrderDirection.ASC,OrderDirection.ASC)))),new OrderByContext(Collections.singletonList(createOrderByItem(new IndexOrderByItemSegment(0,0,3,OrderDirection.DESC,OrderDirection.ASC))),false),projectionsContext,new PaginationContext(null,null,Collections.emptyList()))@@@17@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "selectStatement.setProjections(new ProjectionsSegment(0,0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "when(metaData.getSchema()).thenReturn(mock())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "selectStatement.setGroupBy(new GroupBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,3,OrderDirection.ASC,OrderDirection.ASC))))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "selectStatement.setGroupBy(new GroupBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.DESC))))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "projectionsSegment.getProjections().add(new AggregationProjectionSegment(0,0,AggregationType.COUNT,\"(*)\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "selectStatement.setProjections(projectionsSegment)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "aggregationProjection2.getDerivedAggregationProjections().add(derivedAggregationProjection1)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "SelectStatement selectStatement = new MySQLSelectStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "aggregationProjection1.setIndex(1)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "ShardingSphereMetaData metaData = mock()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "selectStatement.setProjections(projectionsSegment)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "aggregationProjection2.setIndex(2)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "AggregationProjection aggregationProjection2 = new AggregationProjection(AggregationType.AVG,\"(num)\",null)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "ProjectionsContext projectionsContext = new ProjectionsContext(0,0,false,Arrays.asList(aggregationProjection1,aggregationProjection2))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "AggregationProjection aggregationProjection1 = new AggregationProjection(AggregationType.COUNT,\"(*)\",null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertIsSameGroupByAndOrderByItems['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->4 [style = bold, label=""];
0->9 [style = bold, label=""];
23->20 [style = bold, label=""];
23->19 [style = solid, label="metaData"];
24->19 [style = bold, label=""];
7->10 [style = bold, label=""];
26->29 [style = bold, label=""];
12->13 [style = solid, label="aggregationProjection1"];
13->4 [style = solid, label="projectionsContext"];
3->14 [style = bold, label=""];
12->15 [style = bold, label=""];
31->28 [style = solid, label="selectStatement"];
30->25 [style = bold, label=""];
16->17 [style = bold, label=""];
10->9 [style = solid, label="derivedAggregationProjection1"];
17->23 [style = bold, label=""];
14->1 [style = bold, label=""];
11->13 [style = solid, label="aggregationProjection2"];
29->28 [style = bold, label=""];
5->2 [style = bold, label=""];
18->22 [style = bold, label=""];
15->11 [style = bold, label=""];
13->3 [style = bold, label=""];
1->16 [style = bold, label=""];
3->4 [style = solid, label="selectStatement"];
14->24 [style = solid, label="projectionsSegment"];
10->0 [style = bold, label=""];
25->26 [style = bold, label=""];
9->5 [style = bold, label=""];
14->1 [style = solid, label="projectionsSegment"];
14->18 [style = bold, label=""];
22->1 [style = bold, label=""];
28->27 [style = bold, label=""];
3->19 [style = solid, label="selectStatement"];
20->24 [style = bold, label=""];
5->8 [style = solid, label="derivedAggregationProjection2"];
11->7 [style = bold, label=""];
30->31 [style = dotted, label="true"];
8->13 [style = bold, label=""];
2->8 [style = bold, label=""];
21->3 [style = bold, label=""];
6->12 [style = bold, label=""];
}
