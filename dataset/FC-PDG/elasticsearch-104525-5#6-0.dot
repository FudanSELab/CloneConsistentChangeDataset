digraph {
8 [style = filled, label = "testNestedRewrites['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "ScriptSortBuilder sortBuilder = new ScriptSortBuilder(mockScript(\"something\"),ScriptSortType.STRING)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "GeoDistanceSortBuilder sortBuilder = new GeoDistanceSortBuilder(\"fieldName\",0.0,0.0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertNotSame(rangeQuery,rewritten.getNestedFilter())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertNotSame(rangeQuery,rewritten.getNestedSort().getFilter())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "sortBuilder.setNestedSort(new NestedSortBuilder(\"path\").setFilter(rangeQuery))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertNotSame(rangeQuery,rewritten.getNestedSort().getFilter())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "GeoDistanceSortBuilder rewritten = (GeoDistanceSortBuilder)sortBuilder.rewrite(createMockShardContext())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "RangeQueryBuilder rangeQuery = new RangeQueryBuilder(\"fieldName\"){@Override public QueryBuilder doRewrite(QueryRewriteContext queryShardContext){return new MatchNoneQueryBuilder()}}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testNestedSortRewrites['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "sortBuilder.setNestedPath(\"path\").setNestedFilter(rangeQuery)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "ScriptSortBuilder rewritten = sortBuilder.rewrite(createMockShardContext())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "GeoDistanceSortBuilder rewritten = sortBuilder.rewrite(createMockShardContext())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "sortBuilder.setNestedSort(new NestedSortBuilder(\"path\").setFilter(rangeQuery))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testNestedRewrites['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->14 [style = dashed, label="0"];
1->0 [style = solid, label="rangeQuery"];
1->9 [style = solid, label="rangeQuery"];
1->6 [style = solid, label="rangeQuery"];
1->12 [style = solid, label="rangeQuery"];
0->12 [style = dashed, label="0"];
2->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
7->9 [style = bold, label=""];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
13->12 [style = bold, label=""];
1->5 [style = solid, label="rangeQuery"];
1->14 [style = solid, label="rangeQuery"];
5->6 [style = dashed, label="0"];
11->10 [style = bold, label=""];
2->13 [style = dashed, label="0"];
1->14 [style = bold, label=""];
4->1 [style = bold, label=""];
8->4 [style = bold, label=""];
14->13 [style = bold, label=""];
0->9 [style = dashed, label="0"];
6->7 [style = bold, label=""];
4->10 [style = dashed, label="0"];
10->1 [style = bold, label=""];
}
