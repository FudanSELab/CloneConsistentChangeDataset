digraph {
3 [style = filled, label = "sourceBuilder.query(boolQueryBuilder)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "searchServices['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "long endTimestamp@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String keyword@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "getAllServices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "StringUtil.isNotEmpty(group)@@@6@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "!Strings.isNullOrEmpty(keyword)@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "long startTimestamp@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String matchCName = MatchCNameBuilder.INSTANCE.build(ServiceTraffic.NAME)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String group@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "return buildServices(response)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.termQuery(ServiceTraffic.NODE_TYPE,NodeType.Normal.value()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "long endTimestamp@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.matchQuery(matchCName,keyword))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "getAllServices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.termQuery(ServiceTraffic.GROUP,group))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "long startTimestamp@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "sourceBuilder.size(queryMaxSize)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "SearchResponse response = getClient().search(ServiceTraffic.INDEX_NAME,sourceBuilder)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->16 [style = solid, label="keyword"];
17->20 [style = dotted, label="true"];
14->3 [style = bold, label=""];
6->3 [style = bold, label=""];
16->3 [style = bold, label=""];
17->5 [style = bold, label=""];
10->12 [style = dotted, label="true"];
14->19 [style = dotted, label="true"];
17->18 [style = dotted, label="true"];
5->9 [style = solid, label="sourceBuilder"];
0->6 [style = bold, label=""];
8->20 [style = dashed, label="0"];
9->1 [style = solid, label="response"];
14->19 [style = bold, label=""];
19->16 [style = solid, label="matchCName"];
8->12 [style = dashed, label="0"];
13->11 [style = bold, label=""];
19->16 [style = bold, label=""];
6->14 [style = bold, label=""];
7->9 [style = bold, label=""];
14->16 [style = dotted, label="true"];
12->11 [style = solid, label="group"];
17->15 [style = dotted, label="true"];
12->13 [style = solid, label="group"];
10->5 [style = bold, label=""];
13->3 [style = bold, label=""];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
11->3 [style = bold, label=""];
6->13 [style = bold, label=""];
2->4 [style = dotted, label="true"];
13->11 [style = dotted, label="true"];
9->1 [style = bold, label=""];
0->3 [style = solid, label="boolQueryBuilder"];
2->8 [style = dotted, label="true"];
2->5 [style = bold, label=""];
}
