digraph {
0 [style = filled, label = "final List<RexNode> nonEquiList = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<RexInputRef> joinKeys@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "LogicalFilter filter@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Filter filter@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<RexNode> correlatedJoinKeys@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "splitCorrelatedFilterCondition['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "splitCorrelatedFilterCondition['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<RexNode> correlatedJoinKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "splitCorrelatedFilterCondition['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "splitCorrelatedFilterCondition(filter,filter.getCondition(),joinKeys,correlatedJoinKeys,nonEquiList)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "splitCorrelatedFilterCondition(filter,filter.getCondition(),joinKeys,correlatedJoinKeys,nonEquiList,extractCorrelatedFieldAccess)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return RexUtil.composeConjunction(filter.getCluster().getRexBuilder(),nonEquiList,true)@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<RexNode> joinKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "boolean extractCorrelatedFieldAccess@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<RexInputRef> joinKeys@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "LogicalFilter filter@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<RexNode> correlatedJoinKeys@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
2->3 [style = dotted, label="true"];
10->8 [style = dotted, label="true"];
13->16 [style = dotted, label="true"];
7->1 [style = solid, label="filter"];
6->1 [style = solid, label="joinKeys"];
3->1 [style = solid, label="filter"];
16->12 [style = solid, label="extractCorrelatedFieldAccess"];
12->5 [style = bold, label=""];
15->12 [style = solid, label="correlatedJoinKeys"];
0->12 [style = bold, label=""];
6->9 [style = dashed, label="0"];
8->1 [style = solid, label="joinKeys"];
0->12 [style = solid, label="nonEquiList"];
0->5 [style = solid, label="nonEquiList"];
10->9 [style = dotted, label="true"];
4->1 [style = solid, label="correlatedJoinKeys"];
1->12 [style = dashed, label="0"];
2->0 [style = bold, label=""];
6->16 [style = dashed, label="0"];
2->6 [style = dotted, label="true"];
0->1 [style = bold, label=""];
10->0 [style = bold, label=""];
2->4 [style = dotted, label="true"];
13->11 [style = dotted, label="true"];
13->15 [style = dotted, label="true"];
0->1 [style = solid, label="nonEquiList"];
13->14 [style = dotted, label="true"];
11->12 [style = solid, label="filter"];
10->7 [style = dotted, label="true"];
14->12 [style = solid, label="joinKeys"];
13->0 [style = bold, label=""];
9->1 [style = solid, label="correlatedJoinKeys"];
}
