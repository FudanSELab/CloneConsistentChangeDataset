digraph {
15 [style = filled, label = "testCloning2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ko1.addObject(\"V1\",1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "ko1.addObject(\"V3\",3)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ko1 = new KeyedObject(\"Test\",obj1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(ko1 != ko2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "KeyedObjects ko2 = (KeyedObjects)ko1.clone()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ko2 = (KeyedObject)ko1.clone()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ko1.addObject(\"V2\",null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(ko1 != ko2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "obj1 = new DefaultPieDataset<String>()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testCloning2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "KeyedObjects ko1 = new KeyedObjects()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "KeyedObject ko1 = new KeyedObject(\"Test\",obj1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(ko1 != ko2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "KeyedObject ko2 = (KeyedObject)ko1.clone()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(ko2.getObject() != obj1)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Object obj1 = new ArrayList()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->6 [style = solid, label="ko2"];
18->2 [style = solid, label="ko2"];
15->1 [style = bold, label=""];
2->4 [style = bold, label=""];
5->14 [style = solid, label="ko1"];
16->4 [style = bold, label=""];
8->0 [style = bold, label=""];
3->2 [style = bold, label=""];
1->22 [style = dashed, label="0"];
22->6 [style = solid, label="ko1"];
4->11 [style = bold, label=""];
13->6 [style = bold, label=""];
14->13 [style = bold, label=""];
22->20 [style = bold, label=""];
2->12 [style = solid, label="obj1"];
1->5 [style = solid, label="obj1"];
1->3 [style = solid, label="obj1"];
11->10 [style = solid, label="ko2"];
20->19 [style = bold, label=""];
7->14 [style = bold, label=""];
10->12 [style = bold, label=""];
16->4 [style = solid, label="obj1"];
0->10 [style = bold, label=""];
19->21 [style = bold, label=""];
2->16 [style = dashed, label="0"];
11->8 [style = bold, label=""];
11->8 [style = solid, label="ko2"];
21->18 [style = bold, label=""];
7->6 [style = solid, label="ko2"];
6->3 [style = bold, label=""];
2->4 [style = solid, label="obj1"];
16->12 [style = solid, label="obj1"];
4->8 [style = solid, label="ko1"];
17->22 [style = bold, label=""];
3->16 [style = bold, label=""];
9->1 [style = bold, label=""];
5->7 [style = bold, label=""];
18->6 [style = bold, label=""];
7->14 [style = solid, label="ko2"];
1->5 [style = bold, label=""];
}
