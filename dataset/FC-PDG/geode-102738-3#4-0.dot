digraph {
9 [style = filled, label = "delegatesCreateDoubleCounterToStatisticsManager['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "when(statisticsManager.createIntCounter(STATISTIC_NAME,STATISTIC_DESCRIPTION,STATISTIC_UNITS)).thenReturn(descriptorReturnedByManager)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "StatisticDescriptor result = internalDistributedSystem.createIntCounter(STATISTIC_NAME,STATISTIC_DESCRIPTION,STATISTIC_UNITS)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(statisticsManager.createDoubleCounter(STATISTIC_NAME,STATISTIC_DESCRIPTION,STATISTIC_UNITS)).thenReturn(descriptorReturnedByManager)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "delegatesCreateIntCounterToStatisticsManager['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "when(statisticsManager.createLongCounter(STATISTIC_NAME,STATISTIC_DESCRIPTION,STATISTIC_UNITS)).thenReturn(descriptorReturnedByManager)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(result).isSameAs(descriptorReturnedByManager)@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "StatisticDescriptor result = internalDistributedSystem.createDoubleCounter(STATISTIC_NAME,STATISTIC_DESCRIPTION,STATISTIC_UNITS)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "StatisticDescriptor descriptorReturnedByManager = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "delegatesCreateIntCounterToStatisticsManager['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
9->3 [style = bold, label=""];
0->8 [style = dashed, label="0"];
3->6 [style = bold, label=""];
3->4 [style = solid, label="descriptorReturnedByManager"];
6->0 [style = bold, label=""];
1->0 [style = bold, label=""];
8->4 [style = bold, label=""];
3->7 [style = solid, label="descriptorReturnedByManager"];
1->7 [style = dashed, label="0"];
3->1 [style = bold, label=""];
3->7 [style = bold, label=""];
7->8 [style = bold, label=""];
0->4 [style = bold, label=""];
1->6 [style = dashed, label="0"];
3->6 [style = solid, label="descriptorReturnedByManager"];
3->1 [style = solid, label="descriptorReturnedByManager"];
2->3 [style = bold, label=""];
}
