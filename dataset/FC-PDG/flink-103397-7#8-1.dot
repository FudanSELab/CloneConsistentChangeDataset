digraph {
3 [style = filled, label = "harness.processElement(1,10)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testHarnessForProcessFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(harness.extractOutputValues(),Collections.singletonList(1))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "ProcessFunction<Integer,Integer> function = new ProcessFunction<Integer,Integer>(){@Override public void processElement(Integer value,Context ctx,Collector<Integer> out){out.collect(value)}}@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testHarnessForProcessFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertThat(harness.extractOutputStreamRecords(),contains(streamRecord(1)))@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "KeyedProcessFunction<Integer,Integer,Integer> function = new KeyedProcessFunction<Integer,Integer,Integer>(){@Override public void processElement(Integer value,Context ctx,Collector<Integer> out){out.collect(value)}}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "OneInputStreamOperatorTestHarness<Integer,Integer> harness = ProcessFunctionTestHarnesses.forProcessFunction(function)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "OneInputStreamOperatorTestHarness<Integer,Integer> harness = ProcessFunctionTestHarnesses.forKeyedProcessFunction(function,null,BasicTypeInfo.INT_TYPE_INFO)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testHarnessForKeyedProcessFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7->9 [style = bold, label=""];
9->8 [style = solid, label="function"];
3->6 [style = bold, label=""];
5->1 [style = bold, label=""];
1->2 [style = bold, label=""];
1->2 [style = solid, label="function"];
4->1 [style = bold, label=""];
1->9 [style = dashed, label="0"];
9->8 [style = bold, label=""];
2->8 [style = dashed, label="0"];
3->0 [style = bold, label=""];
2->3 [style = bold, label=""];
0->6 [style = dashed, label="0"];
8->3 [style = bold, label=""];
}
