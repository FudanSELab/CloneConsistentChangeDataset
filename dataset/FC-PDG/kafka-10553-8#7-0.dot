digraph {
2 [style = filled, label = "expectedStoreNames.add(\"store\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Topology topology = setupSourceSinkTopology()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNotNull(store)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "topology.addStateStore(new KeyValueStoreBuilder<>(Stores.inMemoryKeyValueStore(\"store\"),Serdes.ByteArray(),Serdes.ByteArray(),new SystemTime()),\"processor\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "topology.addStateStore(new KeyValueStoreBuilder<>(Stores.inMemoryKeyValueStore(\"store\"),Serdes.ByteArray(),Serdes.ByteArray(),new SystemTime()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectedStoreNames.add(\"globalStore\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testDriver = new TopologyTestDriver(topology,config)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(allStores.keySet(),equalTo(expectedStoreNames))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "topology.addGlobalStore(new KeyValueStoreBuilder<>(Stores.inMemoryKeyValueStore(\"globalStore\"),Serdes.ByteArray(),Serdes.ByteArray(),new SystemTime()).withLoggingDisabled(),\"sourceProcessorName\",Serdes.ByteArray().deserializer(),Serdes.ByteArray().deserializer(),\"globalTopicName\",\"globalProcessorName\",(ProcessorSupplier<byte((,byte((,Void,Void>)null)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "shouldReturnAllStoresNames['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "topology.addProcessor(\"processor\",(ProcessorSupplier<Object,Object,Object,Object>)null,\"source\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "topology.addGlobalStore(new KeyValueStoreBuilder<>(Stores.inMemoryKeyValueStore(\"globalStore\"),Serdes.ByteArray(),Serdes.ByteArray(),new SystemTime()).withLoggingDisabled(),\"sourceProcessorName\",Serdes.ByteArray().deserializer(),Serdes.ByteArray().deserializer(),\"globalTopicName\",\"globalProcessorName\",voidProcessorSupplier)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "topology.addGlobalStore(new KeyValueStoreBuilder<>(Stores.inMemoryKeyValueStore(\"globalStore\"),Serdes.ByteArray(),Serdes.ByteArray(),new SystemTime()).withLoggingDisabled(),\"sourceProcessorName\",Serdes.ByteArray().deserializer(),Serdes.ByteArray().deserializer(),\"globalTopicName\",\"globalProcessorName\",(ProcessorSupplier<byte((,byte((,Void,Void>)null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Set<String> expectedStoreNames = new HashSet<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldReturnAllStoresNames['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final Map<String,StateStore> allStores = testDriver.getAllStateStores()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "shouldReturnAllStores['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
7->8 [style = solid, label="topology"];
5->8 [style = bold, label=""];
7->5 [style = solid, label="topology"];
12->15 [style = bold, label=""];
0->11 [style = bold, label=""];
8->6 [style = bold, label=""];
11->12 [style = bold, label=""];
0->11 [style = dashed, label="0"];
9->7 [style = bold, label=""];
8->0 [style = solid, label="expectedStoreNames"];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
7->3 [style = bold, label=""];
6->2 [style = bold, label=""];
7->14 [style = bold, label=""];
3->10 [style = bold, label=""];
2->0 [style = bold, label=""];
6->12 [style = solid, label="expectedStoreNames"];
10->5 [style = bold, label=""];
13->7 [style = bold, label=""];
16->5 [style = bold, label=""];
4->10 [style = dashed, label="0"];
4->5 [style = bold, label=""];
}
