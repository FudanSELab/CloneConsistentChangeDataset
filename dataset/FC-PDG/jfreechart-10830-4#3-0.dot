digraph {
23 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.white,3.0f,4.0f,Color.yellow),new BasicStroke(1.1f))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "CategoryMarker m2 = new CategoryMarker(\"A\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.white,3.0f,4.0f,Color.yellow),new BasicStroke(1.1f))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.white,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.white,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(1.0f),1.0f)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "CategoryMarker m1 = new CategoryMarker(\"A\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(m1.equals(m2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(m1.getClass() == m2.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(m1.equals(m2))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CategoryMarker m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(1.1f))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertFalse(m1.equals(m2))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(m1.equals(m2))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.white,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "m2 = new CategoryMarker(\"B\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertTrue(m1.equals(m2))@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertTrue(m2.equals(m1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.white,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(1.0f),1.0f)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(m1 != m2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(m1.equals(m2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "m1 = new CategoryMarker(\"B\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertFalse(m1.equals(m2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.white,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(1.0f),0.5f)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertFalse(m1.equals(m2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "CategoryMarker m2 = (CategoryMarker)m1.clone()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.white,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(3.3f),1.0f)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertTrue(m1.equals(m2))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "CategoryMarker m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(1.1f))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.white,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(3.3f),1.0f)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "m2 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.white,3.0f,4.0f,Color.yellow),new BasicStroke(2.2f),Color.red,new BasicStroke(1.0f),0.5f)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertTrue(m1.equals(m2))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(m1.equals(m2))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertFalse(m1.equals(m2))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertFalse(m1.equals(m2))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
22->27 [style = solid, label="m2"];
1->4 [style = bold, label=""];
22->25 [style = solid, label="m2"];
8->32 [style = bold, label=""];
25->13 [style = bold, label=""];
23->24 [style = solid, label="m2"];
20->31 [style = solid, label="m1"];
31->0 [style = bold, label=""];
26->29 [style = bold, label=""];
13->16 [style = solid, label="m2"];
27->31 [style = bold, label=""];
10->33 [style = solid, label="m2"];
26->29 [style = solid, label="m2"];
16->23 [style = bold, label=""];
23->8 [style = bold, label=""];
11->19 [style = bold, label=""];
4->6 [style = dashed, label="0"];
24->18 [style = bold, label=""];
20->22 [style = bold, label=""];
15->26 [style = bold, label=""];
4->3 [style = solid, label="m1"];
18->11 [style = solid, label="m2"];
5->0 [style = solid, label="m2"];
6->5 [style = bold, label=""];
13->17 [style = bold, label=""];
17->34 [style = bold, label=""];
2->0 [style = bold, label=""];
28->35 [style = bold, label=""];
12->10 [style = bold, label=""];
21->20 [style = bold, label=""];
5->3 [style = solid, label="m2"];
18->9 [style = solid, label="m2"];
3->2 [style = bold, label=""];
22->27 [style = bold, label=""];
19->12 [style = solid, label="m2"];
0->25 [style = bold, label=""];
6->3 [style = solid, label="m1"];
4->20 [style = dashed, label="0"];
34->16 [style = bold, label=""];
7->6 [style = bold, label=""];
18->9 [style = bold, label=""];
9->14 [style = bold, label=""];
33->30 [style = bold, label=""];
13->17 [style = solid, label="m2"];
10->33 [style = bold, label=""];
19->28 [style = bold, label=""];
19->28 [style = solid, label="m2"];
10->15 [style = solid, label="m2"];
32->24 [style = bold, label=""];
14->11 [style = bold, label=""];
4->5 [style = bold, label=""];
35->12 [style = bold, label=""];
23->8 [style = solid, label="m2"];
30->15 [style = bold, label=""];
5->22 [style = dashed, label="0"];
}
