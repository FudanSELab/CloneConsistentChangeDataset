digraph {
12 [style = filled, label = "readMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "fileContent = Resources.toString(resource,Charset.defaultCharset())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return mapper.readerFor(new TypeReference<ImmutableSortedMap<String,ImmutableSet<String>>>(){}).readValue(fileContent)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "readMap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String actualPath = mapPath@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "actualPath = resource.getFile()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "URL defaultWhiteListMapUrl = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "fileContent = Resources.toString(defaultWhiteListMapUrl,StandardCharsets.UTF_8)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final String mapPath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "fileContent = Files.asCharSource(new File(mapPath),StandardCharsets.UTF_8).read()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "fileContent = Files.asCharSource(new File(mapPath),StandardCharsets.UTF_8).read()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "actualPath = defaultWhiteListMapUrl.getFile()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return mapper.readerFor(new TypeReference<ImmutableSortedMap<String,ImmutableList<String>>>(){}).readValue(fileContent)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "URL resource = this.getClass().getClassLoader().getResource(\"defaultWhiteListMap.json\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String fileContent@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "fileContent = Files.asCharSource(new File(mapPath),Charset.forName(\"UTF-8\")).read()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "readMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String mapPath@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "LOGGER.info(\"using default whiteList map located at (%s(\",actualPath)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Strings.isNullOrEmpty(mapPath)@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2->3 [style = dotted, label="true"];
18->17 [style = solid, label="fileContent"];
4->3 [style = bold, label=""];
10->6 [style = dotted, label="true"];
9->16 [style = dashed, label="0"];
2->0 [style = dotted, label="true"];
11->7 [style = solid, label="fileContent"];
7->17 [style = dashed, label="0"];
2->15 [style = dotted, label="true"];
18->17 [style = bold, label=""];
13->19 [style = dotted, label="true"];
5->7 [style = solid, label="fileContent"];
0->5 [style = solid, label="resource"];
2->9 [style = bold, label=""];
16->17 [style = bold, label=""];
9->7 [style = bold, label=""];
15->3 [style = bold, label=""];
2->18 [style = dotted, label="true"];
5->18 [style = dashed, label="0"];
2->16 [style = dotted, label="false"];
19->1 [style = solid, label="mapPath"];
2->9 [style = dotted, label="false"];
3->18 [style = bold, label=""];
0->14 [style = dashed, label="0"];
8->1 [style = bold, label=""];
4->3 [style = solid, label="actualPath"];
6->2 [style = solid, label="mapPath"];
2->0 [style = bold, label=""];
3->5 [style = bold, label=""];
10->8 [style = bold, label=""];
19->2 [style = solid, label="mapPath"];
12->6 [style = dotted, label="true"];
0->4 [style = bold, label=""];
12->8 [style = bold, label=""];
4->15 [style = dashed, label="0"];
15->3 [style = solid, label="actualPath"];
2->14 [style = bold, label=""];
2->4 [style = dotted, label="true"];
6->19 [style = dashed, label="0"];
9->11 [style = dashed, label="0"];
5->7 [style = bold, label=""];
2->14 [style = dotted, label="true"];
9->7 [style = solid, label="fileContent"];
1->2 [style = bold, label=""];
14->15 [style = bold, label=""];
16->17 [style = solid, label="fileContent"];
2->11 [style = dotted, label="false"];
13->8 [style = bold, label=""];
2->5 [style = dotted, label="true"];
2->11 [style = bold, label=""];
6->1 [style = solid, label="mapPath"];
11->7 [style = bold, label=""];
14->18 [style = solid, label="defaultWhiteListMapUrl"];
2->16 [style = bold, label=""];
}
