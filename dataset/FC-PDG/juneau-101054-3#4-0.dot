digraph {
11 [style = filled, label = "c.get().header(contentLocation((Object)null)).run().assertBody().isEmpty()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "c.get().header(contentLocation((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "c.get().header(of((Object)null)).run().assertBody().isEmpty()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "c.get().header(of(null)).run().assertBody().is(VALUE)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RestClient c = client().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "c.get().header(contentLocation(VALUE)).run().assertBody().is(VALUE)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "c.get().header(of((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "c.get().header(of(null)).run().assertBody().isEmpty()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "c.get().header(contentLocation(VALUE)).run().assertBody().is(VALUE)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "c.get().header(new ClientVersion(VALUE)).run().assertBody().is(VALUE)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "c.get().header(new ContentLocation(VALUE)).run().assertBody().is(VALUE)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "c.get().header(contentLocation(null)).run().assertBody().is(VALUE)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "c.get().header(contentLocation(null)).run().assertBody().isEmpty()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "c.get().header(of(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "c.get().header(contentLocation((String)null)).run().assertBody().isEmpty()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "c.get().header(contentLocation(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "c.get().header(of((String)null)).run().assertBody().isEmpty()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->14 [style = dashed, label="0"];
3->17 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
10->18 [style = dashed, label="0"];
9->21 [style = dashed, label="0"];
13->0 [style = bold, label=""];
16->18 [style = bold, label=""];
17->19 [style = bold, label=""];
14->9 [style = bold, label=""];
2->10 [style = bold, label=""];
0->8 [style = bold, label=""];
11->17 [style = bold, label=""];
12->16 [style = bold, label=""];
3->6 [style = bold, label=""];
8->1 [style = bold, label=""];
2->16 [style = dashed, label="0"];
5->0 [style = bold, label=""];
1->3 [style = bold, label=""];
0->15 [style = bold, label=""];
15->11 [style = bold, label=""];
10->4 [style = bold, label=""];
4->9 [style = bold, label=""];
8->15 [style = dashed, label="0"];
7->12 [style = dashed, label="0"];
6->19 [style = dashed, label="0"];
6->7 [style = bold, label=""];
20->0 [style = bold, label=""];
18->14 [style = bold, label=""];
19->12 [style = bold, label=""];
4->21 [style = bold, label=""];
7->2 [style = bold, label=""];
}
