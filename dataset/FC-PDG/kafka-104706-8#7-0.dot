digraph {
16 [style = filled, label = "expectedConfigs.put(\"auto.offset.reset\",\"latest\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "expectedConfigs.put(\"max.poll.records\",\"5000\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThrows(,null)@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "expectedConfigs.put(\"group.id\",\"connect-test\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "connConfig.put(\"metadata.max.age.ms\",\"10000\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_ADMIN_OVERRIDES_PREFIX)).andReturn(connConfig)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "PowerMock.replayAll()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "props.put(\"consumer.auto.offset.reset\",\"latest\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "props.put(\"admin.client.id\",\"testid\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "props.put(\"admin.metadata.max.age.ms\",\"5000\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expectedConfigs.put(\"client.id\",\"connector-consumer-test-1\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Map<String,String> expectedConfigs = new HashMap<>(defaultConsumerConfigs)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "PowerMock.replayAll()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "connConfig.put(\"max.poll.records\",\"5000\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "WorkerConfig configWithOverrides = new StandaloneConfig(props)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Map<String,String> props = new HashMap<>(workerProps)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectedConfigs.put(\"max.poll.interval.ms\",\"1000\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Map<String,Object> connConfig = new HashMap<String,Object>()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "connConfig.put(\"max.poll.interval.ms\",\"1000\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "props.put(\"consumer.max.poll.records\",\"5000\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testAdminConfigsClientOverridesWithNonePolicy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(expectedConfigs,Worker.consumerConfigs(new ConnectorTaskId(\"test\",1),configWithOverrides,connectorConfig,null,allConnectorClientConfigOverridePolicy,CLUSTER_ID))@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "expectedConfigs.put(\"metrics.context.connect.kafka.cluster.id\",CLUSTER_ID)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testConsumerConfigsWithClientOverrides['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_CONSUMER_OVERRIDES_PREFIX)).andReturn(connConfig)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testAdminConfigsClientOverridesWithNonePolicy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3->19 [style = dashed, label="0"];
9->11 [style = dashed, label="0"];
24->13 [style = bold, label=""];
5->8 [style = bold, label=""];
1->9 [style = bold, label=""];
16->18 [style = bold, label=""];
6->0 [style = bold, label=""];
4->5 [style = bold, label=""];
22->16 [style = bold, label=""];
0->19 [style = bold, label=""];
17->14 [style = bold, label=""];
0->3 [style = bold, label=""];
19->24 [style = bold, label=""];
3->7 [style = bold, label=""];
23->0 [style = bold, label=""];
12->22 [style = bold, label=""];
1->11 [style = bold, label=""];
6->9 [style = solid, label="configWithOverrides"];
0->13 [style = solid, label="connConfig"];
8->20 [style = dashed, label="0"];
20->21 [style = bold, label=""];
8->2 [style = bold, label=""];
9->25 [style = dashed, label="0"];
5->20 [style = bold, label=""];
6->25 [style = solid, label="configWithOverrides"];
15->5 [style = bold, label=""];
6->12 [style = bold, label=""];
2->6 [style = bold, label=""];
14->23 [style = bold, label=""];
5->6 [style = solid, label="props"];
18->17 [style = bold, label=""];
2->21 [style = dashed, label="0"];
7->1 [style = bold, label=""];
13->9 [style = bold, label=""];
12->25 [style = solid, label="expectedConfigs"];
9->25 [style = bold, label=""];
0->7 [style = solid, label="connConfig"];
21->6 [style = bold, label=""];
10->5 [style = bold, label=""];
}
