digraph {
9 [style = filled, label = "assertEquals(address,addressB)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<RemoteInstance> remoteInstancesOfB = queryRemoteNodes(providerB,2)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final String namespace = \"register_remote_cluster\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Address address = remoteInstancesOfB.get(0).getAddress()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "registerRemoteOfCluster['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ModuleProvider providerA = createProvider(namespace)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "getClusterRegister(providerB).registerRemote(instanceB)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<RemoteInstance> remoteInstancesOfA = queryRemoteNodes(providerA,2)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(addressB.isSelf())@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "unregisterRemoteOfCluster['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Address addressB = new Address(\"127.0.0.5\",1000,true)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "getClusterRegister(providerA).registerRemote(instanceA)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(1,remoteInstancesOfB.size())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ModuleProvider providerB = createProvider(serviceName)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ModuleProvider providerB = createProvider(namespace)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "RemoteInstance instanceA = new RemoteInstance(addressA)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "remoteInstancesOfB = queryRemoteNodes(providerB,1,120)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "client.close()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ModuleProvider providerA = createProvider(serviceName)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "validateServiceInstance(addressA,addressB,remoteInstancesOfA)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EtcdClient client = Whitebox.getInternalState(providerA,\"client\")@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "Client client = Whitebox.getInternalState(getClusterRegister(providerA),\"client\")@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "final String serviceName = \"unregister_remote_cluster\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Address addressA = new Address(\"127.0.0.4\",1000,true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "validateServiceInstance(addressB,addressA,remoteInstancesOfB)@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "unregisterRemoteOfCluster['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RemoteInstance instanceB = new RemoteInstance(addressB)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->8 [style = solid, label="providerB"];
5->9 [style = solid, label="addressB"];
4->10 [style = bold, label=""];
24->6 [style = solid, label="providerA"];
7->0 [style = solid, label="providerB"];
6->20 [style = solid, label="remoteInstancesOfA"];
10->21 [style = dashed, label="0"];
9->11 [style = bold, label=""];
10->14 [style = bold, label=""];
25->23 [style = bold, label=""];
16->6 [style = bold, label=""];
20->0 [style = bold, label=""];
12->17 [style = bold, label=""];
4->21 [style = bold, label=""];
26->18 [style = bold, label=""];
15->9 [style = solid, label="address"];
18->20 [style = solid, label="addressA"];
1->3 [style = solid, label="instanceA"];
3->16 [style = bold, label=""];
17->7 [style = solid, label="serviceName"];
23->24 [style = solid, label="namespace"];
1->13 [style = bold, label=""];
17->19 [style = bold, label=""];
18->4 [style = solid, label="addressA"];
19->6 [style = solid, label="providerA"];
6->20 [style = bold, label=""];
5->1 [style = bold, label=""];
24->26 [style = bold, label=""];
23->24 [style = bold, label=""];
19->10 [style = solid, label="providerA"];
5->20 [style = solid, label="addressB"];
13->3 [style = bold, label=""];
8->2 [style = bold, label=""];
0->4 [style = bold, label=""];
15->9 [style = bold, label=""];
5->4 [style = solid, label="addressB"];
18->5 [style = bold, label=""];
23->26 [style = solid, label="namespace"];
2->15 [style = bold, label=""];
19->21 [style = solid, label="providerA"];
7->18 [style = bold, label=""];
17->19 [style = solid, label="serviceName"];
5->13 [style = solid, label="addressB"];
22->17 [style = bold, label=""];
18->1 [style = solid, label="addressA"];
26->0 [style = solid, label="providerB"];
14->8 [style = bold, label=""];
19->24 [style = dashed, label="0"];
17->23 [style = dashed, label="0"];
0->4 [style = solid, label="remoteInstancesOfB"];
13->16 [style = solid, label="instanceB"];
7->26 [style = dashed, label="0"];
19->7 [style = bold, label=""];
21->14 [style = bold, label=""];
}
