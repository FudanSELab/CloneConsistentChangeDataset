digraph {
3 [style = filled, label = "randomBoolean()@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "secondEntity = new TestEntity(requestCacheStats,indexShard)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "value = cache.getOrCompute(secondEntity,loader,secondReader,termBytes)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "cache.cleanCache()@@@75@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertEquals(2,cache.count())@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "writer = new IndexWriter(dir,newIndexWriterConfig())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "loader = new Loader(secondReader,0)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(1,cache.count())@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,mappingKey,reader,termBytes)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "value = cache.getOrCompute(entity,loader,secondReader,termBytes)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "MappingLookup.CacheKey mappingKey = MappingLookupUtils.fromTypes().cacheKey()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes)@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "writer.updateDocument(new Term(\"id\",\"0\"),newDoc(0,\"bar\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,newIndexWriterConfig())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Directory dir = newDirectory()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "indexShard.set(false)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "testBasicOperationsCache['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "reader.close()@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "ShardRequestCache requestCacheStats = new ShardRequestCache()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(2,cache.count())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(1,cache.count())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "testCacheDifferentReaders['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "final int cacheSize = requestCacheStats.stats().getMemorySize().bytesAsInt()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > cacheSize + value.length())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "TestEntity entity = new TestEntity(requestCacheStats,indexShard)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "ShardRequestCache requestCacheStats = new ShardRequestCache()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Loader loader = new Loader(reader,0)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(0L,requestCacheStats.stats().getMemorySize().getBytes())@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
99 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@82@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "loader = new Loader(secondReader,0)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(2,cache.numRegisteredCloseListeners())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "assertEquals(2,cache.count())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "indexShard.set(false)@@@72@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "TermQueryBuilder termQuery = new TermQueryBuilder(\"id\",\"0\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "randomBoolean()@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "IndicesRequestCache cache = new IndicesRequestCache(Settings.EMPTY)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "writer.flush()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertEquals(cacheSize,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@76@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "IOUtils.close(writer)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "cache.cleanCache()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "value = cache.getOrCompute(entity,loader,mappingKey,reader,termBytes)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "assertEquals(\"bar\",value.streamInput().readString())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "DirectoryReader reader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "IOUtils.close(reader,writer,dir,cache)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testBasicOperationsCache['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "loader = new Loader(reader,0)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "cache.cleanCache()@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "DirectoryReader secondReader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "writer.addDocument(newDoc(0,\"foo\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "cache.clear(secondEntity)@@@73@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "randomBoolean()@@@68@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().getBytes() > value.length())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "TestEntity secondEntity = new TestEntity(requestCacheStats,indexShard)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(\"bar\",value.streamInput().readString())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "BytesReference termBytes = XContentHelper.toXContent(termQuery,XContentType.JSON,false)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "secondReader.close()@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getHitCount())@@@55@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "IOUtils.close(secondReader,writer,dir,cache)@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Loader loader = new Loader(reader,0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertEquals(0,cache.count())@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "TestEntity entity = new TestEntity(requestCacheStats,indexShard)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15->31 [style = solid, label="reader"];
15->1 [style = solid, label="reader"];
91->54 [style = bold, label=""];
37->28 [style = bold, label=""];
19->97 [style = solid, label="indexShard"];
0->1 [style = solid, label="termBytes"];
7->30 [style = bold, label=""];
32->12 [style = bold, label=""];
19->86 [style = solid, label="indexShard"];
39->0 [style = solid, label="termQuery"];
35->26 [style = solid, label="termBytes"];
40->25 [style = bold, label=""];
95->65 [style = bold, label=""];
31->1 [style = bold, label=""];
25->23 [style = solid, label="writer"];
17->32 [style = solid, label="loader"];
26->43 [style = dashed, label="0"];
12->7 [style = bold, label=""];
59->94 [style = solid, label="secondReader"];
22->24 [style = solid, label="requestCacheStats"];
19->23 [style = solid, label="cache"];
90->66 [style = bold, label=""];
34->5 [style = solid, label="indexShard"];
23->78 [style = dashed, label="0"];
3->36 [style = bold, label=""];
82->67 [style = bold, label=""];
73->80 [style = bold, label=""];
34->24 [style = solid, label="indexShard"];
24->26 [style = solid, label="entity"];
40->15 [style = solid, label="writer"];
40->58 [style = solid, label="writer"];
13->21 [style = dashed, label="0"];
83->97 [style = bold, label=""];
24->11 [style = bold, label=""];
8->81 [style = bold, label=""];
15->17 [style = solid, label="reader"];
90->66 [style = solid, label="loader"];
61->16 [style = solid, label="secondEntity"];
62->49 [style = bold, label=""];
25->15 [style = bold, label=""];
19->69 [style = bold, label=""];
39->37 [style = solid, label="reader"];
98->52 [style = bold, label=""];
64->78 [style = solid, label="cache"];
22->5 [style = solid, label="requestCacheStats"];
5->37 [style = bold, label=""];
24->43 [style = solid, label="entity"];
0->66 [style = solid, label="termBytes"];
11->43 [style = solid, label="loader"];
94->82 [style = solid, label="loader"];
41->7 [style = dashed, label="0"];
36->6 [style = bold, label=""];
37->47 [style = solid, label="loader"];
3->36 [style = dotted, label="false"];
93->96 [style = bold, label=""];
35->28 [style = solid, label="termBytes"];
67->95 [style = bold, label=""];
6->16 [style = dotted, label="false"];
39->47 [style = solid, label="reader"];
57->55 [style = bold, label=""];
59->90 [style = solid, label="secondReader"];
28->47 [style = dashed, label="0"];
4->21 [style = bold, label=""];
7->48 [style = dashed, label="0"];
59->82 [style = solid, label="secondReader"];
76->59 [style = bold, label=""];
68->83 [style = bold, label=""];
42->31 [style = bold, label=""];
11->43 [style = bold, label=""];
12->48 [style = bold, label=""];
44->43 [style = solid, label="mappingKey"];
58->70 [style = bold, label=""];
69->86 [style = solid, label="requestCacheStats"];
59->86 [style = bold, label=""];
21->45 [style = dashed, label="0"];
71->61 [style = bold, label=""];
4->45 [style = bold, label=""];
7->91 [style = bold, label=""];
26->27 [style = bold, label=""];
6->38 [style = bold, label=""];
70->78 [style = solid, label="writer"];
6->16 [style = dashed, label="0"];
61->94 [style = bold, label=""];
85->93 [style = bold, label=""];
35->84 [style = dotted, label="true"];
57->87 [style = solid, label="cacheSize"];
49->85 [style = bold, label=""];
43->27 [style = bold, label=""];
47->2 [style = bold, label=""];
84->58 [style = bold, label=""];
39->23 [style = solid, label="reader"];
56->70 [style = solid, label="dir"];
87->71 [style = bold, label=""];
0->32 [style = solid, label="termBytes"];
70->59 [style = solid, label="writer"];
31->1 [style = solid, label="loader"];
59->66 [style = solid, label="secondReader"];
21->60 [style = bold, label=""];
40->78 [style = solid, label="writer"];
35->34 [style = bold, label=""];
16->20 [style = bold, label=""];
56->40 [style = bold, label=""];
88->68 [style = bold, label=""];
11->26 [style = bold, label=""];
37->47 [style = bold, label=""];
21->23 [style = bold, label=""];
39->28 [style = solid, label="reader"];
9->22 [style = bold, label=""];
5->28 [style = solid, label="entity"];
35->70 [style = dotted, label="true"];
45->23 [style = bold, label=""];
22->19 [style = bold, label=""];
64->19 [style = bold, label=""];
97->17 [style = bold, label=""];
69->61 [style = solid, label="requestCacheStats"];
51->77 [style = bold, label=""];
38->16 [style = bold, label=""];
0->35 [style = solid, label="termQuery"];
80->62 [style = bold, label=""];
8->14 [style = bold, label=""];
40->59 [style = solid, label="writer"];
25->39 [style = solid, label="writer"];
97->32 [style = solid, label="entity"];
70->76 [style = bold, label=""];
33->57 [style = bold, label=""];
79->98 [style = bold, label=""];
15->32 [style = solid, label="reader"];
2->10 [style = bold, label=""];
11->26 [style = solid, label="loader"];
78->99 [style = bold, label=""];
35->58 [style = dotted, label="true"];
69->56 [style = bold, label=""];
89->64 [style = bold, label=""];
54->8 [style = bold, label=""];
69->50 [style = solid, label="requestCacheStats"];
44->47 [style = solid, label="mappingKey"];
35->76 [style = bold, label=""];
8->63 [style = dashed, label="0"];
37->28 [style = solid, label="loader"];
30->3 [style = bold, label=""];
40->23 [style = solid, label="dir"];
3->8 [style = bold, label=""];
81->74 [style = bold, label=""];
59->78 [style = solid, label="secondReader"];
55->50 [style = bold, label=""];
0->82 [style = solid, label="termBytes"];
41->33 [style = bold, label=""];
14->13 [style = bold, label=""];
6->63 [style = bold, label=""];
19->40 [style = bold, label=""];
1->29 [style = bold, label=""];
48->30 [style = bold, label=""];
16->4 [style = bold, label=""];
6->63 [style = dotted, label="true"];
86->66 [style = solid, label="entity"];
33->91 [style = dashed, label="0"];
5->47 [style = solid, label="entity"];
23->18 [style = bold, label=""];
56->40 [style = solid, label="dir"];
33->17 [style = bold, label=""];
46->22 [style = bold, label=""];
40->25 [style = solid, label="dir"];
63->4 [style = bold, label=""];
24->6 [style = solid, label="entity"];
35->47 [style = solid, label="termBytes"];
35->43 [style = solid, label="termBytes"];
39->44 [style = bold, label=""];
53->51 [style = bold, label=""];
65->88 [style = bold, label=""];
66->53 [style = bold, label=""];
34->5 [style = bold, label=""];
35->84 [style = bold, label=""];
74->73 [style = bold, label=""];
94->82 [style = bold, label=""];
7->93 [style = dashed, label="0"];
86->31 [style = bold, label=""];
56->78 [style = solid, label="dir"];
19->61 [style = solid, label="indexShard"];
52->87 [style = bold, label=""];
39->43 [style = solid, label="reader"];
17->32 [style = bold, label=""];
20->4 [style = bold, label=""];
77->79 [style = bold, label=""];
72->78 [style = bold, label=""];
6->14 [style = bold, label=""];
3->6 [style = dotted, label="false"];
28->2 [style = bold, label=""];
39->26 [style = solid, label="reader"];
39->0 [style = bold, label=""];
19->50 [style = solid, label="indexShard"];
10->42 [style = bold, label=""];
69->97 [style = solid, label="requestCacheStats"];
57->93 [style = solid, label="cacheSize"];
96->6 [style = bold, label=""];
15->39 [style = bold, label=""];
92->72 [style = bold, label=""];
27->41 [style = bold, label=""];
50->90 [style = bold, label=""];
0->35 [style = bold, label=""];
6->38 [style = dotted, label="false"];
13->38 [style = bold, label=""];
60->75 [style = bold, label=""];
29->24 [style = bold, label=""];
75->92 [style = bold, label=""];
86->1 [style = solid, label="entity"];
3->8 [style = dotted, label="true"];
61->82 [style = solid, label="secondEntity"];
39->11 [style = solid, label="reader"];
44->0 [style = bold, label=""];
}
