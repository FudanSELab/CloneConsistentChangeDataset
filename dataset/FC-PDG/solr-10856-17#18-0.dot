digraph {
11 [style = filled, label = "assertEquals(COLLECTION,tuples.get(1).get(\"_COLLECTION_\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Tuple t1 = tuples.get(1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "List<Tuple> tuples = getTuples(rstream)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i,a_f\",\"sort\",\"a_s asc,a_f asc\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "stream.setTrace(true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assert(tuples.size() == 3)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertMaps(maps2,4,6)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "maps2 = t2.getMaps(\"group\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assert(tuples.size() == 3)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "t0 = tuples.get(0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List<Map> maps0 = t0.getMaps(\"group\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\").add(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\").add(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"10\",\"a_f\",\"6\").add(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"7\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"12\",\"a_f\",\"8\").add(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "rstream = new ReducerStream(stream,new FieldComparator(\"a_s\",ComparatorOrder.ASCENDING),new GroupOperation(new FieldComparator(\"a_f\",ComparatorOrder.DESCENDING),5))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "t1 = tuples.get(1)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(COLLECTION,tuples.get(2).get(\"_COLLECTION_\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assert(tuples.get(1).get(\"_COLLECTION_\").equals(COLLECTION))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertMaps(maps2,6,4)@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assert(tuples.get(0).get(\"_COLLECTION_\").equals(COLLECTION))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assert(tuples.get(3).get(\"_COLLECTION_\").equals(COLLECTION))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "List<Map> maps1 = t1.getMaps(\"group\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testReducerStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "maps1 = t1.getMaps(\"group\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "tuples = getTuples(rstream)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(COLLECTION,tuples.get(3).get(\"_COLLECTION_\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Tuple t2 = tuples.get(2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertMaps(maps1,8,7,5,3)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "maps0 = t0.getMaps(\"group\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i, a_f\",\"sort\",\"a_s asc , a_f asc\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "t2 = tuples.get(2)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testTrace['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertMaps(maps1,3,5,7,8)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i, a_f\",\"sort\",\"a_s asc , a_f asc\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<Tuple> tuples = getTuples(stream)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testTrace['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertMaps(maps0,0,2,1,9)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<Map> maps2 = t2.getMaps(\"group\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(COLLECTION,tuples.get(0).get(\"_COLLECTION_\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Tuple t0 = tuples.get(0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertMaps(maps0,9,1,2,0)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "stream = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assert(tuples.get(2).get(\"_COLLECTION_\").equals(COLLECTION))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "ReducerStream rstream = new ReducerStream(stream,new FieldEqualitor(\"a_s\"),new GroupOperation(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),5))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
35->27 [style = bold, label=""];
30->41 [style = bold, label=""];
26->32 [style = bold, label=""];
33->20 [style = bold, label=""];
37->26 [style = bold, label=""];
22->37 [style = bold, label=""];
0->5 [style = solid, label="sParamsA"];
36->5 [style = solid, label="sParamsA"];
20->34 [style = bold, label=""];
42->17 [style = solid, label="maps0"];
27->30 [style = bold, label=""];
18->40 [style = bold, label=""];
42->17 [style = bold, label=""];
3->38 [style = dashed, label="0"];
19->39 [style = bold, label=""];
40->25 [style = bold, label=""];
34->31 [style = bold, label=""];
31->18 [style = bold, label=""];
11->12 [style = bold, label=""];
21->22 [style = solid, label="maps1"];
1->0 [style = bold, label=""];
7->4 [style = bold, label=""];
4->2 [style = bold, label=""];
2->9 [style = bold, label=""];
26->32 [style = solid, label="maps2"];
1->36 [style = bold, label=""];
38->15 [style = bold, label=""];
5->16 [style = solid, label="stream"];
27->30 [style = solid, label="maps1"];
14->1 [style = bold, label=""];
5->16 [style = bold, label=""];
8->1 [style = bold, label=""];
3->10 [style = bold, label=""];
12->13 [style = bold, label=""];
2->12 [style = dashed, label="0"];
17->24 [style = bold, label=""];
5->3 [style = solid, label="stream"];
23->33 [style = bold, label=""];
6->16 [style = dashed, label="0"];
5->6 [style = bold, label=""];
16->38 [style = solid, label="rstream"];
3->7 [style = bold, label=""];
15->28 [style = bold, label=""];
24->21 [style = bold, label=""];
21->22 [style = bold, label=""];
19->39 [style = solid, label="maps0"];
20->34 [style = solid, label="sParamsA"];
39->35 [style = bold, label=""];
34->31 [style = solid, label="stream"];
9->13 [style = dashed, label="0"];
28->19 [style = bold, label=""];
7->15 [style = dashed, label="0"];
25->42 [style = bold, label=""];
7->10 [style = dashed, label="0"];
36->5 [style = bold, label=""];
23->33 [style = solid, label="maps2"];
29->1 [style = bold, label=""];
4->11 [style = dashed, label="0"];
31->18 [style = solid, label="rstream"];
0->36 [style = dashed, label="0"];
41->23 [style = bold, label=""];
16->38 [style = bold, label=""];
0->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
