digraph {
9 [style = filled, label = "assertResponseAndCountdownOrBlockForever(SIMPLE_TIMESERIES_QUERY,waitAllFinished,null)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final CountDownLatch waitTwoScheduled = new CountDownLatch(2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "waitAllFinished.await()@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertResponseAndCountdownOrBlockForever(SIMPLE_TIMESERIES_QUERY,waitAllFinished,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertResponseAndCountdownOrBlockForever(SIMPLE_TIMESERIES_QUERY_LOW_PRIORITY,waitAllFinished,null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final QueryScheduler laningScheduler = new QueryScheduler(2,ManualQueryPrioritizationStrategy.INSTANCE,NoQueryLaningStrategy.INSTANCE,new ServerConfig())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "waitTwoScheduled.await()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final CountDownLatch waitTwoStarted = new CountDownLatch(2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "createScheduledQueryResource(scheduler,ImmutableList.of(waitTwoStarted),ImmutableList.of(waitOneScheduled))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testTooManyQueryInLane['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "final CountDownLatch waitAllFinished = new CountDownLatch(3)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expectPermissiveHappyPathAuth()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testTooManyQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final CountDownLatch waitOneScheduled = new CountDownLatch(1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final QueryScheduler scheduler = new QueryScheduler(40,ManualQueryPrioritizationStrategy.INSTANCE,new HiLoQueryLaningStrategy(2),new ServerConfig())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "waitAllFinished.await()@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "waitOneScheduled.await()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertResponseAndCountdownOrBlockForever(SIMPLE_TIMESERIES_QUERY_LOW_PRIORITY,waitAllFinished,null)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testTooManyQueryInLane['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertResponseAndCountdownOrBlockForever(SIMPLE_TIMESERIES_QUERY,waitAllFinished,null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "createScheduledQueryResource(laningScheduler,Collections.emptyList(),ImmutableList.of(waitTwoScheduled))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertResponseAndCountdownOrBlockForever(SIMPLE_TIMESERIES_QUERY,waitAllFinished,null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->10 [style = bold, label=""];
5->8 [style = bold, label=""];
0->4 [style = bold, label=""];
1->9 [style = bold, label=""];
19->6 [style = bold, label=""];
5->14 [style = dashed, label="0"];
21->15 [style = bold, label=""];
2->11 [style = bold, label=""];
17->18 [style = bold, label=""];
3->21 [style = dashed, label="0"];
14->21 [style = solid, label="waitTwoScheduled"];
8->3 [style = solid, label="waitOneScheduled"];
8->6 [style = bold, label=""];
14->19 [style = bold, label=""];
6->4 [style = solid, label="waitAllFinished"];
10->15 [style = dashed, label="0"];
11->14 [style = bold, label=""];
4->1 [style = bold, label=""];
7->3 [style = bold, label=""];
6->21 [style = bold, label=""];
6->21 [style = solid, label="laningScheduler"];
13->11 [style = bold, label=""];
16->1 [style = bold, label=""];
18->16 [style = bold, label=""];
7->3 [style = solid, label="scheduler"];
7->6 [style = dashed, label="0"];
19->16 [style = solid, label="waitAllFinished"];
6->9 [style = solid, label="waitAllFinished"];
19->17 [style = solid, label="waitAllFinished"];
5->3 [style = solid, label="waitTwoStarted"];
6->10 [style = solid, label="waitAllFinished"];
6->7 [style = bold, label=""];
19->15 [style = solid, label="waitAllFinished"];
10->0 [style = bold, label=""];
11->5 [style = bold, label=""];
9->12 [style = bold, label=""];
20->11 [style = bold, label=""];
15->17 [style = bold, label=""];
}
