digraph {
0 [style = filled, label = "final int numShards = TestUtil.nextInt(random(),1,5)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "FIELD = usually()? \"amount_CFT\": \"amount\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "id < numDocs@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "setupCluster['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(0,(new UpdateRequest().add(doc)).process(cluster.getSolrClient()).getStatus())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final SolrInputDocument doc = sdoc(\"id\",\"\" + id,INT_FIELD,\"\" + rangeVal,STR_FIELD,termVal)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TERM_MODEL(rangeVal(.merge(termVal,1,null)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(0,(CollectionAdminRequest.createCollection(COLLECTION,CONF,numShards,numReplicas).setMaxShardsPerNode(maxShardsPerNode).setProperties(Collections.singletonMap(CoreAdminParams.CONFIG,\"solrconfig-minimal.xml\")).process(cluster.getSolrClient())).getStatus())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "setupCluster['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "final String val = VALUES.get(id % VALUES.size())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final int numDocs = atLeast(1000)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(0,cluster.getSolrClient().commit().getStatus())@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "CurrencyFieldTypeTest.assumeCurrencySupport(\"USD\",\"EUR\",\"MXN\",\"GBP\",\"JPY\",\"NOK\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Arrays.fill(RANGE_MODEL,0)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "TERM_MODEL(i( = new LinkedHashMap<>()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "id++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final int numReplicas = 1@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final int maxShardsPerNode = 1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i < NUM_RANGE_VALUES@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final int nodeCount = numShards * numReplicas@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cluster.getSolrClient().setDefaultCollection(COLLECTION)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final String x = STR_VALS.get(id % STR_VALS.size())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "setupCluster['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final int maxTermId = atLeast(TERM_VALUES_RANDOMIZER)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final int rangeVal = random().nextInt(NUM_RANGE_VALUES)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "RANGE_MODEL(rangeVal(++@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "configureCluster(nodeCount).addConfig(CONF,Paths.get(TEST_HOME(),\"collection1\",\"conf\")).configure()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(0,cluster.getSolrClient().commit().getStatus())@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(0,(new UpdateRequest().add(sdoc(\"id\",\"\" + id,\"x_s\",x,FIELD,val))).process(cluster.getSolrClient()).getStatus())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "int id = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "id < NUM_DOCS@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final String termVal = \"x\" + random().nextInt(maxTermId)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->30 [style = bold, label=""];
8->22 [style = solid, label="termVal"];
3->24 [style = bold, label=""];
9->28 [style = solid, label="id"];
28->30 [style = dotted, label="true"];
9->32 [style = solid, label="id"];
10->2 [style = bold, label=""];
28->33 [style = dotted, label="true"];
16->4 [style = bold, label=""];
21->15 [style = bold, label=""];
14->18 [style = bold, label=""];
8->11 [style = solid, label="termVal"];
18->32 [style = solid, label="id"];
21->18 [style = dotted, label="true"];
12->13 [style = solid, label="i"];
0->7 [style = bold, label=""];
13->17 [style = bold, label=""];
10->9 [style = bold, label=""];
20->5 [style = bold, label=""];
19->8 [style = bold, label=""];
7->16 [style = bold, label=""];
6->0 [style = bold, label=""];
18->30 [style = solid, label="id"];
9->22 [style = solid, label="id"];
17->13 [style = dotted, label="true"];
21->22 [style = dotted, label="true"];
17->12 [style = bold, label=""];
21->23 [style = dotted, label="true"];
23->11 [style = bold, label=""];
9->21 [style = bold, label=""];
18->21 [style = solid, label="id"];
0->4 [style = solid, label="numShards"];
19->22 [style = solid, label="rangeVal"];
31->26 [style = bold, label=""];
5->10 [style = bold, label=""];
33->18 [style = bold, label=""];
4->20 [style = bold, label=""];
11->14 [style = bold, label=""];
18->28 [style = bold, label=""];
9->18 [style = solid, label="id"];
3->1 [style = bold, label=""];
3->8 [style = solid, label="maxTermId"];
12->13 [style = bold, label=""];
2->3 [style = bold, label=""];
24->1 [style = bold, label=""];
7->4 [style = solid, label="numReplicas"];
28->27 [style = bold, label=""];
9->21 [style = solid, label="id"];
18->28 [style = solid, label="id"];
21->19 [style = bold, label=""];
17->12 [style = dotted, label="true"];
18->22 [style = solid, label="id"];
8->32 [style = dashed, label="0"];
1->17 [style = solid, label="i"];
30->32 [style = bold, label=""];
8->22 [style = bold, label=""];
17->9 [style = bold, label=""];
1->17 [style = bold, label=""];
29->31 [style = bold, label=""];
9->30 [style = solid, label="id"];
21->19 [style = dotted, label="true"];
21->28 [style = dashed, label="0"];
2->21 [style = solid, label="numDocs"];
19->23 [style = solid, label="rangeVal"];
18->21 [style = bold, label=""];
21->8 [style = dotted, label="true"];
25->0 [style = bold, label=""];
21->14 [style = dotted, label="true"];
9->28 [style = bold, label=""];
21->11 [style = dotted, label="true"];
22->23 [style = bold, label=""];
32->33 [style = bold, label=""];
28->32 [style = dotted, label="true"];
28->18 [style = dotted, label="true"];
13->17 [style = solid, label="i"];
26->0 [style = bold, label=""];
}
