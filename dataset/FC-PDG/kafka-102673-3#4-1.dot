digraph {
13 [style = filled, label = "final String appId = getClass().getSimpleName().toLowerCase(Locale.getDefault()) + testId@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "{driver.close()cleanStateAfterTest(driver)}@@@18@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final String testId = \"-shouldShutdownWhenBytesConstraintIsViolated\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "cleanStateBeforeTest(input,outputRaw,outputSuppressed)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "verifyErrorShutdown(driver)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "verifyErrorShutdown(driver)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "shouldShutdownWhenRecordConstraintIsViolated['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "shouldShutdownWhenRecordConstraintIsViolated['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final String testId = \"-shouldShutdownWhenRecordConstraintIsViolated\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final KTable<String,Long> valueCounts = buildCountsTable(input,builder)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "valueCounts.suppress(untilTimeLimit(ofMillis(MAX_VALUE),maxRecords(1L).shutDownWhenFull())).toStream().to(outputSuppressed,Produced.with(STRING_SERDE,Serdes.Long()))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "shouldShutdownWhenBytesConstraintIsViolated['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "cleanStateBeforeTest(CLUSTER,input,outputRaw,outputSuppressed)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "valueCounts.suppress(untilTimeLimit(Duration.ofMillis(MAX_VALUE),maxBytes(200L).shutDownWhenFull())).toStream().to(outputSuppressed,Produced.with(STRING_SERDE,Serdes.Long()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final KafkaStreams driver = getCleanStartedStreams(appId,builder)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String outputRaw = \"output-raw\" + testId@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "produceSynchronously(input,asList(new KeyValueTimestamp<>(\"k1\",\"v1\",scaledTime(0L)),new KeyValueTimestamp<>(\"k1\",\"v2\",scaledTime(1L)),new KeyValueTimestamp<>(\"k2\",\"v1\",scaledTime(2L)),new KeyValueTimestamp<>(\"x\",\"x\",scaledTime(3L))))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "valueCounts.toStream().to(outputRaw,Produced.with(STRING_SERDE,Serdes.Long()))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "{driver.close()cleanStateAfterTest(CLUSTER,driver)}@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final String input = \"input\" + testId@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final KafkaStreams driver = IntegrationTestUtils.getStartedStreams(streamsConfig,builder,true)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "final Properties streamsConfig = getStreamsConfig(appId)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final String outputSuppressed = \"output-suppressed\" + testId@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
1->9 [style = solid, label="input"];
17->8 [style = bold, label=""];
8->1 [style = solid, label="testId"];
11->19 [style = solid, label="outputSuppressed"];
11->14 [style = bold, label=""];
6->22 [style = bold, label=""];
21->13 [style = solid, label="testId"];
8->11 [style = solid, label="testId"];
14->9 [style = solid, label="outputRaw"];
21->1 [style = solid, label="testId"];
8->14 [style = solid, label="testId"];
18->16 [style = solid, label="streamsConfig"];
14->19 [style = bold, label=""];
19->10 [style = bold, label=""];
4->18 [style = bold, label=""];
1->12 [style = solid, label="input"];
4->2 [style = bold, label=""];
14->4 [style = solid, label="outputRaw"];
9->10 [style = bold, label=""];
8->21 [style = dashed, label="0"];
1->6 [style = solid, label="input"];
16->20 [style = solid, label="driver"];
10->6 [style = bold, label=""];
13->1 [style = bold, label=""];
2->12 [style = bold, label=""];
1->11 [style = bold, label=""];
21->14 [style = solid, label="testId"];
13->2 [style = solid, label="appId"];
11->22 [style = solid, label="outputSuppressed"];
22->4 [style = bold, label=""];
9->19 [style = dashed, label="0"];
11->9 [style = solid, label="outputSuppressed"];
10->6 [style = solid, label="builder"];
6->5 [style = bold, label=""];
11->5 [style = solid, label="outputSuppressed"];
3->20 [style = bold, label=""];
23->21 [style = bold, label=""];
3->7 [style = bold, label=""];
8->13 [style = solid, label="testId"];
5->4 [style = bold, label=""];
10->16 [style = solid, label="builder"];
10->2 [style = solid, label="builder"];
0->8 [style = bold, label=""];
2->3 [style = solid, label="driver"];
13->18 [style = solid, label="appId"];
14->19 [style = solid, label="outputRaw"];
2->7 [style = solid, label="driver"];
14->9 [style = bold, label=""];
16->15 [style = solid, label="driver"];
1->3 [style = solid, label="input"];
12->3 [style = bold, label=""];
5->22 [style = dashed, label="0"];
20->15 [style = bold, label=""];
21->11 [style = solid, label="testId"];
8->13 [style = bold, label=""];
21->13 [style = bold, label=""];
1->19 [style = solid, label="input"];
18->16 [style = bold, label=""];
}
