digraph {
25 [style = filled, label = "Assert.assertEquals(Resource.newInstance(1024,1),req.getCapability())@@@76@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertTrue(((req.getResourceName().equals(\"*\") || req.getResourceName().equals(\"/default-rack\")) && req.getNumContainers() == 1) || (req.getResourceName().equals(\"h1\") && req.getNumContainers() == 0))@@@63@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rm.getMyFifoScheduler().forceResourceLimit(Resource.newInstance(1024,1))@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "rm.drainEvents()@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "allocator.sendRequest(event3)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "rm.drainEvents()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "allocator.schedule()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(RMContainerAllocator.PRIORITY_REDUCE,req.getPriority())@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "LOG.info(\"Running testAvoidAskMoreReducersWhenReducerPreemptionIsRequired\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "clock.setTime(System.currentTimeMillis())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "allocator.schedule()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "ApplicationAttemptId appAttemptId = app.getCurrentAppAttempt().getAppAttemptId()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "allocator.sendRequest(event4)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "rm.drainEvents()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(2,allocator.getNumOfPendingReduces())@@@71@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "ContainerRequestEvent event2 = createReq(jobId,2,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ea01c)@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"amNM:1234\",1260)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "MyContainerAllocator allocator = new MyContainerAllocator(rm,conf,appAttemptId,mockJob)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(0,allocator.getAssignedRequests().maps.size())@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Configuration conf = new Configuration()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "when(mockJob.getReport()).thenReturn(MRBuilderUtils.newJobReport(jobId,\"job\",\"user\",JobState.RUNNING,0,0,0,0,0,0,0,\"jobfile\",null,false,\"\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Assert.assertTrue(req.getResourceName().equals(\"*\") || req.getResourceName().equals(\"/default-rack\") || req.getResourceName().equals(\"h2\"))@@@75@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "boolean isReduce = req.getPriority().equals(RMContainerAllocator.PRIORITY_REDUCE)@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(1,allocator.getScheduledRequests().reduces.size())@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MockNM nodeManager = rm.registerNode(\"h1:1234\",1024)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ContainerRequestEvent event1 = createReq(jobId,1,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ea00a)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "rm.getMyFifoScheduler().forceResourceLimit(Resource.newInstance(0,0))@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "ContainerRequestEvent event3 = createRequest(jobId,3,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e9de2,false,true)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "ContainerRequestEvent event2 = ContainerRequestCreator.createRequest(jobId,2,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e9dcc)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "ContainerRequestEvent event3 = createReq(jobId,3,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ea02e,false,true)@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "rm.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "allocator.sendRequest(event1)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "testAvoidAskMoreReducersWhenReducerPreemptionIsRequired['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Job mockJob = mock()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(1,allocator.getNumOfPendingReduces())@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "testUpdateAskOnRampDownAllReduces['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "rm.drainEvents()@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertTrue((req.getResourceName().equals(\"*\") || req.getResourceName().equals(\"/default-rack\") || req.getResourceName().equals(\"h2\")) && req.getNumContainers() == 1)@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "rm.drainEvents()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testUpdateAskOnRampDownAllReduces['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "allocator.sendDeallocate(deallocate)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "Assert.assertEquals(3,allocator.getAsk().size())@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(1,allocator.getAssignedRequests().maps.size())@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "isReduce@@@59@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "nodeManager.nodeHeartbeat(true)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(0,allocator.getScheduledRequests().reduces.size())@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "rm.drainEvents()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "allocator.schedule()@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "ContainerRequestEvent event4 = createRequest(jobId,4,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e9e0c,false,true)@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "clock.setTime(System.currentTimeMillis() + 500000L + 10 * 60 * 1000)@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(6,allocator.getAsk().size())@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "LOG.info(\"Running testUpdateAskOnRampDownAllReduces\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "rm.sendAMLaunched(appAttemptId)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ContainerRequestEvent event4 = createReq(jobId,4,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ea054,false,true)@@@38@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "RMApp app = rm.submitApp(1024)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "JobId jobId = MRBuilderUtils.newJobId(appAttemptId.getApplicationId(),0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "rm.drainEvents()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(RMContainerAllocator.PRIORITY_REDUCE,req.getPriority())@@@74@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "rm.drainEvents()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "Assert.assertEquals(0,req.getNumContainers())@@@77@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "allocator.sendRequest(event2)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "rm.drainEvents()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "clock.setTime(System.currentTimeMillis() + 500000L)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MyResourceManager rm = new MyResourceManager(conf)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ContainerAllocatorEvent deallocate = createDeallocateEvent(jobId,1,false)@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "ControlledClock clock = (ControlledClock)allocator.getContext().getClock()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "rm.getMyFifoScheduler().forceResourceLimit(Resource.newInstance(2048,0))@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "allocator.schedule()@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(1,allocator.getScheduledRequests().maps.size())@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "ContainerRequestEvent event1 = ContainerRequestCreator.createRequest(jobId,1,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4e9db5)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "allocator.schedule()@@@68@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43->24 [style = solid, label="jobId"];
43->62 [style = solid, label="jobId"];
9->33 [style = dotted, label="false"];
24->60 [style = bold, label=""];
43->64 [style = solid, label="jobId"];
32->52 [style = bold, label=""];
48->29 [style = bold, label=""];
56->41 [style = bold, label=""];
64->37 [style = solid, label="event2"];
29->50 [style = solid, label="event1"];
43->26 [style = bold, label=""];
30->49 [style = bold, label=""];
58->18 [style = bold, label=""];
7->48 [style = bold, label=""];
26->56 [style = bold, label=""];
17->53 [style = bold, label=""];
8->36 [style = bold, label=""];
46->21 [style = bold, label=""];
71->67 [style = bold, label=""];
49->39 [style = bold, label=""];
65->50 [style = bold, label=""];
1->21 [style = bold, label=""];
37->62 [style = bold, label=""];
0->8 [style = bold, label=""];
27->17 [style = bold, label=""];
19->70 [style = dashed, label="0"];
57->38 [style = bold, label=""];
54->6 [style = bold, label=""];
39->47 [style = bold, label=""];
2->32 [style = bold, label=""];
43->29 [style = solid, label="jobId"];
41->58 [style = bold, label=""];
33->71 [style = bold, label=""];
40->37 [style = bold, label=""];
60->51 [style = bold, label=""];
19->42 [style = bold, label=""];
5->10 [style = bold, label=""];
15->34 [style = bold, label=""];
43->61 [style = solid, label="jobId"];
9->33 [style = bold, label=""];
68->32 [style = bold, label=""];
33->28 [style = bold, label=""];
26->41 [style = solid, label="mockJob"];
62->11 [style = solid, label="event3"];
4->19 [style = bold, label=""];
47->43 [style = bold, label=""];
24->61 [style = dashed, label="0"];
36->14 [style = bold, label=""];
25->2 [style = bold, label=""];
40->37 [style = solid, label="event2"];
23->35 [style = bold, label=""];
21->9 [style = bold, label=""];
44->55 [style = bold, label=""];
20->11 [style = solid, label="event3"];
13->61 [style = bold, label=""];
51->27 [style = bold, label=""];
18->7 [style = bold, label=""];
43->65 [style = solid, label="jobId"];
11->57 [style = bold, label=""];
66->70 [style = bold, label=""];
40->64 [style = dashed, label="0"];
31->59 [style = bold, label=""];
13->24 [style = bold, label=""];
46->28 [style = bold, label=""];
61->60 [style = solid, label="event4"];
20->62 [style = dashed, label="0"];
35->2 [style = bold, label=""];
9->46 [style = bold, label=""];
49->41 [style = solid, label="appAttemptId"];
42->16 [style = bold, label=""];
42->41 [style = solid, label="conf"];
65->50 [style = solid, label="event1"];
70->42 [style = bold, label=""];
64->37 [style = bold, label=""];
62->11 [style = bold, label=""];
16->44 [style = bold, label=""];
29->50 [style = bold, label=""];
9->46 [style = dotted, label="true"];
25->68 [style = bold, label=""];
50->64 [style = bold, label=""];
49->39 [style = solid, label="appAttemptId"];
24->60 [style = solid, label="event4"];
69->32 [style = bold, label=""];
20->11 [style = bold, label=""];
28->15 [style = bold, label=""];
61->60 [style = bold, label=""];
53->5 [style = bold, label=""];
43->20 [style = solid, label="jobId"];
43->40 [style = solid, label="jobId"];
37->20 [style = bold, label=""];
22->31 [style = bold, label=""];
10->3 [style = bold, label=""];
43->31 [style = solid, label="jobId"];
34->12 [style = bold, label=""];
31->59 [style = solid, label="deallocate"];
3->22 [style = bold, label=""];
63->19 [style = bold, label=""];
14->1 [style = bold, label=""];
45->54 [style = bold, label=""];
29->65 [style = dashed, label="0"];
46->71 [style = bold, label=""];
52->25 [style = bold, label=""];
42->16 [style = solid, label="conf"];
43->56 [style = solid, label="jobId"];
21->9 [style = solid, label="isReduce"];
50->40 [style = bold, label=""];
16->41 [style = solid, label="rm"];
35->69 [style = bold, label=""];
12->23 [style = bold, label=""];
59->0 [style = bold, label=""];
48->65 [style = bold, label=""];
33->21 [style = bold, label=""];
38->13 [style = bold, label=""];
55->45 [style = bold, label=""];
67->34 [style = bold, label=""];
6->30 [style = bold, label=""];
}
