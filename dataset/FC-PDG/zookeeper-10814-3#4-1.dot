digraph {
20 [style = filled, label = "Assert.assertTrue(takeResult(0( != null)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "NoSuchElementException e@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Thread.sleep(1000)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "i++@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testTakeWait2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "String dir = \"/testTakeWait2\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int i = 0@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Thread takeThread = new Thread(){public void run(){try {takeResult(0( = queueHandles(0(.take()}catch (KeeperException e) catch (InterruptedException e) }}@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "final String testString = \"Hello World\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String dir = \"/testRemove1\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testRemove1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i < clients.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final ZooKeeper clients = new ZooKeeper((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final byte(( takeResult = new byte((((((@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final DistributedQueue queueHandles = new DistributedQueue((((@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(new String(takeResult(0(),threadTestString)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "offerThread.start()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(false)@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final String threadTestString = testString + i@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DistributedQueue queueHandles = new DistributedQueue((((@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final int num_clients = 1@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Thread offerThread = new Thread(){public void run(){try {queueHandles(0(.offer(threadTestString.getBytes())}catch (KeeperException e) catch (InterruptedException e) }}@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "offerThread.join()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "i < num_attempts@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "queueHandles(0(.remove()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "clients(i( = createClient()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testRemove1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String testString = \"Hello World\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "takeThread.join()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ZooKeeper clients = new ZooKeeper((((@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "int num_attempts = 2@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "takeThread.start()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->8 [style = bold, label=""];
16->15 [style = bold, label=""];
8->10 [style = bold, label=""];
3->7 [style = dotted, label="true"];
27->32 [style = bold, label=""];
14->25 [style = bold, label=""];
7->1 [style = bold, label=""];
37->22 [style = solid, label="testString"];
32->35 [style = dotted, label="true"];
32->34 [style = dotted, label="true"];
32->24 [style = dotted, label="true"];
34->19 [style = bold, label=""];
35->20 [style = bold, label=""];
27->22 [style = solid, label="i"];
32->23 [style = dotted, label="true"];
8->33 [style = dashed, label="0"];
26->20 [style = solid, label="takeResult"];
13->5 [style = solid, label="i"];
32->20 [style = dotted, label="true"];
5->14 [style = solid, label="i"];
31->29 [style = bold, label=""];
33->13 [style = solid, label="dir"];
5->14 [style = bold, label=""];
29->34 [style = bold, label=""];
12->1 [style = bold, label=""];
36->33 [style = bold, label=""];
32->26 [style = bold, label=""];
18->28 [style = bold, label=""];
9->16 [style = bold, label=""];
22->30 [style = bold, label=""];
26->22 [style = bold, label=""];
22->24 [style = solid, label="threadTestString"];
9->6 [style = bold, label=""];
37->9 [style = bold, label=""];
14->13 [style = dotted, label="true"];
6->2 [style = bold, label=""];
23->35 [style = bold, label=""];
2->15 [style = dashed, label="0"];
6->18 [style = dashed, label="0"];
28->0 [style = bold, label=""];
21->27 [style = solid, label="i"];
0->14 [style = solid, label="i"];
0->14 [style = bold, label=""];
2->0 [style = bold, label=""];
32->27 [style = dotted, label="true"];
14->5 [style = dotted, label="true"];
9->18 [style = bold, label=""];
6->16 [style = dashed, label="0"];
3->7 [style = bold, label=""];
27->32 [style = solid, label="i"];
30->31 [style = bold, label=""];
25->32 [style = solid, label="num_attempts"];
19->23 [style = bold, label=""];
15->0 [style = bold, label=""];
14->12 [style = bold, label=""];
11->13 [style = bold, label=""];
21->32 [style = bold, label=""];
32->30 [style = dotted, label="true"];
2->28 [style = dashed, label="0"];
13->5 [style = bold, label=""];
26->24 [style = solid, label="takeResult"];
10->37 [style = dashed, label="0"];
4->8 [style = bold, label=""];
8->13 [style = solid, label="dir"];
14->11 [style = dotted, label="true"];
32->26 [style = dotted, label="true"];
10->9 [style = bold, label=""];
32->29 [style = dotted, label="true"];
11->13 [style = solid, label="clients"];
21->22 [style = solid, label="i"];
33->37 [style = bold, label=""];
20->24 [style = bold, label=""];
14->11 [style = bold, label=""];
24->27 [style = bold, label=""];
32->31 [style = dotted, label="true"];
32->19 [style = dotted, label="true"];
25->21 [style = bold, label=""];
21->32 [style = solid, label="i"];
32->22 [style = dotted, label="true"];
}
