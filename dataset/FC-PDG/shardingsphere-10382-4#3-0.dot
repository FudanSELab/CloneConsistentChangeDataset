digraph {
6 [style = filled, label = "assertSwapToObject['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ShadowDataSourceConfigurationYamlSwapper swapper = new ShadowDataSourceConfigurationYamlSwapper()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ShadowDataSourceConfiguration shadowDataSourceConfiguration = new ShadowDataSourceConfiguration(\"ds\",\"ds-shadow\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "actualConfiguration.getTables().entrySet().forEach(null)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "YamlShadowRuleConfiguration expectedConfiguration = buildYamlShadowRuleConfiguration()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "YamlShadowDataSourceConfiguration configuration = swapper.swapToYamlConfiguration(shadowDataSourceConfiguration)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "AlgorithmProvidedShadowRuleConfiguration targetConfiguration = swapper.swapToObject(yamlShadowRuleConfiguration)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "buildYamlShadowRuleConfiguration()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertThat(targetConfiguration.getColumn(),is(yamlShadowRuleConfiguration.getColumn()))@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(shadowDataSourceConfiguration.getSourceDataSourceName(),is(configuration.getSourceDataSourceName()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "actualConfiguration.getShadowAlgorithms().entrySet().forEach(null)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertSwapToObject['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "AlgorithmProvidedShadowRuleConfiguration actualConfiguration = swapper.swapToObject(expectedConfiguration)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertThat(actualConfiguration.isEnable(),is(expectedConfiguration.isEnable()))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertThat(shadowDataSourceConfiguration.getShadowDataSourceName(),is(configuration.getShadowDataSourceName()))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertSwapToYamlConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "targetConfiguration.getShadowTables().entrySet().forEach(null)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "actualConfiguration.getDataSources().entrySet().forEach(null)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "targetConfiguration.getDataSources().entrySet().forEach(null)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertThat(targetConfiguration.getShadowDataSourceNames(),is(yamlShadowRuleConfiguration.getShadowDataSourceNames()))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(targetConfiguration.getSourceDataSourceNames(),is(yamlShadowRuleConfiguration.getSourceDataSourceNames()))@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "targetConfiguration.getShadowAlgorithms().entrySet().forEach(null)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertBasicAlgorithmShadowRule(actualConfiguration,expectedConfiguration)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "ShadowRuleAlgorithmProviderConfigurationYamlSwapper swapper = new ShadowRuleAlgorithmProviderConfigurationYamlSwapper()@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
13->10 [style = bold, label=""];
14->16 [style = bold, label=""];
9->20 [style = dashed, label="0"];
15->13 [style = bold, label=""];
19->18 [style = bold, label=""];
21->19 [style = bold, label=""];
10->14 [style = bold, label=""];
9->4 [style = bold, label=""];
15->10 [style = solid, label="expectedConfiguration"];
12->15 [style = bold, label=""];
15->13 [style = solid, label="expectedConfiguration"];
7->0 [style = bold, label=""];
16->17 [style = bold, label=""];
19->22 [style = solid, label="shadowDataSourceConfiguration"];
8->22 [style = dashed, label="0"];
13->10 [style = solid, label="actualConfiguration"];
18->22 [style = bold, label=""];
5->17 [style = dashed, label="0"];
20->23 [style = bold, label=""];
22->20 [style = bold, label=""];
7->19 [style = dashed, label="0"];
0->8 [style = bold, label=""];
8->9 [style = bold, label=""];
7->15 [style = dashed, label="0"];
0->18 [style = dashed, label="0"];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
6->7 [style = bold, label=""];
4->23 [style = dashed, label="0"];
3->11 [style = dashed, label="0"];
2->5 [style = bold, label=""];
17->11 [style = bold, label=""];
}
