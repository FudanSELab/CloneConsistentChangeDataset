digraph {
20 [style = filled, label = "to.awaitDone(5,TimeUnit.SECONDS)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List<Observable<Integer>> sourceList = new ArrayList<Observable<Integer>>(3)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ts.awaitDone(5,TimeUnit.SECONDS)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "take['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "take['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "take['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Observable.merge(sourceList,2).take(5).subscribe(to)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Flowable.merge(sourceList,2).take(5).subscribe(ts)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "to.assertNoErrors()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "to.assertValueCount(5)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<Flowable<Integer>> sourceList = new ArrayList<Flowable<Integer>>(3)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "TestObserver<Integer> to = new TestObserver<Integer>()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<>()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "List<Flowable<Integer>> sourceList = new ArrayList<>(3)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "sourceList.add(Observable.range(0,100000).subscribeOn(Schedulers.io()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "sourceList.add(Flowable.range(0,100000).subscribeOn(Schedulers.io()))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sourceList.add(Flowable.range(0,100000).subscribeOn(Schedulers.io()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ts.assertValueCount(5)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "sourceList.add(Observable.range(0,100000).subscribeOn(Schedulers.io()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "sourceList.add(Flowable.range(0,100000).subscribeOn(Schedulers.io()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ts.assertNoErrors()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "sourceList.add(Observable.range(0,100000).subscribeOn(Schedulers.io()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
8->19 [style = dashed, label="0"];
4->16 [style = dashed, label="0"];
22->19 [style = bold, label=""];
16->14 [style = solid, label="to"];
15->21 [style = bold, label=""];
3->18 [style = dashed, label="0"];
1->3 [style = bold, label=""];
3->11 [style = bold, label=""];
8->12 [style = dashed, label="0"];
11->9 [style = bold, label=""];
12->0 [style = bold, label=""];
3->4 [style = bold, label=""];
5->20 [style = dashed, label="0"];
11->9 [style = solid, label="ts"];
8->0 [style = bold, label=""];
13->17 [style = bold, label=""];
1->17 [style = dashed, label="0"];
9->14 [style = dashed, label="0"];
19->13 [style = bold, label=""];
2->21 [style = dashed, label="0"];
10->12 [style = bold, label=""];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
0->13 [style = dashed, label="0"];
6->8 [style = bold, label=""];
7->15 [style = dashed, label="0"];
9->5 [style = bold, label=""];
5->7 [style = bold, label=""];
16->14 [style = bold, label=""];
4->9 [style = solid, label="ts"];
4->11 [style = dashed, label="0"];
20->15 [style = bold, label=""];
17->18 [style = bold, label=""];
14->20 [style = bold, label=""];
18->16 [style = bold, label=""];
}
