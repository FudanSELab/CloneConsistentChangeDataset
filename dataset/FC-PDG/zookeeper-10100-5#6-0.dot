digraph {
3 [style = filled, label = "assertEquals(\"expected sum is: \" + sum,sum,values.get(\"sum_\" + metricName))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"expected avg is: \" + avg,avg,(Double)values.get(\"avg_\" + metricName),0.001)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "checkMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Map<String,Object> values = MetricsUtils.currentServerMetrics()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(sum,values.get(\"sum_\" + metricName),\"expected sum is: \" + sum)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "long max@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(\"expected cnt is: \" + cnt,cnt,values.get(\"cnt_\" + metricName))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "long min@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "long cnt@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "long min@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "double avg@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String metricName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(max,values.get(\"max_\" + metricName))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(avg,(Double)values.get(\"avg_\" + metricName),0.000001)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(sum,values.get(\"sum_\" + metricName))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(max,values.get(\"max_\" + metricName),\"expected max is: \" + max)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "long cnt@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertEquals(min,values.get(\"min_\" + metricName),\"expected min is \" + min)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(cnt,values.get(\"cnt_\" + metricName),\"expected cnt is: \" + cnt)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "String metricName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertEquals(cnt,values.get(\"cnt_\" + metricName))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "checkMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "long cnt@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(avg,(Double)values.get(\"avg_\" + metricName),0.001,\"expected avg is: \" + avg)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "checkMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "String metricName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "long sum@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "long max@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertEquals(\"expected min is \" + min,min,values.get(\"min_\" + metricName))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "long min@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"expected max is: \" + max,max,values.get(\"max_\" + metricName))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "long sum@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(min,values.get(\"min_\" + metricName))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "double avg@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "long sum@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7->2 [style = dotted, label="true"];
7->6 [style = dotted, label="true"];
25->32 [style = dotted, label="true"];
16->23 [style = solid, label="metricName"];
16->21 [style = solid, label="metricName"];
3->24 [style = dashed, label="0"];
12->22 [style = solid, label="avg"];
7->10 [style = bold, label=""];
10->14 [style = bold, label=""];
18->16 [style = dotted, label="true"];
9->11 [style = solid, label="min"];
16->13 [style = solid, label="metricName"];
0->8 [style = solid, label="avg"];
25->34 [style = dotted, label="true"];
33->28 [style = bold, label=""];
25->31 [style = dotted, label="true"];
11->4 [style = bold, label=""];
11->29 [style = dashed, label="0"];
1->27 [style = dashed, label="0"];
30->33 [style = solid, label="max"];
5->8 [style = solid, label="metricName"];
5->1 [style = solid, label="metricName"];
1->3 [style = bold, label=""];
22->21 [style = bold, label=""];
20->13 [style = solid, label="max"];
34->29 [style = solid, label="metricName"];
31->27 [style = solid, label="cnt"];
15->21 [style = solid, label="cnt"];
18->19 [style = dotted, label="true"];
25->12 [style = dotted, label="true"];
1->21 [style = dashed, label="0"];
34->28 [style = solid, label="metricName"];
32->24 [style = solid, label="sum"];
7->9 [style = dotted, label="true"];
18->20 [style = dotted, label="true"];
7->0 [style = dotted, label="true"];
8->28 [style = dashed, label="0"];
4->33 [style = dashed, label="0"];
2->3 [style = solid, label="sum"];
34->24 [style = solid, label="metricName"];
26->29 [style = solid, label="min"];
7->5 [style = dotted, label="true"];
7->12 [style = dotted, label="true"];
3->23 [style = dashed, label="0"];
8->1 [style = bold, label=""];
8->22 [style = dashed, label="0"];
29->33 [style = bold, label=""];
16->22 [style = solid, label="metricName"];
10->11 [style = bold, label=""];
18->12 [style = dotted, label="true"];
6->1 [style = solid, label="cnt"];
17->23 [style = solid, label="sum"];
12->28 [style = solid, label="avg"];
18->10 [style = bold, label=""];
10->29 [style = bold, label=""];
34->27 [style = solid, label="metricName"];
34->33 [style = solid, label="metricName"];
11->14 [style = dashed, label="0"];
16->14 [style = solid, label="metricName"];
5->3 [style = solid, label="metricName"];
4->8 [style = bold, label=""];
25->10 [style = bold, label=""];
27->24 [style = bold, label=""];
19->14 [style = solid, label="min"];
13->22 [style = bold, label=""];
28->27 [style = bold, label=""];
14->13 [style = bold, label=""];
18->15 [style = dotted, label="true"];
5->11 [style = solid, label="metricName"];
18->17 [style = dotted, label="true"];
4->13 [style = dashed, label="0"];
25->30 [style = dotted, label="true"];
21->23 [style = bold, label=""];
25->26 [style = dotted, label="true"];
5->4 [style = solid, label="metricName"];
12->4 [style = solid, label="max"];
}
