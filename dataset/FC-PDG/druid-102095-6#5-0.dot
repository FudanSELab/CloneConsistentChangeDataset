digraph {
21 [style = filled, label = "onMatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final Project leftProject = left.getPartialDruidQuery().getSelectProject()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "leftFilter = left.getPartialDruidQuery().getWhereFilter()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "int i = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i < right.getRowType().getFieldCount()@@@38@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final DruidJoinQueryRel druidJoin = DruidJoinQueryRel.create(join.copy(join.getTraitSet(),conditionAnalysis.getCondition(rexBuilder),newLeft,newRight,join.getJoinType(),join.isSemiJoinDone()),leftFilter,left.getQueryMaker())@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "onMatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "final Filter leftFilter@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "return canHandleCondition(join.getCondition(),join.getLeft().getRowType()) && left.getPartialDruidQuery() != null && right.getPartialDruidQuery() != null@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final RexBuilder rexBuilder = join.getCluster().getRexBuilder()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "RelOptRuleCall call@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Join join = call.rel(0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "call.transformTo(relBuilder.build())@@@46@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "right.getPartialDruidQuery().stage() == PartialDruidQuery.Stage.SELECT_PROJECT && right.getPartialDruidQuery().getWhereFilter() == null && !right.getPartialDruidQuery().getSelectProject().isMapping() && conditionAnalysis.onlyUsesMappingsFromRightProject(right.getPartialDruidQuery().getSelectProject())@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "left.getPartialDruidQuery().stage() == PartialDruidQuery.Stage.SELECT_PROJECT && left.getPartialDruidQuery().getWhereFilter() == null@@@11@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "conditionAnalysis = conditionAnalysis.pushThroughRightProject(rightProject)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final RelNode leftScan = left.getPartialDruidQuery().getScan()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "newRight = right.withPartialQuery(PartialDruidQuery.create(rightScan))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "i < left.getRowType().getFieldCount()@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "newLeft = left@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "matches['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ConditionAnalysis conditionAnalysis = analyzeCondition(join.getCondition(),join.getLeft().getRowType()).get()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final DruidRel<?> newRight@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "newProjectExprs.add(rexBuilder.makeInputRef(join.getRowType().getFieldList().get(left.getRowType().getFieldCount() + i).getType(),newLeft.getRowType().getFieldCount() + i))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "left.getPartialDruidQuery().stage() == PartialDruidQuery.Stage.SELECT_PROJECT@@@12@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "final DruidJoinQueryRel druidJoin = DruidJoinQueryRel.create(join.copy(join.getTraitSet(),conditionAnalysis.getCondition(rexBuilder),newLeft,newRight,join.getJoinType(),join.isSemiJoinDone()),left.getQueryMaker())@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "newProjectExprs.addAll(leftProject.getProjects())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final DruidRel<?> right = call.rel(2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final Project rightProject = right.getPartialDruidQuery().getSelectProject()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Iterables.addAll(newProjectExprs,RexUtil.shift(rightProject.getProjects(),newLeft.getRowType().getFieldCount()))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "newProjectExprs.add(rexBuilder.makeInputRef(join.getRowType().getFieldList().get(i).getType(),i))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "newLeft = left.withPartialQuery(PartialDruidQuery.create(leftScan))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "conditionAnalysis = conditionAnalysis.pushThroughLeftProject(leftProject)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final DruidRel<?> left = call.rel(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int i = 0@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "leftFilter = null@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "final List<RexNode> newProjectExprs = new ArrayList<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i++@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "newRight = right@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "RelOptRuleCall call@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final RelNode rightScan = right.getPartialDruidQuery().getScan()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final DruidRel<?> newLeft@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i++@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final RelBuilder relBuilder = call.builder().push(druidJoin).project(RexUtil.fixUp(rexBuilder,newProjectExprs,RelOptUtil.getFieldTypeList(druidJoin.getRowType())))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34->9 [style = bold, label=""];
23->16 [style = solid, label="newProjectExprs"];
7->3 [style = solid, label="i"];
0->20 [style = dotted, label="false"];
30->25 [style = solid, label="leftScan"];
37->35 [style = dotted, label="false"];
1->36 [style = solid, label="rexBuilder"];
34->15 [style = bold, label=""];
24->39 [style = bold, label=""];
34->9 [style = dotted, label="true"];
35->36 [style = solid, label="leftFilter"];
40->23 [style = bold, label=""];
7->9 [style = solid, label="i"];
4->30 [style = dotted, label="true"];
3->34 [style = bold, label=""];
8->1 [style = bold, label=""];
37->7 [style = dotted, label="false"];
3->9 [style = solid, label="i"];
10->8 [style = bold, label=""];
24->11 [style = bold, label=""];
15->0 [style = bold, label=""];
27->17 [style = bold, label=""];
20->18 [style = dotted, label="true"];
4->24 [style = dotted, label="true"];
17->36 [style = dashed, label="0"];
11->25 [style = bold, label=""];
14->37 [style = bold, label=""];
37->34 [style = dotted, label="false"];
5->10 [style = bold, label=""];
0->31 [style = dotted, label="false"];
19->18 [style = bold, label=""];
4->7 [style = dotted, label="false"];
25->36 [style = solid, label="newLeft"];
6->19 [style = solid, label="i"];
20->31 [style = bold, label=""];
37->15 [style = dotted, label="false"];
22->23 [style = bold, label=""];
32->27 [style = solid, label="rightProject"];
21->28 [style = dotted, label="true"];
26->13 [style = bold, label=""];
15->35 [style = bold, label=""];
4->15 [style = dotted, label="false"];
23->14 [style = bold, label=""];
18->20 [style = bold, label=""];
35->0 [style = bold, label=""];
38->28 [style = dotted, label="true"];
23->26 [style = solid, label="newProjectExprs"];
28->43 [style = dashed, label="0"];
42->43 [style = dotted, label="true"];
31->17 [style = solid, label="newRight"];
2->27 [style = bold, label=""];
1->17 [style = solid, label="rexBuilder"];
20->19 [style = bold, label=""];
14->4 [style = bold, label=""];
38->5 [style = bold, label=""];
30->24 [style = bold, label=""];
6->20 [style = solid, label="i"];
8->41 [style = bold, label=""];
37->11 [style = dotted, label="true"];
0->6 [style = dotted, label="false"];
37->30 [style = bold, label=""];
33->2 [style = solid, label="rightScan"];
4->11 [style = dotted, label="true"];
31->36 [style = bold, label=""];
18->20 [style = solid, label="i"];
7->34 [style = solid, label="i"];
32->16 [style = bold, label=""];
25->17 [style = solid, label="newLeft"];
37->25 [style = dotted, label="true"];
39->36 [style = solid, label="leftFilter"];
4->7 [style = bold, label=""];
37->7 [style = bold, label=""];
8->31 [style = solid, label="right"];
6->20 [style = bold, label=""];
6->18 [style = solid, label="i"];
21->5 [style = bold, label=""];
15->36 [style = solid, label="newLeft"];
18->19 [style = solid, label="i"];
1->26 [style = solid, label="rexBuilder"];
9->3 [style = bold, label=""];
33->32 [style = bold, label=""];
20->19 [style = dotted, label="true"];
0->16 [style = dotted, label="true"];
24->12 [style = solid, label="leftProject"];
31->17 [style = bold, label=""];
1->29 [style = bold, label=""];
4->34 [style = dotted, label="false"];
4->12 [style = dotted, label="true"];
0->32 [style = dotted, label="true"];
4->37 [style = dashed, label="0"];
3->34 [style = solid, label="i"];
10->15 [style = solid, label="left"];
2->36 [style = solid, label="newRight"];
22->40 [style = bold, label=""];
17->26 [style = bold, label=""];
27->36 [style = bold, label=""];
0->6 [style = bold, label=""];
31->36 [style = solid, label="newRight"];
37->24 [style = dotted, label="true"];
0->33 [style = dotted, label="true"];
37->12 [style = dotted, label="true"];
36->26 [style = bold, label=""];
4->25 [style = dotted, label="true"];
16->2 [style = bold, label=""];
2->17 [style = solid, label="newRight"];
39->11 [style = bold, label=""];
12->0 [style = bold, label=""];
37->30 [style = dotted, label="true"];
34->3 [style = dotted, label="true"];
7->34 [style = bold, label=""];
4->30 [style = bold, label=""];
0->33 [style = bold, label=""];
25->12 [style = bold, label=""];
15->17 [style = solid, label="newLeft"];
37->39 [style = dotted, label="true"];
42->5 [style = bold, label=""];
29->22 [style = bold, label=""];
0->2 [style = dotted, label="true"];
0->27 [style = dotted, label="true"];
}
