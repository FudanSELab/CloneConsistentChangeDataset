digraph {
16 [style = filled, label = "String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"suggest\").field(\"type\",\"completion\").startArray(\"contexts\").startObject().field(\"name\",\"place_type\").field(\"type\",\"category\").field(\"path\",\"cat\").endObject().endArray().startObject(\"fields\").startObject(\"subsuggest\").field(\"type\",\"completion\").startArray(\"contexts\").startObject().field(\"name\",\"place_type\").field(\"type\",\"category\").field(\"path\",\"cat\").endObject().endArray().endObject().endObject().endObject().endObject().endObject().endObject())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"keywordfield\").field(\"type\",\"keyword\").startObject(\"fields\").startObject(\"subsuggest\").field(\"type\",\"completion\").startArray(\"contexts\").startObject().field(\"name\",\"place_type\").field(\"type\",\"category\").field(\"path\",\"cat\").endObject().endArray().endObject().endObject().endObject().endObject().endObject().endObject())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().array(\"keywordfield\",\"key1\",\"key2\",\"key3\").endObject()),XContentType.JSON))@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ParsedDocument parsedDocument = defaultMapper.parse(source(null))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().startObject(\"suggest\").array(\"input\",\"timmy\",\"starbucks\").startObject(\"contexts\").array(\"place_type\",\"cafe\",\"food\").endObject().field(\"weight\",3).endObject().endObject()),XContentType.JSON))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(indexableFields.getFields(\"keywordfield\"),arrayContainingInAnyOrder(keywordField(\"key1\"),sortedSetDocValuesField(\"key1\"),keywordField(\"key2\"),sortedSetDocValuesField(\"key2\"),keywordField(\"key3\"),sortedSetDocValuesField(\"key3\")))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertThat(indexableFields.getFields(\"suggest.subsuggest\"),arrayContainingInAnyOrder(contextSuggestField(\"timmy\"),contextSuggestField(\"starbucks\")))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(indexableFields.getFields(\"suggest\"),arrayContainingInAnyOrder(contextSuggestField(\"timmy\"),contextSuggestField(\"starbucks\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ParseContext.Document indexableFields = parsedDocument.rootDoc()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(indexableFields.getFields(\"keywordfield.subsuggest\"),arrayContainingInAnyOrder(contextSuggestField(\"key1\"),contextSuggestField(\"key2\"),contextSuggestField(\"key3\")))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testKeywordWithSubCompletionAndContext['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(indexableFields.getFields(\"field\"),arrayContainingInAnyOrder(keywordField(\"key1\"),sortedSetDocValuesField(\"key1\"),keywordField(\"key2\"),sortedSetDocValuesField(\"key2\"),keywordField(\"key3\"),sortedSetDocValuesField(\"key3\")))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "ParseContext.Document indexableFields = parsedDocument.rootDoc()@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertThat(indexableFields.getFields(\"field.subsuggest\"),arrayContainingInAnyOrder(contextSuggestField(\"key1\"),contextSuggestField(\"key2\"),contextSuggestField(\"key3\")))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testCompletionWithContextAndSubCompletion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testKeywordWithSubCompletionAndContext['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
5->14 [style = dashed, label="0"];
4->16 [style = dashed, label="0"];
7->10 [style = bold, label=""];
0->17 [style = bold, label=""];
6->9 [style = dashed, label="0"];
16->1 [style = solid, label="mapping"];
3->6 [style = bold, label=""];
11->9 [style = bold, label=""];
2->4 [style = bold, label=""];
13->16 [style = bold, label=""];
14->0 [style = bold, label=""];
5->0 [style = bold, label=""];
4->1 [style = solid, label="mapping"];
16->1 [style = bold, label=""];
6->15 [style = dashed, label="0"];
10->12 [style = bold, label=""];
12->8 [style = bold, label=""];
17->15 [style = bold, label=""];
1->14 [style = bold, label=""];
4->1 [style = bold, label=""];
8->11 [style = bold, label=""];
3->11 [style = dashed, label="0"];
}
