digraph {
18 [style = filled, label = "clusterClient.setDetached(true)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "Assert.assertTrue(\"GOT: \" + e.getCause().getMessage(),e.getCause() instanceof RuntimeException)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final Deadline deadline = TEST_TIMEOUT.fromNow()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final long numElements = 1024L@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "executeValueQuery(deadline,client,jobId,\"hakuna\",valueState,numElements)@@@22@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(JobStatus.RUNNING,jobStatus.state())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(Integer.MAX_VALUE,1000L))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final JobID wrongJobId = new JobID()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "executeValueQuery(deadline,client,jobId,\"hakuna\",valueState,numElements)@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "cluster.submitJobDetached(closableJobGraph.getJobGraph())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "fail()@@@39@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "unknownQSName.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "DataStream<Tuple2<Integer,Long>> source = env.addSource(new TestAscendingValueSource(numElements))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> unknownQSName = client.getKvState(closableJobGraph.getJobId(),\"wrong-hakuna\",0,BasicTypeInfo.INT_TYPE_INFO,valueState)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testWrongJobIdAndWrongQueryableStateName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "cluster.submitJobDetached(jobGraph)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "fail(\"Unexpected type of exception: \" + f.getMessage())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final JobGraph jobGraph = autoCancellableJob.getJobGraph()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "ExecutionException e@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testValueState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final JobID jobId = autoCancellableJob.getJobId()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "fail()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testValueState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "source.keyBy(new KeySelector<Tuple2<Integer,Long>,Integer>(){@Override public Integer getKey(Tuple2<Integer,Long> value){return value.f0}}).asQueryableState(\"hakuna\",valueState)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "TestingJobManagerMessages.JobStatusIs jobStatus = runningFuture.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertTrue(\"GOT: \" + e.getCause().getMessage(),e.getCause().getMessage().contains(\"FlinkJobNotFoundException: Could not find Flink job (\" + wrongJobId + \")\"))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "env.setStateBackend(stateBackend)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "unknownJobFuture.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ValueStateDescriptor<Tuple2<Integer,Long>> valueState = new ValueStateDescriptor<>(\"any\",source.getType())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "env.setParallelism(maxParallelism)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CompletableFuture<TestingJobManagerMessages.JobStatusIs> runningFuture = notifyWhenJobStatusIs(closableJobGraph.getJobId(),JobStatus.RUNNING,deadline)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Exception f@@@33@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> unknownJobFuture = client.getKvState(wrongJobId,\"hakuna\",0,BasicTypeInfo.INT_TYPE_INFO,valueState)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final Deadline deadline = Deadline.now().plus(TEST_TIMEOUT)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "clusterClient.submitJob(jobGraph,.getClassLoader())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34->32 [style = dotted, label="true"];
28->29 [style = bold, label=""];
5->8 [style = bold, label=""];
12->15 [style = solid, label="numElements"];
1->4 [style = bold, label=""];
22->33 [style = bold, label=""];
5->8 [style = solid, label="valueState"];
7->9 [style = solid, label="jobId"];
7->21 [style = dashed, label="0"];
3->35 [style = dashed, label="0"];
31->22 [style = bold, label=""];
23->24 [style = solid, label="wrongJobId"];
19->31 [style = bold, label=""];
12->11 [style = solid, label="numElements"];
2->1 [style = bold, label=""];
0->12 [style = bold, label=""];
0->21 [style = solid, label="deadline"];
7->15 [style = solid, label="jobId"];
27->31 [style = bold, label=""];
3->6 [style = bold, label=""];
30->32 [style = bold, label=""];
16->17 [style = bold, label=""];
29->23 [style = bold, label=""];
0->17 [style = dashed, label="0"];
12->9 [style = solid, label="numElements"];
34->30 [style = bold, label=""];
7->3 [style = bold, label=""];
8->7 [style = bold, label=""];
6->18 [style = dashed, label="0"];
3->18 [style = bold, label=""];
35->28 [style = bold, label=""];
25->27 [style = bold, label=""];
12->13 [style = bold, label=""];
0->9 [style = solid, label="deadline"];
11->5 [style = bold, label=""];
26->0 [style = bold, label=""];
23->24 [style = bold, label=""];
17->12 [style = bold, label=""];
5->15 [style = solid, label="valueState"];
24->25 [style = bold, label=""];
10->0 [style = bold, label=""];
8->21 [style = bold, label=""];
5->9 [style = solid, label="valueState"];
14->15 [style = bold, label=""];
20->19 [style = dotted, label="true"];
6->9 [style = bold, label=""];
21->35 [style = bold, label=""];
4->11 [style = bold, label=""];
20->19 [style = bold, label=""];
5->31 [style = solid, label="valueState"];
34->30 [style = dotted, label="true"];
18->14 [style = bold, label=""];
32->31 [style = bold, label=""];
3->14 [style = solid, label="jobGraph"];
17->15 [style = solid, label="deadline"];
13->2 [style = bold, label=""];
5->24 [style = solid, label="valueState"];
3->6 [style = solid, label="jobGraph"];
}
