digraph {
7 [style = filled, label = "final Set<RelTableRef> tableReferences = Sets.newTreeSet(mq.getTableReferences(rel))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testAllPredicatesUnionMultiTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testTableReferenceForMinus['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final RelNode rel = convertSql(sql)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testAllPredicatesUnionMultiTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String sql = \"select emp.deptno, emp.sal from emp\" + \"except all select emp.deptno, emp.sal from emp where empno = 5\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(tableReferences.toString(),equalTo(\"((CATALOG, SALES, EMP(.#0, \" + \"(CATALOG, SALES, EMP(.#1, \" + \"(CATALOG, SALES, EMP(.#2(\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertThat(tableReferences,sortsAs(\"((CATALOG, SALES, EMP(.#0, \" + \"(CATALOG, SALES, EMP(.#1, \" + \"(CATALOG, SALES, EMP(.#2(\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(inputSet.pulledUpPredicates.toString(),equalTo(\"(=((CATALOG, SALES, EMP(.#2.$0, 5)(\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final String sql = \"select x.sal from\" + \"(select a.deptno, a.sal from (select * from emp) as a\" + \"union all select emp.deptno, emp.sal from emp\" + \"union all select emp.deptno, emp.sal from emp where empno = 5) as x\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(tableReferences.toString(),equalTo(\"((CATALOG, SALES, EMP(.#0, (CATALOG, SALES, EMP(.#1(\"))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final RelMetadataQuery mq = rel.getCluster().getMetadataQuery()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final RelOptPredicateList inputSet = mq.getAllPredicates(rel)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(inputSet.pulledUpPredicates,sortsAs(\"(=((CATALOG, SALES, EMP(.#2.$0, 5)(\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
7->13 [style = bold, label=""];
6->3 [style = bold, label=""];
7->10 [style = bold, label=""];
1->3 [style = solid, label="rel"];
10->3 [style = bold, label=""];
11->12 [style = bold, label=""];
0->12 [style = dashed, label="0"];
12->1 [style = bold, label=""];
3->4 [style = bold, label=""];
12->1 [style = solid, label="sql"];
6->10 [style = dashed, label="0"];
8->0 [style = bold, label=""];
3->9 [style = bold, label=""];
4->9 [style = dashed, label="0"];
0->1 [style = solid, label="sql"];
2->0 [style = bold, label=""];
6->13 [style = dashed, label="0"];
0->1 [style = bold, label=""];
7->10 [style = solid, label="tableReferences"];
7->6 [style = bold, label=""];
5->7 [style = bold, label=""];
1->7 [style = solid, label="rel"];
}
