digraph {
6 [style = filled, label = "testCommaJoinLeftFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testInnerJoinCastLeft['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Map<String,Object> queryContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testQuery(\"SELECT foo.m1, l.k, l.v\" + \"FROM foo\" + \"INNER JOIN lookup.lookyloo l ON CAST(foo.m1 AS VARCHAR) = l.k\",ImmutableList.of(newScanQueryBuilder().dataSource(join(new TableDataSource(CalciteTests.DATASOURCE1),new LookupDataSource(\"lookyloo\"),\"j0.\",equalsCondition(DruidExpression.fromExpression(\"CAST(\"m1\", 'STRING')\"),DruidExpression.fromColumn(\"j0.k\")),JoinType.INNER)).intervals(querySegmentSpec(Filtration.eternity())).columns(\"j0.k\",\"j0.v\",\"m1\").context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testQuery(\"SELECT foo.dim1, foo.dim2, l.k, l.v\" + \"FROM foo, lookup.lookyloo l\" + \"WHERE SUBSTRING(foo.dim2, 1, 1) = l.k\",ImmutableList.of(newScanQueryBuilder().dataSource(join(new TableDataSource(CalciteTests.DATASOURCE1),new LookupDataSource(\"lookyloo\"),\"j0.\",equalsCondition(DruidExpression.fromExpression(\"substring(\"dim2\", 0, 1)\"),DruidExpression.fromColumn(\"j0.k\")),JoinType.INNER)).intervals(querySegmentSpec(Filtration.eternity())).columns(\"dim1\",\"dim2\",\"j0.k\",\"j0.v\").context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ab87ef,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ab87f6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ab87fd))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testQuery(\"SELECT foo.m1, l.k, l.v\" + \"FROM foo\" + \"INNER JOIN lookup.lookyloo l ON CAST(foo.m1 AS VARCHAR) = l.k\",queryContext,ImmutableList.of(newScanQueryBuilder().dataSource(join(new TableDataSource(CalciteTests.DATASOURCE1),new LookupDataSource(\"lookyloo\"),\"j0.\",equalsCondition(DruidExpression.fromExpression(\"CAST(\"m1\", 'STRING')\"),DruidExpression.fromColumn(\"j0.k\")),JoinType.INNER)).intervals(querySegmentSpec(Filtration.eternity())).columns(\"j0.k\",\"j0.v\",\"m1\").context(queryContext).build()),ImmutableList.of())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "testInnerJoinCastLeft['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6->5 [style = bold, label=""];
4->3 [style = solid, label="queryContext"];
0->3 [style = dashed, label="0"];
1->0 [style = bold, label=""];
0->5 [style = dashed, label="0"];
2->3 [style = bold, label=""];
2->4 [style = dotted, label="true"];
}
