digraph {
7 [style = filled, label = "OrderByContext actualOrderByContext = new OrderByContextEngine().createOrderBy(getShardingSphereSchemaForMySQLSelectWithoutOrderBy(),selectStatement,groupByContext)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertCreateOrderByContextForMySQLSelectWithoutOrderByOnPlainQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "when(selectStatement.getProjections().getProjections()).thenReturn(Collections.emptyList())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(actualItemSegment.getColumn().getIdentifier().getValue(),is(\"order_id\"))@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertCreateOrderByContextForMySQLSelectWithoutOrderByOnPlainQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(actualOrderByContext.isGenerated())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "GroupByContext groupByContext = new GroupByContext(Collections.emptyList())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ColumnOrderByItemSegment actualItemSegment = (ColumnOrderByItemSegment)actualOrderByContext.getItems().iterator().next().getSegment()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SelectStatement selectStatement = mock(,RETURNS_DEEP_STUBS)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(selectStatement.getFrom()).thenReturn(new SimpleTableSegment(new TableNameSegment(0,1,new IdentifierValue(\"t_order\"))))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(actualOrderByContext.isGenerated())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(actualOrderByContext.getItems().size(),is(1))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertCreateOrderByContextForMySQLSelectWithoutOrderByOnOrderByQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(selectStatement.getOrderBy()).thenReturn(Optional.of(new OrderBySegment(0,1,Collections.singleton(new ColumnOrderByItemSegment(new ColumnSegment(0,1,new IdentifierValue(\"order_id\")),OrderDirection.ASC)))))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->2 [style = bold, label=""];
4->5 [style = bold, label=""];
10->1 [style = bold, label=""];
12->4 [style = bold, label=""];
3->1 [style = bold, label=""];
3->10 [style = bold, label=""];
7->12 [style = bold, label=""];
1->7 [style = bold, label=""];
9->8 [style = bold, label=""];
3->11 [style = bold, label=""];
0->4 [style = bold, label=""];
11->1 [style = bold, label=""];
13->8 [style = bold, label=""];
8->7 [style = solid, label="selectStatement"];
7->0 [style = bold, label=""];
6->8 [style = bold, label=""];
8->3 [style = bold, label=""];
1->7 [style = solid, label="groupByContext"];
0->12 [style = dashed, label="0"];
}
