digraph {
21 [style = filled, label = "routerResponse.setResponseName(getCommandName())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "CallContext.current().setEventDetails(\"Vm Id: \" + getId())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "result != null@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "DomainRouterResponse routerResponse = _responseGenerator.createDomainRouterResponse(result)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "execute['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "setResponseObject(routerResponse)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "VirtualRouter router = _routerService.findRouter(getId())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "router == null || router.getRole() != Role.INTERNAL_LB_VM@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "execute['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "result = _internalLbSvc.startInternalLbVm(getId(),CallContext.current().getCallingAccount(),CallContext.current().getCallingUserId())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "setResponseObject(response)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "result != null@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "response.setResponseName(getCommandName())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,\"Fail to reboot system vm\")@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "CallContext.current().setEventDetails(\"Internal Lb Vm Id: \" + getId())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "VirtualRouter result = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "CallContext.current().setEventDetails(\"Vm Id: \" + this._uuidMgr.getUuid(,getId()))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "throw new InvalidParameterValueException(\"Can't find internal lb vm by id\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SystemVmResponse response = _responseGenerator.createSystemVmResponse(result)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "VirtualMachine result = _mgr.rebootSystemVM(this)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,\"Failed to start internal lb vm\")@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "execute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
17->10 [style = bold, label=""];
7->2 [style = dotted, label="true"];
10->20 [style = bold, label=""];
5->14 [style = dashed, label="0"];
9->0 [style = bold, label=""];
3->1 [style = bold, label=""];
2->1 [style = solid, label="response"];
11->18 [style = solid, label="result"];
18->12 [style = dotted, label="false"];
3->21 [style = dashed, label="0"];
1->15 [style = dashed, label="0"];
21->15 [style = bold, label=""];
2->3 [style = bold, label=""];
18->21 [style = dotted, label="true"];
18->15 [style = dotted, label="true"];
18->12 [style = bold, label=""];
16->13 [style = solid, label="result"];
5->9 [style = dashed, label="0"];
16->17 [style = bold, label=""];
17->10 [style = solid, label="router"];
11->13 [style = solid, label="result"];
16->18 [style = solid, label="result"];
11->18 [style = bold, label=""];
7->6 [style = dotted, label="false"];
0->7 [style = bold, label=""];
6->12 [style = dashed, label="0"];
0->2 [style = solid, label="result"];
20->18 [style = bold, label=""];
10->11 [style = dotted, label="false"];
19->14 [style = bold, label=""];
5->0 [style = bold, label=""];
7->3 [style = dotted, label="true"];
10->20 [style = dotted, label="true"];
7->2 [style = bold, label=""];
2->13 [style = dashed, label="0"];
0->7 [style = solid, label="result"];
7->6 [style = bold, label=""];
8->9 [style = bold, label=""];
18->13 [style = bold, label=""];
7->1 [style = dotted, label="true"];
13->21 [style = bold, label=""];
4->5 [style = bold, label=""];
18->13 [style = dotted, label="true"];
10->11 [style = bold, label=""];
13->15 [style = solid, label="routerResponse"];
}
