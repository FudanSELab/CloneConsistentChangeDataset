digraph {
5 [style = filled, label = "assertEquals(t1,t2)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "t1.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.YELLOW))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "t2 = (CompositeTitle)t1.clone()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "t1.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.BLUE))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "CompositeTitle t2 = (CompositeTitle)TestUtilities.serialised(t1)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CompositeTitle t1 = new CompositeTitle(new BlockContainer())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CompositeTitle t2 = (CompositeTitle)TestUtils.serialised(t1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "CloneNotSupportedException e@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "fail(e.toString())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(t1 != t2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "t1.getContainer().add(new TextTitle(\"T1\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "CompositeTitle t2 = null@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(t1.getClass() == t2.getClass())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(t1.equals(t2))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2->5 [style = solid, label="t2"];
16->15 [style = bold, label=""];
1->3 [style = bold, label=""];
8->14 [style = bold, label=""];
7->5 [style = solid, label="t2"];
4->2 [style = bold, label=""];
2->7 [style = dashed, label="0"];
12->1 [style = bold, label=""];
3->4 [style = bold, label=""];
4->7 [style = bold, label=""];
6->1 [style = bold, label=""];
3->10 [style = bold, label=""];
15->8 [style = solid, label="t2"];
7->5 [style = bold, label=""];
10->16 [style = bold, label=""];
1->7 [style = solid, label="t1"];
1->2 [style = solid, label="t1"];
0->1 [style = bold, label=""];
15->11 [style = solid, label="t2"];
2->16 [style = dashed, label="0"];
1->8 [style = solid, label="t1"];
9->13 [style = dotted, label="true"];
13->8 [style = bold, label=""];
4->10 [style = dashed, label="0"];
14->11 [style = bold, label=""];
15->8 [style = bold, label=""];
1->5 [style = solid, label="t1"];
2->5 [style = bold, label=""];
9->13 [style = bold, label=""];
}
