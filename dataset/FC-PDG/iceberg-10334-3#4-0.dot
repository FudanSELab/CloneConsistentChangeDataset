digraph {
31 [style = filled, label = "Dataset<Row> df2 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(2,\"b\")),)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(\"Actual results should have one row\",1,actual.size())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testAllEntriesTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i < expected.size()@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "TestHelpers.assertEqualsSafe(filesTable.schema().asStruct(),expected.get(0),actual.get(0))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "expected.add((GenericData.Record)record.get(\"data_file\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "df2.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(\"Actual results should have 3 rows\",3,actual.size())@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testAllEntriesTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Dataset<Row> df1 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"a\")),)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "rows.forEach(null)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "expected.add(record)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TestHelpers.assertEqualsSafe(entriesTable.schema().asStruct(),expected.get(i),actual.get(i))@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "testFilesTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.builderFor(SCHEMA).identity(\"id\").build())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Dataset<Row> df1 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"a\")),)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "df1.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Entries table should have 3 rows\",3,expected.size())@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"all_entries\")).orderBy(\"snapshot_id\").collectAsList()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"files_test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "i += 1@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "df2.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "table.newDelete().deleteFromRowFilter(Expressions.equal(\"id\",1)).commit()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"entries\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(\"Files table should have one row\",1,expected.size())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "(Integer)record.get(\"status\") < 2@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Table filesTable = loadTable(tableIdentifier,\"files\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"files\")).collectAsList()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Entries table should have 3 rows\",3,expected.size())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "df1.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"entries_test\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Actual results should have 3 rows\",3,actual.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.unpartitioned())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"all_entries\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = solid, label="i"];
9->19 [style = bold, label=""];
5->14 [style = bold, label=""];
12->0 [style = bold, label=""];
7->29 [style = dashed, label="0"];
26->38 [style = bold, label=""];
23->21 [style = solid, label="i"];
28->35 [style = bold, label=""];
19->9 [style = bold, label=""];
13->4 [style = bold, label=""];
21->22 [style = bold, label=""];
28->26 [style = dotted, label="true"];
3->16 [style = solid, label="i"];
20->31 [style = bold, label=""];
36->20 [style = bold, label=""];
2->5 [style = bold, label=""];
29->37 [style = bold, label=""];
20->18 [style = bold, label=""];
25->19 [style = bold, label=""];
28->38 [style = bold, label=""];
31->8 [style = bold, label=""];
28->26 [style = bold, label=""];
23->22 [style = solid, label="i"];
30->7 [style = solid, label="tableIdentifier"];
26->35 [style = bold, label=""];
25->14 [style = bold, label=""];
21->22 [style = dotted, label="true"];
13->39 [style = dashed, label="0"];
0->1 [style = solid, label="tableIdentifier"];
21->23 [style = dotted, label="true"];
14->15 [style = solid, label="i"];
8->6 [style = bold, label=""];
24->0 [style = bold, label=""];
7->11 [style = bold, label=""];
4->20 [style = bold, label=""];
0->1 [style = bold, label=""];
16->22 [style = solid, label="i"];
35->28 [style = bold, label=""];
10->19 [style = bold, label=""];
23->21 [style = bold, label=""];
9->28 [style = dashed, label="0"];
39->36 [style = bold, label=""];
19->25 [style = bold, label=""];
30->33 [style = bold, label=""];
16->21 [style = bold, label=""];
30->8 [style = solid, label="tableIdentifier"];
11->10 [style = bold, label=""];
37->40 [style = bold, label=""];
33->39 [style = bold, label=""];
11->37 [style = dashed, label="0"];
3->15 [style = solid, label="i"];
9->17 [style = bold, label=""];
16->3 [style = bold, label=""];
0->13 [style = solid, label="tableIdentifier"];
0->30 [style = dashed, label="0"];
20->31 [style = dashed, label="0"];
30->39 [style = solid, label="tableIdentifier"];
7->29 [style = bold, label=""];
15->16 [style = bold, label=""];
0->6 [style = solid, label="tableIdentifier"];
26->28 [style = bold, label=""];
3->15 [style = bold, label=""];
15->3 [style = bold, label=""];
8->7 [style = bold, label=""];
15->16 [style = dotted, label="true"];
32->30 [style = bold, label=""];
30->36 [style = solid, label="tableIdentifier"];
18->8 [style = bold, label=""];
30->33 [style = solid, label="tableIdentifier"];
6->7 [style = bold, label=""];
3->16 [style = bold, label=""];
22->23 [style = bold, label=""];
40->35 [style = bold, label=""];
27->34 [style = bold, label=""];
14->15 [style = bold, label=""];
16->21 [style = solid, label="i"];
0->18 [style = solid, label="tableIdentifier"];
38->27 [style = bold, label=""];
1->33 [style = dashed, label="0"];
17->2 [style = bold, label=""];
1->13 [style = bold, label=""];
15->3 [style = dotted, label="true"];
}
