digraph {
27 [style = filled, label = "assertEquals(1.2,data.getRangeLowerBound(true),EPSILON)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(1.0,data.getRangeLowerBound(false),EPSILON)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "data.add(new BoxAndWhiskerItem(2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5,new ArrayList<>()),\"R2\",\"C1\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals(1.4,data.getRangeUpperBound(false),EPSILON)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "data.add(new BoxAndWhiskerItem(1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,new ArrayList<>()),\"R1\",\"C1\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(new Range(7.0,8.0),data.getRangeBounds(true))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "data.add(new BoxAndWhiskerItem(1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,new ArrayList()),\"R1\",\"C1\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(1.6,data.getRangeUpperBound(true),EPSILON)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(new Range(1.0,1.0),data.getRangeBounds(false))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "data.remove(\"R1\",\"R2\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(new Range(7.0,8.0),data.getRangeBounds(false))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "data.add(1.0,0.5,\"R1\",\"C1\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "DefaultStatisticalCategoryDataset data = new DefaultStatisticalCategoryDataset()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "pass = true@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "data.add(1.4,0.2,\"R2\",\"C1\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "boolean pass = false@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "UnknownKeyException e@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "data.remove(\"R1\",\"C1\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(new Range(7.0,9.5),data.getRangeBounds(false))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(1.6,data.getRangeUpperBound(true),EPSILON)@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(new Range(7.0,9.5),data.getRangeBounds(true))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testRemove['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "data.add(new BoxAndWhiskerItem(2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5,new ArrayList()),\"R2\",\"C1\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertEquals(new Range(8.5,9.5),data.getRangeBounds(false))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset data = new DefaultBoxAndWhiskerCategoryDataset()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(new Range(0.5,1.5),data.getRangeBounds(true))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testRemove['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertEquals(1.4,data.getRangeLowerBound(false),EPSILON)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(1.4,data.getRangeUpperBound(false),EPSILON)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(0.5,data.getRangeLowerBound(true),EPSILON)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(pass)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "data.remove(\"R1\",\"C1\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testRemove['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
4->9 [style = bold, label=""];
5->10 [style = bold, label=""];
17->8 [style = bold, label=""];
16->3 [style = bold, label=""];
7->17 [style = bold, label=""];
32->23 [style = bold, label=""];
12->5 [style = bold, label=""];
15->7 [style = bold, label=""];
9->0 [style = bold, label=""];
15->7 [style = solid, label="pass"];
7->30 [style = bold, label=""];
10->14 [style = bold, label=""];
28->20 [style = bold, label=""];
11->6 [style = bold, label=""];
29->31 [style = bold, label=""];
20->0 [style = bold, label=""];
3->11 [style = bold, label=""];
1->3 [style = bold, label=""];
2->15 [style = dotted, label="true"];
13->17 [style = dashed, label="0"];
12->31 [style = dashed, label="0"];
21->24 [style = bold, label=""];
0->21 [style = bold, label=""];
3->22 [style = dashed, label="0"];
5->18 [style = dashed, label="0"];
30->29 [style = bold, label=""];
26->22 [style = bold, label=""];
23->28 [style = bold, label=""];
11->7 [style = solid, label="pass"];
14->23 [style = dashed, label="0"];
19->32 [style = bold, label=""];
18->10 [style = bold, label=""];
10->32 [style = dashed, label="0"];
9->21 [style = dashed, label="0"];
2->15 [style = bold, label=""];
12->18 [style = bold, label=""];
0->24 [style = dashed, label="0"];
13->8 [style = bold, label=""];
6->7 [style = bold, label=""];
24->27 [style = bold, label=""];
22->11 [style = bold, label=""];
8->12 [style = bold, label=""];
31->19 [style = bold, label=""];
27->25 [style = bold, label=""];
8->29 [style = dashed, label="0"];
14->4 [style = bold, label=""];
}
