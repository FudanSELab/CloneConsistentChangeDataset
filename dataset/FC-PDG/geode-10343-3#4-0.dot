digraph {
2 [style = filled, label = "fromXmlWithNameType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "config.setName(\"test\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "fromXmlWithNameType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "config.setRegionAttributes(attributesType)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "attributesType.setDiskStoreName(\"diskstore\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "RegionAttributesType attributesType = new RegionAttributesType()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "config.setRegionAttributes(converter.createRegionAttributesByType(\"REPLICATE\"))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "attributesType.setValueConstraint(\"foo\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "fromXmlWithAll['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(region.getKeyConstraint()).isEqualTo(\"bar\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "attributesType.setKeyConstraint(\"bar\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(region.getType()).isEqualTo(RegionType.REPLICATE)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Region region = converter.fromXmlObject(config)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(region.getDiskStoreName()).isEqualTo(\"diskstore\")@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(region.getName()).isEqualTo(\"test\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "config.setType(\"REPLICATE\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(region.getValueConstraint()).isEqualTo(\"foo\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->5 [style = bold, label=""];
0->10 [style = bold, label=""];
16->12 [style = bold, label=""];
10->8 [style = bold, label=""];
1->3 [style = bold, label=""];
3->16 [style = bold, label=""];
0->7 [style = dashed, label="0"];
0->5 [style = bold, label=""];
4->7 [style = bold, label=""];
2->4 [style = bold, label=""];
8->9 [style = bold, label=""];
6->4 [style = bold, label=""];
13->4 [style = bold, label=""];
14->11 [style = bold, label=""];
4->0 [style = bold, label=""];
11->5 [style = bold, label=""];
9->14 [style = bold, label=""];
10->11 [style = solid, label="attributesType"];
12->15 [style = bold, label=""];
5->1 [style = bold, label=""];
}
