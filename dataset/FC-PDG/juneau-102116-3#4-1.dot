digraph {
3 [style = filled, label = "assertEquals(\"helloWorld\",x(0(.getName())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ResourceDescription(( x = client.get(\"\").run().getBody().as()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "ObjectMap x2 = r.getResponse()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "System.err.println(s)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String s = x2.getObjectMap(\"info\").getString(\"description\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "debug@@@12@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(s,s.startsWith(\"Example of a router resource page\"))@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(s,s.startsWith(\"Example of a router resource page\"))@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "testXml['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ResourceDescription(( x = r.getResponse()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testJson['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "System.err.println(s)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "String s = x2.getObjectMap(\"info\").getString(\"description\")@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(\"Hello World\",x(0(.getDescription())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "debug@@@9@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertEquals(\"helloWorld\",x(0(.getName())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "debug@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "RestClient client = SamplesMicroservice.DEFAULT_CLIENT@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testJson['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
14->3 [style = bold, label=""];
13->10 [style = bold, label=""];
4->2 [style = solid, label="s"];
17->5 [style = bold, label=""];
10->15 [style = bold, label=""];
4->6 [style = bold, label=""];
7->12 [style = bold, label=""];
11->1 [style = bold, label=""];
7->0 [style = bold, label=""];
4->18 [style = bold, label=""];
18->8 [style = dotted, label="true"];
18->2 [style = bold, label=""];
13->10 [style = dotted, label="true"];
12->10 [style = solid, label="s"];
6->2 [style = bold, label=""];
12->13 [style = bold, label=""];
8->2 [style = bold, label=""];
3->7 [style = bold, label=""];
0->4 [style = bold, label=""];
1->16 [style = bold, label=""];
6->8 [style = dotted, label="true"];
6->8 [style = bold, label=""];
16->14 [style = bold, label=""];
4->8 [style = solid, label="s"];
18->8 [style = bold, label=""];
13->15 [style = bold, label=""];
12->15 [style = solid, label="s"];
9->1 [style = bold, label=""];
}
