digraph {
11 [style = filled, label = "Settings indexSettings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.V_6_3_0).put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,0).put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1).put(IndexMetaData.SETTING_INDEX_UUID,UUIDs.randomBase64UUID()).build()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testParse3DPolygon['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<Coordinate> shellCoordinates = new ArrayList<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "shellCoordinates.add(new Coordinate(100,0,10))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "shellCoordinates.add(new Coordinate(100,0,10))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ElasticsearchGeoAssertions.assertValidException(parser,)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "parser.nextToken()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "shellCoordinates.add(new Coordinate(100,1,10))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Polygon expected = GEOMETRY_FACTORY.createPolygon(shell,null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testInvalidDimensionalPolygon['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNull(parser.nextToken())@@@7@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testInvalidDimensionalPolygon['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "ElasticsearchGeoAssertions.assertEquals(jtsGeom(expected),ShapeParser.parse(parser,mapperBuilder).build())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Mapper.BuilderContext mockBuilderContext = new Mapper.BuilderContext(indexSettings,new ContentPath())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "XContentBuilder polygonGeoJson = XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(100.0).value(1.0).value(10.0).endArray().startArray().value(101.0).value(1.0).value(10.0).endArray().startArray().value(101.0).value(0.0).value(10.0).endArray().startArray().value(100.0).value(0.0).value(10.0).endArray().startArray().value(100.0).value(1.0).value(10.0).endArray().endArray().endArray().endObject()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "shellCoordinates.add(new Coordinate(101,1,10))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "XContentBuilder polygonGeoJson = XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(100.0).value(1.0).value(10.0).endArray().startArray().value(101.0).value(1.0).endArray().startArray().value(101.0).value(0.0).value(10.0).endArray().startArray().value(100.0).value(0.0).value(10.0).endArray().startArray().value(100.0).value(1.0).value(10.0).endArray().endArray().endArray().endObject()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "LinearRing shell = GEOMETRY_FACTORY.createLinearRing(shellCoordinates.toArray(new Coordinate(((())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "shellCoordinates.add(new Coordinate(101,0,10))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "parser.nextToken()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final GeoShapeFieldMapper mapperBuilder = new GeoShapeFieldMapper.Builder(\"test\").ignoreZValue(true).build(mockBuilderContext)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->9 [style = solid, label="mockBuilderContext"];
3->19 [style = dashed, label="0"];
14->18 [style = bold, label=""];
6->15 [style = bold, label=""];
16->7 [style = solid, label="shell"];
7->19 [style = solid, label="expected"];
10->8 [style = bold, label=""];
2->10 [style = dashed, label="0"];
0->3 [style = bold, label=""];
11->16 [style = bold, label=""];
11->13 [style = solid, label="indexSettings"];
3->5 [style = bold, label=""];
4->2 [style = bold, label=""];
7->13 [style = bold, label=""];
15->11 [style = bold, label=""];
12->19 [style = bold, label=""];
16->7 [style = bold, label=""];
2->0 [style = bold, label=""];
13->9 [style = bold, label=""];
20->14 [style = bold, label=""];
1->2 [style = bold, label=""];
8->20 [style = bold, label=""];
17->10 [style = bold, label=""];
18->6 [style = bold, label=""];
9->12 [style = bold, label=""];
}
