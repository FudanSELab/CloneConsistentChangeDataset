digraph {
5 [style = filled, label = "Collection<BibEntry> result = autoCompleter.call(getRequest((\"testKey\")))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(Collections.singletonList(entry),result)@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Collections.singletonList(entry),result)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Collection<BibEntry> result = autoCompleter.call(getRequest((\"testkey\")))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "BibEntry entry = new BibEntry()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "completeKeyReturnsKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "autoCompleter.indexEntry(entry)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "completeLowercaseKeyReturnsKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "entry.setCiteKey(\"testKey\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "completeKeyReturnsKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
2->1 [style = solid, label="entry"];
2->3 [style = solid, label="entry"];
5->3 [style = solid, label="result"];
4->1 [style = bold, label=""];
5->9 [style = dashed, label="0"];
2->7 [style = solid, label="entry"];
5->7 [style = solid, label="result"];
8->2 [style = bold, label=""];
9->3 [style = solid, label="result"];
2->4 [style = bold, label=""];
3->7 [style = dashed, label="0"];
1->9 [style = bold, label=""];
0->2 [style = bold, label=""];
6->2 [style = bold, label=""];
}
