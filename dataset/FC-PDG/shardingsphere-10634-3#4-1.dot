digraph {
10 [style = filled, label = "assertTrue(actual.getActualDataNodes().contains(new DataNode(\"ds0\",\"logic_table_2\")))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(actual.getLogicTable(),is(\"LOGIC_TABLE\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "ModShardingAlgorithm shardingAlgorithm = new ModShardingAlgorithm()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertCreateAutoTableRuleWithModAlgorithmWithoutActualDataSources['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(actual.getActualDataNodes().contains(new DataNode(\"ds1\",\"logic_table_1\")))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ShardingAutoTableRuleConfiguration tableRuleConfig = new ShardingAutoTableRuleConfiguration(\"LOGIC_TABLE\",null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tableRuleConfig.setShardingStrategy(new StandardShardingStrategyConfiguration(\"col_1\",\"MOD\"))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(actual.getLogicTable(),is(\"logic_table\"))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TableRule actual = new TableRule(tableRuleConfig,Arrays.asList(\"ds0\",\"ds1\",\"ds2\"),shardingAlgorithm,null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(actual.getActualDataNodes().contains(new DataNode(\"ds0\",\"logic_table_3\")))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "shardingAlgorithm.init()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertCreateAutoTableRuleWithModAlgorithm['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertCreateAutoTableRuleWithModAlgorithm['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(actual.getActualDataNodes().contains(new DataNode(\"ds1\",\"logic_table_3\")))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ShardingAutoTableRuleConfiguration tableRuleConfig = new ShardingAutoTableRuleConfiguration(\"LOGIC_TABLE\",\"ds0,ds1\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ShardingSphereServiceLoader.register()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shardingAlgorithm.getProps().setProperty(\"sharding-count\",\"4\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(actual.getActualDataNodes().contains(new DataNode(\"ds2\",\"logic_table_2\")))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(actual.getActualDataNodes().size(),is(4))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(actual.getActualDataNodes().contains(new DataNode(\"ds0\",\"logic_table_0\")))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
18->3 [style = bold, label=""];
17->5 [style = bold, label=""];
7->11 [style = bold, label=""];
9->12 [style = solid, label="shardingAlgorithm"];
5->18 [style = bold, label=""];
18->12 [style = solid, label="tableRuleConfig"];
6->14 [style = dashed, label="0"];
16->19 [style = bold, label=""];
9->8 [style = bold, label=""];
12->6 [style = bold, label=""];
1->7 [style = bold, label=""];
15->5 [style = bold, label=""];
2->12 [style = bold, label=""];
14->1 [style = bold, label=""];
13->12 [style = solid, label="tableRuleConfig"];
3->9 [style = bold, label=""];
6->1 [style = bold, label=""];
13->3 [style = bold, label=""];
8->2 [style = bold, label=""];
11->10 [style = bold, label=""];
5->13 [style = bold, label=""];
12->14 [style = bold, label=""];
10->4 [style = bold, label=""];
4->19 [style = dashed, label="0"];
10->16 [style = dashed, label="0"];
13->18 [style = dashed, label="0"];
0->5 [style = bold, label=""];
}
