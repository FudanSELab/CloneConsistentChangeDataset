digraph {
1 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final CountDownLatch backgroundLatch = new CountDownLatch(1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "client.delete().guaranteed().forPath(\"/nonexistent\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testGuaranteedDeleteOnNonExistentNodeInForeground['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertFalse(pathAdded.get())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "testGuaranteedDeleteOnNonExistentNodeInBackground['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "{client.close()}@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "client.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.fail()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "fail()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "NoNodeException e@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertFalse(pathAdded.get())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "BackgroundCallback background = new BackgroundCallback(){@Override public void processResult(CuratorFramework client,CuratorEvent event){backgroundLatch.countDown()}}@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testGuaranteedDeleteOnNonExistentNodeInForeground['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "{client.close()}@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "client.delete().guaranteed().inBackground(background).forPath(\"/nonexistent\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "backgroundLatch.await()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final AtomicBoolean pathAdded = new AtomicBoolean(false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "((CuratorFrameworkImpl)client).getFailedDeleteManager().debugListener = new FailedOperationManager.FailedOperationManagerListener<String>(){@Override public void pathAddedForGuaranteedOperation(String path){pathAdded.set(true)}}@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFalse(pathAdded.get())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2->17 [style = bold, label=""];
0->3 [style = bold, label=""];
5->10 [style = bold, label=""];
11->1 [style = bold, label=""];
5->10 [style = dotted, label="true"];
18->19 [style = bold, label=""];
10->3 [style = bold, label=""];
4->2 [style = bold, label=""];
2->9 [style = bold, label=""];
5->0 [style = dotted, label="true"];
9->7 [style = bold, label=""];
15->18 [style = bold, label=""];
13->16 [style = bold, label=""];
7->3 [style = bold, label=""];
14->1 [style = bold, label=""];
0->10 [style = dashed, label="0"];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
1->6 [style = bold, label=""];
19->13 [style = bold, label=""];
5->0 [style = bold, label=""];
17->15 [style = bold, label=""];
7->12 [style = dashed, label="0"];
12->3 [style = bold, label=""];
9->12 [style = bold, label=""];
}
