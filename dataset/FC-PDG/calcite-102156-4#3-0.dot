digraph {
6 [style = filled, label = "Expression operand@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "requireNonNull(targetType.getSqlTypeName().getFamily(),null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final BigDecimal multiplier = BigDecimal.ONE@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "convert = Expressions.call(BuiltInMethod.STRING_TO_TIME.method,operand)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "scaleIntervalToNumber['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RelDataType sourceType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "translateCastToTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return RexImpTable.multiplyDivide(operand,multiplier,divider)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RelDataType targetType@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Expression convert = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return operand@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "scaleIntervalToNumber['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "RelDataType sourceType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Expression operand@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "targetType.getSqlTypeName().getFamily()@@@3@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "RelDataType targetType@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "convert = RexImpTable.optimize2(operand,Expressions.call(BuiltInMethod.TIMESTAMP_WITH_LOCAL_TIME_ZONE_TO_TIME.method,operand,Expressions.call(BuiltInMethod.TIME_ZONE.method,root)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "sourceType.getSqlTypeName()@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "sourceType.getSqlTypeName()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "convert = Expressions.convert_(Expressions.call(BuiltInMethod.FLOOR_MOD.method,operand,Expressions.constant(DateTimeUtils.MILLIS_PER_DAY)),)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "return convert@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final BigDecimal divider = sourceType.getSqlTypeName().getEndUnit().multiplier@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Expression operand@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "convert = RexImpTable.optimize2(operand,Expressions.call(BuiltInMethod.TIME_WITH_LOCAL_TIME_ZONE_TO_TIME.method,operand,Expressions.call(BuiltInMethod.TIME_ZONE.method,root)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->3 [style = dotted, label="true"];
9->20 [style = dashed, label="0"];
15->22 [style = solid, label="convert"];
12->8 [style = solid, label="operand"];
3->7 [style = dotted, label="true"];
6->8 [style = solid, label="operand"];
7->1 [style = bold, label=""];
0->5 [style = dotted, label="true"];
1->8 [style = bold, label=""];
4->1 [style = solid, label="multiplier"];
4->7 [style = solid, label="multiplier"];
21->19 [style = bold, label=""];
21->15 [style = dotted, label="true"];
3->21 [style = dashed, label="0"];
21->18 [style = dotted, label="true"];
21->15 [style = bold, label=""];
12->1 [style = solid, label="operand"];
2->3 [style = bold, label=""];
11->12 [style = dotted, label="true"];
0->2 [style = bold, label=""];
3->4 [style = dotted, label="true"];
10->3 [style = dotted, label="true"];
10->3 [style = bold, label=""];
14->17 [style = bold, label=""];
11->9 [style = dotted, label="true"];
16->23 [style = solid, label="operand"];
11->13 [style = dotted, label="true"];
16->18 [style = solid, label="operand"];
0->6 [style = dotted, label="true"];
3->4 [style = bold, label=""];
17->22 [style = solid, label="convert"];
4->7 [style = bold, label=""];
21->18 [style = bold, label=""];
2->10 [style = dashed, label="0"];
15->22 [style = bold, label=""];
14->20 [style = dotted, label="true"];
14->16 [style = dotted, label="true"];
8->22 [style = dashed, label="0"];
18->22 [style = bold, label=""];
23->22 [style = bold, label=""];
10->8 [style = bold, label=""];
21->22 [style = bold, label=""];
16->15 [style = solid, label="operand"];
7->1 [style = solid, label="divider"];
21->23 [style = dotted, label="true"];
3->8 [style = bold, label=""];
11->10 [style = bold, label=""];
21->19 [style = dotted, label="true"];
16->19 [style = solid, label="operand"];
23->22 [style = solid, label="convert"];
0->9 [style = dotted, label="true"];
3->1 [style = dotted, label="true"];
17->21 [style = bold, label=""];
6->1 [style = solid, label="operand"];
21->23 [style = bold, label=""];
19->22 [style = bold, label=""];
2->8 [style = bold, label=""];
18->22 [style = solid, label="convert"];
19->22 [style = solid, label="convert"];
}
