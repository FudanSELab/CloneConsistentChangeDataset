digraph {
0 [style = filled, label = "assertNotNull(result)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertNull(result)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNotNull(result)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertNull(result.getField(1))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertNotNull(result)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "TypeInformation(( fieldTypes = new TypeInformation((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b26ef9@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
76 [style = filled, label = "result = format.nextRecord(result)@@@73@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "format.open(split)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertNull(result)@@@74@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "assertEquals(6.0,result.getField(2))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "{}@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "result = format.nextRecord(result)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNull(result.getField(2))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "result = format.nextRecord(result)@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "fail(\"Parse Exception was not thrown! (Row too short)\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(1,result.getField(1))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "String fileContent = \"#description of the data\" + \"#successive commented line\" + \"this is|1|2.0|\" + \"a test|3|4.0|\" + \"#next|5|6.0|\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "ParseException ignored@@@18@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "ParseException ignored@@@24@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
82 [style = filled, label = "format.setCommentPrefix(\"#\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertEquals(1,result.getField(1))@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "result = format.nextRecord(result)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "result = format.nextRecord(result)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(5,result.getField(1))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "RowCsvInputFormat format = new RowCsvInputFormat(PATH,fieldTypes,\"\",\"|\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(\"a test\",result.getField(0))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(5,result.getField(1))@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "ignoreInvalidLines['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "format.configure(new Configuration())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "result = format.nextRecord(result)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertNotNull(result)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "ignoreSingleCharPrefixComments['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(2.0,result.getField(2))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "result = format.nextRecord(result)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "format.open(split)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(4.0,result.getField(2))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "RowCsvInputFormat format = new RowCsvInputFormat(PATH,typeInfo,\"\",\"|\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "format.setLenient(true)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "fail(\"Parse Exception was not thrown! (Row too short)\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ParseException ignored@@@16@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(\"#next\",result.getField(0))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Configuration parameters = new Configuration()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Row result = new Row(3)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(4.0,result.getField(2))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "format.configure(parameters)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "{}@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "result = format.nextRecord(result)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"a test\",result.getField(0))@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "RowTypeInfo typeInfo = new RowTypeInfo(BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.INT_TYPE_INFO,BasicTypeInfo.DOUBLE_TYPE_INFO)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"header1\",result.getField(0))@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "fail(\"Parse Exception was not thrown! (Invalid int value)\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(2.0,result.getField(2))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(\"#next\",result.getField(0))@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "fail(\"Parse Exception was not thrown! (Invalid int value)\")@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "result = new Row(3)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "fail(\"Parse Exception was not thrown! (Row too short)\")@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "ParseException ignored@@@35@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
74 [style = filled, label = "result = format.nextRecord(result)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertNotNull(result)@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "result = format.nextRecord(result)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertNull(result)@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "ignoreInvalidLines['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(3,result.getField(1))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ParseException ignored@@@33@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(1,result.getField(1))@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertNotNull(result)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "result = format.nextRecord(result)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "fail(\"Parse Exception was not thrown! (Row too short)\")@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "RowTypeInfo typeInfo = new RowTypeInfo(BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.INT_TYPE_INFO,BasicTypeInfo.DOUBLE_TYPE_INFO)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "{}@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertEquals(4.0,result.getField(2))@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "FileInputSplit split = createTempFile(fileContent)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "{}@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "result = format.nextRecord(result)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(\"this is\",result.getField(0))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "result = format.nextRecord(result)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "format.setLenient(false)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(6.0,result.getField(2))@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(\"this is\",result.getField(0))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertNotNull(result)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(3,result.getField(1))@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "result = format.nextRecord(result)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "format.open(split)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "String fileContent = \"#description of the data\" + \"header1|header2|header3|\" + \"this is|1|2.0|\" + \"//a comment\" + \"a test|3|4.0|\" + \"#next|5|6.0|\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
62->14 [style = bold, label=""];
81->45 [style = solid, label="typeInfo"];
60->22 [style = solid, label="split"];
54->63 [style = bold, label=""];
59->64 [style = solid, label="result"];
61->19 [style = bold, label=""];
41->45 [style = solid, label="typeInfo"];
67->71 [style = bold, label=""];
40->20 [style = bold, label=""];
45->82 [style = bold, label=""];
64->61 [style = solid, label="result"];
43->78 [style = bold, label=""];
13->1 [style = bold, label=""];
33->13 [style = solid, label="result"];
7->59 [style = solid, label="result"];
19->54 [style = solid, label="result"];
44->6 [style = solid, label="result"];
26->21 [style = solid, label="result"];
80->60 [style = solid, label="fileContent"];
23->33 [style = bold, label=""];
20->48 [style = bold, label=""];
80->60 [style = bold, label=""];
62->76 [style = solid, label="result"];
0->74 [style = solid, label="result"];
2->36 [style = bold, label=""];
32->25 [style = bold, label=""];
27->17 [style = bold, label=""];
81->45 [style = bold, label=""];
4->8 [style = bold, label=""];
43->0 [style = bold, label=""];
41->45 [style = bold, label=""];
49->40 [style = bold, label=""];
3->30 [style = bold, label=""];
29->51 [style = bold, label=""];
7->73 [style = bold, label=""];
39->29 [style = bold, label=""];
67->71 [style = solid, label="fieldTypes"];
36->6 [style = bold, label=""];
59->64 [style = bold, label=""];
37->62 [style = solid, label="result"];
66->13 [style = bold, label=""];
1->50 [style = bold, label=""];
0->58 [style = bold, label=""];
60->81 [style = bold, label=""];
57->60 [style = bold, label=""];
62->14 [style = solid, label="result"];
60->41 [style = bold, label=""];
75->65 [style = bold, label=""];
28->17 [style = solid, label="result"];
40->20 [style = solid, label="result"];
22->5 [style = bold, label=""];
74->12 [style = bold, label=""];
47->57 [style = bold, label=""];
25->27 [style = bold, label=""];
60->21 [style = solid, label="split"];
17->34 [style = bold, label=""];
12->65 [style = bold, label=""];
0->23 [style = bold, label=""];
18->4 [style = bold, label=""];
56->20 [style = solid, label="parameters"];
5->43 [style = solid, label="result"];
65->38 [style = bold, label=""];
79->22 [style = bold, label=""];
12->33 [style = bold, label=""];
17->8 [style = solid, label="result"];
60->78 [style = solid, label="split"];
68->6 [style = bold, label=""];
55->35 [style = bold, label=""];
45->52 [style = bold, label=""];
64->46 [style = solid, label="result"];
7->44 [style = bold, label=""];
24->13 [style = bold, label=""];
29->51 [style = solid, label="result"];
44->42 [style = bold, label=""];
41->81 [style = dashed, label="0"];
16->13 [style = bold, label=""];
28->11 [style = solid, label="result"];
1->70 [style = solid, label="result"];
8->35 [style = solid, label="result"];
8->31 [style = bold, label=""];
43->7 [style = solid, label="result"];
72->75 [style = bold, label=""];
6->64 [style = solid, label="result"];
57->60 [style = solid, label="fileContent"];
5->26 [style = solid, label="parameters"];
46->49 [style = solid, label="result"];
1->50 [style = solid, label="result"];
38->16 [style = bold, label=""];
0->74 [style = bold, label=""];
21->39 [style = solid, label="result"];
11->32 [style = bold, label=""];
73->44 [style = bold, label=""];
53->76 [style = bold, label=""];
38->1 [style = bold, label=""];
7->44 [style = solid, label="result"];
19->54 [style = bold, label=""];
48->26 [style = bold, label=""];
26->21 [style = bold, label=""];
83->80 [style = bold, label=""];
65->1 [style = solid, label="result"];
32->25 [style = solid, label="result"];
58->1 [style = bold, label=""];
63->46 [style = bold, label=""];
13->44 [style = solid, label="result"];
21->39 [style = bold, label=""];
15->28 [style = bold, label=""];
33->24 [style = bold, label=""];
6->10 [style = bold, label=""];
64->61 [style = bold, label=""];
19->40 [style = solid, label="result"];
74->65 [style = solid, label="result"];
9->12 [style = bold, label=""];
30->59 [style = bold, label=""];
44->70 [style = bold, label=""];
35->53 [style = solid, label="result"];
0->33 [style = solid, label="result"];
35->53 [style = bold, label=""];
57->80 [style = dashed, label="0"];
29->32 [style = solid, label="result"];
3->30 [style = solid, label="result"];
71->22 [style = bold, label=""];
76->77 [style = solid, label="result"];
32->37 [style = solid, label="result"];
52->82 [style = dashed, label="0"];
21->28 [style = solid, label="result"];
46->49 [style = bold, label=""];
28->11 [style = bold, label=""];
76->77 [style = bold, label=""];
70->3 [style = solid, label="result"];
69->57 [style = bold, label=""];
44->10 [style = bold, label=""];
52->56 [style = bold, label=""];
10->3 [style = bold, label=""];
50->7 [style = bold, label=""];
13->58 [style = bold, label=""];
43->0 [style = solid, label="result"];
78->0 [style = bold, label=""];
5->43 [style = bold, label=""];
60->48 [style = solid, label="split"];
60->67 [style = bold, label=""];
8->31 [style = solid, label="result"];
42->6 [style = bold, label=""];
34->37 [style = bold, label=""];
39->29 [style = solid, label="result"];
82->79 [style = bold, label=""];
13->58 [style = solid, label="result"];
56->22 [style = bold, label=""];
37->18 [style = bold, label=""];
3->19 [style = solid, label="result"];
14->55 [style = bold, label=""];
70->36 [style = bold, label=""];
17->34 [style = solid, label="result"];
51->15 [style = bold, label=""];
37->18 [style = solid, label="result"];
31->62 [style = bold, label=""];
6->10 [style = solid, label="result"];
60->5 [style = solid, label="split"];
36->3 [style = bold, label=""];
}
