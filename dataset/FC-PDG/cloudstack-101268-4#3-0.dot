digraph {
0 [style = filled, label = "final PublicIp sourceNatIp = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"SourceNatIp returned by the VpcManager was not correctly set\",publicIp,deployment.sourceNatIp)@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNull(deployment.sourceNatIp)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testFindSourceNatIPNonPublicNw['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "deployment.isPublicNetwork = true@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "deployment.findSourceNatIP()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(\"SourceNatIP should remain null given a non public network\",null,deployment.sourceNatIp)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "lenient().when(mockIpAddrMgr.assignSourceNatIpAddressToGuestNetwork(mockOwner,mockNw)).thenReturn(sourceNatIp)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "when(vpcMgr.assignSourceNatIpAddressToVpc(mockOwner,mockVpc)).thenReturn(publicIp)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final PublicIp publicIp = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(mockIpAddrMgr.assignSourceNatIpAddressToGuestNetwork(mockOwner,mockNw)).thenReturn(sourceNatIp)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "testFindSourceNatIP['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "deployment.isPublicNetwork = false@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testFindSourceNatIPNonPublicNw['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13->10 [style = bold, label=""];
1->4 [style = bold, label=""];
0->1 [style = solid, label="sourceNatIp"];
3->1 [style = bold, label=""];
4->6 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
7->0 [style = bold, label=""];
10->11 [style = solid, label="publicIp"];
10->4 [style = solid, label="publicIp"];
0->8 [style = solid, label="sourceNatIp"];
11->9 [style = bold, label=""];
2->8 [style = dashed, label="0"];
0->2 [style = solid, label="sourceNatIp"];
0->10 [style = dashed, label="0"];
6->4 [style = dashed, label="0"];
5->0 [style = bold, label=""];
12->4 [style = bold, label=""];
3->9 [style = dashed, label="0"];
0->6 [style = solid, label="sourceNatIp"];
0->8 [style = bold, label=""];
2->11 [style = dashed, label="0"];
9->12 [style = bold, label=""];
10->11 [style = bold, label=""];
}
