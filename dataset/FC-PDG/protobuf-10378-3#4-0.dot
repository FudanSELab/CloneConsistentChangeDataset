digraph {
6 [style = filled, label = "assertDataConsumed(data,input)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "input = inputType.newDecoder(data,blockSize)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertDataConsumed(inputType.name(),data,input)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "input = CodedInputStream.newInstance(data)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "blockSize <= 16@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "blockSize *= 2@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "CodedInputStream input = inputType.newDecoder(data,blockSize)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "int value@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "assertReadLittleEndian32['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(value,input.readRawVarint64SlowPath())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(value,input.readRawVarint64())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "InputStream rawInput = new ByteArrayInputStream(longerData)@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "System.arraycopy(data,0,longerData,0,data.length)@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertDataConsumed(data,input)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertEquals((int)value,input.readRawVarint32())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertEquals(inputType.name(),value,input.readRawVarint64SlowPath())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "input = inputType.newDecoder(data,blockSize)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(inputType.name(),value,input.readRawVarint64())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "byte(( data@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "byte(( longerData = new byte((((@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertDataConsumed(data,input)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(1,rawInput.available())@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "blockSize *= 2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "input = inputType.newDecoder(data,blockSize)@@@16@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertDataConsumed(data,input)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertTrue(input.skipField(WireFormat.WIRETYPE_VARINT))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "byte(( data@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "blockSize <= 16@@@5@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertTrue(input.skipField(WireFormat.WIRETYPE_VARINT))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "assertEquals(value,input.readRawLittleEndian32())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertDataConsumed(data,input)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertEquals(1,rawInput.available())@@@35@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "input = CodedInputStream.newInstance(data)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "byte(( longerData = new byte((((@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "assertEquals(value,input.readRawLittleEndian32())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertTrue(input.isAtEnd())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "System.arraycopy(data,0,longerData,0,data.length)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "assertEquals((int)value,CodedInputStream.readRawVarint32(rawInput))@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertDataConsumed(inputType.name(),data,input)@@@15@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "CodedInputStream input = CodedInputStream.newInstance(data)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertDataConsumed(data,input)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals((int)value,input.readRawVarint32())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals((int)value,CodedInputStream.readRawVarint32(rawInput))@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertReadVarint['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertDataConsumed(data,input)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertDataConsumed(inputType.name(),data,input)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "assertTrue(input.isAtEnd())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "long value@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "int blockSize = 1@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "long value@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertReadVarint['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(inputType.name(),(int)value,input.readRawVarint32())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertDataConsumed(data,input)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "input = CodedInputStream.newInstance(data)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "assertDataConsumed(inputType.name(),data,input)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "InputStream rawInput = new ByteArrayInputStream(longerData)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertEquals(value,input.readRawVarint64SlowPath())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(value,input.readRawVarint64())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "int blockSize = 1@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertTrue(inputType.name(),input.skipField(WireFormat.WIRETYPE_VARINT))@@@17@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30->27 [style = solid, label="blockSize"];
30->24 [style = solid, label="blockSize"];
16->9 [style = dotted, label="true"];
40->16 [style = solid, label="blockSize"];
47->16 [style = solid, label="blockSize"];
62->58 [style = solid, label="value"];
8->10 [style = solid, label="value"];
7->30 [style = bold, label=""];
14->20 [style = solid, label="data"];
54->63 [style = bold, label=""];
27->6 [style = solid, label="input"];
27->9 [style = bold, label=""];
15->54 [style = bold, label=""];
49->48 [style = bold, label=""];
56->15 [style = bold, label=""];
16->20 [style = dotted, label="true"];
58->60 [style = bold, label=""];
21->37 [style = dashed, label="0"];
57->58 [style = bold, label=""];
1->28 [style = solid, label="rawInput"];
34->54 [style = dashed, label="0"];
0->38 [style = dashed, label="0"];
41->38 [style = dotted, label="true"];
16->10 [style = dotted, label="true"];
40->44 [style = solid, label="blockSize"];
52->53 [style = solid, label="rawInput"];
9->6 [style = bold, label=""];
31->22 [style = solid, label="longerData"];
39->42 [style = solid, label="value"];
41->36 [style = dotted, label="true"];
19->5 [style = bold, label=""];
48->52 [style = bold, label=""];
20->46 [style = dashed, label="0"];
23->43 [style = dashed, label="0"];
1->28 [style = bold, label=""];
55->57 [style = bold, label=""];
10->51 [style = dashed, label="0"];
10->58 [style = dashed, label="0"];
2->36 [style = dashed, label="0"];
14->24 [style = solid, label="data"];
3->19 [style = bold, label=""];
33->25 [style = bold, label=""];
12->27 [style = solid, label="blockSize"];
41->12 [style = dotted, label="true"];
41->43 [style = dotted, label="true"];
14->33 [style = solid, label="data"];
41->51 [style = dotted, label="true"];
11->8 [style = dotted, label="true"];
23->12 [style = bold, label=""];
41->42 [style = dotted, label="true"];
64->57 [style = solid, label="blockSize"];
46->50 [style = bold, label=""];
14->29 [style = solid, label="data"];
30->2 [style = solid, label="blockSize"];
14->48 [style = solid, label="data"];
50->37 [style = solid, label="input"];
14->15 [style = solid, label="data"];
24->21 [style = solid, label="input"];
40->41 [style = solid, label="blockSize"];
61->55 [style = solid, label="blockSize"];
15->34 [style = bold, label=""];
47->41 [style = solid, label="blockSize"];
49->48 [style = solid, label="longerData"];
41->46 [style = dotted, label="true"];
56->62 [style = dotted, label="true"];
36->46 [style = solid, label="input"];
24->0 [style = bold, label=""];
40->50 [style = solid, label="blockSize"];
30->33 [style = solid, label="blockSize"];
47->50 [style = solid, label="blockSize"];
2->20 [style = solid, label="input"];
11->14 [style = dotted, label="true"];
59->15 [style = solid, label="data"];
4->18 [style = bold, label=""];
41->49 [style = bold, label=""];
0->21 [style = bold, label=""];
14->5 [style = solid, label="data"];
12->16 [style = solid, label="blockSize"];
40->36 [style = solid, label="blockSize"];
16->33 [style = dotted, label="true"];
39->38 [style = solid, label="value"];
35->40 [style = bold, label=""];
61->55 [style = bold, label=""];
14->18 [style = solid, label="data"];
4->63 [style = dashed, label="0"];
43->47 [style = bold, label=""];
12->33 [style = solid, label="blockSize"];
16->43 [style = solid, label="input"];
38->37 [style = bold, label=""];
8->19 [style = solid, label="value"];
39->53 [style = solid, label="value"];
24->50 [style = dashed, label="0"];
47->36 [style = solid, label="blockSize"];
44->30 [style = solid, label="input"];
47->41 [style = bold, label=""];
16->21 [style = dotted, label="true"];
39->51 [style = solid, label="value"];
14->2 [style = solid, label="data"];
14->16 [style = solid, label="data"];
16->25 [style = dotted, label="true"];
8->34 [style = solid, label="value"];
32->17 [style = bold, label=""];
64->55 [style = solid, label="blockSize"];
14->37 [style = solid, label="data"];
35->14 [style = dotted, label="true"];
55->57 [style = dotted, label="true"];
16->24 [style = dotted, label="true"];
32->7 [style = solid, label="input"];
14->7 [style = solid, label="data"];
12->24 [style = solid, label="blockSize"];
44->42 [style = bold, label=""];
41->30 [style = dotted, label="true"];
36->51 [style = bold, label=""];
55->58 [style = dotted, label="true"];
9->42 [style = dashed, label="0"];
21->27 [style = bold, label=""];
41->50 [style = dotted, label="true"];
25->12 [style = dashed, label="0"];
64->55 [style = bold, label=""];
41->16 [style = dotted, label="true"];
14->44 [style = solid, label="data"];
55->61 [style = dotted, label="true"];
28->26 [style = bold, label=""];
41->37 [style = dotted, label="true"];
2->10 [style = bold, label=""];
62->54 [style = solid, label="value"];
49->52 [style = solid, label="longerData"];
5->32 [style = bold, label=""];
8->13 [style = solid, label="value"];
41->36 [style = bold, label=""];
60->61 [style = bold, label=""];
61->57 [style = solid, label="blockSize"];
41->40 [style = bold, label=""];
16->31 [style = bold, label=""];
6->33 [style = bold, label=""];
14->43 [style = solid, label="data"];
33->16 [style = dashed, label="0"];
41->47 [style = dotted, label="true"];
37->44 [style = bold, label=""];
14->36 [style = solid, label="data"];
14->22 [style = solid, label="data"];
20->60 [style = dashed, label="0"];
16->27 [style = dotted, label="true"];
27->44 [style = dashed, label="0"];
14->46 [style = solid, label="data"];
22->1 [style = bold, label=""];
12->43 [style = bold, label=""];
55->60 [style = dotted, label="true"];
33->23 [style = solid, label="input"];
41->44 [style = dotted, label="true"];
14->4 [style = solid, label="data"];
35->39 [style = dotted, label="true"];
8->9 [style = solid, label="value"];
10->20 [style = bold, label=""];
16->12 [style = dotted, label="true"];
16->2 [style = dotted, label="true"];
31->22 [style = bold, label=""];
52->53 [style = bold, label=""];
12->2 [style = solid, label="blockSize"];
59->57 [style = solid, label="data"];
25->23 [style = bold, label=""];
63->64 [style = bold, label=""];
8->0 [style = solid, label="value"];
14->62 [style = dashed, label="0"];
29->3 [style = bold, label=""];
14->23 [style = solid, label="data"];
30->16 [style = solid, label="blockSize"];
12->16 [style = bold, label=""];
16->2 [style = bold, label=""];
8->28 [style = solid, label="value"];
18->29 [style = solid, label="input"];
14->32 [style = solid, label="data"];
51->46 [style = bold, label=""];
16->23 [style = dotted, label="true"];
11->15 [style = bold, label=""];
47->44 [style = solid, label="blockSize"];
17->7 [style = bold, label=""];
14->30 [style = solid, label="data"];
14->21 [style = solid, label="data"];
3->5 [style = solid, label="input"];
13->29 [style = bold, label=""];
50->38 [style = bold, label=""];
16->0 [style = dotted, label="true"];
31->1 [style = solid, label="longerData"];
42->30 [style = bold, label=""];
15->4 [style = solid, label="input"];
56->59 [style = dotted, label="true"];
40->41 [style = bold, label=""];
14->27 [style = solid, label="data"];
18->13 [style = bold, label=""];
14->50 [style = solid, label="data"];
34->4 [style = bold, label=""];
14->3 [style = solid, label="data"];
6->30 [style = dashed, label="0"];
14->6 [style = solid, label="data"];
30->16 [style = bold, label=""];
20->24 [style = bold, label=""];
16->12 [style = bold, label=""];
53->45 [style = bold, label=""];
16->6 [style = dotted, label="true"];
}
