digraph {
8 [style = filled, label = "assertThrows(,null)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "emptyBackwardIteratorNextShouldThrowNoSuchElementException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final CompositeReadOnlyWindowStore<Object,Object> store = new CompositeReadOnlyWindowStore<>(storeProvider,QueryableStoreTypes.windowStore(),\"foo\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final WindowStoreIterator<Object> windowStoreIterator = store.backwardFetch(\"key\",ofEpochMilli(1),ofEpochMilli(10))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EasyMock.replay(storeProvider)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "emptyBackwardIteratorPeekNextKeyShouldThrowNoSuchElementException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final StateStoreProvider storeProvider = EasyMock.createNiceMock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThrows(,null)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "emptyBackwardIteratorPeekNextKeyShouldThrowNoSuchElementException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "EasyMock.expect(storeProvider.stores(anyString(),anyObject())).andReturn(emptyList())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
3->8 [style = dashed, label="0"];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
6->5 [style = bold, label=""];
4->1 [style = bold, label=""];
7->1 [style = bold, label=""];
1->0 [style = bold, label=""];
1->6 [style = solid, label="storeProvider"];
9->1 [style = bold, label=""];
2->6 [style = bold, label=""];
0->2 [style = bold, label=""];
1->2 [style = solid, label="storeProvider"];
}
