digraph {
5 [style = filled, label = "canContainNulls(id)@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "T lower = Conversions.fromByteBuffer(field.type(),lowerBounds.get(id))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "upperBounds != null && upperBounds.containsKey(id)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "lowerBounds != null && lowerBounds.containsKey(id)@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Literal<T> lit@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "NaNUtil.isNaN(lower)@@@11@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return ROWS_MUST_MATCH@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "gt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "gt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "canContainNulls(id) || canContainNaNs(id)@@@6@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Literal<T> lit@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "cmp > 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cmp <= 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "T upper = Conversions.fromByteBuffer(field.type(),upperBounds.get(id))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "ltEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20->24 [style = solid, label="upper"];
18->3 [style = bold, label=""];
7->23 [style = bold, label=""];
3->13 [style = solid, label="cmp"];
12->9 [style = solid, label="id"];
8->14 [style = bold, label=""];
14->7 [style = bold, label=""];
13->1 [style = dotted, label="true"];
8->5 [style = bold, label=""];
5->14 [style = dashed, label="0"];
12->23 [style = solid, label="id"];
9->4 [style = bold, label=""];
19->1 [style = bold, label=""];
13->0 [style = bold, label=""];
12->5 [style = solid, label="id"];
23->20 [style = dotted, label="true"];
7->9 [style = bold, label=""];
15->12 [style = bold, label=""];
10->25 [style = dashed, label="0"];
4->18 [style = solid, label="lower"];
23->19 [style = dotted, label="true"];
9->13 [style = dotted, label="true"];
4->3 [style = solid, label="lower"];
21->22 [style = dotted, label="true"];
3->24 [style = dashed, label="0"];
23->24 [style = dotted, label="true"];
2->6 [style = dotted, label="true"];
13->19 [style = dashed, label="0"];
12->20 [style = solid, label="id"];
14->9 [style = bold, label=""];
9->0 [style = bold, label=""];
19->0 [style = bold, label=""];
17->3 [style = bold, label=""];
5->9 [style = bold, label=""];
5->7 [style = dotted, label="true"];
14->7 [style = dotted, label="true"];
3->13 [style = bold, label=""];
23->0 [style = bold, label=""];
21->12 [style = bold, label=""];
2->10 [style = dotted, label="true"];
12->4 [style = solid, label="id"];
15->10 [style = dotted, label="true"];
9->18 [style = dotted, label="true"];
18->17 [style = dotted, label="true"];
2->12 [style = bold, label=""];
11->8 [style = bold, label=""];
12->8 [style = solid, label="id"];
5->23 [style = bold, label=""];
23->20 [style = bold, label=""];
9->4 [style = dotted, label="true"];
24->19 [style = solid, label="cmp"];
20->24 [style = bold, label=""];
19->1 [style = dotted, label="true"];
13->1 [style = bold, label=""];
9->23 [style = dashed, label="0"];
15->16 [style = dotted, label="true"];
18->17 [style = bold, label=""];
12->11 [style = bold, label=""];
9->3 [style = dotted, label="true"];
24->19 [style = bold, label=""];
4->20 [style = dashed, label="0"];
12->14 [style = solid, label="id"];
11->8 [style = solid, label="field"];
4->3 [style = bold, label=""];
5->7 [style = bold, label=""];
21->25 [style = dotted, label="true"];
12->11 [style = solid, label="id"];
4->18 [style = bold, label=""];
1->0 [style = bold, label=""];
}
