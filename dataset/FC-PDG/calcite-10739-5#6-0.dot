digraph {
37 [style = filled, label = "checkCastToString(MAX_NUMERIC_STRINGS(i(,type,isFloat? \"3.402824E38\": \"1.797693134862316E308\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "false@@@35@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "checkCastToApproxOkay(\"'\" + MAX_NUMERIC_STRINGS(i( + \"'\",type,Double.parseDouble(MAX_NUMERIC_STRINGS(i(),isFloat? 1E32: 0)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "checkCastFails(\"'\" + MIN_OVERFLOW_NUMERIC_STRINGS(i( + \"'\",type,OUT_OF_RANGE_MESSAGE,true)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < NUMERIC_TYPE_NAMES.length@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "checkCastToString(MAX_NUMERIC_STRINGS(i(,type,isFloat? \"3.402823E38\": \"1.797693134862316E308\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "checkCastToApproxOkay(MIN_NUMERIC_STRINGS(i(,type,Double.parseDouble(MIN_NUMERIC_STRINGS(i(),0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "checkCastFails(MAX_OVERFLOW_NUMERIC_STRINGS(i(,type,LITERAL_OUT_OF_RANGE_MESSAGE,false)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testCastExactNumericLimits['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "type.equalsIgnoreCase(\"REAL\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "false@@@40@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "return@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "checkCastToApproxOkay(\"'\" + MIN_OVERFLOW_NUMERIC_STRINGS(i( + \"'\",type,0,0)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testCastExactNumericLimits['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Bug.CALCITE_2539_FIXED@@@25@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "checkCastFails(MAX_OVERFLOW_NUMERIC_STRINGS(i(,type,LITERAL_OUT_OF_RANGE_MESSAGE,false)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String type = NUMERIC_TYPE_NAMES(i(@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "checkCastToScalarOkay(MIN_NUMERIC_STRINGS(i(,type)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "checkCastToString(MIN_NUMERIC_STRINGS(i(,null,null)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "checkCastToScalarOkay(\"'\" + MIN_NUMERIC_STRINGS(i( + \"'\",type,MIN_NUMERIC_STRINGS(i()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testCastApproxNumericLimits['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "checkCastFails(\"'\" + MAX_OVERFLOW_NUMERIC_STRINGS(i( + \"'\",type,OUT_OF_RANGE_MESSAGE,true)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "type.equalsIgnoreCase(\"DOUBLE\") || type.equalsIgnoreCase(\"FLOAT\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "checkCastToString(MIN_NUMERIC_STRINGS(i(,null,isFloat? null: null)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "checkCastToScalarOkay(\"'\" + MAX_NUMERIC_STRINGS(i( + \"'\",type,MAX_NUMERIC_STRINGS(i()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "isFloat = true@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "checkCastToString(MAX_NUMERIC_STRINGS(i(,null,isFloat? null: \"1.79769313486231E308\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "checkCastToApproxOkay(MAX_NUMERIC_STRINGS(i(,type,Double.parseDouble(MAX_NUMERIC_STRINGS(i(),isFloat? 1E32: 0)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "checkCastToString(MAX_NUMERIC_STRINGS(i(,null,null)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "checkCastFails(MAX_OVERFLOW_NUMERIC_STRINGS(i(,type,OUT_OF_RANGE_MESSAGE,true)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Bug.CALCITE_2539_FIXED@@@18@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "checkCastToScalarOkay(MAX_NUMERIC_STRINGS(i(,type)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "!enable@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "boolean isFloat@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "checkCastFails(\"'\" + MAX_OVERFLOW_NUMERIC_STRINGS(i( + \"'\",type,OUT_OF_RANGE_MESSAGE,true)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "checkCastToString(MIN_NUMERIC_STRINGS(i(,type,isFloat? \"1.401299E-45\": \"4.940656458412465E-324\")@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "isFloat = false@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "type.equalsIgnoreCase(\"DOUBLE\") || type.equalsIgnoreCase(\"FLOAT\") || type.equalsIgnoreCase(\"REAL\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "checkCastToApproxOkay(MIN_OVERFLOW_NUMERIC_STRINGS(i(,type,0,0)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "checkCastFails(\"'notnumeric'\",type,INVALID_CHAR_MESSAGE,true)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "checkCastFails(MIN_OVERFLOW_NUMERIC_STRINGS(i(,type,LITERAL_OUT_OF_RANGE_MESSAGE,false)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "type.equalsIgnoreCase(\"BIGINT\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "isFloat@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "checkCastToString(MIN_NUMERIC_STRINGS(i(,type,isFloat? \"1.401298E-45\": null)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "checkCastToString(MIN_NUMERIC_STRINGS(i(,null,isFloat? null: \"4.940656458412465E-324\")@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "checkCastToString(MAX_NUMERIC_STRINGS(i(,type,null)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkCastFails(\"'notnumeric'\",type,INVALID_CHAR_MESSAGE,true)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "tester.setFor(SqlStdOperatorTable.CAST)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "checkCastToApproxOkay(\"'\" + MIN_NUMERIC_STRINGS(i( + \"'\",type,Double.parseDouble(MIN_NUMERIC_STRINGS(i(),0)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Bug.CALCITE_2539_FIXED@@@33@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
49->30 [style = bold, label=""];
39->17 [style = bold, label=""];
15->27 [style = solid, label="i"];
36->42 [style = bold, label=""];
15->14 [style = solid, label="i"];
8->24 [style = dotted, label="true"];
45->48 [style = bold, label=""];
10->27 [style = solid, label="i"];
40->49 [style = bold, label=""];
30->44 [style = dotted, label="true"];
19->22 [style = bold, label=""];
14->24 [style = bold, label=""];
51->36 [style = bold, label=""];
5->32 [style = bold, label=""];
10->43 [style = solid, label="i"];
25->17 [style = bold, label=""];
33->47 [style = bold, label=""];
42->50 [style = bold, label=""];
19->40 [style = bold, label=""];
19->4 [style = solid, label="type"];
15->37 [style = solid, label="i"];
19->37 [style = solid, label="type"];
19->17 [style = solid, label="type"];
6->2 [style = bold, label=""];
15->7 [style = solid, label="i"];
15->43 [style = solid, label="i"];
39->37 [style = solid, label="isFloat"];
44->37 [style = solid, label="isFloat"];
8->19 [style = dotted, label="true"];
25->17 [style = dotted, label="true"];
8->51 [style = dotted, label="true"];
15->46 [style = solid, label="i"];
15->4 [style = solid, label="i"];
19->1 [style = solid, label="type"];
20->46 [style = bold, label=""];
5->32 [style = dotted, label="false"];
8->26 [style = dotted, label="true"];
15->34 [style = solid, label="i"];
10->50 [style = solid, label="i"];
10->5 [style = solid, label="i"];
41->28 [style = dotted, label="true"];
5->38 [style = dotted, label="true"];
32->29 [style = dotted, label="true"];
44->34 [style = solid, label="isFloat"];
10->14 [style = solid, label="i"];
8->48 [style = dotted, label="true"];
8->5 [style = dotted, label="true"];
19->14 [style = solid, label="type"];
16->7 [style = bold, label=""];
8->36 [style = dotted, label="true"];
49->39 [style = dotted, label="true"];
10->7 [style = solid, label="i"];
44->31 [style = solid, label="isFloat"];
10->1 [style = solid, label="i"];
19->42 [style = solid, label="type"];
10->29 [style = solid, label="i"];
15->8 [style = bold, label=""];
16->3 [style = dotted, label="true"];
19->27 [style = solid, label="type"];
10->9 [style = solid, label="i"];
15->17 [style = solid, label="i"];
8->11 [style = dotted, label="true"];
50->43 [style = bold, label=""];
19->47 [style = solid, label="type"];
49->30 [style = dotted, label="false"];
1->9 [style = bold, label=""];
15->19 [style = solid, label="i"];
15->31 [style = solid, label="i"];
47->27 [style = bold, label=""];
15->50 [style = solid, label="i"];
8->27 [style = dotted, label="true"];
39->43 [style = solid, label="isFloat"];
16->25 [style = bold, label=""];
20->18 [style = bold, label=""];
16->17 [style = dotted, label="false"];
25->20 [style = dotted, label="true"];
26->0 [style = dotted, label="true"];
19->7 [style = solid, label="type"];
19->50 [style = solid, label="type"];
19->5 [style = solid, label="type"];
24->11 [style = bold, label=""];
44->43 [style = solid, label="isFloat"];
35->13 [style = bold, label=""];
41->20 [style = dotted, label="false"];
11->43 [style = dashed, label="0"];
3->18 [style = bold, label=""];
44->17 [style = bold, label=""];
10->20 [style = solid, label="i"];
5->37 [style = bold, label=""];
19->48 [style = solid, label="type"];
37->38 [style = bold, label=""];
10->11 [style = solid, label="i"];
49->39 [style = bold, label=""];
32->34 [style = dotted, label="true"];
5->38 [style = dashed, label="0"];
19->46 [style = solid, label="type"];
44->47 [style = solid, label="isFloat"];
38->31 [style = bold, label=""];
17->33 [style = dotted, label="true"];
15->20 [style = solid, label="i"];
10->19 [style = solid, label="i"];
39->51 [style = solid, label="isFloat"];
10->2 [style = solid, label="i"];
32->29 [style = bold, label=""];
10->42 [style = solid, label="i"];
44->51 [style = solid, label="isFloat"];
19->0 [style = solid, label="type"];
10->36 [style = solid, label="i"];
17->33 [style = bold, label=""];
8->19 [style = bold, label=""];
21->13 [style = bold, label=""];
27->41 [style = bold, label=""];
15->2 [style = solid, label="i"];
19->45 [style = solid, label="type"];
8->10 [style = dotted, label="true"];
8->0 [style = dotted, label="true"];
13->15 [style = bold, label=""];
8->40 [style = dotted, label="true"];
8->16 [style = dotted, label="true"];
10->47 [style = solid, label="i"];
4->16 [style = bold, label=""];
19->51 [style = solid, label="type"];
39->38 [style = solid, label="isFloat"];
9->37 [style = dashed, label="0"];
15->45 [style = solid, label="i"];
10->3 [style = solid, label="i"];
12->4 [style = bold, label=""];
8->6 [style = dotted, label="true"];
10->6 [style = solid, label="i"];
17->47 [style = bold, label=""];
34->45 [style = bold, label=""];
10->8 [style = bold, label=""];
15->5 [style = solid, label="i"];
15->29 [style = solid, label="i"];
16->20 [style = dotted, label="false"];
10->31 [style = solid, label="i"];
39->29 [style = solid, label="isFloat"];
8->2 [style = dotted, label="true"];
15->9 [style = solid, label="i"];
17->20 [style = bold, label=""];
25->18 [style = bold, label=""];
46->51 [style = bold, label=""];
39->34 [style = solid, label="isFloat"];
8->22 [style = dotted, label="true"];
16->7 [style = dotted, label="true"];
16->25 [style = dotted, label="false"];
8->50 [style = dotted, label="true"];
7->3 [style = bold, label=""];
8->41 [style = dotted, label="true"];
23->13 [style = bold, label=""];
19->31 [style = solid, label="type"];
15->1 [style = solid, label="i"];
15->3 [style = solid, label="i"];
15->47 [style = solid, label="i"];
16->17 [style = bold, label=""];
24->6 [style = bold, label=""];
10->45 [style = solid, label="i"];
22->12 [style = bold, label=""];
18->14 [style = bold, label=""];
15->18 [style = solid, label="i"];
15->36 [style = solid, label="i"];
8->18 [style = dotted, label="true"];
9->5 [style = bold, label=""];
8->1 [style = dotted, label="true"];
15->28 [style = solid, label="i"];
10->12 [style = solid, label="i"];
8->17 [style = dotted, label="true"];
19->18 [style = solid, label="type"];
19->20 [style = solid, label="type"];
48->10 [style = bold, label=""];
43->5 [style = bold, label=""];
15->8 [style = solid, label="i"];
10->18 [style = solid, label="i"];
22->8 [style = bold, label=""];
44->29 [style = solid, label="isFloat"];
10->38 [style = solid, label="i"];
2->11 [style = bold, label=""];
31->48 [style = bold, label=""];
8->42 [style = dotted, label="true"];
10->4 [style = solid, label="i"];
5->31 [style = dotted, label="true"];
8->49 [style = dotted, label="true"];
24->2 [style = dotted, label="true"];
10->51 [style = solid, label="i"];
44->45 [style = solid, label="isFloat"];
15->6 [style = solid, label="i"];
44->38 [style = solid, label="isFloat"];
11->1 [style = bold, label=""];
39->45 [style = solid, label="isFloat"];
2->50 [style = dashed, label="0"];
26->10 [style = bold, label=""];
10->46 [style = solid, label="i"];
19->36 [style = solid, label="type"];
44->41 [style = solid, label="isFloat"];
5->26 [style = bold, label=""];
15->38 [style = solid, label="i"];
8->47 [style = dotted, label="true"];
15->42 [style = solid, label="i"];
19->28 [style = solid, label="type"];
15->11 [style = solid, label="i"];
0->10 [style = bold, label=""];
29->34 [style = bold, label=""];
5->0 [style = bold, label=""];
8->12 [style = dotted, label="true"];
19->2 [style = solid, label="type"];
39->31 [style = solid, label="isFloat"];
28->46 [style = bold, label=""];
10->28 [style = solid, label="i"];
8->46 [style = dotted, label="true"];
32->45 [style = dotted, label="true"];
15->12 [style = solid, label="i"];
19->29 [style = solid, label="type"];
14->20 [style = dashed, label="0"];
19->3 [style = solid, label="type"];
8->43 [style = dotted, label="true"];
32->48 [style = bold, label=""];
10->37 [style = solid, label="i"];
14->6 [style = bold, label=""];
19->6 [style = solid, label="type"];
10->8 [style = solid, label="i"];
15->51 [style = solid, label="i"];
8->14 [style = dotted, label="true"];
10->17 [style = solid, label="i"];
19->12 [style = solid, label="type"];
15->10 [style = solid, label="i"];
39->41 [style = solid, label="isFloat"];
30->8 [style = bold, label=""];
30->44 [style = bold, label=""];
39->47 [style = solid, label="isFloat"];
8->4 [style = dotted, label="true"];
41->20 [style = bold, label=""];
41->28 [style = bold, label=""];
26->0 [style = bold, label=""];
10->34 [style = solid, label="i"];
5->37 [style = dotted, label="true"];
24->6 [style = dotted, label="true"];
8->9 [style = dotted, label="true"];
}
