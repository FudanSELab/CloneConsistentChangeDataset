digraph {
14 [style = filled, label = "assertFalse(schema.containsTable(\"t_order\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(schema.containsTable(\"t_order\"))@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "refresh['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "refreshWithRenameTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "alterTableStatement.setRenameTable(new SimpleTableSegment(new TableNameSegment(1,3,new IdentifierValue(\"t_order_new\"))))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(schema.containsTable(\"t_order_new\"))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(schema.containsTable(\"t_order\"))@@@9@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DataSource dataSource = mock(,RETURNS_DEEP_STUBS)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final AlterTableStatement alterTableStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final AlterTableStatement alterTableStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SchemaRefresher<AlterTableStatement> schemaRefresher = new AlterTableStatementSchemaRefresher()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "schemaRefresher.refresh(schema,Collections.singletonList(\"ds\"),alterTableStatement,materials)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ShardingSphereMetaData metaData = new ShardingSphereMetaData(\"\",mock(),mock(),schema)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "when(dataSource.getConnection().getMetaData().getTables(any(),any(),any(),any())).thenReturn(mock())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "refresh['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "alterTableStatement.setTable(new SimpleTableSegment(new TableNameSegment(1,3,new IdentifierValue(\"t_order\"))))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "schemaRefresher.refresh(metaData,Collections.singletonList(\"ds\"),alterTableStatement,new ConfigurationProperties(new Properties()))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->16 [style = bold, label=""];
4->10 [style = bold, label=""];
17->8 [style = bold, label=""];
4->2 [style = solid, label="schema"];
7->17 [style = bold, label=""];
15->7 [style = bold, label=""];
10->11 [style = solid, label="metaData"];
11->12 [style = bold, label=""];
4->2 [style = bold, label=""];
5->3 [style = dotted, label="true"];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
3->13 [style = dashed, label="0"];
15->13 [style = dotted, label="true"];
4->10 [style = solid, label="schema"];
8->1 [style = bold, label=""];
0->14 [style = dashed, label="0"];
13->2 [style = solid, label="alterTableStatement"];
6->4 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
3->2 [style = solid, label="alterTableStatement"];
2->14 [style = bold, label=""];
5->7 [style = bold, label=""];
9->3 [style = dotted, label="true"];
3->11 [style = solid, label="alterTableStatement"];
10->11 [style = bold, label=""];
}
