digraph {
20 [style = filled, label = "int prefetch@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int maxConcurrency@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "v == null@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return RxJavaPlugins.onAssembly(new ObservableFlatMap<>(this,mapper,delayErrors,maxConcurrency,bufferSize))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Objects.requireNonNull(mapper,\"mapper is null\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return RxJavaPlugins.onAssembly(new FlowableConcatMap<T,R>(this,mapper,prefetch,tillTheEnd? ErrorMode.END: ErrorMode.BOUNDARY))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Function<? super T,? extends Publisher<? extends R>> mapper@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Function<? super T,? extends ObservableSource<? extends R>> mapper@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "return RxJavaPlugins.onAssembly(new ObservableFlatMap<T,R>(this,mapper,delayErrors,maxConcurrency,bufferSize))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "flatMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "concatMapDelayError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return ObservableScalarXMap.scalarXMap(v,mapper)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return empty()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "boolean tillTheEnd@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "int maxConcurrency@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ObjectHelper.verifyPositive(prefetch,\"prefetch\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "this instanceof ScalarSupplier@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "boolean delayErrors@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "ObjectHelper.verifyPositive(maxConcurrency,\"maxConcurrency\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int bufferSize@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "@SuppressWarnings(\"unchecked\") T v = ((ScalarSupplier<T>)this).get()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Function<? super T,? extends ObservableSource<? extends R>> mapper@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "flatMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return FlowableScalarXMap.scalarXMap(v,mapper)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ObjectHelper.verifyPositive(bufferSize,\"bufferSize\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "boolean delayErrors@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return empty()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
1->5 [style = bold, label=""];
14->16 [style = solid, label="delayErrors"];
11->16 [style = bold, label=""];
15->7 [style = solid, label="mapper"];
5->8 [style = bold, label=""];
19->10 [style = dotted, label="true"];
12->3 [style = solid, label="bufferSize"];
9->12 [style = dotted, label="true"];
11->10 [style = solid, label="v"];
9->0 [style = dotted, label="true"];
24->19 [style = bold, label=""];
10->6 [style = dotted, label="true"];
21->20 [style = dotted, label="true"];
8->16 [style = dashed, label="0"];
17->18 [style = dotted, label="true"];
11->23 [style = solid, label="v"];
12->16 [style = solid, label="bufferSize"];
0->8 [style = solid, label="mapper"];
15->5 [style = solid, label="mapper"];
6->23 [style = bold, label=""];
11->10 [style = dotted, label="true"];
5->23 [style = dashed, label="0"];
10->5 [style = solid, label="v"];
6->1 [style = dotted, label="true"];
25->26 [style = solid, label="tillTheEnd"];
3->11 [style = bold, label=""];
23->26 [style = bold, label=""];
17->14 [style = dotted, label="true"];
19->23 [style = dotted, label="true"];
12->8 [style = solid, label="bufferSize"];
21->22 [style = dotted, label="true"];
19->11 [style = bold, label=""];
11->5 [style = dotted, label="true"];
4->8 [style = solid, label="maxConcurrency"];
22->7 [style = solid, label="mapper"];
9->7 [style = bold, label=""];
10->6 [style = bold, label=""];
0->5 [style = solid, label="mapper"];
15->16 [style = solid, label="mapper"];
18->16 [style = solid, label="maxConcurrency"];
5->16 [style = bold, label=""];
17->7 [style = bold, label=""];
6->1 [style = bold, label=""];
21->25 [style = dotted, label="true"];
6->5 [style = bold, label=""];
7->24 [style = bold, label=""];
13->24 [style = dashed, label="0"];
17->15 [style = dotted, label="true"];
12->25 [style = dashed, label="0"];
13->3 [style = bold, label=""];
17->12 [style = dotted, label="true"];
11->10 [style = bold, label=""];
10->23 [style = bold, label=""];
19->26 [style = bold, label=""];
11->6 [style = dotted, label="true"];
10->6 [style = solid, label="v"];
9->2 [style = dotted, label="true"];
19->11 [style = dotted, label="true"];
20->26 [style = solid, label="prefetch"];
22->23 [style = solid, label="mapper"];
9->4 [style = dotted, label="true"];
21->7 [style = bold, label=""];
18->13 [style = solid, label="maxConcurrency"];
11->8 [style = bold, label=""];
0->7 [style = solid, label="mapper"];
2->8 [style = solid, label="delayErrors"];
8->26 [style = dashed, label="0"];
20->24 [style = solid, label="prefetch"];
4->13 [style = solid, label="maxConcurrency"];
22->26 [style = solid, label="mapper"];
}
