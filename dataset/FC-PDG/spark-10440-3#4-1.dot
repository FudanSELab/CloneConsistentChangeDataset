digraph {
10 [style = filled, label = "assertTrue(stopMsg instanceof Stop)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Socket s = new Socket(InetAddress.getLoopbackAddress(),LauncherServer.getServerInstance().getPort())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "handle.addListener(new SparkAppHandle.Listener(){@Override public void stateChanged(SparkAppHandle handle){semaphore.release()}@Override public void infoChanged(SparkAppHandle handle){semaphore.release()}})@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "LauncherServer server = LauncherServer.getOrCreateServer()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "handle.addListener(new SparkAppHandle.Listener(){public void stateChanged(SparkAppHandle handle){semaphore.release()}public void infoChanged(SparkAppHandle handle){semaphore.release()}})@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNotNull(handle.getConnection())@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "client.send(new SetAppId(\"app-id\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.send(new Hello(handle.getSecret(),\"1.4.0\"))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ChildProcAppHandle handle = new ChildProcAppHandle(server)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "client.send(new Hello(secret,\"1.4.0\"))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testCommunication['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Message stopMsg = client.inbound.poll(30,TimeUnit.SECONDS)@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "TestClient client = null@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testSparkSubmitVmShutsDown['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(semaphore.tryAcquire(30,TimeUnit.SECONDS))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "client.send(new SetState(SparkAppHandle.State.RUNNING))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(SparkAppHandle.State.RUNNING,handle.getState())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Socket s = new Socket(InetAddress.getLoopbackAddress(),server.getPort())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "{handle.kill()close(client)client.clientThread.join()}@@@33@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertTrue(semaphore.tryAcquire(30,TimeUnit.SECONDS))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(SparkAppHandle.State.LOST,handle.getState())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(\"app-id\",handle.getAppId())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(semaphore.tryAcquire(30,TimeUnit.SECONDS))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(semaphore.tryAcquire(1,TimeUnit.SECONDS))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String secret = server.registerHandle(handle)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "close(client)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "{kill(handle)close(client)client.clientThread.join()}@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "handle.stop()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ChildProcAppHandle handle = LauncherServer.newAppHandle()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testCommunication['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertTrue(semaphore.tryAcquire(30,TimeUnit.SECONDS))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client = new TestClient(s)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->8 [style = bold, label=""];
0->16 [style = bold, label=""];
10->20 [style = bold, label=""];
16->18 [style = bold, label=""];
8->20 [style = solid, label="client"];
21->24 [style = solid, label="server"];
8->15 [style = bold, label=""];
4->17 [style = bold, label=""];
9->11 [style = bold, label=""];
12->28 [style = bold, label=""];
8->23 [style = bold, label=""];
12->5 [style = solid, label="s"];
6->22 [style = bold, label=""];
11->6 [style = bold, label=""];
25->23 [style = solid, label="secret"];
16->34 [style = bold, label=""];
2->30 [style = solid, label="handle"];
31->2 [style = bold, label=""];
21->24 [style = bold, label=""];
33->12 [style = bold, label=""];
32->16 [style = bold, label=""];
5->10 [style = solid, label="client"];
23->0 [style = bold, label=""];
13->23 [style = dashed, label="0"];
34->30 [style = bold, label=""];
17->19 [style = bold, label=""];
12->7 [style = bold, label=""];
14->33 [style = bold, label=""];
26->21 [style = bold, label=""];
11->6 [style = solid, label="stopMsg"];
18->34 [style = dashed, label="0"];
7->5 [style = bold, label=""];
18->4 [style = bold, label=""];
3->7 [style = bold, label=""];
19->9 [style = bold, label=""];
25->12 [style = bold, label=""];
22->10 [style = solid, label="stopMsg"];
2->21 [style = dashed, label="0"];
24->25 [style = bold, label=""];
12->28 [style = dashed, label="0"];
15->0 [style = bold, label=""];
5->13 [style = bold, label=""];
14->12 [style = bold, label=""];
2->14 [style = bold, label=""];
6->10 [style = bold, label=""];
5->32 [style = solid, label="client"];
22->10 [style = bold, label=""];
28->8 [style = solid, label="s"];
1->2 [style = bold, label=""];
12->3 [style = bold, label=""];
2->10 [style = solid, label="handle"];
28->27 [style = bold, label=""];
27->29 [style = bold, label=""];
13->8 [style = bold, label=""];
24->25 [style = solid, label="handle"];
15->32 [style = bold, label=""];
5->30 [style = solid, label="client"];
}
