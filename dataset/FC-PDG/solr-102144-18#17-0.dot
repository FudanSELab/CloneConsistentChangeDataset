digraph {
12 [style = filled, label = "secondPassCollector = new TopGroupsCollector<>(new TermGroupSelector(field.getName()),firstPhaseGroups,groupSort,withinGroupSort,maxDocPerGroup,needMaxScore)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "firstPhaseGroups.isEmpty()@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final List<Collector> collectors = new ArrayList<>(2)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "return collectors@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "fieldType.getNumberType() != null@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Collection<SearchGroup<MutableValue>> v = GroupConverter.toMutable(field,firstPhaseGroups)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "allGroupsCollector = new AllGroupsCollector<>(new TermGroupSelector(field.getName()))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "create['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "return Collections.emptyList()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<Collector> collectors = new ArrayList<>(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "secondPassCollector = new TopGroupsCollector<>(new ValueSourceGroupSelector(vs,new HashMap<>()),v,groupSort,withinGroupSort,maxDocPerGroup,needMaxScore)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "ValueSource vs = fieldType.getValueSource(field,null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "allGroupsCollector = new AllGroupsCollector<>(new ValueSourceGroupSelector(vs,new HashMap<>()))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "firstPassGroupingCollector = new FirstPassGroupingCollector<>(new ValueSourceGroupSelector(vs,new HashMap<>()),groupSort,topNGroups)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ValueSource vs = fieldType.getValueSource(field,null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "collectors.add(secondPassCollector)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return collectors@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "fieldType.getNumberType() != null@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "secondPassCollector = new TopGroupsCollector<>(new TermGroupSelector(field.getName()),firstPhaseGroups,groupSort,withinGroupSort,maxDocPerGroup,needScores,needMaxScore)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "ValueSource vs = fieldType.getValueSource(field,null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "secondPassCollector = new TopGroupsCollector<>(new ValueSourceGroupSelector(vs,new HashMap<>()),v,groupSort,withinGroupSort,maxDocPerGroup,needScores,needMaxScore)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "final FieldType fieldType = field.getType()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "fieldType.getNumberType() != null@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "firstPassGroupingCollector = new FirstPassGroupingCollector<>(new TermGroupSelector(field.getName()),groupSort,topNGroups)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "topNGroups > 0@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "collectors.add(firstPassGroupingCollector)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "collectors.add(allGroupsCollector)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "includeGroupCount@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "create['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "create['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->6 [style = dotted, label="true"];
4->9 [style = bold, label=""];
14->3 [style = bold, label=""];
7->6 [style = solid, label="vs"];
12->11 [style = solid, label="secondPassCollector"];
1->4 [style = bold, label=""];
22->19 [style = solid, label="allGroupsCollector"];
18->24 [style = bold, label=""];
9->11 [style = bold, label=""];
9->11 [style = solid, label="secondPassCollector"];
27->23 [style = solid, label="firstPassGroupingCollector"];
21->1 [style = dotted, label="true"];
22->19 [style = bold, label=""];
21->27 [style = bold, label=""];
2->6 [style = bold, label=""];
15->21 [style = bold, label=""];
19->20 [style = bold, label=""];
21->27 [style = dotted, label="false"];
12->11 [style = bold, label=""];
23->26 [style = bold, label=""];
7->13 [style = solid, label="vs"];
4->7 [style = dotted, label="true"];
9->27 [style = dashed, label="0"];
10->3 [style = bold, label=""];
11->23 [style = dashed, label="0"];
26->19 [style = dotted, label="true"];
16->25 [style = bold, label=""];
25->29 [style = bold, label=""];
15->21 [style = dotted, label="true"];
25->29 [style = solid, label="vs"];
16->22 [style = bold, label=""];
13->11 [style = bold, label=""];
21->28 [style = dotted, label="true"];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
13->11 [style = solid, label="secondPassCollector"];
15->26 [style = bold, label=""];
2->13 [style = bold, label=""];
4->13 [style = dotted, label="true"];
26->16 [style = bold, label=""];
4->9 [style = dotted, label="false"];
1->28 [style = bold, label=""];
3->5 [style = bold, label=""];
3->5 [style = dotted, label="true"];
6->13 [style = dashed, label="0"];
29->19 [style = bold, label=""];
5->0 [style = bold, label=""];
0->8 [style = solid, label="collectors"];
29->19 [style = solid, label="allGroupsCollector"];
28->23 [style = bold, label=""];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
6->11 [style = bold, label=""];
21->1 [style = bold, label=""];
24->17 [style = bold, label=""];
4->12 [style = dotted, label="false"];
17->15 [style = bold, label=""];
4->12 [style = bold, label=""];
11->8 [style = bold, label=""];
26->16 [style = dotted, label="true"];
27->23 [style = bold, label=""];
1->28 [style = solid, label="vs"];
9->12 [style = dashed, label="0"];
15->23 [style = dotted, label="true"];
6->11 [style = solid, label="secondPassCollector"];
16->25 [style = dotted, label="true"];
24->20 [style = solid, label="collectors"];
16->29 [style = dotted, label="true"];
2->13 [style = solid, label="v"];
4->2 [style = dotted, label="true"];
2->6 [style = solid, label="v"];
26->20 [style = bold, label=""];
28->23 [style = solid, label="firstPassGroupingCollector"];
16->22 [style = dotted, label="false"];
}
