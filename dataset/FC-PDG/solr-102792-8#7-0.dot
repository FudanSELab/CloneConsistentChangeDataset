digraph {
4 [style = filled, label = "String collection@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "collection = COLLECTIONORALIAS + \"_collection\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CollectionAdminRequest.createCollection(collection,\"conf\",2,1).setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE).process(cluster.getSolrClient())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "setupCluster['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "boolean useAlias = random().nextBoolean()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "CollectionAdminRequest.createCollection(COLLECTION,\"conf\",2,1).process(cluster.getSolrClient())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "CollectionAdminRequest.createCollection(collection,\"conf\",2,1).process(cluster.getSolrClient())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "setupCluster['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "useAlias@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "AbstractDistribZkTestBase.waitForRecoveriesToFinish(collection,cluster.getSolrClient().getZkStateReader(),false,true,TIMEOUT)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "configureCluster(4).addConfig(\"conf\",getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\")).configure()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CollectionAdminRequest.createAlias(COLLECTIONORALIAS,collection).process(cluster.getSolrClient())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "AbstractDistribZkTestBase.waitForRecoveriesToFinish(COLLECTION,cluster.getSolrClient().getZkStateReader(),false,true,TIMEOUT)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "useAlias@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "setupCluster['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "collection = COLLECTIONORALIAS@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "configureCluster(2).addConfig(\"conf\",getFile(\"solrj\").toPath().resolve(\"solr\").resolve(\"configsets\").resolve(\"streaming\").resolve(\"conf\")).configure()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->15 [style = bold, label=""];
8->6 [style = dotted, label="false"];
15->14 [style = bold, label=""];
2->3 [style = bold, label=""];
7->1 [style = solid, label="useAlias"];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
0->11 [style = dashed, label="0"];
7->4 [style = bold, label=""];
7->8 [style = solid, label="useAlias"];
1->9 [style = bold, label=""];
0->10 [style = bold, label=""];
8->5 [style = bold, label=""];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
8->5 [style = dotted, label="true"];
11->10 [style = bold, label=""];
6->11 [style = bold, label=""];
1->9 [style = dotted, label="true"];
5->10 [style = solid, label="collection"];
3->15 [style = dashed, label="0"];
4->8 [style = bold, label=""];
5->11 [style = bold, label=""];
12->3 [style = bold, label=""];
14->13 [style = bold, label=""];
10->1 [style = bold, label=""];
6->10 [style = solid, label="collection"];
}
