digraph {
12 [style = filled, label = "Constructor<?> constructor = null@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "getBindConstructor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "deduceBindConstructor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "constructor != null@@@17@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "return deducedKotlinBindConstructor(type)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return constructors(0(@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Class<?> type = bindable.getType().resolve()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "!Modifier.isPrivate(candidate.getModifiers())@@@16@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "return null@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "boolean isNestedConstructorBinding@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "getBindConstructor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return constructor@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "isKotlinType(type)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return null@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return null@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Class<?> type@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return getDeducedKotlinConstructor(type)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "constructor = candidate@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "constructor != null && constructor.getParameterCount() > 0@@@23@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Bindable<?> bindable@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return null@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return constructors(0(@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Constructor<?>(( constructors = type.getDeclaredConstructors()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "KotlinDetector.isKotlinPresent() && KotlinDetector.isKotlinType(type)@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "boolean isNestedConstructorBinding@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "constructors.length == 1 && constructors(0(.getParameterCount() > 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "bindable.getValue() != null || type == null@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12->18 [style = solid, label="constructor"];
10->1 [style = dotted, label="true"];
14->18 [style = bold, label=""];
9->4 [style = bold, label=""];
13->19 [style = bold, label=""];
10->23 [style = bold, label=""];
0->7 [style = bold, label=""];
7->9 [style = bold, label=""];
1->12 [style = bold, label=""];
12->14 [style = bold, label=""];
19->18 [style = solid, label="constructor"];
11->0 [style = bold, label=""];
4->5 [style = bold, label=""];
14->13 [style = bold, label=""];
19->17 [style = solid, label="constructor"];
26->10 [style = bold, label=""];
1->23 [style = bold, label=""];
5->10 [style = bold, label=""];
10->2 [style = solid, label="constructors"];
7->9 [style = dotted, label="true"];
26->1 [style = solid, label="constructors"];
2->3 [style = bold, label=""];
20->15 [style = dotted, label="true"];
10->1 [style = bold, label=""];
11->8 [style = dotted, label="true"];
18->17 [style = dotted, label="true"];
1->3 [style = bold, label=""];
14->13 [style = dotted, label="true"];
22->26 [style = bold, label=""];
24->22 [style = solid, label="type"];
7->4 [style = bold, label=""];
21->26 [style = bold, label=""];
25->24 [style = dotted, label="true"];
11->6 [style = dotted, label="true"];
3->19 [style = bold, label=""];
18->16 [style = bold, label=""];
13->3 [style = dotted, label="true"];
12->13 [style = solid, label="constructor"];
0->5 [style = solid, label="type"];
14->19 [style = dotted, label="true"];
4->10 [style = bold, label=""];
12->17 [style = solid, label="constructor"];
13->3 [style = bold, label=""];
18->17 [style = bold, label=""];
4->5 [style = dotted, label="true"];
1->2 [style = dotted, label="true"];
19->14 [style = bold, label=""];
22->21 [style = bold, label=""];
20->8 [style = dotted, label="true"];
24->21 [style = solid, label="type"];
20->0 [style = bold, label=""];
17->16 [style = bold, label=""];
19->18 [style = bold, label=""];
25->22 [style = bold, label=""];
1->2 [style = bold, label=""];
0->7 [style = solid, label="type"];
2->12 [style = bold, label=""];
0->4 [style = solid, label="type"];
22->21 [style = dotted, label="true"];
19->13 [style = solid, label="constructor"];
}
