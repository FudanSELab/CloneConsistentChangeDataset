digraph {
6 [style = filled, label = "StreamingRuntimeContext context = new StreamingRuntimeContext(createDescriptorCapturingMockOp(descriptorCapture,config),createMockEnvironment(),Collections.emptyMap())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "context.getAggregatingState(descr)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testReducingStateInstantiation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "@SuppressWarnings(\"unchecked\") AggregateFunction<String,TaskInfo,String> aggregate = (AggregateFunction<String,TaskInfo,String>)mock()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "AggregatingStateDescriptor<?,?,?> descrIntercepted = (AggregatingStateDescriptor<?,?,?>)descriptorCapture.get()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testReducingStateInstantiation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "testAggregatingStateInstantiation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final ExecutionConfig config = new ExecutionConfig()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "AggregatingStateDescriptor<String,TaskInfo,String> descr = new AggregatingStateDescriptor<>(\"name\",aggregate,)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final AtomicReference<Object> descriptorCapture = new AtomicReference<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ReducingStateDescriptor<TaskInfo> descr = new ReducingStateDescriptor<>(\"name\",reducer,)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "config.registerKryoType()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "@SuppressWarnings(\"unchecked\") ReduceFunction<TaskInfo> reducer = (ReduceFunction<TaskInfo>)mock()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TypeSerializer<?> serializer = descrIntercepted.getSerializer()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(serializer instanceof KryoSerializer)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "StreamingRuntimeContext context = createRuntimeContext(descriptorCapture,config)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertTrue(((KryoSerializer<?>)serializer).getKryo().getRegistration().getId() > 0)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "context.getReducingState(descr)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StateDescriptor<?,?> descrIntercepted = (StateDescriptor<?,?>)descriptorCapture.get()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->4 [style = solid, label="descr"];
4->9 [style = bold, label=""];
5->8 [style = bold, label=""];
8->13 [style = solid, label="descriptorCapture"];
15->7 [style = bold, label=""];
7->10 [style = bold, label=""];
16->14 [style = solid, label="descr"];
6->18 [style = bold, label=""];
2->3 [style = bold, label=""];
8->6 [style = bold, label=""];
9->7 [style = bold, label=""];
12->0 [style = bold, label=""];
3->4 [style = bold, label=""];
6->2 [style = bold, label=""];
11->0 [style = bold, label=""];
17->0 [style = bold, label=""];
7->10 [style = solid, label="serializer"];
2->3 [style = solid, label="reducer"];
9->15 [style = dashed, label="0"];
2->18 [style = dashed, label="0"];
0->13 [style = solid, label="config"];
18->16 [style = solid, label="aggregate"];
8->6 [style = solid, label="descriptorCapture"];
16->14 [style = bold, label=""];
14->15 [style = bold, label=""];
4->14 [style = dashed, label="0"];
10->1 [style = bold, label=""];
3->16 [style = dashed, label="0"];
8->13 [style = bold, label=""];
0->5 [style = bold, label=""];
13->2 [style = bold, label=""];
0->6 [style = solid, label="config"];
18->16 [style = bold, label=""];
}
