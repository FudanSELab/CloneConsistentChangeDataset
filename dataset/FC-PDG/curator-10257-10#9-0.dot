digraph {
12 [style = filled, label = "latch.start()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(countDownLatch))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "client.getConnectionStateListenable().addListener(new ConnectionStateListener(){@Override public void stateChanged(CuratorFramework client,ConnectionState newState){if (newState == ConnectionState.LOST) {countDownLatch.countDown()}}})@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "{for (LeaderLatch latch : latches){CloseableUtils.closeQuietly(latch)}TestCleanState.closeAndTestClean(client)}@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final int PARTICIPANT_ID = 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "++i@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCorrectWatching['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final int PARTICIPANT_QTY = 10@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "latches.add(latch)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "waitForALeader(latches,timing)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "server.restart()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "latches.get(PARTICIPANT_ID).close()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<LeaderLatch> latches = Lists.newArrayList()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "{latches.remove(PARTICIPANT_ID)for (LeaderLatch latch : latches){CloseableUtils.closeQuietly(latch)}TestCleanState.closeAndTestClean(client)}@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "server.stop()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i < PARTICIPANT_QTY@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "client.start()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testLostConnection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "LeaderLatch latch = new LeaderLatch(client,PATH_NAME)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Timing timing = new Timing()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCorrectWatching['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "final CountDownLatch countDownLatch = new CountDownLatch(1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertTrue(!latches.get(PARTICIPANT_ID - 1).hasLeadership())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(getLeaders(latches).size(),0)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "timing.forWaiting().sleepABit()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(waitForALeader(latches,timing).size(),1)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->22 [style = bold, label=""];
11->3 [style = bold, label=""];
20->23 [style = bold, label=""];
22->19 [style = bold, label=""];
9->2 [style = solid, label="PARTICIPANT_ID"];
7->2 [style = solid, label="latches"];
21->3 [style = bold, label=""];
14->0 [style = dotted, label="true"];
3->14 [style = bold, label=""];
5->7 [style = bold, label=""];
7->8 [style = solid, label="latches"];
14->1 [style = dotted, label="true"];
4->11 [style = bold, label=""];
25->26 [style = bold, label=""];
15->4 [style = bold, label=""];
26->20 [style = bold, label=""];
18->5 [style = bold, label=""];
16->8 [style = bold, label=""];
4->2 [style = solid, label="client"];
27->25 [style = solid, label="countDownLatch"];
14->16 [style = dotted, label="true"];
14->8 [style = dotted, label="true"];
6->13 [style = bold, label=""];
14->0 [style = bold, label=""];
8->6 [style = bold, label=""];
5->9 [style = bold, label=""];
1->14 [style = bold, label=""];
14->12 [style = dotted, label="true"];
15->8 [style = solid, label="timing"];
12->16 [style = bold, label=""];
8->1 [style = bold, label=""];
11->27 [style = bold, label=""];
16->1 [style = bold, label=""];
0->12 [style = bold, label=""];
4->0 [style = solid, label="client"];
13->25 [style = dashed, label="0"];
0->19 [style = solid, label="latch"];
14->8 [style = bold, label=""];
14->6 [style = bold, label=""];
7->19 [style = solid, label="latches"];
7->15 [style = bold, label=""];
24->25 [style = bold, label=""];
0->2 [style = solid, label="latch"];
4->19 [style = solid, label="client"];
8->24 [style = bold, label=""];
3->14 [style = solid, label="i"];
13->2 [style = bold, label=""];
5->14 [style = solid, label="PARTICIPANT_QTY"];
0->16 [style = solid, label="latch"];
10->5 [style = bold, label=""];
17->5 [style = bold, label=""];
27->21 [style = bold, label=""];
9->7 [style = bold, label=""];
}
