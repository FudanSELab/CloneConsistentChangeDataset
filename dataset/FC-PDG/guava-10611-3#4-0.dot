digraph {
22 [style = filled, label = "EndpointPair<Integer> pair12 = EndpointPair.ordered(N1,N2)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "undirectedGraph.putEdgeValue(N2,N1,E21)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(Graphs.equivalent(transpose,expectedTranspose)).isTrue()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "undirectedGraph.putEdgeValue(N1,N1,E11)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "directedGraph.putEdgeValue(N2,N1,E21)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(transpose(transpose)).isSameAs(directedGraph)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "return undirectedGraph@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "directedGraph.putEdgeValue(N3,N4,E34)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ValueGraph<Integer,String> transpose = Graphs.transpose(directedGraph)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "AbstractGraphTest.validateGraph(transpose)@@@20@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "MutableValueGraph<Integer,String> undirectedGraph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(transpose.edgeValueOrDefault(N1,N2,null)).isNull()@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectedTranspose.putEdgeValue(N1,N1,E11)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "AbstractGraphTest.validateGraph(transpose)@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "directedGraph.putEdgeValue(N1,N1,E11)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(transpose.edgeValues().get(pair12)).isNull()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "directedGraph.putEdgeValue(N1,N2,E12)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "transpose_directedValueGraph['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "undirectedGraph.putEdgeValue(N1,N2,E12)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(transpose.edgeValues().get(pair12)).isEqualTo(E21)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "directedGraph.putEdgeValue(N2,N1,E21)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "buildUndirectedValueGraph['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "expectedTranspose.putEdgeValue(N1,N3,E31)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "MutableValueGraph<Integer,String> directedGraph = ValueGraphBuilder.directed().allowsSelfLoops(true).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MutableValueGraph<Integer,String> expectedTranspose = ValueGraphBuilder.directed().allowsSelfLoops(true).build()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectedTranspose.putEdgeValue(N4,N3,E34)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expectedTranspose.putEdgeValue(N2,N1,E12)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "AbstractGraphTest.validateGraph(transpose)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "transpose_directedValueGraph['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "directedGraph.putEdgeValue(N3,N1,E31)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->5 [style = bold, label=""];
1->12 [style = solid, label="transpose"];
13->1 [style = solid, label="directedGraph"];
1->14 [style = solid, label="transpose"];
4->17 [style = bold, label=""];
22->19 [style = bold, label=""];
9->24 [style = dashed, label="0"];
9->2 [style = bold, label=""];
16->27 [style = dashed, label="0"];
15->21 [style = bold, label=""];
1->20 [style = solid, label="transpose"];
6->18 [style = bold, label=""];
14->22 [style = bold, label=""];
29->25 [style = bold, label=""];
15->21 [style = dashed, label="0"];
28->26 [style = bold, label=""];
7->0 [style = bold, label=""];
3->15 [style = bold, label=""];
24->29 [style = bold, label=""];
2->10 [style = bold, label=""];
13->26 [style = dashed, label="0"];
13->16 [style = bold, label=""];
26->27 [style = bold, label=""];
1->6 [style = bold, label=""];
21->20 [style = bold, label=""];
13->18 [style = solid, label="directedGraph"];
11->3 [style = bold, label=""];
23->13 [style = bold, label=""];
0->1 [style = bold, label=""];
2->29 [style = dashed, label="0"];
26->25 [style = solid, label="undirectedGraph"];
10->4 [style = bold, label=""];
5->7 [style = bold, label=""];
27->24 [style = bold, label=""];
15->12 [style = bold, label=""];
19->15 [style = bold, label=""];
14->11 [style = bold, label=""];
18->14 [style = bold, label=""];
10->25 [style = dashed, label="0"];
16->9 [style = bold, label=""];
8->13 [style = bold, label=""];
}
