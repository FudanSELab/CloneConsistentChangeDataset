digraph {
27 [style = filled, label = "long sum = 0@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(s.bytesOnDisk(),cfs.metric.totalDiskSpaceUsed.getCount())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "cfs.disableAutoCompaction()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "rewriter.currentWriter().getOnDiskFilePointer() > 25000000@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(files,sstables.size())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(sum,cfs.metric.liveDiskSpaceUsed.count())@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "validateCFS(cfs)@@@31@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "rewriter.append(new LazilyCompactedRow(controller,Arrays.asList(scanner.next())))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Thread.sleep(1000)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "scanner.hasNext()@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(s.bytesOnDisk(),cfs.metric.liveDiskSpaceUsed.count())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "cfs.getDataTracker().markCompactedSSTablesReplaced(compacting,sstables,OperationType.COMPACTION)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "files++@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testNumberOfFilesAndSizes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testNumberOfFilesAndSizes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertEquals(sum,cfs.metric.totalDiskSpaceUsed.count())@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "assertEquals(startStorageMetricsLoad - s.bytesOnDisk() + sum,StorageMetrics.load.getCount())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(startStorageMetricsLoad - s.bytesOnDisk() + sum,StorageMetrics.load.count())@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "long startStorageMetricsLoad = StorageMetrics.load.count()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "cfs.truncateBlocking()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cfs.addSSTable(s)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<SSTableReader> sstables = rewriter.finish()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(cfs.getSSTables().size(),files)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "SSTableRewriter rewriter = new SSTableRewriter(cfs,compacting,1000,false)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "SSTableReader s = writeFile(cfs,1000)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "long startStorageMetricsLoad = StorageMetrics.load.getCount()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "Thread.sleep(1000)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testNumberOfFiles_truncate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(s.bytesOnDisk(),cfs.metric.totalDiskSpaceUsed.count())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "int files = 1@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "sum += x.bytesOnDisk()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(s.bytesOnDisk(),cfs.metric.liveDiskSpaceUsed.getCount())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertFileCounts(s.descriptor.directory.list(),0,0)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Set<SSTableReader> compacting = Sets.newHashSet(s)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(sum,cfs.metric.liveDiskSpaceUsed.getCount())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(files,cfs.getSSTables().size())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(sum,cfs.metric.totalDiskSpaceUsed.getCount())@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "cfs.truncateBlocking()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "SSTableRewriter.overrideOpenInterval(10000000)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31->37 [style = bold, label=""];
21->42 [style = bold, label=""];
29->3 [style = solid, label="s"];
4->25 [style = bold, label=""];
15->25 [style = bold, label=""];
34->38 [style = solid, label="startStorageMetricsLoad"];
8->32 [style = dashed, label="0"];
39->24 [style = bold, label=""];
13->5 [style = dotted, label="true"];
21->24 [style = bold, label=""];
31->22 [style = solid, label="sum"];
1->24 [style = solid, label="cfs"];
12->7 [style = bold, label=""];
19->18 [style = solid, label="compacting"];
13->35 [style = dotted, label="true"];
3->34 [style = bold, label=""];
31->32 [style = solid, label="sum"];
28->21 [style = bold, label=""];
16->18 [style = solid, label="sstables"];
5->35 [style = dashed, label="0"];
3->19 [style = bold, label=""];
17->14 [style = bold, label=""];
37->38 [style = bold, label=""];
15->0 [style = bold, label=""];
22->38 [style = dashed, label="0"];
13->15 [style = dotted, label="true"];
1->12 [style = solid, label="cfs"];
0->36 [style = dashed, label="0"];
3->30 [style = bold, label=""];
13->25 [style = bold, label=""];
34->19 [style = bold, label=""];
13->36 [style = dotted, label="true"];
30->22 [style = solid, label="startStorageMetricsLoad"];
27->31 [style = bold, label=""];
13->7 [style = dotted, label="true"];
2->4 [style = bold, label=""];
4->7 [style = solid, label="files"];
18->28 [style = bold, label=""];
31->11 [style = bold, label=""];
5->25 [style = bold, label=""];
7->6 [style = solid, label="files"];
38->6 [style = bold, label=""];
30->19 [style = bold, label=""];
13->12 [style = bold, label=""];
1->29 [style = solid, label="cfs"];
1->2 [style = solid, label="cfs"];
13->0 [style = dotted, label="true"];
7->10 [style = solid, label="files"];
31->38 [style = solid, label="sum"];
36->35 [style = bold, label=""];
22->6 [style = bold, label=""];
15->36 [style = bold, label=""];
23->20 [style = bold, label=""];
16->18 [style = bold, label=""];
25->9 [style = bold, label=""];
42->39 [style = bold, label=""];
1->20 [style = solid, label="cfs"];
4->10 [style = solid, label="files"];
30->34 [style = dashed, label="0"];
25->13 [style = dotted, label="true"];
25->16 [style = bold, label=""];
28->32 [style = bold, label=""];
35->25 [style = bold, label=""];
26->41 [style = bold, label=""];
31->11 [style = solid, label="sum"];
6->10 [style = bold, label=""];
28->8 [style = bold, label=""];
11->22 [style = bold, label=""];
40->14 [style = bold, label=""];
7->15 [style = bold, label=""];
0->5 [style = bold, label=""];
4->6 [style = solid, label="files"];
33->14 [style = bold, label=""];
32->21 [style = bold, label=""];
10->28 [style = bold, label=""];
13->12 [style = dotted, label="true"];
26->29 [style = bold, label=""];
41->29 [style = bold, label=""];
29->3 [style = bold, label=""];
1->26 [style = bold, label=""];
31->37 [style = solid, label="sum"];
14->1 [style = bold, label=""];
31->8 [style = solid, label="sum"];
20->2 [style = bold, label=""];
25->9 [style = dotted, label="true"];
18->27 [style = bold, label=""];
7->15 [style = solid, label="files"];
19->23 [style = bold, label=""];
29->19 [style = solid, label="s"];
8->21 [style = bold, label=""];
11->37 [style = dashed, label="0"];
19->20 [style = solid, label="compacting"];
9->13 [style = bold, label=""];
}
