digraph {
16 [style = filled, label = "final KeyValueStore<Long,String> store = driver.getKeyValueStore(\"store\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final ForeachAction<Long,String> action = new ForeachAction<Long,String>(){@Override public void apply(final Long key,final String value){results.put(key,value)}}@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(store.get(2L),equalTo(\"value2\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ConsumerRecordFactory<Long,String> recordFactory = new ConsumerRecordFactory<>(new LongSerializer(),new StringSerializer())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final KeyValueStore<Long,String> store = driver.getKeyValueStore(\"store\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "driver = new TopologyTestDriver(builder.build(),props)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(results.get(2L),equalTo(\"value2\"))@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(store.get(2L),equalTo(\"value2\"))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "driver.pipeInput(recordFactory.create(topic,2L,\"value2\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "builder.globalTable(topic,Materialized.as(\"store\").withKeySerde(Serdes.Long()).withValueSerde(Serdes.String()))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "shouldUseSerdesDefinedInMaterializedToConsumeTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "driver.pipeInput(recordFactory.create(topic,1L,\"value1\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final String topic = \"topic\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(results.get(1L),equalTo(\"value1\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "shouldUseSerdesDefinedInMaterializedToConsumeTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "driver.pipeInput(recordFactory.create(topic,1L,\"value1\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Map<Long,String> results = new HashMap<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "driver = new TopologyTestDriver(builder.build(),props)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertThat(store.get(1L),equalTo(\"value1\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final ConsumerRecordFactory<Long,String> recordFactory = new ConsumerRecordFactory<>(new LongSerializer(),new StringSerializer())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "shouldUseSerdesDefinedInMaterializedToConsumeGlobalTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(store.get(1L),equalTo(\"value1\"))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "builder.table(topic,Materialized.as(\"store\").withKeySerde(Serdes.Long()).withValueSerde(Serdes.String())).toStream().foreach(action)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "driver.pipeInput(recordFactory.create(topic,2L,\"value2\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->13 [style = bold, label=""];
19->18 [style = bold, label=""];
0->13 [style = bold, label=""];
5->9 [style = bold, label=""];
21->19 [style = bold, label=""];
22->16 [style = bold, label=""];
3->11 [style = bold, label=""];
13->10 [style = solid, label="topic"];
15->13 [style = solid, label="topic"];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
9->10 [style = bold, label=""];
16->23 [style = bold, label=""];
13->12 [style = solid, label="topic"];
7->8 [style = bold, label=""];
12->6 [style = bold, label=""];
11->9 [style = bold, label=""];
6->4 [style = bold, label=""];
11->5 [style = bold, label=""];
18->22 [style = bold, label=""];
13->3 [style = bold, label=""];
14->0 [style = bold, label=""];
15->22 [style = solid, label="topic"];
10->12 [style = bold, label=""];
15->18 [style = solid, label="topic"];
3->11 [style = solid, label="action"];
23->17 [style = bold, label=""];
2->7 [style = bold, label=""];
13->21 [style = bold, label=""];
20->15 [style = bold, label=""];
}
