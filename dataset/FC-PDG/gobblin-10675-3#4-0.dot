digraph {
2 [style = filled, label = "Assert.assertEquals(bytesRead,1041981183L)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(value == 'a')@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "System.gc()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "System.gc()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "decryptLargeFileAsym['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "System.gc()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "(value = is.read()) != -1@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long startHeapSize = Runtime.getRuntime().totalMemory()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(endHeapSize - startHeapSize < 200 * 1024 * 1024,\"start heap \" + startHeapSize + \" end heap \" + endHeapSize)@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "System.gc()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "long endHeapSize = Runtime.getRuntime().totalMemory()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "bytesRead++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "decryptLargeFileSym['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(is.read(),-1)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "int value@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "long bytesRead = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "decryptLargeFileSym['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8->12 [style = bold, label=""];
16->4 [style = bold, label=""];
9->4 [style = bold, label=""];
11->10 [style = dotted, label="true"];
11->0 [style = bold, label=""];
15->4 [style = bold, label=""];
12->3 [style = solid, label="startHeapSize"];
12->1 [style = bold, label=""];
11->0 [style = dotted, label="true"];
4->8 [style = bold, label=""];
10->11 [style = bold, label=""];
13->3 [style = solid, label="endHeapSize"];
11->2 [style = bold, label=""];
5->2 [style = solid, label="bytesRead"];
0->10 [style = bold, label=""];
7->13 [style = bold, label=""];
5->11 [style = bold, label=""];
11->10 [style = solid, label="value"];
14->6 [style = bold, label=""];
0->2 [style = solid, label="bytesRead"];
2->6 [style = bold, label=""];
13->3 [style = bold, label=""];
2->14 [style = bold, label=""];
6->7 [style = bold, label=""];
5->0 [style = solid, label="bytesRead"];
1->5 [style = bold, label=""];
}
