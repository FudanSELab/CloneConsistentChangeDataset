digraph {
20 [style = filled, label = "controller.syncStart()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "idealState.setRebalanceMode(RebalanceMode.CUSTOMIZED)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "MockParticipantManager(( participants = new MockParticipantManager((((@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "ClusterSetup.processCommandLineArgs(command.split(\"\s+\"))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testDisablePartitionAutoIS['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "command = \"--zkSvr \" + ZK_ADDR + \" --enablePartition true \" + clusterName + \" localhost_12919 TestDB0 TestDB0_0 TestDB0_5\"@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertTrue(result)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "i++@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Builder keyBuilder = accessor.keyBuilder()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "expectStateMap.put(\"TestDB0_5\",expectInstanceStateMap)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "participants(i( = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller_0\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,8,n,3,\"MasterSlave\",true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "deleteCluster(clusterName)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "deleteCluster(clusterName)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i < 5@@@45@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ClusterSetup.processCommandLineArgs(command.split(\"\s+\"))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "IdealState idealState = accessor.getProperty(keyBuilder.idealStates(\"TestDB0\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "result = ZkTestHelper.verifyState(_gZkClient,clusterName,\"TestDB0\",expectStateMap,\"!=\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "String instanceName = \"localhost_\" + (12918 + i)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testDisablePartitionCustomIS['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "i++@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "participants(i(.syncStart()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "controller.syncStop()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 0@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "result = ZkTestHelper.verifyState(_gZkClient,clusterName,\"TestDB0\",expectStateMap,\"!=\")@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i < n@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testDisablePartitionAutoIS['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "ZkHelixClusterVerifier _clusterVerifier = new BestPossibleExternalViewVerifier.Builder(clusterName).setZkAddr(ZK_ADDR).build()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "ZKHelixDataAccessor accessor = new ZKHelixDataAccessor(clusterName,baseAccessor)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertTrue(result,\"localhost_12919\" + \" should NOT be in OFFLINE\")@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "accessor.setProperty(keyBuilder.idealStates(\"TestDB0\"),idealState)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "boolean result = ZkTestHelper.verifyState(_gZkClient,clusterName,\"TestDB0\",expectStateMap,\"==\")@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Map<String,String> expectInstanceStateMap = new HashMap<>()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "ZkHelixClusterVerifier _clusterVerifier = new BestPossibleExternalViewVerifier.Builder(clusterName).setZkClient(_gZkClient).build()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "BestPossibleExternalViewVerifier _clusterVerifier = new BestPossibleExternalViewVerifier.Builder(clusterName).setZkAddr(ZK_ADDR).setZkClient(_gZkClient).build()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Map<String,Map<String,String>> expectStateMap = new HashMap<>()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "participants(i(.syncStop()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final int n = 5@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String command = \"--zkSvr \" + ZK_ADDR + \" --enablePartition false \" + clusterName + \" localhost_12919 TestDB0 TestDB0_0 TestDB0_5\"@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(result,\"localhost_12919\" + \" should be in OFFLINE for (TestDB0_0, TestDB0_5(\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "expectStateMap.put(\"TestDB0_0\",expectInstanceStateMap)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<ZNRecord>(_gZkClient)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "expectInstanceStateMap.put(\"localhost_12919\",\"OFFLINE\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->10 [style = solid, label="clusterName"];
16->37 [style = bold, label=""];
36->16 [style = dotted, label="true"];
48->3 [style = bold, label=""];
4->36 [style = solid, label="n"];
40->6 [style = bold, label=""];
0->18 [style = solid, label="i"];
52->50 [style = solid, label="result"];
36->29 [style = bold, label=""];
53->47 [style = bold, label=""];
49->51 [style = bold, label=""];
21->30 [style = bold, label=""];
32->7 [style = solid, label="clusterName"];
32->47 [style = solid, label="clusterName"];
1->13 [style = bold, label=""];
18->45 [style = bold, label=""];
22->0 [style = solid, label="i"];
5->32 [style = solid, label="methodName"];
9->6 [style = bold, label=""];
32->35 [style = solid, label="clusterName"];
17->22 [style = solid, label="i"];
12->10 [style = bold, label=""];
18->22 [style = bold, label=""];
22->0 [style = bold, label=""];
32->27 [style = solid, label="clusterName"];
7->16 [style = bold, label=""];
2->36 [style = bold, label=""];
45->0 [style = bold, label=""];
18->22 [style = solid, label="i"];
11->33 [style = bold, label=""];
28->25 [style = bold, label=""];
32->4 [style = bold, label=""];
43->44 [style = bold, label=""];
28->25 [style = solid, label="result"];
32->11 [style = solid, label="clusterName"];
37->36 [style = bold, label=""];
36->41 [style = bold, label=""];
38->48 [style = dashed, label="0"];
22->0 [style = dotted, label="true"];
3->11 [style = bold, label=""];
32->1 [style = solid, label="clusterName"];
32->52 [style = solid, label="clusterName"];
47->43 [style = bold, label=""];
44->49 [style = bold, label=""];
22->18 [style = solid, label="i"];
50->28 [style = bold, label=""];
18->45 [style = dotted, label="true"];
30->19 [style = bold, label=""];
36->7 [style = dotted, label="true"];
22->18 [style = bold, label=""];
39->30 [style = solid, label="expectInstanceStateMap"];
29->7 [style = solid, label="instanceName"];
32->24 [style = solid, label="clusterName"];
23->28 [style = solid, label="expectStateMap"];
51->27 [style = bold, label=""];
18->0 [style = dotted, label="true"];
14->15 [style = bold, label=""];
36->29 [style = dotted, label="true"];
2->36 [style = solid, label="i"];
39->19 [style = solid, label="expectInstanceStateMap"];
27->20 [style = bold, label=""];
22->26 [style = bold, label=""];
10->28 [style = solid, label="result"];
44->51 [style = solid, label="idealState"];
22->18 [style = dotted, label="true"];
31->52 [style = bold, label=""];
14->15 [style = solid, label="result"];
37->29 [style = solid, label="i"];
26->8 [style = bold, label=""];
4->35 [style = solid, label="n"];
25->17 [style = bold, label=""];
38->3 [style = bold, label=""];
31->12 [style = bold, label=""];
36->37 [style = dotted, label="true"];
5->32 [style = bold, label=""];
23->10 [style = solid, label="expectStateMap"];
39->21 [style = bold, label=""];
6->5 [style = bold, label=""];
19->14 [style = bold, label=""];
24->31 [style = bold, label=""];
53->47 [style = solid, label="baseAccessor"];
23->39 [style = bold, label=""];
0->18 [style = bold, label=""];
52->50 [style = bold, label=""];
34->23 [style = bold, label=""];
4->1 [style = bold, label=""];
18->8 [style = bold, label=""];
2->29 [style = solid, label="i"];
35->53 [style = bold, label=""];
32->8 [style = solid, label="clusterName"];
35->27 [style = bold, label=""];
32->46 [style = solid, label="clusterName"];
10->28 [style = bold, label=""];
41->3 [style = bold, label=""];
6->32 [style = solid, label="className"];
17->22 [style = bold, label=""];
17->18 [style = solid, label="i"];
20->2 [style = bold, label=""];
23->14 [style = solid, label="expectStateMap"];
37->36 [style = solid, label="i"];
32->14 [style = solid, label="clusterName"];
8->46 [style = bold, label=""];
42->6 [style = bold, label=""];
38->41 [style = dashed, label="0"];
15->24 [style = bold, label=""];
36->48 [style = bold, label=""];
32->26 [style = solid, label="clusterName"];
29->7 [style = bold, label=""];
36->38 [style = bold, label=""];
7->37 [style = solid, label="i"];
13->35 [style = bold, label=""];
33->34 [style = bold, label=""];
32->28 [style = solid, label="clusterName"];
}
