digraph {
0 [style = filled, label = "MockInjector.reset()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "remoteConfigLongPollService = new RemoteConfigLongPollService()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "MockInjector.setInstance(,httpUtil)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "responseType = (Type)ReflectionTestUtils.getField(remoteConfigLongPollService,\"m_responseType\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ServiceDTO serviceDTO = mock()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>(){@Override public Properties answer(InvocationOnMock invocation){return new Properties()}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "someNamespace = \"someName\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "someCluster = \"someCluster\"@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MockInjector.setInstance(,configServiceLocator)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "MockInjector.setInstance(,propertiesFactory)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MockInjector.setInstance(,new MockConfigUtil())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "someAppId = \"someAppId\"@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "someServerUrl = \"http://someServer\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->1 [style = solid, label="someServerUrl"];
1->2 [style = bold, label=""];
8->6 [style = bold, label=""];
7->0 [style = bold, label=""];
16->17 [style = bold, label=""];
9->10 [style = bold, label=""];
13->8 [style = bold, label=""];
5->9 [style = bold, label=""];
15->14 [style = bold, label=""];
11->2 [style = solid, label="serviceDTO"];
11->1 [style = bold, label=""];
3->4 [style = bold, label=""];
4->5 [style = bold, label=""];
10->12 [style = bold, label=""];
6->11 [style = bold, label=""];
2->3 [style = bold, label=""];
0->8 [style = bold, label=""];
17->15 [style = bold, label=""];
5->9 [style = solid, label="remoteConfigLongPollService"];
}
