digraph {
11 [style = filled, label = "assertThat(taImpl.getState()).withFailMessage(\"Task attempt is not in FAILED state\").isEqualTo(TaskAttemptState.FAILED)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(\"Task attempt is not in KILLED state\",taImpl.getState(),TaskAttemptState.KILLED)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TaskAttemptImpl taImpl = createTaskAttemptImpl(eventHandler)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testKillMapTaskWhileSuccessFinishing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(\"Task attempt's internal state is not FAIL_TASK_CLEANUP\",taImpl.getInternalState(),TaskAttemptStateInternal.FAIL_TASK_CLEANUP)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "taImpl.handle(new TaskAttemptEvent(taImpl.getID(),TaskAttemptEventType.TA_KILL))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "MockEventHandler eventHandler = new MockEventHandler()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "taImpl.handle(new TaskAttemptEvent(taImpl.getID(),TaskAttemptEventType.TA_CLEANUP_DONE))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"Task attempt's internal state is not KILL_CONTAINER_CLEANUP\",taImpl.getInternalState(),TaskAttemptStateInternal.KILL_CONTAINER_CLEANUP)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(\"Task attempt's internal state is not KILL_TASK_CLEANUP\",taImpl.getInternalState(),TaskAttemptStateInternal.KILL_TASK_CLEANUP)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertFalse(\"InternalError occurred\",eventHandler.internalError)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(taImpl.getState()).withFailMessage(\"Task attempt is not in FAILED state\").isEqualTo(TaskAttemptState.FAILED)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertEquals(\"Task attempt is not in KILLED state\",taImpl.getState(),TaskAttemptState.KILLED)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "taImpl.handle(new TaskAttemptEvent(taImpl.getID(),TaskAttemptEventType.TA_CLEANUP_DONE))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(taImpl.getInternalState()).withFailMessage(\"Task attempt's internal state is not \" + \"FAIL_CONTAINER_CLEANUP\").isEqualTo(TaskAttemptStateInternal.FAIL_CONTAINER_CLEANUP)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testFailMapTaskByClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertFalse(\"InternalError occurred\",eventHandler.internalError)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(\"Task attempt is not in RUNNING state\",taImpl.getState(),TaskAttemptState.FAILED)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "testFailMapTaskByClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "taImpl.handle(new TaskAttemptEvent(taImpl.getID(),TaskAttemptEventType.TA_CONTAINER_CLEANED))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(taImpl.getInternalState()).withFailMessage(\"Task attempt's internal state is not \" + \"FAIL_TASK_CLEANUP\").isEqualTo(TaskAttemptStateInternal.FAIL_TASK_CLEANUP)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "taImpl.handle(new TaskAttemptEvent(taImpl.getID(),TaskAttemptEventType.TA_DONE))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(\"Task attempt is not in SUCCEEDED state\",taImpl.getState(),TaskAttemptState.SUCCEEDED)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "taImpl.handle(new TaskAttemptEvent(taImpl.getID(),TaskAttemptEventType.TA_FAILMSG_BY_CLIENT))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"Task attempt's internal state is not \" + \"FAIL_CONTAINER_CLEANUP\",taImpl.getInternalState(),TaskAttemptStateInternal.FAIL_CONTAINER_CLEANUP)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertEquals(\"Task attempt's internal state is not \" + \"SUCCESS_FINISHING_CONTAINER\",taImpl.getInternalState(),TaskAttemptStateInternal.SUCCESS_FINISHING_CONTAINER)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "taImpl.handle(new TaskAttemptEvent(taImpl.getID(),TaskAttemptEventType.TA_CONTAINER_CLEANED))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
23->20 [style = bold, label=""];
15->14 [style = bold, label=""];
4->6 [style = bold, label=""];
9->4 [style = bold, label=""];
0->16 [style = dashed, label="0"];
3->11 [style = bold, label=""];
16->25 [style = bold, label=""];
6->14 [style = dashed, label="0"];
26->19 [style = bold, label=""];
9->23 [style = dashed, label="0"];
21->18 [style = bold, label=""];
10->11 [style = dashed, label="0"];
7->9 [style = bold, label=""];
3->10 [style = bold, label=""];
6->5 [style = bold, label=""];
12->2 [style = bold, label=""];
10->26 [style = dashed, label="0"];
18->22 [style = bold, label=""];
10->8 [style = bold, label=""];
5->0 [style = bold, label=""];
13->3 [style = bold, label=""];
24->21 [style = bold, label=""];
10->16 [style = bold, label=""];
17->2 [style = bold, label=""];
9->15 [style = bold, label=""];
4->15 [style = dashed, label="0"];
4->20 [style = dashed, label="0"];
5->13 [style = bold, label=""];
7->23 [style = bold, label=""];
0->13 [style = dashed, label="0"];
25->26 [style = bold, label=""];
6->24 [style = dashed, label="0"];
22->10 [style = bold, label=""];
11->8 [style = bold, label=""];
1->2 [style = bold, label=""];
2->7 [style = bold, label=""];
20->24 [style = bold, label=""];
2->7 [style = solid, label="eventHandler"];
14->5 [style = bold, label=""];
}
