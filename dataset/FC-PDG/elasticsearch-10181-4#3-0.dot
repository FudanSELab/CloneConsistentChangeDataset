digraph {
16 [style = filled, label = "String analyzerName = \"simple\"@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "testDefaultConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertPrefixFieldType(prefixFieldMapper.fieldType(),maxShingleSize,analyzerName)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertRootFieldMapper(rootMapper,3,\"default\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertShingleFieldType(getShingleFieldMapper(defaultMapper,\"field._2gram\").fieldType(),2,analyzerName,prefixFieldMapper.fieldType())@@@10@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertShingleFieldType(getShingleFieldMapper(defaultMapper,\"a_field._3gram\").fieldType(),3,\"default\",prefixFieldMapper.fieldType())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertRootFieldMapper(rootMapper,maxShingleSize,analyzerName)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final int maxShingleSize = 4@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "final DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"_doc\",new CompressedXContent(mapping))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int maxShingleSize = 4@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertShingleFieldType(getShingleFieldMapper(defaultMapper,\"a_field._2gram\").fieldType(),2,analyzerName,prefixFieldMapper.fieldType())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "final String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\").startObject(\"a_field\").field(\"type\",\"search_as_you_type\").endObject().endObject().endObject().endObject())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertPrefixFieldType(prefixFieldMapper.fieldType(),3,\"default\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper,\"field._index_prefix\")@@@8@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "testConfiguration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper,\"field\")@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(null))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testConfiguration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertShingleFieldType(getShingleFieldMapper(defaultMapper,\"a_field._3gram\").fieldType(),3,analyzerName,prefixFieldMapper.fieldType())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertShingleFieldType(getShingleFieldMapper(defaultMapper,\"a_field._2gram\").fieldType(),2,\"default\",prefixFieldMapper.fieldType())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertShingleFieldType(getShingleFieldMapper(defaultMapper,\"field._3gram\").fieldType(),3,analyzerName,prefixFieldMapper.fieldType())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertShingleFieldType(getShingleFieldMapper(defaultMapper,\"a_field._4gram\").fieldType(),4,analyzerName,prefixFieldMapper.fieldType())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "final PrefixFieldMapper prefixFieldMapper = getPrefixFieldMapper(defaultMapper,\"a_field._index_prefix\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"_doc\").startObject(\"properties\").startObject(\"a_field\").field(\"type\",\"search_as_you_type\").field(\"analyzer\",analyzerName).field(\"max_shingle_size\",maxShingleSize).endObject().endObject().endObject().endObject())@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final SearchAsYouTypeFieldMapper rootMapper = getRootFieldMapper(defaultMapper,\"a_field\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertShingleFieldType(getShingleFieldMapper(defaultMapper,\"field._4gram\").fieldType(),4,analyzerName,prefixFieldMapper.fieldType())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final String analyzerName = \"simple\"@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25->0 [style = bold, label=""];
0->3 [style = bold, label=""];
19->6 [style = solid, label="defaultMapper"];
5->13 [style = dashed, label="0"];
19->15 [style = solid, label="defaultMapper"];
6->1 [style = dashed, label="0"];
1->0 [style = solid, label="defaultMapper"];
4->16 [style = dashed, label="0"];
9->24 [style = dashed, label="0"];
17->6 [style = bold, label=""];
9->2 [style = bold, label=""];
5->26 [style = dashed, label="0"];
13->17 [style = solid, label="maxShingleSize"];
9->18 [style = dashed, label="0"];
0->6 [style = dashed, label="0"];
18->12 [style = bold, label=""];
5->6 [style = solid, label="maxShingleSize"];
16->3 [style = solid, label="analyzerName"];
10->6 [style = solid, label="rootMapper"];
6->0 [style = bold, label=""];
20->3 [style = bold, label=""];
15->17 [style = solid, label="rootMapper"];
16->19 [style = bold, label=""];
7->0 [style = dashed, label="0"];
4->6 [style = solid, label="analyzerName"];
10->6 [style = bold, label=""];
13->16 [style = bold, label=""];
26->23 [style = solid, label="mapping"];
1->10 [style = solid, label="defaultMapper"];
16->20 [style = solid, label="analyzerName"];
3->18 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
6->20 [style = bold, label=""];
2->12 [style = dashed, label="0"];
11->5 [style = bold, label=""];
15->17 [style = bold, label=""];
21->26 [style = bold, label=""];
22->1 [style = solid, label="rootMapper"];
23->22 [style = bold, label=""];
3->7 [style = bold, label=""];
10->25 [style = bold, label=""];
23->10 [style = solid, label="defaultMapper"];
0->24 [style = bold, label=""];
26->23 [style = bold, label=""];
5->4 [style = bold, label=""];
4->3 [style = solid, label="analyzerName"];
16->18 [style = solid, label="analyzerName"];
16->17 [style = solid, label="analyzerName"];
23->22 [style = solid, label="defaultMapper"];
8->1 [style = solid, label="mapping"];
4->8 [style = bold, label=""];
7->3 [style = dashed, label="0"];
13->20 [style = solid, label="maxShingleSize"];
22->1 [style = bold, label=""];
14->13 [style = bold, label=""];
19->15 [style = bold, label=""];
16->12 [style = solid, label="analyzerName"];
1->10 [style = bold, label=""];
4->7 [style = solid, label="analyzerName"];
4->9 [style = solid, label="analyzerName"];
4->2 [style = solid, label="analyzerName"];
5->3 [style = solid, label="maxShingleSize"];
3->25 [style = dashed, label="0"];
}
