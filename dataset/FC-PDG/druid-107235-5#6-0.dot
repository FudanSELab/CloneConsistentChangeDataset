digraph {
2 [style = filled, label = "final boolean useLruCache@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "throw new ISE(\"Selector must have a dictionary\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "throw new ISE(\"WTF?! Expected expression with just one binding\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "arrayEvalCache = new ExprEval((((@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "SingleLongInputCachingExpressionColumnValueSelector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "arrayEvalCache = null@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final boolean useLruCache@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final DimensionSelector selector@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "selector.getValueCardinality() == DimensionSelector.CARDINALITY_UNKNOWN@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "this.selector = Preconditions.checkNotNull(selector,\"selector\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final ColumnValueSelector selector@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "lruEvalCache = new LruEvalCache(expression,bindings)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final Expr expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "SingleLongInputCachingExpressionColumnValueSelector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "expression.analyzeInputs().getFreeVariables().size() != 1@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final Supplier<Object> inputSupplier = ExpressionSelectors.supplierFromDimensionSelector(selector)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Parser.findRequiredBindings(expression).size() != 1@@@3@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "lruEvalCache = null@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "this.lruEvalCache = useLruCache? new LruEvalCache(): null@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SingleStringInputCachingExpressionColumnValueSelector['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "this.expression = Preconditions.checkNotNull(expression,\"expression\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Expr expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "selector.getValueCardinality() <= CACHE_SIZE@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "this.bindings = null@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final ColumnValueSelector selector@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22->23 [style = dotted, label="true"];
4->7 [style = bold, label=""];
19->13 [style = dotted, label="true"];
13->1 [style = solid, label="expression"];
11->10 [style = dotted, label="true"];
21->22 [style = bold, label=""];
9->4 [style = bold, label=""];
8->1 [style = solid, label="expression"];
11->12 [style = dotted, label="true"];
17->21 [style = bold, label=""];
23->24 [style = bold, label=""];
21->18 [style = dotted, label="true"];
14->16 [style = bold, label=""];
19->5 [style = bold, label=""];
12->7 [style = solid, label="selector"];
22->14 [style = dotted, label="false"];
15->17 [style = bold, label=""];
3->8 [style = dotted, label="true"];
5->4 [style = dotted, label="true"];
11->9 [style = bold, label=""];
0->7 [style = solid, label="selector"];
1->6 [style = bold, label=""];
3->5 [style = bold, label=""];
5->4 [style = bold, label=""];
19->20 [style = dotted, label="true"];
8->20 [style = dashed, label="0"];
3->0 [style = dotted, label="true"];
7->15 [style = solid, label="selector"];
2->6 [style = solid, label="useLruCache"];
11->8 [style = dotted, label="true"];
22->24 [style = dotted, label="true"];
20->7 [style = solid, label="selector"];
8->6 [style = solid, label="useLruCache"];
21->18 [style = bold, label=""];
22->14 [style = bold, label=""];
1->16 [style = solid, label="expression"];
3->2 [style = dotted, label="true"];
9->4 [style = dotted, label="true"];
1->15 [style = bold, label=""];
22->16 [style = dotted, label="false"];
17->16 [style = solid, label="bindings"];
10->1 [style = solid, label="expression"];
7->1 [style = bold, label=""];
22->23 [style = bold, label=""];
21->22 [style = dotted, label="false"];
5->7 [style = bold, label=""];
5->9 [style = dashed, label="0"];
9->7 [style = bold, label=""];
}
