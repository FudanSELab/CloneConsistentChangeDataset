digraph {
4 [style = filled, label = "bytesStore.put(serializeKey(new Windowed<>(key,windows(0()),serializeValue(10))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final KeyValueIterator<Bytes,byte((> values = bytesStore.fetch(Bytes.wrap(key.getBytes()),0,500)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "shouldFindValuesWithinRange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "shouldPutAndFetch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final KeyValueIterator<Bytes,byte((> results = bytesStore.fetch(Bytes.wrap(key.getBytes()),1,999)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(expected,toList(results))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "shouldPutAndFetch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String key = \"a\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "bytesStore.put(serializeKey(new Windowed<>(key,windows(2()),serializeValue(100))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<KeyValue<Windowed<String>,Long>> expected = Arrays.asList(KeyValue.pair(new Windowed<>(key,windows(0(),10L),KeyValue.pair(new Windowed<>(key,windows(1(),50L))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "bytesStore.put(serializeKey(new Windowed<>(key,windows(1()),serializeValue(50))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(expected,toList(values))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10->11 [style = solid, label="results"];
2->1 [style = bold, label=""];
0->11 [style = bold, label=""];
3->6 [style = bold, label=""];
7->0 [style = bold, label=""];
8->6 [style = bold, label=""];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
6->2 [style = solid, label="key"];
1->7 [style = bold, label=""];
9->6 [style = bold, label=""];
0->11 [style = solid, label="expected"];
6->4 [style = bold, label=""];
6->0 [style = solid, label="key"];
5->11 [style = dashed, label="0"];
10->0 [style = bold, label=""];
6->1 [style = solid, label="key"];
7->10 [style = dashed, label="0"];
0->5 [style = solid, label="expected"];
1->10 [style = bold, label=""];
6->4 [style = solid, label="key"];
0->5 [style = bold, label=""];
7->5 [style = solid, label="values"];
}
