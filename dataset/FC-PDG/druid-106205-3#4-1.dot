digraph {
7 [style = filled, label = "final ExprEval<?> result = eval(\"icontains_string(a, '')\",Parser.withMap(ImmutableMap.of(\"a\",\"\")))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final ExprEval<?> result = eval(\"icontains_string(a, 'OBA')\",InputBindings.withMap(ImmutableMap.of(\"a\",\"foobar\")))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testEmptyStringSearchOnEmptyString['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(ExprEval.of(true,ExprType.LONG).value(),result.value())@@@4@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testMatchSearchLowerCase['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final ExprEval<?> result = eval(\"icontains_string(a, 'OBA')\",Parser.withMap(ImmutableMap.of(\"a\",\"foobar\")))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(ExprEval.ofBoolean(true,ExprType.LONG).value(),result.value())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testMatchSearchLowerCase['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->3 [style = bold, label=""];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
7->0 [style = bold, label=""];
0->3 [style = dashed, label="0"];
6->7 [style = bold, label=""];
2->7 [style = dashed, label="0"];
5->4 [style = bold, label=""];
2->4 [style = dashed, label="0"];
}
