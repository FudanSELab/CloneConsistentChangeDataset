digraph {
5 [style = filled, label = "testProject['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verify(rel,expectedPhysical,expectedLogical)@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String expectedLogical = \"\" + \"LogicalSort(sort0=($2(, dir0=(ASC()\" + \" LogicalTableScan(table=((scott, EMP(()\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testSort['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String expectedPhysical = \"\" + \"EnumerableSort(sort0=($2(, dir0=(ASC()\" + \" EnumerableTableScan(table=((scott, EMP(()\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testProject['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "String expectedPhysical = \"\" + \"EnumerableProject(DEPTNO=($7()\" + \" EnumerableTableScan(table=((scott, EMP(()\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final RelNode rel = builder.scan(\"EMP\").project(builder.field(\"DEPTNO\")).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final RelBuilder builder = builder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final RelNode rel = builder.scan(\"EMP\").sort(builder.field(2)).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String expectedLogical = \"\" + \"LogicalProject(DEPTNO=($7()\" + \" LogicalTableScan(table=((scott, EMP(()\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
3->8 [style = dashed, label="0"];
6->1 [style = bold, label=""];
5->1 [style = bold, label=""];
8->10 [style = bold, label=""];
4->9 [style = dashed, label="0"];
10->9 [style = bold, label=""];
7->1 [style = bold, label=""];
4->2 [style = bold, label=""];
1->8 [style = bold, label=""];
10->2 [style = solid, label="expectedPhysical"];
9->2 [style = solid, label="expectedLogical"];
0->2 [style = solid, label="expectedPhysical"];
8->2 [style = solid, label="rel"];
0->4 [style = bold, label=""];
9->2 [style = bold, label=""];
3->2 [style = solid, label="rel"];
0->10 [style = dashed, label="0"];
3->0 [style = bold, label=""];
4->2 [style = solid, label="expectedLogical"];
}
