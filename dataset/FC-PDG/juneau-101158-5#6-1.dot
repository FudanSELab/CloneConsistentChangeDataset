digraph {
11 [style = filled, label = "assertObject(ThrownStore.create().beanStore(bs).statsImplClass().build().add(t1)).isType()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "t1.fillInStackTrace()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "bf.addBean(,new A6a())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThrown(null).contains(\"Public constructor found but could not find prerequisites: B6a\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "bf.addBean(,new B6a())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "BeanStore bs = BeanStore.create().build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "b06_statsImplClass['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertObject(ThrownStore.create().statsImplClass().beanFactory(bf).build().add(t1)).isType()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertObject(ThrownStore.create().statsImplClass().beanStore(bs).build().add(t1)).isType()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "bs.addBean(,new B6a())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Throwable t1 = new Throwable()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertObject(MethodExecStore.create().statsImplClass().beanFactory(bf).build().getStats(m)).isType()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThrown(null).contains(\"Public constructor found but could not find prerequisites: A6a\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "BeanFactory bf = BeanFactory.create().build()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "b06_statsImplClass['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "a06_builder_statsImplClass['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThrown(null).contains(\"Public constructor found but could not find prerequisites: B6a\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertObject(ThrownStore.create().beanFactory(bf).statsImplClass().build().add(t1)).isType()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertObject(ThrownStore.create().statsImplClass().beanFactory(bf).build().add(t1)).isType()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertObject(MethodExecStore.create().statsImplClass().beanFactory(bf).build().getStats(m)).isType()@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertObject(MethodExecStore.create().beanFactory(bf).statsImplClass().build().getStats(m)).isType()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Method m = .getMethod(\"a06_builder_statsImplClass\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertObject(ThrownStore.create().statsImplClass().beanStore(bs).build().add(t1)).isType()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17->8 [style = bold, label=""];
6->3 [style = bold, label=""];
1->4 [style = bold, label=""];
19->18 [style = bold, label=""];
5->12 [style = dashed, label="0"];
9->11 [style = bold, label=""];
3->1 [style = bold, label=""];
8->19 [style = bold, label=""];
22->21 [style = bold, label=""];
1->9 [style = dashed, label="0"];
8->6 [style = bold, label=""];
11->12 [style = bold, label=""];
20->22 [style = bold, label=""];
8->13 [style = dashed, label="0"];
1->20 [style = dashed, label="0"];
3->9 [style = bold, label=""];
18->20 [style = bold, label=""];
5->2 [style = bold, label=""];
2->14 [style = dashed, label="0"];
10->13 [style = bold, label=""];
2->16 [style = dashed, label="0"];
12->14 [style = bold, label=""];
0->8 [style = bold, label=""];
7->15 [style = dashed, label="0"];
21->16 [style = bold, label=""];
14->15 [style = bold, label=""];
2->7 [style = bold, label=""];
13->6 [style = bold, label=""];
4->11 [style = dashed, label="0"];
4->5 [style = bold, label=""];
}
