digraph {
9 [style = filled, label = "nextKey == null && iterator.isValid()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Exception e@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "iterator.next()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "hasNext['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "previousKey = currentKey@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "hasNext['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final N currentNamespace = RocksDBKeySerializationUtils.readNamespace(namespaceSerializer,byteArrayDataInputView,ambiguousKeyPossible)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "throw new FlinkRuntimeException(\"Failed to access state (\" + state + \"(\",e)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return nextKey != null@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final K currentKey = deserializeKey(keyBytes,byteArrayDataInputView)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final N currentNamespace = CompositeKeySerializationUtils.readNamespace(namespaceSerializer,byteArrayDataInputView,ambiguousKeyPossible)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "hasNext['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "nextKey = currentKey@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "iterator.next()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final int namespaceByteStartPos = byteArrayDataInputView.getPosition()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "nextKey = Tuple2.of(currentKey,currentNamespace)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "isMatchingNameSpace(keyBytes,namespaceByteStartPos) && !Objects.equals(previousKey,currentKey)@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final byte(( keyBytes = iterator.key()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "throw new FlinkRuntimeException(\"Failed to access state (\" + state + \"(\",e)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
4->3 [style = bold, label=""];
4->14 [style = bold, label=""];
16->9 [style = bold, label=""];
9->0 [style = dotted, label="true"];
9->0 [style = bold, label=""];
3->1 [style = bold, label=""];
4->1 [style = solid, label="currentKey"];
9->2 [style = bold, label=""];
1->15 [style = dashed, label="0"];
18->12 [style = bold, label=""];
2->18 [style = bold, label=""];
1->9 [style = solid, label="nextKey"];
4->17 [style = solid, label="currentKey"];
11->9 [style = bold, label=""];
2->18 [style = dotted, label="true"];
13->12 [style = solid, label="nextKey"];
1->7 [style = bold, label=""];
9->14 [style = dotted, label="true"];
3->1 [style = solid, label="currentNamespace"];
15->13 [style = dotted, label="true"];
13->9 [style = solid, label="nextKey"];
9->8 [style = dotted, label="true"];
15->17 [style = dotted, label="true"];
7->9 [style = bold, label=""];
5->2 [style = bold, label=""];
15->17 [style = bold, label=""];
8->5 [style = bold, label=""];
8->5 [style = dotted, label="true"];
0->4 [style = bold, label=""];
1->2 [style = solid, label="nextKey"];
9->1 [style = dotted, label="true"];
8->9 [style = bold, label=""];
9->4 [style = dotted, label="true"];
10->1 [style = solid, label="currentNamespace"];
0->15 [style = solid, label="keyBytes"];
4->13 [style = solid, label="currentKey"];
14->15 [style = solid, label="namespaceByteStartPos"];
9->15 [style = dotted, label="true"];
14->15 [style = bold, label=""];
17->13 [style = bold, label=""];
9->12 [style = bold, label=""];
0->4 [style = solid, label="keyBytes"];
3->10 [style = dashed, label="0"];
9->7 [style = dotted, label="true"];
6->9 [style = bold, label=""];
13->8 [style = bold, label=""];
10->1 [style = bold, label=""];
9->10 [style = dotted, label="true"];
15->8 [style = bold, label=""];
9->3 [style = dotted, label="true"];
}
