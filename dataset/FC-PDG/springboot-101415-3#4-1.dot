digraph {
3 [style = filled, label = "source.put(\"foo.foos(1(.value\",\"three\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "bindToBeanWithNestedCollectionShouldPopulateCollection['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(foo.getFoos().get(1).getValue()).isEqualTo(\"three\")@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "BeanWithNestedCollection foo = this.binder.bind(\"foo\",target).get()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(foo.getFoos()).isEmpty()@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Bindable<BeanWithNestedCollection> target = Bindable.of()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "this.sources.add(source)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "MockConfigurationPropertySource source = new MockConfigurationPropertySource()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "bindToBeanWithNestedCollectionShouldPopulateCollection['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(foo.getFoos().get(0).getValue()).isEqualTo(\"two\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "source.put(\"foo.foos\",\"\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "source.put(\"foo.foos(0(.value\",\"two\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(foo.getValue()).isEqualTo(\"one\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "bindToNestedCollectionWhenEmptyStringShouldReturnEmptyCollection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "source.put(\"foo.value\",\"one\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->9 [style = bold, label=""];
4->10 [style = bold, label=""];
12->13 [style = bold, label=""];
4->1 [style = dashed, label="0"];
1->4 [style = bold, label=""];
0->7 [style = bold, label=""];
5->2 [style = bold, label=""];
13->9 [style = bold, label=""];
7->1 [style = bold, label=""];
14->2 [style = bold, label=""];
8->12 [style = dashed, label="0"];
9->0 [style = bold, label=""];
2->9 [style = solid, label="source"];
2->6 [style = bold, label=""];
11->2 [style = bold, label=""];
2->13 [style = solid, label="source"];
6->8 [style = bold, label=""];
8->3 [style = bold, label=""];
6->12 [style = bold, label=""];
}
