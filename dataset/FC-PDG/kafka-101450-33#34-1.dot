digraph {
47 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),Joined.with(intSerde,stringSerde,stringSerde))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int i = 0@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b59e9f@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@50@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "testOuterJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i < 2@@@46@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i++@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@38@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "driver = new TopologyTestDriver(builder.build(),props)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "int i = 0@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@43@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),Joined.with(intSerde,stringSerde,stringSerde))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "driver.setUp(builder,stateDir)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i < 2@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "processor.checkAndClearProcessResult()@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i()@@@48@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "driver.setTime(0L)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i++@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "joined.process(processor)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "int i = 0@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "final MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@34@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i < 2@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@49@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0->30 [style = bold, label=""];
39->19 [style = bold, label=""];
37->49 [style = bold, label=""];
14->7 [style = solid, label="i"];
15->25 [style = bold, label=""];
16->7 [style = bold, label=""];
10->35 [style = solid, label="expectedKeys"];
7->23 [style = solid, label="i"];
3->38 [style = bold, label=""];
45->48 [style = bold, label=""];
23->7 [style = dashed, label="0"];
9->37 [style = bold, label=""];
6->29 [style = bold, label=""];
37->9 [style = bold, label=""];
7->14 [style = bold, label=""];
16->7 [style = dotted, label="true"];
29->6 [style = bold, label=""];
18->22 [style = bold, label=""];
42->44 [style = bold, label=""];
19->16 [style = solid, label="i"];
14->7 [style = dotted, label="true"];
16->14 [style = bold, label=""];
30->51 [style = dashed, label="0"];
0->51 [style = solid, label="stream2"];
44->47 [style = bold, label=""];
32->20 [style = bold, label=""];
41->13 [style = bold, label=""];
10->4 [style = solid, label="expectedKeys"];
37->9 [style = solid, label="i"];
14->16 [style = bold, label=""];
16->7 [style = solid, label="i"];
11->28 [style = bold, label=""];
29->35 [style = solid, label="i"];
46->29 [style = solid, label="i"];
10->31 [style = solid, label="expectedKeys"];
29->39 [style = bold, label=""];
16->45 [style = bold, label=""];
53->20 [style = bold, label=""];
9->31 [style = dotted, label="true"];
10->21 [style = bold, label=""];
37->9 [style = dotted, label="true"];
6->4 [style = bold, label=""];
13->37 [style = bold, label=""];
9->37 [style = solid, label="i"];
9->24 [style = dotted, label="true"];
17->2 [style = bold, label=""];
31->24 [style = dashed, label="0"];
16->14 [style = dotted, label="true"];
20->27 [style = solid, label="builder"];
9->24 [style = solid, label="i"];
47->41 [style = bold, label=""];
38->46 [style = bold, label=""];
14->18 [style = bold, label=""];
23->7 [style = bold, label=""];
29->35 [style = bold, label=""];
4->35 [style = dashed, label="0"];
25->0 [style = bold, label=""];
22->26 [style = bold, label=""];
29->6 [style = dotted, label="true"];
37->24 [style = bold, label=""];
46->35 [style = solid, label="i"];
52->33 [style = bold, label=""];
9->31 [style = bold, label=""];
51->12 [style = bold, label=""];
31->24 [style = bold, label=""];
21->34 [style = bold, label=""];
43->20 [style = bold, label=""];
1->3 [style = bold, label=""];
37->24 [style = solid, label="i"];
14->23 [style = dotted, label="true"];
10->24 [style = solid, label="expectedKeys"];
33->5 [style = bold, label=""];
6->35 [style = solid, label="i"];
19->7 [style = solid, label="i"];
17->38 [style = dashed, label="0"];
46->29 [style = bold, label=""];
19->16 [style = bold, label=""];
14->16 [style = solid, label="i"];
30->12 [style = bold, label=""];
14->23 [style = bold, label=""];
10->23 [style = solid, label="expectedKeys"];
37->31 [style = solid, label="i"];
13->24 [style = solid, label="i"];
3->17 [style = bold, label=""];
19->50 [style = dashed, label="0"];
12->27 [style = bold, label=""];
22->48 [style = dashed, label="0"];
24->9 [style = bold, label=""];
8->13 [style = bold, label=""];
7->14 [style = solid, label="i"];
9->36 [style = bold, label=""];
5->8 [style = bold, label=""];
13->9 [style = solid, label="i"];
4->35 [style = bold, label=""];
8->47 [style = dashed, label="0"];
27->1 [style = bold, label=""];
20->17 [style = solid, label="builder"];
28->15 [style = bold, label=""];
15->12 [style = solid, label="processor"];
35->6 [style = bold, label=""];
19->14 [style = solid, label="i"];
6->29 [style = solid, label="i"];
22->52 [style = bold, label=""];
37->24 [style = dotted, label="true"];
0->30 [style = solid, label="stream2"];
13->37 [style = solid, label="i"];
50->16 [style = bold, label=""];
6->19 [style = bold, label=""];
16->23 [style = solid, label="i"];
34->11 [style = bold, label=""];
48->40 [style = bold, label=""];
20->10 [style = bold, label=""];
33->42 [style = dashed, label="0"];
29->6 [style = solid, label="i"];
10->7 [style = solid, label="expectedKeys"];
29->4 [style = solid, label="i"];
35->6 [style = solid, label="i"];
16->14 [style = solid, label="i"];
6->4 [style = dotted, label="true"];
46->6 [style = solid, label="i"];
35->4 [style = solid, label="i"];
0->51 [style = bold, label=""];
6->50 [style = bold, label=""];
24->31 [style = solid, label="i"];
6->35 [style = dotted, label="true"];
26->52 [style = dashed, label="0"];
2->29 [style = bold, label=""];
26->33 [style = bold, label=""];
40->42 [style = bold, label=""];
29->35 [style = dotted, label="true"];
24->9 [style = solid, label="i"];
}
