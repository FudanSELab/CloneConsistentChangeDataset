digraph {
15 [style = filled, label = "builder.join(JoinRelType.INNER,trueLiteral,variablesSet)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,builder.fields()).stream().map(null).collect(Collectors.toList())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "RexSubQuery e@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "builder.aggregate(builder.groupKey(),builder.count(false,\"c\"),builder.count(builder.fields()).as(\"ck\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "builder.as(\"dt\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "builder.distinct()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "boolean allLiterals = RexUtil.allLiterals(e.getOperands())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "variablesSet.isEmpty()@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "b = unknownLiteral@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "logic@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "operands.add(builder.isNull(builder.field(\"c\")),falseLiteral)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.literal(true),variablesSet)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "final RexLiteral unknownLiteral = builder.getRexBuilder().makeNullLiteral(trueLiteral.getType())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "!variablesSet.isEmpty()@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "final List<RexNode> fields = new ArrayList<>(builder.fields())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "builder.join(JoinRelType.INNER,builder.literal(true),variablesSet)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "!allLiterals@@@87@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "RexLiteral b = trueLiteral@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "operands.add(builder.isNotNull(builder.field(\"cs\")),trueLiteral)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "builder.project(builder.alias(project,\"cs\"))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "allLiterals@@@81@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "offset += 2@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "return trueLiteral@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "builder.push(e.rel)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "builder.filter(builder.or(builder.and(conditions),builder.or(isNullOperands)))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "builder.project(builder.alias(trueLiteral,\"cs\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final RexLiteral trueLiteral = (RexLiteral)builder.literal(true)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "rewriteIn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "operands.add(builder.equals(builder.field(\"ct\",\"c\"),builder.literal(0)),falseLiteral)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "logic@@@88@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final RexLiteral falseLiteral = (RexLiteral)builder.literal(false)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "int offset@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RexSubQuery e@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "operands.add(builder.equals(builder.field(\"cs\"),falseLiteral),b)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "List<RexNode> isNullOperands = fields.stream().map(null).collect(Collectors.toList())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "isNullOperands.addAll(keyIsNulls)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "rewriteExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "return builder.isNotNull(Util.last(builder.fields()))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "builder.sortLimit(0,1,ImmutableList.of(builder.call(SqlStdOperatorTable.DESC,builder.field(\"cs\"))))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "operands.add(builder.call(SqlStdOperatorTable.LESS_THAN,builder.field(\"ct\",\"ck\"),builder.field(\"ct\",\"c\")),b)@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final List<RexNode> keyIsNulls = e.getOperands().stream().filter(null).map(null).collect(Collectors.toList())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "!keyIsNulls.isEmpty()@@@78@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "expressionOperands.clear()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "builder.distinct()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "allLiterals@@@66@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "return builder.literal(true)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "builder.project(fields)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
70 [style = filled, label = "RelBuilder builder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
87 [style = filled, label = "builder.as(\"dt\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return builder.call(SqlStdOperatorTable.CASE,operands.build())@@@95@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "fields.add(builder.alias(trueLiteral,\"i\"))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "rewriteIn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,fields).stream().map(null).collect(Collectors.toList())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "operands.add(builder.isNotNull(Util.last(builder.fields())),trueLiteral)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "builder.join(JoinRelType.INNER,builder.and(conditions),variablesSet)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "builder.distinct()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "builder.as(\"dt\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "logic@@@64@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "final RexLiteral trueLiteral = builder.literal(true)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final ImmutableList.Builder<RexNode> operands = ImmutableList.builder()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "operands.add(builder.or(keyIsNulls),unknownLiteral)@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "logic@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.and(conditions),variablesSet)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "fields.clear()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "builder.distinct()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "builder.aggregate(builder.groupKey(builder.field(\"cs\")),builder.count(false,\"c\"))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "RelBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "allLiterals@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RexNode project = builder.and(fields.stream().map(null).collect(Collectors.toList()))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "builder.aggregate(builder.groupKey(fields))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "builder.project(builder.alias(builder.literal(true),\"i\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "builder.push(e.rel)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "final RexLiteral falseLiteral = builder.literal(false)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "variablesSet.isEmpty()@@@67@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final List<RexNode> expressionOperands = new ArrayList<>(e.getOperands())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "builder.as(\"ct\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "builder.aggregate(builder.groupKey(0))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "builder.filter(conditions)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "int offset@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "int refOffset = offset@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "operands.add(falseLiteral)@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "logic@@@56@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "builder.join(JoinRelType.LEFT,trueLiteral,variablesSet)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "RexSubQuery e@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
38->56 [style = solid, label="conditions"];
49->56 [style = solid, label="variablesSet"];
12->53 [style = bold, label=""];
15->10 [style = bold, label=""];
89->77 [style = dotted, label="true"];
55->50 [style = solid, label="trueLiteral"];
64->51 [style = bold, label=""];
51->53 [style = solid, label="b"];
63->34 [style = solid, label="logic"];
18->64 [style = bold, label=""];
41->19 [style = bold, label=""];
73->58 [style = bold, label=""];
31->65 [style = dotted, label="true"];
29->12 [style = solid, label="falseLiteral"];
73->63 [style = dotted, label="true"];
88->84 [style = dotted, label="true"];
53->44 [style = bold, label=""];
23->68 [style = bold, label=""];
21->75 [style = bold, label=""];
39->54 [style = bold, label=""];
25->48 [style = bold, label=""];
36->33 [style = bold, label=""];
43->17 [style = dotted, label="false"];
10->14 [style = solid, label="offset"];
59->36 [style = solid, label="fields"];
47->11 [style = bold, label=""];
31->7 [style = dotted, label="true"];
72->17 [style = solid, label="falseLiteral"];
55->36 [style = solid, label="trueLiteral"];
31->35 [style = bold, label=""];
31->28 [style = dotted, label="true"];
25->50 [style = dotted, label="true"];
65->28 [style = solid, label="isNullOperands"];
27->7 [style = bold, label=""];
43->1 [style = bold, label=""];
31->27 [style = dotted, label="true"];
1->12 [style = dotted, label="true"];
75->27 [style = solid, label="trueLiteral"];
52->39 [style = solid, label="logic"];
1->12 [style = bold, label=""];
47->43 [style = solid, label="allLiterals"];
55->19 [style = solid, label="trueLiteral"];
52->64 [style = solid, label="logic"];
75->50 [style = solid, label="trueLiteral"];
58->59 [style = bold, label=""];
40->58 [style = bold, label=""];
28->3 [style = bold, label=""];
29->20 [style = solid, label="falseLiteral"];
17->44 [style = bold, label=""];
81->31 [style = bold, label=""];
31->3 [style = dotted, label="true"];
89->85 [style = dotted, label="true"];
34->37 [style = dotted, label="true"];
64->43 [style = bold, label=""];
75->18 [style = solid, label="trueLiteral"];
89->78 [style = dotted, label="true"];
80->89 [style = solid, label="logic"];
31->83 [style = bold, label=""];
69->62 [style = solid, label="variablesSet"];
40->49 [style = dotted, label="true"];
38->60 [style = solid, label="conditions"];
8->28 [style = bold, label=""];
55->29 [style = bold, label=""];
21->8 [style = solid, label="keyIsNulls"];
66->9 [style = dotted, label="true"];
29->17 [style = solid, label="falseLiteral"];
89->85 [style = bold, label=""];
29->72 [style = dashed, label="0"];
70->0 [style = solid, label="builder"];
86->77 [style = bold, label=""];
25->48 [style = dotted, label="true"];
61->32 [style = solid, label="unknownLiteral"];
40->6 [style = dotted, label="true"];
14->38 [style = bold, label=""];
13->62 [style = dotted, label="true"];
69->15 [style = solid, label="variablesSet"];
40->2 [style = dotted, label="true"];
63->0 [style = solid, label="builder"];
21->32 [style = solid, label="keyIsNulls"];
73->69 [style = dotted, label="true"];
52->25 [style = solid, label="logic"];
77->78 [style = bold, label=""];
40->52 [style = dotted, label="true"];
5->25 [style = bold, label=""];
47->41 [style = solid, label="allLiterals"];
18->54 [style = solid, label="b"];
76->89 [style = bold, label=""];
88->82 [style = dotted, label="true"];
66->24 [style = bold, label=""];
72->61 [style = bold, label=""];
58->76 [style = bold, label=""];
88->58 [style = bold, label=""];
44->32 [style = bold, label=""];
64->43 [style = dotted, label="true"];
63->25 [style = solid, label="logic"];
89->78 [style = bold, label=""];
63->64 [style = solid, label="logic"];
44->41 [style = bold, label=""];
5->25 [style = dotted, label="false"];
25->68 [style = dotted, label="true"];
5->26 [style = dotted, label="true"];
73->74 [style = dotted, label="true"];
51->54 [style = solid, label="b"];
13->15 [style = bold, label=""];
25->23 [style = dotted, label="true"];
25->10 [style = dotted, label="true"];
43->1 [style = dotted, label="true"];
39->20 [style = bold, label=""];
33->39 [style = dotted, label="true"];
22->42 [style = bold, label=""];
69->56 [style = solid, label="variablesSet"];
65->8 [style = bold, label=""];
29->61 [style = bold, label=""];
19->33 [style = bold, label=""];
64->44 [style = bold, label=""];
89->87 [style = dotted, label="true"];
60->37 [style = bold, label=""];
44->32 [style = dotted, label="true"];
5->67 [style = dotted, label="true"];
75->15 [style = solid, label="trueLiteral"];
55->75 [style = dashed, label="0"];
31->35 [style = dotted, label="true"];
55->27 [style = solid, label="trueLiteral"];
26->35 [style = solid, label="conditions"];
57->66 [style = bold, label=""];
13->62 [style = bold, label=""];
13->15 [style = dotted, label="false"];
5->31 [style = dotted, label="true"];
11->21 [style = bold, label=""];
63->39 [style = solid, label="logic"];
63->31 [style = solid, label="logic"];
88->79 [style = dotted, label="true"];
5->26 [style = bold, label=""];
66->30 [style = dotted, label="true"];
71->14 [style = solid, label="offset"];
59->46 [style = solid, label="fields"];
25->13 [style = dotted, label="true"];
24->45 [style = bold, label=""];
31->8 [style = dotted, label="true"];
16->50 [style = bold, label=""];
18->53 [style = solid, label="b"];
69->60 [style = solid, label="variablesSet"];
52->34 [style = solid, label="logic"];
42->14 [style = bold, label=""];
21->55 [style = bold, label=""];
34->56 [style = bold, label=""];
34->60 [style = dotted, label="true"];
59->47 [style = bold, label=""];
43->17 [style = bold, label=""];
2->14 [style = solid, label="offset"];
75->36 [style = solid, label="trueLiteral"];
26->31 [style = bold, label=""];
41->36 [style = bold, label=""];
43->53 [style = dotted, label="true"];
49->62 [style = solid, label="variablesSet"];
66->9 [style = bold, label=""];
10->16 [style = bold, label=""];
5->45 [style = dotted, label="true"];
38->34 [style = bold, label=""];
73->70 [style = dotted, label="true"];
0->18 [style = bold, label=""];
51->43 [style = bold, label=""];
32->41 [style = bold, label=""];
75->72 [style = bold, label=""];
55->62 [style = solid, label="trueLiteral"];
55->37 [style = solid, label="trueLiteral"];
87->86 [style = bold, label=""];
75->62 [style = solid, label="trueLiteral"];
31->57 [style = dotted, label="true"];
31->65 [style = bold, label=""];
41->19 [style = dotted, label="true"];
64->51 [style = dotted, label="true"];
72->12 [style = solid, label="falseLiteral"];
25->16 [style = dotted, label="true"];
47->5 [style = solid, label="allLiterals"];
46->22 [style = bold, label=""];
78->81 [style = bold, label=""];
72->20 [style = solid, label="falseLiteral"];
75->37 [style = solid, label="trueLiteral"];
39->54 [style = dotted, label="true"];
75->19 [style = solid, label="trueLiteral"];
35->27 [style = bold, label=""];
33->20 [style = bold, label=""];
72->53 [style = solid, label="falseLiteral"];
59->48 [style = solid, label="fields"];
61->5 [style = bold, label=""];
25->23 [style = bold, label=""];
35->85 [style = dashed, label="0"];
50->46 [style = bold, label=""];
49->60 [style = solid, label="variablesSet"];
52->31 [style = solid, label="logic"];
56->0 [style = bold, label=""];
62->10 [style = bold, label=""];
9->30 [style = bold, label=""];
45->67 [style = bold, label=""];
54->20 [style = bold, label=""];
40->63 [style = dotted, label="true"];
88->80 [style = dotted, label="true"];
48->42 [style = bold, label=""];
25->46 [style = dotted, label="true"];
82->86 [style = solid, label="variablesSet"];
61->51 [style = solid, label="unknownLiteral"];
20->4 [style = bold, label=""];
82->31 [style = solid, label="variablesSet"];
7->45 [style = bold, label=""];
85->87 [style = bold, label=""];
66->24 [style = dotted, label="false"];
34->60 [style = bold, label=""];
31->66 [style = dotted, label="true"];
89->86 [style = dotted, label="true"];
26->28 [style = solid, label="conditions"];
33->39 [style = bold, label=""];
41->36 [style = dotted, label="false"];
7->86 [style = dashed, label="0"];
49->15 [style = solid, label="variablesSet"];
25->22 [style = dotted, label="true"];
73->71 [style = dotted, label="true"];
67->42 [style = bold, label=""];
3->57 [style = solid, label="project"];
63->84 [style = dashed, label="0"];
55->15 [style = solid, label="trueLiteral"];
3->57 [style = bold, label=""];
68->13 [style = bold, label=""];
25->50 [style = bold, label=""];
55->18 [style = solid, label="trueLiteral"];
1->53 [style = bold, label=""];
30->45 [style = bold, label=""];
29->53 [style = solid, label="falseLiteral"];
37->56 [style = bold, label=""];
}
