digraph {
7 [style = filled, label = "final List<String> inputNames@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "waitForLastBuildToStop(project)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "setupSlaveWithTwoExecutors()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "waitForLastBuildToStop(project)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final FreeStyleProject project2 = createLongRunningProject(TEST_JOB_NAME_2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final String stdout = runWith(inputNames).stdout()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(stdout,equalTo(\"Build '#1' stopped for job 'jobName'\" + LN))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "project2.scheduleBuild2(0).waitForStart()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "setupAndAssertTwoBuildsStop['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "setupAndAssertTwoBuildsStop['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "final FreeStyleProject project = createLongRunningProject(TEST_JOB_NAME)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(stdout,equalTo(\"Build '#1' stopped for job 'jobName'\" + LN + \"Build '#1' stopped for job 'jobName2'\" + LN))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "project.scheduleBuild2(0).waitForStart()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "shouldStopLastBuild['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String stdout = runWith(Collections.singletonList(TEST_JOB_NAME)).stdout()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "waitForLastBuildToStop(project2)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
4->9 [style = bold, label=""];
11->7 [style = dotted, label="true"];
15->13 [style = bold, label=""];
1->8 [style = bold, label=""];
2->6 [style = bold, label=""];
4->9 [style = solid, label="stdout"];
6->15 [style = solid, label="stdout"];
3->6 [style = bold, label=""];
6->0 [style = bold, label=""];
12->13 [style = solid, label="project"];
6->15 [style = bold, label=""];
10->5 [style = bold, label=""];
3->2 [style = bold, label=""];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
14->12 [style = bold, label=""];
12->3 [style = bold, label=""];
3->1 [style = solid, label="project"];
9->1 [style = bold, label=""];
10->7 [style = dotted, label="true"];
2->8 [style = solid, label="project2"];
}
