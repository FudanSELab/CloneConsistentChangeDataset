digraph {
10 [style = filled, label = "assertEquals(fieldMap.get(\"title\").toUpperCase(),entry.getField(\"title\").get())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "FieldFormatterCleanup cleanup = new FieldFormatterCleanup(FieldName.INTERNAL_ALL_TEXT_FIELDS_FIELD,new UpperCaseFormatter())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(fieldMap.get(\"title\").toUpperCase(),entry.getField(\"title\").get())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(fieldMap.get(\"issn\"),entry.getField(\"issn\").get())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(fieldMap.get(\"year\").toUpperCase(),entry.getField(\"year\").get())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Assert.assertEquals(fieldMap.get(\"abstract\").toUpperCase(),entry.getField(\"abstract\").get())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(fieldMap.get(\"abstract\").toUpperCase(),entry.getField(\"abstract\").get())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertEquals(fieldMap.get(\"booktitle\").toUpperCase(),entry.getField(\"booktitle\").get())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testInternalAllField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(fieldMap.get(\"year\").toUpperCase(),entry.getField(\"year\").get())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(fieldMap.get(\"issn\").toUpperCase(),entry.getField(\"issn\").get())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(fieldMap.get(\"doi\"),entry.getField(\"doi\").get())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testInternalAllTextFieldsField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "FieldFormatterCleanup cleanup = new FieldFormatterCleanup(FieldName.INTERNAL_ALL_FIELD,new UpperCaseFormatter())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(fieldMap.get(\"month\").toUpperCase(),entry.getField(\"month\").get())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(fieldMap.get(\"month\"),entry.getField(\"month\").get())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(fieldMap.get(\"doi\").toUpperCase(),entry.getField(\"doi\").get())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(fieldMap.get(\"doi\").toUpperCase(),entry.getField(\"doi\").get())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assert.assertEquals(fieldMap.get(\"year\"),entry.getField(\"year\").get())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testInternalAllField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertEquals(fieldMap.get(\"issn\").toUpperCase(),entry.getField(\"issn\").get())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertEquals(fieldMap.get(\"month\").toUpperCase(),entry.getField(\"month\").get())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "cleanup.cleanup(entry)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(fieldMap.get(\"booktitle\").toUpperCase(),entry.getField(\"booktitle\").get())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->18 [style = dashed, label="0"];
5->10 [style = bold, label=""];
8->19 [style = dashed, label="0"];
16->13 [style = bold, label=""];
2->20 [style = dashed, label="0"];
2->1 [style = bold, label=""];
7->14 [style = dashed, label="0"];
9->4 [style = bold, label=""];
18->5 [style = solid, label="cleanup"];
0->2 [style = bold, label=""];
6->0 [style = bold, label=""];
12->16 [style = bold, label=""];
4->5 [style = solid, label="cleanup"];
1->21 [style = dashed, label="0"];
0->12 [style = dashed, label="0"];
1->7 [style = bold, label=""];
7->3 [style = bold, label=""];
6->10 [style = dashed, label="0"];
20->21 [style = bold, label=""];
1->13 [style = dashed, label="0"];
3->23 [style = dashed, label="0"];
22->18 [style = bold, label=""];
5->6 [style = bold, label=""];
15->11 [style = bold, label=""];
10->12 [style = bold, label=""];
3->8 [style = bold, label=""];
18->5 [style = bold, label=""];
7->23 [style = bold, label=""];
23->19 [style = bold, label=""];
2->16 [style = dashed, label="0"];
3->15 [style = dashed, label="0"];
21->7 [style = bold, label=""];
0->20 [style = bold, label=""];
14->15 [style = bold, label=""];
8->11 [style = dashed, label="0"];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
17->4 [style = bold, label=""];
}
