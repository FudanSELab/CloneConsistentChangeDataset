digraph {
12 [style = filled, label = "List<Map<String,Object>> map = mapper.getAListOfMaps()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "SqlSession session = sqlSessionFactory.openSession()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BoundBlogMapper mapper = session.getMapper()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{sqlSession.close()}@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<Map<String,Object>> blogs = mapper.selectBlogsAsMaps()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "shouldExecuteBoundSelectListOfBlogsAsMaps['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SqlSession sqlSession = sqlSessionFactory.openSession()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(1,map.get(0).get(\"ID\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "shouldExecuteBoundSelectListOfBlogsAsMaps['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertEquals(2,blogs.size())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<Map> blogs = mapper.selectBlogsAsMaps()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "testShouldGetAListOfMaps['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
5->8 [style = dashed, label="0"];
5->1 [style = bold, label=""];
6->4 [style = bold, label=""];
1->9 [style = dashed, label="0"];
7->5 [style = bold, label=""];
11->0 [style = bold, label=""];
1->6 [style = bold, label=""];
9->12 [style = bold, label=""];
3->6 [style = dashed, label="0"];
3->12 [style = dashed, label="0"];
4->11 [style = dashed, label="0"];
10->8 [style = bold, label=""];
3->4 [style = bold, label=""];
4->0 [style = bold, label=""];
2->5 [style = bold, label=""];
8->9 [style = bold, label=""];
12->11 [style = bold, label=""];
}
