digraph {
9 [style = filled, label = "deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.UPSERT,.getName(),Collections.EMPTY_LIST,PROPS_FILENAME_TEST_JSON_KAFKA,false,true,100000,false,null,null,\"timestamp\"),jsc)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "int records = 10@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.INSERT,.getName(),Collections.EMPTY_LIST,PROPS_FILENAME_TEST_PARQUET,false,false,100000,false,null,null,\"timestamp\",null),jsc)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "topicName = \"topic\" + testNum@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TestHelpers.assertRecordCount(totalExpectedRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TestHelpers.assertRecordCount(totalExpectedRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "deltaStreamer.shutdownGracefully()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int totalExpectedRecords = parquetRecords + ((autoResetToLatest)? 0: JSON_KAFKA_NUM_RECORDS)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "totalRecords += records@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.UPSERT,.getName(),Collections.EMPTY_LIST,PROPS_FILENAME_TEST_JSON_KAFKA,false,true,100000,false,null,null,\"timestamp\"),jsc)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "String tableBasePath = dfsBasePath + \"/test_json_kafka_table\" + testNum@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "prepareJsonKafkaDFSFiles(JSON_KAFKA_NUM_RECORDS,true,topicName)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "deltaStreamer.sync()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int parquetRecords = 10@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "prepareParquetDFSFiles(parquetRecords,PARQUET_SOURCE_ROOT,FIRST_PARQUET_FILE_NAME,true,HoodieTestDataGenerator.TRIP_SCHEMA,HoodieTestDataGenerator.AVRO_TRIP_SCHEMA)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String tableBasePath = dfsBasePath + \"/test_dfs_to_kakfa\" + testNum@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "prepareJsonKafkaDFSFiles(records,false,topicName)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testDeltaStreamerTransitionFromParquetToKafkaSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "testJsonKafkaDFSSource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TestHelpers.assertRecordCount(parquetRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "deltaStreamer.sync()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "deltaStreamer.sync()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "int totalRecords = JSON_KAFKA_NUM_RECORDS@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "prepareJsonKafkaDFSFiles(20,false,topicName)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testNum++@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "deltaStreamer.sync()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "TestHelpers.assertRecordCount(JSON_KAFKA_NUM_RECORDS,tableBasePath + \"/*/*.parquet\",sqlContext)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.UPSERT,.getName(),Collections.EMPTY_LIST,PROPS_FILENAME_TEST_JSON_KAFKA,false,true,100000,false,null,null,\"timestamp\",null),jsc)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "TestHelpers.assertRecordCount(totalRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.INSERT,.getName(),Collections.EMPTY_LIST,PROPS_FILENAME_TEST_PARQUET,false,false,100000,false,null,null,\"timestamp\"),jsc)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "testDeltaStreamerTransitionFromParquetToKafkaSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "prepareJsonKafkaDFSSource(PROPS_FILENAME_TEST_JSON_KAFKA,\"earliest\",topicName)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "PARQUET_SOURCE_ROOT = dfsBasePath + \"/parquetFilesDfsToKafka\" + testNum@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "prepareParquetDFSSource(true,false,\"source_uber.avsc\",\"target_uber.avsc\",PROPS_FILENAME_TEST_PARQUET,PARQUET_SOURCE_ROOT,false)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "boolean autoResetToLatest@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "totalExpectedRecords += 20@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "prepareJsonKafkaDFSSource(PROPS_FILENAME_TEST_JSON_KAFKA,autoResetToLatest? \"latest\": \"earliest\",topicName)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "deltaStreamer.sync()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12->10 [style = solid, label="tableBasePath"];
15->2 [style = bold, label=""];
6->7 [style = solid, label="parquetRecords"];
27->36 [style = bold, label=""];
12->25 [style = solid, label="tableBasePath"];
37->28 [style = bold, label=""];
31->22 [style = bold, label=""];
12->14 [style = solid, label="tableBasePath"];
31->22 [style = solid, label="records"];
25->13 [style = bold, label=""];
8->33 [style = dashed, label="0"];
21->0 [style = dotted, label="true"];
12->17 [style = solid, label="tableBasePath"];
18->27 [style = dashed, label="0"];
1->16 [style = solid, label="PARQUET_SOURCE_ROOT"];
36->32 [style = solid, label="tableBasePath"];
3->24 [style = dashed, label="0"];
8->14 [style = bold, label=""];
11->29 [style = bold, label=""];
12->3 [style = solid, label="tableBasePath"];
36->37 [style = solid, label="tableBasePath"];
12->24 [style = bold, label=""];
36->33 [style = solid, label="tableBasePath"];
0->8 [style = solid, label="autoResetToLatest"];
2->10 [style = bold, label=""];
5->17 [style = bold, label=""];
8->14 [style = solid, label="totalExpectedRecords"];
34->26 [style = solid, label="topicName"];
6->17 [style = solid, label="parquetRecords"];
12->24 [style = solid, label="tableBasePath"];
17->19 [style = bold, label=""];
11->18 [style = bold, label=""];
24->5 [style = bold, label=""];
22->20 [style = solid, label="topicName"];
15->22 [style = dashed, label="0"];
1->7 [style = solid, label="PARQUET_SOURCE_ROOT"];
12->9 [style = solid, label="tableBasePath"];
6->8 [style = solid, label="parquetRecords"];
26->27 [style = bold, label=""];
3->5 [style = bold, label=""];
1->6 [style = bold, label=""];
22->18 [style = solid, label="topicName"];
31->11 [style = solid, label="records"];
28->33 [style = bold, label=""];
10->32 [style = dashed, label="0"];
15->10 [style = solid, label="totalExpectedRecords"];
34->26 [style = bold, label=""];
34->27 [style = solid, label="topicName"];
22->32 [style = solid, label="totalRecords"];
30->31 [style = bold, label=""];
29->32 [style = bold, label=""];
21->1 [style = bold, label=""];
7->16 [style = bold, label=""];
9->25 [style = dashed, label="0"];
18->9 [style = bold, label=""];
18->25 [style = bold, label=""];
10->4 [style = bold, label=""];
23->1 [style = bold, label=""];
33->30 [style = bold, label=""];
12->3 [style = bold, label=""];
36->37 [style = bold, label=""];
0->18 [style = solid, label="autoResetToLatest"];
13->8 [style = bold, label=""];
6->7 [style = bold, label=""];
35->34 [style = bold, label=""];
20->15 [style = bold, label=""];
19->22 [style = bold, label=""];
16->12 [style = bold, label=""];
22->11 [style = bold, label=""];
22->11 [style = solid, label="topicName"];
23->0 [style = dotted, label="true"];
34->11 [style = solid, label="topicName"];
14->20 [style = bold, label=""];
9->13 [style = bold, label=""];
}
