digraph {
6 [style = filled, label = "assertThat(transpose.edgeValueOrDefault(N1,N2,null)).isEqualTo(E21)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectedTranspose.putEdgeValue(N3,N1,E13)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(transpose).isEqualTo(expectedTranspose)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "directedGraph.putEdgeValue(N1,N3,E13)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(transpose.edgeValueOrDefault(N1,N2,null)).isNull()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "directedGraph.putEdgeValue(N3,N4,E34)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ValueGraph<Integer,String> transpose = transpose(directedGraph)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "transpose_directedValueGraph['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expectedTranspose.putEdgeValue(N1,N1,E11)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expectedTranspose.putEdgeValue(N2,N1,E12)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(directedGraph.inDegree(node)).isSameInstanceAs(transpose.outDegree(node))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "MutableValueGraph<Integer,String> expectedTranspose = ValueGraphBuilder.directed().allowsSelfLoops(true).build()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "transpose_directedValueGraph['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertThat(directedGraph.outDegree(node)).isSameAs(transpose.inDegree(node))@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(directedGraph.outDegree(node)).isSameInstanceAs(transpose.inDegree(node))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "directedGraph.putEdgeValue(N1,N1,E11)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MutableValueGraph<Integer,String> directedGraph = ValueGraphBuilder.directed().allowsSelfLoops(true).build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "directedGraph.putEdgeValue(N1,N2,E12)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectedTranspose.putEdgeValue(N4,N3,E34)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "AbstractGraphTest.validateGraph(transpose.asGraph())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "transpose_directedValueGraph['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "directedGraph.putEdgeValue(N3,N1,E31)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "AbstractGraphTest.validateGraph(transpose.asGraph())@@@26@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectedTranspose.putEdgeValue(N1,N3,E31)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(transpose(transpose)).isSameInstanceAs(directedGraph)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertThat(transpose(transpose)).isSameAs(directedGraph)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(directedGraph.inDegree(node)).isSameAs(transpose.outDegree(node))@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "directedGraph.putEdgeValue(N2,N1,E21)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->22 [style = bold, label=""];
14->3 [style = bold, label=""];
16->0 [style = bold, label=""];
2->26 [style = bold, label=""];
2->19 [style = bold, label=""];
7->12 [style = bold, label=""];
10->24 [style = bold, label=""];
1->15 [style = bold, label=""];
26->25 [style = bold, label=""];
11->22 [style = solid, label="directedGraph"];
12->6 [style = bold, label=""];
3->4 [style = bold, label=""];
13->11 [style = bold, label=""];
1->10 [style = solid, label="expectedTranspose"];
22->24 [style = dashed, label="0"];
5->16 [style = bold, label=""];
6->20 [style = bold, label=""];
19->26 [style = dashed, label="0"];
18->10 [style = bold, label=""];
17->2 [style = bold, label=""];
27->11 [style = bold, label=""];
25->12 [style = bold, label=""];
15->9 [style = bold, label=""];
25->26 [style = bold, label=""];
24->17 [style = bold, label=""];
7->25 [style = dashed, label="0"];
9->5 [style = bold, label=""];
8->21 [style = bold, label=""];
22->17 [style = bold, label=""];
11->8 [style = bold, label=""];
0->18 [style = bold, label=""];
11->18 [style = solid, label="directedGraph"];
11->24 [style = solid, label="directedGraph"];
4->1 [style = bold, label=""];
23->11 [style = bold, label=""];
7->19 [style = bold, label=""];
19->7 [style = bold, label=""];
21->14 [style = bold, label=""];
}
