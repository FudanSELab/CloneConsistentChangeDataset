digraph {
20 [style = filled, label = "assertRunNeedFlushByTrue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "when(backendConnection.closeConnections(false)).thenReturn(Collections.emptyList())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(engine.getCommandExecuteEngine().getCommandPacket(payload,commandPacketType,backendConnection)).thenReturn(commandPacket)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(queryCommandExecutor.execute()).thenReturn(Collections.singletonList(databasePacket))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertRunByCommandExecutor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "when(engine.getCommandExecuteEngine().getCommandExecutor(commandPacketType,commandPacket,backendConnection)).thenReturn(commandExecutor)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "verify(commandExecutor).close()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "verify(handlerContext).write(databasePacket)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CommandExecutorTask actual = new CommandExecutorTask(engine,backendConnection,handlerContext,message)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertRunNeedFlushByTrue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(engine.getCommandExecuteEngine().getCommandPacketType(payload)).thenReturn(commandPacketType)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "verify(backendConnection).closeDatabaseCommunicationEngines(true)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "actual.run()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(engine.getCodecEngine().createPacketPayload(message)).thenReturn(payload)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "verify(connectionStatus).switchToReleased()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "verify(handlerContext).flush()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(backendConnection.closeFederateExecutor()).thenReturn(Collections.emptyList())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(engine.getCommandExecuteEngine().getCommandExecutor(commandPacketType,commandPacket,backendConnection)).thenReturn(queryCommandExecutor)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(backendConnection).closeDatabaseCommunicationEngines(true)@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(backendConnection.getConnectionStatus()).thenReturn(connectionStatus)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(engine.getCommandExecuteEngine().getCommandPacket(payload,commandPacketType,backendConnection)).thenReturn(commandPacket)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "when(frontendContext.isFlushForPerCommandPacket()).thenReturn(true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "verify(connectionStatus).switchToUsing()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(engine.getFrontendContext()).thenReturn(frontendContext)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "when(engine.getCodecEngine().createPacketPayload(message)).thenReturn(payload)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(connectionStatus).waitUntilConnectionRelease()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(engine.getCommandExecuteEngine().writeQueryData(any(),any(),any(),anyInt())).thenReturn(true)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(commandExecutor.execute()).thenReturn(Collections.singletonList(databasePacket))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->3 [style = bold, label=""];
15->10 [style = bold, label=""];
20->17 [style = bold, label=""];
7->17 [style = bold, label=""];
6->18 [style = bold, label=""];
1->15 [style = bold, label=""];
0->11 [style = bold, label=""];
3->6 [style = bold, label=""];
21->24 [style = bold, label=""];
5->14 [style = bold, label=""];
12->9 [style = bold, label=""];
2->4 [style = bold, label=""];
5->19 [style = bold, label=""];
26->27 [style = bold, label=""];
17->12 [style = bold, label=""];
23->22 [style = bold, label=""];
19->14 [style = bold, label=""];
8->5 [style = bold, label=""];
10->0 [style = bold, label=""];
11->13 [style = bold, label=""];
9->25 [style = dashed, label="0"];
4->8 [style = bold, label=""];
25->10 [style = bold, label=""];
27->23 [style = bold, label=""];
22->1 [style = bold, label=""];
18->21 [style = bold, label=""];
9->1 [style = bold, label=""];
1->25 [style = bold, label=""];
13->2 [style = bold, label=""];
10->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
