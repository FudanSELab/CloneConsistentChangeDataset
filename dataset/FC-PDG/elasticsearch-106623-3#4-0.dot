digraph {
196 [style = filled, label = "tagsAggResultSubAggregations = tagsAggResult.getProfiledChildren().stream().collect(Collectors.toMap(null,null))@@@140@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
127 [style = filled, label = "assertThat(maxAggResult,notNullValue())@@@110@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "SearchResponse response = client().prepareSearch(\"idx\").setProfile(true).addAggregation(histogram(\"histo\").field(NUMBER_FIELD).interval(1L).subAggregation(terms(\"terms\").field(TAG_FIELD).order(BucketOrder.aggregation(\"avg\",false)).subAggregation(avg(\"avg\").field(NUMBER_FIELD)))).get()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertThat(maxAggResult.getQueryName(),equalTo(\"MaxAggregator\"))@@@158@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertThat(termsAggResult.getQueryName(),equalTo(.getSimpleName()))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(termsAggResult.getLuceneDescription(),equalTo(\"terms\"))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),notNullValue())@@@58@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
152 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.INITIALIZE.toString()),greaterThan(0L))@@@116@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
158 [style = filled, label = "assertThat(avgAggResult.getProfiledChildren().size(),equalTo(0))@@@108@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertThat(avgAggResult.getQueryName(),equalTo(\"AvgAggregator\"))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
213 [style = filled, label = "assertThat(tagsBreakdown,notNullValue())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
110 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.INITIALIZE.toString()),greaterThan(0L))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Map<String,Long> avgBreakdown = termsAggResult.getTimeBreakdown()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertThat(avgBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testMultiLevelProfile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertThat(avgBreakdown.get(REDUCE),equalTo(0L))@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "assertThat(termsAggResult.getProfiledChildren().size(),equalTo(1))@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
160 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),notNullValue())@@@151@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(histoBreakdown.get(AggregationTimingType.REDUCE.toString()),notNullValue())@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(histoBreakdown.get(AggregationTimingType.REDUCE.toString()),equalTo(0L))@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertThat(termsBreakdown.get(AggregationTimingType.REDUCE.toString()),equalTo(0L))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
189 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.INITIALIZE.toString()),notNullValue())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
131 [style = filled, label = "assertThat(stringsBreakdown.get(AggregationTimingType.REDUCE.toString()),notNullValue())@@@90@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),greaterThan(0L))@@@152@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(profileResults,notNullValue())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(histoAggResult.getQueryName(),equalTo(\"NumericHistogramAggregator\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertThat(termsBreakdown.get(AggregationTimingType.INITIALIZE.toString()),greaterThan(0L))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
98 [style = filled, label = "assertThat(stringsBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),notNullValue())@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(histoBreakdown.get(AggregationTimingType.COLLECT.toString()),greaterThan(0L))@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertThat(histoBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
143 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.COLLECT.toString()),greaterThan(0L))@@@134@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
168 [style = filled, label = "assertThat(avgAggResult,notNullValue())@@@95@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(histoAggResult.getProfiledChildren().size(),equalTo(1))@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "maxBreakdown = stringsAggResult.getTimeBreakdown()@@@113@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.COLLECT.toString()),notNullValue())@@@56@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
184 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.REDUCE.toString()),equalTo(0L))@@@169@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
193 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),notNullValue())@@@166@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "assertThat(avgAggResult,notNullValue())@@@142@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
176 [style = filled, label = "assertThat(stringsAggResult.getProfiledChildren().size(),equalTo(3))@@@92@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
179 [style = filled, label = "assertThat(tagsAggResult,notNullValue())@@@125@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(termsAggResult.getProfiledChildren().size(),equalTo(1))@@@46@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
197 [style = filled, label = "assertThat(maxAggResult,notNullValue())@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Map<String,Long> termsBreakdown = termsAggResult.getTimeBreakdown()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.COLLECT.toString()),notNullValue())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
118 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),greaterThan(0L))@@@136@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "Map<String,Long> maxBreakdown = tagsAggResult.getTimeBreakdown()@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
151 [style = filled, label = "assertThat(maxAggResult.getProfiledChildren().size(),equalTo(0))@@@170@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "AggregationProfileShardResult aggProfileResults = profileShardResult.getAggregationProfileResults()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(termsBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),greaterThan(0L))@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
134 [style = filled, label = "assertThat(avgBreakdown,notNullValue())@@@146@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
159 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.COLLECT.toString()),notNullValue())@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
185 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.COLLECT.toString()),notNullValue())@@@102@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "ProfileResult termsAggResult = histoAggResult.getProfiledChildren().get(0)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "assertThat(avgAggResult.getTime(),greaterThan(0L))@@@144@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
122 [style = filled, label = "assertThat(maxBreakdown,notNullValue())@@@114@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
148 [style = filled, label = "Map<String,ProfileResult> tagsAggResultSubAggregations = tagsAggResult.getProfiledChildren().stream().collect(Collectors.toMap(null,null))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
192 [style = filled, label = "avgBreakdown = stringsAggResult.getTimeBreakdown()@@@98@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.INITIALIZE.toString()),greaterThan(0L))@@@148@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertThat(avgBreakdown.get(COLLECT),greaterThan(0L))@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
93 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),greaterThan(0L))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertThat(termsBreakdown.get(REDUCE),equalTo(0L))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
111 [style = filled, label = "assertThat(maxAggResult.getTime(),greaterThan(0L))@@@112@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
187 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.COLLECT.toString()),greaterThan(0L))@@@150@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(termsBreakdown.get(AggregationTimingType.COLLECT.toString()),greaterThan(0L))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "assertThat(termsBreakdown.get(INITIALIZE),greaterThan(0L))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
153 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.REDUCE.toString()),equalTo(0L))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
210 [style = filled, label = "assertThat(avgAggResult.getQueryName(),equalTo(\"AvgAggregator\"))@@@143@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "Map<String,Object> histoDebugInfo = histoAggResult.getDebugInfo()@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "ProfileResult avgAggResult = termsAggResult.getProfiledChildren().get(0)@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
99 [style = filled, label = "assertThat(tagsAggResult.getTime(),greaterThan(0L))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "Map<String,Long> histoBreakdown = histoAggResult.getTimeBreakdown()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
199 [style = filled, label = "Map<String,Long> avgBreakdown = tagsAggResult.getTimeBreakdown()@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertThat(histoAggResult.getProfiledChildren().size(),equalTo(1))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertThat(avgAggResult.getProfiledChildren().size(),equalTo(0))@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(histoBreakdown,notNullValue())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "avgBreakdown = tagsAggResult.getTimeBreakdown()@@@145@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
169 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),notNullValue())@@@104@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
180 [style = filled, label = "tagsAggResult = stringsAggResultSubAggregations.get(\"tags\")@@@124@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
174 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.COLLECT.toString()),greaterThan(0L))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
141 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.REDUCE.toString()),equalTo(0L))@@@138@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
116 [style = filled, label = "assertThat(stringsBreakdown.get(AggregationTimingType.INITIALIZE.toString()),notNullValue())@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
163 [style = filled, label = "SearchResponse response = client().prepareSearch(\"idx\").setProfile(true).addAggregation(histogram(\"histo\").field(NUMBER_FIELD).interval(1L).subAggregation(terms(\"tags\").field(TAG_FIELD).subAggregation(avg(\"avg\").field(NUMBER_FIELD)).subAggregation(max(\"max\").field(NUMBER_FIELD))).subAggregation(terms(\"strings\").field(STRING_FIELD).subAggregation(avg(\"avg\").field(NUMBER_FIELD)).subAggregation(max(\"max\").field(NUMBER_FIELD)).subAggregation(terms(\"tags\").field(TAG_FIELD).subAggregation(avg(\"avg\").field(NUMBER_FIELD)).subAggregation(max(\"max\").field(NUMBER_FIELD))))).get()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
117 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.COLLECT.toString()),notNullValue())@@@164@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),notNullValue())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertThat(histoDebugInfo.keySet(),equalTo(Set.of(TOTAL_BUCKETS)))@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
177 [style = filled, label = "Map<String,ProfileResult> stringsAggResultSubAggregations = stringsAggResult.getProfiledChildren().stream().collect(Collectors.toMap(null,null))@@@93@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertThat(avgAggResult.getQueryName(),equalTo(\"AvgAggregator\"))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertThat(tagsBreakdown,notNullValue())@@@130@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
145 [style = filled, label = "assertThat(maxBreakdown,notNullValue())@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
120 [style = filled, label = "assertThat(maxAggResult.getProfiledChildren().size(),equalTo(0))@@@123@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.INITIALIZE.toString()),notNullValue())@@@54@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
190 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.INITIALIZE.toString()),greaterThan(0L))@@@132@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
195 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),greaterThan(0L))@@@167@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
212 [style = filled, label = "ProfileResult stringsAggResult = histoAggResultSubAggregations.get(\"strings\")@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertThat(termsAggResult.getDebugInfo(),equalTo(Map.of(WRAPPED,true)))@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
188 [style = filled, label = "maxAggResult = tagsAggResultSubAggregations.get(\"max\")@@@156@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertThat(histoBreakdown.get(INITIALIZE),greaterThan(0L))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.COLLECT.toString()),greaterThan(0L))@@@57@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
181 [style = filled, label = "assertThat(avgBreakdown,notNullValue())@@@99@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
206 [style = filled, label = "assertThat(tagsAggResult,notNullValue())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
164 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.REDUCE.toString()),notNullValue())@@@106@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
183 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.INITIALIZE.toString()),notNullValue())@@@115@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(histoBreakdown.get(AggregationTimingType.COLLECT.toString()),notNullValue())@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(histoAggResult.getTime(),greaterThan(0L))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
166 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),greaterThan(0L))@@@120@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.COLLECT.toString()),greaterThan(0L))@@@118@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
136 [style = filled, label = "assertThat(tagsAggResult.getProfiledChildren().size(),equalTo(2))@@@139@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
147 [style = filled, label = "assertThat(avgAggResult.getQueryName(),equalTo(\"AvgAggregator\"))@@@96@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
150 [style = filled, label = "assertThat(stringsBreakdown.get(AggregationTimingType.COLLECT.toString()),greaterThan(0L))@@@87@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
178 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),notNullValue())@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(histoBreakdown.get(AggregationTimingType.INITIALIZE.toString()),notNullValue())@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertThat(termsBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
201 [style = filled, label = "assertThat(maxAggResult.getQueryName(),equalTo(\"MaxAggregator\"))@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
175 [style = filled, label = "assertThat(tagsAggResult.getTime(),greaterThan(0L))@@@128@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
133 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.REDUCE.toString()),equalTo(0L))@@@107@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(avgBreakdown,notNullValue())@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.REDUCE.toString()),equalTo(0L))@@@61@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertThat(avgAggResult.getProfiledChildren().size(),equalTo(0))@@@59@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
102 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.INITIALIZE.toString()),greaterThan(0L))@@@163@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
167 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.INITIALIZE.toString()),notNullValue())@@@147@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
209 [style = filled, label = "ProfileResult tagsAggResult = histoAggResultSubAggregations.get(\"tags\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.REDUCE.toString()),notNullValue())@@@60@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "assertThat(maxAggResult.getTime(),greaterThan(0L))@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
157 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.REDUCE.toString()),notNullValue())@@@168@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertThat(histoBreakdown.get(AggregationTimingType.INITIALIZE.toString()),greaterThan(0L))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertThat(termsAggResult,notNullValue())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),greaterThan(0L))@@@59@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "ProfileResult histoAggResult = aggProfileResultsList.get(0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.COLLECT.toString()),greaterThan(0L))@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
162 [style = filled, label = "assertThat(stringsBreakdown.get(AggregationTimingType.INITIALIZE.toString()),greaterThan(0L))@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.INITIALIZE.toString()),greaterThan(0L))@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(aggProfileResultsList.size(),equalTo(1))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
173 [style = filled, label = "assertThat(maxAggResult,notNullValue())@@@157@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "maxAggResult = stringsAggResultSubAggregations.get(\"max\")@@@109@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertThat(histoBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),greaterThan(0L))@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "assertThat(tagsAggResult.getLuceneDescription(),equalTo(\"tags\"))@@@127@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
137 [style = filled, label = "assertThat(tagsAggResult.getQueryName(),equalTo(.getSimpleName()))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
161 [style = filled, label = "assertThat(stringsBreakdown.get(AggregationTimingType.REDUCE.toString()),equalTo(0L))@@@91@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(avgAggResult,notNullValue())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertThat(((Number)histoDebugInfo.get(TOTAL_BUCKETS)).longValue(),greaterThan(0L))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
211 [style = filled, label = "assertThat(maxAggResult.getTime(),greaterThan(0L))@@@159@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
125 [style = filled, label = "testComplexProfile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(profileShardResult,notNullValue())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.INITIALIZE.toString()),greaterThan(0L))@@@55@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.INITIALIZE.toString()),notNullValue())@@@131@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertSearchResponse(response)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.REDUCE.toString()),notNullValue())@@@153@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
149 [style = filled, label = "assertThat(stringsAggResult.getQueryName(),equalTo(.getSimpleName()))@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
202 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.INITIALIZE.toString()),greaterThan(0L))@@@101@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertThat(aggProfileResults,notNullValue())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertThat(termsBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertThat(profileResults.size(),equalTo(getNumShards(\"idx\").numPrimaries))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "assertThat(stringsBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),greaterThan(0L))@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),notNullValue())@@@119@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
138 [style = filled, label = "assertThat(maxBreakdown,notNullValue())@@@161@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
207 [style = filled, label = "maxBreakdown = tagsAggResult.getTimeBreakdown()@@@160@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
204 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.COLLECT.toString()),notNullValue())@@@149@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.COLLECT.toString()),greaterThan(0L))@@@165@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),greaterThan(0L))@@@105@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertThat(histoBreakdown.get(REDUCE),equalTo(0L))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
208 [style = filled, label = "assertThat(stringsAggResult,notNullValue())@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
200 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.INITIALIZE.toString()),notNullValue())@@@162@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),notNullValue())@@@135@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
156 [style = filled, label = "assertThat(avgAggResult.getProfiledChildren().size(),equalTo(0))@@@155@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
139 [style = filled, label = "Map<String,Long> stringsBreakdown = stringsAggResult.getTimeBreakdown()@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(aggProfileResultsList,notNullValue())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "List<ProfileResult> aggProfileResultsList = aggProfileResults.getProfileResults()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertThat(termsBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),notNullValue())@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
105 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.REDUCE.toString()),equalTo(0L))@@@154@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(termsBreakdown,notNullValue())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(termsBreakdown.get(AggregationTimingType.COLLECT.toString()),notNullValue())@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
155 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.COLLECT.toString()),greaterThan(0L))@@@103@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertThat(avgAggResult.getDebugInfo(),equalTo(Map.of()))@@@58@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
84 [style = filled, label = "Map<String,ProfileResult> histoAggResultSubAggregations = histoAggResult.getProfiledChildren().stream().collect(Collectors.toMap(null,null))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
144 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),greaterThan(0L))@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.REDUCE.toString()),notNullValue())@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
186 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.REDUCE.toString()),notNullValue())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertThat(histoDebugInfo,notNullValue())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
81 [style = filled, label = "assertThat(termsBreakdown.get(COLLECT),greaterThan(0L))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
135 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.INITIALIZE.toString()),notNullValue())@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(avgBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@53@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
203 [style = filled, label = "avgAggResult = stringsAggResultSubAggregations.get(\"avg\")@@@94@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.REDUCE.toString()),notNullValue())@@@137@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
205 [style = filled, label = "assertThat(stringsBreakdown.get(AggregationTimingType.COLLECT.toString()),notNullValue())@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
194 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.REDUCE.toString()),equalTo(0L))@@@122@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertThat(histoBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
112 [style = filled, label = "tagsBreakdown = tagsAggResult.getTimeBreakdown()@@@129@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
130 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.REDUCE.toString()),equalTo(0L))@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
132 [style = filled, label = "avgAggResult = tagsAggResultSubAggregations.get(\"avg\")@@@141@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(avgAggResult,notNullValue())@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(termsBreakdown.get(AggregationTimingType.REDUCE.toString()),notNullValue())@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
170 [style = filled, label = "assertThat(stringsBreakdown,notNullValue())@@@83@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(termsAggResult.getTime(),greaterThan(0L))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertThat(histoAggResult,notNullValue())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertThat(histoBreakdown.get(COLLECT),greaterThan(0L))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
123 [style = filled, label = "assertThat(maxAggResult.getProfiledChildren().size(),equalTo(0))@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
191 [style = filled, label = "ProfileResult avgAggResult = tagsAggResultSubAggregations.get(\"avg\")@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
142 [style = filled, label = "assertThat(avgAggResult.getTime(),greaterThan(0L))@@@97@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
198 [style = filled, label = "assertThat(stringsAggResult.getTime(),greaterThan(0L))@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "assertThat(tagsAggResult.getProfiledChildren().size(),equalTo(2))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "ProfileResult maxAggResult = tagsAggResultSubAggregations.get(\"max\")@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "testMultiLevelProfile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
108 [style = filled, label = "assertThat(tagsBreakdown.get(AggregationTimingType.COLLECT.toString()),notNullValue())@@@133@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertThat(avgAggResult.getTime(),greaterThan(0L))@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
172 [style = filled, label = "assertThat(maxAggResult.getQueryName(),equalTo(\"MaxAggregator\"))@@@111@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Map<String,ProfileShardResult> profileResults = response.getProfileResults()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
171 [style = filled, label = "assertThat(avgBreakdown.get(AggregationTimingType.INITIALIZE.toString()),notNullValue())@@@100@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
154 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.REDUCE.toString()),notNullValue())@@@121@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(histoAggResult.getLuceneDescription(),equalTo(\"histo\"))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
182 [style = filled, label = "assertThat(tagsAggResult.getQueryName(),equalTo(.getSimpleName()))@@@126@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "Map<String,Long> tagsBreakdown = tagsAggResult.getTimeBreakdown()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(histoBreakdown.get(AggregationTimingType.BUILD_AGGREGATION.toString()),notNullValue())@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "assertThat(histoAggResult.getProfiledChildren().size(),equalTo(2))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
165 [style = filled, label = "assertThat(maxBreakdown.get(AggregationTimingType.COLLECT.toString()),notNullValue())@@@117@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
194->120 [style = bold, label=""];
173->91 [style = bold, label=""];
17->25 [style = bold, label=""];
107->197 [style = solid, label="maxAggResult"];
60->9 [style = bold, label=""];
1->55 [style = bold, label=""];
37->27 [style = bold, label=""];
204->187 [style = bold, label=""];
22->37 [style = bold, label=""];
33->186 [style = dashed, label="0"];
55->49 [style = bold, label=""];
11->121 [style = bold, label=""];
176->177 [style = bold, label=""];
147->142 [style = bold, label=""];
30->81 [style = dashed, label="0"];
37->27 [style = solid, label="avgBreakdown"];
43->42 [style = bold, label=""];
197->201 [style = bold, label=""];
39->14 [style = bold, label=""];
212->208 [style = bold, label=""];
41->12 [style = solid, label="profileResults"];
39->14 [style = solid, label="aggProfileResultsList"];
46->31 [style = bold, label=""];
103->90 [style = bold, label=""];
56->137 [style = dashed, label="0"];
7->75 [style = bold, label=""];
145->135 [style = bold, label=""];
141->136 [style = bold, label=""];
199->7 [style = solid, label="avgBreakdown"];
192->181 [style = bold, label=""];
59->32 [style = solid, label="aggProfileResults"];
43->42 [style = solid, label="termsAggResult"];
163->23 [style = solid, label="response"];
45->30 [style = bold, label=""];
122->183 [style = bold, label=""];
118->101 [style = bold, label=""];
77->70 [style = bold, label=""];
134->167 [style = bold, label=""];
82->65 [style = bold, label=""];
19->5 [style = bold, label=""];
163->23 [style = bold, label=""];
7->27 [style = dashed, label="0"];
5->163 [style = dashed, label="0"];
8->36 [style = bold, label=""];
28->21 [style = bold, label=""];
48->51 [style = bold, label=""];
144->87 [style = bold, label=""];
200->102 [style = bold, label=""];
168->147 [style = bold, label=""];
81->66 [style = bold, label=""];
3->64 [style = dashed, label="0"];
30->128 [style = dashed, label="0"];
196->132 [style = bold, label=""];
159->88 [style = bold, label=""];
15->0 [style = bold, label=""];
203->168 [style = bold, label=""];
27->7 [style = bold, label=""];
7->16 [style = bold, label=""];
152->165 [style = bold, label=""];
2->74 [style = dashed, label="0"];
126->190 [style = bold, label=""];
35->99 [style = dashed, label="0"];
58->86 [style = dashed, label="0"];
102->117 [style = bold, label=""];
143->100 [style = bold, label=""];
37->199 [style = dashed, label="0"];
45->69 [style = dashed, label="0"];
48->71 [style = dashed, label="0"];
202->185 [style = bold, label=""];
125->163 [style = bold, label=""];
87->130 [style = bold, label=""];
131->161 [style = bold, label=""];
10->11 [style = bold, label=""];
211->207 [style = bold, label=""];
38->43 [style = solid, label="termsAggResult"];
4->121 [style = dashed, label="0"];
4->38 [style = bold, label=""];
68->72 [style = bold, label=""];
5->23 [style = bold, label=""];
52->9 [style = bold, label=""];
59->32 [style = bold, label=""];
88->178 [style = bold, label=""];
25->3 [style = bold, label=""];
30->26 [style = bold, label=""];
132->115 [style = bold, label=""];
132->115 [style = solid, label="avgAggResult"];
113->134 [style = bold, label=""];
31->29 [style = bold, label=""];
44->50 [style = bold, label=""];
154->194 [style = bold, label=""];
138->200 [style = bold, label=""];
91->211 [style = bold, label=""];
34->8 [style = bold, label=""];
161->176 [style = bold, label=""];
119->166 [style = bold, label=""];
21->34 [style = solid, label="avgAggResult"];
190->108 [style = bold, label=""];
203->168 [style = solid, label="avgAggResult"];
116->162 [style = bold, label=""];
165->95 [style = bold, label=""];
96->193 [style = bold, label=""];
6->2 [style = bold, label=""];
98->146 [style = bold, label=""];
127->172 [style = bold, label=""];
182->114 [style = bold, label=""];
90->145 [style = solid, label="maxBreakdown"];
65->38 [style = bold, label=""];
3->64 [style = bold, label=""];
142->192 [style = bold, label=""];
55->49 [style = solid, label="histoAggResult"];
133->158 [style = bold, label=""];
42->56 [style = bold, label=""];
121->84 [style = bold, label=""];
192->181 [style = solid, label="avgBreakdown"];
198->139 [style = bold, label=""];
62->78 [style = bold, label=""];
35->17 [style = bold, label=""];
53->33 [style = bold, label=""];
5->23 [style = solid, label="response"];
146->131 [style = bold, label=""];
57->75 [style = dashed, label="0"];
0->44 [style = bold, label=""];
183->152 [style = bold, label=""];
36->37 [style = bold, label=""];
209->206 [style = bold, label=""];
93->186 [style = bold, label=""];
160->109 [style = bold, label=""];
157->184 [style = bold, label=""];
78->82 [style = bold, label=""];
188->173 [style = bold, label=""];
184->151 [style = bold, label=""];
99->124 [style = bold, label=""];
58->79 [style = dashed, label="0"];
16->7 [style = dashed, label="0"];
13->18 [style = bold, label=""];
107->197 [style = bold, label=""];
24->13 [style = bold, label=""];
120->180 [style = bold, label=""];
54->153 [style = dashed, label="0"];
73->5 [style = bold, label=""];
124->213 [style = bold, label=""];
29->92 [style = bold, label=""];
3->189 [style = dashed, label="0"];
25->3 [style = solid, label="termsBreakdown"];
25->213 [style = dashed, label="0"];
62->78 [style = solid, label="histoDebugInfo"];
178->144 [style = bold, label=""];
83->126 [style = bold, label=""];
69->81 [style = bold, label=""];
206->137 [style = bold, label=""];
104->113 [style = bold, label=""];
18->40 [style = bold, label=""];
3->45 [style = bold, label=""];
11->4 [style = bold, label=""];
21->34 [style = bold, label=""];
135->94 [style = bold, label=""];
170->116 [style = bold, label=""];
155->169 [style = bold, label=""];
179->182 [style = bold, label=""];
187->160 [style = bold, label=""];
94->159 [style = bold, label=""];
28->97 [style = dashed, label="0"];
128->174 [style = bold, label=""];
208->149 [style = bold, label=""];
180->179 [style = bold, label=""];
112->83 [style = bold, label=""];
23->41 [style = bold, label=""];
164->133 [style = bold, label=""];
108->143 [style = bold, label=""];
156->188 [style = bold, label=""];
130->123 [style = bold, label=""];
13->76 [style = dashed, label="0"];
129->122 [style = solid, label="maxBreakdown"];
51->20 [style = bold, label=""];
189->110 [style = bold, label=""];
199->7 [style = bold, label=""];
210->104 [style = bold, label=""];
191->8 [style = solid, label="avgAggResult"];
56->35 [style = bold, label=""];
213->189 [style = bold, label=""];
38->84 [style = dashed, label="0"];
24->72 [style = dashed, label="0"];
71->80 [style = bold, label=""];
58->53 [style = bold, label=""];
117->96 [style = bold, label=""];
76->67 [style = bold, label=""];
47->24 [style = bold, label=""];
150->98 [style = bold, label=""];
140->105 [style = bold, label=""];
92->107 [style = bold, label=""];
9->59 [style = bold, label=""];
207->138 [style = bold, label=""];
74->68 [style = bold, label=""];
124->213 [style = solid, label="tagsBreakdown"];
22->37 [style = solid, label="avgBreakdown"];
49->15 [style = bold, label=""];
110->128 [style = bold, label=""];
201->103 [style = bold, label=""];
63->21 [style = solid, label="avgAggResult"];
32->39 [style = bold, label=""];
53->93 [style = dashed, label="0"];
41->12 [style = bold, label=""];
114->175 [style = bold, label=""];
106->204 [style = bold, label=""];
63->21 [style = bold, label=""];
54->28 [style = bold, label=""];
97->148 [style = bold, label=""];
153->97 [style = bold, label=""];
2->47 [style = bold, label=""];
47->68 [style = dashed, label="0"];
105->156 [style = bold, label=""];
38->43 [style = bold, label=""];
207->138 [style = solid, label="maxBreakdown"];
149->198 [style = bold, label=""];
40->10 [style = bold, label=""];
21->148 [style = dashed, label="0"];
26->58 [style = bold, label=""];
6->74 [style = bold, label=""];
95->119 [style = bold, label=""];
50->6 [style = bold, label=""];
166->154 [style = bold, label=""];
61->60 [style = bold, label=""];
90->145 [style = bold, label=""];
139->170 [style = solid, label="stringsBreakdown"];
212->208 [style = solid, label="stringsAggResult"];
174->86 [style = bold, label=""];
136->196 [style = bold, label=""];
64->69 [style = bold, label=""];
177->203 [style = bold, label=""];
80->61 [style = bold, label=""];
172->111 [style = bold, label=""];
29->9 [style = bold, label=""];
193->195 [style = bold, label=""];
20->46 [style = bold, label=""];
51->80 [style = dashed, label="0"];
70->63 [style = bold, label=""];
162->205 [style = bold, label=""];
84->209 [style = bold, label=""];
205->150 [style = bold, label=""];
111->129 [style = bold, label=""];
158->85 [style = bold, label=""];
139->170 [style = bold, label=""];
112->83 [style = solid, label="tagsBreakdown"];
17->25 [style = solid, label="termsBreakdown"];
14->1 [style = bold, label=""];
72->76 [style = bold, label=""];
79->77 [style = bold, label=""];
57->48 [style = bold, label=""];
209->206 [style = solid, label="tagsAggResult"];
67->62 [style = bold, label=""];
123->212 [style = bold, label=""];
185->155 [style = bold, label=""];
167->106 [style = bold, label=""];
175->112 [style = bold, label=""];
86->93 [style = bold, label=""];
186->153 [style = bold, label=""];
148->191 [style = bold, label=""];
85->127 [style = bold, label=""];
100->118 [style = bold, label=""];
50->6 [style = solid, label="histoBreakdown"];
89->164 [style = bold, label=""];
115->210 [style = bold, label=""];
26->66 [style = dashed, label="0"];
37->199 [style = bold, label=""];
137->99 [style = bold, label=""];
129->122 [style = bold, label=""];
26->174 [style = dashed, label="0"];
16->57 [style = bold, label=""];
109->140 [style = bold, label=""];
195->157 [style = bold, label=""];
113->134 [style = solid, label="avgBreakdown"];
151->9 [style = bold, label=""];
45->110 [style = dashed, label="0"];
188->173 [style = solid, label="maxAggResult"];
75->71 [style = bold, label=""];
17->124 [style = dashed, label="0"];
12->52 [style = bold, label=""];
10->78 [style = dashed, label="0"];
171->202 [style = bold, label=""];
33->54 [style = bold, label=""];
181->171 [style = bold, label=""];
180->179 [style = solid, label="tagsAggResult"];
191->8 [style = bold, label=""];
101->141 [style = bold, label=""];
85->127 [style = solid, label="maxAggResult"];
169->89 [style = bold, label=""];
43->209 [style = dashed, label="0"];
18->67 [style = dashed, label="0"];
66->79 [style = bold, label=""];
36->22 [style = bold, label=""];
}
