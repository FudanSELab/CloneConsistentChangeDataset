digraph {
4 [style = filled, label = "TransactionLegacy.open(\"runDeleteSslCertBoundCert\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "certField.setAccessible(true)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final Field certField = klazz.getDeclaredField(\"id\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "runDeleteSslCertBoundCert['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final Class<?> klazz = deleteCmd.getClass().getSuperclass()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "when(certService._lbCertDao.listByCertId(Matchers.anyLong())).thenReturn(null)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "when(certService._domainDao.findByIdIncludingRemoved(Matchers.anyLong())).thenReturn(domain)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(certService._lbCertDao.listByCertId(Matchers.anyLong())).thenReturn(lbMapList)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "lbMapList.add(new LoadBalancerCertMapVO())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final long certId = 1@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final DeleteSslCertCmd deleteCmd = new DeleteSslCertCmdExtn()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "when(certService._sslCertDao.remove(anyLong())).thenReturn(true)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "runDeleteSslCertValid['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "when(certService._sslCertDao.remove(Matchers.anyLong())).thenReturn(true)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "when(certService._sslCertDao.findById(anyLong())).thenReturn(new SslCertVO())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "certService._sslCertDao = Mockito.mock()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Field certField = klazz.getDeclaredField(\"id\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "certField.setAccessible(true)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final CertServiceImpl certService = new CertServiceImpl()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(certService._sslCertDao.findById(Matchers.anyLong())).thenReturn(new SslCertVO())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "when(certService._domainDao.findByIdIncludingRemoved(anyLong())).thenReturn(domain)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "certService._lbCertDao = Mockito.mock()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final Class<?> klazz = deleteCmd.getClass().getSuperclass()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "certService._domainDao = Mockito.mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "certField.set(deleteCmd,certId)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "certService.deleteSslCert(deleteCmd)@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.fail(\"Delete with a cert id bound to a lb should fail\")@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "certService._lbCertDao = Mockito.mock()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "certService._accountMgr = Mockito.mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "runDeleteSslCertBoundCert['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final List<LoadBalancerCertMapVO> lbMapList = new ArrayList<>()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(certService._entityMgr.findById(Matchers.eq(),Matchers.anyLong())).thenReturn(new LoadBalancerVO())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "when(certService._entityMgr.findById(eq(),nullable())).thenReturn(new LoadBalancerVO())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "final Account account = new AccountVO(\"testaccount\",1,\"networkdomain\",(short)0,UUID.randomUUID().toString())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "when(certService._lbCertDao.listByCertId(anyLong())).thenReturn(lbMapList)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "TransactionLegacy.open(\"runDeleteSslCertValid\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "certService._entityMgr = Mockito.mock()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "certService.deleteSslCert(deleteCmd)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(certService._accountMgr.getAccount(Matchers.anyLong())).thenReturn(account)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "certField.set(deleteCmd,certId)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "when(certService._accountMgr.getAccount(anyLong())).thenReturn(account)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final DomainVO domain = new DomainVO(\"networkdomain\",1L,1L,\"networkdomain\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->23 [style = bold, label=""];
27->1 [style = bold, label=""];
36->40 [style = bold, label=""];
16->32 [style = dashed, label="0"];
23->5 [style = bold, label=""];
9->0 [style = bold, label=""];
30->33 [style = bold, label=""];
19->12 [style = bold, label=""];
3->25 [style = bold, label=""];
0->17 [style = bold, label=""];
6->18 [style = bold, label=""];
9->31 [style = bold, label=""];
16->24 [style = bold, label=""];
9->31 [style = solid, label="domain"];
4->13 [style = bold, label=""];
11->4 [style = bold, label=""];
14->10 [style = bold, label=""];
10->3 [style = bold, label=""];
26->20 [style = bold, label=""];
17->30 [style = bold, label=""];
33->10 [style = bold, label=""];
22->27 [style = dashed, label="0"];
25->6 [style = bold, label=""];
10->41 [style = bold, label=""];
9->0 [style = solid, label="domain"];
14->33 [style = dashed, label="0"];
5->16 [style = solid, label="account"];
6->29 [style = bold, label=""];
3->18 [style = solid, label="lbMapList"];
1->19 [style = solid, label="deleteCmd"];
21->30 [style = dashed, label="0"];
5->16 [style = bold, label=""];
5->32 [style = bold, label=""];
5->32 [style = solid, label="account"];
38->39 [style = solid, label="deleteCmd"];
7->22 [style = bold, label=""];
28->4 [style = bold, label=""];
40->39 [style = bold, label=""];
3->29 [style = solid, label="lbMapList"];
34->37 [style = bold, label=""];
15->20 [style = solid, label="certId"];
1->20 [style = solid, label="deleteCmd"];
15->39 [style = solid, label="certId"];
18->29 [style = dashed, label="0"];
0->31 [style = dashed, label="0"];
7->27 [style = bold, label=""];
29->7 [style = bold, label=""];
39->1 [style = bold, label=""];
41->38 [style = bold, label=""];
1->2 [style = bold, label=""];
13->15 [style = bold, label=""];
22->1 [style = bold, label=""];
31->17 [style = bold, label=""];
35->36 [style = bold, label=""];
18->7 [style = bold, label=""];
20->19 [style = bold, label=""];
37->13 [style = bold, label=""];
38->35 [style = bold, label=""];
32->24 [style = bold, label=""];
38->1 [style = solid, label="deleteCmd"];
17->21 [style = bold, label=""];
4->37 [style = dashed, label="0"];
24->9 [style = bold, label=""];
2->8 [style = bold, label=""];
21->14 [style = bold, label=""];
8->26 [style = bold, label=""];
}
