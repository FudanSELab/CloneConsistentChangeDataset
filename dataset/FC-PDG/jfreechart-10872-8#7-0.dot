digraph {
7 [style = filled, label = "TimeSeries s1 = new TimeSeries(\"Series\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MatrixSeries s1 = new MatrixSeries(\"Series\",2,3)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TimeSeriesCollection c1 = new TimeSeriesCollection()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TimeSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "s1.update(0,0,1.1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(c1.equals(c2))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TimeSeriesCollection c2 = (TimeSeriesCollection)c1.clone()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "s1.add(new Year(2009),1.1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "MatrixSeriesCollection c2 = TestUtils.serialised(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "c2.getSeries(0).setDescription(\"XYZ\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "MatrixSeriesCollection c1 = new MatrixSeriesCollection()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
16->15 [style = bold, label=""];
17->20 [style = solid, label="c1"];
14->1 [style = solid, label="c2"];
8->19 [style = dashed, label="0"];
9->11 [style = bold, label=""];
7->3 [style = solid, label="s1"];
14->2 [style = solid, label="c2"];
7->16 [style = dashed, label="0"];
19->20 [style = bold, label=""];
0->12 [style = bold, label=""];
17->19 [style = solid, label="c1"];
3->14 [style = bold, label=""];
14->11 [style = solid, label="c2"];
6->17 [style = dashed, label="0"];
1->0 [style = bold, label=""];
2->9 [style = bold, label=""];
8->14 [style = dashed, label="0"];
4->7 [style = bold, label=""];
14->1 [style = bold, label=""];
19->20 [style = solid, label="c2"];
8->1 [style = solid, label="c2"];
1->20 [style = dashed, label="0"];
8->1 [style = bold, label=""];
14->12 [style = solid, label="c2"];
15->17 [style = bold, label=""];
7->5 [style = bold, label=""];
12->10 [style = bold, label=""];
16->3 [style = solid, label="s1"];
5->6 [style = bold, label=""];
8->2 [style = solid, label="c2"];
3->19 [style = bold, label=""];
13->7 [style = bold, label=""];
3->8 [style = bold, label=""];
6->14 [style = solid, label="c1"];
6->1 [style = solid, label="c1"];
17->3 [style = bold, label=""];
10->2 [style = bold, label=""];
8->11 [style = solid, label="c2"];
5->15 [style = dashed, label="0"];
8->12 [style = solid, label="c2"];
18->16 [style = bold, label=""];
}
