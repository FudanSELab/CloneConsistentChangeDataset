digraph {
27 [style = filled, label = "LOGGER.debug(String.format(\"Checking host ID: %s for capacity already reserved %d\",h.getUuid(),reserved))@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final long nodesCount@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "suitable_host_found@@@50@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "LOGGER.isInfoEnabled()@@@51@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ClusterVO cluster = clusterDao.findById(h.getClusterId())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "LOGGER.debug(String.format(\"Checking host : %s for capacity already reserved %d\",h.getName(),reserved))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "ClusterDetailsVO cluster_detail_ram = clusterDetailsDao.findDetail(cluster.getId(),\"memoryOvercommitRatio\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "List<HostVO> hosts = resourceManager.listAllHostsInOneZoneByType(Type.Routing,zone.getId())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "LOGGER.isDebugEnabled()@@@30@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "!suitable_host_found@@@43@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int cpu_requested = offering.getCpu() * offering.getSpeed()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "final DataCenter zone@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "String msg = String.format(\"Cannot find enough capacity for Kubernetes cluster(requested cpu=%d memory=%s) with offering : %s and hypervisor: %s\",cpu_requested * nodesCount,toHumanReadableSize(ram_requested * nodesCount),offering.getName(),clusterTemplate.getHypervisorType().toString())@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "HostVO h = hp.first()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "LOGGER.info(String.format(\"Suitable hosts not found in datacenter ID: %s for node %d, with offering ID: %s and hypervisor: %s\",zone.getUuid(),i,offering.getUuid(),clusterTemplate.getHypervisorType().toString()))@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "hosts_with_resevered_capacity.entrySet()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "plan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final Map<String,Pair<HostVO,Integer>> hosts_with_resevered_capacity = new ConcurrentHashMap<String,Pair<HostVO,Integer>>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final ServiceOffering offering@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "suitable_host_found = false@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "LOGGER.isDebugEnabled()@@@34@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final ServiceOffering offering@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "final ServiceOffering offering@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String msg = String.format(\"Cannot find enough capacity for Kubernetes cluster(requested cpu=%d memory=%s) with offering ID: %s and hypervisor: %s\",cpu_requested * nodesCount,toHumanReadableSize(ram_requested * nodesCount),offering.getUuid(),clusterTemplate.getHypervisorType().toString())@@@57@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "Map.Entry<String,Pair<HostVO,Integer>> hostEntry@@@16@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "String msg = String.format(\"Cannot find enough capacity for Kubernetes cluster(requested cpu=%d memory=%s) with offering ID: %s\",cpu_requested * nodesCount,toHumanReadableSize(ram_requested * nodesCount),offering.getUuid())@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "planCluster = cluster@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "LOGGER.info(String.format(\"Suitable hosts not found in datacenter : %s for node %d, with offering : %s and hypervisor: %s\",zone.getName(),i,offering.getName(),clusterTemplate.getHypervisorType().toString()))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "hosts_with_resevered_capacity.entrySet()@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Float memoryOvercommitRatio = Float.parseFloat(cluster_detail_ram.getValue())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "LOGGER.info(String.format(\"Suitable hosts found in datacenter ID: %s, creating deployment destination\",zone.getUuid()))@@@52@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Float cpuOvercommitRatio = Float.parseFloat(cluster_detail_cpu.getValue())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return new DeployDestination(zone,null,null,null)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "hosts_with_resevered_capacity.entrySet()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<HostVO> hosts = resourceManager.listAllHostsInOneZoneByType(Host.Type.Routing,zone.getId())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "!h.getHypervisorType().equals(clusterTemplate.getHypervisorType())@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Cluster planCluster = null@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "LOGGER.info(String.format(\"Suitable hosts not found in datacenter ID: %s for node %d with offering ID: %s\",zone.getUuid(),i,offering.getUuid()))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "return new DeployDestination(zone,null,planCluster,null)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "hosts_with_resevered_capacity.put(h.getUuid(),new Pair<HostVO,Integer>(h,0))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "capacityManager.checkIfHostHasCapacity(h.getId(),cpu_requested * reserved,ram_requested * reserved,false,cpuOvercommitRatio,memoryOvercommitRatio,true)@@@33@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "reserved++@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int i = 1@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ClusterDetailsVO cluster_detail_cpu = clusterDetailsDao.findDetail(cluster.getId(),\"cpuOvercommitRatio\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "final long nodesCount@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "LOGGER.debug(String.format(\"Found host ID: %s for with enough capacity, CPU=%d RAM=%s\",h.getUuid(),cpu_requested * reserved,toHumanReadableSize(ram_requested * reserved)))@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "LOGGER.info(String.format(\"Suitable hosts found in datacenter : %s, creating deployment destination\",zone.getName()))@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final long nodesCount@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "plan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "LOGGER.debug(String.format(\"Found host : %s for with enough capacity, CPU=%d RAM=%s\",h.getName(),cpu_requested * reserved,toHumanReadableSize(ram_requested * reserved)))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "final long ram_requested = offering.getRamSize() * 1024L * 1024L@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "throw new InsufficientServerCapacityException(msg,,zone.getId())@@@58@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "plan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Pair<HostVO,Integer> hp = hostEntry.getValue()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i <= nodesCount@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "!Strings.isNullOrEmpty(offering.getHostTag()) && !(h.getHostTags() != null && h.getHostTags().contains(offering.getHostTag()))@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "LOGGER.warn(msg)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "i++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final DataCenter zone@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "hostEntry.setValue(new Pair<HostVO,Integer>(h,reserved))@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "hostDao.loadHostTags(h)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "boolean suitable_host_found = false@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "suitable_host_found = true@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "LOGGER.isInfoEnabled()@@@44@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int reserved = hp.second()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->2 [style = bold, label=""];
29->15 [style = bold, label=""];
30->13 [style = bold, label=""];
9->17 [style = solid, label="msg"];
11->41 [style = dotted, label="true"];
44->63 [style = solid, label="i"];
51->45 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
6->9 [style = solid, label="nodesCount"];
47->17 [style = solid, label="msg"];
57->8 [style = bold, label=""];
11->40 [style = dotted, label="true"];
51->48 [style = dotted, label="true"];
31->0 [style = solid, label="reserved"];
62->54 [style = solid, label="planCluster"];
3->6 [style = dotted, label="true"];
64->54 [style = solid, label="zone"];
11->44 [style = dotted, label="true"];
61->10 [style = bold, label=""];
5->34 [style = bold, label=""];
19->24 [style = bold, label=""];
58->17 [style = bold, label=""];
11->2 [style = dotted, label="true"];
23->22 [style = bold, label=""];
11->31 [style = dotted, label="true"];
45->22 [style = solid, label="zone"];
20->43 [style = dotted, label="true"];
0->52 [style = solid, label="reserved"];
1->54 [style = dotted, label="true"];
32->64 [style = dashed, label="0"];
11->0 [style = dotted, label="true"];
43->1 [style = bold, label=""];
22->47 [style = bold, label=""];
32->22 [style = solid, label="zone"];
10->63 [style = solid, label="i"];
5->9 [style = solid, label="ram_requested"];
20->43 [style = bold, label=""];
25->10 [style = bold, label=""];
42->21 [style = bold, label=""];
11->15 [style = dotted, label="true"];
20->63 [style = bold, label=""];
4->46 [style = bold, label=""];
11->36 [style = dotted, label="true"];
10->11 [style = bold, label=""];
11->7 [style = dotted, label="true"];
11->33 [style = dotted, label="true"];
1->4 [style = bold, label=""];
21->44 [style = bold, label=""];
44->53 [style = solid, label="i"];
32->11 [style = solid, label="nodesCount"];
42->2 [style = bold, label=""];
11->37 [style = dotted, label="true"];
63->1 [style = bold, label=""];
21->20 [style = dotted, label="true"];
44->43 [style = solid, label="i"];
41->21 [style = bold, label=""];
4->23 [style = dotted, label="true"];
22->9 [style = bold, label=""];
1->22 [style = dotted, label="true"];
37->29 [style = bold, label=""];
9->17 [style = bold, label=""];
11->35 [style = dotted, label="true"];
42->31 [style = bold, label=""];
1->4 [style = dotted, label="true"];
19->24 [style = solid, label="h"];
7->35 [style = solid, label="cpuOvercommitRatio"];
59->58 [style = solid, label="nodesCount"];
37->62 [style = solid, label="cluster"];
41->2 [style = bold, label=""];
10->43 [style = solid, label="i"];
35->21 [style = bold, label=""];
35->30 [style = dotted, label="true"];
54->58 [style = bold, label=""];
10->11 [style = solid, label="i"];
10->44 [style = solid, label="i"];
39->52 [style = bold, label=""];
1->58 [style = bold, label=""];
35->62 [style = dotted, label="true"];
5->47 [style = solid, label="ram_requested"];
19->41 [style = bold, label=""];
36->49 [style = bold, label=""];
3->18 [style = dotted, label="true"];
40->1 [style = solid, label="suitable_host_found"];
5->35 [style = solid, label="ram_requested"];
58->17 [style = solid, label="msg"];
34->14 [style = bold, label=""];
11->19 [style = dotted, label="true"];
36->35 [style = bold, label=""];
4->22 [style = bold, label=""];
4->23 [style = bold, label=""];
11->24 [style = dotted, label="true"];
22->54 [style = dashed, label="0"];
11->38 [style = dotted, label="true"];
23->54 [style = bold, label=""];
43->63 [style = dashed, label="0"];
39->16 [style = bold, label=""];
16->52 [style = dashed, label="0"];
19->30 [style = solid, label="h"];
8->35 [style = solid, label="cpu_requested"];
49->35 [style = bold, label=""];
13->62 [style = bold, label=""];
31->0 [style = bold, label=""];
20->63 [style = dotted, label="true"];
11->29 [style = dotted, label="true"];
35->39 [style = bold, label=""];
35->2 [style = bold, label=""];
13->1 [style = solid, label="suitable_host_found"];
20->1 [style = bold, label=""];
0->27 [style = solid, label="reserved"];
8->52 [style = solid, label="cpu_requested"];
44->11 [style = solid, label="i"];
27->35 [style = bold, label=""];
1->9 [style = bold, label=""];
4->54 [style = bold, label=""];
36->49 [style = dotted, label="true"];
5->16 [style = solid, label="ram_requested"];
32->47 [style = solid, label="nodesCount"];
20->53 [style = dotted, label="true"];
60->14 [style = bold, label=""];
23->46 [style = dashed, label="0"];
8->9 [style = solid, label="cpu_requested"];
4->46 [style = dotted, label="true"];
6->11 [style = solid, label="nodesCount"];
3->8 [style = bold, label=""];
35->13 [style = dotted, label="true"];
16->30 [style = bold, label=""];
9->28 [style = solid, label="msg"];
0->16 [style = solid, label="reserved"];
53->1 [style = bold, label=""];
8->16 [style = solid, label="cpu_requested"];
51->8 [style = bold, label=""];
10->53 [style = solid, label="i"];
8->58 [style = solid, label="cpu_requested"];
46->22 [style = bold, label=""];
24->42 [style = bold, label=""];
38->35 [style = solid, label="memoryOvercommitRatio"];
35->39 [style = dotted, label="true"];
11->56 [style = dotted, label="true"];
2->19 [style = bold, label=""];
36->27 [style = dotted, label="true"];
3->32 [style = dotted, label="true"];
39->52 [style = dotted, label="true"];
27->49 [style = dashed, label="0"];
0->30 [style = solid, label="reserved"];
0->37 [style = bold, label=""];
41->24 [style = bold, label=""];
15->7 [style = bold, label=""];
43->53 [style = dashed, label="0"];
11->1 [style = bold, label=""];
5->60 [style = bold, label=""];
25->1 [style = solid, label="suitable_host_found"];
26->25 [style = bold, label=""];
58->28 [style = solid, label="msg"];
59->11 [style = solid, label="nodesCount"];
57->59 [style = dotted, label="true"];
38->36 [style = bold, label=""];
0->49 [style = solid, label="reserved"];
61->54 [style = solid, label="planCluster"];
39->16 [style = dotted, label="true"];
20->53 [style = bold, label=""];
8->47 [style = solid, label="cpu_requested"];
11->40 [style = bold, label=""];
11->42 [style = dotted, label="true"];
57->64 [style = dotted, label="true"];
11->50 [style = dotted, label="true"];
39->30 [style = bold, label=""];
57->55 [style = dotted, label="true"];
14->26 [style = bold, label=""];
9->47 [style = dashed, label="0"];
7->38 [style = bold, label=""];
17->28 [style = bold, label=""];
1->47 [style = bold, label=""];
21->20 [style = bold, label=""];
36->27 [style = bold, label=""];
8->5 [style = bold, label=""];
9->58 [style = dashed, label="0"];
44->11 [style = bold, label=""];
25->61 [style = bold, label=""];
11->21 [style = dotted, label="true"];
5->52 [style = solid, label="ram_requested"];
47->17 [style = bold, label=""];
34->60 [style = dashed, label="0"];
13->21 [style = bold, label=""];
5->58 [style = solid, label="ram_requested"];
51->32 [style = dotted, label="true"];
47->28 [style = solid, label="msg"];
0->35 [style = solid, label="reserved"];
52->30 [style = bold, label=""];
62->21 [style = bold, label=""];
}
