digraph {
10 [style = filled, label = "results.sort(null)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "final List<KeyValue<String,String>> results = receiveMessages(new StringDeserializer(),new StringDeserializer(),10)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldReduce['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "groupedStream.count(Materialized.as(\"count-by-key\")).toStream().to(outputTopic,Produced.with(Serdes.String(),Serdes.Long()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(results,is(Arrays.asList(KeyValue.pair(\"A\",\"A\"),KeyValue.pair(\"A\",\"A:A\"),KeyValue.pair(\"B\",\"B\"),KeyValue.pair(\"B\",\"B:B\"),KeyValue.pair(\"C\",\"C\"),KeyValue.pair(\"C\",\"C:C\"),KeyValue.pair(\"D\",\"D\"),KeyValue.pair(\"D\",\"D:D\"),KeyValue.pair(\"E\",\"E\"),KeyValue.pair(\"E\",\"E:E\"))))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "produceMessages(mockTime.milliseconds())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "groupedStream.reduce(reducer,Materialized.as(\"reduce-by-key\")).toStream().to(outputTopic,Produced.with(Serdes.String(),Serdes.String()))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "groupedStream.reduce(reducer,Materialized.as(\"reduce-by-key\")).toStream().to(outputTopic,Produced.with(Serdes.String(),Serdes.String()))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "shouldCount['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "shouldReduce['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldCountHelper()@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "startStreams()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Collections.sort(results,null)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "produceMessages(mockTime.milliseconds())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->6 [style = solid, label="results"];
7->12 [style = dashed, label="0"];
5->7 [style = bold, label=""];
6->3 [style = bold, label=""];
10->3 [style = bold, label=""];
12->13 [style = bold, label=""];
11->5 [style = bold, label=""];
7->0 [style = bold, label=""];
1->6 [style = bold, label=""];
6->10 [style = dashed, label="0"];
9->0 [style = bold, label=""];
8->5 [style = bold, label=""];
5->9 [style = bold, label=""];
5->12 [style = bold, label=""];
1->10 [style = bold, label=""];
7->9 [style = dashed, label="0"];
4->5 [style = bold, label=""];
1->3 [style = solid, label="results"];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
}
