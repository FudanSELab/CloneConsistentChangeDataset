digraph {
5 [style = filled, label = "env.setParallelism(4)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "env.addSource(new NoOpSourceFunction()).map(new NoOpMapFunction()).uid(\"map\").addSink(new NoOpSinkFunction())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testManualHashAssignmentForIntermediateNodeInChain['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertNotEquals(chainedMapId,unchainedMapId)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testNodeHashAfterIntermediateUnchaining['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "JobGraph jobGraph = env.getStreamGraph().getJobGraph()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "JobVertex chainedMap = jobGraph.getVerticesSortedTopologicallyFromSources().get(1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(chainedMap.getName().startsWith(\"map\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "env.addSource(new NoOpSourceFunction()).map(new NoOpMapFunction()).name(\"map\").startNewChain().filter(new NoOpFilterFunction()).addSink(new DiscardingSink<>())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "env = StreamExecutionEnvironment.createLocalEnvironment()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "env.getStreamGraph().getJobGraph()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "JobVertexID unchainedMapId = unchainedMap.getID()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "env.addSource(new NoOpSourceFunction()).map(new NoOpMapFunction()).name(\"map\").startNewChain().filter(new NoOpFilterFunction()).startNewChain().addSink(new DiscardingSink<>())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "JobVertex unchainedMap = jobGraph.getVerticesSortedTopologicallyFromSources().get(1)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "env.setParallelism(4)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "JobVertexID chainedMapId = chainedMap.getID()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"map\",unchainedMap.getName())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "env.addSource(new NoOpSourceFunction()).map(new NoOpMapFunction()).name(\"map\").startNewChain().filter(new NoOpFilterFunction()).startNewChain().addSink(new NoOpSinkFunction())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "jobGraph = env.getStreamGraph().getJobGraph()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testNodeHashAfterIntermediateUnchaining['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "env.addSource(new NoOpSourceFunction()).map(new NoOpMapFunction()).name(\"map\").startNewChain().filter(new NoOpFilterFunction()).addSink(new NoOpSinkFunction())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->3 [style = bold, label=""];
6->17 [style = bold, label=""];
21->10 [style = bold, label=""];
11->20 [style = dashed, label="0"];
16->10 [style = bold, label=""];
19->20 [style = bold, label=""];
3->18 [style = dashed, label="0"];
18->11 [style = bold, label=""];
3->11 [style = bold, label=""];
12->17 [style = dashed, label="0"];
5->18 [style = bold, label=""];
9->10 [style = bold, label=""];
12->7 [style = bold, label=""];
11->2 [style = bold, label=""];
13->1 [style = bold, label=""];
3->19 [style = dashed, label="0"];
17->7 [style = bold, label=""];
5->19 [style = bold, label=""];
1->6 [style = bold, label=""];
13->8 [style = solid, label="chainedMapId"];
4->8 [style = solid, label="unchainedMapId"];
10->5 [style = bold, label=""];
0->4 [style = bold, label=""];
15->0 [style = bold, label=""];
2->14 [style = bold, label=""];
7->15 [style = bold, label=""];
4->8 [style = bold, label=""];
14->13 [style = bold, label=""];
6->12 [style = bold, label=""];
}
