digraph {
3 [style = filled, label = "testBuilder['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "long time = 1597113447737L@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testBuilder['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "map.put(SUMMATION,((DataTable)map.get(SUMMATION)).toStorageData())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "map.put(LatestFunction.VALUE,map.get(LatestFunction.VALUE))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "function.accept(MeterEntity.newService(\"latest_sync_time\"),time)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "function.calculate()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "StorageHashMapBuilder<LatestFunction> storageBuilder = function.builder().newInstance()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "map.put(COUNT,((DataTable)map.get(COUNT)).toStorageData())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "AvgLabeledFunction function2 = storageBuilder.map2Data(map)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Map<String,Object> map = storageBuilder.entity2Storage(function)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "function.accept(MeterEntity.newService(\"request_count\"),build(asList(\"200\",\"404\"),asList(10L,2L)))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(function2.getValue(),is(function.getValue()))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "StorageBuilder<LatestFunction> storageBuilder = function.builder().newInstance()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertThat(function2.getValue(),is(function.getValue()))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testBuilder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "LatestFunction function2 = storageBuilder.storage2Entity(map)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Map<String,Object> map = storageBuilder.data2Map(function)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "StorageBuilder<AvgLabeledFunction> storageBuilder = function.builder().newInstance()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "LatestFunction function2 = storageBuilder.map2Data(map)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "map.put(VALUE,((DataTable)map.get(VALUE)).toStorageData())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12->10 [style = solid, label="map"];
20->13 [style = bold, label=""];
1->8 [style = bold, label=""];
7->17 [style = bold, label=""];
15->7 [style = bold, label=""];
5->9 [style = bold, label=""];
19->20 [style = bold, label=""];
7->1 [style = solid, label="map"];
5->15 [style = bold, label=""];
1->10 [style = dashed, label="0"];
0->4 [style = solid, label="time"];
12->6 [style = bold, label=""];
3->0 [style = bold, label=""];
6->1 [style = bold, label=""];
2->5 [style = dashed, label="0"];
5->2 [style = bold, label=""];
11->0 [style = bold, label=""];
10->8 [style = bold, label=""];
0->4 [style = bold, label=""];
2->9 [style = dashed, label="0"];
6->10 [style = bold, label=""];
7->6 [style = bold, label=""];
13->5 [style = bold, label=""];
7->12 [style = dashed, label="0"];
16->14 [style = bold, label=""];
14->18 [style = bold, label=""];
9->12 [style = bold, label=""];
2->7 [style = bold, label=""];
4->5 [style = bold, label=""];
15->14 [style = solid, label="map"];
17->16 [style = bold, label=""];
}
