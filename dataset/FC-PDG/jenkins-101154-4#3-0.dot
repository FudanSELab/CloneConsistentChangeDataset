digraph {
16 [style = filled, label = "LOGGER.log(Level.FINE,\"Notifying termination\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "throw e@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Queue.withLock(new Runnable(){@Override public void run(){for (Computer c : computers.values()){try {c.interrupt()killComputer(c)pending.add(c.disconnect(null))}catch (OutOfMemoryError e) catch (LinkageError e) catch (Throwable e) }}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "_cleanUpDisconnectComputers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "OutOfMemoryError e@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Set<Future<?>> pending = new HashSet<Future<?>>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "LOGGER.log(Level.WARNING,\"ItemListener \" + l + \": \" + e.getMessage(),e)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "LOGGER.log(Level.WARNING,\"ItemListener \" + l + \": \" + e.getMessage(),e)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "LinkageError e@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "fireBeforeShutdown['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<Throwable> errors@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "l.onBeforeShutdown()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "LOGGER.log(Level.INFO,\"Starting node disconnection\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "errors.add(e)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return pending@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "_cleanUpDisconnectComputers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "LOGGER.log(Main.isUnitTest? Level.FINE: Level.INFO,\"Starting node disconnection\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final List<Throwable> errors@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Throwable e@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
1->5 [style = solid, label="pending"];
7->1 [style = bold, label=""];
2->1 [style = bold, label=""];
0->4 [style = dotted, label="true"];
0->2 [style = bold, label=""];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
18->17 [style = bold, label=""];
9->17 [style = bold, label=""];
12->18 [style = dotted, label="true"];
16->17 [style = bold, label=""];
2->7 [style = dashed, label="0"];
10->9 [style = dotted, label="true"];
11->18 [style = bold, label=""];
12->11 [style = dotted, label="true"];
8->17 [style = bold, label=""];
14->15 [style = dotted, label="true"];
3->5 [style = bold, label=""];
6->4 [style = dotted, label="true"];
13->8 [style = dotted, label="true"];
4->15 [style = dashed, label="0"];
2->16 [style = dashed, label="0"];
10->9 [style = bold, label=""];
13->8 [style = bold, label=""];
6->7 [style = bold, label=""];
}
