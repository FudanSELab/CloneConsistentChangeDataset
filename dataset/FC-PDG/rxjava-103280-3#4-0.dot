digraph {
4 [style = filled, label = "assertEquals(0,unsubscriptionCount.get())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "onlyFirstShouldSubscribeAndLastUnsubscribe['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(1,subscriptionCount.get())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Flowable<Integer> refCounted = flowable.publish().refCount()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Observable<Integer> o = Observable.unsafeCreate(new ObservableSource<Integer>(){@Override public void subscribe(Observer<? super Integer> observer){subscriptionCount.incrementAndGet()observer.onSubscribe(Disposable.fromRunnable(new Runnable(){@Override public void run(){unsubscriptionCount.incrementAndGet()}}))}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(1,subscriptionCount.get())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(1,unsubscriptionCount.get())@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Flowable<Integer> flowable = Flowable.unsafeCreate(new Publisher<Integer>(){@Override public void subscribe(Subscriber<? super Integer> subscriber){subscriptionCount.incrementAndGet()subscriber.onSubscribe(new Subscription(){@Override public void request(long n){}@Override public void cancel(){unsubscriptionCount.incrementAndGet()}})}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(1,subscriptionCount.get())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Disposable first = refCounted.subscribe()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Observable<Integer> refCounted = o.publish().refCount()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "onlyFirstShouldSubscribeAndLastUnsubscribe['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "first.dispose()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Disposable second = refCounted.subscribe()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "onlyFirstShouldSubscribeAndLastUnsubscribe['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final AtomicInteger unsubscriptionCount = new AtomicInteger()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final AtomicInteger subscriptionCount = new AtomicInteger()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Disposable first = refCounted.subscribe()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "second.dispose()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->14 [style = dashed, label="0"];
1->10 [style = bold, label=""];
4->16 [style = bold, label=""];
16->18 [style = bold, label=""];
11->6 [style = bold, label=""];
6->8 [style = bold, label=""];
0->11 [style = bold, label=""];
15->2 [style = bold, label=""];
5->4 [style = bold, label=""];
2->3 [style = bold, label=""];
8->1 [style = bold, label=""];
10->7 [style = bold, label=""];
12->5 [style = bold, label=""];
13->11 [style = bold, label=""];
6->14 [style = bold, label=""];
3->9 [style = bold, label=""];
17->11 [style = bold, label=""];
1->15 [style = dashed, label="0"];
14->15 [style = bold, label=""];
9->12 [style = bold, label=""];
7->2 [style = bold, label=""];
}
