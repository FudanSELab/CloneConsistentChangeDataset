digraph {
12 [style = filled, label = "neo4jIsUpWithOneSessionExpiredException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "healthIndicator.health().as(null).consumeNextWith(null).verifyComplete()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Driver driver = mockDriver(resultSummary,\"ultimate collectors edition\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(health.getDetails()).containsEntry(\"server\",\"4711@My Home\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "given(session.run(anyString())).will(null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ResultSummary resultSummary = ResultSummaryMock.createResultSummary(\"My Home\",\"\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "given(driver.session(any())).willReturn(session)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Session session = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Neo4jReactiveHealthIndicator healthIndicator = new Neo4jReactiveHealthIndicator(driver)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ResultSummary resultSummary = ResultSummaryMock.createResultSummary(\"4711\",\"My Home\",\"\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Result statementResult = mockStatementResult(resultSummary,\"some edition\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Result statementResult = mockStatementResult(resultSummary,\"4711\",\"some edition\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "ResultSummary resultSummary = ResultSummaryMock.createResultSummary(\"4711\",\"My Home\",\"test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "neo4jIsUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "AtomicInteger count = new AtomicInteger()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "neo4jIsUpWithOneSessionExpiredException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Neo4jHealthIndicator healthIndicator = new Neo4jHealthIndicator(driver)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(health.getStatus()).isEqualTo(Status.UP)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(session,times(2)).close()@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Health health = healthIndicator.health()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Driver driver = mock()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
15->13 [style = bold, label=""];
12->5 [style = bold, label=""];
7->14 [style = dashed, label="0"];
11->4 [style = bold, label=""];
1->3 [style = bold, label=""];
18->19 [style = bold, label=""];
0->11 [style = bold, label=""];
16->17 [style = bold, label=""];
9->10 [style = bold, label=""];
7->8 [style = bold, label=""];
10->6 [style = bold, label=""];
3->0 [style = bold, label=""];
19->16 [style = bold, label=""];
16->17 [style = solid, label="driver"];
6->1 [style = bold, label=""];
5->2 [style = bold, label=""];
13->14 [style = solid, label="resultSummary"];
10->1 [style = solid, label="driver"];
2->14 [style = bold, label=""];
13->2 [style = bold, label=""];
8->9 [style = bold, label=""];
19->16 [style = solid, label="resultSummary"];
14->8 [style = bold, label=""];
2->7 [style = bold, label=""];
2->6 [style = solid, label="session"];
5->19 [style = dashed, label="0"];
5->7 [style = solid, label="resultSummary"];
17->20 [style = bold, label=""];
}
