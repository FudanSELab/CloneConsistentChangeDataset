digraph {
2 [style = filled, label = "IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"),null,List.of(\"ct\"),null,1L,null)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final MetadataIndexTemplateService service = getMetadataIndexTemplateService()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testFindV2Templates['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(),\"index\",randomBoolean()))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testFindV2TemplatesForHiddenIndex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ClusterState state = ClusterState.EMPTY_STATE@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(),\"index\",true))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "IndexTemplateV2 it = new IndexTemplateV2(List.of(\"i*\"),null,List.of(\"ct\"),0L,1L,null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"*\"),null,List.of(\"ct\"),10L,2L,null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "state = service.addComponentTemplate(state,true,\"ct\",ct)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "IndexTemplateV2 it2 = new IndexTemplateV2(List.of(\"in*\"),null,List.of(\"ct\"),10L,2L,null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testFindV2Templates['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String result = MetadataIndexTemplateService.findV2Template(state.metadata(),\"index\",true)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "state = service.addIndexTemplateV2(state,true,\"my-template\",it)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(result,equalTo(\"my-template\"))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ComponentTemplate ct = ComponentTemplateTests.randomInstance()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "state = service.addIndexTemplateV2(state,true,\"my-template2\",it2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(result,equalTo(\"my-template2\"))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String result = MetadataIndexTemplateService.findV2Template(state.metadata(),\"index\",randomBoolean()? null: randomBoolean())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertNull(MetadataIndexTemplateService.findV2Template(state.metadata(),\"index\",randomBoolean()? null: randomBoolean()))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "String result = MetadataIndexTemplateService.findV2Template(state.metadata(),\"index\",randomBoolean())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10->15 [style = dashed, label="0"];
4->18 [style = dashed, label="0"];
5->0 [style = solid, label="it2"];
2->19 [style = dashed, label="0"];
7->17 [style = bold, label=""];
16->11 [style = bold, label=""];
6->3 [style = solid, label="state"];
17->1 [style = bold, label=""];
10->4 [style = solid, label="result"];
14->4 [style = solid, label="result"];
7->12 [style = bold, label=""];
2->3 [style = bold, label=""];
20->0 [style = bold, label=""];
2->3 [style = solid, label="it"];
6->19 [style = bold, label=""];
15->18 [style = solid, label="result"];
12->1 [style = bold, label=""];
13->11 [style = bold, label=""];
15->18 [style = bold, label=""];
0->15 [style = bold, label=""];
20->0 [style = solid, label="it2"];
5->20 [style = dashed, label="0"];
6->2 [style = bold, label=""];
7->9 [style = bold, label=""];
3->5 [style = bold, label=""];
0->10 [style = bold, label=""];
1->6 [style = bold, label=""];
0->14 [style = bold, label=""];
3->20 [style = bold, label=""];
1->6 [style = solid, label="ct"];
5->0 [style = bold, label=""];
3->0 [style = solid, label="state"];
9->17 [style = dashed, label="0"];
7->6 [style = solid, label="state"];
10->4 [style = bold, label=""];
19->3 [style = solid, label="it"];
9->12 [style = dashed, label="0"];
9->1 [style = bold, label=""];
8->11 [style = bold, label=""];
19->3 [style = bold, label=""];
10->14 [style = dashed, label="0"];
11->7 [style = bold, label=""];
14->4 [style = bold, label=""];
}
