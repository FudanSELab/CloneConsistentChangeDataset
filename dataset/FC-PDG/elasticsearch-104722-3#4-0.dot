digraph {
36 [style = filled, label = "DirectCandidateGenerator forward = new DirectCandidateGenerator(spellchecker,\"body\",SuggestMode.SUGGEST_ALWAYS,ir,0.95,10)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "mapping.put(\"body_reverse\",new Analyzer(){@Override protected TokenStreamComponents createComponents(String fieldName){Tokenizer t = new StandardTokenizer()return new TokenStreamComponents(t,new ReverseStringFilter(new LowerCaseFilter(t)))}})@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "corrections = suggester.getCorrections(wrapper,new BytesRef(\"american cae\"),forward,1,1,ir,\"body\",wordScorer,1,2).corrections@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "CandidateGenerator generator = new MultiCandidateGeneratorWrapper(10,forward,reverse)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Correction(( corrections = suggester.getCorrections(wrapper,new BytesRef(\"american ame\"),generator,1,1,ir,\"body\",wordScorer,1,3).corrections@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testMultiGenerator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertThat(corrections(1(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"xor the god jewel\"))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertThat(corrections(0(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"xorr the god jewel\"))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "Analyzer analyzer = new Analyzer(){@Override protected TokenStreamComponents createComponents(String fieldName){Tokenizer t = new StandardTokenizer()TokenFilter filter = new LowerCaseFilter(t)try {SolrSynonymParser parser = new SolrSynonymParser(true,false,new WhitespaceAnalyzer())parser.parse(new StringReader(\"usa => usa, america, american\"))filter = new SynonymFilter(filter,parser.build(),true)}catch (Exception e) return new TokenStreamComponents(t,filter)}}@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Document doc = new Document()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "NoisyChannelSpellChecker suggester = new NoisyChannelSpellChecker()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertThat(corrections(0(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"captain america\"))@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertThat(corrections.length,equalTo(2))@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "assertThat(corrections.length,equalTo(1))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertThat(corrections(2(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"xorn the god jewel\"))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "DirectCandidateGenerator reverse = new DirectCandidateGenerator(spellchecker,\"body_reverse\",SuggestMode.SUGGEST_ALWAYS,ir,0.95,10,wrapper,wrapper,MultiTerms.getTerms(ir,\"body_reverse\"))@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "DirectSpellChecker spellchecker = new DirectSpellChecker()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "WordScorer wordScorer = new LinearInterpolatingScorer(ir,MultiFields.getTerms(ir,\"body_ngram\"),\"body_ngram\",0.85d,new BytesRef(\" \"),0.5,0.4,0.1)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "corrections = suggester.getCorrections(wrapper,new BytesRef(\"Xor the Got-Jewel\"),generator,0.5f,1,ir,\"body\",wordScorer,1.5f,2).corrections@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertThat(corrections(0(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"american ace\"))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(corrections(0(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"xorr the god jewel\"))@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "PerFieldAnalyzerWrapper wrapper = new PerFieldAnalyzerWrapper(new WhitespaceAnalyzer(),mapping)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DirectoryReader ir = DirectoryReader.open(writer)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertThat(corrections(0(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"captain america\"))@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(corrections(0(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"american ace\"))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(corrections(1(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"zorr the god jewel\"))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertThat(corrections(0(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"xorr the god jewel\"))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "LaplaceScorer wordScorer = new LaplaceScorer(ir,MultiFields.getTerms(ir,\"body_ngram\"),\"body_ngram\",0.95d,new BytesRef(\" \"),0.5f)@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "corrections = suggester.getCorrections(wrapper,new BytesRef(\"american ame\"),generator,1,1,ir,\"body\",wordScorer,1,1).corrections@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testMultiGenerator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "corrections = suggester.getCorrections(wrapper,new BytesRef(\"Xor the Got-Jewel\"),generator,0.5f,2,ir,\"body\",wordScorer,0,3).corrections@@@87@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "spellchecker.setMinQueryLength(1)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "generator = new DirectCandidateGenerator(spellchecker,\"body\",SuggestMode.SUGGEST_MORE_POPULAR,ir,0.95,10,null,analyzer,MultiFields.getTerms(ir,\"body\"))@@@83@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(corrections(0(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"xorr the god jewel\"))@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(corrections(2(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"four the god jewel\"))@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertThat(corrections(3(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"xorr the got jewel\"))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "corrections = suggester.getCorrections(wrapper,new BytesRef(\"Xor the Got-Jewel\"),generator,0.5f,4,ir,\"body\",wordScorer,0,3).corrections@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "corrections = suggester.getCorrections(wrapper,new BytesRef(\"Quazar II\"),generator,1,1,ir,\"body\",wordScorer,1,2).corrections@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "testTrigram['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(corrections(2(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"xorn the god jewel\"))@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(corrections(1(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"xor the god jewel\"))@@@90@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(corrections.length,equalTo(1))@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "generator = new MultiCandidateGeneratorWrapper(5,forward,reverse)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "mapping.put(\"body_ngram\",new Analyzer(){@Override protected TokenStreamComponents createComponents(String fieldName){Tokenizer t = new StandardTokenizer()ShingleFilter tf = new ShingleFilter(t,2,3)tf.setOutputUnigrams(false)return new TokenStreamComponents(t,new LowerCaseFilter(tf))}})@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String(( strings = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13db606@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "RAMDirectory dir = new RAMDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "writer.addDocument(doc)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "corrections = suggester.getCorrections(wrapper,new BytesRef(\"america cae\"),generator,2,1,ir,\"body\",wordScorer,1,2).corrections@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "suggester = new NoisyChannelSpellChecker(0.95)@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Map<String,Analyzer> mapping = new HashMap<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(corrections(0(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"quasar ii\"))@@@74@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "wordScorer = new LinearInterpolatingScorer(ir,MultiFields.getTerms(ir,\"body_ngram\"),\"body_ngram\",0.85d,new BytesRef(\" \"),0.5,0.4,0.1)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "doc.add(new Field(\"body_reverse\",line,TextField.TYPE_NOT_STORED))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "spellchecker.setMinPrefix(1)@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "corrections = suggester.getCorrections(wrapper,new BytesRef(\"Zorr the Got-Jewel\"),generator,0.5f,1,ir,\"body\",wordScorer,1.5f,2).corrections@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertThat(corrections(0(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"xorr the god jewel\"))@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "DirectCandidateGenerator reverse = new DirectCandidateGenerator(spellchecker,\"body_reverse\",SuggestMode.SUGGEST_ALWAYS,ir,0.95,10,wrapper,wrapper,MultiFields.getTerms(ir,\"body_reverse\"))@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
86 [style = filled, label = "corrections = suggester.getCorrections(analyzer,new BytesRef(\"captian usw\"),generator,2,4,ir,\"body\",wordScorer,1,3).corrections@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(corrections.length,equalTo(1))@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "corrections = suggester.getCorrections(analyzer,new BytesRef(\"captian usa\"),generator,2,4,ir,\"body\",wordScorer,1,3).corrections@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(corrections.length,equalTo(1))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "corrections = suggester.getCorrections(wrapper,new BytesRef(\"Xor the Got-Jewel\"),generator,0.5f,4,ir,\"body\",wordScorer,1,3).corrections@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "mapping.put(\"body\",new Analyzer(){@Override protected TokenStreamComponents createComponents(String fieldName){Tokenizer t = new StandardTokenizer()return new TokenStreamComponents(t,new LowerCaseFilter(t))}})@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "spellchecker.setAccuracy(0.0f)@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertThat(corrections(0(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"xorr the god jewel\"))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,conf)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "wordScorer = new StupidBackoffScorer(ir,MultiFields.getTerms(ir,\"body_ngram\"),\"body_ngram\",0.85d,new BytesRef(\" \"),0.4)@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "wordScorer = new LinearInterpolatingScorer(ir,MultiFields.getTerms(ir,\"body_ngram\"),\"body_ngram\",0.95d,new BytesRef(\" \"),0.5,0.4,0.1)@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "DirectCandidateGenerator generator = new DirectCandidateGenerator(spellchecker,\"body\",SuggestMode.SUGGEST_MORE_POPULAR,ir,0.95,5)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(corrections(0(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"american ace\"))@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "corrections = suggester.getCorrections(wrapper,new BytesRef(\"Zorr the Got-Jewel\"),generator,0.5f,4,ir,\"body\",wordScorer,0,2).corrections@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(corrections(1(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"xor the god jewel\"))@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "IndexWriterConfig conf = new IndexWriterConfig(wrapper)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Correction(( corrections = suggester.getCorrections(wrapper,new BytesRef(\"american cae\"),generator,1,1,ir,\"body\",wordScorer,1,2).corrections@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "LaplaceScorer wordScorer = new LaplaceScorer(ir,MultiTerms.getTerms(ir,\"body_ngram\"),\"body_ngram\",0.95d,new BytesRef(\" \"),0.5f)@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "assertThat(corrections.length,equalTo(4))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertThat(corrections.length,equalTo(1))@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "doc.add(new Field(\"body_ngram\",line,TextField.TYPE_NOT_STORED))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "doc.add(new Field(\"body\",line,TextField.TYPE_NOT_STORED))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "spellchecker.setMinQueryLength(1)@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "corrections = suggester.getCorrections(wrapper,new BytesRef(\"american ame\"),generator,1,1,ir,\"body\",wordScorer,1,2).corrections@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(corrections.length,equalTo(1))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "corrections = suggester.getCorrections(wrapper,new BytesRef(\"Xor the Got-Jewel\"),generator,0.5f,1,ir,\"body\",wordScorer,100,3).corrections@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertThat(corrections.length,equalTo(1))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertThat(corrections(3(.join(new BytesRef(\" \")).utf8ToString(),equalTo(\"xorr the got jewel\"))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertThat(corrections.length,equalTo(0))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertThat(corrections.length,equalTo(4))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
54->55 [style = bold, label=""];
63->72 [style = bold, label=""];
6->10 [style = solid, label="ir"];
65->60 [style = bold, label=""];
85->69 [style = bold, label=""];
34->9 [style = bold, label=""];
64->80 [style = bold, label=""];
40->6 [style = bold, label=""];
76->80 [style = solid, label="analyzer"];
52->71 [style = bold, label=""];
17->7 [style = solid, label="wordScorer"];
17->50 [style = dashed, label="0"];
6->13 [style = solid, label="ir"];
22->29 [style = dashed, label="0"];
72->29 [style = bold, label=""];
24->39 [style = bold, label=""];
4->55 [style = solid, label="wrapper"];
69->15 [style = bold, label=""];
17->28 [style = solid, label="wordScorer"];
56->67 [style = bold, label=""];
6->8 [style = solid, label="ir"];
17->13 [style = solid, label="wordScorer"];
59->62 [style = bold, label=""];
6->50 [style = solid, label="ir"];
4->28 [style = solid, label="wrapper"];
4->67 [style = solid, label="wrapper"];
31->34 [style = solid, label="reverse"];
61->15 [style = solid, label="wordScorer"];
18->72 [style = dashed, label="0"];
6->55 [style = solid, label="ir"];
58->73 [style = bold, label=""];
36->37 [style = solid, label="forward"];
51->37 [style = solid, label="reverse"];
17->38 [style = bold, label=""];
22->8 [style = bold, label=""];
20->68 [style = bold, label=""];
48->12 [style = bold, label=""];
4->8 [style = solid, label="wrapper"];
19->1 [style = bold, label=""];
31->37 [style = solid, label="reverse"];
4->15 [style = solid, label="wrapper"];
18->22 [style = bold, label=""];
6->56 [style = solid, label="ir"];
4->7 [style = solid, label="wrapper"];
34->9 [style = solid, label="generator"];
8->10 [style = solid, label="corrections"];
50->10 [style = solid, label="wordScorer"];
50->28 [style = solid, label="wordScorer"];
37->48 [style = bold, label=""];
32->25 [style = bold, label=""];
68->74 [style = bold, label=""];
81->45 [style = bold, label=""];
45->42 [style = bold, label=""];
43->56 [style = solid, label="spellchecker"];
82->57 [style = solid, label="wordScorer"];
43->0 [style = bold, label=""];
73->76 [style = bold, label=""];
36->34 [style = solid, label="forward"];
36->7 [style = solid, label="forward"];
62->2 [style = bold, label=""];
50->13 [style = solid, label="wordScorer"];
70->78 [style = solid, label="wordScorer"];
50->9 [style = solid, label="wordScorer"];
60->66 [style = bold, label=""];
7->29 [style = bold, label=""];
50->7 [style = solid, label="wordScorer"];
25->47 [style = bold, label=""];
33->16 [style = bold, label=""];
2->20 [style = bold, label=""];
6->28 [style = solid, label="ir"];
26->7 [style = bold, label=""];
14->30 [style = bold, label=""];
6->57 [style = solid, label="ir"];
55->59 [style = bold, label=""];
32->25 [style = solid, label="t"];
31->51 [style = dashed, label="0"];
36->31 [style = bold, label=""];
80->86 [style = bold, label=""];
4->19 [style = bold, label=""];
86->77 [style = bold, label=""];
1->6 [style = solid, label="writer"];
27->40 [style = solid, label="doc"];
6->15 [style = solid, label="ir"];
71->75 [style = bold, label=""];
46->37 [style = bold, label=""];
84->63 [style = bold, label=""];
0->36 [style = bold, label=""];
61->38 [style = bold, label=""];
6->61 [style = solid, label="ir"];
6->80 [style = solid, label="ir"];
20->18 [style = bold, label=""];
6->61 [style = bold, label=""];
66->83 [style = bold, label=""];
79->52 [style = bold, label=""];
67->15 [style = solid, label="corrections"];
10->44 [style = bold, label=""];
19->1 [style = solid, label="conf"];
23->10 [style = bold, label=""];
42->32 [style = bold, label=""];
17->10 [style = solid, label="wordScorer"];
33->78 [style = dashed, label="0"];
86->52 [style = solid, label="corrections"];
6->78 [style = solid, label="ir"];
37->28 [style = solid, label="generator"];
4->48 [style = solid, label="wrapper"];
6->86 [style = solid, label="ir"];
61->67 [style = solid, label="wordScorer"];
80->52 [style = solid, label="generator"];
70->78 [style = bold, label=""];
76->86 [style = solid, label="analyzer"];
6->82 [style = solid, label="ir"];
21->23 [style = bold, label=""];
7->13 [style = solid, label="corrections"];
6->17 [style = bold, label=""];
43->80 [style = solid, label="spellchecker"];
49->45 [style = bold, label=""];
6->9 [style = solid, label="ir"];
36->51 [style = bold, label=""];
48->7 [style = solid, label="corrections"];
50->41 [style = solid, label="wordScorer"];
25->76 [style = solid, label="t"];
70->55 [style = solid, label="wordScorer"];
78->84 [style = bold, label=""];
45->1 [style = solid, label="dir"];
4->41 [style = solid, label="wrapper"];
3->45 [style = bold, label=""];
4->52 [style = solid, label="wrapper"];
4->19 [style = solid, label="wrapper"];
35->39 [style = bold, label=""];
6->51 [style = solid, label="ir"];
56->74 [style = solid, label="generator"];
56->67 [style = solid, label="generator"];
55->74 [style = solid, label="corrections"];
6->67 [style = solid, label="ir"];
9->48 [style = solid, label="corrections"];
82->57 [style = bold, label=""];
37->13 [style = solid, label="generator"];
17->9 [style = solid, label="wordScorer"];
4->78 [style = solid, label="wrapper"];
29->54 [style = bold, label=""];
50->8 [style = solid, label="wordScorer"];
31->34 [style = bold, label=""];
56->57 [style = solid, label="generator"];
76->57 [style = solid, label="analyzer"];
46->70 [style = bold, label=""];
11->41 [style = bold, label=""];
80->86 [style = solid, label="generator"];
6->7 [style = solid, label="ir"];
37->8 [style = solid, label="generator"];
74->57 [style = solid, label="corrections"];
40->27 [style = bold, label=""];
39->40 [style = bold, label=""];
42->4 [style = solid, label="mapping"];
25->47 [style = solid, label="t"];
78->55 [style = solid, label="corrections"];
37->10 [style = solid, label="generator"];
27->24 [style = bold, label=""];
43->51 [style = solid, label="spellchecker"];
6->70 [style = solid, label="ir"];
6->79 [style = solid, label="ir"];
41->14 [style = bold, label=""];
38->43 [style = bold, label=""];
74->58 [style = bold, label=""];
4->9 [style = solid, label="wrapper"];
51->34 [style = solid, label="reverse"];
56->15 [style = solid, label="generator"];
57->64 [style = bold, label=""];
4->10 [style = solid, label="wrapper"];
24->35 [style = bold, label=""];
17->41 [style = solid, label="wordScorer"];
6->36 [style = solid, label="ir"];
15->78 [style = solid, label="corrections"];
79->52 [style = solid, label="wordScorer"];
21->55 [style = dashed, label="0"];
56->55 [style = solid, label="generator"];
4->13 [style = solid, label="wrapper"];
25->4 [style = bold, label=""];
12->26 [style = bold, label=""];
50->48 [style = solid, label="wordScorer"];
17->48 [style = solid, label="wordScorer"];
70->74 [style = solid, label="wordScorer"];
82->86 [style = solid, label="wordScorer"];
4->31 [style = solid, label="wrapper"];
10->41 [style = solid, label="corrections"];
77->79 [style = bold, label=""];
6->52 [style = solid, label="ir"];
83->82 [style = bold, label=""];
43->31 [style = solid, label="spellchecker"];
6->74 [style = solid, label="ir"];
6->31 [style = solid, label="ir"];
28->2 [style = bold, label=""];
4->51 [style = solid, label="wrapper"];
37->48 [style = solid, label="generator"];
56->78 [style = solid, label="generator"];
16->28 [style = bold, label=""];
50->38 [style = bold, label=""];
36->56 [style = dashed, label="0"];
0->56 [style = bold, label=""];
9->15 [style = bold, label=""];
67->85 [style = bold, label=""];
28->8 [style = solid, label="corrections"];
57->86 [style = solid, label="corrections"];
6->50 [style = bold, label=""];
76->65 [style = bold, label=""];
6->41 [style = solid, label="ir"];
43->36 [style = solid, label="spellchecker"];
13->28 [style = solid, label="corrections"];
8->21 [style = bold, label=""];
15->46 [style = bold, label=""];
44->11 [style = bold, label=""];
6->17 [style = solid, label="ir"];
17->61 [style = dashed, label="0"];
37->41 [style = solid, label="generator"];
6->48 [style = solid, label="ir"];
5->27 [style = bold, label=""];
51->34 [style = bold, label=""];
13->33 [style = bold, label=""];
75->53 [style = bold, label=""];
4->74 [style = solid, label="wrapper"];
17->8 [style = solid, label="wordScorer"];
47->4 [style = bold, label=""];
29->13 [style = bold, label=""];
}
