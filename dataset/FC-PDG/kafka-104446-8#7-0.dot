digraph {
8 [style = filled, label = "assertEquals(OptionalLong.of(9L),context.client.highWatermark())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "context.client.register(secondListener)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "context.time.sleep(context.electionTimeoutMs() * 2)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "int localId = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "context.client.poll()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "context.becomeLeader()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "context.client.poll()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "RaftClientTestContext.MockListener secondListener = new RaftClientTestContext.MockListener()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int candidateEpoch = epoch + 2@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "RaftClientTestContext.MockListener secondListener = new RaftClientTestContext.MockListener()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testHandleCommitCallbackFiresInCandidateState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "context.time.sleep(context.electionTimeoutMs * 2)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(OptionalInt.empty(),secondListener.currentClaimedEpoch())@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,localId)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(OptionalLong.of(8L),secondListener.lastCommitOffset())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "context.pollUntilResponse()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(OptionalLong.of(8L),secondListener.lastCommitOffset())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "context.deliverRequest(context.fetchRequest(epoch,otherNodeId,10L,epoch,500))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "context.pollUntilResponse()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(OptionalInt.empty(),secondListener.currentClaimedEpoch())@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "context.assertSentFetchResponse(Errors.NONE,epoch,OptionalInt.of(localId))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "context.client.poll()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "context.deliverRequest(context.fetchRequest(epoch,otherNodeId,9L,epoch,500))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHandleCommitCallbackFiresInCandidateState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int otherNodeId = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "context.client.register(secondListener)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(OptionalLong.of(9L),context.client.highWatermark())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,otherNodeId)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "context.pollUntilResponse()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,localId)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int candidateEpoch = epoch + 1@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "context.assertUnknownLeader(epoch + 1)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testHandleCommitCallbackFiresInVotedState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,otherNodeId)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "context.deliverRequest(context.voteRequest(candidateEpoch,otherNodeId,epoch,10L))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int epoch = 7@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).appendToLog(0L,2,Arrays.asList(\"a\",\"b\",\"c\")).appendToLog(3L,4,Arrays.asList(\"d\",\"e\",\"f\")).appendToLog(6L,4,Arrays.asList(\"g\",\"h\",\"i\")).withUnknownLeader(epoch - 1).build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "context.deliverRequest(context.voteRequest(epoch + 1,otherNodeId,epoch,9L))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->9 [style = bold, label=""];
15->2 [style = bold, label=""];
18->12 [style = solid, label="candidateEpoch"];
22->15 [style = bold, label=""];
16->11 [style = bold, label=""];
21->6 [style = solid, label="localId"];
23->5 [style = bold, label=""];
3->32 [style = solid, label="otherNodeId"];
3->5 [style = solid, label="otherNodeId"];
17->6 [style = bold, label=""];
7->10 [style = bold, label=""];
22->15 [style = solid, label="secondListener"];
17->5 [style = solid, label="epoch"];
13->29 [style = dashed, label="0"];
18->26 [style = bold, label=""];
6->24 [style = bold, label=""];
39->33 [style = solid, label="candidateEpoch"];
30->34 [style = bold, label=""];
4->29 [style = bold, label=""];
29->37 [style = bold, label=""];
3->29 [style = solid, label="otherNodeId"];
5->36 [style = dashed, label="0"];
26->4 [style = bold, label=""];
13->16 [style = bold, label=""];
31->28 [style = solid, label="secondListener"];
19->8 [style = bold, label=""];
8->7 [style = bold, label=""];
20->4 [style = bold, label=""];
17->7 [style = solid, label="epoch"];
2->13 [style = bold, label=""];
17->36 [style = solid, label="epoch"];
17->39 [style = solid, label="epoch"];
5->19 [style = bold, label=""];
32->38 [style = bold, label=""];
18->20 [style = bold, label=""];
36->30 [style = bold, label=""];
17->10 [style = solid, label="epoch"];
3->10 [style = solid, label="otherNodeId"];
18->13 [style = solid, label="candidateEpoch"];
17->32 [style = solid, label="epoch"];
33->40 [style = bold, label=""];
3->6 [style = solid, label="otherNodeId"];
1->21 [style = bold, label=""];
17->18 [style = solid, label="epoch"];
39->29 [style = solid, label="candidateEpoch"];
3->36 [style = solid, label="otherNodeId"];
39->32 [style = bold, label=""];
10->0 [style = bold, label=""];
34->39 [style = bold, label=""];
21->7 [style = solid, label="localId"];
3->33 [style = solid, label="otherNodeId"];
9->14 [style = bold, label=""];
4->12 [style = bold, label=""];
3->17 [style = bold, label=""];
14->18 [style = bold, label=""];
23->36 [style = bold, label=""];
39->32 [style = solid, label="candidateEpoch"];
40->31 [style = bold, label=""];
31->28 [style = bold, label=""];
37->35 [style = bold, label=""];
38->33 [style = bold, label=""];
27->21 [style = bold, label=""];
20->26 [style = dashed, label="0"];
12->22 [style = bold, label=""];
21->13 [style = solid, label="localId"];
17->9 [style = solid, label="epoch"];
25->21 [style = bold, label=""];
28->4 [style = bold, label=""];
21->3 [style = bold, label=""];
21->12 [style = solid, label="localId"];
24->23 [style = bold, label=""];
}
