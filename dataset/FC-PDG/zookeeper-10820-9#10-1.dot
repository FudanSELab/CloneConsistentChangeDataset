digraph {
7 [style = filled, label = "takeThread.join()@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Thread.sleep(1000)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "clients(i( = createClient()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testTakeWait1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "offerThread.join()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Thread takeThread = new Thread(null)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "int numAttempts = 2@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testTakeWait2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "i < clients.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i++@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(new String(takeResult(0(),testString)@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "final int numClients = 1@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(new String(takeResult(0(,UTF_8),testString)@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "testTakeWait1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int i = 0@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(new String(takeResult(0(),threadTestString)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final DistributedQueue(( queueHandles = new DistributedQueue((((@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "takeThread.start()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final String threadTestString = testString + i@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Thread offerThread = new Thread(null)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String testString = \"Hello World\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final byte(((( takeResult = new byte((((((@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String dir = \"/testTakeWait2\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "i < numAttempts@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertNotNull(takeResult(0()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "offerThread.start()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String dir = \"/testTakeWait1\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final ZooKeeper(( clients = new ZooKeeper((((@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->0 [style = solid, label="dir"];
15->2 [style = bold, label=""];
5->16 [style = solid, label="i"];
14->0 [style = solid, label="clients"];
17->4 [style = solid, label="takeResult"];
17->8 [style = solid, label="takeResult"];
17->22 [style = solid, label="takeResult"];
28->25 [style = solid, label="i"];
25->4 [style = dotted, label="true"];
29->25 [style = solid, label="i"];
12->15 [style = bold, label=""];
28->24 [style = solid, label="i"];
24->27 [style = solid, label="threadTestString"];
29->25 [style = bold, label=""];
25->24 [style = dotted, label="true"];
23->3 [style = bold, label=""];
6->19 [style = bold, label=""];
2->9 [style = bold, label=""];
3->12 [style = bold, label=""];
16->17 [style = bold, label=""];
7->4 [style = bold, label=""];
9->16 [style = solid, label="i"];
28->29 [style = solid, label="i"];
25->29 [style = dotted, label="true"];
24->18 [style = bold, label=""];
25->17 [style = bold, label=""];
10->6 [style = bold, label=""];
1->13 [style = bold, label=""];
9->16 [style = bold, label=""];
30->25 [style = solid, label="numAttempts"];
3->8 [style = solid, label="testString"];
0->5 [style = solid, label="i"];
25->11 [style = dotted, label="true"];
25->18 [style = dotted, label="true"];
25->7 [style = dotted, label="true"];
29->24 [style = solid, label="i"];
5->16 [style = bold, label=""];
8->22 [style = dashed, label="0"];
18->20 [style = bold, label=""];
17->24 [style = bold, label=""];
30->28 [style = bold, label=""];
16->0 [style = dotted, label="true"];
13->3 [style = bold, label=""];
14->0 [style = bold, label=""];
21->13 [style = bold, label=""];
25->17 [style = dotted, label="true"];
11->10 [style = bold, label=""];
17->27 [style = solid, label="takeResult"];
16->30 [style = bold, label=""];
4->27 [style = bold, label=""];
26->23 [style = bold, label=""];
16->14 [style = dotted, label="true"];
16->5 [style = dotted, label="true"];
25->20 [style = dotted, label="true"];
25->6 [style = dotted, label="true"];
28->25 [style = bold, label=""];
13->23 [style = dashed, label="0"];
16->14 [style = bold, label=""];
4->8 [style = bold, label=""];
8->27 [style = dashed, label="0"];
25->10 [style = dotted, label="true"];
27->29 [style = bold, label=""];
13->0 [style = solid, label="dir"];
25->27 [style = dotted, label="true"];
25->19 [style = dotted, label="true"];
19->7 [style = bold, label=""];
4->22 [style = bold, label=""];
3->22 [style = solid, label="testString"];
3->24 [style = solid, label="testString"];
17->18 [style = bold, label=""];
0->5 [style = bold, label=""];
20->11 [style = bold, label=""];
}
