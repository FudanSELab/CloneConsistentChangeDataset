digraph {
2 [style = filled, label = "assertEquals(\"Cannot set both fullpath and prefix attributes\",be.getMessage())@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"Cannot set both dir and src attributes\",be.getMessage())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(\"prefix attribute copied by copy constructor\",f.getPrefix(getProject()).equals(zid.getPrefix(getProject())))@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "BuildException be@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "zid.setRefid(new Reference(getProject(),\"test\"))@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "ZipFileSet zid = (ZipFileSet)getInstance()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "f = (TarFileSet)getInstance()@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(\"Cannot set both dir and src attributes\",be.getMessage())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "f.setRefid(new Reference(\"test\"))@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "fail(\"can add src to \" + f.getDataTypeName() + \" when a dir is already present\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(\"src attribute copied by copy constructor\",zid.getSrc(getProject()).equals(f.getSrc(getProject())))@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "BuildException be@@@47@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "f.setFileMode(\"600\")@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "f = (ZipFileSet)getInstance()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "f.setDir(new File(\"examples\"))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "BuildException be@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "f = (ZipFileSet)getInstance()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(\"You must not specify more than one \" + \"attribute when using refid\",be.getMessage())@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "TarFileSet zid = (TarFileSet)getInstance()@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "f.setDir(new File(\"examples\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "f = (ZipFileSet)getInstance()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testAttributes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "f = (TarFileSet)getInstance()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "BuildException be@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "fail(\"Can add src to \" + f.getDataTypeName() + \" when a refid is already present\")@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "f = (ZipFileSet)getInstance()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(\"Cannot set both fullpath and prefix attributes\",be.getMessage())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "f.setFullpath(\"/doc/manual/index.html\")@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "f.setRefid(new Reference(getProject(),\"test\"))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "f.setPrefix(\"/examples\")@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "BuildException be@@@38@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testAttributes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ZipFileSet f = (ZipFileSet)getInstance()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "fail(\"can add dir to \" + f.getDataTypeName() + \" when a src is already present\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "f.setPrefix(\"/examples\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "f.setDirMode(\"530\")@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "f = (ZipFileSet)getInstance()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "getProject().addReference(\"test\",f)@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(\"file mode attribute copied by copy constructor\",f.getFileMode(getProject()) == zid.getFileMode(getProject()))@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "testAttributes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "TarFileSet f = (TarFileSet)getInstance()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(\"dir mode attribute copied by copy constructor\",f.getDirMode(getProject()) == zid.getDirMode(getProject()))@@@61@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "zid.setRefid(new Reference(\"test\"))@@@57@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "fail(\"Can add fullpath to \" + f.getDataTypeName() + \" when a prefix is already present\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "f.setPrefix(\"/examples\")@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "fail(\"Can add prefix to \" + f.getDataTypeName() + \" when a fullpath is already present\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "f = (TarFileSet)getInstance()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "f = (TarFileSet)getInstance()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "f = (TarFileSet)getInstance()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "f.setFullpath(\"/doc/manual/index.html\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->22 [style = bold, label=""];
4->53 [style = bold, label=""];
42->9 [style = bold, label=""];
34->2 [style = dotted, label="true"];
7->52 [style = bold, label=""];
27->57 [style = dashed, label="0"];
6->29 [style = bold, label=""];
3->27 [style = bold, label=""];
16->61 [style = dashed, label="0"];
19->5 [style = bold, label=""];
12->40 [style = bold, label=""];
28->52 [style = bold, label=""];
34->2 [style = bold, label=""];
2->49 [style = bold, label=""];
24->52 [style = dashed, label="0"];
39->50 [style = dashed, label="0"];
35->38 [style = bold, label=""];
8->11 [style = bold, label=""];
18->0 [style = bold, label=""];
49->36 [style = bold, label=""];
5->54 [style = dashed, label="0"];
21->44 [style = bold, label=""];
57->19 [style = solid, label="f"];
11->48 [style = bold, label=""];
12->60 [style = dashed, label="0"];
46->6 [style = bold, label=""];
38->45 [style = bold, label=""];
18->56 [style = bold, label=""];
10->7 [style = bold, label=""];
23->35 [style = bold, label=""];
7->24 [style = bold, label=""];
22->18 [style = bold, label=""];
58->25 [style = bold, label=""];
28->24 [style = bold, label=""];
1->32 [style = bold, label=""];
0->20 [style = bold, label=""];
27->19 [style = solid, label="f"];
13->15 [style = bold, label=""];
14->6 [style = bold, label=""];
47->16 [style = bold, label=""];
36->45 [style = dashed, label="0"];
48->58 [style = bold, label=""];
44->56 [style = bold, label=""];
36->51 [style = bold, label=""];
41->27 [style = bold, label=""];
0->56 [style = dashed, label="0"];
20->59 [style = dashed, label="0"];
26->3 [style = bold, label=""];
31->13 [style = bold, label=""];
37->25 [style = bold, label=""];
52->4 [style = bold, label=""];
15->48 [style = dashed, label="0"];
13->48 [style = bold, label=""];
35->49 [style = bold, label=""];
37->58 [style = dashed, label="0"];
14->46 [style = dashed, label="0"];
17->23 [style = bold, label=""];
32->33 [style = bold, label=""];
55->61 [style = bold, label=""];
19->54 [style = bold, label=""];
4->31 [style = bold, label=""];
27->39 [style = bold, label=""];
31->53 [style = dashed, label="0"];
29->42 [style = bold, label=""];
8->11 [style = dotted, label="true"];
43->41 [style = bold, label=""];
39->1 [style = bold, label=""];
33->19 [style = bold, label=""];
15->37 [style = bold, label=""];
56->59 [style = bold, label=""];
53->13 [style = bold, label=""];
54->14 [style = bold, label=""];
59->17 [style = bold, label=""];
20->17 [style = bold, label=""];
26->51 [style = dashed, label="0"];
61->60 [style = bold, label=""];
57->50 [style = bold, label=""];
38->49 [style = dashed, label="0"];
38->36 [style = bold, label=""];
40->28 [style = bold, label=""];
36->26 [style = bold, label=""];
5->14 [style = bold, label=""];
41->57 [style = bold, label=""];
11->15 [style = bold, label=""];
2->38 [style = bold, label=""];
51->3 [style = bold, label=""];
24->4 [style = bold, label=""];
21->44 [style = dotted, label="true"];
50->1 [style = bold, label=""];
60->40 [style = bold, label=""];
43->41 [style = dotted, label="true"];
45->26 [style = bold, label=""];
3->57 [style = bold, label=""];
30->16 [style = bold, label=""];
5->46 [style = bold, label=""];
16->12 [style = bold, label=""];
10->7 [style = dotted, label="true"];
44->0 [style = bold, label=""];
}
