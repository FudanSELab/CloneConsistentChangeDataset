digraph {
11 [style = filled, label = "T lower = Conversions.fromByteBuffer(struct.field(id).type(),lowerBounds.get(id))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "T upper = Conversions.fromByteBuffer(field.type(),upperBounds.get(id))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "notEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "return ROWS_CANNOT_MATCH@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "return ROWS_CANNOT_MATCH@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return ROWS_MUST_MATCH@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return ROWS_MUST_MATCH@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "gt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "NaNUtil.isNaN(lower)@@@11@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "return ROWS_MIGHT_MATCH@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "containsNullsOnly(id) || containsNaNsOnly(id)@@@6@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Literal<T> lit@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cmp < 0@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Literal<T> lit@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return ROWS_MUST_MATCH@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "T upper = Conversions.fromByteBuffer(ref.type(),upperBounds.get(id))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "upperBounds != null && upperBounds.containsKey(id)@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "lowerBounds != null && lowerBounds.containsKey(id)@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "cmp > 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "notEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "containsNullsOnly(id)@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "cmp <= 0@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0->7 [style = solid, label="id"];
7->18 [style = dotted, label="true"];
5->1 [style = bold, label=""];
9->31 [style = dashed, label="0"];
13->6 [style = bold, label=""];
7->6 [style = bold, label=""];
18->13 [style = bold, label=""];
16->0 [style = bold, label=""];
5->1 [style = solid, label="field"];
7->11 [style = bold, label=""];
19->23 [style = bold, label=""];
15->6 [style = bold, label=""];
18->13 [style = dotted, label="true"];
19->23 [style = dotted, label="true"];
0->6 [style = solid, label="id"];
0->15 [style = bold, label=""];
6->10 [style = dotted, label="true"];
3->9 [style = bold, label=""];
6->25 [style = dotted, label="true"];
6->25 [style = bold, label=""];
24->29 [style = dotted, label="true"];
21->14 [style = dotted, label="true"];
1->22 [style = bold, label=""];
15->8 [style = bold, label=""];
0->5 [style = solid, label="id"];
12->30 [style = dashed, label="0"];
0->10 [style = solid, label="id"];
16->14 [style = dotted, label="true"];
24->0 [style = bold, label=""];
11->17 [style = bold, label=""];
15->7 [style = bold, label=""];
21->20 [style = dotted, label="true"];
2->30 [style = solid, label="cmp"];
30->31 [style = bold, label=""];
12->9 [style = bold, label=""];
1->15 [style = bold, label=""];
30->28 [style = bold, label=""];
17->18 [style = solid, label="cmp"];
6->12 [style = dotted, label="true"];
2->12 [style = solid, label="cmp"];
18->6 [style = bold, label=""];
0->15 [style = solid, label="id"];
30->28 [style = dotted, label="true"];
15->27 [style = dotted, label="true"];
6->30 [style = dotted, label="true"];
0->1 [style = solid, label="id"];
8->27 [style = dashed, label="0"];
7->11 [style = dotted, label="true"];
6->31 [style = bold, label=""];
3->28 [style = dashed, label="0"];
12->3 [style = bold, label=""];
11->19 [style = bold, label=""];
19->17 [style = bold, label=""];
8->7 [style = bold, label=""];
27->6 [style = bold, label=""];
21->0 [style = bold, label=""];
23->17 [style = bold, label=""];
11->17 [style = solid, label="lower"];
28->31 [style = bold, label=""];
16->4 [style = dotted, label="true"];
7->19 [style = dotted, label="true"];
15->22 [style = dashed, label="0"];
22->8 [style = bold, label=""];
10->2 [style = bold, label=""];
7->17 [style = dotted, label="true"];
24->26 [style = dotted, label="true"];
25->2 [style = bold, label=""];
10->25 [style = dashed, label="0"];
14->29 [style = dashed, label="0"];
22->8 [style = dotted, label="true"];
25->2 [style = solid, label="upper"];
0->25 [style = solid, label="id"];
6->10 [style = bold, label=""];
6->9 [style = bold, label=""];
15->27 [style = bold, label=""];
15->8 [style = dotted, label="true"];
0->11 [style = solid, label="id"];
22->7 [style = bold, label=""];
10->2 [style = solid, label="upper"];
0->22 [style = solid, label="id"];
2->30 [style = bold, label=""];
11->19 [style = solid, label="lower"];
6->2 [style = dotted, label="true"];
0->5 [style = bold, label=""];
2->12 [style = bold, label=""];
12->3 [style = dotted, label="true"];
17->18 [style = bold, label=""];
}
