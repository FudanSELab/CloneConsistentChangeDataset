digraph {
4 [style = filled, label = "i++@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "doTestIntPointFunctionQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName + \", product(-1,\" + dvFieldName + \")\"),\"//*(@numFound='10'(\",\"//result/doc(1(/float(@name='product(-1,\" + dvFieldName + \")'((.='-0.0'(\",\"//result/doc(2(/float(@name='product(-1,\" + dvFieldName + \")'((.='-1.0'(\",\"//result/doc(3(/float(@name='product(-1,\" + dvFieldName + \")'((.='-2.0'(\",\"//result/doc(10(/float(@name='product(-1,\" + dvFieldName + \")'((.='-9.0'(\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "int i = 9@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "String type@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "String type@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(h.getCore().getLatestSchema().getField(nonDvFieldName).getType() instanceof PointField)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName + \", product(-1,\" + dvFieldName + \")\"),\"//*(@numFound='10'(\",\"//result/doc(1(/float(@name='product(-1,\" + dvFieldName + \")'((.='-0.0'(\",\"//result/doc(2(/float(@name='product(-1,\" + dvFieldName + \")'((.='-1.1'(\",\"//result/doc(3(/float(@name='product(-1,\" + dvFieldName + \")'((.='-2.2'(\",\"//result/doc(10(/float(@name='product(-1,\" + dvFieldName + \")'((.='-9.9'(\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "doTestIntPointFunctionQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName + \", field(\" + dvFieldName + \")\"),\"//*(@numFound='10'(\",\"//result/doc(1(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='0.0'(\",\"//result/doc(2(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='1.1'(\",\"//result/doc(3(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='2.2'(\",\"//result/doc(10(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='9.9'(\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName + \", field(\" + dvFieldName + \")\",\"sort\",\"id asc\"),\"//*(@numFound='10'(\",\"//result/doc(1(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='0'(\",\"//result/doc(2(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='1'(\",\"//result/doc(3(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='2'(\",\"//result/doc(10(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='9'(\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName,\"sort\",\"product(-1,\" + dvFieldName + \") asc\"),\"//*(@numFound='10'(\",\"//result/doc(1(/\" + type + \"(@name='\" + dvFieldName + \"'((.='9'(\",\"//result/doc(2(/\" + type + \"(@name='\" + dvFieldName + \"'((.='8'(\",\"//result/doc(3(/\" + type + \"(@name='\" + dvFieldName + \"'((.='7'(\",\"//result/doc(10(/\" + type + \"(@name='\" + dvFieldName + \"'((.='0'(\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(h.getCore().getLatestSchema().getField(dvFieldName).getType() instanceof PointField)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String type@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i >= 0@@@4@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName + \", product(-1,\" + dvFieldName + \")\",\"sort\",\"id asc\"),\"//*(@numFound='10'(\",\"//result/doc(1(/float(@name='product(-1,\" + dvFieldName + \")'((.='-0.0'(\",\"//result/doc(2(/float(@name='product(-1,\" + dvFieldName + \")'((.='-1.0'(\",\"//result/doc(3(/float(@name='product(-1,\" + dvFieldName + \")'((.='-2.0'(\",\"//result/doc(10(/float(@name='product(-1,\" + dvFieldName + \")'((.='-9.0'(\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName,\"sort\",\"product(-1,\" + dvFieldName + \") asc\"),\"//*(@numFound='10'(\",\"//result/doc(1(/\" + type + \"(@name='\" + dvFieldName + \"'((.='9.9'(\",\"//result/doc(2(/\" + type + \"(@name='\" + dvFieldName + \"'((.='8.8'(\",\"//result/doc(3(/\" + type + \"(@name='\" + dvFieldName + \"'((.='7.7'(\",\"//result/doc(10(/\" + type + \"(@name='\" + dvFieldName + \"'((.='0.0'(\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String dvFieldName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "doTestFloatPointFunctionQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(h.getCore().getLatestSchema().getField(dvFieldName).hasDocValues())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String nonDvFieldName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertU(commit())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName + \", field(\" + dvFieldName + \")\"),\"//*(@numFound='10'(\",\"//result/doc(1(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='0'(\",\"//result/doc(2(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='1'(\",\"//result/doc(3(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='2'(\",\"//result/doc(10(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='9'(\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "int i = 0@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertU(adoc(\"id\",String.valueOf(i),dvFieldName,String.valueOf(i),nonDvFieldName,String.valueOf(i)))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i--@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertU(adoc(\"id\",String.valueOf(i),dvFieldName,String.format(Locale.ROOT,\"%f\",(float)i * 1.1),nonDvFieldName,String.format(Locale.ROOT,\"%f\",(float)i * 1.1)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertQEx(\"Expecting Exception\",\"sort param could not be parsed as a query\",req(\"q\",\"*:*\",\"fl\",\"id, \" + nonDvFieldName,\"sort\",\"product(-1,\" + nonDvFieldName + \") asc\"),SolrException.ErrorCode.BAD_REQUEST)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i < 10@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String nonDvFieldName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "String dvFieldName@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFalse(h.getCore().getLatestSchema().getField(nonDvFieldName).hasDocValues())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String dvFieldName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20->0 [style = solid, label="type"];
23->6 [style = solid, label="i"];
27->32 [style = dotted, label="true"];
2->19 [style = dashed, label="0"];
11->14 [style = bold, label=""];
11->1 [style = dotted, label="true"];
18->6 [style = solid, label="nonDvFieldName"];
11->12 [style = dotted, label="true"];
15->19 [style = solid, label="dvFieldName"];
23->17 [style = solid, label="i"];
9->7 [style = bold, label=""];
1->0 [style = solid, label="dvFieldName"];
15->10 [style = solid, label="nonDvFieldName"];
14->30 [style = solid, label="i"];
5->0 [style = bold, label=""];
23->21 [style = solid, label="i"];
32->30 [style = solid, label="nonDvFieldName"];
14->4 [style = solid, label="i"];
11->15 [style = dotted, label="true"];
17->21 [style = bold, label=""];
1->9 [style = solid, label="dvFieldName"];
4->16 [style = bold, label=""];
21->3 [style = bold, label=""];
15->6 [style = solid, label="dvFieldName"];
14->16 [style = bold, label=""];
16->3 [style = bold, label=""];
32->10 [style = solid, label="nonDvFieldName"];
27->25 [style = dotted, label="true"];
4->17 [style = dashed, label="0"];
0->19 [style = bold, label=""];
15->22 [style = solid, label="dvFieldName"];
25->26 [style = solid, label="type"];
16->6 [style = bold, label=""];
21->17 [style = dotted, label="true"];
2->9 [style = bold, label=""];
16->4 [style = dotted, label="true"];
16->21 [style = dashed, label="0"];
18->10 [style = solid, label="nonDvFieldName"];
25->31 [style = solid, label="type"];
17->21 [style = solid, label="i"];
22->7 [style = bold, label=""];
15->0 [style = solid, label="dvFieldName"];
6->4 [style = bold, label=""];
14->6 [style = solid, label="i"];
9->31 [style = dashed, label="0"];
19->22 [style = bold, label=""];
24->18 [style = dotted, label="true"];
21->6 [style = dotted, label="true"];
20->22 [style = solid, label="type"];
6->17 [style = bold, label=""];
13->10 [style = bold, label=""];
27->14 [style = bold, label=""];
28->31 [style = solid, label="dvFieldName"];
5->26 [style = bold, label=""];
15->32 [style = dashed, label="0"];
9->22 [style = dashed, label="0"];
0->26 [style = dashed, label="0"];
31->7 [style = bold, label=""];
4->6 [style = solid, label="i"];
14->16 [style = solid, label="i"];
14->23 [style = dashed, label="0"];
1->6 [style = solid, label="dvFieldName"];
12->0 [style = solid, label="type"];
4->16 [style = solid, label="i"];
3->8 [style = bold, label=""];
2->29 [style = dashed, label="0"];
16->30 [style = bold, label=""];
28->26 [style = solid, label="dvFieldName"];
24->20 [style = dotted, label="true"];
12->9 [style = solid, label="type"];
28->30 [style = solid, label="dvFieldName"];
24->23 [style = bold, label=""];
7->13 [style = bold, label=""];
1->2 [style = solid, label="dvFieldName"];
21->6 [style = bold, label=""];
26->29 [style = bold, label=""];
16->30 [style = dotted, label="true"];
17->6 [style = solid, label="i"];
0->2 [style = bold, label=""];
29->31 [style = bold, label=""];
15->6 [style = solid, label="nonDvFieldName"];
27->28 [style = dotted, label="true"];
8->5 [style = bold, label=""];
28->29 [style = solid, label="dvFieldName"];
23->21 [style = bold, label=""];
30->4 [style = bold, label=""];
24->15 [style = dotted, label="true"];
4->30 [style = solid, label="i"];
6->30 [style = dashed, label="0"];
16->6 [style = dotted, label="true"];
}
