digraph {
9 [style = filled, label = "i < cloudReplicaSource.getSliceCount()@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"http://baseUrl1/slice1_replica5/\",cloudReplicaSource.getReplicasBySlice(i).get(0))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int i = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(3,cloudReplicaSource.getSliceCount())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(1,cloudReplicaSource.getReplicasBySlice(i).size())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(1,cloudReplicaSource.getReplicasBySlice(i).size())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ModifiableSolrParams params = new ModifiableSolrParams()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testSimple_OnlyNrt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertEquals(\"http://baseUrl2/slice2_replica3/\",cloudReplicaSource.getReplicasBySlice(i).get(0))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testMultipleCollections_OnlyNrt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<String> sliceNames = cloudReplicaSource.getSliceNames()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "CloudReplicaSource cloudReplicaSource = new CloudReplicaSource.Builder().collection(\"collection1\").onlyNrt(true).zkStateReader(zkStateReader).replicaListTransformer(replicaListTransformer).whitelistHostChecker(whitelistHostChecker).params(params).build()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<String> sliceNames = cloudReplicaSource.getSliceNames()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,cloudReplicaSource.getReplicasBySlice(i).size())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testSimple_OnlyNrt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String sliceName = sliceNames.get(i)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "sliceName@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(\"http://baseUrl1:8983/slice1_replica1/\",cloudReplicaSource.getReplicasBySlice(i).get(0))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(2,cloudReplicaSource.getReplicasBySlice(i).size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "HttpShardHandlerFactory.WhitelistHostChecker whitelistHostChecker = Mockito.mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ReplicaListTransformer replicaListTransformer = Mockito.mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"http://baseUrl1/slice1_replica1/\",cloudReplicaSource.getReplicasBySlice(i).get(0))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(\"http://baseUrl1/slice1_replica1/\",cloudReplicaSource.getReplicasBySlice(i).get(0))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "CloudReplicaSource cloudReplicaSource = new CloudReplicaSource.Builder().collection(\"collection1\").onlyNrt(true).zkStateReader(zkStateReader).replicaListTransformer(replicaListTransformer).whitelistHostChecker(whitelistHostChecker).params(params).build()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(3,sliceNames.size())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(\"http://baseUrl2:8984/slice2_replica3/\",cloudReplicaSource.getReplicasBySlice(i).get(0))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(\"http://baseUrl2/slice2_replica3/\",cloudReplicaSource.getReplicasBySlice(i).get(0))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "params.set(\"collection\",\"collection1,collection2\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->10 [style = bold, label=""];
4->9 [style = bold, label=""];
12->9 [style = solid, label="i"];
9->0 [style = dotted, label="true"];
28->15 [style = bold, label=""];
9->0 [style = bold, label=""];
12->0 [style = solid, label="i"];
0->18 [style = dotted, label="true"];
4->17 [style = dashed, label="0"];
14->24 [style = dotted, label="true"];
1->9 [style = solid, label="i"];
26->3 [style = bold, label=""];
12->15 [style = solid, label="i"];
17->9 [style = bold, label=""];
0->2 [style = bold, label=""];
0->4 [style = dotted, label="true"];
12->15 [style = bold, label=""];
14->22 [style = bold, label=""];
3->11 [style = bold, label=""];
12->15 [style = dotted, label="true"];
14->22 [style = dashed, label="0"];
2->18 [style = bold, label=""];
14->17 [style = bold, label=""];
14->22 [style = dotted, label="true"];
22->28 [style = bold, label=""];
23->8 [style = bold, label=""];
16->18 [style = dashed, label="0"];
12->9 [style = bold, label=""];
15->0 [style = solid, label="i"];
10->6 [style = bold, label=""];
9->15 [style = solid, label="i"];
7->3 [style = bold, label=""];
1->15 [style = solid, label="i"];
9->14 [style = dotted, label="true"];
14->20 [style = dotted, label="true"];
8->1 [style = bold, label=""];
11->5 [style = bold, label=""];
15->9 [style = solid, label="i"];
0->14 [style = bold, label=""];
14->21 [style = dotted, label="true"];
21->20 [style = bold, label=""];
25->12 [style = bold, label=""];
14->28 [style = dotted, label="true"];
10->23 [style = bold, label=""];
15->9 [style = bold, label=""];
2->29 [style = dashed, label="0"];
15->0 [style = bold, label=""];
5->13 [style = bold, label=""];
27->10 [style = bold, label=""];
6->8 [style = bold, label=""];
1->12 [style = solid, label="i"];
18->9 [style = bold, label=""];
1->12 [style = bold, label=""];
14->29 [style = bold, label=""];
12->0 [style = dotted, label="true"];
14->29 [style = dotted, label="true"];
0->17 [style = dotted, label="true"];
8->25 [style = dashed, label="0"];
0->14 [style = dotted, label="true"];
9->15 [style = dotted, label="true"];
9->12 [style = bold, label=""];
5->27 [style = bold, label=""];
14->21 [style = bold, label=""];
0->14 [style = solid, label="sliceName"];
0->2 [style = dotted, label="true"];
0->16 [style = dotted, label="true"];
15->0 [style = solid, label="sliceName"];
29->24 [style = bold, label=""];
12->9 [style = dotted, label="true"];
20->15 [style = bold, label=""];
10->23 [style = dashed, label="0"];
19->3 [style = bold, label=""];
8->25 [style = bold, label=""];
16->9 [style = bold, label=""];
9->12 [style = solid, label="i"];
14->4 [style = bold, label=""];
24->15 [style = bold, label=""];
2->16 [style = bold, label=""];
}
