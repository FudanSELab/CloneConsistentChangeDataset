digraph {
9 [style = filled, label = "String dir = \"/testTakeWait1\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i < num_attempts@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testTakeWait1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "testTakeWait2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "offerThread.start()@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "clients(i( = createClient()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final DistributedQueue queueHandles = new DistributedQueue((((@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Thread offerThread = new Thread(){public void run(){try {queueHandles(0(.offer(threadTestString.getBytes())}catch (KeeperException e) catch (InterruptedException e) }}@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final ZooKeeper clients = new ZooKeeper((((@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final int num_clients = 1@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Thread.sleep(1000)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(new String(takeResult(0(),threadTestString)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "i++@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final byte(( takeResult = new byte((((((@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < clients.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final ZooKeeper(( clients = new ZooKeeper((((@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testTakeWait1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "offerThread.join()@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Thread takeThread = new Thread(){public void run(){try {takeResult(0( = queueHandles(0(.take()}catch (KeeperException e) catch (InterruptedException e) }}@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "takeThread.start()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "takeThread.join()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(new String(takeResult(0(),testString)@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final String testString = \"Hello World\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int num_attempts = 2@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertTrue(takeResult(0( != null)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int i = 0@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "String dir = \"/testTakeWait2\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final DistributedQueue(( queueHandles = new DistributedQueue((((@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "final String threadTestString = testString + i@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->7 [style = solid, label="i"];
4->9 [style = bold, label=""];
27->26 [style = solid, label="num_attempts"];
20->24 [style = solid, label="takeResult"];
7->2 [style = dotted, label="true"];
8->2 [style = solid, label="clients"];
22->15 [style = bold, label=""];
15->7 [style = bold, label=""];
17->24 [style = dashed, label="0"];
0->19 [style = bold, label=""];
20->28 [style = bold, label=""];
12->15 [style = bold, label=""];
16->7 [style = bold, label=""];
3->11 [style = bold, label=""];
31->26 [style = solid, label="i"];
26->20 [style = dotted, label="true"];
26->19 [style = dotted, label="true"];
20->3 [style = bold, label=""];
7->20 [style = bold, label=""];
25->31 [style = solid, label="i"];
7->8 [style = bold, label=""];
5->17 [style = bold, label=""];
9->2 [style = solid, label="dir"];
26->3 [style = dotted, label="true"];
30->29 [style = bold, label=""];
11->18 [style = bold, label=""];
13->1 [style = bold, label=""];
1->23 [style = bold, label=""];
29->13 [style = bold, label=""];
31->28 [style = solid, label="i"];
19->5 [style = bold, label=""];
31->26 [style = bold, label=""];
26->31 [style = dotted, label="true"];
21->9 [style = bold, label=""];
14->23 [style = dashed, label="0"];
23->22 [style = bold, label=""];
9->29 [style = dashed, label="0"];
28->24 [style = solid, label="threadTestString"];
26->10 [style = dotted, label="true"];
8->2 [style = bold, label=""];
24->31 [style = bold, label=""];
18->6 [style = bold, label=""];
25->26 [style = solid, label="i"];
5->24 [style = bold, label=""];
6->10 [style = bold, label=""];
14->12 [style = bold, label=""];
10->0 [style = bold, label=""];
25->26 [style = bold, label=""];
20->5 [style = solid, label="takeResult"];
13->28 [style = solid, label="testString"];
7->16 [style = dotted, label="true"];
26->28 [style = dotted, label="true"];
7->27 [style = bold, label=""];
26->24 [style = dotted, label="true"];
12->22 [style = dashed, label="0"];
26->18 [style = dotted, label="true"];
13->17 [style = solid, label="testString"];
26->6 [style = dotted, label="true"];
1->14 [style = bold, label=""];
28->3 [style = bold, label=""];
26->11 [style = dotted, label="true"];
29->2 [style = solid, label="dir"];
7->8 [style = dotted, label="true"];
25->28 [style = solid, label="i"];
20->17 [style = solid, label="takeResult"];
27->25 [style = bold, label=""];
15->7 [style = solid, label="i"];
26->5 [style = dotted, label="true"];
2->16 [style = solid, label="i"];
26->20 [style = bold, label=""];
26->0 [style = dotted, label="true"];
9->13 [style = bold, label=""];
2->16 [style = bold, label=""];
}
