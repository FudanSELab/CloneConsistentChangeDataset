digraph {
8 [style = filled, label = "RuntimeContext rCtx = mock()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "doAnswer(new Answer(){@Override public Object answer(InvocationOnMock invocationOnMock){ProcessWindowFunctionMock.Context c = (ProcessWindowFunction.Context)invocationOnMock.getArguments()(1(c.currentProcessingTime()c.currentWatermark()c.windowState()c.globalState()return null}}).when(mock).process(eq(42L),(ProcessWindowFunctionMock.Context)anyObject(),eq(i),eq(c))@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "execConf.setParallelism(42)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "windowFunction.process(((byte)0),w,ctx,i,c)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "verify(ctx).currentProcessingTime()@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "testInternalIterableAllWindowFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "verify(mock).setRuntimeContext(rCtx)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Configuration config = new Configuration()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "windowFunction.setRuntimeContext(rCtx)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "InternalIterableAllWindowFunction<Long,String,TimeWindow> windowFunction = new InternalIterableAllWindowFunction<>(mock)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "windowFunction.close()@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "TimeWindow w = mock()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(mock).setOutputType(stringType,execConf)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "AllWindowFunctionMock mock = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "verify(mock).close()@@@23@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "verify(ctx).globalState()@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "verify(ctx).windowState()@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "verify(mock).close()@@@37@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "StreamingFunctionUtils.setOutputType(windowFunction,stringType,execConf)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "InternalIterableProcessWindowFunction<Long,String,Long,TimeWindow> windowFunction = new InternalIterableProcessWindowFunction<>(mock)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testInternalIterableProcessWindowFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "ProcessWindowFunctionMock mock = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verify(mock).process(eq(42L),(ProcessWindowFunctionMock.Context)anyObject(),eq(i),eq(c))@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TypeInformation<String> stringType = BasicTypeInfo.STRING_TYPE_INFO@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "verify(mock).open(config)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Collector<String> c = (Collector<String>)mock()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ExecutionConfig execConf = new ExecutionConfig()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "verify(ctx).currentWatermark()@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "InternalWindowFunction.InternalWindowContext ctx = mock()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "verify(mock).apply(w,i,c)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "windowFunction.close()@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "windowFunction.open(config)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "windowFunction.process(42L,w,ctx,i,c)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Iterable<Long> i = (Iterable<Long>)mock()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testInternalIterableProcessWindowFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20->24 [style = solid, label="i"];
3->24 [style = bold, label=""];
10->14 [style = solid, label="stringType"];
6->18 [style = bold, label=""];
21->3 [style = bold, label=""];
4->30 [style = solid, label="w"];
33->21 [style = solid, label="mock"];
19->6 [style = bold, label=""];
13->4 [style = bold, label=""];
8->12 [style = bold, label=""];
4->31 [style = solid, label="w"];
0->11 [style = solid, label="config"];
33->4 [style = solid, label="mock"];
2->11 [style = bold, label=""];
6->21 [style = solid, label="mock"];
30->9 [style = bold, label=""];
20->30 [style = solid, label="i"];
21->5 [style = solid, label="c"];
9->15 [style = bold, label=""];
33->34 [style = bold, label=""];
20->5 [style = solid, label="i"];
28->23 [style = bold, label=""];
14->0 [style = bold, label=""];
5->31 [style = dashed, label="0"];
26->27 [style = bold, label=""];
4->20 [style = bold, label=""];
3->5 [style = bold, label=""];
21->30 [style = solid, label="c"];
23->26 [style = bold, label=""];
12->13 [style = bold, label=""];
18->34 [style = dashed, label="0"];
5->17 [style = bold, label=""];
8->13 [style = solid, label="rCtx"];
10->16 [style = solid, label="stringType"];
20->21 [style = bold, label=""];
33->34 [style = solid, label="mock"];
7->14 [style = solid, label="execConf"];
10->7 [style = bold, label=""];
6->20 [style = solid, label="mock"];
29->6 [style = bold, label=""];
6->18 [style = solid, label="mock"];
20->31 [style = solid, label="i"];
34->10 [style = bold, label=""];
21->31 [style = solid, label="c"];
3->31 [style = bold, label=""];
5->25 [style = bold, label=""];
6->3 [style = solid, label="mock"];
0->2 [style = solid, label="config"];
6->4 [style = solid, label="mock"];
33->8 [style = solid, label="mock"];
18->10 [style = bold, label=""];
16->14 [style = bold, label=""];
11->8 [style = bold, label=""];
4->5 [style = solid, label="w"];
17->9 [style = bold, label=""];
22->28 [style = bold, label=""];
21->24 [style = solid, label="c"];
3->31 [style = solid, label="ctx"];
33->3 [style = solid, label="mock"];
31->30 [style = bold, label=""];
3->5 [style = solid, label="ctx"];
7->1 [style = bold, label=""];
0->2 [style = bold, label=""];
32->33 [style = bold, label=""];
8->12 [style = solid, label="rCtx"];
1->16 [style = bold, label=""];
20->17 [style = solid, label="i"];
7->16 [style = solid, label="execConf"];
24->5 [style = bold, label=""];
25->22 [style = bold, label=""];
33->20 [style = solid, label="mock"];
21->17 [style = solid, label="c"];
18->16 [style = solid, label="windowFunction"];
6->8 [style = solid, label="mock"];
34->16 [style = solid, label="windowFunction"];
6->33 [style = dashed, label="0"];
}
