digraph {
9 [style = filled, label = "testFailsInjection['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final JsonConfigProvider<LookupListeningAnnouncerConfig> configProvider = JsonConfigProvider.of(PROPERTY_BASE,)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testFailsInjection['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final LookupListeningAnnouncerConfig config = configProvider.get().get()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(lookupTier,config.getLookupTier())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final JsonConfigProvider<LookupListeningAnnouncerConfig> configProvider = JsonConfigProvider.of(propertyBase,)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "properties.put(PROPERTY_BASE + \".lookupTierIsDatasource\",\"true\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final JsonConfigurator configurator = injector.getBinding().getProvider().get()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "properties.put(PROPERTY_BASE + \".lookupTier\",lookupTier)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testDatasourceInjection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "properties.put(propertyBase + \".lookupTierIsDatasource\",\"true\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "configProvider.inject(properties,configurator)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "properties.put(propertyBase + \".lookupTier\",lookupTier)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final String lookupTier = \"some_tier\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(\"some_datasource\",config.getLookupTier())@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
4->3 [style = bold, label=""];
5->12 [style = dashed, label="0"];
7->1 [style = bold, label=""];
8->6 [style = dashed, label="0"];
0->8 [style = solid, label="lookupTier"];
9->0 [style = bold, label=""];
11->1 [style = bold, label=""];
12->11 [style = bold, label=""];
7->11 [style = dashed, label="0"];
4->1 [style = solid, label="configurator"];
0->3 [style = solid, label="lookupTier"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
0->4 [style = bold, label=""];
10->12 [style = bold, label=""];
0->10 [style = solid, label="lookupTier"];
6->8 [style = bold, label=""];
5->7 [style = bold, label=""];
3->10 [style = dashed, label="0"];
13->7 [style = solid, label="configurator"];
14->13 [style = bold, label=""];
4->5 [style = bold, label=""];
13->4 [style = bold, label=""];
}
