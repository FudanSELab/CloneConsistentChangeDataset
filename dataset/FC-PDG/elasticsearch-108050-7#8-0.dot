digraph {
14 [style = filled, label = "throw new IllegalStateException(message)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Files.isDirectory(indicesPath)@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "ensureNoShardData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Path indexPath@@@8@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "indexMetadataPaths.isEmpty() == false@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<Path> indexMetadataPaths = collectIndexMetadataPaths(nodePaths)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "throw new IllegalStateException(\"Node is started with \" + Node.NODE_DATA_SETTING.getKey() + \"=false, but has shard data: \" + shardDataPaths)@@@19@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<Path> shardDataPaths = collectShardDataPaths(nodePaths)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "shardStream.filter(null).map(null).forEach(null)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "indexStream@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Files.isDirectory(indexPath)@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "List<Path> shardDataPaths = new ArrayList<>()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final NodePath(( nodePaths@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final NodePath(( nodePaths@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Path indicesPath = nodePath.indicesPath@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "final String message = String.format(Locale.ROOT,\"node does not have the %s role but has shard data: %s. Use 'elasticsearch-node repurpose' tool to clean up\",DiscoveryNodeRole.DATA_ROLE.roleName(),shardDataPaths)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "shardDataPaths.isEmpty() == false@@@18@@@['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ensureNoIndexMetadata['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "shardDataPaths.isEmpty() == false@@@4@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "throw new IllegalStateException(\"Node is started with \" + Node.NODE_DATA_SETTING.getKey() + \"=false and \" + Node.NODE_MASTER_SETTING.getKey() + \"=false, but has index metadata: \" + indexMetadataPaths + \". Use 'elasticsearch-node repurpose' tool to clean up\")@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ensureNoShardData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
15->13 [style = bold, label=""];
5->12 [style = dashed, label="0"];
1->8 [style = bold, label=""];
4->17 [style = dashed, label="0"];
0->6 [style = bold, label=""];
5->2 [style = solid, label="shardDataPaths"];
16->17 [style = dotted, label="true"];
12->15 [style = bold, label=""];
18->19 [style = dotted, label="true"];
18->19 [style = bold, label=""];
1->8 [style = solid, label="indicesPath"];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
11->12 [style = bold, label=""];
20->19 [style = solid, label="indexMetadataPaths"];
12->13 [style = solid, label="shardDataPaths"];
11->4 [style = dotted, label="true"];
15->14 [style = dotted, label="true"];
8->3 [style = dotted, label="true"];
5->20 [style = dashed, label="0"];
15->13 [style = dotted, label="true"];
20->18 [style = bold, label=""];
8->1 [style = bold, label=""];
6->1 [style = bold, label=""];
5->1 [style = bold, label=""];
0->10 [style = bold, label=""];
7->5 [style = bold, label=""];
4->12 [style = solid, label="nodePaths"];
8->6 [style = dotted, label="true"];
10->2 [style = dotted, label="true"];
0->1 [style = bold, label=""];
6->10 [style = bold, label=""];
7->4 [style = dotted, label="true"];
13->14 [style = solid, label="message"];
10->2 [style = bold, label=""];
17->20 [style = solid, label="nodePaths"];
8->9 [style = dotted, label="true"];
6->0 [style = dotted, label="true"];
16->20 [style = bold, label=""];
13->14 [style = bold, label=""];
}
