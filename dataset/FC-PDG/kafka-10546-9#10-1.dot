digraph {
25 [style = filled, label = "assertThat(result1.getValue(),equalTo(source1Value))@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "final Long source1Key = 42L@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final String sourceName1 = \"source-1\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final ConsumerRecord<byte((,byte((> consumerRecord2 = source2Factory.create(source2Key,source2Value)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertThat(result1.getKey(),equalTo(source1Key))@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "testDriver.pipeInput(consumerRecord1)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final Integer source2Key = 73@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "final String source1Value = \"anyString\"@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final ConsumerRecordFactory<Long,String> source1Factory = new ConsumerRecordFactory<>(SOURCE_TOPIC_1,Serdes.Long().serializer(),Serdes.String().serializer())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "shouldUseSourceSpecificDeserializers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "shouldUseSinkSpecificSerializers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final TestRecord<Integer,Double> result2 = testDriver.readRecord(SINK_TOPIC_1,Serdes.Integer().deserializer(),Serdes.Double().deserializer())@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_1,Serdes.Long().deserializer(),Serdes.String().deserializer()),source1Key,source1Value)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final Topology topology = new Topology()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "topology.addSink(\"sink-2\",SINK_TOPIC_2,Serdes.Integer().serializer(),Serdes.Double().serializer(),sourceName2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final String source1Value = \"anyString\"@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testDriver.pipeInput(consumerRecord2)@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testDriver.pipeInput(consumerRecord1)@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "final Long source1Key = 42L@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "topology.addSource(sourceName1,Serdes.Long().deserializer(),Serdes.String().deserializer(),SOURCE_TOPIC_1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final ConsumerRecordFactory<Integer,Double> source2Factory = new ConsumerRecordFactory<>(SOURCE_TOPIC_2,Serdes.Integer().serializer(),Serdes.Double().serializer())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final ConsumerRecordFactory<Integer,Double> source2Factory = new ConsumerRecordFactory<>(SOURCE_TOPIC_2,Serdes.Integer().serializer(),Serdes.Double().serializer())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "final TestRecord<Long,String> result1 = testDriver.readRecord(SINK_TOPIC_1,Serdes.Long().deserializer(),Serdes.String().deserializer())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "testDriver.pipeRecord(SOURCE_TOPIC_1,consumerRecord1,Serdes.Long().serializer(),Serdes.String().serializer(),null)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertThat(result2.getValue(),equalTo(source2Value))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_1,Serdes.Long().deserializer(),Serdes.String().deserializer()),source1Key,source1Value)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "testDriver.pipeInput(consumerRecord2)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final TestRecord<Integer,Double> consumerRecord2 = new TestRecord<>(source2Key,source2Value)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "testDriver.pipeRecord(SOURCE_TOPIC_2,consumerRecord2,Serdes.Integer().serializer(),Serdes.Double().serializer(),null)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_1,Serdes.Integer().deserializer(),Serdes.Double().deserializer()),source2Key,source2Value)@@@35@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Integer source2Key = 73@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final ConsumerRecordFactory<Long,String> source1Factory = new ConsumerRecordFactory<>(SOURCE_TOPIC_1,Serdes.Long().serializer(),Serdes.String().serializer())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "final String sourceName2 = \"source-2\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "topology.addSource(sourceName2,Serdes.Integer().deserializer(),Serdes.Double().deserializer(),SOURCE_TOPIC_2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String processor = \"processor\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "topology.addProcessor(processor,new MockProcessorSupplier(),sourceName1,sourceName2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final TestRecord<Long,String> consumerRecord1 = new TestRecord<>(source1Key,source1Value)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_2,Serdes.Integer().deserializer(),Serdes.Double().deserializer()),source2Key,source2Value)@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final Double source2Value = 3.14@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "final ConsumerRecord<byte((,byte((> consumerRecord1 = source1Factory.create(source1Key,source1Value)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "final ConsumerRecord<byte((,byte((> consumerRecord2 = source2Factory.create(source2Key,source2Value)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "topology.addSink(\"sink\",SINK_TOPIC_1,null,null,processor)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Double source2Value = 3.14@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ConsumerRecord<byte((,byte((> consumerRecord1 = source1Factory.create(source1Key,source1Value)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertThat(result2.getKey(),equalTo(source2Key))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "topology.addSink(\"sink-1\",SINK_TOPIC_1,Serdes.Long().serializer(),Serdes.String().serializer(),sourceName1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "testDriver = new TopologyTestDriver(topology,config)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "shouldUseSourceSpecificDeserializers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6->3 [style = bold, label=""];
7->32 [style = bold, label=""];
32->22 [style = bold, label=""];
19->0 [style = solid, label="source2Key"];
8->27 [style = solid, label="source1Key"];
11->14 [style = bold, label=""];
17->24 [style = dashed, label="0"];
14->3 [style = dashed, label="0"];
21->15 [style = bold, label=""];
40->38 [style = bold, label=""];
15->6 [style = solid, label="processor"];
7->14 [style = solid, label="source2Value"];
23->29 [style = bold, label=""];
7->9 [style = bold, label=""];
7->0 [style = solid, label="source2Value"];
21->2 [style = solid, label="sourceName2"];
10->3 [style = solid, label="topology"];
12->10 [style = bold, label=""];
42->44 [style = bold, label=""];
20->16 [style = bold, label=""];
35->37 [style = bold, label=""];
1->21 [style = bold, label=""];
1->18 [style = solid, label="sourceName1"];
40->45 [style = solid, label="source1Value"];
32->31 [style = solid, label="consumerRecord1"];
19->29 [style = solid, label="source2Key"];
8->4 [style = bold, label=""];
38->47 [style = solid, label="source2Key"];
8->17 [style = solid, label="source1Key"];
24->27 [style = bold, label=""];
27->25 [style = bold, label=""];
21->13 [style = bold, label=""];
45->41 [style = bold, label=""];
15->13 [style = bold, label=""];
43->47 [style = solid, label="source2Value"];
1->13 [style = solid, label="sourceName1"];
22->26 [style = solid, label="consumerRecord2"];
15->18 [style = solid, label="processor"];
4->19 [style = bold, label=""];
2->18 [style = bold, label=""];
6->42 [style = dashed, label="0"];
5->17 [style = bold, label=""];
43->46 [style = bold, label=""];
19->14 [style = solid, label="source2Key"];
47->41 [style = solid, label="consumerRecord2"];
2->39 [style = bold, label=""];
4->9 [style = solid, label="source1Value"];
25->26 [style = bold, label=""];
8->9 [style = solid, label="source1Key"];
30->10 [style = bold, label=""];
9->5 [style = solid, label="consumerRecord1"];
10->1 [style = bold, label=""];
39->42 [style = bold, label=""];
47->36 [style = bold, label=""];
16->8 [style = bold, label=""];
4->32 [style = solid, label="source1Value"];
31->24 [style = bold, label=""];
46->36 [style = solid, label="consumerRecord1"];
44->33 [style = bold, label=""];
9->32 [style = dashed, label="0"];
40->46 [style = solid, label="source1Value"];
21->18 [style = solid, label="sourceName2"];
21->42 [style = solid, label="sourceName2"];
10->44 [style = solid, label="topology"];
18->6 [style = bold, label=""];
3->8 [style = bold, label=""];
5->31 [style = dashed, label="0"];
19->22 [style = solid, label="source2Key"];
38->43 [style = bold, label=""];
0->5 [style = bold, label=""];
13->2 [style = bold, label=""];
38->3 [style = solid, label="source2Key"];
4->25 [style = solid, label="source1Value"];
33->35 [style = bold, label=""];
1->39 [style = solid, label="sourceName1"];
9->0 [style = bold, label=""];
41->3 [style = bold, label=""];
0->11 [style = solid, label="consumerRecord2"];
7->28 [style = solid, label="source2Value"];
22->31 [style = bold, label=""];
46->47 [style = bold, label=""];
34->10 [style = bold, label=""];
37->45 [style = solid, label="source1Key"];
0->22 [style = dashed, label="0"];
4->17 [style = solid, label="source1Value"];
7->22 [style = solid, label="source2Value"];
29->28 [style = bold, label=""];
3->20 [style = bold, label=""];
26->23 [style = bold, label=""];
8->32 [style = solid, label="source1Key"];
36->45 [style = bold, label=""];
43->3 [style = solid, label="source2Value"];
19->7 [style = bold, label=""];
37->46 [style = solid, label="source1Key"];
37->40 [style = bold, label=""];
17->11 [style = bold, label=""];
}
