digraph {
6 [style = filled, label = "Future<FreeStyleBuild> build = OnlineNodeCommandTest.startBlockingAndFinishingBuild(project,finish)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "build.get()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "build.get()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "j.jenkins.getActiveInstance().doQuietDown()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "QuietDownCommandTest.assertJenkinsNotInQuietMode(j)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "QuietDownCommandTest.assertJenkinsNotInQuietMode(j)@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "j.jenkins.doQuietDown()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "finish.signal()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "cancelQuietDownShouldSuccessOnNoQuietDownedJenkinsAndRunningExecutor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "build = OnlineNodeCommandTest.startBlockingAndFinishingBuild(project,finish)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(((FreeStyleProject)j.jenkins.getItem(\"aProject\")).getBuilds(),hasSize(1))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(((FreeStyleProject)j.jenkins.getItem(\"aProject\")).getBuilds(),hasSize(2))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(((FreeStyleProject)j.jenkins.getItem(\"aProject\")).getBuilds(),hasSize(1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "cancelQuietDownShouldSuccessOnQuietDownedJenkinsAndRunningExecutor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "j.assertBuildStatusSuccess(build)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final FreeStyleProject project = j.createFreeStyleProject(\"aProject\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "QuietDownCommandTest.assertJenkinsNotInQuietMode(j)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final OneShotEvent finish = new OneShotEvent()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(project.isBuilding(),equalTo(false))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "j.assertBuildStatusSuccess(build)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "finish.signal()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Jenkins.ADMINISTER).invoke()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "cancelQuietDownShouldSuccessOnQuietDownedJenkinsAndRunningExecutor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(project.isBuilding(),equalTo(true))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(result,succeededSilently())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "QuietDownCommandTest.assertJenkinsInQuietMode(j)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(project.isBuilding(),equalTo(true))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(project.isBuilding(),equalTo(false))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(((FreeStyleProject)j.jenkins.getItem(\"aProject\")).getBuilds(),hasSize(2))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->19 [style = solid, label="project"];
7->12 [style = bold, label=""];
22->16 [style = bold, label=""];
24->0 [style = bold, label=""];
4->15 [style = bold, label=""];
13->6 [style = solid, label="finish"];
8->14 [style = bold, label=""];
13->19 [style = solid, label="finish"];
23->3 [style = bold, label=""];
9->10 [style = bold, label=""];
16->2 [style = bold, label=""];
17->6 [style = solid, label="project"];
20->22 [style = solid, label="result"];
19->8 [style = bold, label=""];
1->9 [style = bold, label=""];
20->22 [style = bold, label=""];
15->26 [style = bold, label=""];
6->4 [style = bold, label=""];
5->1 [style = bold, label=""];
26->0 [style = bold, label=""];
24->26 [style = dashed, label="0"];
6->23 [style = solid, label="build"];
3->19 [style = bold, label=""];
10->25 [style = bold, label=""];
18->5 [style = bold, label=""];
15->24 [style = bold, label=""];
4->20 [style = bold, label=""];
27->17 [style = bold, label=""];
28->17 [style = bold, label=""];
0->20 [style = bold, label=""];
14->18 [style = bold, label=""];
17->13 [style = bold, label=""];
12->23 [style = bold, label=""];
13->6 [style = bold, label=""];
21->17 [style = bold, label=""];
2->11 [style = bold, label=""];
11->7 [style = bold, label=""];
19->10 [style = solid, label="build"];
}
