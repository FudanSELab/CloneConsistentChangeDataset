digraph {
21 [style = filled, label = "testRecoverIndexFileAfterIOExceptions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "MergedBlockMeta blockMeta = pushResolver.getMergedBlockMeta(TEST_APP,0,0,0)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "StreamCallbackWithID callback3 = pushResolver.receiveBlockDataAsStream(new PushBlockStream(TEST_APP,NO_ATTEMPT_ID,0,2,0,0))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"index position\",24,testIndexFile.getPos())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RemoteBlockPushResolver.AppShufflePartitionInfo partitionInfo = callback1.getPartitionInfo()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testIndexFile.restore()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestMergeShuffleFile testIndexFile = (TestMergeShuffleFile)partitionInfo.getIndexFile()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "MergeStatuses statuses = pushResolver.finalizeShuffleMerge(new FinalizeShuffleMerge(TEST_APP,NO_ATTEMPT_ID,0))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "StreamCallbackWithID callback3 = pushResolver.receiveBlockDataAsStream(new PushBlockStream(TEST_APP,NO_ATTEMPT_ID,0,0,2,0,0))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "RemoteBlockPushResolver.PushBlockStreamCallback callback1 = (RemoteBlockPushResolver.PushBlockStreamCallback)pushResolver.receiveBlockDataAsStream(new PushBlockStream(TEST_APP,NO_ATTEMPT_ID,0,0,0,0,0))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "MergedBlockMeta blockMeta = pushResolver.getMergedBlockMeta(TEST_APP,0,0)@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "callback3.onComplete(callback3.getID())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testRecoverIndexFileAfterIOExceptionsInFinalize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "StreamCallbackWithID callback2 = pushResolver.receiveBlockDataAsStream(new PushBlockStream(TEST_APP,NO_ATTEMPT_ID,0,0,1,0,0))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "useTestFiles(true,false)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "callback3.onData(callback3.getID(),ByteBuffer.wrap(new byte(((())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "callback1.onData(callback1.getID(),ByteBuffer.wrap(new byte(((())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"index position\",16,testIndexFile.getPos())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "callback2.onData(callback2.getID(),ByteBuffer.wrap(new byte(((())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "StreamCallbackWithID callback2 = pushResolver.receiveBlockDataAsStream(new PushBlockStream(TEST_APP,NO_ATTEMPT_ID,0,1,0,0))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "callback1.onComplete(callback1.getID())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "validateChunks(TEST_APP,0,0,blockMeta,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a5e2b3,new int((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a5e2b8)@@@23@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "validateChunks(TEST_APP,0,0,0,blockMeta,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a5e206,new int((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a5e20b)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "callback2.onComplete(callback2.getID())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testIndexFile.close()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testRecoverIndexFileAfterIOExceptions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"index position\",24,testIndexFile.getPos())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RemoteBlockPushResolver.PushBlockStreamCallback callback1 = (RemoteBlockPushResolver.PushBlockStreamCallback)pushResolver.receiveBlockDataAsStream(new PushBlockStream(TEST_APP,NO_ATTEMPT_ID,0,0,0,0))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "MergeStatuses statuses = pushResolver.finalizeShuffleMerge(new FinalizeShuffleMerge(TEST_APP,NO_ATTEMPT_ID,0,0))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "validateMergeStatuses(statuses,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a5e29a,new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a5e29e)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
2->23 [style = dashed, label="0"];
24->12 [style = bold, label=""];
27->11 [style = solid, label="statuses"];
16->8 [style = bold, label=""];
20->9 [style = bold, label=""];
4->6 [style = bold, label=""];
25->13 [style = bold, label=""];
3->25 [style = bold, label=""];
8->18 [style = bold, label=""];
26->5 [style = bold, label=""];
0->12 [style = bold, label=""];
28->11 [style = bold, label=""];
18->26 [style = bold, label=""];
18->15 [style = bold, label=""];
14->11 [style = solid, label="statuses"];
1->20 [style = bold, label=""];
14->28 [style = bold, label=""];
7->0 [style = bold, label=""];
23->22 [style = solid, label="blockMeta"];
12->1 [style = bold, label=""];
14->27 [style = dashed, label="0"];
13->16 [style = bold, label=""];
11->2 [style = bold, label=""];
15->5 [style = bold, label=""];
6->14 [style = bold, label=""];
3->10 [style = bold, label=""];
6->27 [style = bold, label=""];
7->24 [style = bold, label=""];
23->22 [style = bold, label=""];
27->11 [style = bold, label=""];
10->13 [style = bold, label=""];
2->17 [style = solid, label="blockMeta"];
5->4 [style = bold, label=""];
15->26 [style = dashed, label="0"];
0->24 [style = dashed, label="0"];
9->3 [style = bold, label=""];
21->7 [style = bold, label=""];
29->7 [style = bold, label=""];
14->11 [style = bold, label=""];
19->7 [style = bold, label=""];
11->23 [style = bold, label=""];
18->14 [style = bold, label=""];
10->25 [style = dashed, label="0"];
17->22 [style = dashed, label="0"];
}
