digraph {
16 [style = filled, label = "extractionMap.put(\"\",\"NOT_USED\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,null,true,false)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testGroupByWithExtractionDimFilterNullDims['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,\"REPLACED_VALUE\",true,false)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "extractionMap.put(\"\",\"SHOULD_NOT_BE_USED\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testGroupByWithExtractionDimFilterKeyisNull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,results,\"extraction-dim-filter\")@@@18@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory,runner,query)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "LookupExtractionFn lookupExtractionFn@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "GroupByQuery query = GroupByQuery.builder().setDataSource(QueryRunnerTestHelper.dataSource).setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird).setDimensions(new DefaultDimensionSpec(\"null_column\",\"alias\")).setAggregatorSpecs(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory(\"idx\",\"index\")).setGranularity(QueryRunnerTestHelper.dayGran).setDimFilter(new ExtractionDimFilter(\"null_column\",\"REPLACED_VALUE\",lookupExtractionFn,null)).build()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "extractionMap.put(\"\",\"EMPTY\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<Row> expectedResults = Arrays.asList(GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",null,\"rows\",13L,\"idx\",6619L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-02\",\"alias\",null,\"rows\",13L,\"idx\",5827L))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,null,true,true)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MapLookupExtractor mapLookupExtractor = new MapLookupExtractor(extractionMap,false)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,results,\"\")@@@17@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "extractionMap.put(\"\",\"EMPTY\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "GroupByQuery query = GroupByQuery.builder().setDataSource(QueryRunnerTestHelper.dataSource).setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird).setDimensions(new DefaultDimensionSpec(\"null_column\",\"alias\")).setAggregatorSpecs(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory(\"idx\",\"index\")).setGranularity(QueryRunnerTestHelper.dayGran).setDimFilter(new ExtractionDimFilter(\"null_column\",\"EMPTY\",lookupExtractionFn,null)).build()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,\"EMPTY\",true,true)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testGroupByWithExtractionDimFilterNullDims['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "NullHandling.replaceWithDefault()@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "extractionMap.put(\"\",\"REPLACED_VALUE\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Map<String,String> extractionMap = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->6 [style = dotted, label="true"];
13->21 [style = dotted, label="true"];
7->8 [style = bold, label=""];
8->9 [style = bold, label=""];
4->7 [style = bold, label=""];
8->21 [style = solid, label="mapLookupExtractor"];
13->5 [style = dotted, label="false"];
13->11 [style = dotted, label="false"];
8->3 [style = solid, label="mapLookupExtractor"];
10->14 [style = dashed, label="0"];
12->14 [style = bold, label=""];
1->20 [style = dashed, label="0"];
21->17 [style = bold, label=""];
9->13 [style = bold, label=""];
13->6 [style = bold, label=""];
8->11 [style = solid, label="mapLookupExtractor"];
11->1 [style = bold, label=""];
0->8 [style = bold, label=""];
12->14 [style = solid, label="results"];
17->20 [style = bold, label=""];
13->16 [style = dotted, label="false"];
15->7 [style = bold, label=""];
13->17 [style = dotted, label="true"];
5->18 [style = dashed, label="0"];
13->18 [style = bold, label=""];
3->1 [style = bold, label=""];
7->8 [style = solid, label="extractionMap"];
12->10 [style = solid, label="results"];
12->10 [style = bold, label=""];
13->18 [style = dotted, label="false"];
2->14 [style = solid, label="expectedResults"];
2->10 [style = solid, label="expectedResults"];
5->11 [style = bold, label=""];
7->0 [style = bold, label=""];
6->3 [style = bold, label=""];
18->16 [style = bold, label=""];
13->3 [style = dotted, label="true"];
16->20 [style = bold, label=""];
6->21 [style = dashed, label="0"];
1->12 [style = solid, label="query"];
20->2 [style = bold, label=""];
19->7 [style = bold, label=""];
20->12 [style = solid, label="query"];
1->2 [style = bold, label=""];
8->18 [style = solid, label="mapLookupExtractor"];
13->5 [style = bold, label=""];
2->12 [style = bold, label=""];
13->21 [style = bold, label=""];
}
