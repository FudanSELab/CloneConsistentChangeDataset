digraph {
40 [style = filled, label = "assertEquals(4,pp.getReplicaPlacements().size())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "i == 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "nodeBuilder.setFreeDiskGB(100L)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "PlacementPlan pp = plugin.computePlacement(cluster,placementRequest,attributeFetcher,placementPlanFactory)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "collectionBuilder.initializeShardsReplicas(2,0,0,0,clusterBuilder.getLiveNodeBuilders())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.AVAILABILITY_ZONE_SYSPROP,\"az2\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String az = azOptional.get()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testFreeDiskConstraints['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Map<Replica.ReplicaType,Map<String,Map<String,AtomicInteger>>> replicas = new HashMap<>()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "nodeBuilder.setFreeDiskGB(100.0)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "PlacementRequestImpl placementRequest = new PlacementRequestImpl(solrCollection,StreamSupport.stream(solrCollection.shards().spliterator(),false).map(null).collect(Collectors.toSet()),cluster.getLiveNodes(),2,2,2)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "nodeBuilder.setFreeDiskGB(100L)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "int NUM_NODES = 3@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(12,pp.getReplicaPlacements().size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String collectionName = \"azCollection\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testAvailabilityZones['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "String collectionName = \"freeDiskCollection\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Node smallNode = null@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Builders.NodeBuilder nodeBuilder = clusterBuilder.getLiveNodeBuilders().get(i)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "!azOptional.isPresent()@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Cluster cluster = clusterBuilder.build()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Builders.ClusterBuilder clusterBuilder = Builders.newClusterBuilder().initializeLiveNodes(NUM_NODES)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "AttributeValues attributeValues = attributeFetcher.fetchAttributes()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "PlacementPlanFactory placementPlanFactory = new PlacementPlanFactoryImpl()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.AVAILABILITY_ZONE_SYSPROP,\"az1\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int NUM_NODES = 6@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Builders.CollectionBuilder collectionBuilder = Builders.newCollectionBuilder(collectionName)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "replicas.forEach(null)@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "AttributeFetcher attributeFetcher = clusterBuilder.buildAttributeFetcher()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertFalse(\"should not put any replicas on \" + smallNode,rp.getNode().equals(smallNode))@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "nodeBuilder.setCoreCount(0)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "PlacementRequestImpl placementRequest = new PlacementRequestImpl(solrCollection,StreamSupport.stream(solrCollection.shards().spliterator(),false).map(null).collect(Collectors.toSet()),cluster.getLiveNodes(),1,0,1)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "clusterBuilder.addCollection(collectionBuilder)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "replicas.computeIfAbsent(rp.getReplicaType(),null).computeIfAbsent(rp.getShardName(),null).computeIfAbsent(az,null).incrementAndGet()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "smallNode = nodeBuilder.build()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i < NUM_NODES / 2@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SolrCollection solrCollection = cluster.getCollection(collectionName)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i < NUM_NODES@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "fail(\"missing AZ sysprop for node \" + rp.getNode())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testAvailabilityZones['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "nodeBuilder.setFreeDiskGB(1L)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Optional<String> azOptional = attributeValues.getSystemProperty(rp.getNode(),AffinityPlacementFactory.AVAILABILITY_ZONE_SYSPROP)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->38 [style = dashed, label="0"];
14->3 [style = bold, label=""];
1->37 [style = solid, label="i"];
23->24 [style = solid, label="placementRequest"];
10->24 [style = bold, label=""];
16->9 [style = solid, label="i"];
5->40 [style = dashed, label="0"];
38->42 [style = bold, label=""];
9->6 [style = bold, label=""];
12->28 [style = solid, label="collectionName"];
0->14 [style = bold, label=""];
38->28 [style = solid, label="collectionName"];
17->24 [style = solid, label="cluster"];
12->18 [style = bold, label=""];
14->11 [style = dotted, label="true"];
29->1 [style = bold, label=""];
18->19 [style = solid, label="NUM_NODES"];
9->29 [style = bold, label=""];
14->11 [style = bold, label=""];
27->25 [style = bold, label=""];
1->13 [style = solid, label="i"];
22->13 [style = bold, label=""];
42->19 [style = bold, label=""];
19->34 [style = bold, label=""];
21->0 [style = bold, label=""];
1->22 [style = solid, label="i"];
18->19 [style = bold, label=""];
39->43 [style = solid, label="smallNode"];
24->40 [style = bold, label=""];
42->19 [style = solid, label="NUM_NODES"];
18->9 [style = solid, label="NUM_NODES"];
16->37 [style = solid, label="i"];
24->5 [style = bold, label=""];
34->43 [style = solid, label="smallNode"];
18->42 [style = dashed, label="0"];
4->23 [style = solid, label="solrCollection"];
3->2 [style = bold, label=""];
15->9 [style = bold, label=""];
16->1 [style = solid, label="i"];
22->13 [style = dotted, label="true"];
33->24 [style = solid, label="placementRequest"];
22->9 [style = dotted, label="true"];
22->32 [style = dotted, label="true"];
12->4 [style = solid, label="collectionName"];
4->23 [style = bold, label=""];
30->15 [style = bold, label=""];
23->20 [style = bold, label=""];
18->22 [style = solid, label="NUM_NODES"];
1->9 [style = solid, label="i"];
10->24 [style = solid, label="attributeFetcher"];
37->41 [style = bold, label=""];
35->39 [style = bold, label=""];
5->26 [style = bold, label=""];
22->37 [style = dotted, label="true"];
15->32 [style = dashed, label="0"];
30->32 [style = bold, label=""];
22->28 [style = bold, label=""];
4->33 [style = bold, label=""];
25->17 [style = bold, label=""];
31->12 [style = bold, label=""];
23->33 [style = dashed, label="0"];
19->16 [style = bold, label=""];
26->21 [style = bold, label=""];
42->22 [style = solid, label="NUM_NODES"];
6->1 [style = bold, label=""];
32->9 [style = bold, label=""];
37->35 [style = dotted, label="true"];
22->1 [style = dotted, label="true"];
2->0 [style = bold, label=""];
11->3 [style = bold, label=""];
4->33 [style = solid, label="solrCollection"];
34->16 [style = bold, label=""];
9->6 [style = dotted, label="false"];
39->1 [style = bold, label=""];
37->35 [style = bold, label=""];
40->43 [style = bold, label=""];
22->15 [style = dotted, label="true"];
8->12 [style = bold, label=""];
17->4 [style = bold, label=""];
28->25 [style = solid, label="collectionBuilder"];
9->29 [style = dotted, label="true"];
33->20 [style = bold, label=""];
20->24 [style = solid, label="placementPlanFactory"];
37->41 [style = dotted, label="false"];
16->22 [style = solid, label="i"];
13->30 [style = bold, label=""];
30->37 [style = bold, label=""];
41->1 [style = bold, label=""];
16->22 [style = bold, label=""];
38->4 [style = solid, label="collectionName"];
20->10 [style = bold, label=""];
1->22 [style = bold, label=""];
37->39 [style = dotted, label="true"];
16->13 [style = solid, label="i"];
28->27 [style = bold, label=""];
2->7 [style = bold, label=""];
36->38 [style = bold, label=""];
22->30 [style = dotted, label="true"];
}
