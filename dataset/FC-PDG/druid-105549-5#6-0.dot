digraph {
23 [style = filled, label = "return visibles@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return Collections.emptyList()@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "return Collections.emptyList()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<AtomicUpdateGroup<T>> groups@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "currEntry != null@@@12@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "final TreeMap<RootPartitionRange,AtomicUpdateGroup<T>> rangeToGroup = new TreeMap<>()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "RootPartitionRange rangeOfAug@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "findLatestNonFullyAvailableAtomicUpdateGroups['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "!rangeOfAug.equals(foundRange)@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return Collections.emptyList()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "lowerEntry.getKey().endPartitionId != currEntry.getKey().startPartitionId@@@15@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "short minorVersion@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "findLatestFullyAvailableOvershadowedAtomicUpdateGroups['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "visibles.add(currEntry.getValue())@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "final List<AtomicUpdateGroup<T>> overshadowedGroups = findOvershadowedBy(rangeOfAug,minorVersion,State.OVERSHADOWED)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "return Collections.emptyList()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "throw new ISE(\"This method should be called only when there is no fully available group in the given state.\")@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "findLatestNonFullyAvailableAtomicUpdateGroups['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "rangeToGroup.put(RootPartitionRange.of(group),group)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "return visibles@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "overshadowedGroups.isEmpty()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "!atomicUpdateGroup.isFull()@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final RootPartitionRange foundRange = RootPartitionRange.of(visibles.get(0).getStartRootPartitionId(),visibles.get(visibles.size() - 1).getEndRootPartitionId())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final List<AtomicUpdateGroup<T>> visibles = new ArrayList<>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "currEntry = lowerEntry@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final List<AtomicUpdateGroup<T>> visibles = new ArrayList<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "visibles.sort(Comparator.comparing(null))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Entry<RootPartitionRange,AtomicUpdateGroup<T>> currEntry = rangeToGroup.lastEntry()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "visibles.add(atomicUpdateGroup)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "return Collections.emptyList()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "lowerEntry != null@@@14@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "groups.isEmpty()@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "!manager.standbyGroups.isEmpty()@@@7@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return visibles@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "final OvershadowableManager<T> manager = new OvershadowableManager<>(overshadowedGroups)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final Entry<RootPartitionRange,AtomicUpdateGroup<T>> lowerEntry = rangeToGroup.lowerEntry(currEntry.getKey())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final OvershadowableManager<T> manager = new OvershadowableManager<>(groups)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->2 [style = bold, label=""];
30->29 [style = solid, label="rangeOfAug"];
35->33 [style = bold, label=""];
21->22 [style = bold, label=""];
20->10 [style = bold, label=""];
10->12 [style = dotted, label="true"];
13->19 [style = bold, label=""];
8->0 [style = bold, label=""];
6->7 [style = dotted, label="true"];
24->26 [style = dotted, label="true"];
14->18 [style = bold, label=""];
17->7 [style = dotted, label="true"];
15->12 [style = bold, label=""];
15->12 [style = solid, label="lowerEntry"];
1->21 [style = bold, label=""];
16->19 [style = bold, label=""];
25->34 [style = bold, label=""];
7->30 [style = dashed, label="0"];
12->13 [style = dotted, label="true"];
9->2 [style = bold, label=""];
27->23 [style = bold, label=""];
13->16 [style = dotted, label="true"];
35->8 [style = dotted, label="true"];
1->29 [style = dashed, label="0"];
3->25 [style = dashed, label="0"];
31->32 [style = bold, label=""];
33->28 [style = bold, label=""];
36->23 [style = bold, label=""];
7->3 [style = solid, label="groups"];
4->2 [style = bold, label=""];
2->8 [style = bold, label=""];
12->13 [style = bold, label=""];
11->10 [style = solid, label="currEntry"];
28->27 [style = bold, label=""];
2->0 [style = solid, label="visibles"];
33->35 [style = bold, label=""];
27->36 [style = bold, label=""];
1->3 [style = bold, label=""];
11->10 [style = bold, label=""];
32->25 [style = bold, label=""];
19->11 [style = bold, label=""];
5->21 [style = bold, label=""];
1->5 [style = dotted, label="true"];
13->16 [style = bold, label=""];
4->9 [style = bold, label=""];
2->20 [style = bold, label=""];
20->10 [style = solid, label="currEntry"];
12->19 [style = bold, label=""];
29->31 [style = bold, label=""];
34->23 [style = solid, label="visibles"];
31->32 [style = dotted, label="true"];
27->36 [style = dotted, label="true"];
2->18 [style = solid, label="visibles"];
4->9 [style = dotted, label="true"];
35->8 [style = bold, label=""];
10->15 [style = bold, label=""];
5->3 [style = bold, label=""];
10->19 [style = dotted, label="true"];
34->35 [style = bold, label=""];
31->25 [style = bold, label=""];
10->15 [style = dotted, label="true"];
10->11 [style = dotted, label="true"];
26->29 [style = solid, label="minorVersion"];
24->29 [style = bold, label=""];
8->33 [style = bold, label=""];
6->1 [style = bold, label=""];
29->25 [style = solid, label="overshadowedGroups"];
15->11 [style = solid, label="lowerEntry"];
24->30 [style = dotted, label="true"];
3->4 [style = bold, label=""];
10->14 [style = bold, label=""];
17->1 [style = bold, label=""];
1->5 [style = bold, label=""];
}
