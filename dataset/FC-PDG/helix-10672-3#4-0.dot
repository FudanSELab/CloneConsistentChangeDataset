digraph {
3 [style = filled, label = "idealState.isExternalViewDisabled()@@@38@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "verifyState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "!result@@@47@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "return false@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "_perTypeJobMonitorMap@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Set<String> actualLiveNodes = cache.getLiveInstances().keySet()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Iterator<Map.Entry<String,IdealState>> it = idealStates.entrySet().iterator()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Map<String,ExternalView> extViews = _accessor.getChildValuesMap(keyBuilder.externalViews())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<String,IdealState> idealStates = new HashMap<>(cache.getIdealStates())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "idealStates.keySet().retainAll(_resources)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "ResourceControllerDataProvider cache = new ResourceControllerDataProvider()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "_expectLiveInstances != null && !_expectLiveInstances.isEmpty()@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "idealStates.put(resource,new IdealState(resource))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "cache.refresh(_accessor)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "jobIter.remove()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "extViews == null@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "pair.getValue().getStateModelDefRef().equals(TaskConstants.STATE_MODEL_NAME)@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "it.remove()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ClusterDataCache cache = new ClusterDataCache()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "Iterator<Map.Entry<String,JobMonitor>> jobIter = _perTypeJobMonitorMap.entrySet().iterator()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "boolean result = verifyExternalView(cache,extView,idealState)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "unregister(getObjectName(getJobBeanName(jobEntry.getKey())))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "!_expectLiveInstances.equals(actualLiveNodes)@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "PropertyKey.Builder keyBuilder = _accessor.keyBuilder()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "jobIter.hasNext()@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "unregisterAllJobs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return true@@@51@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "extViews = Collections.emptyMap()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ExternalView extView = extViews.get(resourceName)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return false@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "LOG.debug(\"externalView for \" + resourceName + \" is not available\")@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "IdealState idealState = idealStates.get(resourceName)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Map.Entry<String,IdealState> pair = it.next()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Map.Entry<String,JobMonitor> jobEntry = jobIter.next()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "it.hasNext()@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return false@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "_resources != null && !_resources.isEmpty()@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "extView == null@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verifyState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "extViews.keySet().retainAll(_resources)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "!idealStates.containsKey(resource)@@@30@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24->28 [style = bold, label=""];
8->28 [style = bold, label=""];
30->10 [style = solid, label="cache"];
9->12 [style = dotted, label="true"];
3->17 [style = dotted, label="false"];
25->1 [style = bold, label=""];
36->40 [style = bold, label=""];
19->25 [style = dotted, label="true"];
5->9 [style = bold, label=""];
3->1 [style = bold, label=""];
25->23 [style = bold, label=""];
14->26 [style = dotted, label="true"];
16->24 [style = bold, label=""];
10->19 [style = bold, label=""];
18->33 [style = bold, label=""];
8->16 [style = dotted, label="true"];
38->39 [style = dotted, label="true"];
26->14 [style = bold, label=""];
18->30 [style = bold, label=""];
7->31 [style = dotted, label="true"];
15->20 [style = dotted, label="true"];
28->21 [style = solid, label="extViews"];
23->10 [style = solid, label="extView"];
7->31 [style = bold, label=""];
30->33 [style = dashed, label="0"];
38->36 [style = dotted, label="true"];
40->38 [style = bold, label=""];
2->10 [style = bold, label=""];
15->7 [style = dotted, label="true"];
38->39 [style = bold, label=""];
31->15 [style = bold, label=""];
9->6 [style = dotted, label="true"];
30->29 [style = bold, label=""];
27->15 [style = bold, label=""];
8->4 [style = dotted, label="true"];
19->25 [style = bold, label=""];
9->6 [style = bold, label=""];
34->38 [style = dotted, label="true"];
33->29 [style = bold, label=""];
14->26 [style = bold, label=""];
22->3 [style = bold, label=""];
21->5 [style = bold, label=""];
33->10 [style = solid, label="cache"];
19->1 [style = bold, label=""];
3->23 [style = bold, label=""];
28->21 [style = bold, label=""];
21->9 [style = bold, label=""];
16->28 [style = bold, label=""];
14->23 [style = bold, label=""];
17->2 [style = bold, label=""];
34->37 [style = bold, label=""];
23->13 [style = bold, label=""];
15->20 [style = bold, label=""];
19->23 [style = bold, label=""];
37->38 [style = bold, label=""];
26->23 [style = bold, label=""];
12->14 [style = bold, label=""];
22->10 [style = bold, label=""];
9->14 [style = bold, label=""];
22->3 [style = dotted, label="true"];
7->15 [style = bold, label=""];
3->17 [style = bold, label=""];
0->18 [style = bold, label=""];
21->5 [style = dotted, label="true"];
13->22 [style = bold, label=""];
8->4 [style = bold, label=""];
32->18 [style = bold, label=""];
20->7 [style = bold, label=""];
35->34 [style = bold, label=""];
13->10 [style = solid, label="idealState"];
38->40 [style = dotted, label="true"];
3->2 [style = dotted, label="false"];
34->37 [style = dotted, label="true"];
39->36 [style = bold, label=""];
15->8 [style = bold, label=""];
29->11 [style = bold, label=""];
23->22 [style = solid, label="extView"];
4->16 [style = bold, label=""];
16->24 [style = dotted, label="true"];
11->27 [style = bold, label=""];
6->12 [style = bold, label=""];
}
