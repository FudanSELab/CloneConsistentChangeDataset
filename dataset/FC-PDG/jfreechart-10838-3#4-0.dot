digraph {
2 [style = filled, label = "CategoryMarker m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow),new BasicStroke(1.1f))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertTrue(m1.getClass() == m2.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "m2.update(7,2,22.0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "CategoryMarker m2 = (CategoryMarker)m1.clone()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertFalse(m1.equals(m2))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(m1.equals(m2))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(m1.equals(m2))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "m1 = new MatrixSeries(\"Test 2\",10,5)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "m2.update(0,0,11.0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "m2.update(0,0,99)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertFalse(m1.equals(m2))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "m1.update(0,0,99)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "MatrixSeries m1 = new MatrixSeries(\"Test\",8,3)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(m1 != m2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "MatrixSeries m2 = new MatrixSeries(\"Test\",8,3)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "m1.update(7,2,22.0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "m1 = new MatrixSeries(\"Test 2\",10,3)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "m1 = new MatrixSeries(\"Test 2\",8,3)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "m1.update(0,0,11.0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertFalse(m1.equals(m2))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(m2.equals(m1))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(m1.equals(m2))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(m1.equals(m2))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "m2 = new MatrixSeries(\"Test 2\",10,5)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "m2 = new MatrixSeries(\"Test 2\",8,3)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(m1.equals(m2))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertFalse(m1.equals(m2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "m2 = new MatrixSeries(\"Test 2\",10,3)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(m1.equals(m2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CategoryMarker m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(1.1f))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
18->26 [style = solid, label="m2"];
10->28 [style = bold, label=""];
18->23 [style = bold, label=""];
8->31 [style = bold, label=""];
2->1 [style = bold, label=""];
31->13 [style = bold, label=""];
25->15 [style = solid, label="m2"];
22->32 [style = bold, label=""];
16->25 [style = bold, label=""];
17->30 [style = bold, label=""];
19->11 [style = bold, label=""];
11->12 [style = bold, label=""];
1->0 [style = bold, label=""];
3->4 [style = bold, label=""];
15->18 [style = bold, label=""];
26->22 [style = bold, label=""];
29->26 [style = bold, label=""];
20->10 [style = bold, label=""];
1->0 [style = solid, label="m2"];
23->29 [style = bold, label=""];
1->4 [style = solid, label="m2"];
22->32 [style = solid, label="m2"];
6->1 [style = bold, label=""];
20->10 [style = solid, label="m2"];
20->13 [style = solid, label="m2"];
5->2 [style = bold, label=""];
2->0 [style = solid, label="m1"];
21->20 [style = bold, label=""];
20->8 [style = solid, label="m2"];
24->21 [style = bold, label=""];
9->15 [style = bold, label=""];
28->8 [style = bold, label=""];
7->6 [style = bold, label=""];
12->14 [style = bold, label=""];
25->19 [style = bold, label=""];
27->17 [style = bold, label=""];
2->6 [style = dashed, label="0"];
22->21 [style = solid, label="m2"];
17->14 [style = solid, label="m1"];
14->9 [style = bold, label=""];
6->0 [style = solid, label="m1"];
30->16 [style = bold, label=""];
32->24 [style = bold, label=""];
25->12 [style = solid, label="m2"];
18->23 [style = solid, label="m2"];
}
