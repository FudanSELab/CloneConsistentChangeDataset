digraph {
1 [style = filled, label = "node.debugCreateNodeLatch.countDown()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertNodeExists(observer,node.getActualPath())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "{node.close()}@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Trigger createdWatchTrigger = Trigger.created()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "observer.checkExists().usingWatcher(deletedTrigger).forPath(node.getActualPath())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "node.start()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "KillSession.kill(curator.getZookeeperClient().getZooKeeper())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "node.start()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Trigger deletedTrigger = Trigger.deleted()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "node.debugCreateNodeLatch = new CountDownLatch(1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertNodeExists(curator,originalNode)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(stat != null || createdWatchTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testRecreatesNodeWhenItGetsDeleted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Stat stat = curator.checkExists().usingWatcher(createdWatchTrigger).forPath(originalNode)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "curator.delete().forPath(originalNode)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(deletedTrigger.firedWithin(timing.forSessionSleep().seconds(),TimeUnit.SECONDS))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String originalNode = node.getActualPath()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->17 [style = bold, label=""];
4->18 [style = dashed, label="0"];
15->2 [style = bold, label=""];
23->16 [style = bold, label=""];
7->6 [style = solid, label="curator"];
9->11 [style = bold, label=""];
17->21 [style = solid, label="originalNode"];
18->19 [style = bold, label=""];
12->17 [style = dashed, label="0"];
17->20 [style = solid, label="originalNode"];
12->9 [style = bold, label=""];
3->4 [style = bold, label=""];
22->7 [style = bold, label=""];
6->15 [style = bold, label=""];
2->12 [style = bold, label=""];
6->10 [style = solid, label="node"];
14->7 [style = bold, label=""];
0->7 [style = bold, label=""];
7->21 [style = solid, label="curator"];
20->18 [style = bold, label=""];
7->5 [style = bold, label=""];
5->6 [style = bold, label=""];
13->3 [style = bold, label=""];
8->2 [style = bold, label=""];
5->12 [style = solid, label="observer"];
20->18 [style = solid, label="stat"];
17->23 [style = solid, label="originalNode"];
11->13 [style = bold, label=""];
7->6 [style = bold, label=""];
6->8 [style = bold, label=""];
4->1 [style = bold, label=""];
1->10 [style = bold, label=""];
16->20 [style = bold, label=""];
17->21 [style = bold, label=""];
21->23 [style = bold, label=""];
}
