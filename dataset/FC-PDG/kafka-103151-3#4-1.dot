digraph {
7 [style = filled, label = "final DescribeAclsResponse result2 = DescribeAclsResponse.prepareResponse(10,ApiError.NONE,DescribeAclsResponse.aclBindings(resources))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "final Struct struct = original.toStruct(V1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shouldRoundTripV0['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1,PREFIXED_ACL1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final DescribeAclsResponse original = buildResponse(100,Errors.NONE,resources)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertResponseEquals(original,result)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "shouldRoundTripV0['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final DescribeAclsResponse result = new DescribeAclsResponse(struct,V0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Struct struct = original.toStruct(V0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final DescribeAclsResponse result = new DescribeAclsResponse(struct,V1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final DescribeAclsResponse result2 = buildResponse(10,Errors.NONE,DescribeAclsResponse.aclsResources(DescribeAclsResponse.aclBindings(resources)))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertResponseEquals(original,result2)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final DescribeAclsResponse result2 = DescribeAclsResponse.prepareResponse(100,ApiError.NONE,DescribeAclsResponse.aclBindings(resources))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "shouldRoundTripV1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<DescribeAclsResource> resources = Arrays.asList(LITERAL_ACL1,LITERAL_ACL2)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final DescribeAclsResponse original = buildResponse(10,Errors.NONE,resources)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
15->10 [style = bold, label=""];
4->2 [style = solid, label="original"];
0->6 [style = bold, label=""];
7->14 [style = dashed, label="0"];
6->11 [style = dashed, label="0"];
12->11 [style = bold, label=""];
7->8 [style = dashed, label="0"];
1->3 [style = bold, label=""];
6->5 [style = solid, label="result"];
4->5 [style = solid, label="original"];
10->13 [style = solid, label="resources"];
5->14 [style = bold, label=""];
0->6 [style = solid, label="struct"];
13->5 [style = solid, label="original"];
11->5 [style = solid, label="result"];
0->12 [style = dashed, label="0"];
12->11 [style = solid, label="struct"];
3->4 [style = bold, label=""];
3->7 [style = solid, label="resources"];
3->4 [style = solid, label="resources"];
4->0 [style = bold, label=""];
3->8 [style = solid, label="resources"];
8->2 [style = solid, label="result2"];
6->5 [style = bold, label=""];
11->5 [style = bold, label=""];
7->2 [style = solid, label="result2"];
10->14 [style = solid, label="resources"];
13->12 [style = bold, label=""];
8->2 [style = bold, label=""];
10->13 [style = bold, label=""];
7->2 [style = bold, label=""];
9->3 [style = bold, label=""];
13->2 [style = solid, label="original"];
5->7 [style = bold, label=""];
14->2 [style = bold, label=""];
3->10 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
14->2 [style = solid, label="result2"];
}
