digraph {
15 [style = filled, label = "assertThat(toString(transform2),equalTo(\"EnumerableProject(empid=($0(, deptno=($1(, name=($2(, salary=($3(, commission=($4()\" + \" EnumerableTableScan(table=((hr, emps(()\"))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(toString(transform),equalTo(\"EnumerableProject(empid=($0(, deptno=($1(, name=($2(, salary=($3(, commission=($4()\" + \" EnumerableTableScan(table=((hr, emps(()\"))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testPlan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Program program = Programs.ofRules(FilterMergeRule.INSTANCE,EnumerableRules.ENUMERABLE_TABLE_SCAN_RULE,EnumerableRules.ENUMERABLE_FILTER_RULE,EnumerableRules.ENUMERABLE_PROJECT_RULE)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SqlNode parse = planner.parse(\"select * from \"emps\"\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Planner planner = getPlanner(null,Programs.of(ruleSet))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "RelNode transform2 = planner.transform(0,traitSet,transform)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Planner planner = getPlanner(null,program)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Program program = Programs.ofRules(CoreRules.FILTER_MERGE,EnumerableRules.ENUMERABLE_TABLE_SCAN_RULE,EnumerableRules.ENUMERABLE_FILTER_RULE,EnumerableRules.ENUMERABLE_PROJECT_RULE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testPlan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "RelNode convert = planner.rel(validate).project()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testPlanTransformTwice['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RuleSet ruleSet = RuleSets.ofList(FilterMergeRule.INSTANCE,EnumerableRules.ENUMERABLE_TABLE_SCAN_RULE,EnumerableRules.ENUMERABLE_FILTER_RULE,EnumerableRules.ENUMERABLE_PROJECT_RULE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->7 [style = solid, label="traitSet"];
7->12 [style = solid, label="transform"];
5->14 [style = dashed, label="0"];
12->15 [style = solid, label="transform2"];
7->12 [style = bold, label=""];
12->15 [style = bold, label=""];
1->3 [style = bold, label=""];
3->6 [style = bold, label=""];
1->3 [style = solid, label="parse"];
6->0 [style = bold, label=""];
13->14 [style = solid, label="ruleSet"];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
14->1 [style = bold, label=""];
2->10 [style = dashed, label="0"];
0->7 [style = bold, label=""];
5->1 [style = bold, label=""];
10->5 [style = solid, label="program"];
10->5 [style = bold, label=""];
8->2 [style = bold, label=""];
2->5 [style = solid, label="program"];
2->13 [style = dashed, label="0"];
11->13 [style = bold, label=""];
7->4 [style = solid, label="transform"];
6->7 [style = solid, label="convert"];
0->12 [style = solid, label="traitSet"];
13->14 [style = bold, label=""];
2->5 [style = bold, label=""];
}
