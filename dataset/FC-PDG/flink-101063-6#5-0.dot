digraph {
25 [style = filled, label = "String(( explain = table.explain().split(\"==.*==\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "tableEnv.executeSql(\"create table src(x int,y string) partitioned by (p1 bigint, p2 string)\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "HiveTestUtils.createTextTableInserter(hiveShell,\"default\",\"src\").addRow(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b8267e).commit(\"p1=2014, p2='2014'\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "{tableEnv.executeSql(\"drop table src\")}@@@31@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(physicalPlan,physicalPlan.contains(expectedExplain))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "String physicalPlan = explain(3(@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(logicalPlan.contains(expectedExplain))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Object(( rowStrings = rows.stream().map(null).sorted().toArray()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertArrayEquals(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b825b2,rowStrings)@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Table table = tableEnv.sqlQuery(\"select * from hive.`default`.src limit 1\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testProjectionPushDown['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "{tableEnv.executeSql(\"drop table src\")}@@@28@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertTrue(physicalPlan.contains(expectedExplain))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "TableEnvironment tableEnv = createTableEnv()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testLimitPushDown['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "hiveShell.execute(\"analyze table src COMPUTE STATISTICS\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "tableEnv.executeSql(\"create table src (a string)\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String expectedExplain = \"HiveTableSource(x, y, p1, p2) TablePath: default.src, PartitionPruned: false, PartitionNums: null, ProjectedFields: (2, 1(\"@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(logicalPlan,logicalPlan.contains(expectedExplain))@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<Row> rows = CollectionUtil.iteratorToList(table.execute().collect())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Object(( rowStrings = rows.stream().map(null).sorted().toArray()@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertEquals(2,rows.size())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(1,rows.size())@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(4,explain.length)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Object(( rowStrings = rows.stream().map(null).sorted().toArray()@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "{tableEnv.executeSql(\"drop table src\")}@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "HiveTestUtils.createTextTableInserter(hiveShell,\"default\",\"src\").addRow(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b82667).addRow(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b8266d).commit(\"p1=2013, p2='2013'\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String expectedExplain = \"HiveTableSource(a) TablePath: default.src, PartitionPruned: false, \" + \"PartitionNums: null, LimitPushDown true, Limit 1\"@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertTrue(logicalPlan,logicalPlan.contains(\"table=((hive, default, src, limit=(1(((\"))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertArrayEquals(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b826e5,rowStrings)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "List<Row> rows = CollectionUtil.iteratorToList(table.execute().collect())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String logicalPlan = explain(2(@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(1,rows.size())@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "Table table = tableEnv.sqlQuery(\"select p1, count(y) from hive.`default`.src group by p1\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testLimitPushDown['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6->32 [style = bold, label=""];
9->4 [style = solid, label="explain"];
8->34 [style = bold, label=""];
9->0 [style = solid, label="explain"];
15->2 [style = bold, label=""];
9->0 [style = solid, label="logicalPlan"];
25->16 [style = solid, label="explain"];
0->26 [style = bold, label=""];
6->32 [style = solid, label="rowStrings"];
10->14 [style = bold, label=""];
7->10 [style = bold, label=""];
31->9 [style = bold, label=""];
6->18 [style = bold, label=""];
1->15 [style = bold, label=""];
7->4 [style = dashed, label="0"];
4->21 [style = solid, label="logicalPlan"];
4->21 [style = bold, label=""];
11->9 [style = bold, label=""];
19->6 [style = bold, label=""];
22->23 [style = bold, label=""];
9->16 [style = bold, label=""];
32->33 [style = bold, label=""];
14->26 [style = dashed, label="0"];
4->0 [style = bold, label=""];
16->26 [style = solid, label="physicalPlan"];
0->7 [style = bold, label=""];
25->31 [style = bold, label=""];
6->1 [style = bold, label=""];
29->27 [style = bold, label=""];
4->0 [style = solid, label="expectedExplain"];
20->8 [style = bold, label=""];
10->0 [style = dashed, label="0"];
34->3 [style = bold, label=""];
21->22 [style = bold, label=""];
4->26 [style = solid, label="expectedExplain"];
0->21 [style = dashed, label="0"];
1->24 [style = dashed, label="0"];
23->19 [style = bold, label=""];
28->24 [style = bold, label=""];
3->17 [style = bold, label=""];
19->6 [style = solid, label="rowStrings"];
12->3 [style = bold, label=""];
26->28 [style = bold, label=""];
30->8 [style = bold, label=""];
16->4 [style = bold, label=""];
13->8 [style = bold, label=""];
7->10 [style = solid, label="expectedExplain"];
24->6 [style = bold, label=""];
7->14 [style = solid, label="expectedExplain"];
12->34 [style = dashed, label="0"];
27->25 [style = bold, label=""];
14->6 [style = bold, label=""];
8->12 [style = bold, label=""];
3->29 [style = bold, label=""];
25->9 [style = solid, label="explain"];
15->2 [style = solid, label="rowStrings"];
2->5 [style = bold, label=""];
17->11 [style = bold, label=""];
}
