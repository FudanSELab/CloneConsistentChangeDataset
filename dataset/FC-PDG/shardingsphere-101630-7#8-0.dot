digraph {
15 [style = filled, label = "CreateDefinitionSegment each@@@8@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "result.setContainsNotExistClause(null != ctx.notExistClause())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "each instanceof ModifyColumnDefinitionSegment@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "result.setRenameTable(((RenameTableDefinitionSegment)each).getRenameTable())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableNameClause().tableName()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "result.getColumnDefinitions().add((ColumnDefinitionSegment)each)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "null != ctx.alterDefinitionClause()@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "result.getModifyColumnDefinitions().add((ModifyColumnDefinitionSegment)each)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "result.getAddColumnDefinitions().add((AddColumnDefinitionSegment)each)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final AlterTableContext ctx@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableName()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "createDefinitions.getValue()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CollectionValue<CreateDefinitionSegment> createDefinitions = (CollectionValue<CreateDefinitionSegment>)visit(ctx.createDefinitionClause())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "each instanceof RenameTableDefinitionSegment@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "MySQLCreateTableStatement result = new MySQLCreateTableStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "((CollectionValue<AlterDefinitionSegment>)visit(ctx.alterDefinitionClause())).getValue()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "each instanceof AddColumnDefinitionSegment@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "result.getAddConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return result@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "createDefinitions.getValue()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "return result@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "visitCreateTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "visitCreateTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "PostgreSQLAlterTableStatement result = new PostgreSQLAlterTableStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "each instanceof DropColumnDefinitionSegment@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "each instanceof ColumnDefinitionSegment@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "null != ctx.createDefinitionClause()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "result.getConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "visitAlterTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final CreateTableContext ctx@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "AlterDefinitionSegment each@@@6@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "result.getDropColumnDefinitions().add((DropColumnDefinitionSegment)each)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "result.setNotExisted(null != ctx.notExistClause())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->23 [style = dashed, label="0"];
4->3 [style = bold, label=""];
34->21 [style = dotted, label="true"];
2->0 [style = solid, label="result"];
7->31 [style = dashed, label="0"];
9->0 [style = bold, label=""];
33->20 [style = bold, label=""];
25->34 [style = bold, label=""];
28->30 [style = bold, label=""];
29->30 [style = bold, label=""];
28->20 [style = bold, label=""];
2->1 [style = bold, label=""];
23->30 [style = solid, label="result"];
12->32 [style = dashed, label="0"];
9->4 [style = bold, label=""];
4->13 [style = bold, label=""];
18->33 [style = bold, label=""];
24->31 [style = dotted, label="true"];
16->7 [style = bold, label=""];
9->28 [style = dashed, label="0"];
34->18 [style = bold, label=""];
20->32 [style = bold, label=""];
4->3 [style = dotted, label="false"];
7->0 [style = bold, label=""];
6->17 [style = dashed, label="0"];
21->30 [style = bold, label=""];
3->9 [style = dotted, label="true"];
7->8 [style = bold, label=""];
32->30 [style = bold, label=""];
20->25 [style = bold, label=""];
10->7 [style = bold, label=""];
3->4 [style = bold, label=""];
18->28 [style = bold, label=""];
11->2 [style = bold, label=""];
7->15 [style = dotted, label="true"];
3->0 [style = bold, label=""];
1->22 [style = dashed, label="0"];
7->12 [style = dotted, label="true"];
24->30 [style = bold, label=""];
26->30 [style = bold, label=""];
33->29 [style = bold, label=""];
24->20 [style = bold, label=""];
7->5 [style = dotted, label="true"];
3->9 [style = bold, label=""];
4->13 [style = dotted, label="true"];
29->20 [style = bold, label=""];
25->34 [style = dotted, label="false"];
23->22 [style = bold, label=""];
21->20 [style = bold, label=""];
34->18 [style = dotted, label="false"];
1->16 [style = bold, label=""];
11->6 [style = dotted, label="true"];
20->25 [style = dotted, label="false"];
18->28 [style = dotted, label="true"];
24->20 [style = dotted, label="true"];
25->26 [style = bold, label=""];
7->4 [style = dotted, label="true"];
33->30 [style = bold, label=""];
33->29 [style = dotted, label="true"];
24->19 [style = dotted, label="true"];
27->23 [style = bold, label=""];
14->2 [style = bold, label=""];
10->16 [style = dashed, label="0"];
8->4 [style = bold, label=""];
22->24 [style = bold, label=""];
18->33 [style = dotted, label="false"];
27->17 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
1->10 [style = bold, label=""];
20->32 [style = dotted, label="true"];
32->20 [style = bold, label=""];
10->24 [style = dashed, label="0"];
25->26 [style = dotted, label="true"];
34->21 [style = bold, label=""];
26->20 [style = bold, label=""];
13->0 [style = bold, label=""];
13->4 [style = bold, label=""];
14->6 [style = dotted, label="true"];
}
