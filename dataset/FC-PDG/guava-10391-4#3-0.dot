digraph {
2 [style = filled, label = "Set<Integer> successors = network.successors(N1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "successors_checkReturnedSetMutability['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assume().that(graphIsMutable()).isTrue()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "fail(ERROR_MODIFIABLE_COLLECTION)@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "successors_checkReturnedSetMutability['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "addNode(N1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "successors_checkReturnedSetMutability['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "successors.add(N2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->0 [style = bold, label=""];
5->3 [style = bold, label=""];
1->3 [style = bold, label=""];
0->4 [style = bold, label=""];
3->2 [style = bold, label=""];
6->5 [style = bold, label=""];
7->3 [style = bold, label=""];
}
