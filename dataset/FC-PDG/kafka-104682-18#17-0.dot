digraph {
7 [style = filled, label = "workerTask.cancel()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "workerTask.stop()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "statusListener.onShutdown(taskId)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "statusListener.onStartup(taskId)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "replay(workerTask)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final Thread thread = new Thread(null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(workerTask)@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectLastCall()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "workerTask.initializeAndStart()@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "workerTask.run()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "cancelBeforeStopping['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "EasyMock.expectLastCall()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "standardStartup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "workerTask.run()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final CountDownLatch stopped = new CountDownLatch(1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,,,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader,metrics,retryWithToleranceOperator,Time.SYSTEM,statusBackingStore).addMockedMethod(\"initialize\").addMockedMethod(\"initializeAndStart\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "verify(workerTask)@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "cancelBeforeStopping['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "workerTask.execute()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,,,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader,metrics,retryWithToleranceOperator,Time.SYSTEM,statusBackingStore).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "workerTask.close()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "expectLastCall()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "EasyMock.expectLastCall()@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "expectLastCall()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "expectLastCall().andAnswer(null)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "expectLastCall()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "stopped.countDown()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "workerTask.awaitStop(1000L)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "thread.join()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ConnectorTaskId taskId = new ConnectorTaskId(\"foo\",0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "workerTask.stop()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "expectLastCall()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->21 [style = bold, label=""];
25->3 [style = bold, label=""];
7->4 [style = dashed, label="0"];
13->7 [style = bold, label=""];
7->8 [style = bold, label=""];
22->9 [style = solid, label="workerTask"];
6->4 [style = solid, label="workerTask"];
6->15 [style = bold, label=""];
6->1 [style = solid, label="workerTask"];
10->25 [style = dashed, label="0"];
15->12 [style = bold, label=""];
33->11 [style = bold, label=""];
26->31 [style = bold, label=""];
22->15 [style = bold, label=""];
11->17 [style = bold, label=""];
21->24 [style = bold, label=""];
3->18 [style = bold, label=""];
5->10 [style = bold, label=""];
0->13 [style = bold, label=""];
4->20 [style = bold, label=""];
3->27 [style = bold, label=""];
6->22 [style = dashed, label="0"];
10->3 [style = bold, label=""];
27->29 [style = bold, label=""];
31->4 [style = bold, label=""];
14->11 [style = solid, label="taskId"];
2->9 [style = bold, label=""];
12->5 [style = bold, label=""];
30->33 [style = bold, label=""];
8->2 [style = bold, label=""];
29->32 [style = bold, label=""];
5->25 [style = bold, label=""];
16->14 [style = bold, label=""];
24->3 [style = bold, label=""];
6->20 [style = solid, label="workerTask"];
19->26 [style = bold, label=""];
6->5 [style = bold, label=""];
14->6 [style = bold, label=""];
1->19 [style = bold, label=""];
19->4 [style = bold, label=""];
23->14 [style = bold, label=""];
22->4 [style = solid, label="workerTask"];
32->30 [style = bold, label=""];
18->27 [style = dashed, label="0"];
20->0 [style = bold, label=""];
6->9 [style = solid, label="workerTask"];
28->14 [style = bold, label=""];
14->29 [style = solid, label="taskId"];
18->11 [style = bold, label=""];
17->1 [style = bold, label=""];
14->22 [style = bold, label=""];
}
