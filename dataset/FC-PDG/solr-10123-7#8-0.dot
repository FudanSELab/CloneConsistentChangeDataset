digraph {
25 [style = filled, label = "StreamExpression expression@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "StreamExpressionNamedParameter nParam = factory.getNamedOperand(expression,\"n\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "String workersStr = ((StreamExpressionValue)workersParam.getParameter()).getValue()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "1 != streamExpressions.size()@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "init(zkHost,collectionName,stream,workersInt,comp)@@@47@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' is not a valid integer.\",expression,nStr))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single 'n' parameter of type positive integer but didn't find one\",expression))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "StreamExpressionNamedParameter zkHostExpression = factory.getNamedOperand(expression,\"zkHost\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "null == collectionName@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 3 + (null != zkHostExpression? 1: 0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "StreamExpression expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "StreamComparator comp = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "int workersInt = 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "zkHostExpression.getParameter() instanceof StreamExpressionValue@@@38@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TupleStream stream = factory.constructStream(streamExpressions.get(0))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'sort' parameter telling us how to join the parallel streams but didn't find one\",expression))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "String nStr = ((StreamExpressionValue)nParam.getParameter()).getValue()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "StreamComparator comp = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "ParallelStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "streamFactory = factory@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "null == nParam || null == nParam.getParameter() || !(nParam.getParameter() instanceof StreamExpressionValue)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "TupleStream stream = factory.constructStream(streamExpressions.get(0))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'over' parameter listing fields to unique over but didn't find one\",expression))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "StreamFactory factory@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "String zkHost = null@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String collectionName = factory.getValueOperand(expression,0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' must be greater than 0.\",expression,nStr))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "StreamExpressionNamedParameter workersParam = factory.getNamedOperand(expression,\"workers\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single 'workersParam' parameter of type positive integer but didn't find one\",expression))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "nInt = Integer.parseInt(nStr)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "null == zkHostExpression@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "null == sortExpression || !(sortExpression.getParameter() instanceof StreamExpressionValue)@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "init(stream,nInt,comp)@@@31@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - workers '%s' must be greater than 0.\",expression,workersStr))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "zkHost = factory.getCollectionZkHost(collectionName)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 2@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "null == workersParam || null == workersParam.getParameter() || !(workersParam.getParameter() instanceof StreamExpressionValue)@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - zkHost not found for collection '%s'\",expression,collectionName))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "workersInt <= 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "RankStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression,,)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - workers '%s' is not a valid integer.\",expression,workersStr))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "int nInt = 0@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "zkHost = ((StreamExpressionValue)zkHostExpression.getParameter()).getValue()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "StreamExpressionNamedParameter sortExpression = factory.getNamedOperand(expression,\"sort\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ParallelStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "StreamExpressionNamedParameter sortExpression = factory.getNamedOperand(expression,\"sort\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "nInt <= 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "workersInt = Integer.parseInt(workersStr)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - collectionName expected as first operand\",expression))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "null == sortExpression || !(sortExpression.getParameter() instanceof StreamExpressionValue)@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "NumberFormatException e@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "objectSerialize = false@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "null == zkHost@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
54->49 [style = dotted, label="true"];
22->28 [style = solid, label="zkHostExpression"];
0->5 [style = dotted, label="true"];
25->15 [style = solid, label="expression"];
6->22 [style = bold, label=""];
45->57 [style = dotted, label="true"];
16->17 [style = dotted, label="true"];
24->32 [style = bold, label=""];
48->53 [style = dotted, label="true"];
34->15 [style = bold, label=""];
18->8 [style = solid, label="stream"];
12->33 [style = solid, label="zkHost"];
57->58 [style = bold, label=""];
40->36 [style = dotted, label="true"];
38->15 [style = bold, label=""];
22->30 [style = bold, label=""];
21->18 [style = bold, label=""];
3->27 [style = bold, label=""];
23->17 [style = solid, label="workersStr"];
45->57 [style = bold, label=""];
14->5 [style = solid, label="expression"];
3->27 [style = dotted, label="true"];
31->0 [style = solid, label="workersParam"];
25->6 [style = solid, label="expression"];
10->8 [style = bold, label=""];
33->18 [style = bold, label=""];
32->36 [style = dashed, label="0"];
4->16 [style = solid, label="workersInt"];
44->54 [style = solid, label="nParam"];
11->43 [style = dotted, label="true"];
1->57 [style = dashed, label="0"];
14->32 [style = solid, label="expression"];
51->39 [style = solid, label="expression"];
10->20 [style = dashed, label="0"];
41->58 [style = bold, label=""];
51->47 [style = solid, label="expression"];
25->32 [style = solid, label="expression"];
4->16 [style = bold, label=""];
50->55 [style = solid, label="nStr"];
37->10 [style = solid, label="factory"];
14->21 [style = solid, label="expression"];
51->44 [style = solid, label="expression"];
13->34 [style = bold, label=""];
3->54 [style = dashed, label="0"];
54->49 [style = bold, label=""];
25->17 [style = solid, label="expression"];
27->0 [style = bold, label=""];
5->23 [style = bold, label=""];
15->12 [style = solid, label="collectionName"];
30->7 [style = dotted, label="true"];
13->25 [style = dotted, label="true"];
14->15 [style = solid, label="expression"];
16->26 [style = bold, label=""];
58->47 [style = dotted, label="true"];
14->17 [style = solid, label="expression"];
26->20 [style = dotted, label="true"];
50->46 [style = solid, label="nStr"];
11->43 [style = bold, label=""];
19->2 [style = bold, label=""];
16->17 [style = bold, label=""];
25->7 [style = solid, label="expression"];
51->43 [style = solid, label="expression"];
26->24 [style = bold, label=""];
23->4 [style = solid, label="workersStr"];
31->11 [style = bold, label=""];
3->0 [style = bold, label=""];
46->41 [style = bold, label=""];
23->35 [style = bold, label=""];
2->33 [style = solid, label="zkHost"];
16->41 [style = dashed, label="0"];
0->23 [style = bold, label=""];
15->31 [style = bold, label=""];
30->7 [style = bold, label=""];
12->8 [style = solid, label="zkHost"];
25->20 [style = solid, label="expression"];
42->20 [style = solid, label="stream"];
28->19 [style = bold, label=""];
12->33 [style = bold, label=""];
2->33 [style = bold, label=""];
25->27 [style = solid, label="expression"];
46->41 [style = solid, label="nInt"];
26->20 [style = bold, label=""];
36->42 [style = bold, label=""];
15->8 [style = solid, label="collectionName"];
19->33 [style = bold, label=""];
38->37 [style = dotted, label="true"];
51->55 [style = solid, label="expression"];
9->33 [style = solid, label="zkHost"];
24->32 [style = dotted, label="true"];
39->40 [style = solid, label="sortExpression"];
52->46 [style = bold, label=""];
47->40 [style = bold, label=""];
14->6 [style = solid, label="expression"];
25->53 [style = dashed, label="0"];
25->5 [style = solid, label="expression"];
38->25 [style = dotted, label="true"];
4->46 [style = dashed, label="0"];
28->12 [style = bold, label=""];
14->22 [style = solid, label="expression"];
49->50 [style = bold, label=""];
9->28 [style = bold, label=""];
29->8 [style = solid, label="comp"];
32->9 [style = bold, label=""];
14->27 [style = solid, label="expression"];
33->21 [style = dotted, label="true"];
15->21 [style = solid, label="collectionName"];
6->24 [style = solid, label="sortExpression"];
30->3 [style = bold, label=""];
40->36 [style = bold, label=""];
2->8 [style = solid, label="zkHost"];
41->55 [style = dotted, label="true"];
29->10 [style = bold, label=""];
17->55 [style = dashed, label="0"];
28->19 [style = dotted, label="false"];
13->14 [style = dotted, label="true"];
43->54 [style = bold, label=""];
24->9 [style = bold, label=""];
14->31 [style = solid, label="expression"];
11->54 [style = bold, label=""];
0->5 [style = bold, label=""];
28->12 [style = dotted, label="true"];
42->26 [style = bold, label=""];
36->1 [style = dotted, label="true"];
17->26 [style = bold, label=""];
48->56 [style = bold, label=""];
27->49 [style = dashed, label="0"];
14->7 [style = solid, label="expression"];
22->30 [style = solid, label="zkHostExpression"];
41->55 [style = bold, label=""];
19->2 [style = dotted, label="true"];
11->6 [style = bold, label=""];
25->22 [style = solid, label="expression"];
4->8 [style = solid, label="workersInt"];
58->40 [style = bold, label=""];
25->21 [style = solid, label="expression"];
48->51 [style = dotted, label="true"];
46->20 [style = solid, label="nInt"];
1->26 [style = bold, label=""];
44->39 [style = bold, label=""];
39->11 [style = bold, label=""];
35->4 [style = bold, label=""];
36->1 [style = bold, label=""];
7->3 [style = bold, label=""];
51->49 [style = solid, label="expression"];
50->52 [style = bold, label=""];
14->11 [style = solid, label="expression"];
54->50 [style = bold, label=""];
14->20 [style = solid, label="expression"];
9->8 [style = solid, label="zkHost"];
18->29 [style = bold, label=""];
58->47 [style = bold, label=""];
25->10 [style = solid, label="factory"];
25->11 [style = solid, label="expression"];
25->31 [style = solid, label="expression"];
51->56 [style = solid, label="expression"];
51->36 [style = solid, label="expression"];
15->3 [style = solid, label="collectionName"];
33->21 [style = bold, label=""];
20->24 [style = bold, label=""];
26->20 [style = solid, label="comp"];
56->44 [style = bold, label=""];
40->42 [style = bold, label=""];
55->58 [style = bold, label=""];
}
