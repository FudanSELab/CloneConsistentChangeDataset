digraph {
0 [style = filled, label = "filter.setName(\"customers2\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(regions).hasSize(5)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(region.getType()).isIn(RegionType.PARTITION,RegionType.PARTITION_PROXY)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<Region> regions = client.list(filter).getConfigResult()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(element.getGroup()).isNull()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Region region = CacheElement.findElement(regions,\"customers2\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(regions.stream().map(null).map(null).collect(Collectors.toList())).containsExactlyInAnyOrder(RegionType.PARTITION,RegionType.PARTITION_PROXY)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(regions).hasSize(2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(region.getGroup()).isIn(\"group1\",\"group2\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "element = CacheElement.findElement(regions,\"customers1\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Region element = CacheElement.findElement(regions,\"customers\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(element.getGroups()).containsExactlyInAnyOrder(\"group1\",\"group2\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "listAll['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(element.getGroup()).isEqualTo(\"group1\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "listRegionByName2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "element = CacheElement.findElement(regions,\"customers3\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(regions.stream().map(null).collect(Collectors.toList())).containsExactlyInAnyOrder(\"group1\",\"group2\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "listRegionByName2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(regions.stream().map(null).collect(Collectors.toList())).containsExactlyInAnyOrder(\"group1\",\"group2\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2->17 [style = bold, label=""];
14->16 [style = bold, label=""];
17->8 [style = bold, label=""];
1->4 [style = bold, label=""];
15->2 [style = bold, label=""];
10->15 [style = bold, label=""];
8->18 [style = bold, label=""];
0->2 [style = bold, label=""];
18->11 [style = bold, label=""];
15->17 [style = solid, label="regions"];
7->0 [style = bold, label=""];
11->12 [style = bold, label=""];
15->18 [style = solid, label="regions"];
5->2 [style = dashed, label="0"];
12->9 [style = bold, label=""];
3->0 [style = bold, label=""];
5->1 [style = bold, label=""];
6->4 [style = bold, label=""];
15->12 [style = solid, label="regions"];
5->6 [style = bold, label=""];
15->14 [style = solid, label="regions"];
1->6 [style = dashed, label="0"];
13->14 [style = bold, label=""];
2->5 [style = bold, label=""];
9->13 [style = bold, label=""];
}
