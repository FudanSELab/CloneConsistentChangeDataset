digraph {
11 [style = filled, label = "time.sleep(client.throttleDelayMs(node,time.milliseconds()))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ProduceResponse response = produceResponse(tp0,i,Errors.NONE,throttleTimeMs)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "client.send(request,time.milliseconds())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(400,(Double)maxMetric.metricValue(),EPS)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,10 * 1000,127 * 1000,time,true,new ApiVersions(),throttleTimeSensor,logContext)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Sensor throttleTimeSensor = Fetcher.throttleTimeSensor(metrics,metricsRegistry)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeAvg))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.poll(1,time.milliseconds())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "time.sleep(client.throttleDelayMs(node,time.milliseconds()))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(250,(Double)avgMetric.metricValue(),EPSILON)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "selector.clear()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(this.senderMetricsRegistry.produceThrottleTimeMax)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "client.poll(1,time.milliseconds())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "buildFetcher()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(this.senderMetricsRegistry.produceThrottleTimeAvg)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 1@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ApiVersionsResponse apiVersionsResponse = ApiVersionsResponse.defaultApiVersionsResponse(400,ApiMessageType.ListenerType.ZK_BROKER)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "builder.rackId(\"\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "FetchRequest.Builder builder = FetchRequest.Builder.forConsumer(ApiKeys.FETCH.latestVersion(),100,100,new LinkedHashMap<>(),topicIds)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "ByteBuffer buffer = RequestTestUtils.serializeResponseWithHeader(apiVersionsResponse,ApiKeys.API_VERSIONS.latestVersion(),0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "selector.completeReceive(new NetworkReceive(node.idString(),buffer))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Sensor throttleTimeSensor = Sender.throttleTimeSensor(this.senderMetricsRegistry)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "selector.clear()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeMax))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "buffer = RequestTestUtils.serializeResponseWithHeader(response,ApiKeys.PRODUCE.latestVersion(),request.correlationId())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "i <= 3@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Node node = cluster.nodes().get(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,10 * 1000,127 * 1000,time,true,new ApiVersions(),throttleTimeSensor,new LogContext())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Cluster cluster = TestUtils.singletonCluster(\"test\",1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MockSelector selector = new MockSelector(time)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "buffer = RequestTestUtils.serializeResponseWithHeader(response,ApiKeys.FETCH.latestVersion(),request.correlationId())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(400,(Double)maxMetric.metricValue(),EPSILON)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "FetchResponse response = fullFetchResponse(tp0,nextRecords,Errors.NONE,i,throttleTimeMs)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "selector.clear()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "!client.ready(node,time.milliseconds())@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "FetchRequest.Builder builder = FetchRequest.Builder.forConsumer(100,100,new LinkedHashMap<>())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "client.poll(1,time.milliseconds())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(250,(Double)avgMetric.metricValue(),EPS)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "selector.delayedReceive(new DelayedReceive(node.idString(),new NetworkReceive(node.idString(),buffer)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "ProduceRequest.Builder builder = ProduceRequest.forCurrentMagic(new ProduceRequestData().setTopicData(new ProduceRequestData.TopicProduceDataCollection()).setAcks((short)1).setTimeoutMs(1000))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "client.close()@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "int throttleTimeMs = 100 * i@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i++@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "client.close()@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28->11 [style = dotted, label="true"];
14->18 [style = solid, label="throttleTimeSensor"];
12->5 [style = bold, label=""];
4->25 [style = bold, label=""];
38->40 [style = solid, label="throttleTimeSensor"];
48->4 [style = bold, label=""];
24->32 [style = bold, label=""];
28->15 [style = dotted, label="true"];
45->27 [style = bold, label=""];
31->21 [style = bold, label=""];
5->28 [style = bold, label=""];
11->9 [style = bold, label=""];
25->6 [style = bold, label=""];
1->44 [style = dashed, label="0"];
24->42 [style = dashed, label="0"];
28->30 [style = dotted, label="true"];
28->4 [style = bold, label=""];
3->22 [style = solid, label="response"];
10->23 [style = solid, label="node"];
21->23 [style = dotted, label="true"];
7->16 [style = bold, label=""];
15->41 [style = bold, label=""];
16->14 [style = bold, label=""];
41->45 [style = bold, label=""];
5->28 [style = solid, label="i"];
28->27 [style = dotted, label="true"];
13->31 [style = bold, label=""];
37->33 [style = bold, label=""];
9->29 [style = bold, label=""];
35->7 [style = bold, label=""];
22->41 [style = dashed, label="0"];
6->47 [style = dashed, label="0"];
43->16 [style = bold, label=""];
26->42 [style = bold, label=""];
21->0 [style = bold, label=""];
5->3 [style = solid, label="i"];
21->0 [style = dotted, label="true"];
26->15 [style = solid, label="throttleTimeMs"];
13->31 [style = solid, label="buffer"];
28->36 [style = dotted, label="true"];
15->41 [style = solid, label="response"];
26->24 [style = bold, label=""];
16->40 [style = solid, label="selector"];
38->2 [style = bold, label=""];
28->29 [style = dotted, label="true"];
28->24 [style = dotted, label="true"];
0->23 [style = bold, label=""];
27->11 [style = bold, label=""];
28->9 [style = dotted, label="true"];
33->30 [style = bold, label=""];
3->15 [style = dashed, label="0"];
47->44 [style = bold, label=""];
5->29 [style = solid, label="i"];
1->19 [style = bold, label=""];
28->37 [style = dotted, label="true"];
4->47 [style = bold, label=""];
24->36 [style = dashed, label="0"];
28->41 [style = dotted, label="true"];
30->15 [style = bold, label=""];
33->30 [style = solid, label="request"];
10->18 [style = bold, label=""];
24->33 [style = solid, label="builder"];
18->40 [style = dashed, label="0"];
8->13 [style = solid, label="apiVersionsResponse"];
42->37 [style = bold, label=""];
39->46 [style = bold, label=""];
37->33 [style = solid, label="request"];
28->20 [style = dotted, label="true"];
28->3 [style = dotted, label="true"];
22->27 [style = solid, label="buffer"];
28->26 [style = bold, label=""];
9->20 [style = bold, label=""];
19->17 [style = bold, label=""];
2->10 [style = bold, label=""];
15->3 [style = bold, label=""];
42->37 [style = solid, label="builder"];
28->45 [style = dotted, label="true"];
32->33 [style = bold, label=""];
36->33 [style = solid, label="builder"];
21->12 [style = bold, label=""];
6->1 [style = bold, label=""];
10->11 [style = solid, label="node"];
28->32 [style = dotted, label="true"];
19->39 [style = dashed, label="0"];
41->45 [style = solid, label="buffer"];
28->42 [style = dotted, label="true"];
14->38 [style = dashed, label="0"];
28->22 [style = dotted, label="true"];
29->15 [style = solid, label="i"];
10->40 [style = bold, label=""];
14->2 [style = bold, label=""];
18->8 [style = bold, label=""];
16->18 [style = solid, label="selector"];
29->28 [style = solid, label="i"];
8->13 [style = bold, label=""];
5->26 [style = solid, label="i"];
26->3 [style = solid, label="throttleTimeMs"];
29->3 [style = solid, label="i"];
20->29 [style = bold, label=""];
28->33 [style = dotted, label="true"];
26->36 [style = bold, label=""];
10->9 [style = solid, label="node"];
34->7 [style = bold, label=""];
36->32 [style = bold, label=""];
29->26 [style = solid, label="i"];
25->4 [style = dashed, label="0"];
44->39 [style = bold, label=""];
3->22 [style = bold, label=""];
29->28 [style = bold, label=""];
23->21 [style = bold, label=""];
22->27 [style = bold, label=""];
5->15 [style = solid, label="i"];
28->26 [style = dotted, label="true"];
28->48 [style = bold, label=""];
16->38 [style = bold, label=""];
40->8 [style = bold, label=""];
}
