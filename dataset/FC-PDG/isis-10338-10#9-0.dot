digraph {
9 [style = filled, label = "facetedMethodParameter = new FacetedMethodParameter(metaModelContext,FeatureType.ACTION_PARAMETER_SCALAR,facetedMethod.getOwningType(),facetedMethod.getMethod(),)@@@6@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "setUpFacetedMethodAndParameter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "metaModelContext = MetaModelContext_forTesting.builder().specificationLoader(mockSpecificationLoader).serviceInjector(mockServiceInjector).serviceRegistry(mockServiceRegistry).build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "jdoFacetContext = jdoFacetContextForTesting()@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a51adf@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "metaModelContext = MetaModelContext_forTesting.builder().specificationLoader(mockSpecificationLoader).translationService(mockTranslationService).interactionProvider(mockInteractionProvider).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "facetedMethod = FacetedMethod.createForProperty(metaModelContext,,\"firstName\")@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "setUpFacetedMethodAndParameter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "facetHolder = FacetHolderAbstract.simple(metaModelContext,Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(),\"firstName\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "context.checking(new Expectations(){})@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "context.checking(new Expectations(){})@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "facetHolder = FacetHolderAbstract.simple(metaModelContext,Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(),\"firstName\"))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "facetedMethod = FacetedMethod.createForProperty(metaModelContext,,\"firstName\")@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "facetedMethod = FacetedMethod.createForProperty(metaModelContext,,\"firstName\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "mockSpecificationLoader = context.mock()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "facetHolder = FacetHolderAbstract.simple(metaModelContext,Identifier.propertyOrCollectionIdentifier(LogicalType.fqcn(),\"firstName\"))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "methodRemover = new MethodRemoverForTesting()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "metaModelContext = MetaModelContext_forTesting.builder().specificationLoader(mockSpecificationLoader).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "mockTranslationService = context.mock()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "mockInteractionProvider = context.mock()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "facetedMethodParameter = new FacetedMethodParameter(metaModelContext,FeatureType.ACTION_PARAMETER_SCALAR,facetedMethod.getOwningType(),facetedMethod.getMethod(),)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->20 [style = bold, label=""];
16->15 [style = bold, label=""];
4->1 [style = dashed, label="0"];
7->10 [style = bold, label=""];
2->3 [style = bold, label=""];
1->19 [style = dashed, label="0"];
2->4 [style = solid, label="metaModelContext"];
10->6 [style = bold, label=""];
3->0 [style = bold, label=""];
2->0 [style = solid, label="metaModelContext"];
21->19 [style = solid, label="metaModelContext"];
21->18 [style = solid, label="metaModelContext"];
2->10 [style = dashed, label="0"];
12->13 [style = bold, label=""];
5->2 [style = bold, label=""];
19->14 [style = bold, label=""];
15->11 [style = bold, label=""];
18->1 [style = bold, label=""];
0->4 [style = bold, label=""];
6->8 [style = bold, label=""];
20->12 [style = bold, label=""];
2->1 [style = solid, label="metaModelContext"];
8->9 [style = bold, label=""];
10->9 [style = solid, label="metaModelContext"];
4->1 [style = bold, label=""];
1->19 [style = bold, label=""];
21->1 [style = solid, label="metaModelContext"];
13->21 [style = bold, label=""];
21->17 [style = bold, label=""];
10->8 [style = solid, label="metaModelContext"];
17->18 [style = bold, label=""];
10->6 [style = solid, label="metaModelContext"];
}
