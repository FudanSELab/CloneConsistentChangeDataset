digraph {
6 [style = filled, label = "final Settings.Builder builder = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.CURRENT).put(IndexMetaData.SETTING_INDEX_UUID,index.getUUID())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final String indexName = \"foo-\" + value@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final IndexService indexService = indicesService.createIndex(indexMetaData,Collections.emptyList())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final IndicesService indicesService = getIndicesService()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "builder.put(FooEnginePlugin.FOO_INDEX_SETTING.getKey(),value)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final IndexMetaData indexMetaData = new IndexMetaData.Builder(index.getName()).settings(builder.build()).numberOfShards(1).numberOfReplicas(0).build()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(indexService.getEngineFactory(),instanceOf())@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Ccr ccr = new Ccr(Settings.EMPTY,new CcrLicenseChecker(null,null))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testGetEngineFactory['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final IndexService indexService = indicesService.createIndex(indexMetaData,Collections.emptyList(),false)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "final Optional<EngineFactory> engineFactory = ccr.getEngineFactory(new IndexSettings(indexMetaData,Settings.EMPTY))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(engineFactory.isPresent())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "value != null@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(engineFactory.isPresent())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final Index index = new Index(indexName,UUIDs.randomBase64UUID())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "builder.put(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey(),value)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "value != null && value@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final String indexName = \"following-\" + value@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(engineFactory.get(),instanceOf())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testGetEngineFactory['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "value != null && value@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Boolean(( values = new Boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14a31a4@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testGetEngineFactory['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->3 [style = bold, label=""];
12->17 [style = dotted, label="false"];
1->4 [style = bold, label=""];
19->18 [style = bold, label=""];
5->9 [style = bold, label=""];
4->22 [style = solid, label="indexMetaData"];
9->2 [style = bold, label=""];
8->18 [style = bold, label=""];
7->16 [style = dashed, label="0"];
4->13 [style = bold, label=""];
12->17 [style = bold, label=""];
4->3 [style = solid, label="indexMetaData"];
4->21 [style = bold, label=""];
12->20 [style = bold, label=""];
7->4 [style = bold, label=""];
5->12 [style = dotted, label="true"];
2->10 [style = bold, label=""];
3->13 [style = dashed, label="0"];
18->10 [style = solid, label="indexName"];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
1->7 [style = dotted, label="true"];
6->1 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
11->0 [style = bold, label=""];
12->20 [style = dotted, label="true"];
14->0 [style = bold, label=""];
8->2 [style = bold, label=""];
5->12 [style = bold, label=""];
18->10 [style = bold, label=""];
21->22 [style = bold, label=""];
1->16 [style = bold, label=""];
12->19 [style = dotted, label="true"];
22->12 [style = bold, label=""];
0->8 [style = bold, label=""];
2->18 [style = dashed, label="0"];
13->5 [style = bold, label=""];
5->9 [style = dotted, label="false"];
4->13 [style = solid, label="indexMetaData"];
1->16 [style = dotted, label="true"];
16->4 [style = bold, label=""];
20->19 [style = bold, label=""];
15->8 [style = bold, label=""];
17->18 [style = bold, label=""];
2->10 [style = solid, label="indexName"];
}
