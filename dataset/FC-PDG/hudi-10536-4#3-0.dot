digraph {
0 [style = filled, label = "boolean retryFailure@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "boolean retryFailure@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"000\",file1P0))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String p0 = \"2020/01/01\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "HoodieTableMetaClient metaClient = HoodieTestUtils.init(hadoopConf,basePath,HoodieTableType.MERGE_ON_READ)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(testTable.logFileExists(p0,\"001\",file1P0,3))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStats = runCleaner(config)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(3,getCleanStat(hoodieCleanStats,p0).getSuccessDeleteFiles().size(),\"Must clean three files, one parquet and 2 log files\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testKeepLatestVersionsWithPendingCompactions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testKeepLatestVersionsWithPendingCompactions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(testTable.logFilesExist(p0,\"000\",file1P0,1,2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "HoodieTestTable testTable = HoodieTestTable.of(metaClient)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withAssumeDatePartitioning(true).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS).retainFileVersions(1).build()).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withAssumeDatePartitioning(true).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS).retainFileVersions(2).build()).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testKeepLatestFileVersionsMOR['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testPendingCompactions(config,36,9,retryFailure)@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"001\",file1P0))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testTable.forDeltaCommit(\"000\").withLogFile(p0,file1P0,1).withLogFile(p0,file1P0,2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testTable.addDeltaCommit(\"001\").withBaseFilesInPartition(p0,file1P0).withLogFile(p0,file1P0,3)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String file1P0 = testTable.addDeltaCommit(\"000\").withBaseFilesInPartitions(p0).get(p0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
13->10 [style = bold, label=""];
10->18 [style = bold, label=""];
2->0 [style = dotted, label="true"];
10->18 [style = solid, label="p0"];
0->1 [style = solid, label="retryFailure"];
3->1 [style = solid, label="config"];
3->1 [style = bold, label=""];
7->12 [style = bold, label=""];
2->3 [style = bold, label=""];
4->1 [style = solid, label="retryFailure"];
18->9 [style = solid, label="file1P0"];
14->17 [style = bold, label=""];
19->11 [style = bold, label=""];
0->4 [style = dashed, label="0"];
10->17 [style = solid, label="p0"];
18->17 [style = solid, label="file1P0"];
16->19 [style = bold, label=""];
10->9 [style = solid, label="p0"];
12->6 [style = bold, label=""];
18->14 [style = solid, label="file1P0"];
10->8 [style = solid, label="p0"];
6->15 [style = bold, label=""];
5->4 [style = dotted, label="true"];
3->19 [style = dashed, label="0"];
17->7 [style = bold, label=""];
10->15 [style = solid, label="p0"];
18->8 [style = solid, label="file1P0"];
19->7 [style = solid, label="config"];
11->13 [style = bold, label=""];
11->13 [style = solid, label="metaClient"];
8->9 [style = bold, label=""];
18->15 [style = solid, label="file1P0"];
10->6 [style = solid, label="p0"];
18->14 [style = bold, label=""];
15->8 [style = bold, label=""];
18->6 [style = solid, label="file1P0"];
10->14 [style = solid, label="p0"];
}
