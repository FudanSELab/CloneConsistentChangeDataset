digraph {
6 [style = filled, label = "assertThat(SqlFunctions.ltAny(1L,2.0D),is(true))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(SqlFunctions.gtAny(\"banana\",\"apple\"),is(true))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(SqlFunctions.ltAny(1,2.0D),is(true))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(SqlFunctions.ltAny(new BigDecimal(1L),2L),is(true))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "fail(\"'lt' on non-numeric different type is not possible\")@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(SqlFunctions.gtAny(new BigDecimal(2L),1),is(true))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(SqlFunctions.gtAny(new BigDecimal(2L),1L),is(true))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(SqlFunctions.ltAny(1,2L),is(true))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(SqlFunctions.gtAny(new BigDecimal(2L),new BigDecimal(1.0D)),is(true))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testLtWithAny['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(SqlFunctions.ltAny(\"1\",2L),is(false))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testGtWithAny['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(SqlFunctions.ltAny(new BigDecimal(1L),new BigDecimal(2.0D)),is(true))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(SqlFunctions.ltAny(\"apple\",\"banana\"),is(true))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(SqlFunctions.gtAny(new BigDecimal(2L),1.0D),is(true))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(SqlFunctions.ltAny(new BigDecimal(1L),2.0D),is(true))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "fail(\"'gt' on non-numeric different type is not possible\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(SqlFunctions.gtAny(2,1.0D),is(true))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(SqlFunctions.gtAny(\"2\",1L),is(false))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(SqlFunctions.gtAny(2,1L),is(true))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(SqlFunctions.ltAny(new BigDecimal(1L),2),is(true))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(SqlFunctions.gtAny(2L,1.0D),is(true))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testLtWithAny['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
0->9 [style = bold, label=""];
9->16 [style = dashed, label="0"];
22->15 [style = bold, label=""];
15->14 [style = bold, label=""];
11->1 [style = bold, label=""];
2->6 [style = bold, label=""];
19->20 [style = bold, label=""];
10->12 [style = dashed, label="0"];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
1->20 [style = dashed, label="0"];
6->15 [style = dashed, label="0"];
16->21 [style = bold, label=""];
20->12 [style = bold, label=""];
7->13 [style = dashed, label="0"];
9->5 [style = bold, label=""];
5->21 [style = dashed, label="0"];
0->18 [style = dashed, label="0"];
8->17 [style = dashed, label="0"];
14->18 [style = bold, label=""];
10->2 [style = bold, label=""];
4->1 [style = bold, label=""];
17->13 [style = bold, label=""];
3->14 [style = dashed, label="0"];
1->10 [style = bold, label=""];
2->22 [style = dashed, label="0"];
21->17 [style = bold, label=""];
12->22 [style = bold, label=""];
18->16 [style = bold, label=""];
}
