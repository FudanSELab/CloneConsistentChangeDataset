digraph {
9 [style = filled, label = "assertEquals(null,project.getBuildByNumber(1))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNull(project.getBuildByNumber(2))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(null,project.getBuildByNumber(2))@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "stableVsUnstable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(Result.UNSTABLE,build(project))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(Result.FAILURE,build(project))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(3,numberOf(project.getLastFailedBuild()))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(Result.SUCCESS,build(project))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "project.setLogRotator(new LogRotator(-1,2,-1,-1))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "project.getBuildersList().replaceBy(Collections.singleton(new FailureBuilder()))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "successVsFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(1,numberOf(project.getLastSuccessfulBuild()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(1,numberOf(project.getLastStableBuild()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNull(project.getBuildByNumber(1))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "project.getPublishersList().replaceBy(Collections.singleton(new TestsFail()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "project.getPublishersList().replaceBy(Collections.emptySet())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(4,numberOf(project.getLastSuccessfulBuild()))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "project.getBuildersList().replaceBy(Collections.emptySet())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "successVsFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertEquals(Result.SUCCESS,build(project))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Result.FAILURE,build(project))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Result.UNSTABLE,build(project))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
12->20 [style = dashed, label="0"];
9->11 [style = bold, label=""];
5->6 [style = solid, label="project"];
16->10 [style = bold, label=""];
11->16 [style = dashed, label="0"];
19->20 [style = bold, label=""];
18->19 [style = bold, label=""];
8->6 [style = bold, label=""];
13->19 [style = dashed, label="0"];
15->16 [style = bold, label=""];
2->4 [style = bold, label=""];
5->3 [style = solid, label="project"];
22->5 [style = bold, label=""];
4->7 [style = bold, label=""];
5->13 [style = solid, label="project"];
5->19 [style = solid, label="project"];
6->18 [style = dashed, label="0"];
20->21 [style = bold, label=""];
7->9 [style = bold, label=""];
12->2 [style = bold, label=""];
13->12 [style = bold, label=""];
5->0 [style = bold, label=""];
2->21 [style = dashed, label="0"];
11->10 [style = bold, label=""];
3->8 [style = bold, label=""];
6->13 [style = bold, label=""];
8->17 [style = dashed, label="0"];
7->15 [style = bold, label=""];
3->17 [style = bold, label=""];
5->18 [style = solid, label="project"];
21->4 [style = bold, label=""];
5->4 [style = solid, label="project"];
17->18 [style = bold, label=""];
9->15 [style = dashed, label="0"];
14->5 [style = bold, label=""];
}
