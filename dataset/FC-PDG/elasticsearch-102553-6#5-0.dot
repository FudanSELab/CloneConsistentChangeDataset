digraph {
15 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(termsQuery))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Query termsQuery = mapperService.fieldType(\"foo\").termsQuery(Collections.singletonList(\"bar\"),null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested_missing\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(termsQuery))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testRangeQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "rangeQuery = mapperService.fieldType(\"nested3.foo2\").rangeQuery(2,5,true,true,null,null,null,context)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNestedDocs(termsQuery))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Query rangeQuery = mapperService.fieldType(\"foo2\").rangeQuery(2,5,true,true,null,null,null,null)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested1\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "termsQuery = mapperService.fieldType(\"nested2.foo\").termsQuery(Collections.singletonList(\"bar\"),null)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "termsQuery = mapperService.fieldType(\"nested3.foo\").termsQuery(Collections.singletonList(\"bar\"),null)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "testTermsQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested2\"))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "termsQuery = mapperService.fieldType(\"nested1.foo\").termsQuery(Collections.singletonList(\"bar\"),null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested_missing\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "rangeQuery = mapperService.fieldType(\"nested2.foo2\").rangeQuery(2,5,true,true,null,null,null,context)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested1\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested3\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested3\"))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Query rangeQuery = mapperService.fieldType(\"foo2\").rangeQuery(2,5,true,true,null,null,null,context)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "rangeQuery = mapperService.fieldType(\"nested1.foo2\").rangeQuery(2,5,true,true,null,null,null,context)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@27@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested_missing\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested3\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested_missing\"))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "QueryShardContext context = createSearchContext(indexService).getQueryShardContext()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested3\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested3\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested2\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested1\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested2\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested2\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested1\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNestedDocs(termsQuery))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested_missing\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(termsQuery,\"nested1\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testRangeQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(new NestedHelper(mapperService).mightMatchNonNestedDocs(rangeQuery,\"nested2\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertFalse(new NestedHelper(mapperService).mightMatchNestedDocs(rangeQuery))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->30 [style = bold, label=""];
42->41 [style = bold, label=""];
15->10 [style = bold, label=""];
56->52 [style = bold, label=""];
34->45 [style = solid, label="termsQuery"];
35->32 [style = solid, label="termsQuery"];
8->35 [style = dashed, label="0"];
43->42 [style = bold, label=""];
6->51 [style = dashed, label="0"];
29->10 [style = solid, label="rangeQuery"];
30->22 [style = solid, label="rangeQuery"];
55->51 [style = bold, label=""];
23->49 [style = dashed, label="0"];
48->35 [style = bold, label=""];
28->26 [style = solid, label="context"];
8->2 [style = solid, label="rangeQuery"];
9->16 [style = bold, label=""];
1->23 [style = bold, label=""];
22->4 [style = bold, label=""];
31->19 [style = solid, label="rangeQuery"];
47->49 [style = bold, label=""];
28->31 [style = solid, label="context"];
17->13 [style = solid, label="rangeQuery"];
6->0 [style = solid, label="rangeQuery"];
6->12 [style = solid, label="rangeQuery"];
35->50 [style = bold, label=""];
21->1 [style = bold, label=""];
8->4 [style = solid, label="rangeQuery"];
54->48 [style = solid, label="termsQuery"];
33->56 [style = bold, label=""];
37->32 [style = bold, label=""];
30->14 [style = bold, label=""];
0->34 [style = dashed, label="0"];
8->30 [style = dashed, label="0"];
39->47 [style = bold, label=""];
35->46 [style = solid, label="termsQuery"];
0->21 [style = solid, label="rangeQuery"];
0->1 [style = solid, label="rangeQuery"];
29->13 [style = solid, label="rangeQuery"];
17->20 [style = solid, label="rangeQuery"];
25->28 [style = bold, label=""];
30->27 [style = solid, label="rangeQuery"];
8->14 [style = solid, label="rangeQuery"];
31->0 [style = solid, label="rangeQuery"];
19->12 [style = bold, label=""];
18->53 [style = dashed, label="0"];
24->0 [style = bold, label=""];
30->2 [style = solid, label="rangeQuery"];
26->1 [style = bold, label=""];
14->22 [style = bold, label=""];
19->52 [style = dashed, label="0"];
54->35 [style = solid, label="termsQuery"];
51->38 [style = solid, label="termsQuery"];
0->21 [style = bold, label=""];
4->2 [style = bold, label=""];
13->40 [style = dashed, label="0"];
17->10 [style = solid, label="rangeQuery"];
16->19 [style = bold, label=""];
26->23 [style = solid, label="rangeQuery"];
46->37 [style = bold, label=""];
34->47 [style = solid, label="termsQuery"];
30->14 [style = solid, label="rangeQuery"];
0->17 [style = solid, label="rangeQuery"];
51->52 [style = solid, label="termsQuery"];
17->8 [style = solid, label="rangeQuery"];
22->37 [style = dashed, label="0"];
6->19 [style = solid, label="rangeQuery"];
1->47 [style = dashed, label="0"];
20->41 [style = dashed, label="0"];
17->15 [style = bold, label=""];
13->5 [style = bold, label=""];
2->27 [style = bold, label=""];
17->5 [style = solid, label="rangeQuery"];
52->36 [style = bold, label=""];
29->30 [style = solid, label="rangeQuery"];
18->7 [style = bold, label=""];
54->42 [style = solid, label="termsQuery"];
31->24 [style = solid, label="rangeQuery"];
35->44 [style = solid, label="termsQuery"];
35->37 [style = solid, label="termsQuery"];
29->5 [style = solid, label="rangeQuery"];
20->13 [style = bold, label=""];
7->17 [style = bold, label=""];
51->34 [style = solid, label="termsQuery"];
54->43 [style = bold, label=""];
51->56 [style = solid, label="termsQuery"];
28->31 [style = bold, label=""];
51->33 [style = solid, label="termsQuery"];
8->3 [style = bold, label=""];
6->24 [style = solid, label="rangeQuery"];
54->43 [style = solid, label="termsQuery"];
15->43 [style = dashed, label="0"];
26->1 [style = solid, label="rangeQuery"];
0->26 [style = dashed, label="0"];
29->8 [style = solid, label="rangeQuery"];
12->24 [style = bold, label=""];
14->46 [style = dashed, label="0"];
26->18 [style = solid, label="rangeQuery"];
54->40 [style = solid, label="termsQuery"];
21->39 [style = dashed, label="0"];
30->4 [style = solid, label="rangeQuery"];
26->29 [style = solid, label="rangeQuery"];
34->39 [style = solid, label="termsQuery"];
41->40 [style = bold, label=""];
29->20 [style = solid, label="rangeQuery"];
28->30 [style = solid, label="context"];
7->45 [style = dashed, label="0"];
34->39 [style = bold, label=""];
38->34 [style = bold, label=""];
32->44 [style = bold, label=""];
29->10 [style = bold, label=""];
2->44 [style = dashed, label="0"];
6->16 [style = solid, label="rangeQuery"];
0->18 [style = solid, label="rangeQuery"];
8->3 [style = solid, label="rangeQuery"];
23->18 [style = bold, label=""];
0->7 [style = solid, label="rangeQuery"];
17->15 [style = solid, label="rangeQuery"];
28->29 [style = solid, label="context"];
31->12 [style = solid, label="rangeQuery"];
5->8 [style = bold, label=""];
10->20 [style = bold, label=""];
34->54 [style = solid, label="termsQuery"];
31->16 [style = solid, label="rangeQuery"];
0->26 [style = bold, label=""];
40->48 [style = bold, label=""];
31->16 [style = bold, label=""];
50->46 [style = bold, label=""];
11->6 [style = bold, label=""];
3->14 [style = bold, label=""];
51->36 [style = solid, label="termsQuery"];
17->29 [style = dashed, label="0"];
34->49 [style = solid, label="termsQuery"];
26->7 [style = solid, label="rangeQuery"];
10->42 [style = dashed, label="0"];
0->23 [style = solid, label="rangeQuery"];
9->33 [style = dashed, label="0"];
49->53 [style = bold, label=""];
45->54 [style = bold, label=""];
4->32 [style = dashed, label="0"];
16->56 [style = dashed, label="0"];
5->48 [style = dashed, label="0"];
3->50 [style = dashed, label="0"];
12->36 [style = dashed, label="0"];
8->22 [style = solid, label="rangeQuery"];
6->9 [style = solid, label="rangeQuery"];
31->26 [style = solid, label="rangeQuery"];
26->17 [style = solid, label="rangeQuery"];
35->50 [style = solid, label="termsQuery"];
36->38 [style = bold, label=""];
6->9 [style = bold, label=""];
17->29 [style = bold, label=""];
53->45 [style = bold, label=""];
24->38 [style = dashed, label="0"];
34->53 [style = solid, label="termsQuery"];
17->54 [style = dashed, label="0"];
54->41 [style = solid, label="termsQuery"];
51->33 [style = bold, label=""];
}
