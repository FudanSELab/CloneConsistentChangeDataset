digraph {
0 [style = filled, label = "test_makeCursors_factToCountryRightWithBaseFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "test_makeCursors_factToCountryFullWithBaseFilter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnIsoCode(JoinType.RIGHT))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "test_makeCursors_factToCountryRightWithBaseFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = makeDefaultConfigPreAnalysis(null,joinableClauses,VirtualColumns.EMPTY)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),baseFilter,joinableClauses,joinFilterPreAnalysis).makeCursors(null,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryNumber\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a20,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a28,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a30,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a38,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a40,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a48,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a50,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a58,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a60,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a68,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a70,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a78,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a80,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a88,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a90,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925a98,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925aa0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925aa8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925ab0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925ab8))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "final Filter baseFilter = Filters.or(Arrays.asList(new SelectorDimFilter(\"countryIsoCode\",\"CA\",null).toFilter(),new SelectorDimFilter(\"countryIsoCode\",\"MatchNothing\",null).toFilter()))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnIsoCode(JoinType.FULL))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = makeDefaultConfigPreAnalysis(baseFilter,joinableClauses,VirtualColumns.EMPTY)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "JoinTestHelper.verifyCursors(new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),Filters.or(Arrays.asList(new SelectorDimFilter(\"countryIsoCode\",\"CA\",null).toFilter(),new SelectorDimFilter(\"countryIsoCode\",\"MatchNothing\",null).toFilter())),joinableClauses,joinFilterPreAnalysis).makeCursors(null,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryNumber\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b1c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b24,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b2c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b34,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b41,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b49,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b51,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b59,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b61,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b69,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b71,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b79,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b81,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b89,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b91,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925b99,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925ba1,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925ba9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925bb1,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925bb9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@925bc1))@@@5@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->7 [style = bold, label=""];
1->9 [style = dashed, label="0"];
1->4 [style = solid, label="joinableClauses"];
1->2 [style = bold, label=""];
1->4 [style = bold, label=""];
3->6 [style = dashed, label="0"];
7->1 [style = bold, label=""];
7->4 [style = solid, label="baseFilter"];
9->2 [style = solid, label="joinableClauses"];
4->6 [style = bold, label=""];
9->2 [style = bold, label=""];
0->1 [style = bold, label=""];
1->2 [style = solid, label="joinableClauses"];
2->3 [style = bold, label=""];
2->4 [style = dashed, label="0"];
8->9 [style = bold, label=""];
}
