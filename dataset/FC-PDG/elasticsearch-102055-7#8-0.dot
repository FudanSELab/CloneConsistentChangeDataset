digraph {
22 [style = filled, label = "IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ClusterState after = service.innerExecute(before,Arrays.asList(new AliasAction.Add(\"test\",\"alias\",null,null,null,false)))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "after = service.applyAliasActions(before,Arrays.asList(new AliasAction.Add(\"test\",\"alias\",null,null,null,true)))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testAddWriteOnlyWithNoExistingAliases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "ClusterState before = ClusterState.builder(ClusterName.DEFAULT).metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertNull(((AliasOrIndex.Alias)after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "after = service.innerExecute(before,Arrays.asList(new AliasAction.Add(\"test\",\"alias\",null,null,null,null)))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\").putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build()).settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertAliasesVersionIncreased(\"test\",before,after)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(exception.getMessage(),startsWith(\"alias (alias( has more than one write index (\"))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "after = service.innerExecute(before,Arrays.asList(new AliasAction.Add(\"test\",\"alias\",null,null,null,true)))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertAliasesVersionIncreased(\"test\",before,after)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(((AliasOrIndex.Alias)after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),equalTo(after.metaData().index(\"test\")))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "after = service.applyAliasActions(before,Arrays.asList(new AliasAction.Add(\"test\",\"alias\",null,null,null,null)))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertThat(((AliasOrIndex.Alias)after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),equalTo(after.metaData().index(\"test2\")))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ClusterState after = service.applyAliasActions(before,Arrays.asList(new AliasAction.Add(\"test\",\"alias\",null,null,null,false)))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "ClusterState after = service.innerExecute(before,Arrays.asList(new AliasAction.Add(\"test\",\"alias\",null,null,null,null)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testAddWriteOnlyWithNoExistingAliases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testAddWriteOnlyWithExistingWriteIndex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(),\"test\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Exception exception = expectThrows(,null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertAliasesVersionIncreased(\"test\",before,after)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(((AliasOrIndex.Alias)after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),equalTo(after.metaData().index(\"test\")))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertAliasesVersionUnchanged(\"test2\",before,after)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->4 [style = bold, label=""];
8->2 [style = solid, label="after"];
15->13 [style = bold, label=""];
1->16 [style = solid, label="before"];
18->24 [style = bold, label=""];
12->5 [style = bold, label=""];
1->8 [style = solid, label="before"];
1->4 [style = solid, label="before"];
14->7 [style = solid, label="after"];
17->1 [style = bold, label=""];
21->0 [style = bold, label=""];
6->21 [style = bold, label=""];
16->6 [style = bold, label=""];
8->15 [style = dashed, label="0"];
3->6 [style = bold, label=""];
16->0 [style = solid, label="after"];
8->13 [style = bold, label=""];
13->11 [style = bold, label=""];
15->2 [style = solid, label="after"];
1->3 [style = solid, label="before"];
7->3 [style = bold, label=""];
11->2 [style = bold, label=""];
0->15 [style = bold, label=""];
1->2 [style = solid, label="before"];
24->6 [style = solid, label="before"];
1->15 [style = solid, label="before"];
24->21 [style = solid, label="before"];
22->18 [style = bold, label=""];
1->0 [style = solid, label="before"];
24->25 [style = bold, label=""];
6->10 [style = bold, label=""];
14->12 [style = bold, label=""];
10->0 [style = bold, label=""];
7->16 [style = bold, label=""];
25->26 [style = bold, label=""];
0->8 [style = bold, label=""];
26->23 [style = bold, label=""];
23->6 [style = bold, label=""];
4->12 [style = bold, label=""];
5->7 [style = bold, label=""];
0->20 [style = bold, label=""];
1->14 [style = bold, label=""];
4->14 [style = dashed, label="0"];
1->7 [style = solid, label="before"];
3->0 [style = solid, label="after"];
9->1 [style = bold, label=""];
4->7 [style = solid, label="after"];
25->21 [style = solid, label="after"];
19->22 [style = bold, label=""];
10->23 [style = dashed, label="0"];
3->16 [style = dashed, label="0"];
24->25 [style = solid, label="before"];
25->6 [style = solid, label="after"];
1->14 [style = solid, label="before"];
}
