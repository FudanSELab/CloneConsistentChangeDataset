digraph {
59 [style = filled, label = "testImportEntries1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(StandardField.YEAR))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "entry = entries.get(4)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"misc\",entry.getType())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
71 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(StandardField.PAGES))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(\"author\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertEquals(\"inproceedings\",entry.getType())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(Optional.of(\"April\"),entry.getField(\"month\"))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
72 [style = filled, label = "assertEquals(StandardEntryType.InProceedings,entry.getType())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(StandardField.PAGES))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
76 [style = filled, label = "assertEquals(Optional.of(\"TestPublisher\"),entry.getField(StandardField.PUBLISHER))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(Optional.of(\"2\"),entry.getField(\"issue\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
66 [style = filled, label = "assertEquals(Optional.of(\"Publisher\"),entry.getField(StandardField.PUBLISHER))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
81 [style = filled, label = "assertEquals(Optional.of(\"58\"),entry.getField(StandardField.PAGES))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "testImportEntries1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(Optional.of(\"Address\"),entry.getField(StandardField.ADDRESS))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(Optional.empty(),entry.getField(\"title\"))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "assertEquals(Optional.of(\"April\"),entry.getField(StandardField.MONTH))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(\"author\"))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Optional.of(\"Publisher\"),entry.getField(\"publisher\"))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "assertEquals(Optional.of(\"2014\"),entry.getField(StandardField.YEAR))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "entry = entries.get(1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(Optional.of(\"Mustermann and Musterfrau\"),entry.getField(StandardField.AUTHOR))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(StandardField.BOOKTITLE))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "assertEquals(Optional.of(\"2\"),entry.getField(StandardField.ISSUE))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "entry = entries.get(2)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(StandardField.PAGES))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(Optional.of(\"28\"),entry.getField(\"volume\"))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertEquals(Optional.of(\"58\"),entry.getField(\"pages\"))@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"booktitle\"))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "assertEquals(Optional.of(\"Max the Editor\"),entry.getField(StandardField.TITLE))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(Optional.of(\"2014\"),entry.getField(\"year\"))@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertEquals(Optional.of(\"28\"),entry.getField(\"volume\"))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertEquals(Optional.of(\"Test\"),entry.getField(\"title\"))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(StandardField.EDITOR))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(5,entries.size())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Path file = Paths.get(.getResource(\"OvidImporterTest1.txt\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BibEntry entry = entries.get(0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(Optional.of(\"Einleitung\"),entry.getField(new UnknownField(\"chaptertitle\")))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "assertEquals(StandardEntryType.Article,entry.getType())@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
79 [style = filled, label = "assertEquals(Optional.empty(),entry.getField(StandardField.TITLE))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(StandardField.JOURNAL))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(Optional.of(\"Editor\"),entry.getField(StandardField.EDITOR))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertEquals(Optional.of(\"Address\"),entry.getField(\"address\"))@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Optional.of(\"Editor\"),entry.getField(\"editor\"))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "assertEquals(Optional.of(\"Test\"),entry.getField(StandardField.TITLE))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertEquals(Optional.of(\"28\"),entry.getField(StandardField.VOLUME))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
73 [style = filled, label = "assertEquals(Optional.of(\"Test\"),entry.getField(StandardField.ADDRESS))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "assertEquals(Optional.of(\"Musterbuch\"),entry.getField(StandardField.TITLE))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "assertEquals(Optional.of(\"2\"),entry.getField(\"issue\"))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertEquals(Optional.of(\"2\"),entry.getField(StandardField.ISSUE))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
80 [style = filled, label = "assertEquals(StandardEntryType.InCollection,entry.getType())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(StandardField.YEAR))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"journal\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
83 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,Charsets.UTF_8).getDatabase().getEntries()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "Path file = Paths.get(.getResource(\"MedlinePlainImporterStringOutOfBounds.txt\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(Optional.of(\"Musterbuch\"),entry.getField(\"title\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(Optional.of(\"Mustermann and Musterfrau\"),entry.getField(\"author\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Optional.of(\"Max the Editor\"),entry.getField(\"title\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "assertEquals(StandardEntryType.Book,entry.getType())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(StandardField.AUTHOR))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(Optional.of(\"Einleitung\"),entry.getField(\"chaptertitle\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "assertEquals(Optional.of(\"Short abstract\"),entry.getField(StandardField.ABSTRACT))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "assertEquals(Optional.of(\"28\"),entry.getField(StandardField.VOLUME))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(Optional.of(\"Short abstract\"),entry.getField(\"abstract\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
84 [style = filled, label = "testWithMultipleEntries['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(\"article\",entry.getType())@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(StandardField.JOURNAL))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(StandardField.AUTHOR))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "entry = entries.get(3)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\"incollection\",entry.getType())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"journal\"))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
82 [style = filled, label = "BibEntryAssert.assertEquals(,\"MedlinePlainImporterStringOutOfBounds.bib\",entries)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(StandardField.YEAR))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(Optional.of(\"TestPublisher\"),entry.getField(\"publisher\"))@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"book\",entry.getType())@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "assertEquals(StandardEntryType.Misc,entry.getType())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertEquals(Optional.of(\"Test\"),entry.getField(\"address\"))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(\"editor\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->35 [style = bold, label=""];
65->60 [style = bold, label=""];
53->69 [style = bold, label=""];
81->73 [style = bold, label=""];
31->73 [style = dashed, label="0"];
46->61 [style = bold, label=""];
26->34 [style = bold, label=""];
6->70 [style = dashed, label="0"];
58->3 [style = bold, label=""];
79->76 [style = bold, label=""];
22->52 [style = dashed, label="0"];
1->63 [style = dashed, label="0"];
25->44 [style = bold, label=""];
6->29 [style = bold, label=""];
56->47 [style = bold, label=""];
14->7 [style = bold, label=""];
50->65 [style = bold, label=""];
55->63 [style = bold, label=""];
8->36 [style = bold, label=""];
26->80 [style = dashed, label="0"];
39->31 [style = bold, label=""];
57->74 [style = bold, label=""];
29->43 [style = bold, label=""];
21->72 [style = dashed, label="0"];
70->57 [style = bold, label=""];
75->77 [style = bold, label=""];
15->79 [style = dashed, label="0"];
41->22 [style = bold, label=""];
35->12 [style = bold, label=""];
49->36 [style = bold, label=""];
1->38 [style = bold, label=""];
61->49 [style = bold, label=""];
0->3 [style = bold, label=""];
11->16 [style = bold, label=""];
32->56 [style = bold, label=""];
47->64 [style = bold, label=""];
19->18 [style = bold, label=""];
28->5 [style = bold, label=""];
9->39 [style = bold, label=""];
24->85 [style = dashed, label="0"];
66->7 [style = bold, label=""];
21->19 [style = bold, label=""];
3->72 [style = bold, label=""];
62->45 [style = bold, label=""];
38->71 [style = dashed, label="0"];
2->56 [style = dashed, label="0"];
54->81 [style = bold, label=""];
73->79 [style = bold, label=""];
51->75 [style = bold, label=""];
60->48 [style = bold, label=""];
38->32 [style = bold, label=""];
20->55 [style = dashed, label="0"];
7->33 [style = bold, label=""];
7->78 [style = bold, label=""];
0->58 [style = dashed, label="0"];
10->0 [style = bold, label=""];
71->32 [style = bold, label=""];
40->17 [style = bold, label=""];
83->82 [style = solid, label="entries"];
33->78 [style = dashed, label="0"];
67->51 [style = bold, label=""];
18->41 [style = bold, label=""];
45->52 [style = bold, label=""];
24->13 [style = bold, label=""];
11->51 [style = dashed, label="0"];
17->8 [style = bold, label=""];
44->42 [style = bold, label=""];
42->37 [style = bold, label=""];
52->46 [style = bold, label=""];
14->66 [style = dashed, label="0"];
39->81 [style = dashed, label="0"];
43->20 [style = bold, label=""];
4->67 [style = dashed, label="0"];
41->45 [style = dashed, label="0"];
63->71 [style = bold, label=""];
20->1 [style = bold, label=""];
80->53 [style = bold, label=""];
12->64 [style = dashed, label="0"];
10->77 [style = dashed, label="0"];
5->67 [style = bold, label=""];
13->83 [style = dashed, label="0"];
30->76 [style = dashed, label="0"];
84->85 [style = bold, label=""];
42->60 [style = dashed, label="0"];
5->4 [style = bold, label=""];
3->21 [style = bold, label=""];
43->74 [style = dashed, label="0"];
85->83 [style = bold, label=""];
28->82 [style = dashed, label="0"];
18->62 [style = dashed, label="0"];
25->50 [style = dashed, label="0"];
48->66 [style = bold, label=""];
22->40 [style = bold, label=""];
29->57 [style = dashed, label="0"];
19->68 [style = dashed, label="0"];
44->65 [style = dashed, label="0"];
16->75 [style = dashed, label="0"];
16->10 [style = bold, label=""];
74->55 [style = bold, label=""];
37->48 [style = dashed, label="0"];
68->62 [style = bold, label=""];
35->47 [style = dashed, label="0"];
15->30 [style = bold, label=""];
36->26 [style = bold, label=""];
33->9 [style = bold, label=""];
78->54 [style = bold, label=""];
32->2 [style = bold, label=""];
31->15 [style = bold, label=""];
27->6 [style = bold, label=""];
34->53 [style = dashed, label="0"];
36->80 [style = bold, label=""];
83->82 [style = bold, label=""];
40->46 [style = dashed, label="0"];
37->14 [style = bold, label=""];
23->24 [style = bold, label=""];
77->58 [style = bold, label=""];
12->25 [style = bold, label=""];
27->69 [style = dashed, label="0"];
17->61 [style = dashed, label="0"];
59->24 [style = bold, label=""];
64->50 [style = bold, label=""];
69->70 [style = bold, label=""];
4->11 [style = bold, label=""];
72->68 [style = bold, label=""];
9->54 [style = dashed, label="0"];
8->49 [style = dashed, label="0"];
13->28 [style = bold, label=""];
34->27 [style = bold, label=""];
}
