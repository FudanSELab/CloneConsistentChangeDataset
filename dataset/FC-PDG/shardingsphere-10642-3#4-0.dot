digraph {
4 [style = filled, label = "assertTrue(actual.next())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "SQLServerSelectStatement sqlStatement = new SQLServerSelectStatement()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(new MySQLSelectStatement(),new GroupByContext(Collections.emptyList()),new OrderByContext(Collections.emptyList(),false),new ProjectionsContext(0,0,false,Collections.emptyList()),new PaginationContext(new NumberLiteralLimitValueSegment(0,0,Integer.MAX_VALUE),null,Collections.emptyList()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(actual.next())@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "MergedResult actual = resultMerger.merge(Arrays.asList(mockQueryResult(),mockQueryResult(),mockQueryResult(),mockQueryResult()),selectStatementContext,null)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"MySQL\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"SQLServer\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertFalse(actual.next())@@@6@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sqlStatement.setLimit(new LimitSegment(0,0,new NumberLiteralRowNumberValueSegment(0,0,2,false),new NumberLiteralLimitValueSegment(0,0,4)))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertNextWithOffsetBoundOpenedFalse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(new SQLServerSelectStatement(),new GroupByContext(Collections.emptyList()),new OrderByContext(Collections.emptyList(),false),new ProjectionsContext(0,0,false,Collections.emptyList()),new PaginationContext(new NumberLiteralRowNumberValueSegment(0,0,2,false),new NumberLiteralLimitValueSegment(0,0,4),Collections.emptyList()))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(actual.next())@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertFalse(actual.next())@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "final ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"SQLServer\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "MergedResult actual = resultMerger.merge(Arrays.asList(mockQueryResult(),mockQueryResult(),mockQueryResult(),mockQueryResult()),selectStatementContext,null)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "when(metaData.getSchema()).thenReturn(schema)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(Collections.singletonMap(DefaultSchema.LOGIC_NAME,metaData),Collections.emptyList(),sqlStatement,DefaultSchema.LOGIC_NAME)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertTrue(actual.next())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "final ShardingSphereMetaData metaData = mock()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertNextForSkipAll['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "sqlStatement.setProjections(new ProjectionsSegment(0,0))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertNextWithOffsetBoundOpenedFalse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
6->3 [style = bold, label=""];
8->10 [style = bold, label=""];
1->4 [style = bold, label=""];
21->19 [style = bold, label=""];
19->20 [style = bold, label=""];
17->9 [style = bold, label=""];
16->7 [style = bold, label=""];
18->12 [style = bold, label=""];
14->17 [style = bold, label=""];
4->2 [style = bold, label=""];
20->1 [style = bold, label=""];
0->20 [style = dashed, label="0"];
0->1 [style = solid, label="selectStatementContext"];
13->16 [style = bold, label=""];
3->0 [style = bold, label=""];
14->7 [style = solid, label="metaData"];
3->19 [style = dashed, label="0"];
20->1 [style = solid, label="selectStatementContext"];
7->15 [style = solid, label="selectStatementContext"];
3->12 [style = dashed, label="0"];
0->1 [style = bold, label=""];
12->14 [style = bold, label=""];
7->15 [style = bold, label=""];
15->8 [style = bold, label=""];
9->7 [style = solid, label="sqlStatement"];
2->5 [style = bold, label=""];
9->13 [style = bold, label=""];
10->11 [style = bold, label=""];
}
