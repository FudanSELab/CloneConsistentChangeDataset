digraph {
27 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values,true)))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "testCalculateMean_Collection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "values.add(new Double(9.0))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values,true)))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values)))@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(9.0,Statistics.calculateMean(values,false),EPSILON)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(pass)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "List values = new ArrayList()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "values.add(new Double(9.0))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(new Number(((()))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testCalculateMean_Array['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "values.add(new Double(Double.NaN))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(4.0,mean,EPSILON)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "double mean = Statistics.calculateMean(values)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "values.add(new Double(9.0))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(9.0,Statistics.calculateMean(values,false),EPSILON)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values)))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values,true)))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(pass)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(1.0,Statistics.calculateMean(values,true),EPSILON)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values,false)))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Statistics.calculateMean((Collection)null,false)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "values.add(null)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "pass = false@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values)))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values)))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(9.0,Statistics.calculateMean(values,true),EPSILON)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Statistics.calculateMean((Collection)null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values)))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "values = new Number((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2a952b@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Number(( values = new Number((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2a9506@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "values.add(new Double(3.0))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(1.0,Statistics.calculateMean(values,false),EPSILON)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "IllegalArgumentException e@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "values = new ArrayList()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(1.0,Statistics.calculateMean(values,false),EPSILON)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(new Number((((,false)))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Statistics.calculateMean((Number(()null,false)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Statistics.calculateMean((Number(()null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "values = new Number((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2a9553@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testCalculateMean_Array['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "values.clear()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "boolean pass = false@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(1.0,Statistics.calculateMean(values),EPSILON)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "values.add(new Double(2.0))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "values.add(new Double(2.0))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(9.0,Statistics.calculateMean(values),EPSILON)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "IllegalArgumentException e@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "values.add(new Double(Double.NaN))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(9.0,Statistics.calculateMean(values,false),EPSILON)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "pass = true@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "pass = true@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTrue(Double.isNaN(Statistics.calculateMean(values,true)))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19->3 [style = bold, label=""];
38->26 [style = bold, label=""];
4->6 [style = bold, label=""];
20->23 [style = bold, label=""];
42->18 [style = bold, label=""];
15->1 [style = bold, label=""];
43->45 [style = bold, label=""];
23->10 [style = bold, label=""];
2->47 [style = dashed, label="0"];
22->33 [style = bold, label=""];
23->10 [style = solid, label="values"];
33->51 [style = solid, label="values"];
14->24 [style = bold, label=""];
33->48 [style = solid, label="values"];
6->22 [style = bold, label=""];
25->1 [style = bold, label=""];
35->32 [style = bold, label=""];
28->41 [style = bold, label=""];
3->17 [style = bold, label=""];
32->28 [style = bold, label=""];
33->31 [style = solid, label="values"];
43->45 [style = solid, label="mean"];
33->26 [style = solid, label="values"];
33->28 [style = solid, label="values"];
41->46 [style = bold, label=""];
9->12 [style = bold, label=""];
33->27 [style = solid, label="values"];
40->30 [style = bold, label=""];
33->51 [style = bold, label=""];
1->49 [style = bold, label=""];
16->8 [style = bold, label=""];
33->10 [style = solid, label="values"];
49->8 [style = bold, label=""];
19->20 [style = solid, label="values"];
2->24 [style = solid, label="values"];
1->8 [style = solid, label="pass"];
44->50 [style = bold, label=""];
22->21 [style = bold, label=""];
2->14 [style = solid, label="values"];
13->30 [style = dashed, label="0"];
18->29 [style = bold, label=""];
5->7 [style = bold, label=""];
19->3 [style = solid, label="values"];
21->11 [style = bold, label=""];
30->47 [style = bold, label=""];
4->22 [style = solid, label="pass"];
7->8 [style = bold, label=""];
45->44 [style = bold, label=""];
23->13 [style = solid, label="values"];
36->43 [style = bold, label=""];
18->10 [style = dashed, label="0"];
34->36 [style = bold, label=""];
17->20 [style = bold, label=""];
51->40 [style = bold, label=""];
12->22 [style = solid, label="pass"];
47->48 [style = bold, label=""];
2->18 [style = solid, label="values"];
11->19 [style = bold, label=""];
42->50 [style = solid, label="values"];
33->52 [style = solid, label="values"];
37->22 [style = bold, label=""];
23->0 [style = solid, label="values"];
19->17 [style = solid, label="values"];
10->0 [style = bold, label=""];
42->43 [style = solid, label="values"];
33->41 [style = solid, label="values"];
7->8 [style = solid, label="pass"];
31->52 [style = bold, label=""];
24->18 [style = bold, label=""];
8->4 [style = bold, label=""];
0->35 [style = bold, label=""];
33->46 [style = solid, label="values"];
6->37 [style = dashed, label="0"];
5->7 [style = dotted, label="true"];
46->42 [style = bold, label=""];
0->13 [style = bold, label=""];
26->27 [style = bold, label=""];
4->37 [style = bold, label=""];
52->38 [style = bold, label=""];
39->1 [style = bold, label=""];
48->31 [style = bold, label=""];
12->22 [style = bold, label=""];
33->30 [style = solid, label="values"];
29->34 [style = bold, label=""];
27->10 [style = bold, label=""];
2->14 [style = bold, label=""];
9->12 [style = dotted, label="true"];
33->40 [style = solid, label="values"];
1->16 [style = bold, label=""];
13->2 [style = bold, label=""];
16->49 [style = dashed, label="0"];
}
