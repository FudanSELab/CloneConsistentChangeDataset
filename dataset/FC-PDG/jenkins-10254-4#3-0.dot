digraph {
6 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Item.DELETE,Jenkins.READ).invokeWithArgs(\"aProject\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "deleteJobShouldFailWithoutJobReadPermission['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "j.createFreeStyleProject(\"aProject\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Job.DELETE,Jenkins.READ).invokeWithArgs(\"aProject\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertThat(result,failedWith(3))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ).invokeWithArgs(\"aProject\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "consoleShouldFailWithoutJobReadPermission['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: No such job 'aProject'\"))@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "deleteJobShouldFailWithoutJobReadPermission['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
8->0 [style = bold, label=""];
6->0 [style = solid, label="result"];
4->8 [style = bold, label=""];
4->3 [style = bold, label=""];
3->8 [style = dashed, label="0"];
3->1 [style = solid, label="result"];
6->0 [style = bold, label=""];
8->0 [style = solid, label="result"];
3->6 [style = dashed, label="0"];
7->4 [style = bold, label=""];
8->1 [style = solid, label="result"];
3->0 [style = solid, label="result"];
2->4 [style = bold, label=""];
4->6 [style = bold, label=""];
0->1 [style = bold, label=""];
3->0 [style = bold, label=""];
9->4 [style = bold, label=""];
6->1 [style = solid, label="result"];
}
