digraph {
15 [style = filled, label = "testSingleOrDefaultPredicate1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "String(( people = {\"Brill\",\"Smith\"}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Integer(( numbersWithTwoGT15 = {5,10,15,20,25}@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertNull(Linq4j.asEnumerable(numbersWithTwoGT15).singleOrDefault(numberGT15))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertNull(Linq4j.asEnumerable(peopleWithoutCharS).singleOrDefault(startWithS))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String(( empty = {}@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(people(0(,Linq4j.asEnumerable(people).firstOrDefault())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNull(Linq4j.asEnumerable(numbersWithoutGT15).singleOrDefault(numberGT15))@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String(( twoPeopleWithCharS = {\"Brill\",\"Smith\",\"Simpson\"}@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Integer(( numbers = {5,10,15,20}@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Predicate1<String> startWithS = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(people(1(,Linq4j.asEnumerable(people).singleOrDefault(startWithS))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String(( peopleWithoutCharS = {\"Brill\",\"Andrew\",\"Alice\"}@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Integer(( numbers = {5,10,15,20,25}@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNull(Linq4j.asEnumerable(empty).firstOrDefault())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Predicate1<Integer> numberGT15 = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Integer(( numbersWithoutGT15 = {5,10,15}@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(numbers(0(,Linq4j.asEnumerable(numbers).firstOrDefault())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(numbers(3(,Linq4j.asEnumerable(numbers).singleOrDefault(numberGT15))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testFirstOrDefault['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testFirstOrDefault['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "String(( people = {\"Brill\",\"Smith\",\"Simpsom\"}@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNull(Linq4j.asEnumerable(twoPeopleWithCharS).singleOrDefault(startWithS))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->22 [style = bold, label=""];
0->3 [style = bold, label=""];
4->18 [style = dashed, label="0"];
8->16 [style = bold, label=""];
15->10 [style = bold, label=""];
3->1 [style = solid, label="people"];
4->6 [style = bold, label=""];
10->16 [style = solid, label="startWithS"];
22->8 [style = solid, label="numbers"];
10->17 [style = bold, label=""];
10->20 [style = solid, label="startWithS"];
3->4 [style = bold, label=""];
17->11 [style = solid, label="numberGT15"];
21->18 [style = bold, label=""];
19->8 [style = bold, label=""];
7->3 [style = bold, label=""];
21->19 [style = solid, label="people"];
6->2 [style = solid, label="numbers"];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
17->8 [style = solid, label="numberGT15"];
13->19 [style = bold, label=""];
22->12 [style = bold, label=""];
18->9 [style = bold, label=""];
10->19 [style = solid, label="startWithS"];
16->14 [style = bold, label=""];
1->2 [style = bold, label=""];
17->14 [style = solid, label="numberGT15"];
17->21 [style = bold, label=""];
14->20 [style = bold, label=""];
2->5 [style = bold, label=""];
20->11 [style = bold, label=""];
}
