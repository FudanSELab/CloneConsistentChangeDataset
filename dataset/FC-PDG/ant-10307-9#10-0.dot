digraph {
8 [style = filled, label = "assertThat(\"Regex not present\",getFileString(buildRule.getProject().getProperty(\"output\") + \"/replaceregexp\"),containsString(\"bye world\"))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "buildRule.executeTarget(\"filtercontainsregex\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testContainsRegex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "buildRule.executeTarget(\"hasregex\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assumeTrue(\"Regex not present\",getFileString(buildRule.getProject().getProperty(\"output\") + \"/replaceregexp\").contains(\"bye world\"))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "buildRule.executeTarget(\"containsregex\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(contents,containsString(\"World here\"))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(contents,containsString(\"hello world\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/filtercontainsregex\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(contents,not(containsString(\"this is the moon\")))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testContainsRegex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testFilterContainsRegex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/containsregex\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->12 [style = bold, label=""];
10->2 [style = bold, label=""];
1->5 [style = solid, label="contents"];
0->7 [style = bold, label=""];
4->5 [style = bold, label=""];
12->4 [style = bold, label=""];
1->3 [style = solid, label="contents"];
9->2 [style = bold, label=""];
7->11 [style = dashed, label="0"];
12->4 [style = solid, label="contents"];
0->11 [style = bold, label=""];
6->2 [style = bold, label=""];
2->8 [style = bold, label=""];
1->4 [style = bold, label=""];
1->12 [style = dashed, label="0"];
8->7 [style = bold, label=""];
12->3 [style = solid, label="contents"];
2->0 [style = bold, label=""];
5->3 [style = bold, label=""];
7->1 [style = bold, label=""];
1->4 [style = solid, label="contents"];
12->5 [style = solid, label="contents"];
0->8 [style = dashed, label="0"];
}
