digraph {
22 [style = filled, label = "return rexBuilder.makeCall(type,SqlStdOperatorTable.CASE,operands)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final List<RexNode> operands = convertExpressionList(cx,call.getOperandList(),SqlOperandTypeChecker.Consistency.NONE)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "convertIf['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "SqlCall call@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "convertDecode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "final List<RexNode> exprs = new ArrayList<>()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SqlRexContext cx@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final List<RexNode> operands = convertOperands(cx,call,SqlOperandTypeChecker.Consistency.NONE)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final RelDataType type = cx.getValidator().getValidatedNodeType(call)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "operands.size() % 2 == 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return rexBuilder.makeCall(type,SqlStdOperatorTable.CASE,exprs)@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final RexBuilder rexBuilder = cx.getRexBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int i = 1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "SqlCall call@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i < operands.size() - 1@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "convertDecode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SqlRexContext cx@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "exprs.add(rexBuilder.makeNullLiteral(type))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "exprs.add(RelOptUtil.isDistinctFrom(rexBuilder,operands.get(0),operands.get(i),true))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "exprs.add(Util.last(operands))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i += 2@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SqlRexContext cx@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "exprs.add(operands.get(i + 1))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->22 [style = solid, label="type"];
9->20 [style = dashed, label="0"];
4->5 [style = dotted, label="true"];
8->10 [style = bold, label=""];
3->2 [style = solid, label="i"];
21->20 [style = dotted, label="true"];
1->6 [style = solid, label="i"];
18->16 [style = dotted, label="true"];
5->0 [style = solid, label="cx"];
2->3 [style = bold, label=""];
13->14 [style = dotted, label="false"];
3->7 [style = solid, label="i"];
12->17 [style = bold, label=""];
18->12 [style = bold, label=""];
14->10 [style = bold, label=""];
0->11 [style = bold, label=""];
3->6 [style = bold, label=""];
9->11 [style = solid, label="call"];
12->7 [style = solid, label="rexBuilder"];
9->17 [style = solid, label="call"];
12->0 [style = bold, label=""];
17->11 [style = bold, label=""];
0->17 [style = dashed, label="0"];
11->15 [style = bold, label=""];
0->22 [style = solid, label="operands"];
21->12 [style = bold, label=""];
3->6 [style = solid, label="i"];
16->17 [style = solid, label="cx"];
1->6 [style = bold, label=""];
6->2 [style = dotted, label="true"];
11->10 [style = solid, label="type"];
13->8 [style = dotted, label="true"];
7->2 [style = bold, label=""];
6->13 [style = bold, label=""];
21->19 [style = dotted, label="true"];
19->0 [style = solid, label="cx"];
1->2 [style = solid, label="i"];
18->9 [style = dotted, label="true"];
11->14 [style = solid, label="type"];
11->22 [style = bold, label=""];
6->7 [style = dotted, label="true"];
4->12 [style = bold, label=""];
17->8 [style = solid, label="operands"];
13->8 [style = bold, label=""];
6->7 [style = bold, label=""];
6->3 [style = dotted, label="true"];
4->9 [style = dotted, label="true"];
13->14 [style = bold, label=""];
1->7 [style = solid, label="i"];
15->10 [style = solid, label="exprs"];
20->11 [style = solid, label="call"];
15->1 [style = bold, label=""];
0->8 [style = solid, label="operands"];
}
