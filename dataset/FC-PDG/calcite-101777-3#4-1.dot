digraph {
4 [style = filled, label = "SqlNode right = list.node(ordinal + 1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return new ReduceResult(ordinal - 1,ordinal + 2,createCall(SqlParserPos.sum(Arrays.asList(requireNonNull(left,\"left\").getParserPosition(),requireNonNull(right,\"right\").getParserPosition(),list.pos(ordinal))),left,right))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "reduceExpr['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "reduceExpr['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return new ReduceResult(ordinal - 1,ordinal + 2,createCall(SqlParserPos.sum(Arrays.asList(left.getParserPosition(),right.getParserPosition(),list.pos(ordinal))),left,right))@@@5@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int ordinal@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "reduceExpr['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int ordinal@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "int ordinal@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SqlNode left = list.node(ordinal - 1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TokenSequence list@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
3->6 [style = dashed, label="0"];
2->0 [style = dotted, label="true"];
9->4 [style = solid, label="ordinal"];
4->6 [style = bold, label=""];
2->1 [style = bold, label=""];
0->4 [style = solid, label="ordinal"];
7->1 [style = solid, label="ordinal"];
8->7 [style = dotted, label="true"];
1->6 [style = solid, label="left"];
9->1 [style = solid, label="ordinal"];
10->9 [style = dotted, label="true"];
10->5 [style = dotted, label="true"];
8->1 [style = bold, label=""];
7->6 [style = solid, label="ordinal"];
4->3 [style = solid, label="right"];
0->1 [style = solid, label="ordinal"];
4->6 [style = solid, label="right"];
8->5 [style = dotted, label="true"];
9->3 [style = solid, label="ordinal"];
0->3 [style = solid, label="ordinal"];
7->4 [style = solid, label="ordinal"];
2->5 [style = dotted, label="true"];
1->3 [style = solid, label="left"];
10->1 [style = bold, label=""];
}
