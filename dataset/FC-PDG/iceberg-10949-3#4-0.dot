digraph {
2 [style = filled, label = "TestSparkTableUtil.spark = SparkSession.builder().master(\"local(2(\").enableHiveSupport().config(\"spark.hadoop.hive.metastore.uris\",metastoreURI).config(\"hive.exec.dynamic.partition\",\"true\").config(\"hive.exec.dynamic.partition.mode\",\"nonstrict\").config(\"spark.sql.legacy.allowCreatingManagedTableUsingNonemptyLocation\",\"true\").getOrCreate()@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "startSpark['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "startSpark['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "String metastoreURI = CONF.get(HiveConf.ConfVars.METASTOREURIS.varname)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String metastoreURI = HiveTableBaseTest.hiveConf.get(HiveConf.ConfVars.METASTOREURIS.varname)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "TestNameMappingProjection.spark = SparkSession.builder().master(\"local(2(\").enableHiveSupport().config(\"spark.hadoop.hive.metastore.uris\",metastoreURI).config(\"hive.exec.dynamic.partition\",\"true\").config(\"hive.exec.dynamic.partition.mode\",\"nonstrict\").config(\"spark.sql.legacy.allowCreatingManagedTableUsingNonemptyLocation\",\"true\").getOrCreate()@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "startSpark['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0->1 [style = bold, label=""];
1->3 [style = dashed, label="0"];
2->5 [style = dashed, label="0"];
4->3 [style = bold, label=""];
6->1 [style = bold, label=""];
1->2 [style = bold, label=""];
3->2 [style = bold, label=""];
1->5 [style = bold, label=""];
}
