digraph {
13 [style = filled, label = "testReplicaNoRefreshCall['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "verify(indexShard,never()).refresh(any())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNotNull(listener.response)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testDocumentFailureInShardOperationOnReplica['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "verify(indexShard,never()).addRefreshListener(any(),any())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "result.runPostReplicaActions(ActionListener.map(listener,null))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testReplicaNoRefreshCall['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertNull(listener.failure)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestRequest request = new TestRequest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CapturingActionListener<TransportResponse.Empty> listener = new CapturingActionListener<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final PlainActionFuture<TransportReplicationAction.ReplicaResult> future = PlainActionFuture.newFuture()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertNotNull(listener.failure)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "result.runPostReplicaActions(listener.map(null))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testAction.dispatchedShardOperationOnReplica(request,indexShard,future)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNull(listener.response)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "TestAction testAction = new TestAction(randomBoolean(),true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "request.setRefreshPolicy(RefreshPolicy.NONE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestAction testAction = new TestAction()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final TransportReplicationAction.ReplicaResult result = future.actionGet()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
5->1 [style = dashed, label="0"];
8->11 [style = solid, label="listener"];
1->14 [style = dashed, label="0"];
11->14 [style = bold, label=""];
11->1 [style = bold, label=""];
16->7 [style = bold, label=""];
7->6 [style = solid, label="future"];
9->17 [style = bold, label=""];
1->18 [style = bold, label=""];
9->10 [style = bold, label=""];
12->9 [style = bold, label=""];
4->7 [style = bold, label=""];
16->7 [style = solid, label="future"];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
9->6 [style = solid, label="request"];
15->9 [style = bold, label=""];
7->6 [style = bold, label=""];
6->8 [style = bold, label=""];
2->18 [style = dashed, label="0"];
10->4 [style = bold, label=""];
9->7 [style = solid, label="request"];
13->9 [style = bold, label=""];
8->11 [style = bold, label=""];
11->1 [style = solid, label="listener"];
17->16 [style = bold, label=""];
14->5 [style = bold, label=""];
}
