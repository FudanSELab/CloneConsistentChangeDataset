digraph {
27 [style = filled, label = "assertTrue(\"No Artifacts\",set.size() > 0)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Set set = project1.getArtifacts()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "File localRepo = getLocalRepositoryPath()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertNotNull(\"No artifacts\",set)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Artifact artifact = (Artifact)iter.next()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "iter.hasNext()@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MavenProject project1 = getProjectWithDependencies(pom1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "File pom0Basedir = pom0.getParentFile()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testDependencyManagement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "System.out.println(\"Project \" + project1.getId() + \" \" + project1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "File pom0 = new File(localRepo,\"p0/pom.xml\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(\"Incorrect version for \" + artifact.getDependencyConflictId(),artifact.getVersion().equals(\"1.0\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Artifact artifact = (Artifact)iter.next()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testDependencyManagement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertNotNull(\"No artifacts\",set)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Iterator iter = set.iterator()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "iter.hasNext()@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(pom0Basedir,project1.getParent().getBasedir())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "System.out.println(\"Artifact: \" + artifact.getDependencyConflictId() + \" \" + artifact.getVersion() + \" Optional=\" + (artifact.isOptional()? \"true\": \"false\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(\"No Artifacts\",set.size() > 0)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Iterator iter = set.iterator()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(\"Set size should be 3, is \" + set.size(),set.size() == 3)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "System.out.println(\"Artifact: \" + artifact.getDependencyConflictId() + \" \" + artifact.getVersion() + \" Optional=\" + (artifact.isOptional()? \"true\": \"false\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertFalse(\"\",artifact.getArtifactId().equals(\"t07-d\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "MavenProject project0 = getProjectWithDependencies(pom0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testDependencyManagement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertTrue(\"Incorrect version for \" + artifact.getDependencyConflictId(),artifact.getVersion().equals(\"1.0\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "System.out.println(\"Project \" + project1.getId() + \" \" + project1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(pom0Basedir,project1.getParent().getBasedir().getCanonicalFile())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "File pom1 = new File(pom0Basedir,\"p1/pom.xml\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
14->24 [style = dashed, label="0"];
14->3 [style = bold, label=""];
3->12 [style = solid, label="set"];
5->8 [style = bold, label=""];
5->13 [style = solid, label="pom0Basedir"];
5->8 [style = solid, label="pom0Basedir"];
3->20 [style = solid, label="set"];
16->11 [style = bold, label=""];
8->2 [style = solid, label="pom1"];
2->24 [style = solid, label="project1"];
2->19 [style = bold, label=""];
13->24 [style = bold, label=""];
12->20 [style = dashed, label="0"];
15->28 [style = dashed, label="0"];
0->1 [style = solid, label="localRepo"];
22->29 [style = bold, label=""];
17->11 [style = dotted, label="true"];
11->29 [style = dashed, label="0"];
29->25 [style = bold, label=""];
26->9 [style = bold, label=""];
9->17 [style = bold, label=""];
8->6 [style = bold, label=""];
25->28 [style = dotted, label="true"];
3->12 [style = bold, label=""];
25->29 [style = dotted, label="true"];
13->19 [style = dashed, label="0"];
10->27 [style = dashed, label="0"];
15->16 [style = bold, label=""];
23->0 [style = bold, label=""];
5->19 [style = solid, label="pom0Basedir"];
10->7 [style = bold, label=""];
21->28 [style = bold, label=""];
4->0 [style = bold, label=""];
2->13 [style = bold, label=""];
6->2 [style = bold, label=""];
20->27 [style = bold, label=""];
17->16 [style = dotted, label="true"];
7->9 [style = bold, label=""];
12->10 [style = bold, label=""];
3->20 [style = bold, label=""];
17->15 [style = dotted, label="true"];
19->14 [style = bold, label=""];
8->2 [style = bold, label=""];
0->1 [style = bold, label=""];
9->25 [style = bold, label=""];
2->14 [style = solid, label="project1"];
17->15 [style = bold, label=""];
25->22 [style = dotted, label="true"];
1->6 [style = solid, label="pom0"];
11->17 [style = bold, label=""];
13->14 [style = bold, label=""];
24->3 [style = bold, label=""];
18->0 [style = bold, label=""];
28->22 [style = bold, label=""];
25->21 [style = bold, label=""];
25->21 [style = dotted, label="true"];
16->22 [style = dashed, label="0"];
27->26 [style = bold, label=""];
}
