digraph {
12 [style = filled, label = "cache.putObject(i,i)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i < 5@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertNull(cache.getObject(4))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "cache.putObject(i,i)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shouldFlushAllItemsOnDemand['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cache = new SerializedCache(cache)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldDemonstrateCopiesAreEqual['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "((ScheduledCache)cache).setClearInterval(60000)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertNotNull(cache.getObject(4))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "cache = new LoggingCache(cache)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Cache cache = new PerpetualCache(\"DefaultCache\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Cache cache = new PerpetualCache(\"default\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNotNull(cache.getObject(0))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertNull(cache.getObject(0))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "i < 1000@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "shouldDemonstrateCopiesAreEqual['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cache = new ScheduledCache(cache)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "cache.clear()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->7 [style = solid, label="i"];
5->3 [style = bold, label=""];
1->5 [style = bold, label=""];
5->14 [style = dashed, label="0"];
20->13 [style = bold, label=""];
2->6 [style = bold, label=""];
6->18 [style = bold, label=""];
18->11 [style = bold, label=""];
18->12 [style = bold, label=""];
2->18 [style = bold, label=""];
6->0 [style = bold, label=""];
19->17 [style = bold, label=""];
6->7 [style = solid, label="i"];
0->6 [style = dotted, label="true"];
2->18 [style = solid, label="i"];
3->4 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
6->0 [style = solid, label="i"];
4->2 [style = solid, label="i"];
4->6 [style = solid, label="i"];
6->18 [style = solid, label="i"];
18->2 [style = dotted, label="true"];
12->2 [style = bold, label=""];
6->2 [style = solid, label="i"];
18->12 [style = dotted, label="true"];
8->5 [style = bold, label=""];
11->10 [style = bold, label=""];
7->2 [style = bold, label=""];
15->20 [style = bold, label=""];
2->12 [style = solid, label="i"];
9->19 [style = bold, label=""];
3->15 [style = dashed, label="0"];
4->0 [style = solid, label="i"];
16->14 [style = bold, label=""];
0->18 [style = dashed, label="0"];
14->15 [style = bold, label=""];
10->9 [style = bold, label=""];
0->2 [style = dotted, label="true"];
6->12 [style = solid, label="i"];
13->6 [style = bold, label=""];
14->15 [style = solid, label="cache"];
5->3 [style = solid, label="cache"];
15->13 [style = solid, label="cache"];
0->7 [style = dotted, label="true"];
}
