digraph {
17 [style = filled, label = "Value<MethodList> v = Value.of(getHookMethods(resource,HookEvent.POST_CALL))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Class<?> resourceClass@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Value<VarList> v = Value.empty()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "beanStore.beanCreateMethodFinder(,resourceClass).addBean(,v.get()).find(\"createVars\").run(null)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "createPostCallMethods['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "v.isEmpty()@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return v.get()@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Object r = resource.get()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "v.set(VarList.of(,,,,,,,,,,,,,,,).addDefault())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Class<?> resourceClass@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "beanStore.getBean().map(null).ifPresent(null)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "BeanStore beanStore@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "createVars['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "createVars['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "BeanStore beanStore@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return v.get()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Supplier<?> resource@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "BeanStore.of(beanStore,r).addBean(,v.get()).beanCreateMethodFinder(,r).find(\"createPostCallMethods\").run(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "BeanStore.of(beanStore,resourceClass).addBean(,v.get()).beanCreateMethodFinder(,resourceClass).find(\"createVars\").run(null)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "beanStore.getBean().map(null).ifPresent(null)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->3 [style = bold, label=""];
5->10 [style = bold, label=""];
6->9 [style = dashed, label="0"];
18->19 [style = bold, label=""];
8->7 [style = dotted, label="true"];
16->17 [style = bold, label=""];
5->3 [style = dotted, label="true"];
12->1 [style = bold, label=""];
8->4 [style = dotted, label="true"];
1->9 [style = bold, label=""];
2->10 [style = dashed, label="0"];
12->11 [style = dotted, label="true"];
8->1 [style = bold, label=""];
3->10 [style = bold, label=""];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
1->17 [style = dashed, label="0"];
19->13 [style = bold, label=""];
3->2 [style = bold, label=""];
15->17 [style = solid, label="resource"];
10->0 [style = bold, label=""];
16->14 [style = dotted, label="true"];
7->15 [style = dashed, label="0"];
9->5 [style = bold, label=""];
12->7 [style = dotted, label="true"];
5->19 [style = dashed, label="0"];
17->18 [style = bold, label=""];
16->15 [style = dotted, label="true"];
}
