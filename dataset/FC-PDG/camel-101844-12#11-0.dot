digraph {
38 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "boolean branchCreated = false@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(true,gitDir.exists())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Status status = git.status().call()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "refInternal.getName().equals(\"refs/heads/\" + branchTest)@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "refInternal.getName().equals(\"refs/heads/\" + branchTest)@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "File fileToAddDifferent = new File(gitLocalRepo,filenameBranchToAdd)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "branchCreated = true@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(branchCreated,true)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Status gitStatus = git.status().call()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(\"refs/heads/\" + branchTest,exchanges.get(1).getMessage().getBody().getName())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "branchCreated = true@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "fileToAddDifferent.createNewFile()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "mockResultBranch.assertIsSatisfied()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(status.getAdded().contains(filenameBranchToAdd))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "mockResultBranch.expectedMessageCount(2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "branchConsumerTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertEquals(gitStatus.getAdded(),status.getAdded())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(\"refs/heads/master\",exchanges.get(0).getMessage().getBody().getName())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "Git git = getGitTestRepository()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "MockEndpoint mockResultBranch = getMockEndpoint(\"mock:result-branch\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<Exchange> exchanges = mockResultBranch.getExchanges()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "statusBranchTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "git.close()@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "git.add().addFilepattern(filenameToAdd).call()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "fileToAdd.createNewFile()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(true,branchCreated)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<Ref> ref = git.branchList().call()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "branchConsumerTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(\"refs/heads/master\",exchanges.get(0).getMessage().getBody())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "git.branchCreate().setName(branchTest).call()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<Ref> ref = git.branchList().call()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "git.add().addFilepattern(filenameBranchToAdd).call()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(\"refs/heads/\" + branchTest,exchanges.get(1).getMessage().getBody())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "status = template.requestBody(\"direct:status-branch\",\"\",)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "git.commit().setMessage(commitMessage).call()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "git.close()@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
4->10 [style = bold, label=""];
6->3 [style = bold, label=""];
35->29 [style = bold, label=""];
16->24 [style = dashed, label="0"];
30->35 [style = solid, label="branchCreated"];
10->19 [style = bold, label=""];
26->34 [style = bold, label=""];
21->8 [style = bold, label=""];
1->20 [style = bold, label=""];
27->31 [style = bold, label=""];
28->26 [style = bold, label=""];
10->17 [style = bold, label=""];
20->14 [style = bold, label=""];
23->8 [style = bold, label=""];
15->16 [style = bold, label=""];
19->30 [style = dotted, label="true"];
3->4 [style = bold, label=""];
33->27 [style = bold, label=""];
17->19 [style = bold, label=""];
31->7 [style = bold, label=""];
11->15 [style = bold, label=""];
2->12 [style = bold, label=""];
38->6 [style = bold, label=""];
0->7 [style = bold, label=""];
1->22 [style = bold, label=""];
8->0 [style = bold, label=""];
25->24 [style = bold, label=""];
30->19 [style = bold, label=""];
5->2 [style = bold, label=""];
22->1 [style = dotted, label="true"];
12->38 [style = bold, label=""];
15->25 [style = dashed, label="0"];
20->35 [style = dashed, label="0"];
30->35 [style = bold, label=""];
22->20 [style = bold, label=""];
18->6 [style = bold, label=""];
19->20 [style = solid, label="branchCreated"];
18->2 [style = dashed, label="0"];
29->32 [style = bold, label=""];
19->35 [style = bold, label=""];
34->39 [style = bold, label=""];
12->18 [style = bold, label=""];
13->5 [style = bold, label=""];
1->20 [style = solid, label="branchCreated"];
36->37 [style = bold, label=""];
22->1 [style = bold, label=""];
10->35 [style = solid, label="branchCreated"];
19->22 [style = bold, label=""];
14->11 [style = bold, label=""];
32->28 [style = bold, label=""];
39->36 [style = bold, label=""];
16->9 [style = bold, label=""];
24->9 [style = bold, label=""];
11->25 [style = bold, label=""];
19->30 [style = bold, label=""];
}
