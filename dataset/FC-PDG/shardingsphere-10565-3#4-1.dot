digraph {
12 [style = filled, label = "when(databaseType.getName()).thenReturn(\"PostgreSQL\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final ShardingTableMetaDataBuilder loader = (ShardingTableMetaDataBuilder)OrderedSPIRegistry.getRegisteredServices(,rules).get(shardingRule)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(databaseType.getName()).thenReturn(\"MySQL\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Map<String,TableMetaData> actual = loader.load(tableNames,shardingRule,new SchemaBuilderMaterials(databaseType,Collections.singletonMap(\"ds\",dataSource),rules,props))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Map<String,TableMetaData> actual = loader.load(tableNames,shardingRule,new SchemaBuilderMaterials(databaseType,Collections.singletonMap(\"ds\",dataSource),rules,props),new ThreadPoolExecutor(Runtime.getRuntime().availableProcessors() * 2,Runtime.getRuntime().availableProcessors() * 2,0L,TimeUnit.MILLISECONDS,new LinkedBlockingQueue<>(),new ThreadFactoryBuilder().setDaemon(true).setNameFormat(\"ShardingSphere-SchemaBuilder-%d\").build()))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertLoadTablesMySQL['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "when(props.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED)).thenReturn(false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertResult(actual)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Collection<ShardingSphereRule> rules = Collections.singletonList(shardingRule)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Collection<String> tableNames = new LinkedList<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertLoadTablesMySQL['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertLoadTablesPGSQL['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tableNames.add(TABLE_NAME)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->1 [style = solid, label="rules"];
6->3 [style = bold, label=""];
3->1 [style = bold, label=""];
2->6 [style = bold, label=""];
0->12 [style = bold, label=""];
0->2 [style = bold, label=""];
1->10 [style = dashed, label="0"];
12->6 [style = bold, label=""];
5->10 [style = solid, label="rules"];
1->7 [style = bold, label=""];
10->7 [style = bold, label=""];
6->10 [style = solid, label="tableNames"];
4->0 [style = bold, label=""];
1->7 [style = solid, label="actual"];
3->10 [style = bold, label=""];
2->12 [style = dashed, label="0"];
11->5 [style = bold, label=""];
10->7 [style = solid, label="actual"];
8->5 [style = bold, label=""];
5->4 [style = bold, label=""];
9->5 [style = bold, label=""];
6->1 [style = solid, label="tableNames"];
}
