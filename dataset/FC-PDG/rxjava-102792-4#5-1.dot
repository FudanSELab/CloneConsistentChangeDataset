digraph {
2 [style = filled, label = "delayed.subscribe(ts)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestObserver<Integer> observer = new TestObserver<Integer>()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Flowable<Integer> delayed = source.delay(500L,TimeUnit.MILLISECONDS,scheduler)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "delayed = delayed.doOnEach(new Consumer<Notification<Integer>>(){@Override public void accept(Notification<Integer> t1){System.out.println(t1)}})@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<>()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "scheduler.advanceTimeBy(500L,TimeUnit.MILLISECONDS)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "delayEmitsEverything['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "delayed.subscribe(observer)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "observer.assertValues(1,2,3,4,5)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "delayEmitsEverything['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Observable<Integer> delayed = source.delay(500L,TimeUnit.MILLISECONDS,scheduler)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "delayEmitsEverything['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "ts.assertValues(1,2,3,4,5)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Observable<Integer> source = Observable.range(1,5)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Flowable<Integer> source = Flowable.range(1,5)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->4 [style = bold, label=""];
7->11 [style = bold, label=""];
15->7 [style = bold, label=""];
1->14 [style = dashed, label="0"];
9->2 [style = bold, label=""];
2->6 [style = bold, label=""];
6->0 [style = bold, label=""];
3->2 [style = solid, label="ts"];
0->12 [style = dashed, label="0"];
10->6 [style = bold, label=""];
7->3 [style = bold, label=""];
4->7 [style = bold, label=""];
2->10 [style = dashed, label="0"];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
5->1 [style = bold, label=""];
11->10 [style = solid, label="observer"];
3->2 [style = bold, label=""];
3->9 [style = dashed, label="0"];
11->10 [style = bold, label=""];
4->15 [style = dashed, label="0"];
9->2 [style = solid, label="ts"];
14->15 [style = bold, label=""];
13->14 [style = bold, label=""];
3->11 [style = dashed, label="0"];
6->12 [style = bold, label=""];
}
