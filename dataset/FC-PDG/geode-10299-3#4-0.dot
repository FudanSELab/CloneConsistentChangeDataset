digraph {
16 [style = filled, label = "RegionConfigRealizer realizer = new RegionConfigRealizer()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "RegionConfig config = new RegionConfig()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "config.setName(\"regionName\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "realizer.create(config,cache)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "PartitionAttributes partitionAttributes = partitionAttributesArgumentCaptor.getValue()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.REPLICATE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "config.setRefid(\"PARTITION\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "createsPartitionedInCache['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(dataPolicyArgumentCaptor.getValue()).isEqualTo(DataPolicy.PARTITION)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(regionFactory).create(\"regionName\")@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(partitionAttributes.getRedundantCopies()).isEqualTo(1)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "ArgumentCaptor<PartitionAttributes> partitionAttributesArgumentCaptor = ArgumentCaptor.forClass()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "createsReplicateInCache['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "config.setRefid(\"REPLICATE\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(partitionAttributes).isNotNull()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "verify(regionFactory).create(\"regionName\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ArgumentCaptor<DataPolicy> dataPolicyArgumentCaptor = ArgumentCaptor.forClass()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "createsPartitionedInCache['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "verify(regionFactory).setPartitionAttributes(partitionAttributesArgumentCaptor.capture())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "RegionConfigRealizer subject = new RegionConfigRealizer()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "subject.create(config,cache)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "verify(regionFactory).setDataPolicy(dataPolicyArgumentCaptor.capture())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
14->13 [style = solid, label="config"];
15->14 [style = bold, label=""];
0->12 [style = bold, label=""];
8->3 [style = bold, label=""];
4->19 [style = bold, label=""];
1->3 [style = bold, label=""];
12->20 [style = bold, label=""];
13->17 [style = dashed, label="0"];
16->17 [style = bold, label=""];
5->14 [style = bold, label=""];
7->8 [style = bold, label=""];
12->1 [style = bold, label=""];
19->6 [style = bold, label=""];
9->16 [style = bold, label=""];
1->11 [style = bold, label=""];
9->6 [style = bold, label=""];
1->20 [style = dashed, label="0"];
9->19 [style = dashed, label="0"];
20->18 [style = bold, label=""];
6->16 [style = dashed, label="0"];
17->0 [style = bold, label=""];
11->10 [style = bold, label=""];
6->13 [style = bold, label=""];
21->14 [style = bold, label=""];
14->17 [style = solid, label="config"];
10->2 [style = bold, label=""];
2->7 [style = bold, label=""];
13->0 [style = bold, label=""];
14->4 [style = bold, label=""];
}
