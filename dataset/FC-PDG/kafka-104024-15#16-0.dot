digraph {
4 [style = filled, label = "assertTrue(coordinator.coordinatorUnknown())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(cb.exception instanceof RetriableCommitFailedException)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "client.prepareResponse(offsetCommitResponse(Collections.singletonMap(t1p,Errors.NOT_COORDINATOR_FOR_GROUP)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(1,cb.invoked)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "client.prepareResponse(offsetCommitResponse(Collections.singletonMap(t1p,Errors.COORDINATOR_NOT_AVAILABLE)))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testCommitOffsetAsyncNotCoordinator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testCommitOffsetAsyncCoordinatorNotAvailable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCommitOffsetAsyncCoordinatorNotAvailable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "MockCommitCallback cb = new MockCommitCallback()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.prepareResponse(offsetCommitResponse(Collections.singletonMap(t1p,Errors.GROUP_COORDINATOR_NOT_AVAILABLE)))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "coordinator.ensureCoordinatorReady()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "coordinator.invokeCompletedOffsetCommitCallbacks()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "coordinator.commitOffsetsAsync(Collections.singletonMap(t1p,new OffsetAndMetadata(100L)),cb)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->9 [style = bold, label=""];
5->8 [style = bold, label=""];
10->9 [style = bold, label=""];
2->0 [style = bold, label=""];
13->9 [style = bold, label=""];
0->11 [style = dashed, label="0"];
7->4 [style = bold, label=""];
0->12 [style = dashed, label="0"];
12->1 [style = bold, label=""];
11->1 [style = bold, label=""];
1->7 [style = bold, label=""];
0->1 [style = bold, label=""];
4->5 [style = bold, label=""];
2->11 [style = bold, label=""];
2->1 [style = solid, label="cb"];
2->12 [style = bold, label=""];
9->6 [style = bold, label=""];
6->2 [style = bold, label=""];
}
