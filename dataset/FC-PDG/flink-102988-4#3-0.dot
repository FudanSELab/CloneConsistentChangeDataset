digraph {
14 [style = filled, label = "JobVertex chainedMap = jobGraph.getVerticesSortedTopologicallyFromSources().get(1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "env.addSource(new NoOpSourceFunction()).map(new NoOpMapFunction()).name(\"map\").startNewChain().filter(new NoOpFilterFunction()).startNewChain().addSink(new NoOpSinkFunction())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "env.addSource(new NoOpSourceFunction()).map(new NoOpMapFunction()).uid(\"map\").addSink(new NoOpSinkFunction())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertTrue(chainedMap.getName().startsWith(\"map\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "JobVertexID chainedMapId = chainedMap.getID()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "env.addSource(new NoOpSourceFunction()).map(new NoOpMapFunction()).name(\"map\").startNewChain().filter(new NoOpFilterFunction()).addSink(new NoOpSinkFunction())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testNodeHashAfterIntermediateUnchaining['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testManualHashAssignmentForIntermediateNodeInChain['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "JobVertex unchainedMap = jobGraph.getVerticesSortedTopologicallyFromSources().get(1)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "jobGraph = env.getStreamGraph().getJobGraph()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "env.addSource(new NoOpSourceFunction()).map(new NoOpMapFunction()).uid(\"map\").addSink(new DiscardingSink<>())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testManualHashAssignmentForIntermediateNodeInChain['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(\"map\",unchainedMap.getName())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "env.setParallelism(4)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "JobVertexID unchainedMapId = unchainedMap.getID()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "env.setParallelism(4)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "env = StreamExecutionEnvironment.createLocalEnvironment()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertNotEquals(chainedMapId,unchainedMapId)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "env.getStreamGraph().getJobGraph()@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "JobGraph jobGraph = env.getStreamGraph().getJobGraph()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
14->16 [style = bold, label=""];
1->5 [style = dashed, label="0"];
7->10 [style = bold, label=""];
2->1 [style = bold, label=""];
1->15 [style = dashed, label="0"];
17->9 [style = bold, label=""];
16->7 [style = bold, label=""];
1->3 [style = bold, label=""];
18->17 [style = bold, label=""];
19->11 [style = bold, label=""];
4->2 [style = bold, label=""];
11->18 [style = bold, label=""];
20->4 [style = bold, label=""];
6->4 [style = bold, label=""];
13->19 [style = bold, label=""];
3->12 [style = dashed, label="0"];
10->8 [style = bold, label=""];
0->4 [style = bold, label=""];
2->15 [style = bold, label=""];
12->14 [style = bold, label=""];
17->9 [style = solid, label="unchainedMapId"];
15->12 [style = bold, label=""];
8->13 [style = bold, label=""];
2->5 [style = bold, label=""];
7->9 [style = solid, label="chainedMapId"];
}
