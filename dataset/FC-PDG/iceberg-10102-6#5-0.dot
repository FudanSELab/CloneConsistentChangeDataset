digraph {
26 [style = filled, label = "schema.findType(id) instanceof Type.NestedType@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return ROWS_MIGHT_MATCH@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "colStats != null && !colStats.isEmpty()@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return ROWS_CANNOT_MATCH@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "cmp < 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return ROWS_MIGHT_MATCH@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "gtEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "T upper = max(colStats,id)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "colStats != null && valueCount - colStats.getNumNulls() == 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Literal<T> lit@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Statistics<?> colStats = stats.get(id)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return ROWS_CANNOT_MATCH@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "return ROWS_MIGHT_MATCH@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Literal<T> lit@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "notNull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "valueCount == null@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return ROWS_CANNOT_MATCH@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "hasNonNullButNoMinMax(colStats,valueCount)@@@10@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "gtEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "!colStats.hasNonNullValue()@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Long valueCount = valueCounts.get(id)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return ROWS_CANNOT_MATCH@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "return ROWS_MIGHT_MATCH@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->19 [style = dotted, label="true"];
8->14 [style = bold, label=""];
4->23 [style = solid, label="colStats"];
12->10 [style = solid, label="upper"];
26->21 [style = bold, label=""];
3->14 [style = bold, label=""];
23->25 [style = bold, label=""];
6->7 [style = solid, label="id"];
0->4 [style = bold, label=""];
9->8 [style = dotted, label="true"];
13->1 [style = dotted, label="true"];
6->4 [style = solid, label="id"];
26->21 [style = dotted, label="true"];
22->6 [style = bold, label=""];
23->20 [style = dotted, label="true"];
6->26 [style = bold, label=""];
2->5 [style = bold, label=""];
17->19 [style = bold, label=""];
4->12 [style = solid, label="colStats"];
15->4 [style = bold, label=""];
13->6 [style = bold, label=""];
9->2 [style = bold, label=""];
10->8 [style = bold, label=""];
2->5 [style = dotted, label="true"];
13->11 [style = dotted, label="true"];
10->8 [style = solid, label="cmp"];
9->2 [style = dotted, label="true"];
9->17 [style = dotted, label="true"];
8->3 [style = bold, label=""];
9->10 [style = dotted, label="true"];
20->25 [style = bold, label=""];
18->11 [style = dotted, label="true"];
18->16 [style = dotted, label="true"];
15->0 [style = dotted, label="true"];
12->10 [style = bold, label=""];
15->0 [style = bold, label=""];
4->9 [style = solid, label="colStats"];
22->24 [style = dotted, label="true"];
9->17 [style = bold, label=""];
23->20 [style = bold, label=""];
4->9 [style = bold, label=""];
7->15 [style = solid, label="valueCount"];
7->17 [style = solid, label="valueCount"];
9->14 [style = bold, label=""];
21->7 [style = bold, label=""];
4->23 [style = bold, label=""];
4->17 [style = solid, label="colStats"];
9->23 [style = dashed, label="0"];
26->7 [style = bold, label=""];
5->12 [style = bold, label=""];
7->15 [style = bold, label=""];
8->3 [style = dotted, label="true"];
19->2 [style = bold, label=""];
9->12 [style = dotted, label="true"];
6->26 [style = solid, label="id"];
6->7 [style = bold, label=""];
6->12 [style = solid, label="id"];
18->6 [style = bold, label=""];
2->12 [style = bold, label=""];
11->24 [style = dashed, label="0"];
17->2 [style = bold, label=""];
7->23 [style = solid, label="valueCount"];
}
