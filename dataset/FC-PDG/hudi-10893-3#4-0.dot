digraph {
48 [style = filled, label = "testReplaceWithTimeTravel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "replacedFileIds.add(fileId1)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Set<String> fileIds = fsView.getFileGroupsInPendingClustering().map(null).collect(Collectors.toSet())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "new File(basePath + \"/\" + partitionPath1 + \"/\" + fileName3).createNewFile()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "String fileId2 = UUID.randomUUID().toString()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "commitTimeline = metaClient.getActiveTimeline()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<String> replacedFileIds = new ArrayList<>()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String fileName2 = FSUtils.makeDataFileName(commitTime1,TEST_WRITE_TOKEN,fileId2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(1,allReplaced.size())@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "new File(basePath + \"/\" + partitionPath1).mkdirs()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "String commitTime2 = \"2\"@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1,roView.getLatestBaseFiles(partitionPath1).filter(null).count())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "allReplaced = fsView.getAllReplacedFileGroups(partitionPath1).collect(Collectors.toList())@@@51@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Map<String,List<String>> partitionToReplaceFileIds = new HashMap<>()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertTrue(fileIds.contains(fileId2))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "HoodieInstant instant2 = new HoodieInstant(State.REQUESTED,HoodieTimeline.REPLACE_COMMIT_ACTION,clusterTime)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertFalse(roView.getLatestBaseFiles(partitionPath1).anyMatch(null),\"No commit, should not find any data file\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(1,roView.getLatestBaseFiles(partitionPath1).filter(null).count())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "HoodieCommitMetadata commitMetadata = CommitUtils.buildMetadata(Collections.emptyList(),partitionToReplaceFileIds,Option.empty(),WriteOperationType.INSERT_OVERWRITE,\"\",HoodieTimeline.REPLACE_COMMIT_ACTION)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "HoodieInstant instant2 = new HoodieInstant(true,HoodieTimeline.REPLACE_COMMIT_ACTION,commitTime2)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(fileId1,allReplaced.get(0).getFileGroupId().getFileId())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "partitionToReplaceFileIds.put(partitionPath1,replacedFileIds)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(fileId1,allReplaced.get(0).getFileGroupId().getFileId())@@@53@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "String commitTime1 = \"1\"@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,roView.getLatestBaseFiles(partitionPath1).filter(null).count())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "List<FileSlice>(( fileSliceGroups = new List((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1662959@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(1,filteredView.getLatestBaseFiles(partitionPath1).filter(null).count())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String fileName3 = FSUtils.makeDataFileName(commitTime1,TEST_WRITE_TOKEN,fileId3)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String fileId1 = UUID.randomUUID().toString()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "new File(basePath + \"/\" + partitionPath1 + \"/\" + fileName3).createNewFile()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<HoodieFileGroup> allReplaced = fsView.getReplacedFileGroupsBeforeOrOn(\"2\",partitionPath1).collect(Collectors.toList())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(0,roView.getLatestBaseFiles(partitionPath1).filter(null).count())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertFalse(roView.getLatestBaseFiles(partitionPath1).anyMatch(null),\"No commit, should not find any data file\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String partitionPath1 = \"2020/06/27\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testReplaceWithTimeTravel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SyncableFileSystemView filteredView = getFileSystemView(metaClient.getActiveTimeline().findInstantsBefore(\"2\"),false)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(1,filteredView.getLatestBaseFiles(partitionPath1).filter(null).count())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertTrue(fileIds.contains(fileId1))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "refreshFsView()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "String commitTime1 = \"1\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "List<HoodieFileGroup> replacedOnInstant1 = fsView.getReplacedFileGroupsBeforeOrOn(\"1\",partitionPath1).collect(Collectors.toList())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "new File(basePath + \"/\" + partitionPath1 + \"/\" + fileName4).createNewFile()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "refreshFsView()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "String clusterTime = \"2\"@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(1,filteredView.getLatestBaseFiles(partitionPath1).filter(null).count())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "HoodieActiveTimeline commitTimeline = metaClient.getActiveTimeline()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "saveAsComplete(commitTimeline,instant2,Option.of(commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8)))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "new File(basePath + \"/\" + partitionPath1 + \"/\" + fileName2).createNewFile()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "allReplaced = fsView.getReplacedFileGroupsBefore(\"2\",partitionPath1).collect(Collectors.toList())@@@49@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "new File(basePath + \"/\" + partitionPath1 + \"/\" + fileName1).createNewFile()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(1,roView.getLatestBaseFiles(partitionPath1).filter(null).count())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(0,allReplaced.size())@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "String fileName4 = FSUtils.makeDataFileName(commitTime1,TEST_WRITE_TOKEN,fileId4)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "saveAsComplete(commitTimeline,instant1,Option.empty())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "String fileId3 = UUID.randomUUID().toString()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "String fileId4 = UUID.randomUUID().toString()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "testPendingClusteringOperations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "String fileName3 = FSUtils.makeDataFileName(commitTime1,TEST_WRITE_TOKEN,fileId3)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(0,replacedOnInstant1.size())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(1,filteredView.getLatestBaseFiles(partitionPath1).filter(null).count())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "String fileName1 = FSUtils.makeDataFileName(commitTime1,TEST_WRITE_TOKEN,fileId1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "HoodieClusteringPlan plan = ClusteringUtils.createClusteringPlan(\"strategy\",new HashMap<>(),fileSliceGroups,Collections.emptyMap())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertFalse(fileIds.contains(fileId3))@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(1,allReplaced.size())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "HoodieRequestedReplaceMetadata requestedReplaceMetadata = HoodieRequestedReplaceMetadata.newBuilder().setClusteringPlan(plan).setOperationType(WriteOperationType.CLUSTER.name()).build()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "HoodieInstant instant1 = new HoodieInstant(true,HoodieTimeline.COMMIT_ACTION,commitTime1)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "metaClient.getActiveTimeline().saveToPendingReplaceCommit(instant2,TimelineMetadataUtils.serializeRequestedReplaceMetadata(requestedReplaceMetadata))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "refreshFsView()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(1,roView.getLatestBaseFiles(partitionPath1).filter(null).count())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->33 [style = bold, label=""];
58->9 [style = bold, label=""];
20->7 [style = bold, label=""];
67->68 [style = solid, label="fileSliceGroups"];
54->58 [style = bold, label=""];
6->22 [style = bold, label=""];
3->13 [style = bold, label=""];
45->20 [style = solid, label="commitTime2"];
47->51 [style = bold, label=""];
41->54 [style = bold, label=""];
34->38 [style = bold, label=""];
45->16 [style = bold, label=""];
0->30 [style = solid, label="partitionPath1"];
19->7 [style = solid, label="commitTimeline"];
31->67 [style = bold, label=""];
37->17 [style = bold, label=""];
9->33 [style = solid, label="commitTime1"];
23->52 [style = bold, label=""];
9->59 [style = solid, label="commitTime1"];
55->12 [style = bold, label=""];
41->57 [style = solid, label="fileId2"];
24->14 [style = bold, label=""];
35->34 [style = bold, label=""];
59->24 [style = bold, label=""];
12->15 [style = solid, label="commitTimeline"];
32->43 [style = solid, label="fileId1"];
10->37 [style = bold, label=""];
66->63 [style = solid, label="requestedReplaceMetadata"];
60->63 [style = solid, label="instant2"];
18->46 [style = bold, label=""];
38->10 [style = bold, label=""];
36->19 [style = bold, label=""];
9->8 [style = solid, label="commitTime1"];
28->32 [style = bold, label=""];
34->10 [style = solid, label="fileId3"];
66->63 [style = bold, label=""];
62->60 [style = bold, label=""];
1->4 [style = bold, label=""];
39->10 [style = solid, label="commitTime1"];
30->36 [style = bold, label=""];
41->43 [style = solid, label="fileId2"];
26->39 [style = bold, label=""];
7->2 [style = bold, label=""];
41->8 [style = solid, label="fileId2"];
65->61 [style = bold, label=""];
48->0 [style = bold, label=""];
39->9 [style = solid, label="commitTime1"];
8->59 [style = bold, label=""];
33->15 [style = solid, label="instant1"];
20->7 [style = solid, label="instant2"];
46->27 [style = bold, label=""];
14->12 [style = bold, label=""];
39->43 [style = solid, label="commitTime1"];
40->18 [style = bold, label=""];
67->68 [style = bold, label=""];
39->12 [style = solid, label="commitTime1"];
62->60 [style = solid, label="clusterTime"];
15->44 [style = bold, label=""];
32->13 [style = solid, label="fileId1"];
41->26 [style = bold, label=""];
54->53 [style = solid, label="fileId3"];
16->36 [style = solid, label="partitionToReplaceFileIds"];
33->15 [style = bold, label=""];
16->3 [style = bold, label=""];
34->31 [style = bold, label=""];
32->56 [style = solid, label="fileId1"];
61->56 [style = bold, label=""];
39->9 [style = bold, label=""];
64->0 [style = bold, label=""];
25->0 [style = bold, label=""];
27->6 [style = bold, label=""];
8->24 [style = bold, label=""];
39->37 [style = solid, label="commitTime1"];
52->49 [style = bold, label=""];
43->8 [style = bold, label=""];
29->40 [style = bold, label=""];
32->51 [style = solid, label="fileId1"];
42->45 [style = bold, label=""];
14->55 [style = bold, label=""];
11->21 [style = bold, label=""];
13->30 [style = bold, label=""];
31->1 [style = bold, label=""];
54->59 [style = solid, label="fileId3"];
12->33 [style = solid, label="instant1"];
68->62 [style = bold, label=""];
60->66 [style = bold, label=""];
38->37 [style = solid, label="fileId4"];
2->5 [style = bold, label=""];
19->20 [style = bold, label=""];
50->47 [style = bold, label=""];
44->35 [style = bold, label=""];
57->53 [style = bold, label=""];
9->43 [style = solid, label="commitTime1"];
56->57 [style = bold, label=""];
5->11 [style = bold, label=""];
63->65 [style = bold, label=""];
3->30 [style = solid, label="replacedFileIds"];
9->43 [style = bold, label=""];
17->42 [style = bold, label=""];
32->9 [style = solid, label="fileId1"];
0->28 [style = bold, label=""];
22->23 [style = bold, label=""];
4->29 [style = bold, label=""];
32->41 [style = bold, label=""];
32->23 [style = solid, label="fileId1"];
21->31 [style = bold, label=""];
49->50 [style = bold, label=""];
14->33 [style = solid, label="commitTimeline"];
}
