digraph {
0 [style = filled, label = "assertFalse(rf.wantsAllFields())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(rf.wantsScore())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(rf.wantsField(\"id\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(rf.getTransformer() instanceof DocTransformers)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertFalse(rf.wantsField(\"xxx\"))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testTransformers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertFalse(rf.wantsScore())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(rf.wantsField(\"(explain(\"))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "ReturnFields rf = new SolrReturnFields(req(\"fl\",\"(explain(\"))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertFalse(rf.wantsScore())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(\"(shard(\",rf.getTransformer().getName())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFalse(rf.wantsField(\"id\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertNull(rf.getTransformer())@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "rf = new SolrReturnFields(req(\"fl\",\"(docid(\"))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFalse(rf.wantsScore())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertTrue(rf.wantsField(\"id\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "rf = new SolrReturnFields(req(\"fl\",\"(docid((shard(\"))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(rf.wantsField(\"(docid(\"))@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertFalse(rf.wantsField(\"id\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertFalse(rf.wantsAllFields())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testTransformers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "assertTrue(rf.wantsField(\"(shard(\"))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertFalse(rf.wantsAllFields())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(2,((DocTransformers)rf.getTransformer()).size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(rf.wantsField(\"(docid(\"))@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(\"mydocid\",rf.getTransformer().getName())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertFalse(rf.wantsField(\"xxx\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "rf = new SolrReturnFields(req(\"fl\",\"(shard(,id\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertTrue(rf.wantsField(\"#foo_s\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "testFunkyFieldNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertFalse(rf.wantsAllFields())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(rf.wantsField(\"id\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertFalse(rf.wantsAllFields())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "rf = new SolrReturnFields(req(\"fl\",\"mydocid:(docid(\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(rf.wantsField(\"xxx\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "ReturnFields rf = new SolrReturnFields(req(\"fl\",\"#foo_s\",\"fl\",\"id\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "rf = new SolrReturnFields(req(\"fl\",\"(xxxxx(\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(rf.wantsField(\"(shard(\"))@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "assertQ(req(\"q\",\"id:1\",\"fl\",\"#foo_s\",\"fl\",\"id\"),\"//*(@numFound='1'( \",\"//str(@name='id'((.='1'(\",\"//arr(@name='#foo_s'(/str(.='how now brown cow'(\")@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(\"(explain(\",rf.getTransformer().getName())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFalse(rf.wantsScore())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(rf.wantsAllFields())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertFalse(rf.wantsField(\"id\"))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFalse(rf.wantsScore())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertFalse(rf.wantsField(\"xxx\"))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTrue(rf.wantsField(\"(xxxxx(\"))@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "assertFalse(rf.wantsField(\"xxx\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertTrue(rf.wantsField(\"mydocid\"))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertFalse(rf.wantsScore())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(rf.wantsAllFields())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"(docid(\",rf.getTransformer().getName())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->28 [style = bold, label=""];
29->13 [style = bold, label=""];
11->20 [style = bold, label=""];
27->12 [style = bold, label=""];
21->15 [style = bold, label=""];
4->26 [style = bold, label=""];
19->1 [style = bold, label=""];
47->49 [style = bold, label=""];
46->44 [style = bold, label=""];
37->18 [style = bold, label=""];
9->16 [style = bold, label=""];
16->19 [style = bold, label=""];
8->32 [style = bold, label=""];
42->7 [style = bold, label=""];
43->46 [style = bold, label=""];
0->9 [style = bold, label=""];
33->34 [style = bold, label=""];
30->22 [style = bold, label=""];
10->42 [style = bold, label=""];
19->38 [style = bold, label=""];
39->21 [style = bold, label=""];
14->0 [style = bold, label=""];
6->24 [style = bold, label=""];
38->1 [style = bold, label=""];
50->48 [style = bold, label=""];
1->23 [style = bold, label=""];
34->3 [style = bold, label=""];
40->27 [style = bold, label=""];
10->46 [style = dashed, label="0"];
35->32 [style = bold, label=""];
3->6 [style = bold, label=""];
28->4 [style = bold, label=""];
23->31 [style = bold, label=""];
25->21 [style = bold, label=""];
25->39 [style = bold, label=""];
26->25 [style = bold, label=""];
10->7 [style = bold, label=""];
12->17 [style = bold, label=""];
13->27 [style = bold, label=""];
2->29 [style = bold, label=""];
20->30 [style = bold, label=""];
45->43 [style = bold, label=""];
15->11 [style = bold, label=""];
32->10 [style = bold, label=""];
44->47 [style = bold, label=""];
32->43 [style = dashed, label="0"];
34->41 [style = bold, label=""];
41->3 [style = bold, label=""];
31->2 [style = bold, label=""];
22->18 [style = bold, label=""];
5->33 [style = bold, label=""];
18->14 [style = bold, label=""];
13->36 [style = bold, label=""];
36->40 [style = bold, label=""];
17->5 [style = bold, label=""];
49->50 [style = bold, label=""];
22->37 [style = bold, label=""];
}
