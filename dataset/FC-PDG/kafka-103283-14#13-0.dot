digraph {
10 [style = filled, label = "buffer.put(new byte(((()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node1,ChannelState.READY.state())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node2,ChannelState.READY.state())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "selector.close()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String node1 = \"invalid1\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testPacketSizeTooBig['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "selector.send(new NetworkSend(node2,ByteBufferSend.sizePrefixed(buffer)))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "selector.send(new NetworkSend(node2,buffer))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "buffer.rewind()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "selector.close()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "selector.send(new NetworkSend(node1,buffer))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "createAndCheckClientConnection(securityProtocol,\"good2\")@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "buffer.rewind()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "buffer.put(new byte(((()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "createAndCheckClientConnection(securityProtocol,\"good1\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "selector.send(request.toSend(node1,header))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "server = createEchoServer(securityProtocol)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "sendHandshakeRequestReceiveResponse(node1,(short)1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "createAndCheckClientConnection(securityProtocol,\"good1\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "configureMechanisms(\"PLAIN\",Arrays.asList(\"PLAIN\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "selector.close()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testSaslHandshakeRequestWithUnsupportedVersion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "createClientConnection(SecurityProtocol.PLAINTEXT,node2)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node1,ChannelState.READY.state())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE,Short.MAX_VALUE,\"someclient\",2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "buffer.putInt(Integer.MAX_VALUE)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String node2 = \"invalid2\"@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "createClientConnection(SecurityProtocol.PLAINTEXT,node1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ByteBuffer buffer = ByteBuffer.allocate(1024)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "SaslHandshakeRequest request = buildSaslHandshakeRequest(\"PLAIN\",ApiKeys.SASL_HANDSHAKE.latestVersion())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "selector.send(new NetworkSend(node1,ByteBufferSend.sizePrefixed(buffer)))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "buffer.clear()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testPacketSizeTooBig['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "buffer.putInt(Integer.MAX_VALUE)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->0 [style = bold, label=""];
2->7 [style = solid, label="securityProtocol"];
17->10 [style = bold, label=""];
8->16 [style = bold, label=""];
4->14 [style = bold, label=""];
15->13 [style = bold, label=""];
23->8 [style = solid, label="buffer"];
5->9 [style = bold, label=""];
19->12 [style = bold, label=""];
0->6 [style = bold, label=""];
19->27 [style = solid, label="node1"];
16->24 [style = bold, label=""];
12->11 [style = bold, label=""];
23->25 [style = solid, label="buffer"];
19->8 [style = solid, label="node1"];
14->17 [style = bold, label=""];
12->30 [style = bold, label=""];
23->3 [style = bold, label=""];
3->15 [style = bold, label=""];
30->32 [style = bold, label=""];
10->21 [style = bold, label=""];
19->29 [style = solid, label="node1"];
21->25 [style = bold, label=""];
27->16 [style = bold, label=""];
2->9 [style = solid, label="securityProtocol"];
22->25 [style = solid, label="node2"];
21->18 [style = bold, label=""];
22->4 [style = bold, label=""];
32->29 [style = bold, label=""];
29->28 [style = bold, label=""];
6->20 [style = bold, label=""];
23->18 [style = solid, label="buffer"];
7->22 [style = bold, label=""];
26->2 [style = bold, label=""];
13->27 [style = bold, label=""];
2->20 [style = solid, label="securityProtocol"];
19->11 [style = solid, label="node1"];
19->16 [style = solid, label="node1"];
28->33 [style = bold, label=""];
22->0 [style = solid, label="node2"];
34->2 [style = bold, label=""];
19->12 [style = solid, label="node1"];
2->31 [style = solid, label="securityProtocol"];
19->28 [style = solid, label="node1"];
9->19 [style = bold, label=""];
33->31 [style = bold, label=""];
32->29 [style = solid, label="header"];
8->27 [style = dashed, label="0"];
1->2 [style = bold, label=""];
13->8 [style = bold, label=""];
11->30 [style = dashed, label="0"];
24->7 [style = bold, label=""];
11->23 [style = bold, label=""];
22->4 [style = solid, label="node2"];
18->0 [style = bold, label=""];
23->27 [style = solid, label="buffer"];
22->18 [style = solid, label="node2"];
18->25 [style = dashed, label="0"];
2->5 [style = bold, label=""];
}
