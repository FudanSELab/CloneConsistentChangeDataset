digraph {
13 [style = filled, label = "ImmutableSet<ClassPath.ClassInfo> classes = classpath.getTopLevelClassesRecursive(\"org.apache.skywalking\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "functionRegister.put(metricsFunction.functionName(),(Class<? extends MeterFunction>)functionClass)@@@20@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "throw new UnexpectedException(\"Load class path failure.\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final ModuleManager manager@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "this.manager = manager@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "REGISTER.put(metricsFunction.functionName(),(Class<? extends Metrics>)aClass)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "throw new IllegalArgumentException(\"Function \" + functionClass.getCanonicalName() + \" doesn't implement AcceptableValue.\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "MetricsFunction metricsFunction = aClass.getAnnotation()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "functionClass.isAnnotationPresent()@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "aClass.isAnnotationPresent()@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "MeterFunction metricsFunction = functionClass.getAnnotation()@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "CLASS_POOL = ClassPool.getDefault()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "return METER_SYSTEM@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "Class<?> aClass = classInfo.load()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "METER_SYSTEM != null@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "IOException e@@@9@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "ImmutableSet<ClassPath.ClassInfo> classes = classpath.getTopLevelClassesRecursive(\"org.apache.skywalking\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "classPool = ClassPool.getDefault()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "!.isAssignableFrom(functionClass)@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "MeterFunction metricsFunction = functionClass.getAnnotation()@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Class<?> functionClass = classInfo.load()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "FUNCTION_REGISTER.put(metricsFunction.functionName(),(Class<? extends MeterFunction>)functionClass)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "ClassPath classpath = null@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "ClassPath classpath = ClassPath.from(.getClassLoader())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "init['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "classpath = ClassPath.from(.getClassLoader())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "throw new IllegalArgumentException(\"Function \" + functionClass.getCanonicalName() + \" doesn't implement AcceptableValue.\")@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ClassPath classpath = null@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "MeterSystem['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "METER_SYSTEM = new MeterSystem()@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "meterSystem['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "throw new UnexpectedException(\"Load class path failure.\")@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return METER_SYSTEM@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "MANAGER = manager@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "final ModuleManager manager@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
25->0 [style = bold, label=""];
1->33 [style = dashed, label="0"];
0->16 [style = bold, label=""];
0->9 [style = bold, label=""];
16->12 [style = dotted, label="true"];
9->0 [style = bold, label=""];
16->10 [style = bold, label=""];
6->22 [style = bold, label=""];
17->4 [style = dotted, label="true"];
11->6 [style = bold, label=""];
3->14 [style = bold, label=""];
34->33 [style = bold, label=""];
29->31 [style = bold, label=""];
0->32 [style = dashed, label="0"];
30->32 [style = bold, label=""];
15->6 [style = bold, label=""];
6->0 [style = bold, label=""];
32->34 [style = bold, label=""];
5->14 [style = bold, label=""];
22->16 [style = solid, label="functionClass"];
9->7 [style = bold, label=""];
26->19 [style = bold, label=""];
16->22 [style = bold, label=""];
10->7 [style = bold, label=""];
9->16 [style = bold, label=""];
9->34 [style = dashed, label="0"];
28->32 [style = bold, label=""];
20->27 [style = bold, label=""];
24->11 [style = dotted, label="true"];
21->26 [style = bold, label=""];
3->5 [style = bold, label=""];
12->10 [style = bold, label=""];
3->5 [style = dotted, label="true"];
19->13 [style = bold, label=""];
1->16 [style = bold, label=""];
7->2 [style = bold, label=""];
24->11 [style = bold, label=""];
6->25 [style = dotted, label="true"];
10->0 [style = bold, label=""];
34->33 [style = dotted, label="true"];
20->23 [style = dotted, label="true"];
9->1 [style = dotted, label="true"];
7->2 [style = solid, label="METER_SYSTEM"];
17->3 [style = bold, label=""];
11->13 [style = bold, label=""];
33->30 [style = bold, label=""];
4->14 [style = solid, label="manager"];
14->18 [style = bold, label=""];
13->15 [style = dotted, label="true"];
34->32 [style = bold, label=""];
18->8 [style = bold, label=""];
13->15 [style = bold, label=""];
6->0 [style = dotted, label="true"];
13->22 [style = bold, label=""];
9->16 [style = dotted, label="true"];
31->28 [style = bold, label=""];
23->27 [style = solid, label="manager"];
9->1 [style = bold, label=""];
10->16 [style = dashed, label="0"];
9->10 [style = dotted, label="true"];
34->30 [style = dotted, label="true"];
0->9 [style = dotted, label="true"];
8->11 [style = bold, label=""];
16->12 [style = bold, label=""];
27->21 [style = bold, label=""];
4->23 [style = dashed, label="0"];
6->16 [style = dotted, label="true"];
0->10 [style = solid, label="functionClass"];
6->25 [style = bold, label=""];
22->6 [style = bold, label=""];
32->30 [style = solid, label="aClass"];
}
