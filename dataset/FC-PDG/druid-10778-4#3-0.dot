digraph {
11 [style = filled, label = "final List<Future<Boolean>> futures = segments.stream().map(null).collect(Collectors.toList())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testLoadSegment['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final List<Future<Void>> futures = ImmutableList.of(SEGMENTS.get(0),SEGMENTS.get(2)).stream().map(null).collect(Collectors.toList())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final List<Future<Void>> futures = ImmutableList.of(segments.get(0),segments.get(2)).stream().map(null).collect(Collectors.toList())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "eachFuture.get()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testDropSegment['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testDropSegment['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertResult(segments)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertTrue(segmentManager.loadSegment(eachSegment))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertResult(ImmutableList.of(segments.get(1),segments.get(3),segments.get(4)))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(eachFuture.get())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertResult(ImmutableList.of(SEGMENTS.get(1),SEGMENTS.get(3),SEGMENTS.get(4)))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->3 [style = bold, label=""];
4->5 [style = dashed, label="0"];
11->8 [style = bold, label=""];
5->1 [style = bold, label=""];
4->1 [style = bold, label=""];
2->0 [style = bold, label=""];
6->0 [style = bold, label=""];
0->4 [style = bold, label=""];
3->7 [style = dashed, label="0"];
1->7 [style = bold, label=""];
0->5 [style = bold, label=""];
8->9 [style = bold, label=""];
10->11 [style = bold, label=""];
}
