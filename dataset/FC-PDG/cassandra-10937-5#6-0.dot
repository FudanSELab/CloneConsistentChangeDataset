digraph {
7 [style = filled, label = "setRepairedDataTrackingFlagIfHeaderPresent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Map<ParameterType,Object> params = ImmutableMap.of(ParameterType.TRACK_REPAIRED_DATA,MessagingService.ONE_BYTE)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SinglePartitionReadCommand command = command(metadata)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Map<ParameterType,Object> params = ImmutableMap.of(ParameterType.TRACE_SESSION,UUID.randomUUID())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(command.isTrackingRepairedStatus())@@@6@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertTrue(command.isTrackingRepairedStatus())@@@7@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ReadCommand command = command(metadata)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "dontSetRepairedDataTrackingFlagUnlessHeaderPresent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "setRepairedDataTrackingFlagIfHeaderPresent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(command.isTrackingRepairedStatus())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "handler.doVerb(MessageIn.create(peer(),command,params,MessagingService.Verb.READ,MessagingService.current_version),messageId())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(command.isTrackingRepairedStatus())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "handler.doVerb(Message.builder(READ_REQ,command).from(peer()).withFlag(MessageFlag.TRACK_REPAIRED_DATA).withId(messageId()).build())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12->0 [style = bold, label=""];
4->11 [style = dashed, label="0"];
2->10 [style = dashed, label="0"];
7->8 [style = bold, label=""];
1->9 [style = bold, label=""];
1->10 [style = bold, label=""];
5->11 [style = bold, label=""];
10->5 [style = solid, label="params"];
3->0 [style = bold, label=""];
0->5 [style = solid, label="command"];
1->2 [style = bold, label=""];
10->5 [style = bold, label=""];
0->1 [style = bold, label=""];
0->8 [style = dashed, label="0"];
5->4 [style = bold, label=""];
2->5 [style = solid, label="params"];
2->5 [style = bold, label=""];
9->6 [style = bold, label=""];
8->1 [style = bold, label=""];
}
