digraph {
24 [style = filled, label = "int i = 0@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "zk.create(name,name.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(1,stat.getCversion())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "stat = newStat()@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(stat.getCzxid() + i + 1,stat.getPzxid())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertEquals(i + 1,stat.getNumChildren())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertEquals(0,stat.getVersion())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(i + 1,stat.getCversion())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "int i = 0@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(0,stat.getEphemeralOwner())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(0,stat.getAversion())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "testChild['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testChildren['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getMzxid())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "Stat stat@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "zk.create(childname,childname.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(i + 1,stat.getNumChildren())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(stat.getCtime(),stat.getMtime())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "zk.getData(name,false,stat)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String name = \"/foo\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(stat.getCzxid() + 1,stat.getPzxid())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String childname = name + \"/bar\" + i@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(name.length(),stat.getDataLength())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String childname = name + \"/bar\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "i++@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(i + 1,stat.getCversion())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertEquals(stat.getCzxid() + i + 1,stat.getPzxid())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(childname.length(),stat.getDataLength())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(1,stat.getNumChildren())@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertEquals(zk.getSessionId(),stat.getEphemeralOwner())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testChildren['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "stat = newStat()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "zk.getData(childname,false,stat)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < 10@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(name.length(),stat.getDataLength())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
8->26 [style = solid, label="i"];
17->1 [style = solid, label="stat"];
32->37 [style = bold, label=""];
13->28 [style = dotted, label="true"];
0->13 [style = bold, label=""];
13->27 [style = dotted, label="true"];
25->22 [style = bold, label=""];
28->20 [style = bold, label=""];
18->30 [style = dashed, label="0"];
10->24 [style = bold, label=""];
13->20 [style = dotted, label="true"];
24->26 [style = solid, label="i"];
21->8 [style = bold, label=""];
43->42 [style = bold, label=""];
34->2 [style = solid, label="childname"];
13->5 [style = dotted, label="true"];
1->30 [style = bold, label=""];
12->7 [style = bold, label=""];
15->22 [style = dashed, label="0"];
45->7 [style = bold, label=""];
14->26 [style = dashed, label="0"];
4->9 [style = solid, label="name"];
37->31 [style = bold, label=""];
13->21 [style = dotted, label="true"];
4->10 [style = solid, label="name"];
4->1 [style = solid, label="name"];
7->25 [style = dashed, label="0"];
9->5 [style = bold, label=""];
0->34 [style = dashed, label="0"];
13->15 [style = dotted, label="true"];
24->21 [style = solid, label="i"];
13->9 [style = dotted, label="true"];
13->6 [style = dotted, label="true"];
13->17 [style = dotted, label="true"];
42->46 [style = bold, label=""];
13->3 [style = dotted, label="true"];
13->25 [style = dotted, label="true"];
30->26 [style = bold, label=""];
41->4 [style = bold, label=""];
13->19 [style = dotted, label="true"];
4->5 [style = solid, label="name"];
24->8 [style = solid, label="i"];
13->7 [style = dotted, label="true"];
16->17 [style = bold, label=""];
44->38 [style = bold, label=""];
6->2 [style = bold, label=""];
2->39 [style = bold, label=""];
26->27 [style = bold, label=""];
34->44 [style = solid, label="childname"];
10->34 [style = bold, label=""];
8->29 [style = solid, label="i"];
40->5 [style = bold, label=""];
13->22 [style = dotted, label="true"];
13->29 [style = dotted, label="true"];
10->0 [style = bold, label=""];
46->33 [style = bold, label=""];
0->8 [style = solid, label="i"];
8->19 [style = solid, label="i"];
24->29 [style = solid, label="i"];
27->29 [style = bold, label=""];
24->13 [style = bold, label=""];
19->15 [style = dashed, label="0"];
4->10 [style = bold, label=""];
13->16 [style = dotted, label="true"];
13->18 [style = dotted, label="true"];
17->1 [style = bold, label=""];
24->13 [style = solid, label="i"];
13->26 [style = dotted, label="true"];
3->45 [style = bold, label=""];
3->27 [style = dashed, label="0"];
11->4 [style = bold, label=""];
22->28 [style = bold, label=""];
3->12 [style = bold, label=""];
4->34 [style = solid, label="name"];
5->16 [style = bold, label=""];
13->2 [style = dotted, label="true"];
6->28 [style = dashed, label="0"];
13->30 [style = dotted, label="true"];
24->9 [style = solid, label="i"];
9->5 [style = solid, label="childname"];
13->8 [style = dotted, label="true"];
39->32 [style = bold, label=""];
34->44 [style = bold, label=""];
31->43 [style = bold, label=""];
7->15 [style = bold, label=""];
14->17 [style = dashed, label="0"];
13->9 [style = bold, label=""];
6->2 [style = solid, label="stat"];
38->40 [style = bold, label=""];
13->14 [style = dotted, label="true"];
8->12 [style = solid, label="i"];
8->13 [style = bold, label=""];
0->9 [style = solid, label="i"];
33->35 [style = bold, label=""];
8->21 [style = solid, label="i"];
2->19 [style = bold, label=""];
2->20 [style = dashed, label="0"];
13->12 [style = dotted, label="true"];
0->12 [style = solid, label="i"];
0->13 [style = solid, label="i"];
23->4 [style = bold, label=""];
40->5 [style = solid, label="stat"];
29->25 [style = bold, label=""];
1->18 [style = bold, label=""];
15->6 [style = bold, label=""];
18->36 [style = bold, label=""];
8->9 [style = solid, label="i"];
19->8 [style = bold, label=""];
8->13 [style = solid, label="i"];
20->21 [style = bold, label=""];
13->1 [style = dotted, label="true"];
0->14 [style = solid, label="i"];
19->21 [style = dashed, label="0"];
8->14 [style = solid, label="i"];
12->29 [style = dashed, label="0"];
0->24 [style = dashed, label="0"];
12->18 [style = dashed, label="0"];
0->19 [style = solid, label="i"];
18->14 [style = bold, label=""];
36->3 [style = bold, label=""];
}
