digraph {
22 [style = filled, label = "final Elasticsearch6DynamicSink testSink = new Elasticsearch6DynamicSink(new DummyEncodingFormat(),new Elasticsearch6Configuration(configuration,this.getClass().getClassLoader()),schema,provider)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final Elasticsearch7DynamicSink testSink = new Elasticsearch7DynamicSink(new DummyEncodingFormat(),new Elasticsearch7Configuration(configuration,this.getClass().getClassLoader()),schema,provider)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "verify(provider.sinkSpy,never()).disableFlushOnCheckpoint()@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final TableSchema schema = createTestSchema()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verify(provider.builderSpy).setBulkFlushMaxActions(1000)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testDefaultConfig['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "configuration.setString(ElasticsearchOptions.HOSTS_OPTION.key(),SCHEMA + \"://\" + HOSTNAME + \":\" + PORT)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testDefaultConfig['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "configuration.setString(ElasticsearchOptions.DOCUMENT_TYPE_OPTION.key(),DOC_TYPE)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testDefaultConfig['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verify(provider.builderSpy).setBulkFlushMaxSizeMb(2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "configuration.setString(ElasticsearchConnectorOptions.INDEX_OPTION.key(),INDEX)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "configuration.setString(ElasticsearchOptions.INDEX_OPTION.key(),INDEX)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testSink.getSinkRuntimeProvider(new MockSinkContext()).createSinkFunction()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(provider.builderSpy).setRestClientFactory(new Elasticsearch7DynamicSink.DefaultRestClientFactory(null))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(provider.builderSpy).setFailureHandler(new NoOpFailureHandler())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(provider.builderSpy).setBulkFlushBackoff(false)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "configuration.setString(ElasticsearchConnectorOptions.HOSTS_OPTION.key(),SCHEMA + \"://\" + HOSTNAME + \":\" + PORT)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Configuration configuration = new Configuration()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "verify(provider.builderSpy).setRestClientFactory(new Elasticsearch6DynamicSink.DefaultRestClientFactory(null))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "BuilderProvider provider = new BuilderProvider()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "configuration.setString(ElasticsearchConnectorOptions.DOCUMENT_TYPE_OPTION.key(),DOC_TYPE)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "verify(provider.builderSpy).setBulkFlushInterval(1000)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->17 [style = bold, label=""];
8->15 [style = bold, label=""];
16->8 [style = bold, label=""];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
0->19 [style = dashed, label="0"];
9->4 [style = bold, label=""];
4->13 [style = bold, label=""];
1->3 [style = bold, label=""];
3->11 [style = bold, label=""];
1->20 [style = bold, label=""];
20->11 [style = bold, label=""];
12->9 [style = bold, label=""];
17->19 [style = bold, label=""];
15->22 [style = dashed, label="0"];
8->22 [style = bold, label=""];
19->16 [style = bold, label=""];
7->14 [style = bold, label=""];
5->22 [style = solid, label="schema"];
8->22 [style = solid, label="provider"];
7->22 [style = solid, label="configuration"];
21->5 [style = bold, label=""];
6->16 [style = dashed, label="0"];
10->5 [style = bold, label=""];
14->0 [style = bold, label=""];
22->12 [style = bold, label=""];
18->5 [style = bold, label=""];
7->15 [style = solid, label="configuration"];
6->8 [style = bold, label=""];
5->15 [style = solid, label="schema"];
3->20 [style = dashed, label="0"];
5->7 [style = bold, label=""];
14->17 [style = dashed, label="0"];
15->12 [style = bold, label=""];
8->15 [style = solid, label="provider"];
13->2 [style = bold, label=""];
}
