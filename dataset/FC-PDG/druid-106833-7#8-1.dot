digraph {
5 [style = filled, label = "List<SearchHit> expectedHits = new ArrayList<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testSearchSameValueInMultiDims2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SearchQuery searchQuery = Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).intervals(QueryRunnerTestHelper.fullOnIntervalSpec).dimensions(Arrays.asList(QueryRunnerTestHelper.placementDimension,QueryRunnerTestHelper.placementishDimension)).query(\"e\").build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension,\"e\",93))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "SearchQuery searchQuery = Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).intervals(QueryRunnerTestHelper.fullOnIntervalSpec).dimensions(Arrays.asList(QueryRunnerTestHelper.placementDimension,QueryRunnerTestHelper.placementishDimension)).sortSpec(new SearchSortSpec(StringComparators.STRLEN)).query(\"e\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension,\"preferred\",1209))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension,\"preferred\",1209))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementDimension,\"preferred\",1209))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.PLACEMENTISH_DIMENSION,\"e\",93))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.PLACEMENT_DIMENSION,\"preferred\",1209))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "checkSearchQuery(searchQuery,expectedHits)@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testSearchSameValueInMultiDims['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.PLACEMENTISH_DIMENSION,\"preferred\",1209))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testSearchSameValueInMultiDims['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "SearchQuery searchQuery = Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.DATA_SOURCE).granularity(QueryRunnerTestHelper.ALL_GRAN).intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC).dimensions(Arrays.asList(QueryRunnerTestHelper.PLACEMENT_DIMENSION,QueryRunnerTestHelper.PLACEMENTISH_DIMENSION)).query(\"e\").build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8->10 [style = bold, label=""];
7->11 [style = bold, label=""];
5->9 [style = bold, label=""];
0->6 [style = bold, label=""];
6->7 [style = dashed, label="0"];
5->2 [style = solid, label="expectedHits"];
4->2 [style = solid, label="searchQuery"];
9->7 [style = bold, label=""];
3->4 [style = bold, label=""];
14->2 [style = solid, label="searchQuery"];
11->2 [style = bold, label=""];
13->1 [style = bold, label=""];
6->1 [style = bold, label=""];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
5->0 [style = bold, label=""];
1->11 [style = dashed, label="0"];
6->13 [style = bold, label=""];
10->2 [style = solid, label="searchQuery"];
12->14 [style = bold, label=""];
4->14 [style = dashed, label="0"];
1->2 [style = bold, label=""];
0->9 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
4->5 [style = bold, label=""];
14->5 [style = bold, label=""];
}
