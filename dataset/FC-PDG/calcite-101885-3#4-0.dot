digraph {
8 [style = filled, label = "addRule['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ruleSet.contains(rule)@@@6@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final RelTraitDef ruleTraitDef = ruleTrait.getTraitDef()@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return false@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RelOptRule rule@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "classOperands.put(subClass,operand)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ConverterRule converterRule = (ConverterRule)rule@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final RelTrait ruleTrait = converterRule.getInTrait()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "iter.remove()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "traitDefs.contains(ruleTraitDef)@@@21@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final RelTrait ruleTrait = converterRule.getInTrait()@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Iterator<RelOptRuleOperand> iter = classOperands.values().iterator()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "traitDefs.contains(ruleTraitDef)@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "RelOptRule rule@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "unmapRuleDescription(rule)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "rule instanceof ConverterRule@@@15@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "!ruleSet.remove(rule)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final boolean added = ruleSet.add(rule)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return true@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ConverterRule converterRule = (ConverterRule)rule@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "mapRuleDescription(rule)@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "iter.hasNext()@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final RelTraitDef ruleTraitDef = ruleTrait.getTraitDef()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assert added@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "addRule['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "return false@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "rule instanceof ConverterRule@@@17@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "locked@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "removeRule['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "entry.getRule().equals(rule)@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "ruleTraitDef.deregisterConverterRule(this,converterRule)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "RelOptRuleOperand entry = iter.next()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->10 [style = dotted, label="true"];
31->25 [style = dotted, label="true"];
5->2 [style = bold, label=""];
12->0 [style = bold, label=""];
23->30 [style = bold, label=""];
26->22 [style = bold, label=""];
8->14 [style = bold, label=""];
10->12 [style = solid, label="rule"];
11->2 [style = dotted, label="true"];
4->7 [style = bold, label=""];
11->12 [style = bold, label=""];
15->9 [style = bold, label=""];
9->4 [style = bold, label=""];
11->12 [style = dotted, label="true"];
28->20 [style = bold, label=""];
30->18 [style = bold, label=""];
6->26 [style = bold, label=""];
26->27 [style = solid, label="converterRule"];
2->13 [style = bold, label=""];
10->25 [style = dashed, label="0"];
18->23 [style = dotted, label="true"];
9->3 [style = bold, label=""];
7->16 [style = bold, label=""];
18->29 [style = dotted, label="true"];
25->20 [style = solid, label="rule"];
6->26 [style = dotted, label="true"];
2->6 [style = dotted, label="true"];
11->0 [style = dotted, label="true"];
12->6 [style = solid, label="converterRule"];
14->9 [style = bold, label=""];
6->13 [style = bold, label=""];
6->19 [style = bold, label=""];
13->24 [style = bold, label=""];
10->9 [style = solid, label="rule"];
28->15 [style = bold, label=""];
1->11 [style = bold, label=""];
29->23 [style = bold, label=""];
6->13 [style = dotted, label="true"];
20->21 [style = bold, label=""];
5->2 [style = solid, label="ruleTraitDef"];
6->22 [style = dotted, label="true"];
14->15 [style = dotted, label="true"];
16->1 [style = bold, label=""];
6->24 [style = dotted, label="true"];
17->10 [style = dotted, label="true"];
22->13 [style = bold, label=""];
21->18 [style = bold, label=""];
11->13 [style = bold, label=""];
9->20 [style = dashed, label="0"];
10->4 [style = solid, label="rule"];
15->20 [style = bold, label=""];
23->18 [style = bold, label=""];
25->26 [style = solid, label="rule"];
13->24 [style = solid, label="ruleTraitDef"];
25->23 [style = solid, label="rule"];
24->27 [style = dotted, label="true"];
9->3 [style = dotted, label="true"];
2->6 [style = bold, label=""];
24->19 [style = bold, label=""];
28->15 [style = dotted, label="true"];
24->27 [style = bold, label=""];
27->19 [style = bold, label=""];
14->28 [style = dashed, label="0"];
0->5 [style = bold, label=""];
6->27 [style = dashed, label="0"];
31->28 [style = bold, label=""];
10->16 [style = solid, label="rule"];
14->15 [style = bold, label=""];
10->11 [style = solid, label="rule"];
3->4 [style = bold, label=""];
18->29 [style = bold, label=""];
18->6 [style = bold, label=""];
25->6 [style = solid, label="rule"];
23->30 [style = dotted, label="true"];
11->5 [style = dotted, label="true"];
}
