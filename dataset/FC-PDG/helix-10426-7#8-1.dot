digraph {
20 [style = filled, label = "i < NUM_NODE / 2@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DelayedTransition.setDelay(5)@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testDelayedRebalancer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "manager.addExternalViewChangeListener(this)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling(50000L,100L))@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "int i = 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "createResourceWithWagedRebalance(CLUSTER_NAME,db,stateModel,partition,replica,replica)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "_startListen = true@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "manager.disconnect()@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "_participants.get(i).syncStart()@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "manager.addIdealStateChangeListener(this)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "manager.isConnected()@@@32@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "System.out.println(\"END testDelayedRebalancer at \" + new Date(System.currentTimeMillis()))@@@34@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "testWagedRebalancer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "System.out.println(\"END testDelayedRebalancer at \" + new Date(System.currentTimeMillis()))@@@35@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "manager.connect()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "createResourceWithDelayedRebalance(CLUSTER_NAME,db,stateModel,partition,replica,replica,0)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i < NUM_NODE@@@26@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testDelayedRebalancer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "System.out.println(\"START testDelayedRebalancer at \" + new Date(System.currentTimeMillis()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "i < NUM_NODE@@@25@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "_startListen = true@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "System.out.println(\"END testWagedRebalancer at \" + new Date(System.currentTimeMillis()))@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "HelixManager manager = HelixManagerFactory.getZKHelixManager(CLUSTER_NAME,null,InstanceType.SPECTATOR,ZK_ADDR)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "_participants.get(i).syncStart()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "System.out.println(\"START testWagedRebalancer at \" + new Date(System.currentTimeMillis()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verify(70000L))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertTrue(_testSuccess)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(clusterVerifier.verifyByPolling(50000L,100L))@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int replica = 3@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int partition = 30@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String db = \"Test-DB-\" + stateModel@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ZkHelixClusterVerifier clusterVerifier = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkAddr(ZK_ADDR).build()@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "enablePersistBestPossibleAssignment(_gZkClient,CLUSTER_NAME,true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "ZkHelixClusterVerifier clusterVerifier = new StrictMatchExternalViewVerifier.Builder(CLUSTER_NAME).setZkAddr(ZK_ADDR).setDeactivatedNodeAwareness(true).build()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertTrue(_testSuccess)@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Assert.assertTrue(clusterVerifier.verify(70000L))@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
11->20 [style = bold, label=""];
29->8 [style = bold, label=""];
27->1 [style = dotted, label="true"];
27->1 [style = bold, label=""];
17->1 [style = bold, label=""];
0->37 [style = bold, label=""];
25->22 [style = bold, label=""];
8->31 [style = bold, label=""];
16->2 [style = solid, label="i"];
16->20 [style = solid, label="i"];
4->25 [style = solid, label="partition"];
34->5 [style = bold, label=""];
20->11 [style = dotted, label="true"];
26->3 [style = bold, label=""];
10->19 [style = bold, label=""];
27->30 [style = bold, label=""];
18->36 [style = solid, label="db"];
2->17 [style = dotted, label="true"];
11->1 [style = solid, label="i"];
25->18 [style = bold, label=""];
25->32 [style = bold, label=""];
7->37 [style = bold, label=""];
5->26 [style = bold, label=""];
2->27 [style = solid, label="i"];
4->18 [style = bold, label=""];
18->36 [style = bold, label=""];
11->20 [style = solid, label="i"];
20->21 [style = dotted, label="true"];
12->24 [style = bold, label=""];
27->2 [style = dotted, label="true"];
22->34 [style = dashed, label="0"];
19->6 [style = bold, label=""];
22->5 [style = bold, label=""];
30->29 [style = bold, label=""];
32->33 [style = bold, label=""];
23->37 [style = dashed, label="0"];
33->26 [style = bold, label=""];
38->6 [style = bold, label=""];
2->13 [style = bold, label=""];
0->7 [style = bold, label=""];
20->21 [style = bold, label=""];
8->0 [style = bold, label=""];
15->36 [style = solid, label="replica"];
24->16 [style = bold, label=""];
26->27 [style = bold, label=""];
16->11 [style = solid, label="i"];
16->27 [style = solid, label="i"];
19->38 [style = dashed, label="0"];
0->23 [style = bold, label=""];
3->2 [style = bold, label=""];
21->11 [style = bold, label=""];
4->36 [style = solid, label="partition"];
25->36 [style = dashed, label="0"];
2->1 [style = dotted, label="true"];
16->1 [style = solid, label="i"];
14->12 [style = bold, label=""];
7->23 [style = bold, label=""];
36->18 [style = bold, label=""];
1->2 [style = solid, label="i"];
15->4 [style = bold, label=""];
28->19 [style = bold, label=""];
18->25 [style = bold, label=""];
9->14 [style = bold, label=""];
11->2 [style = solid, label="i"];
2->27 [style = bold, label=""];
8->0 [style = dotted, label="true"];
1->2 [style = bold, label=""];
18->25 [style = solid, label="db"];
35->38 [style = bold, label=""];
15->25 [style = solid, label="replica"];
11->27 [style = solid, label="i"];
0->7 [style = dotted, label="true"];
6->9 [style = bold, label=""];
13->8 [style = bold, label=""];
16->20 [style = bold, label=""];
20->15 [style = bold, label=""];
13->30 [style = dashed, label="0"];
36->34 [style = bold, label=""];
0->31 [style = bold, label=""];
}
