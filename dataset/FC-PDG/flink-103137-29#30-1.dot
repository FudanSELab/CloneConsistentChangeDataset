digraph {
29 [style = filled, label = "taskStateSnapshot.putSubtaskStateByOperatorID(operatorID,operatorSubtaskState)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "when(streamOperator.getOperatorID()).thenReturn(operatorID)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CloseableIterable<KeyGroupStatePartitionStreamProvider> keyedStateInputs = stateContext.rawKeyedStateInputs()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MemoryStateBackend stateBackend = spy(new MemoryStateBackend(1024))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CloseableIterable<StatePartitionStreamProvider> operatorStateInputs = stateContext.rawOperatorStateInputs()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertFalse(\"Expected the context to NOT be restored\",stateContext.isRestored())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "OperatorStateBackend operatorStateBackend = stateContext.operatorStateBackend()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TypeSerializer<?> typeSerializer = new IntSerializer()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "StreamOperatorStateContext stateContext = streamTaskStateManager.streamOperatorStateContext(streamOperator.getOperatorID(),streamOperator.getClass().getSimpleName(),new TestProcessingTimeService(),streamOperator,typeSerializer,closeableRegistry,new UnregisteredMetricsGroup())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "OperatorID operatorID = new OperatorID(47L,11L)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "OperatorSubtaskState operatorSubtaskState = new OperatorSubtaskState(new OperatorStreamStateHandle(Collections.singletonMap(\"a\",new OperatorStateHandle.StateMetaInfo(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b3895a,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)),CheckpointTestUtils.createDummyStreamStateHandle(random,null)),new OperatorStreamStateHandle(Collections.singletonMap(\"_default_\",new OperatorStateHandle.StateMetaInfo(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b38971,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)),CheckpointTestUtils.createDummyStreamStateHandle(random,null)),CheckpointTestUtils.createDummyKeyGroupStateHandle(random,null),CheckpointTestUtils.createDummyKeyGroupStateHandle(random,null),singleton(createNewInputChannelStateHandle(10,random)),singleton(createNewResultSubpartitionStateHandle(10,random)))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "AbstractKeyedStateBackend<?> keyedStateBackend = stateContext.keyedStateBackend()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "InternalTimeServiceManager<?> timeServiceManager = stateContext.internalTimerServiceManager()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "++count@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Random random = new Random(0x42)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertNotNull(operatorStateBackend)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "CloseableRegistry closeableRegistry = new CloseableRegistry()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "checkCloseablesRegistered(closeableRegistry,operatorStateBackend,keyedStateBackend,keyedStateInputs,operatorStateInputs)@@@55@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TypeSerializer<?> typeSerializer = new IntSerializer()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "CloseableIterable<KeyGroupStatePartitionStreamProvider> keyedStateInputs = stateContext.rawKeyedStateInputs()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "AbstractStreamOperator<?> streamOperator = mock()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testNoRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "testWithRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "when(streamOperator.getOperatorID()).thenReturn(operatorID)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "StreamTaskStateInitializer streamTaskStateManager = streamTaskStateManager(stateBackend,null,true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "AbstractKeyedStateBackend<?> keyedStateBackend = stateContext.keyedStateBackend()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "Assert.assertNotNull(operatorStateBackend)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "++count@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "CloseableIterable<StatePartitionStreamProvider> operatorStateInputs = stateContext.rawOperatorStateInputs()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "OperatorStateBackend operatorStateBackend = stateContext.operatorStateBackend()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "count = 0@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "StreamTaskStateInitializer streamTaskStateManager = streamTaskStateManager(mockingBackend,jobManagerTaskRestore,false)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "StateBackend mockingBackend = spy(new StateBackend(){@Override public CompletedCheckpointStorageLocation resolveCheckpoint(String pointer){throw new UnsupportedOperationException()}@Override public CheckpointStorage createCheckpointStorage(JobID jobId){throw new UnsupportedOperationException()}@Override public AbstractKeyedStateBackend<K> createKeyedStateBackend(Environment env,JobID jobID,String operatorIdentifier,TypeSerializer<K> keySerializer,int numberOfKeyGroups,KeyGroupRange keyGroupRange,TaskKvStateRegistry kvStateRegistry,TtlTimeProvider ttlTimeProvider,MetricGroup metricGroup,@Nonnull Collection<KeyedStateHandle> stateHandles,CloseableRegistry cancelStreamRegistry){return mock()}@Override public OperatorStateBackend createOperatorStateBackend(Environment env,String operatorIdentifier,@Nonnull Collection<OperatorStateHandle> stateHandles,CloseableRegistry cancelStreamRegistry){return mock()}})@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "InternalTimeServiceManager<?> timeServiceManager = stateContext.internalTimerServiceManager()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "AbstractStreamOperator<?> streamOperator = mock()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "CheckpointableKeyedStateBackend<?> keyedStateBackend = stateContext.keyedStateBackend()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "TaskStateSnapshot taskStateSnapshot = new TaskStateSnapshot()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "OperatorID operatorID = new OperatorID(47L,11L)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testNoRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "JobManagerTaskRestore jobManagerTaskRestore = new JobManagerTaskRestore(0L,taskStateSnapshot)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertNotNull(keyedStateBackend)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(true,stateContext.isRestored())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Assert.assertNotNull(keyedStateInputs)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "StreamOperatorStateContext stateContext = streamTaskStateManager.streamOperatorStateContext(streamOperator.getOperatorID(),streamOperator.getClass().getSimpleName(),new TestProcessingTimeService(),streamOperator,typeSerializer,closeableRegistry,new UnregisteredMetricsGroup())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "CloseableRegistry closeableRegistry = new CloseableRegistry()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(1,count)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Assert.assertNotNull(operatorStateInputs)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertNull(timeServiceManager)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(false,stateContext.isRestored())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(3,count)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "int count = 0@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->1 [style = solid, label="typeSerializer"];
5->3 [style = solid, label="operatorStateInputs"];
42->46 [style = solid, label="keyedStateInputs"];
34->50 [style = bold, label=""];
40->29 [style = solid, label="operatorSubtaskState"];
0->15 [style = bold, label=""];
28->36 [style = solid, label="taskStateSnapshot"];
14->39 [style = solid, label="operatorStateBackend"];
14->49 [style = solid, label="operatorStateBackend"];
22->0 [style = bold, label=""];
15->1 [style = solid, label="streamOperator"];
10->12 [style = bold, label=""];
15->20 [style = bold, label=""];
50->45 [style = bold, label=""];
21->25 [style = dashed, label="0"];
35->10 [style = bold, label=""];
31->46 [style = bold, label=""];
13->14 [style = bold, label=""];
2->28 [style = bold, label=""];
29->36 [style = bold, label=""];
11->16 [style = bold, label=""];
41->35 [style = solid, label="mockingBackend"];
24->19 [style = bold, label=""];
9->2 [style = bold, label=""];
18->2 [style = solid, label="keyedStateBackend"];
18->19 [style = bold, label=""];
48->40 [style = solid, label="random"];
26->49 [style = bold, label=""];
10->31 [style = dashed, label="0"];
24->6 [style = solid, label="keyedStateBackend"];
0->20 [style = solid, label="operatorID"];
18->6 [style = solid, label="keyedStateBackend"];
41->2 [style = bold, label=""];
32->49 [style = solid, label="keyedStateBackend"];
33->27 [style = bold, label=""];
5->25 [style = bold, label=""];
1->17 [style = bold, label=""];
2->29 [style = solid, label="operatorID"];
5->21 [style = bold, label=""];
21->9 [style = bold, label=""];
32->30 [style = solid, label="keyedStateBackend"];
42->49 [style = solid, label="keyedStateInputs"];
23->7 [style = bold, label=""];
36->35 [style = bold, label=""];
40->29 [style = bold, label=""];
46->44 [style = bold, label=""];
50->26 [style = solid, label="count"];
47->42 [style = bold, label=""];
21->27 [style = dashed, label="0"];
43->34 [style = solid, label="count"];
37->41 [style = bold, label=""];
25->9 [style = bold, label=""];
24->2 [style = solid, label="keyedStateBackend"];
3->6 [style = bold, label=""];
2->10 [style = bold, label=""];
4->7 [style = bold, label=""];
5->6 [style = solid, label="operatorStateInputs"];
19->10 [style = solid, label="timeServiceManager"];
8->6 [style = solid, label="keyedStateInputs"];
7->22 [style = solid, label="stateBackend"];
33->49 [style = solid, label="operatorStateInputs"];
7->22 [style = bold, label=""];
27->39 [style = bold, label=""];
16->1 [style = solid, label="closeableRegistry"];
43->38 [style = bold, label=""];
8->12 [style = solid, label="keyedStateInputs"];
16->1 [style = bold, label=""];
17->9 [style = solid, label="operatorStateBackend"];
30->31 [style = bold, label=""];
6->13 [style = bold, label=""];
38->34 [style = bold, label=""];
3->13 [style = solid, label="typeSerializer"];
7->41 [style = dashed, label="0"];
12->3 [style = bold, label=""];
47->31 [style = solid, label="timeServiceManager"];
14->32 [style = bold, label=""];
18->24 [style = dashed, label="0"];
20->11 [style = bold, label=""];
2->12 [style = solid, label="operatorID"];
6->49 [style = solid, label="closeableRegistry"];
42->33 [style = bold, label=""];
33->44 [style = solid, label="operatorStateInputs"];
16->6 [style = solid, label="closeableRegistry"];
48->40 [style = bold, label=""];
19->8 [style = bold, label=""];
44->43 [style = bold, label=""];
36->35 [style = solid, label="jobManagerTaskRestore"];
39->30 [style = bold, label=""];
17->24 [style = bold, label=""];
6->13 [style = solid, label="closeableRegistry"];
8->5 [style = bold, label=""];
32->47 [style = bold, label=""];
28->48 [style = bold, label=""];
45->26 [style = bold, label=""];
10->13 [style = solid, label="streamOperator"];
17->18 [style = bold, label=""];
17->6 [style = solid, label="operatorStateBackend"];
}
