digraph {
0 [style = filled, label = "table.updateSpec().addField(bucket(\"id\",8)).commit()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "V1Assert.assertEquals(\"Should add a new id bucket\",PartitionSpec.builderFor(table.schema()).withSpecId(1).alwaysNull(\"data\",\"data_bucket\").build(),table.spec())@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "V1Assert.assertEquals(\"Should soft delete data bucket\",PartitionSpec.builderFor(table.schema()).withSpecId(1).alwaysNull(\"data\",\"data_bucket\").bucket(\"id\",8,\"id_bucket_8\").build(),table.spec())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testAddAfterLastFieldRemoved['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "table.updateSpec().removeField(\"data_bucket\").addField(bucket(\"id\",8)).commit()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(1001,table.spec().lastAssignedFieldId())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "V1Assert.assertEquals(\"Should add a new id bucket\",PartitionSpec.builderFor(table.schema()).withSpecId(2).alwaysNull(\"data\",\"data_bucket\").bucket(\"id\",8,\"id_bucket_8\").build(),table.spec())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testAddAfterLastFieldRemoved['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "V1Assert.assertEquals(\"Should match the last assigned field id\",1000,table.spec().lastAssignedFieldId())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "V2Assert.assertEquals(\"Should add a new id bucket\",PartitionSpec.builderFor(table.schema()).withSpecId(1).build(),table.spec())@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Assert.assertEquals(1001,table.ops().current().lastAssignedPartitionId())@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertEquals(1001,table.spec().lastAssignedFieldId())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "V2Assert.assertEquals(\"Should hard delete data bucket\",PartitionSpec.builderFor(table.schema()).withSpecId(1).add(1,1001,\"id_bucket_8\",\"bucket(8(\").build(),table.spec())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testRemoveAndAddField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "V2Assert.assertEquals(\"Should add a new id bucket\",PartitionSpec.builderFor(table.schema()).withSpecId(2).add(1,1001,\"id_bucket_8\",\"bucket(8(\").build(),table.spec())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "table.updateSpec().removeField(\"data_bucket\").commit()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "V2Assert.assertEquals(\"Should match the last assigned field id\",999,table.spec().lastAssignedFieldId())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(1000,table.ops().current().lastAssignedPartitionId())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10->1 [style = bold, label=""];
12->0 [style = bold, label=""];
2->16 [style = dashed, label="0"];
14->17 [style = bold, label=""];
1->14 [style = dashed, label="0"];
16->15 [style = bold, label=""];
0->2 [style = bold, label=""];
4->7 [style = bold, label=""];
1->9 [style = bold, label=""];
9->11 [style = bold, label=""];
13->14 [style = bold, label=""];
11->6 [style = bold, label=""];
8->12 [style = bold, label=""];
17->16 [style = bold, label=""];
6->8 [style = bold, label=""];
0->17 [style = dashed, label="0"];
5->4 [style = bold, label=""];
3->1 [style = bold, label=""];
2->5 [style = bold, label=""];
1->0 [style = bold, label=""];
}
