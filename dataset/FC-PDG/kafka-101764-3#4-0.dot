digraph {
11 [style = filled, label = "processor.process(\"d\",\"2\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "processor.process(\"a\",\"1\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "shouldImmediatelyForwardRemovedSessionsWhenMerging['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "sessionStore.flush()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Arrays.asList(KeyValue.pair(new Windowed<>(\"a\",new SessionWindow(0,0)),new Change<>(1L,null)),KeyValue.pair(new Windowed<>(\"b\",new SessionWindow(0,0)),new Change<>(1L,null)),KeyValue.pair(new Windowed<>(\"c\",new SessionWindow(0,0)),new Change<>(1L,null)),KeyValue.pair(new Windowed<>(\"d\",new SessionWindow(0,GAP_MS / 2)),new Change<>(2L,null)),KeyValue.pair(new Windowed<>(\"b\",new SessionWindow(GAP_MS + 1,GAP_MS + 1)),new Change<>(1L,null)),KeyValue.pair(new Windowed<>(\"a\",new SessionWindow(GAP_MS + 1,GAP_MS + 1 + GAP_MS / 2)),new Change<>(2L,null)),KeyValue.pair(new Windowed<>(\"c\",new SessionWindow(GAP_MS + 1 + GAP_MS / 2,GAP_MS + 1 + GAP_MS / 2)),new Change<>(1L,null))),results)@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "processor.process(\"d\",\"1\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "context.setTime(GAP_MS + 1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "context.setTime(0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "processor.process(\"a\",\"1\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "context.setTime(GAP_MS / 2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "processor.init(context)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "context.setTime(GAP_MS + 1 + GAP_MS / 2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "shouldHandleMultipleSessionsAndMerging['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "processor.process(\"a\",\"1\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "processor.process(\"a\",\"2\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldHandleMultipleSessionsAndMerging['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "context.setTime(0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "initStore(false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "processor.process(\"a\",\"3\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Arrays.asList(KeyValue.pair(new Windowed<>(\"a\",new TimeWindow(0,0)),new Change<>(1L,null)),KeyValue.pair(new Windowed<>(\"b\",new TimeWindow(0,0)),new Change<>(1L,null)),KeyValue.pair(new Windowed<>(\"c\",new TimeWindow(0,0)),new Change<>(1L,null)),KeyValue.pair(new Windowed<>(\"d\",new TimeWindow(0,GAP_MS / 2)),new Change<>(2L,null)),KeyValue.pair(new Windowed<>(\"b\",new TimeWindow(GAP_MS + 1,GAP_MS + 1)),new Change<>(1L,null)),KeyValue.pair(new Windowed<>(\"a\",new TimeWindow(GAP_MS + 1,GAP_MS + 1 + GAP_MS / 2)),new Change<>(2L,null)),KeyValue.pair(new Windowed<>(\"c\",new TimeWindow(GAP_MS + 1 + GAP_MS / 2,GAP_MS + 1 + GAP_MS / 2)),new Change<>(1L,null))),results)@@@17@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "context.setTime(5)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "processor.process(\"c\",\"3\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Arrays.asList(KeyValue.pair(new Windowed<>(\"a\",new TimeWindow(0,0)),new Change<>(1L,null)),KeyValue.pair(new Windowed<>(\"a\",new TimeWindow(0,0)),new Change<>(null,null)),KeyValue.pair(new Windowed<>(\"a\",new TimeWindow(0,5)),new Change<>(2L,null))),results)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "processor.process(\"b\",\"2\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
15->9 [style = bold, label=""];
21->22 [style = bold, label=""];
11->0 [style = bold, label=""];
2->10 [style = bold, label=""];
0->3 [style = bold, label=""];
9->7 [style = bold, label=""];
1->11 [style = bold, label=""];
20->19 [style = bold, label=""];
6->14 [style = bold, label=""];
23->20 [style = bold, label=""];
22->18 [style = bold, label=""];
4->12 [style = bold, label=""];
9->20 [style = dashed, label="0"];
14->2 [style = bold, label=""];
2->16 [style = bold, label=""];
9->23 [style = bold, label=""];
7->1 [style = bold, label=""];
3->4 [style = bold, label=""];
13->5 [style = bold, label=""];
8->15 [style = bold, label=""];
17->5 [style = bold, label=""];
12->6 [style = bold, label=""];
18->15 [style = bold, label=""];
}
