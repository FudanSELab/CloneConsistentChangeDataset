digraph {
13 [style = filled, label = "{}@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Limiter limiter = new CountBasedLimiter(5)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/250\")))@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\")))@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\")))@@@29@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testSimpleCalls['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.fail()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Mockito.when(fs.listStatus(Mockito.any())).thenAnswer(new Answer<FileStatus((>(){@Override public FileStatus(( answer(InvocationOnMock invocation){Path path = (Path)invocation.getArguments()(0(int files = Integer.parseInt(path.getName())FileStatus status = new FileStatus(0,false,0,0,0,new Path(\"/\"))FileStatus(( out = new FileStatus((((for (int i = 0 i < files i++){out(i( = status}return out}})@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "{}@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertNotNull(throttledFileSystem.getFileStatus(new Path(\"/myFile\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\")))@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testListing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "NotEnoughPermitsException expected@@@27@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(throttledFileSystem.getServiceName(),\"testService\")@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "FileSystem fs = Mockito.mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "NotEnoughPermitsException expected@@@28@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testListing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "throttledFileSystem.getFileStatus(new Path(\"/myFile\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.fail()@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs,limiter)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertNotNull(throttledFileSystem.listStatus(new Path(\"/files/99\")))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Mockito.when(fs.getFileStatus(Mockito.any())).thenReturn(new FileStatus(0,false,0,0,0,new Path(\"/\")))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertNotNull(throttledFileSystem.getFileStatus(new Path(\"/myFile\")))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Limiter limiter = new CountBasedLimiter(2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "throttledFileSystem.listStatus(new Path(\"/files/150\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs,limiter,\"testService\")@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "throttledFileSystem.listStatus(new Path(\"/files/150\"))@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ThrottledFileSystem throttledFileSystem = new ThrottledFileSystem(fs,limiter)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3->17 [style = dashed, label="0"];
7->17 [style = bold, label=""];
7->3 [style = solid, label="limiter"];
25->22 [style = bold, label=""];
6->20 [style = dashed, label="0"];
26->25 [style = bold, label=""];
2->25 [style = solid, label="fs"];
9->27 [style = dashed, label="0"];
8->6 [style = bold, label=""];
21->24 [style = bold, label=""];
6->19 [style = bold, label=""];
2->9 [style = bold, label=""];
16->2 [style = bold, label=""];
9->7 [style = bold, label=""];
7->3 [style = bold, label=""];
26->25 [style = solid, label="limiter"];
19->0 [style = bold, label=""];
2->17 [style = solid, label="fs"];
20->21 [style = bold, label=""];
8->22 [style = dashed, label="0"];
12->13 [style = bold, label=""];
5->2 [style = bold, label=""];
0->14 [style = bold, label=""];
11->0 [style = bold, label=""];
2->3 [style = solid, label="fs"];
22->20 [style = bold, label=""];
7->17 [style = solid, label="limiter"];
18->6 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
6->11 [style = bold, label=""];
10->4 [style = bold, label=""];
2->27 [style = bold, label=""];
14->15 [style = bold, label=""];
4->1 [style = bold, label=""];
13->15 [style = bold, label=""];
23->2 [style = bold, label=""];
17->18 [style = bold, label=""];
27->26 [style = bold, label=""];
11->21 [style = dashed, label="0"];
}
