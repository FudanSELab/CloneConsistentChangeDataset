digraph {
15 [style = filled, label = "throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,ex.getMessage())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "UserVmResponse response = _responseGenerator.createUserVmResponse(ResponseView.Restricted,\"virtualmachine\",result).get(0)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "CallContext.current().setEventDetails(\"Vm Id: \" + getId())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "InsufficientCapacityException ex@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "execute['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "execute['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "throw new ServerApiException(ApiErrorCode.RESOURCE_UNAVAILABLE_ERROR,ex.getMessage())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "s_logger.info(ex)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "UserVm result@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "CallContext.current().setEventDetails(\"Vm Id: \" + getEntityUuid())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "message.append(\", Please check the affinity groups provided, there may not be sufficient capacity to follow them\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "s_logger.warn(\"Exception: \",ex)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ConcurrentOperationException ex@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ex instanceof InsufficientServerCapacityException@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CallContext.current().setEventDetails(\"Vm Id: \" + getEntityId())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "throw new ServerApiException(ApiErrorCode.INSUFFICIENT_CAPACITY_ERROR,message.toString())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "response.setResponseName(getCommandName())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "result = _userVmService.getUserVm(getEntityId())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "UserVmResponse response = _responseGenerator.createUserVmResponse(ResponseView.Restricted,\"virtualmachine\",result).get(0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "setResponseObject(response)@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "result = _userVmService.startVirtualMachine(this)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "response.setResponseName(getCommandName())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "s_logger.warn(\"Exception: \",ex)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "result != null@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "UserVm result@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "((InsufficientServerCapacityException)ex).isAffinityApplied()@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "result != null@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "setResponseObject(response)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "getStartVm()@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "s_logger.info(message.toString(),ex)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "result = _userVmService.startVirtualMachine(this)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,\"Failed to deploy vm uuid:\" + getEntityUuid())@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "StringBuilder message = new StringBuilder(ex.getMessage())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,\"Failed to start a vm\")@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "execute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2->17 [style = bold, label=""];
6->3 [style = bold, label=""];
8->26 [style = dotted, label="true"];
9->21 [style = dotted, label="false"];
32->28 [style = dotted, label="true"];
4->24 [style = bold, label=""];
23->5 [style = bold, label=""];
8->12 [style = dotted, label="false"];
0->18 [style = dotted, label="true"];
16->10 [style = bold, label=""];
1->26 [style = dashed, label="0"];
20->17 [style = dotted, label="true"];
12->9 [style = solid, label="result"];
17->9 [style = bold, label=""];
32->0 [style = bold, label=""];
27->30 [style = bold, label=""];
1->34 [style = dashed, label="0"];
23->4 [style = bold, label=""];
34->31 [style = bold, label=""];
32->27 [style = bold, label=""];
33->32 [style = solid, label="result"];
29->34 [style = bold, label=""];
11->9 [style = bold, label=""];
12->9 [style = bold, label=""];
9->6 [style = dotted, label="true"];
32->0 [style = dotted, label="false"];
26->11 [style = bold, label=""];
9->14 [style = dotted, label="true"];
24->5 [style = bold, label=""];
1->11 [style = bold, label=""];
0->7 [style = bold, label=""];
20->5 [style = dotted, label="true"];
8->1 [style = bold, label=""];
8->1 [style = dotted, label="true"];
5->2 [style = bold, label=""];
32->27 [style = dotted, label="true"];
23->4 [style = dotted, label="true"];
30->28 [style = bold, label=""];
10->8 [style = bold, label=""];
15->9 [style = bold, label=""];
19->23 [style = bold, label=""];
31->33 [style = bold, label=""];
11->9 [style = solid, label="result"];
22->13 [style = dotted, label="true"];
20->23 [style = dotted, label="true"];
32->30 [style = dotted, label="true"];
18->9 [style = bold, label=""];
9->14 [style = bold, label=""];
9->21 [style = bold, label=""];
7->18 [style = bold, label=""];
8->11 [style = dotted, label="true"];
20->2 [style = dotted, label="true"];
33->32 [style = bold, label=""];
25->10 [style = bold, label=""];
14->3 [style = solid, label="response"];
20->19 [style = dotted, label="true"];
27->28 [style = solid, label="response"];
13->15 [style = bold, label=""];
4->24 [style = dotted, label="true"];
9->3 [style = dotted, label="true"];
20->19 [style = bold, label=""];
22->15 [style = dotted, label="true"];
4->5 [style = bold, label=""];
14->6 [style = bold, label=""];
8->12 [style = bold, label=""];
22->13 [style = bold, label=""];
0->7 [style = dotted, label="true"];
8->26 [style = bold, label=""];
}
