digraph {
12 [style = filled, label = "String instantTime = \"001\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "fail(\"Should have failed\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "HoodieWriterCommitMessage commitMetadata = (HoodieWriterCommitMessage)writer.commit()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Option<List<String>> fileNames = Option.of(new ArrayList<>())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i < totalFailures@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int totalFailures = 5@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertWriteStatuses(commitMetadata.getWriteStatuses(),1,size / 2,fileAbsPaths,fileNames)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Throwable e@@@25@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "writer.write(internalRow)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<InternalRow> internalRows = toInternalRows(inputRows,ENCODER)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "HoodieBulkInsertDataInternalWriter writer = new HoodieBulkInsertDataInternalWriter(table,cfg,instantTime,RANDOM.nextInt(100000),RANDOM.nextLong(),RANDOM.nextLong(),STRUCT_TYPE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "HoodieBulkInsertDataInternalWriter writer = new HoodieBulkInsertDataInternalWriter(table,cfg,instantTime,RANDOM.nextInt(100000),RANDOM.nextLong(),STRUCT_TYPE,false)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "testGlobalFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "testGlobalFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int size = 10 + RANDOM.nextInt(100)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "BaseWriterCommitMessage commitMetadata = (BaseWriterCommitMessage)writer.commit()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertOutput(inputRows,result,instantTime,fileNames)@@@32@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Throwable e@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Dataset<Row> inputRows = getRandomRows(sqlContext,size / 2,partitionPath,false)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "{}@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "internalRows.addAll(toInternalRows(inputRows2,ENCODER))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Dataset<Row> result = sqlContext.read().parquet(fileAbsPaths.get().toArray(new String(((())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "HoodieWriteConfig cfg = getConfigBuilder(basePath).build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "HoodieTable table = HoodieSparkTable.create(cfg,context,metaClient)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "internalRows.add(getInternalRowWithError(partitionPath))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String partitionPath = HoodieTestDataGenerator.DEFAULT_PARTITION_PATHS(0(@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testGlobalFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int i = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Option<List<String>> fileAbsPaths = Option.of(new ArrayList<>())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "HoodieBulkInsertDataInternalWriter writer = new HoodieBulkInsertDataInternalWriter(table,cfg,instantTime,RANDOM.nextInt(100000),RANDOM.nextLong(),STRUCT_TYPE)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "Dataset<Row> inputRows2 = getRandomRows(sqlContext,size / 2,partitionPath,false)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Throwable e@@@25@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27->13 [style = bold, label=""];
6->15 [style = solid, label="size"];
7->32 [style = bold, label=""];
23->20 [style = bold, label=""];
13->32 [style = bold, label=""];
20->15 [style = solid, label="fileAbsPaths"];
28->10 [style = bold, label=""];
4->26 [style = dashed, label="0"];
3->1 [style = bold, label=""];
18->15 [style = solid, label="fileNames"];
19->12 [style = bold, label=""];
10->14 [style = bold, label=""];
4->6 [style = bold, label=""];
14->26 [style = solid, label="table"];
25->22 [style = bold, label=""];
16->8 [style = bold, label=""];
31->13 [style = bold, label=""];
18->8 [style = solid, label="fileNames"];
6->17 [style = solid, label="size"];
17->24 [style = solid, label="inputRows"];
18->15 [style = bold, label=""];
4->30 [style = dashed, label="0"];
16->8 [style = solid, label="result"];
14->19 [style = bold, label=""];
12->30 [style = bold, label=""];
10->30 [style = solid, label="cfg"];
25->0 [style = dotted, label="true"];
14->4 [style = solid, label="table"];
6->22 [style = solid, label="size"];
17->8 [style = solid, label="inputRows"];
21->25 [style = bold, label=""];
9->10 [style = bold, label=""];
11->25 [style = solid, label="totalFailures"];
12->26 [style = bold, label=""];
15->16 [style = bold, label=""];
26->6 [style = bold, label=""];
19->17 [style = solid, label="partitionPath"];
1->7 [style = bold, label=""];
30->6 [style = bold, label=""];
21->25 [style = solid, label="i"];
2->13 [style = bold, label=""];
23->32 [style = dashed, label="0"];
22->3 [style = bold, label=""];
12->8 [style = solid, label="instantTime"];
10->26 [style = solid, label="cfg"];
20->18 [style = bold, label=""];
14->30 [style = solid, label="table"];
10->14 [style = solid, label="cfg"];
19->5 [style = solid, label="partitionPath"];
12->30 [style = solid, label="instantTime"];
17->24 [style = bold, label=""];
25->5 [style = dotted, label="true"];
12->4 [style = bold, label=""];
24->21 [style = bold, label=""];
5->0 [style = bold, label=""];
0->25 [style = bold, label=""];
6->11 [style = bold, label=""];
7->23 [style = bold, label=""];
22->3 [style = solid, label="inputRows2"];
19->22 [style = solid, label="partitionPath"];
13->23 [style = bold, label=""];
12->4 [style = solid, label="instantTime"];
11->17 [style = bold, label=""];
25->5 [style = bold, label=""];
29->10 [style = bold, label=""];
21->0 [style = solid, label="i"];
10->4 [style = solid, label="cfg"];
32->20 [style = bold, label=""];
12->26 [style = solid, label="instantTime"];
0->25 [style = solid, label="i"];
}
