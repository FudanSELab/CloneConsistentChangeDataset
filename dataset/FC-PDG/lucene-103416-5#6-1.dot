digraph {
19 [style = filled, label = "count['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "totCount -= missingCount@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "LongRange(( longRanges = new LongRange((((@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "FunctionValues fv = valueSource.getValues(Collections.emptyMap(),hits.context)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "(doc = docs.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ValueSource valueSource@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "totCount += hits.totalHits@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "bits = dis.bits()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "int missingCount = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "totCount -= missingCount@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "throw new IllegalArgumentException(\"fastMatchFilter does not implement DocIdSet.bits\")@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "DocIdSet dis = fastMatchFilter.getDocIdSet(hits.context,null)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "dis == null@@@12@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "LongRangeCounter counter = new LongRangeCounter(longRanges)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "counter.add(NumericUtils.doubleToSortableLong(fv.doubleVal(doc)))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Bits bits@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "missingCount += x@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "List<MatchingDocs> matchingDocs@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "DocIdSetIterator docs = hits.bits.iterator()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "i++@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DocIdSetIterator docs = hits.bits.iterator()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "int i = 0@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "bits != null && bits.get(doc) == false@@@26@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "int doc@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "missingCount++@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "LongRange(( ranges = (LongRange(()this.ranges@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "DoubleRange(( ranges = (DoubleRange(()this.ranges@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "FunctionValues fv = valueSource.getValues(Collections.emptyMap(),hits.context)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "count['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "(doc = docs.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "fv.exists(doc)@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "totCount += hits.totalHits@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "i < ranges.length@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ValueSource valueSource@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "fastMatchFilter != null@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "int x = counter.fillCounts(counts)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int missingCount = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "longRanges(i( = new LongRange(range.label,NumericUtils.doubleToSortableLong(range.minIncl),true,NumericUtils.doubleToSortableLong(range.maxIncl),true)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "bits == null@@@16@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "List<MatchingDocs> matchingDocs@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "bits = null@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "count['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "LongRangeCounter counter = new LongRangeCounter(ranges)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "DoubleRange range = ranges(i(@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "counter.add(fv.longVal(doc))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "doc++@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "int doc@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "missingCount += counter.fillCounts(counts)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19->10 [style = dotted, label="true"];
29->43 [style = dotted, label="true"];
42->41 [style = bold, label=""];
25->22 [style = bold, label=""];
36->31 [style = solid, label="doc"];
25->28 [style = dotted, label="true"];
30->45 [style = solid, label="ranges"];
7->8 [style = bold, label=""];
0->15 [style = bold, label=""];
27->15 [style = bold, label=""];
29->45 [style = bold, label=""];
15->11 [style = bold, label=""];
45->43 [style = bold, label=""];
28->18 [style = dotted, label="true"];
0->8 [style = bold, label=""];
29->44 [style = bold, label=""];
44->1 [style = bold, label=""];
46->45 [style = solid, label="i"];
40->37 [style = bold, label=""];
1->47 [style = solid, label="missingCount"];
11->16 [style = bold, label=""];
24->28 [style = bold, label=""];
35->31 [style = bold, label=""];
23->25 [style = bold, label=""];
28->18 [style = bold, label=""];
46->29 [style = solid, label="i"];
21->0 [style = bold, label=""];
26->1 [style = bold, label=""];
2->34 [style = bold, label=""];
11->16 [style = solid, label="missingCount"];
18->12 [style = bold, label=""];
35->47 [style = dotted, label="false"];
33->29 [style = bold, label=""];
42->41 [style = solid, label="missingCount"];
15->11 [style = solid, label="x"];
17->26 [style = solid, label="bits"];
3->23 [style = bold, label=""];
0->1 [style = solid, label="doc"];
38->44 [style = solid, label="longRanges"];
19->13 [style = bold, label=""];
34->36 [style = bold, label=""];
13->5 [style = bold, label=""];
43->33 [style = bold, label=""];
9->4 [style = dotted, label="true"];
5->7 [style = bold, label=""];
38->46 [style = bold, label=""];
39->10 [style = dotted, label="true"];
5->38 [style = dashed, label="0"];
36->35 [style = bold, label=""];
0->26 [style = dotted, label="true"];
9->10 [style = dotted, label="true"];
33->45 [style = solid, label="i"];
0->26 [style = solid, label="doc"];
27->8 [style = bold, label=""];
47->36 [style = bold, label=""];
36->42 [style = bold, label=""];
14->31 [style = dashed, label="0"];
36->40 [style = bold, label=""];
24->26 [style = solid, label="bits"];
8->3 [style = bold, label=""];
31->36 [style = bold, label=""];
25->24 [style = dotted, label="true"];
3->12 [style = bold, label=""];
28->12 [style = bold, label=""];
35->31 [style = dotted, label="true"];
25->17 [style = bold, label=""];
46->29 [style = bold, label=""];
26->21 [style = bold, label=""];
2->0 [style = bold, label=""];
17->12 [style = bold, label=""];
23->24 [style = solid, label="bits"];
13->5 [style = solid, label="ranges"];
0->1 [style = bold, label=""];
24->28 [style = solid, label="bits"];
27->24 [style = bold, label=""];
1->2 [style = bold, label=""];
37->2 [style = bold, label=""];
0->1 [style = dotted, label="true"];
0->21 [style = solid, label="doc"];
30->38 [style = bold, label=""];
0->26 [style = bold, label=""];
7->2 [style = solid, label="missingCount"];
1->40 [style = bold, label=""];
19->20 [style = dotted, label="true"];
43->44 [style = solid, label="longRanges"];
6->0 [style = bold, label=""];
1->14 [style = dotted, label="true"];
12->6 [style = bold, label=""];
0->14 [style = solid, label="doc"];
1->2 [style = dotted, label="false"];
15->42 [style = dashed, label="0"];
39->30 [style = bold, label=""];
36->35 [style = solid, label="doc"];
25->17 [style = dotted, label="false"];
29->45 [style = dotted, label="true"];
14->0 [style = bold, label=""];
22->27 [style = bold, label=""];
39->32 [style = dotted, label="true"];
26->21 [style = dotted, label="true"];
33->29 [style = solid, label="i"];
25->22 [style = dotted, label="true"];
35->47 [style = bold, label=""];
1->14 [style = bold, label=""];
29->33 [style = dotted, label="true"];
43->33 [style = solid, label="i"];
36->35 [style = dotted, label="true"];
25->27 [style = dotted, label="true"];
13->30 [style = dashed, label="0"];
22->27 [style = solid, label="dis"];
9->13 [style = bold, label=""];
}
