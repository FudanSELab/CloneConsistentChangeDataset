digraph {
12 [style = filled, label = "this.pathTrie.addPath(\"node1/node2\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "deletePathFromRootLeaves['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(this.pathTrie.existsNode(\"/node1/node2\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertFalse(this.pathTrie.existsNode(\"/node1/node3\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertFalse(this.pathTrie.existsNode(\"/node1/node2\"))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Assert.assertFalse(this.pathTrie.existsNode(\"/node1\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "deletePathFromRootLeaves['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertFalse(this.pathTrie.existsNode(\"/node1\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertFalse(this.pathTrie.existsNode(\"/node1/node2\"))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertTrue(this.pathTrie.existsNode(\"/node1\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(this.pathTrie.existsNode(\"/node1/node2\"))@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "deletePathDoesNotExist['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "this.pathTrie.deletePath(\"node1/node3\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "this.pathTrie.deletePath(\"node1\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this.pathTrie.addPath(\"node1/node3\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "this.pathTrie.addPath(\"node1\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertFalse(this.pathTrie.existsNode(\"/node1/node3\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(this.pathTrie.existsNode(\"/node1\"))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "this.pathTrie.deletePath(\"node1/node2\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(this.pathTrie.existsNode(\"/node1\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertTrue(this.pathTrie.existsNode(\"/node1\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7->13 [style = bold, label=""];
8->16 [style = bold, label=""];
19->18 [style = bold, label=""];
1->8 [style = bold, label=""];
9->11 [style = bold, label=""];
15->7 [style = bold, label=""];
1->14 [style = dashed, label="0"];
2->1 [style = bold, label=""];
10->19 [style = bold, label=""];
18->15 [style = bold, label=""];
3->6 [style = bold, label=""];
10->3 [style = bold, label=""];
11->12 [style = bold, label=""];
12->0 [style = bold, label=""];
4->7 [style = bold, label=""];
3->19 [style = dashed, label="0"];
6->18 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
6->4 [style = bold, label=""];
0->10 [style = bold, label=""];
12->10 [style = bold, label=""];
8->5 [style = bold, label=""];
7->2 [style = bold, label=""];
4->15 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
14->8 [style = bold, label=""];
13->14 [style = bold, label=""];
20->11 [style = bold, label=""];
17->11 [style = bold, label=""];
}
