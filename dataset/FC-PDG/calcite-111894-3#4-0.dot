digraph {
12 [style = filled, label = "final List<RexNode> operands = call.getOperands()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "splitCorrelatedFilterCondition['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "RexNode op1 = operands.get(1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "nonEquiList.add(condition)@@@41@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "extractCorrelatedFieldAccess@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "joinKeys.add(op1)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "(op0 instanceof RexFieldAccess) && !RexUtil.containsFieldAccess(op1)@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "condition instanceof RexCall@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "correlatedJoinKeys.add(op0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "correlatedJoinKeys.add(op0)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "RexNode condition@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "(op0 instanceof RexInputRef) && !(RexUtil.containsInputRef(op1))@@@33@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "joinKeys.add(op0)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "List<RexNode> nonEquiList@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "RexNode op0 = operands.get(0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "return@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "List<RexInputRef> joinKeys@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "call.getOperator().getKind() == SqlKind.AND@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "LogicalFilter filter@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "!(RexUtil.containsInputRef(op0)) && (op1 instanceof RexInputRef)@@@28@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "List<RexNode> correlatedJoinKeys@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "joinKeys.add(op0)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List<RexInputRef> joinKeys@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "op0 instanceof RexInputRef && !RexUtil.containsInputRef(op1)@@@20@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "RexCall call = (RexCall)condition@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "LogicalFilter filter@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "splitCorrelatedFilterCondition(filter,operand,joinKeys,correlatedJoinKeys,nonEquiList)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<RexNode> nonEquiList@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "splitCorrelatedFilterCondition(filter,operand,joinKeys,correlatedJoinKeys,nonEquiList,extractCorrelatedFieldAccess)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "RexNode condition@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "!RexUtil.containsFieldAccess(op0) && (op1 instanceof RexFieldAccess)@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "!RexUtil.containsInputRef(op0) && op1 instanceof RexInputRef@@@15@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "RexNode operand@@@6@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "correlatedJoinKeys.add(op1)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "joinKeys.add(op1)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "RexNode operand@@@6@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "return@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "boolean extractCorrelatedFieldAccess@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "joinKeys.add((RexInputRef)op0)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "List<RexNode> joinKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "List<RexNode> correlatedJoinKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "List<RexNode> correlatedJoinKeys@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Filter filter@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "RexNode operand@@@6@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "correlatedJoinKeys.add(op1)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "splitCorrelatedFilterCondition['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "joinKeys.add((RexInputRef)op1)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "call.getOperator().getKind() == SqlKind.EQUALS@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RexNode condition@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "call.getOperands()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "splitCorrelatedFilterCondition['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
47->36 [style = solid, label="extractCorrelatedFieldAccess"];
29->32 [style = dotted, label="true"];
34->40 [style = dotted, label="true"];
39->48 [style = dotted, label="true"];
34->50 [style = dotted, label="false"];
13->37 [style = dotted, label="true"];
2->8 [style = dotted, label="true"];
21->36 [style = dotted, label="true"];
34->41 [style = dotted, label="true"];
48->36 [style = solid, label="correlatedJoinKeys"];
39->53 [style = dotted, label="true"];
23->53 [style = dashed, label="0"];
19->25 [style = solid, label="joinKeys"];
50->51 [style = bold, label=""];
47->37 [style = solid, label="extractCorrelatedFieldAccess"];
37->18 [style = dotted, label="false"];
14->10 [style = solid, label="op1"];
21->25 [style = bold, label=""];
52->36 [style = solid, label="nonEquiList"];
13->12 [style = bold, label=""];
50->38 [style = dotted, label="true"];
50->15 [style = bold, label=""];
39->24 [style = bold, label=""];
27->30 [style = bold, label=""];
14->40 [style = solid, label="op1"];
28->11 [style = solid, label="condition"];
39->43 [style = dotted, label="true"];
29->31 [style = dotted, label="true"];
31->25 [style = solid, label="filter"];
14->46 [style = solid, label="op1"];
13->12 [style = dotted, label="true"];
29->28 [style = dotted, label="true"];
2->19 [style = dotted, label="true"];
46->5 [style = bold, label=""];
17->1 [style = bold, label=""];
18->3 [style = dotted, label="false"];
1->5 [style = bold, label=""];
6->51 [style = solid, label="op0"];
21->0 [style = dotted, label="true"];
34->42 [style = dotted, label="true"];
23->25 [style = solid, label="nonEquiList"];
6->50 [style = solid, label="op0"];
41->40 [style = bold, label=""];
45->11 [style = solid, label="condition"];
39->52 [style = dotted, label="true"];
39->47 [style = dotted, label="true"];
30->10 [style = dotted, label="true"];
28->24 [style = solid, label="condition"];
37->18 [style = bold, label=""];
50->44 [style = dotted, label="true"];
34->50 [style = bold, label=""];
6->30 [style = solid, label="op0"];
24->11 [style = bold, label=""];
14->34 [style = solid, label="op1"];
21->20 [style = dotted, label="true"];
6->41 [style = solid, label="op0"];
45->15 [style = solid, label="condition"];
25->36 [style = dashed, label="0"];
32->25 [style = solid, label="correlatedJoinKeys"];
10->7 [style = bold, label=""];
18->17 [style = dotted, label="true"];
37->34 [style = bold, label=""];
6->14 [style = bold, label=""];
21->35 [style = dotted, label="true"];
22->49 [style = dashed, label="0"];
27->17 [style = bold, label=""];
39->45 [style = dotted, label="true"];
13->27 [style = dotted, label="true"];
2->24 [style = bold, label=""];
14->44 [style = solid, label="op1"];
3->22 [style = bold, label=""];
18->27 [style = dashed, label="0"];
3->7 [style = dotted, label="true"];
21->36 [style = bold, label=""];
6->17 [style = solid, label="op0"];
13->14 [style = dotted, label="true"];
22->10 [style = bold, label=""];
27->30 [style = dotted, label="false"];
27->1 [style = dotted, label="true"];
21->25 [style = dotted, label="true"];
21->13 [style = bold, label=""];
24->13 [style = dotted, label="true"];
2->23 [style = dotted, label="true"];
37->34 [style = dotted, label="true"];
13->6 [style = dotted, label="true"];
3->22 [style = dotted, label="true"];
13->15 [style = bold, label=""];
40->42 [style = bold, label=""];
38->15 [style = bold, label=""];
16->24 [style = solid, label="condition"];
8->25 [style = solid, label="filter"];
27->5 [style = dotted, label="true"];
21->9 [style = dotted, label="true"];
3->49 [style = dotted, label="true"];
24->11 [style = dotted, label="true"];
6->22 [style = solid, label="op0"];
3->30 [style = dashed, label="0"];
3->49 [style = bold, label=""];
2->16 [style = dotted, label="true"];
45->24 [style = solid, label="condition"];
16->11 [style = solid, label="condition"];
3->10 [style = dotted, label="true"];
14->18 [style = solid, label="op1"];
13->18 [style = dotted, label="true"];
34->41 [style = bold, label=""];
53->36 [style = solid, label="joinKeys"];
6->49 [style = solid, label="op0"];
30->7 [style = dotted, label="true"];
36->0 [style = bold, label=""];
25->0 [style = bold, label=""];
7->15 [style = bold, label=""];
6->3 [style = solid, label="op0"];
14->1 [style = solid, label="op1"];
12->6 [style = bold, label=""];
28->15 [style = solid, label="condition"];
14->27 [style = bold, label=""];
18->3 [style = bold, label=""];
16->15 [style = solid, label="condition"];
18->1 [style = dotted, label="true"];
33->25 [style = solid, label="joinKeys"];
2->4 [style = dotted, label="true"];
18->46 [style = dotted, label="true"];
11->21 [style = bold, label=""];
14->18 [style = bold, label=""];
29->23 [style = dotted, label="true"];
30->15 [style = bold, label=""];
51->44 [style = bold, label=""];
18->5 [style = dotted, label="true"];
27->17 [style = dotted, label="true"];
24->15 [style = bold, label=""];
14->37 [style = bold, label=""];
50->51 [style = dotted, label="true"];
30->22 [style = bold, label=""];
24->21 [style = dotted, label="true"];
0->13 [style = bold, label=""];
30->22 [style = dotted, label="true"];
1->46 [style = dashed, label="0"];
44->38 [style = bold, label=""];
21->26 [style = dotted, label="true"];
43->36 [style = solid, label="filter"];
4->25 [style = solid, label="correlatedJoinKeys"];
3->15 [style = bold, label=""];
49->10 [style = bold, label=""];
29->33 [style = dotted, label="true"];
18->17 [style = bold, label=""];
42->15 [style = bold, label=""];
29->24 [style = bold, label=""];
14->27 [style = solid, label="op1"];
17->46 [style = bold, label=""];
5->15 [style = bold, label=""];
}
