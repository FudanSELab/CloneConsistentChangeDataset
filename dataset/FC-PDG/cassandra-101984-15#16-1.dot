digraph {
33 [style = filled, label = "sstable.openReason == SSTableReader.OpenReason.EARLY@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "basicTest2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "checked = true@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "SSTableReader c = txn.current(sstables.iterator().next())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(1,sstables.size())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int filecounts = assertFileCounts(sstables.iterator().next().descriptor.directory.list(),0,0)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "SSTableDeletingTask.waitForDeletions()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "List<Pair<Long,Long>> compactingPositions = c.getPositionsForRanges(r)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SSTableReader s = writeFile(cfs,1000)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "truncate(cfs)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(0,cfs.metric.liveDiskSpaceUsed.getCount())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "validateCFS(cfs)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ISSTableScanner scanner = scanners.scanners.get(0)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(tmplinkPositions.get(0).right.longValue(),compactingPositions.get(0).left.longValue())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Collection<Range<Token>> r = Arrays.asList(new Range<>(cfs.partitioner.getMinimumToken(),cfs.partitioner.getMinimumToken()))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "cfs.getSSTables()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "truncate(cfs)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "CompactionController controller = new CompactionController(cfs,sstables,cfs.gcBefore(System.currentTimeMillis()))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "boolean checked = false@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "writer.finish()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "validateCFS(cfs)@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "writer.switchWriter(getWriter(cfs,sstables.iterator().next().descriptor.directory))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "SSTableReader sstable@@@24@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(1,filecounts)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Set<SSTableReader> sstables = new HashSet<>(cfs.getSSTables())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "!checked && writer.currentWriter().getFilePointer() > 15000000@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(c.uncompressedLength(),compactingPositions.get(0).right.longValue())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "scanner.hasNext()@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "basicTest2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "List<Pair<Long,Long>> tmplinkPositions = sstable.getPositionsForRanges(r)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "getPositionsTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(0,cfs.metric.totalDiskSpaceUsed.getCount())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(checked)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "writer.finish()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "writer.append(row)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "SSTableDeletingTask.waitForDeletions()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "AbstractCompactedRow row = new LazilyCompactedRow(controller,Arrays.asList(scanner.next()))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cfs.addSSTable(s)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(1,tmplinkPositions.size())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(0,tmplinkPositions.get(0).left.longValue())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(1,compactingPositions.size())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->9 [style = solid, label="controller"];
3->24 [style = bold, label=""];
30->20 [style = bold, label=""];
16->2 [style = solid, label="cfs"];
13->0 [style = solid, label="controller"];
40->15 [style = bold, label=""];
11->7 [style = solid, label="filecounts"];
12->10 [style = solid, label="sstables"];
36->33 [style = bold, label=""];
33->26 [style = dotted, label="true"];
4->33 [style = dotted, label="true"];
26->22 [style = bold, label=""];
19->5 [style = bold, label=""];
15->11 [style = bold, label=""];
3->0 [style = dotted, label="true"];
42->1 [style = bold, label=""];
4->36 [style = dotted, label="true"];
4->36 [style = bold, label=""];
16->1 [style = solid, label="cfs"];
33->37 [style = dotted, label="true"];
33->27 [style = dotted, label="true"];
18->38 [style = bold, label=""];
4->3 [style = bold, label=""];
30->24 [style = solid, label="checked"];
22->33 [style = bold, label=""];
41->32 [style = bold, label=""];
14->30 [style = bold, label=""];
33->3 [style = bold, label=""];
33->32 [style = dotted, label="true"];
16->13 [style = solid, label="cfs"];
1->17 [style = solid, label="s"];
14->10 [style = bold, label=""];
36->24 [style = solid, label="checked"];
9->8 [style = bold, label=""];
12->13 [style = solid, label="sstables"];
32->26 [style = bold, label=""];
9->0 [style = solid, label="row"];
1->17 [style = bold, label=""];
4->28 [style = dotted, label="true"];
2->39 [style = bold, label=""];
16->10 [style = solid, label="cfs"];
35->40 [style = bold, label=""];
16->34 [style = solid, label="cfs"];
21->37 [style = bold, label=""];
31->27 [style = bold, label=""];
12->14 [style = bold, label=""];
16->15 [style = solid, label="cfs"];
9->4 [style = dotted, label="true"];
16->18 [style = solid, label="cfs"];
39->42 [style = bold, label=""];
33->31 [style = dotted, label="true"];
4->9 [style = bold, label=""];
9->0 [style = dotted, label="true"];
8->15 [style = bold, label=""];
2->1 [style = bold, label=""];
7->18 [style = solid, label="filecounts"];
3->9 [style = dotted, label="true"];
23->41 [style = bold, label=""];
4->29 [style = dotted, label="true"];
5->16 [style = bold, label=""];
3->9 [style = bold, label=""];
6->5 [style = bold, label=""];
17->12 [style = bold, label=""];
33->21 [style = dotted, label="true"];
10->13 [style = bold, label=""];
38->34 [style = bold, label=""];
7->18 [style = bold, label=""];
25->5 [style = bold, label=""];
33->41 [style = dotted, label="true"];
27->21 [style = bold, label=""];
0->4 [style = solid, label="row"];
9->0 [style = bold, label=""];
24->35 [style = bold, label=""];
27->37 [style = solid, label="r"];
3->4 [style = dotted, label="true"];
16->11 [style = solid, label="cfs"];
27->21 [style = solid, label="r"];
16->2 [style = bold, label=""];
37->23 [style = bold, label=""];
20->10 [style = bold, label=""];
16->3 [style = solid, label="cfs"];
22->3 [style = bold, label=""];
33->23 [style = dotted, label="true"];
13->3 [style = bold, label=""];
0->4 [style = bold, label=""];
33->31 [style = bold, label=""];
33->22 [style = dotted, label="true"];
11->7 [style = bold, label=""];
}
