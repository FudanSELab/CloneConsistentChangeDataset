digraph {
2 [style = filled, label = "File external = File.createTempFile(\"something\",\"\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Util.createSymlink(d,\"a\",\"x\",l)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i < 768@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "{Util.deleteRecursive(d)}@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "File anotherDir = new File(d,\"anotherDir\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assume.assumeTrue(!Functions.isWindows())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertNull(Util.resolveSymlink(new File(d,\"a\")))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "File anotherDir = new File(d,\"anotherDir\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(external.getAbsolutePath(),Util.resolveSymlink(new File(d,\"outside\")))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "new FilePath(new File(d,\"a\")).touch(0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "buf.append((char)('0' + (i % 10)))@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "assertFalse(Util.isSymlink(new File(d,\"original\")))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Util.createSymlink(d,\"a\",\"anotherDir/link\",l)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "File d = tmp.getRoot()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(\"Couldn't create \" + anotherDir,anotherDir.mkdir())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String log = baos.toString()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Util.createSymlink(d,\"original\",\"link\",l)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "new FilePath(new File(d,\"original\")).touch(0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertFalse(Util.isSymlink(new File(d,\"dir\")))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(\"a\",Util.resolveSymlink(new File(d,\"anotherDir/link\")))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(\"Couldn't create \" + dir,dir.mkdir())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testSymlink['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "StreamTaskListener l = new StreamTaskListener(baos)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testSymlink['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "{Util.deleteRecursive(d)}@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Util.createSymlink(d,buf.toString(),\"x\",l)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "System.err.println(\"log output: \" + log)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "assertTrue(\"Couldn't create \" + anotherDir,anotherDir.mkdir())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "StringBuilder buf = new StringBuilder(768)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "{assertTrue(external.delete())}@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assume.assumeFalse(Functions.isWindows())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "i++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Util.createSymlink(d,external.getAbsolutePath(),\"outside\",l)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(buf.toString(),Util.resolveSymlink(new File(d,\"x\")))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "File dir = new File(d,\"dir\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(\"a\",Util.resolveSymlink(new File(d,\"x\")))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "buf.append((char)('0' + (i % 10)))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "log.length() > 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(Util.isSymlink(new File(d,\"link\")))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "testIsSymlink['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Util.createSymlink(d,\"dir\",\"anotherDir/symlinkDir\",l)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "log.length() > 0@@@18@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
20->11 [style = solid, label="i"];
12->38 [style = dashed, label="0"];
16->0 [style = bold, label=""];
40->6 [style = bold, label=""];
26->10 [style = bold, label=""];
5->28 [style = bold, label=""];
7->8 [style = bold, label=""];
15->29 [style = solid, label="log"];
14->39 [style = solid, label="d"];
23->32 [style = dashed, label="0"];
22->8 [style = bold, label=""];
5->11 [style = dotted, label="true"];
4->25 [style = solid, label="l"];
31->30 [style = bold, label=""];
21->16 [style = bold, label=""];
14->18 [style = solid, label="d"];
16->33 [style = dashed, label="0"];
1->4 [style = solid, label="baos"];
19->15 [style = bold, label=""];
0->36 [style = dashed, label="0"];
2->25 [style = bold, label=""];
9->24 [style = bold, label=""];
26->10 [style = solid, label="anotherDir"];
39->37 [style = solid, label="dir"];
1->4 [style = bold, label=""];
22->29 [style = dotted, label="true"];
14->16 [style = solid, label="d"];
14->21 [style = solid, label="d"];
14->25 [style = solid, label="d"];
12->21 [style = bold, label=""];
3->11 [style = bold, label=""];
11->3 [style = solid, label="i"];
14->38 [style = bold, label=""];
5->3 [style = dotted, label="true"];
11->5 [style = solid, label="i"];
14->23 [style = solid, label="d"];
14->32 [style = solid, label="d"];
14->8 [style = solid, label="d"];
33->36 [style = bold, label=""];
43->33 [style = bold, label=""];
4->16 [style = solid, label="l"];
34->35 [style = bold, label=""];
7->22 [style = dotted, label="true"];
32->42 [style = bold, label=""];
27->20 [style = bold, label=""];
15->22 [style = solid, label="log"];
39->37 [style = bold, label=""];
4->14 [style = bold, label=""];
20->3 [style = solid, label="i"];
17->6 [style = bold, label=""];
37->41 [style = bold, label=""];
22->29 [style = bold, label=""];
35->32 [style = bold, label=""];
14->33 [style = solid, label="d"];
36->39 [style = bold, label=""];
15->22 [style = bold, label=""];
14->24 [style = solid, label="d"];
5->19 [style = bold, label=""];
6->1 [style = bold, label=""];
7->22 [style = bold, label=""];
11->5 [style = bold, label=""];
14->41 [style = solid, label="d"];
10->23 [style = bold, label=""];
13->9 [style = bold, label=""];
5->28 [style = dotted, label="true"];
41->34 [style = bold, label=""];
23->18 [style = bold, label=""];
38->43 [style = bold, label=""];
4->23 [style = solid, label="l"];
29->8 [style = bold, label=""];
21->43 [style = dashed, label="0"];
20->5 [style = solid, label="i"];
20->28 [style = solid, label="i"];
30->1 [style = bold, label=""];
15->7 [style = bold, label=""];
14->43 [style = solid, label="d"];
25->13 [style = bold, label=""];
0->27 [style = bold, label=""];
14->36 [style = solid, label="d"];
28->11 [style = bold, label=""];
14->19 [style = solid, label="d"];
4->33 [style = solid, label="l"];
14->34 [style = solid, label="d"];
4->19 [style = solid, label="l"];
18->2 [style = bold, label=""];
14->42 [style = solid, label="d"];
20->5 [style = bold, label=""];
14->26 [style = solid, label="d"];
4->32 [style = solid, label="l"];
34->35 [style = solid, label="anotherDir"];
14->12 [style = bold, label=""];
14->0 [style = solid, label="d"];
6->30 [style = dashed, label="0"];
14->13 [style = solid, label="d"];
11->28 [style = solid, label="i"];
8->26 [style = bold, label=""];
}
