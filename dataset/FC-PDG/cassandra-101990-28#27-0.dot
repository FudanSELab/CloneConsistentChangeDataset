digraph {
14 [style = filled, label = "ci.hasNext()@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(files,sstables.size())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "SSTableReader s = writeFile(cfs,1000)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "truncate(cfs)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testNumberOfFiles_dont_clean_readers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "validateCFS(cfs)@@@31@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFileCounts(s.descriptor.directory.list())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "files++@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory,txn))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory,txn))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(cfs.getLiveSSTables().size(),files)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "rewriter.currentWriter().getOnDiskFilePointer() > 25000000@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Set<SSTableReader> compacting = Sets.newHashSet(s)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testNumberOfFiles_truncate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(cfs.getSSTables().size(),files)@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "cfs.disableAutoCompaction()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "sstables = rewriter.finish()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<SSTableReader> sstables@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testNumberOfFiles_truncate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int files = 1@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "rewriter.append(ci.next())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TransactionLogs.waitForDeletions()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cfs.addSSTable(s)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(files,cfs.getSSTables().size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->18 [style = bold, label=""];
22->2 [style = bold, label=""];
16->18 [style = solid, label="cfs"];
14->4 [style = dotted, label="true"];
21->14 [style = bold, label=""];
19->10 [style = bold, label=""];
1->6 [style = solid, label="files"];
16->5 [style = solid, label="cfs"];
23->24 [style = bold, label=""];
25->2 [style = bold, label=""];
1->23 [style = solid, label="files"];
15->12 [style = bold, label=""];
1->21 [style = bold, label=""];
16->13 [style = solid, label="cfs"];
15->12 [style = solid, label="s"];
9->1 [style = dotted, label="true"];
0->19 [style = bold, label=""];
16->15 [style = solid, label="cfs"];
14->0 [style = bold, label=""];
11->15 [style = bold, label=""];
17->3 [style = bold, label=""];
1->6 [style = bold, label=""];
3->13 [style = bold, label=""];
16->7 [style = solid, label="cfs"];
9->6 [style = dotted, label="true"];
9->21 [style = dotted, label="true"];
0->23 [style = bold, label=""];
9->18 [style = dotted, label="true"];
10->7 [style = bold, label=""];
8->2 [style = bold, label=""];
6->14 [style = bold, label=""];
15->20 [style = solid, label="s"];
3->1 [style = solid, label="files"];
1->24 [style = solid, label="files"];
5->11 [style = bold, label=""];
4->9 [style = bold, label=""];
12->20 [style = bold, label=""];
9->14 [style = bold, label=""];
16->5 [style = bold, label=""];
6->21 [style = dashed, label="0"];
20->17 [style = bold, label=""];
2->16 [style = bold, label=""];
18->1 [style = bold, label=""];
24->19 [style = bold, label=""];
14->4 [style = bold, label=""];
13->14 [style = bold, label=""];
3->24 [style = solid, label="files"];
3->23 [style = solid, label="files"];
1->21 [style = solid, label="files"];
5->15 [style = bold, label=""];
14->9 [style = dotted, label="true"];
}
