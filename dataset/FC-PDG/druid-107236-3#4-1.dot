digraph {
13 [style = filled, label = "VectorColumnSelectorFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "plan.isConstant()@@@5@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "VectorColumnSelectorFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "makeVectorValueSelector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "return new ExpressionVectorValueSelector(processor,bindings)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Expr expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Expr expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Expr.VectorInputBinding bindings = createVectorBindings(plan.getAnalysis(),factory)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final ExprVectorProcessor<?> processor = plan.getExpression().buildVectorized(bindings)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return new ExpressionVectorObjectSelector(processor,bindings)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return ConstantVectorSelectors.vectorValueSelector(factory.getVectorSizeInspector(),(Number)plan.getExpression().eval(ExprUtils.nilBindings()).value())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "makeVectorValueSelector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Expr expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Preconditions.checkArgument(plan.is(ExpressionPlan.Trait.VECTORIZABLE))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final ExpressionPlan plan = ExpressionPlanner.plan(factory,expression)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "makeVectorObjectSelector['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0->7 [style = solid, label="expression"];
5->12 [style = dashed, label="0"];
9->7 [style = solid, label="expression"];
1->12 [style = solid, label="bindings"];
14->7 [style = solid, label="expression"];
15->7 [style = bold, label=""];
11->1 [style = bold, label=""];
4->0 [style = dotted, label="true"];
1->3 [style = bold, label=""];
2->1 [style = solid, label="factory"];
2->7 [style = solid, label="factory"];
3->12 [style = bold, label=""];
15->14 [style = dotted, label="true"];
10->9 [style = dotted, label="true"];
10->7 [style = bold, label=""];
4->7 [style = bold, label=""];
15->13 [style = dotted, label="true"];
13->1 [style = solid, label="factory"];
8->1 [style = bold, label=""];
6->1 [style = bold, label=""];
3->5 [style = bold, label=""];
3->5 [style = solid, label="processor"];
3->12 [style = solid, label="processor"];
1->3 [style = solid, label="bindings"];
2->14 [style = dashed, label="0"];
10->2 [style = dotted, label="true"];
6->11 [style = bold, label=""];
13->7 [style = solid, label="factory"];
7->6 [style = bold, label=""];
11->8 [style = bold, label=""];
1->5 [style = solid, label="bindings"];
11->8 [style = dotted, label="true"];
4->2 [style = dotted, label="true"];
}
