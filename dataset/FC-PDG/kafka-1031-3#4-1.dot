digraph {
10 [style = filled, label = "Snapshot snapshot456 = registry.getOrCreateSnapshot(456)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testCreateSnapshots['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Snapshot snapshot123 = registry.getOrCreateSnapshot(123)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "registry.deleteSnapshot(snapshot456.epoch())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Snapshot snapshot456 = registry.createSnapshot(456)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThrows(,null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCreateAndDeleteSnapshots['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Snapshot snapshot123 = registry.createSnapshot(123)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SnapshotRegistry registry = new SnapshotRegistry(new LogContext())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"Can't create a new snapshot at epoch 1 because there is already \" + \"a snapshot with epoch 123\",assertThrows(,null).getMessage())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertEquals(snapshot123,registry.getSnapshot(123))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Snapshot snapshot789 = registry.createSnapshot(789)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testCreateSnapshots['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertIteratorContains(registry.iterator(),snapshot123,snapshot456)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertIteratorContains(registry.iterator(),snapshot123)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertIteratorContains(registry.iterator(),snapshot123,snapshot789)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(\"Can't create a new snapshot at epoch 1 because there is already \" + \"a snapshot with epoch 123\",assertThrows(,null).getMessage())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->4 [style = bold, label=""];
3->1 [style = bold, label=""];
4->6 [style = bold, label=""];
2->6 [style = bold, label=""];
0->12 [style = bold, label=""];
0->2 [style = bold, label=""];
11->0 [style = solid, label="snapshot123"];
11->5 [style = solid, label="snapshot123"];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
13->1 [style = bold, label=""];
4->7 [style = bold, label=""];
6->15 [style = bold, label=""];
1->11 [style = bold, label=""];
6->10 [style = dashed, label="0"];
8->0 [style = bold, label=""];
2->12 [style = dashed, label="0"];
6->5 [style = bold, label=""];
12->10 [style = bold, label=""];
10->5 [style = solid, label="snapshot456"];
10->5 [style = bold, label=""];
4->14 [style = solid, label="snapshot123"];
6->5 [style = solid, label="snapshot456"];
16->14 [style = bold, label=""];
15->14 [style = solid, label="snapshot789"];
4->11 [style = dashed, label="0"];
9->1 [style = bold, label=""];
4->0 [style = solid, label="snapshot123"];
4->7 [style = solid, label="snapshot123"];
4->5 [style = solid, label="snapshot123"];
11->7 [style = bold, label=""];
11->7 [style = solid, label="snapshot123"];
}
