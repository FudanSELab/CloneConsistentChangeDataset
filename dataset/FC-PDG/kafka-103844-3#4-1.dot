digraph {
29 [style = filled, label = "final HashMap<Integer,Node> nodes = new HashMap<>()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "nodes.put(0,new Node(0,\"localhost\",8121))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(\"group-0\",groupDescription.groupId())@@@42@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testDescribeConsumerGroups['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "testDescribeConsumerGroups['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DescribedGroupMember memberTwo = DescribeGroupsResponse.groupMember(\"1\",\"instance2\",\"clientId1\",\"clientHost\",memberAssignmentBytes,null)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TopicPartition myTopicPartition2 = new TopicPartition(\"my_topic\",2)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "byte(( memberAssignmentBytes = new byte((((@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.COORDINATOR_NOT_AVAILABLE,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "env.kafkaClient().setNodeApiVersions(NodeApiVersions.create())@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "assertEquals(expectedMemberDescriptions,groupDescription.members())@@@44@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "data = new DescribeGroupsResponseData()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(2,groupDescription.members().size())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TopicPartition myTopicPartition1 = new TopicPartition(\"my_topic\",1)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.NONE,\"\",\"non-consumer\",\"\",asList(),Collections.emptySet()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "testDescribeNonConsumerGroups['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<MemberDescription> expectedMemberDescriptions = new ArrayList<>()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "memberAssignment.get(memberAssignmentBytes)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.COORDINATOR_NOT_AVAILABLE,Node.noNode()))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "expectedMemberDescriptions.add(convertToMemberDescriptions(memberTwo,new MemberAssignment(new HashSet<>(topicPartitions))))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectedMemberDescriptions.add(convertToMemberDescriptions(memberOne,new MemberAssignment(new HashSet<>(topicPartitions))))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "topicPartitions.add(0,myTopicPartition0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final ConsumerGroupDescription groupDescription = result.describedGroups().get(\"group-0\").get()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final ByteBuffer memberAssignment = ConsumerProtocol.serializeAssignment(new ConsumerPartitionAssignor.Assignment(topicPartitions))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final DescribeConsumerGroupsResult result = env.adminClient().describeConsumerGroups(singletonList(\"group-0\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "TestUtils.assertFutureError(result.describedGroups().get(\"group-0\"),)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "data = new DescribeGroupsResponseData()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(2,groupDescription.members().size())@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final List<TopicPartition> topicPartitions = new ArrayList<>()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "DescribedGroupMember memberOne = DescribeGroupsResponse.groupMember(\"0\",\"instance1\",\"clientId0\",\"clientHost\",memberAssignmentBytes,null)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(expectedMemberDescriptions,groupDescription.members())@@@41@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "env.kafkaClient().setNodeApiVersions(NodeApiVersions.create())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final Cluster cluster = new Cluster(\"mockClusterId\",nodes.values(),Collections.emptyList(),Collections.emptySet(),Collections.emptySet(),nodes.get(0))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.NONE,\"\",ConsumerProtocol.PROTOCOL_TYPE,\"\",asList(memberOne,memberTwo),Collections.emptySet()))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "DescribeGroupsResponseData data = new DescribeGroupsResponseData()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.COORDINATOR_LOAD_IN_PROGRESS,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.NOT_COORDINATOR,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "DescribeGroupsResponseData data = new DescribeGroupsResponseData()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TopicPartition myTopicPartition0 = new TopicPartition(\"my_topic\",0)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final DescribeConsumerGroupsResult result = env.adminClient().describeConsumerGroups(singletonList(\"group-0\"))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "topicPartitions.add(2,myTopicPartition2)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(1,result.describedGroups().size())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.COORDINATOR_LOAD_IN_PROGRESS,Node.noNode()))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "topicPartitions.add(1,myTopicPartition1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
13->9 [style = solid, label="topicPartitions"];
39->19 [style = bold, label=""];
4->5 [style = solid, label="memberAssignmentBytes"];
0->13 [style = bold, label=""];
3->24 [style = bold, label=""];
1->20 [style = bold, label=""];
18->46 [style = dashed, label="0"];
30->5 [style = solid, label="topicPartitions"];
38->31 [style = bold, label=""];
4->21 [style = solid, label="memberAssignmentBytes"];
9->37 [style = bold, label=""];
19->1 [style = solid, label="data"];
22->4 [style = bold, label=""];
7->9 [style = bold, label=""];
33->11 [style = bold, label=""];
31->6 [style = bold, label=""];
30->33 [style = solid, label="topicPartitions"];
10->39 [style = bold, label=""];
35->8 [style = bold, label=""];
37->32 [style = bold, label=""];
7->32 [style = solid, label="memberOne"];
23->17 [style = bold, label=""];
19->28 [style = bold, label=""];
48->1 [style = bold, label=""];
27->25 [style = bold, label=""];
6->32 [style = solid, label="data"];
9->11 [style = solid, label="memberTwo"];
8->18 [style = bold, label=""];
40->39 [style = solid, label="data"];
4->21 [style = bold, label=""];
7->11 [style = solid, label="memberOne"];
29->23 [style = bold, label=""];
43->45 [style = bold, label=""];
13->22 [style = solid, label="topicPartitions"];
36->30 [style = bold, label=""];
17->34 [style = bold, label=""];
3->9 [style = solid, label="memberTwo"];
3->9 [style = solid, label="memberAssignmentBytes"];
3->7 [style = solid, label="memberAssignmentBytes"];
12->36 [style = solid, label="myTopicPartition1"];
31->14 [style = solid, label="data"];
13->7 [style = solid, label="topicPartitions"];
5->37 [style = solid, label="memberOne"];
24->7 [style = bold, label=""];
20->38 [style = solid, label="data"];
3->37 [style = solid, label="memberTwo"];
15->29 [style = bold, label=""];
44->42 [style = bold, label=""];
1->8 [style = bold, label=""];
5->7 [style = solid, label="memberOne"];
34->40 [style = bold, label=""];
16->27 [style = bold, label=""];
36->21 [style = solid, label="myTopicPartition2"];
4->3 [style = solid, label="memberAssignmentBytes"];
25->41 [style = bold, label=""];
45->44 [style = bold, label=""];
32->33 [style = bold, label=""];
47->29 [style = bold, label=""];
21->5 [style = bold, label=""];
0->30 [style = solid, label="myTopicPartition2"];
13->26 [style = bold, label=""];
34->39 [style = bold, label=""];
18->16 [style = bold, label=""];
40->10 [style = bold, label=""];
0->35 [style = solid, label="data"];
42->34 [style = bold, label=""];
30->22 [style = bold, label=""];
24->16 [style = solid, label="expectedMemberDescriptions"];
19->48 [style = bold, label=""];
37->41 [style = solid, label="expectedMemberDescriptions"];
26->36 [style = bold, label=""];
28->1 [style = bold, label=""];
9->33 [style = solid, label="memberTwo"];
12->0 [style = bold, label=""];
11->35 [style = bold, label=""];
20->2 [style = bold, label=""];
2->38 [style = bold, label=""];
6->14 [style = bold, label=""];
8->46 [style = bold, label=""];
28->48 [style = dashed, label="0"];
3->24 [style = solid, label="memberAssignmentBytes"];
14->12 [style = bold, label=""];
13->22 [style = solid, label="myTopicPartition0"];
26->4 [style = solid, label="myTopicPartition1"];
14->26 [style = solid, label="myTopicPartition0"];
30->32 [style = solid, label="topicPartitions"];
}
