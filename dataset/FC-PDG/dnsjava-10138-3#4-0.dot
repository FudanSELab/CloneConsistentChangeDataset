digraph {
13 [style = filled, label = "assertEquals(m_s1,sigs.get(0))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "m_rs.clear()@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(1,m_rs.size())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(Type.A,m_rs.getType())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "m_rs.addRR(m_a1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertEquals(2,sigs.size())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(m_a1,itr.get(1))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(m_name,m_rs.getName())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(Type.A,m_rs.getType())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<RRSIGRecord> sigs = rs2.sigs()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(m_s2,sigs.get(1))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "basics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "List<Record> itr = m_rs.rrs()@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertEquals(DClass.IN,m_rs.getDClass())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(m_s1,sigs.get(0))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertEquals(m_a2,itr.get(1))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(1,sigs.size())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(m_name,m_rs.getName())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "sigs = m_rs.sigs()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(m_a1,m_rs.first())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(m_a1,itr.get(0))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "List<ARecord> itr = rs2.rrs()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertEquals(m_s2,sigs.get(1))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertEquals(2,rs2.size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(DClass.IN,m_rs.getDClass())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(m_ttl,m_rs.getTTL())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "m_rs.addRR(m_a1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "m_rs.addRR(m_s1)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(m_ttl,m_rs.getTTL())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Record r = m_rs.first()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(1,m_rs.size())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,sigs.size())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(m_a1,itr.get(0))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(m_name,m_rs.getName())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(m_ttl,m_rs.getTTL())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(Type.A,m_rs.getType())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "itr = m_rs.rrs()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(m_ttl,m_rs.getTTL())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1,m_rs.size())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "RRset<ARecord> rs2 = new RRset<>(m_rs)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "itr = m_rs.rrs()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(0,m_rs.sigs().size())@@@62@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "m_rs.addRR(m_s1)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(2,m_rs.size())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "m_rs.deleteRR(m_a1)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(m_s2,sigs.get(0))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "m_rs.addRR(m_a2)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "sigs = m_rs.sigs()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(m_a1,m_rs.first())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Type.A,m_rs.getType())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(1,m_rs.size())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(m_a1,r)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "sigs = m_rs.sigs()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "m_rs.deleteRR(m_s1)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(2,itr.size())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(m_a2,itr.get(0))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(0,m_rs.size())@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(m_s1,sigs.get(0))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(DClass.IN,m_rs.getDClass())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "m_rs.addRR(m_s1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(m_a2,itr.get(1))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<RRSIGRecord> sigs = m_rs.sigs()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "List<ARecord> itr = m_rs.rrs()@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "basics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "assertEquals(m_a1,rs2.first())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "m_rs.addRR(m_s2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(2,sigs.size())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(m_s1,sigs.get(0))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "ctor_1arg['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(m_a2,m_rs.first())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(0,m_rs.rrs().size())@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "m_rs.addRR(m_s2)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(m_name,m_rs.getName())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(1,sigs.size())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(DClass.IN,m_rs.getDClass())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
7->66 [style = dashed, label="0"];
16->51 [style = bold, label=""];
62->14 [style = bold, label=""];
71->70 [style = bold, label=""];
56->52 [style = bold, label=""];
65->67 [style = bold, label=""];
70->69 [style = bold, label=""];
25->34 [style = bold, label=""];
23->45 [style = bold, label=""];
20->9 [style = bold, label=""];
48->29 [style = bold, label=""];
57->1 [style = bold, label=""];
10->32 [style = bold, label=""];
24->43 [style = bold, label=""];
67->1 [style = bold, label=""];
7->60 [style = bold, label=""];
53->19 [style = bold, label=""];
21->26 [style = bold, label=""];
8->36 [style = bold, label=""];
51->61 [style = bold, label=""];
66->64 [style = bold, label=""];
72->73 [style = bold, label=""];
40->47 [style = bold, label=""];
37->56 [style = bold, label=""];
73->66 [style = bold, label=""];
46->50 [style = bold, label=""];
32->11 [style = bold, label=""];
17->11 [style = solid, label="sigs"];
42->15 [style = bold, label=""];
68->72 [style = bold, label=""];
60->16 [style = bold, label=""];
38->28 [style = bold, label=""];
61->1 [style = bold, label=""];
50->37 [style = bold, label=""];
19->39 [style = bold, label=""];
9->17 [style = bold, label=""];
60->64 [style = dashed, label="0"];
14->56 [style = bold, label=""];
39->22 [style = bold, label=""];
36->46 [style = bold, label=""];
52->42 [style = bold, label=""];
26->27 [style = bold, label=""];
47->54 [style = bold, label=""];
48->1 [style = dashed, label="0"];
2->33 [style = bold, label=""];
34->38 [style = bold, label=""];
14->4 [style = bold, label=""];
56->68 [style = bold, label=""];
44->30 [style = bold, label=""];
59->17 [style = solid, label="sigs"];
63->65 [style = bold, label=""];
17->6 [style = bold, label=""];
6->18 [style = bold, label=""];
31->0 [style = bold, label=""];
15->73 [style = dashed, label="0"];
49->23 [style = bold, label=""];
31->59 [style = solid, label="sigs"];
74->14 [style = bold, label=""];
35->14 [style = bold, label=""];
52->68 [style = dashed, label="0"];
12->49 [style = bold, label=""];
54->8 [style = bold, label=""];
3->44 [style = bold, label=""];
18->10 [style = bold, label=""];
22->58 [style = bold, label=""];
33->59 [style = bold, label=""];
4->12 [style = bold, label=""];
27->24 [style = bold, label=""];
11->55 [style = bold, label=""];
57->61 [style = dashed, label="0"];
51->57 [style = bold, label=""];
45->40 [style = bold, label=""];
5->71 [style = bold, label=""];
55->21 [style = bold, label=""];
15->7 [style = bold, label=""];
28->53 [style = bold, label=""];
29->41 [style = bold, label=""];
41->3 [style = bold, label=""];
0->2 [style = bold, label=""];
64->63 [style = bold, label=""];
30->25 [style = bold, label=""];
58->31 [style = bold, label=""];
15->7 [style = solid, label="r"];
59->13 [style = bold, label=""];
5->48 [style = bold, label=""];
13->20 [style = bold, label=""];
}
