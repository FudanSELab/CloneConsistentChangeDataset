digraph {
26 [style = filled, label = "Object value@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "SchemaField field@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "!indexed && !stored && !docValues@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "newType.setStoreTermVectorOffsets(field.storeTermOffsets())@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "boolean docValues = field.hasDocValues()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "return false@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "newType.setTokenized(field.isTokenized())@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String exceptionMessage = String.format(Locale.ENGLISH,\"Unknown value for enum field: %s, value: %s\",field.getName(),value.toString())@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "isFieldUsed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final boolean docValues = field.hasDocValues()@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "newType.setStoreTermVectorPayloads(field.storeTermPayloads())@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "return true@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "return null@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "newType.setStoreTermVectors(field.storeTermVector())@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Integer intValue = enumMapping.stringValueToIntValue(value.toString())@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "log.trace(\"Ignoring unindexed/unstored field: \" + field)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "SchemaField field@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "log.trace(\"Ignoring unindexed/unstored field: \" + field)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "newType.setStored(field.stored())@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return new LegacyIntField(field.getName(),intValue.intValue(),newType)@@@26@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final boolean indexed = field.indexed()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,exceptionMessage)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "newType.setOmitNorms(field.omitNorms())@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final boolean stored = field.stored()@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "boolean stored = field.stored()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "newType.setNumericPrecisionStep(DEFAULT_PRECISION_STEP)@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "intValue == null || intValue.equals(EnumMapping.DEFAULT_VALUE)@@@11@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "newType.setIndexOptions(field.indexOptions())@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "createField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "log.isTraceEnabled()@@@7@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "createField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "newType.setStoreTermVectorPositions(field.storeTermPositions())@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "boolean indexed = field.indexed()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "SchemaField field@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "newType.setNumericType(LegacyNumericType.INT)@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final LegacyFieldType newType = new LegacyFieldType()@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "log.isTraceEnabled()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13->6 [style = solid, label="intValue"];
32->35 [style = bold, label=""];
23->7 [style = solid, label="exceptionMessage"];
19->18 [style = bold, label=""];
0->5 [style = dotted, label="true"];
13->24 [style = bold, label=""];
32->35 [style = dotted, label="true"];
0->13 [style = bold, label=""];
24->2 [style = bold, label=""];
0->18 [style = dotted, label="true"];
15->28 [style = dashed, label="0"];
17->6 [style = bold, label=""];
5->19 [style = dotted, label="true"];
27->26 [style = dotted, label="true"];
36->31 [style = bold, label=""];
25->3 [style = bold, label=""];
2->6 [style = solid, label="newType"];
29->0 [style = bold, label=""];
22->21 [style = bold, label=""];
12->15 [style = dotted, label="true"];
9->20 [style = bold, label=""];
20->14 [style = bold, label=""];
10->17 [style = bold, label=""];
5->18 [style = bold, label=""];
30->34 [style = bold, label=""];
27->15 [style = dotted, label="true"];
36->28 [style = dotted, label="true"];
12->9 [style = bold, label=""];
32->30 [style = bold, label=""];
0->30 [style = dotted, label="true"];
13->24 [style = solid, label="intValue"];
4->19 [style = solid, label="field"];
1->11 [style = bold, label=""];
33->29 [style = bold, label=""];
5->19 [style = bold, label=""];
3->10 [style = bold, label=""];
0->34 [style = bold, label=""];
24->23 [style = dotted, label="true"];
9->31 [style = dashed, label="0"];
14->0 [style = bold, label=""];
16->1 [style = bold, label=""];
7->2 [style = bold, label=""];
31->33 [style = bold, label=""];
18->13 [style = bold, label=""];
21->16 [style = bold, label=""];
28->35 [style = solid, label="field"];
11->8 [style = bold, label=""];
12->4 [style = dotted, label="true"];
23->7 [style = bold, label=""];
19->32 [style = dashed, label="0"];
0->32 [style = dotted, label="true"];
0->32 [style = bold, label=""];
20->33 [style = dashed, label="0"];
2->22 [style = bold, label=""];
14->29 [style = dashed, label="0"];
35->30 [style = bold, label=""];
8->25 [style = bold, label=""];
24->7 [style = dotted, label="true"];
0->5 [style = bold, label=""];
24->23 [style = bold, label=""];
20->21 [style = solid, label="stored"];
}
