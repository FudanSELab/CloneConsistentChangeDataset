digraph {
3 [style = filled, label = "final MockProcessorSupplier<String,Long> proc = new MockProcessorSupplier<>()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "builder.table(input,consumed).groupBy(MockMapper.selectValueKeyValueMapper(),stringSerialzied).count(\"count\").toStream().process(supplier)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testCountWithInternalStore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "builder.table(input,consumed).groupBy(MockMapper.selectValueKeyValueMapper(),stringSerialzied).count().toStream().process(proc)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testCount['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testCount['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testCountHelper(builder,input,proc)@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "builder.table(input,consumed).groupBy(MockMapper.selectValueKeyValueMapper(),stringSerialzied).count(\"count\").toStream().process(proc)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String input = \"count-test-input\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testCountHelper(builder,input,supplier)@@@6@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1->3 [style = bold, label=""];
3->9 [style = bold, label=""];
2->4 [style = solid, label="builder"];
2->8 [style = solid, label="builder"];
1->8 [style = solid, label="input"];
5->2 [style = bold, label=""];
10->2 [style = bold, label=""];
3->0 [style = solid, label="proc"];
3->4 [style = solid, label="proc"];
0->9 [style = dashed, label="0"];
1->4 [style = solid, label="input"];
7->8 [style = bold, label=""];
0->4 [style = bold, label=""];
1->7 [style = bold, label=""];
2->1 [style = bold, label=""];
3->0 [style = bold, label=""];
9->4 [style = bold, label=""];
6->2 [style = bold, label=""];
3->9 [style = solid, label="proc"];
}
