digraph {
2 [style = filled, label = "String origin@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "postSpansFromOrigin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(response.code()).isEqualTo(404)@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "postSpansFromOrigin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "httpCollectorEndpointReturns404['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return client.newCall(new Request.Builder().url(url(server,\"/api/v2/spans\")).header(\"Origin\",origin).post(RequestBody.create(null,SpanBytesEncoder.JSON_V2.encodeList(TestObjects.TRACE))).build()).execute()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "return client.newCall(new Request.Builder().url(url(server,\"/api/v2/spans\")).header(\"Origin\",origin).post(RequestBody.create(MediaType.parse(\"application/json\"),\"((\")).build()).execute()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Response response = client.newCall(new Request.Builder().url(url(server,\"/api/v2/spans\")).post(RequestBody.create(null,\"((\")).build()).execute()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->4 [style = dashed, label="0"];
7->5 [style = bold, label=""];
0->2 [style = dotted, label="true"];
1->5 [style = dashed, label="0"];
5->6 [style = bold, label=""];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
3->2 [style = dotted, label="true"];
}
