digraph {
50 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_CONTINUE)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "verifyOffset(response,s2Offset)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "segmentCompletionMgr._seconds += 15@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s3Offset.toString()).withSegmentName(segmentNameStr).withReason(reason)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "Assert.assertNull(commitTimeMap.get(tableName))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.PROCESSED)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset).withSegmentName(segmentNameStr)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "response = segmentCompletionMgr.segmentCommitEnd(params,true,false,CommittingSegmentDescriptor.fromSegmentCompletionReqParams(params))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Request.Params params@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "response = segmentCompletionMgr.segmentCommitStart(params)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.PROCESSED)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "segmentCompletionMgr._seconds += 5@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "segmentCompletionMgr._seconds += 55@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testStoppedConsumeDuringCompletion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "Assert.assertFalse((fsmMap.containsKey(segmentNameStr)))@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "Assert.assertTrue((fsmMap.containsKey(segmentNameStr)))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(commitTimeSec > 0)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "segmentCompletionMgr._seconds = 5@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset).withSegmentName(segmentNameStr)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s3Offset).withSegmentName(segmentNameStr)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(new LLCSegmentName(segmentNameStr),segmentManager._stoppedSegmentName)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "segmentManager._stoppedSegmentName = null@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "response = segmentCompletionMgr.segmentCommitStart(params)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "final String tableName = new LLCSegmentName(segmentNameStr).getTableName()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset.toString()).withSegmentName(segmentNameStr)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset).withSegmentName(segmentNameStr)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(commitTimeMap.get(tableName).longValue(),commitTimeMs)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "long commitTimeMs = (segmentCompletionMgr._seconds - startTime) * 1000@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_SUCCESS)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "final String reason = \"IAmLazy\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "segmentCompletionMgr._seconds += 19@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "segmentCompletionMgr._seconds = startTime@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "segmentCompletionMgr._seconds = startTime + commitTimeSec - 1@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "long commitTimeSec = response.getBuildTimeSeconds()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "testHappyPathSlowCommit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_SUCCESS)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "final long startTime = 1509242466@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Assert.assertTrue((fsmMap.containsKey(segmentNameStr)))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SegmentCompletionProtocol.Response response@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testStoppedConsumeDuringCompletion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "response = segmentCompletionMgr.segmentCommitEnd(params,true,false,CommittingSegmentDescriptor.fromSegmentCompletionReqParams(params))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(20)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(20)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.PROCESSED)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_CONTINUE)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset.toString()).withSegmentName(segmentNameStr)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset).withSegmentName(segmentNameStr)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(s3,segmentManager._stoppedInstance)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "segmentManager._stoppedInstance = null@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->42 [style = bold, label=""];
49->16 [style = bold, label=""];
46->0 [style = bold, label=""];
29->30 [style = bold, label=""];
74->82 [style = bold, label=""];
32->52 [style = bold, label=""];
81->83 [style = bold, label=""];
43->36 [style = dashed, label="0"];
78->70 [style = bold, label=""];
27->9 [style = bold, label=""];
37->76 [style = dashed, label="0"];
14->21 [style = solid, label="params"];
77->12 [style = bold, label=""];
19->36 [style = bold, label=""];
5->45 [style = bold, label=""];
30->6 [style = bold, label=""];
57->34 [style = bold, label=""];
74->68 [style = solid, label="response"];
44->51 [style = bold, label=""];
32->80 [style = dashed, label="0"];
64->75 [style = solid, label="params"];
12->38 [style = bold, label=""];
12->38 [style = solid, label="params"];
45->61 [style = bold, label=""];
22->0 [style = bold, label=""];
82->68 [style = bold, label=""];
23->34 [style = solid, label="params"];
31->40 [style = bold, label=""];
55->34 [style = bold, label=""];
6->36 [style = solid, label="commitTimeSec"];
41->82 [style = dashed, label="0"];
60->58 [style = solid, label="params"];
37->33 [style = bold, label=""];
52->21 [style = bold, label=""];
1->83 [style = dashed, label="0"];
73->60 [style = bold, label=""];
24->10 [style = bold, label=""];
0->3 [style = bold, label=""];
63->61 [style = solid, label="params"];
8->28 [style = bold, label=""];
40->50 [style = bold, label=""];
22->0 [style = solid, label="params"];
69->74 [style = solid, label="params"];
68->72 [style = bold, label=""];
59->73 [style = bold, label=""];
81->36 [style = solid, label="startTime"];
6->19 [style = solid, label="commitTimeSec"];
10->69 [style = dashed, label="0"];
50->30 [style = bold, label=""];
39->10 [style = solid, label="reason"];
79->57 [style = bold, label=""];
81->77 [style = solid, label="startTime"];
38->53 [style = bold, label=""];
49->16 [style = solid, label="params"];
50->30 [style = solid, label="params"];
10->26 [style = bold, label=""];
1->49 [style = bold, label=""];
47->43 [style = bold, label=""];
64->75 [style = bold, label=""];
48->26 [style = solid, label="params"];
55->34 [style = solid, label="params"];
38->2 [style = bold, label=""];
65->78 [style = bold, label=""];
33->23 [style = bold, label=""];
36->62 [style = bold, label=""];
75->4 [style = bold, label=""];
7->24 [style = bold, label=""];
35->34 [style = dashed, label="0"];
10->26 [style = solid, label="params"];
80->56 [style = bold, label=""];
11->4 [style = solid, label="params"];
34->5 [style = solid, label="commitTimeMs"];
72->64 [style = bold, label=""];
14->21 [style = bold, label=""];
40->29 [style = bold, label=""];
63->79 [style = solid, label="params"];
53->17 [style = solid, label="params"];
11->51 [style = dashed, label="0"];
2->17 [style = bold, label=""];
36->43 [style = bold, label=""];
69->74 [style = bold, label=""];
83->71 [style = solid, label="tableName"];
40->29 [style = solid, label="params"];
3->37 [style = bold, label=""];
51->4 [style = bold, label=""];
63->79 [style = bold, label=""];
62->80 [style = solid, label="params"];
39->81 [style = dashed, label="0"];
33->55 [style = bold, label=""];
11->4 [style = bold, label=""];
43->20 [style = bold, label=""];
15->44 [style = bold, label=""];
52->21 [style = solid, label="params"];
32->14 [style = bold, label=""];
13->39 [style = bold, label=""];
25->49 [style = dashed, label="0"];
25->16 [style = bold, label=""];
62->80 [style = bold, label=""];
48->26 [style = bold, label=""];
36->47 [style = dashed, label="0"];
14->52 [style = dashed, label="0"];
60->58 [style = bold, label=""];
4->31 [style = bold, label=""];
26->41 [style = bold, label=""];
19->47 [style = bold, label=""];
39->48 [style = solid, label="reason"];
66->9 [style = bold, label=""];
7->24 [style = solid, label="params"];
25->16 [style = solid, label="params"];
39->1 [style = bold, label=""];
18->8 [style = bold, label=""];
56->59 [style = bold, label=""];
1->25 [style = bold, label=""];
41->18 [style = bold, label=""];
26->69 [style = bold, label=""];
58->65 [style = bold, label=""];
61->67 [style = bold, label=""];
67->76 [style = bold, label=""];
83->71 [style = bold, label=""];
29->30 [style = solid, label="params"];
81->34 [style = solid, label="startTime"];
13->81 [style = bold, label=""];
28->15 [style = bold, label=""];
46->0 [style = solid, label="params"];
34->5 [style = bold, label=""];
35->22 [style = bold, label=""];
51->4 [style = solid, label="params"];
20->32 [style = bold, label=""];
70->63 [style = bold, label=""];
22->46 [style = dashed, label="0"];
6->19 [style = bold, label=""];
42->35 [style = bold, label=""];
47->43 [style = solid, label="params"];
17->7 [style = bold, label=""];
2->53 [style = dashed, label="0"];
23->55 [style = dashed, label="0"];
71->77 [style = bold, label=""];
29->50 [style = dashed, label="0"];
54->9 [style = bold, label=""];
53->17 [style = bold, label=""];
2->17 [style = solid, label="params"];
10->48 [style = dashed, label="0"];
23->34 [style = bold, label=""];
44->11 [style = bold, label=""];
26->74 [style = dashed, label="0"];
36->43 [style = solid, label="params"];
16->12 [style = bold, label=""];
24->48 [style = bold, label=""];
70->34 [style = solid, label="_seconds"];
9->13 [style = bold, label=""];
35->46 [style = bold, label=""];
}
