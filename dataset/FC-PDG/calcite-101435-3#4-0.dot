digraph {
8 [style = filled, label = "RelNode convertedRel = planner.changeTraits(singleRel,cluster.traitSetOf(PHYS_CALLING_CONVENTION))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RelNode result = planner.chooseDelegate().findBestExp()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(sort(buf),equalTo(sort(\"NoneSingleRel:Subset#0.NONE.((\",\"PhysSingleRel:Subset#0.PHYS.(0(\",\"PhysSingleRel:Subset#0.PHYS.((\")))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "NoneSingleRel singleRel = new NoneSingleRel(cluster,leafRel)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "planner.changeTraits(leafRel,cluster.traitSetOf(PHYS_CALLING_CONVENTION).plus(RelCollations.of(0)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(result instanceof PhysSingleRel)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testSubsetRule['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "testSetMergeMatchSubsetRule['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "NoneLeafRel leafRel = new NoneLeafRel(cluster,\"a\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "planner.addRule(new PhysLeafRule())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "planner.addRelTraitDef(RelCollationTraitDef.INSTANCE)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "planner.addRule(new SubsetRule(buf))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "planner.addRelTraitDef(ConventionTraitDef.INSTANCE)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "planner.addRule(new PhysSingleInputSetMergeRule())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(sort(buf),equalTo(sort(\"NoneSingleRel:RelSubset#0.NONE.((\",\"PhysSingleRel:RelSubset#0.PHYS.(0(\",\"PhysSingleRel:RelSubset#0.PHYS.((\")))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "planner.addRule(new GoodSingleRule())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "NoneSingleRel singleRel = new NoneSingleRel(cluster,leafRel)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "NoneLeafRel leafRel = new NoneLeafRel(cluster,\"a\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testSubsetRule['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RelOptCluster cluster = newCluster(planner)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "RelNode convertedRel = planner.changeTraits(singleRel,cluster.traitSetOf(PHYS_CALLING_CONVENTION))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(sort(buf),equalTo(sort(\"PhysSingleRel:Subset#0.PHYS.((\",\"PhysSingleRel:Subset#0.PHYS_3.((\")))@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "VolcanoPlanner planner = new VolcanoPlanner()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "planner.setRoot(convertedRel)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final List<String> buf = new ArrayList<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "planner.addRule(new PhysSingleSubsetRule(buf))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
7->1 [style = bold, label=""];
8->15 [style = bold, label=""];
9->11 [style = bold, label=""];
15->7 [style = bold, label=""];
11->15 [style = solid, label="leafRel"];
12->16 [style = dashed, label="0"];
25->13 [style = bold, label=""];
2->6 [style = bold, label=""];
4->8 [style = solid, label="singleRel"];
9->11 [style = solid, label="cluster"];
20->21 [style = solid, label="singleRel"];
11->4 [style = bold, label=""];
8->7 [style = solid, label="convertedRel"];
6->19 [style = solid, label="buf"];
12->17 [style = dashed, label="0"];
11->4 [style = solid, label="leafRel"];
6->19 [style = bold, label=""];
16->17 [style = bold, label=""];
1->16 [style = solid, label="result"];
8->21 [style = dashed, label="0"];
9->20 [style = solid, label="cluster"];
6->14 [style = solid, label="buf"];
22->7 [style = bold, label=""];
6->12 [style = solid, label="buf"];
9->4 [style = solid, label="cluster"];
24->20 [style = bold, label=""];
6->14 [style = bold, label=""];
20->21 [style = bold, label=""];
2->23 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
10->13 [style = bold, label=""];
19->9 [style = bold, label=""];
21->22 [style = bold, label=""];
1->16 [style = bold, label=""];
13->9 [style = solid, label="planner"];
6->17 [style = solid, label="buf"];
4->20 [style = dashed, label="0"];
23->6 [style = bold, label=""];
9->24 [style = solid, label="cluster"];
11->24 [style = dashed, label="0"];
18->13 [style = bold, label=""];
13->5 [style = bold, label=""];
21->22 [style = solid, label="convertedRel"];
4->8 [style = bold, label=""];
14->9 [style = bold, label=""];
6->16 [style = solid, label="buf"];
14->19 [style = dashed, label="0"];
16->12 [style = bold, label=""];
9->24 [style = bold, label=""];
24->20 [style = solid, label="leafRel"];
7->1 [style = solid, label="result"];
}
