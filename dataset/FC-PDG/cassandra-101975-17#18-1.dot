digraph {
3 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "IndexSummaryManager.instance.redistributeSummaries()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "double previousInterval = sstable.getEffectiveIndexInterval()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(numRows / cfs.metadata.params.minIndexInterval,sstable.getIndexSummarySize())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(cfs.metadata.params.maxIndexInterval,sstable.getEffectiveIndexInterval(),0.01)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "testChangeMinIndexInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "assertEquals(numRows / cfs.metadata.params.maxIndexInterval,sstable.getIndexSummarySize())@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "sstable.overrideReadMeter(new RestorableMeter(100.0,100.0))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SSTableReader sstable = cfs.getLiveSSTables().iterator().next()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sstable = cfs.getLiveSSTables().iterator().next()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "sstable = cfs.getLiveSSTables().iterator().next()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(cfs.metadata.params.maxIndexInterval,sstable.getEffectiveIndexInterval(),0.01)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Keyspace keyspace = Keyspace.open(ksname)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(cfs.metadata.params.maxIndexInterval,sstable.getEffectiveIndexInterval(),0.01)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertEquals(numRows / cfs.metadata.params.maxIndexInterval,sstable.getIndexSummarySize())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(cfs.metadata.params.minIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "sstables = new ArrayList<>(cfs.getLiveSSTables())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(cfs.metadata.params.minIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sstable = cfs.getLiveSSTables().iterator().next()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "IndexSummaryManager.instance.redistributeSummaries()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "redistributeSummaries(redistribution(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),summarySpace))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),(long)Math.ceil(summarySpace * 1.5))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "redistributeSummaries(redistribution(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),(long)Math.ceil(summarySpace / 2.0)))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertEquals(previousSize * 1.5,(double)sstable.getIndexSummarySize(),1)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(cfs.metadata.params.minIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@55@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval * 2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(originalMinIndexInterval * 2,sstable.getEffectiveIndexInterval(),0.001)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(numRows / originalMinIndexInterval,sstable.getIndexSummarySize())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "redistributeSummaries(redistribution(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),1))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfname)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval * 4)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),10)@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "redistributeSummaries(redistribution(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),1))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "cfs.metadata.maxIndexInterval(originalMinIndexInterval * 4)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(originalMinIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "long summarySpace = sstable.getIndexSummaryOffHeapSize()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(numRows / (originalMinIndexInterval * 2),sstable.getIndexSummarySize())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int numSSTables = 1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sstable = cfs.getLiveSSTables().iterator().next()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "redistributeSummaries(redistribution(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),10))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),(long)Math.ceil(summarySpace / 2.0))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "testChangeMaxIndexInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "cfs.metadata.maxIndexInterval(cfs.metadata.params.maxIndexInterval * 2)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testChangeMinIndexInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "String cfname = CF_STANDARDLOWiINTERVAL@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "int numRows = 256@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),summarySpace)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "int previousSize = sstable.getIndexSummarySize()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval / 2)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "cfs.metadata.maxIndexInterval(cfs.metadata.params.maxIndexInterval / 2)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "List<SSTableReader> sstables = new ArrayList<>(cfs.getLiveSSTables())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(previousInterval * (1.0 / 1.5),sstable.getEffectiveIndexInterval(),0.001)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "redistributeSummaries(redistribution(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),(long)Math.ceil(summarySpace * 1.5)))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "redistributeSummaries(redistribution(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),10))@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "sstables = new ArrayList<>(cfs.getLiveSSTables())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "String ksname = KEYSPACE1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(cfs.metadata.params.minIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "createSSTables(ksname,cfname,numSSTables,numRows)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(numRows / cfs.metadata.params.minIndexInterval,sstable.getIndexSummarySize())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
25->1 [style = bold, label=""];
32->37 [style = bold, label=""];
31->56 [style = bold, label=""];
55->49 [style = bold, label=""];
29->0 [style = bold, label=""];
44->15 [style = bold, label=""];
9->34 [style = solid, label="previousSize"];
41->24 [style = solid, label="numRows"];
21->30 [style = bold, label=""];
41->27 [style = solid, label="numRows"];
17->56 [style = dashed, label="0"];
26->11 [style = bold, label=""];
22->4 [style = bold, label=""];
41->57 [style = solid, label="numRows"];
43->40 [style = bold, label=""];
28->0 [style = bold, label=""];
51->48 [style = bold, label=""];
16->44 [style = solid, label="summarySpace"];
11->13 [style = bold, label=""];
1->12 [style = bold, label=""];
16->43 [style = solid, label="summarySpace"];
16->19 [style = solid, label="summarySpace"];
40->26 [style = bold, label=""];
58->59 [style = bold, label=""];
19->15 [style = bold, label=""];
29->36 [style = bold, label=""];
35->31 [style = bold, label=""];
20->24 [style = solid, label="ksname"];
15->34 [style = bold, label=""];
41->58 [style = solid, label="numRows"];
31->5 [style = bold, label=""];
0->29 [style = bold, label=""];
3->33 [style = bold, label=""];
16->46 [style = solid, label="summarySpace"];
20->38 [style = bold, label=""];
8->46 [style = dashed, label="0"];
5->17 [style = bold, label=""];
10->7 [style = bold, label=""];
16->8 [style = solid, label="summarySpace"];
56->51 [style = bold, label=""];
52->58 [style = bold, label=""];
18->20 [style = bold, label=""];
41->11 [style = solid, label="numRows"];
25->37 [style = bold, label=""];
9->44 [style = bold, label=""];
23->24 [style = solid, label="numSSTables"];
20->21 [style = solid, label="ksname"];
16->33 [style = solid, label="summarySpace"];
41->29 [style = solid, label="numRows"];
6->39 [style = solid, label="previousInterval"];
38->30 [style = solid, label="cfname"];
4->14 [style = bold, label=""];
16->52 [style = dashed, label="0"];
16->8 [style = bold, label=""];
22->45 [style = dashed, label="0"];
37->25 [style = bold, label=""];
46->10 [style = bold, label=""];
23->41 [style = bold, label=""];
59->53 [style = bold, label=""];
53->50 [style = bold, label=""];
41->25 [style = solid, label="numRows"];
50->57 [style = bold, label=""];
34->39 [style = bold, label=""];
2->45 [style = bold, label=""];
9->19 [style = bold, label=""];
13->2 [style = bold, label=""];
16->46 [style = bold, label=""];
41->24 [style = bold, label=""];
57->50 [style = bold, label=""];
24->35 [style = bold, label=""];
30->23 [style = bold, label=""];
42->20 [style = bold, label=""];
39->3 [style = bold, label=""];
36->32 [style = bold, label=""];
54->20 [style = bold, label=""];
33->43 [style = dashed, label="0"];
12->16 [style = bold, label=""];
38->24 [style = solid, label="cfname"];
27->6 [style = bold, label=""];
45->4 [style = bold, label=""];
19->44 [style = dashed, label="0"];
17->28 [style = bold, label=""];
33->40 [style = bold, label=""];
47->55 [style = bold, label=""];
49->52 [style = bold, label=""];
48->47 [style = bold, label=""];
7->27 [style = bold, label=""];
38->21 [style = bold, label=""];
3->43 [style = bold, label=""];
58->52 [style = bold, label=""];
6->9 [style = bold, label=""];
2->22 [style = bold, label=""];
}
