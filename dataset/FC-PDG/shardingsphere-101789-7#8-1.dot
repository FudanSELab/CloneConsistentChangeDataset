digraph {
22 [style = filled, label = "when(columnSegment.getOwner()).thenReturn(Optional.of(new OwnerSegment(0,0,new IdentifierValue(\"tbl_2\"))))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(actual.getAllTables().stream().map(null).collect(Collectors.toList()),is(Arrays.asList(\"tbl_1\",\"tbl_2\")))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SimpleTableSegment table2 = new SimpleTableSegment(0,0,new IdentifierValue(\"tbl_2\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(actual.getTablesContext().getTables().stream().map(null).collect(Collectors.toList()),is(Arrays.asList(\"tbl_1\",\"tbl_2\")))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "updateStatement.setTableSegment(joinTableSegment)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertNewInstance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "deleteStatement.setTableSegment(tableSegment)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SimpleTableSegment table2 = new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"tbl_2\")))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "UpdateStatementContext actual = new UpdateStatementContext(updateStatement)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(actual.getWhere(),is(Optional.of(whereSegment)))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertNewInstance['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "updateStatement.setSetAssignment(new SetAssignmentSegment(0,0,Collections.emptyList()))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<SimpleTableSegment> tables = new LinkedList<>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(actual.getWhere(),is(Optional.of(whereSegment)))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "deleteStatement.setWhere(whereSegment)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tables.add(table2)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "JoinTableSegment joinTableSegment = new JoinTableSegment()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "UpdateStatement updateStatement = new MySQLUpdateStatement()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final DeleteStatement deleteStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DeleteStatementContext actual = new DeleteStatementContext(deleteStatement)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SimpleTableSegment table1 = new SimpleTableSegment(0,0,new IdentifierValue(\"tbl_1\"))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "when(whereSegment.getExpr()).thenReturn(mock())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNewInstance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "SimpleTableSegment table1 = new SimpleTableSegment(0,0,new IdentifierValue(\"tbl_1\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "tables.add(table1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SimpleTableSegment table2 = new SimpleTableSegment(0,0,new IdentifierValue(\"tbl_2\"))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "joinTableSegment.setRight(table2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertThat(actual.getAllTables().stream().map(null).collect(Collectors.toList()),is(Arrays.asList(\"tbl_1\",\"tbl_2\",\"tbl_2\")))@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tableSegment.setRight(table2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "joinTableSegment.setLeft(table1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(actual.getTablesContext().getTables().stream().map(null).collect(Collectors.toList()),is(Arrays.asList(\"tbl_1\",\"tbl_2\")))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "SimpleTableSegment table1 = new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"tbl_1\")))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "updateStatement.setWhere(whereSegment)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "BinaryOperationExpression expression = new BinaryOperationExpression(0,0,columnSegment,null,null,null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "when(whereSegment.getExpr()).thenReturn(expression)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
8->10 [style = bold, label=""];
7->11 [style = bold, label=""];
33->20 [style = bold, label=""];
16->13 [style = dotted, label="true"];
10->14 [style = bold, label=""];
4->6 [style = bold, label=""];
16->10 [style = bold, label=""];
15->2 [style = solid, label="table2"];
11->15 [style = dashed, label="0"];
7->14 [style = dashed, label="0"];
20->34 [style = bold, label=""];
5->23 [style = dashed, label="0"];
21->33 [style = bold, label=""];
13->3 [style = solid, label="deleteStatement"];
32->27 [style = bold, label=""];
1->17 [style = solid, label="table2"];
28->32 [style = solid, label="joinTableSegment"];
10->22 [style = dashed, label="0"];
5->25 [style = solid, label="table1"];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
12->0 [style = bold, label=""];
2->17 [style = dashed, label="0"];
22->30 [style = bold, label=""];
15->5 [style = bold, label=""];
1->23 [style = bold, label=""];
4->28 [style = dashed, label="0"];
25->31 [style = bold, label=""];
3->9 [style = bold, label=""];
19->5 [style = bold, label=""];
5->1 [style = bold, label=""];
11->5 [style = bold, label=""];
30->19 [style = bold, label=""];
23->24 [style = bold, label=""];
30->19 [style = solid, label="expression"];
17->28 [style = bold, label=""];
31->26 [style = bold, label=""];
6->25 [style = dashed, label="0"];
5->6 [style = solid, label="tableSegment"];
1->24 [style = dashed, label="0"];
24->17 [style = bold, label=""];
18->32 [style = bold, label=""];
28->25 [style = bold, label=""];
0->34 [style = dashed, label="0"];
11->2 [style = solid, label="table2"];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
8->13 [style = dotted, label="true"];
26->21 [style = solid, label="updateStatement"];
9->12 [style = bold, label=""];
29->22 [style = bold, label=""];
7->1 [style = solid, label="table1"];
27->21 [style = bold, label=""];
5->24 [style = solid, label="table1"];
1->31 [style = solid, label="table2"];
14->1 [style = solid, label="table1"];
26->18 [style = bold, label=""];
}
