digraph {
15 [style = filled, label = "q1.start()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testCipherSuites['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(expectSuccess,ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "defaultCiphers.size() < 2@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "q1 = new MainThread(1,clientPortQp1,quorumConfiguration,SSL_QUORUM_ENABLED)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "q2 = new MainThread(2,clientPortQp2,quorumConfiguration,SSL_QUORUM_ENABLED)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "System.setProperty(quorumX509Util.getSslKeystoreLocationProperty(),keystorePath)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "SSLServerSocketFactory ssf = (SSLServerSocketFactory)SSLServerSocketFactory.getDefault()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "q3.start()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "q3.start()@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "q1 = new MainThread(1,clientPortQp1,quorumConfiguration,SSL_QUORUM_ENABLED)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "System.setProperty(quorumX509Util.getSslHostnameVerificationEnabledProperty(),\"false\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "defaultCiphers.add(cipher)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "!cipher.matches(\".*EMPTY.*\") && cipher.startsWith(\"TLS\") && cipher.contains(\"RSA\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "q3 = new MainThread(3,clientPortQp3,quorumConfiguration,SSL_QUORUM_ENABLED)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "q1.start()@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "String suitesOfEnsemble = String.join(\",\",defaultCiphers.subList(1,defaultCiphers.size()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "String keystorePath@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "boolean expectSuccess@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "System.setProperty(quorumX509Util.getSslKeystoreLocationProperty(),keystorePath)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertEquals(expectSuccess,ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp1,CONNECTION_TIMEOUT))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "System.setProperty(quorumX509Util.getCipherSuitesProperty(),suitesOfEnsemble)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testHostnameVerification['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "System.setProperty(quorumX509Util.getCipherSuitesProperty(),suiteOfClient)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Assert.assertFalse(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "q2.start()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "boolean expectSuccess@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + clientPortQp2,CONNECTION_TIMEOUT))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "q1.start()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + clientPortQp3,CONNECTION_TIMEOUT))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "String suiteOfClient = defaultCiphers.get(0)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "List<String> defaultCiphers = new ArrayList<String>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "System.clearProperty(quorumX509Util.getSslHostnameVerificationEnabledProperty())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "q1.shutdown()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "q2 = new MainThread(2,clientPortQp2,quorumConfiguration,SSL_QUORUM_ENABLED)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testHostnameVerification['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "q3.start()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "fail(\"JDK has to support at least 2 valid (RSA) cipher suites for this test to run\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "q3 = new MainThread(3,clientPortQp3,quorumConfiguration,SSL_QUORUM_ENABLED)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "q2.start()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->32 [style = dashed, label="0"];
17->8 [style = bold, label=""];
6->3 [style = bold, label=""];
32->35 [style = bold, label=""];
33->14 [style = bold, label=""];
44->42 [style = bold, label=""];
4->14 [style = bold, label=""];
49->45 [style = bold, label=""];
14->25 [style = bold, label=""];
28->37 [style = bold, label=""];
48->41 [style = bold, label=""];
46->43 [style = solid, label="suitesOfEnsemble"];
42->46 [style = bold, label=""];
35->3 [style = bold, label=""];
0->17 [style = bold, label=""];
16->8 [style = solid, label="expectSuccess"];
31->0 [style = bold, label=""];
19->20 [style = dotted, label="true"];
50->44 [style = bold, label=""];
11->6 [style = bold, label=""];
1->27 [style = bold, label=""];
23->4 [style = bold, label=""];
44->40 [style = bold, label=""];
19->10 [style = bold, label=""];
42->51 [style = dotted, label="true"];
20->0 [style = solid, label="keystorePath"];
34->12 [style = bold, label=""];
12->1 [style = bold, label=""];
24->39 [style = dashed, label="0"];
29->20 [style = dotted, label="true"];
4->33 [style = dashed, label="0"];
51->46 [style = bold, label=""];
30->0 [style = solid, label="keystorePath"];
20->3 [style = solid, label="keystorePath"];
42->51 [style = bold, label=""];
6->35 [style = dashed, label="0"];
9->34 [style = dashed, label="0"];
41->28 [style = bold, label=""];
8->36 [style = dashed, label="0"];
9->47 [style = dashed, label="0"];
7->9 [style = bold, label=""];
5->32 [style = bold, label=""];
17->36 [style = bold, label=""];
26->2 [style = bold, label=""];
27->39 [style = bold, label=""];
22->18 [style = bold, label=""];
7->34 [style = bold, label=""];
22->37 [style = dashed, label="0"];
10->13 [style = bold, label=""];
15->28 [style = bold, label=""];
37->31 [style = bold, label=""];
13->26 [style = bold, label=""];
45->50 [style = bold, label=""];
43->1 [style = bold, label=""];
22->47 [style = bold, label=""];
44->40 [style = dotted, label="true"];
23->38 [style = dashed, label="0"];
19->16 [style = dotted, label="true"];
29->30 [style = dotted, label="true"];
39->38 [style = bold, label=""];
25->15 [style = bold, label=""];
21->7 [style = bold, label=""];
29->10 [style = bold, label=""];
3->21 [style = bold, label=""];
20->36 [style = solid, label="expectSuccess"];
5->11 [style = bold, label=""];
27->24 [style = bold, label=""];
9->12 [style = bold, label=""];
48->41 [style = solid, label="suiteOfClient"];
38->33 [style = bold, label=""];
18->31 [style = dashed, label="0"];
40->42 [style = bold, label=""];
18->0 [style = bold, label=""];
14->48 [style = bold, label=""];
28->22 [style = bold, label=""];
40->44 [style = bold, label=""];
2->5 [style = bold, label=""];
30->3 [style = solid, label="keystorePath"];
24->23 [style = bold, label=""];
46->43 [style = bold, label=""];
}
