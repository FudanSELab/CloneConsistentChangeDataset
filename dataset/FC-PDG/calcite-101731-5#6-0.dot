digraph {
0 [style = filled, label = "nodes instanceof Collection && ((Collection)nodes).isEmpty()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "addOr(builder,node)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "node != null && digests.add(node.toString())@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Iterable<? extends RexNode> nodes@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "flattenAnd['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "addAnd(builder,digests,node)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Iterable<? extends RexNode> nodes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "addAnd(builder,node)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final Set<String> digests = Sets.newHashSet()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "flattenOr['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return builder.build()@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "node != null@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "return ImmutableList.of()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "flattenAnd['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "digests.add(node.toString())@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final ImmutableList.Builder<RexNode> builder = ImmutableList.builder()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
4->10 [style = bold, label=""];
5->8 [style = bold, label=""];
5->12 [style = dashed, label="0"];
11->1 [style = dotted, label="true"];
1->0 [style = solid, label="nodes"];
0->2 [style = bold, label=""];
6->1 [style = dotted, label="true"];
4->9 [style = solid, label="digests"];
6->0 [style = bold, label=""];
13->0 [style = solid, label="nodes"];
9->10 [style = bold, label=""];
8->14 [style = dashed, label="0"];
9->7 [style = bold, label=""];
10->9 [style = dotted, label="true"];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
12->7 [style = bold, label=""];
8->7 [style = bold, label=""];
15->13 [style = dotted, label="true"];
14->7 [style = bold, label=""];
1->13 [style = dashed, label="0"];
2->8 [style = solid, label="builder"];
8->9 [style = dashed, label="0"];
12->14 [style = dotted, label="true"];
11->0 [style = bold, label=""];
2->14 [style = solid, label="builder"];
3->2 [style = bold, label=""];
8->5 [style = bold, label=""];
5->10 [style = dashed, label="0"];
15->0 [style = bold, label=""];
14->12 [style = bold, label=""];
12->14 [style = bold, label=""];
4->12 [style = bold, label=""];
5->7 [style = bold, label=""];
2->9 [style = solid, label="builder"];
10->9 [style = bold, label=""];
0->3 [style = dotted, label="true"];
5->8 [style = dotted, label="true"];
4->5 [style = bold, label=""];
}
