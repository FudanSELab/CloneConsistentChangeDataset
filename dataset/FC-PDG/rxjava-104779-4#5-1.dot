digraph {
8 [style = filled, label = "expected.put(3,\"cccccc\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expected.put(1,\"aa\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Flowable<String> source = Flowable.just(\"a\",\"bb\",\"ccc\",\"dddd\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(objectSubscriber,times(1)).onNext(expected)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<Integer,String> expected = new HashMap<Integer,String>()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "mapped.subscribe(singleObserver)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "verify(singleObserver,times(1)).onSuccess(expected)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Map<Integer,String> expected = new HashMap<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "verify(objectSubscriber,never()).onError(any())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Flowable<Map<Integer,String>> mapped = source.toMap(lengthFunc,duplicate).toFlowable()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "mapped.subscribe(objectSubscriber)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Observable<String> source = Observable.just(\"a\",\"bb\",\"ccc\",\"dddd\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "toMapWithValueSelector['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "toMapWithValueSelectorFlowable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "verify(objectSubscriber,times(1)).onComplete()@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verify(singleObserver,never()).onError(any())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Single<Map<Integer,String>> mapped = source.toMap(lengthFunc,duplicate)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "expected.put(4,\"dddddddd\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expected.put(2,\"bbbb\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "toMapWithValueSelectorFlowable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
18->3 [style = bold, label=""];
7->1 [style = bold, label=""];
4->17 [style = bold, label=""];
11->6 [style = bold, label=""];
0->15 [style = dashed, label="0"];
12->7 [style = solid, label="expected"];
3->19 [style = solid, label="expected"];
15->19 [style = bold, label=""];
12->9 [style = bold, label=""];
13->11 [style = bold, label=""];
0->7 [style = bold, label=""];
6->18 [style = dashed, label="0"];
3->9 [style = bold, label=""];
3->12 [style = dashed, label="0"];
7->19 [style = dashed, label="0"];
11->14 [style = dashed, label="0"];
10->0 [style = bold, label=""];
17->15 [style = bold, label=""];
10->17 [style = dashed, label="0"];
9->5 [style = bold, label=""];
16->14 [style = bold, label=""];
14->18 [style = bold, label=""];
8->4 [style = bold, label=""];
2->11 [style = bold, label=""];
6->12 [style = bold, label=""];
3->7 [style = solid, label="expected"];
}
