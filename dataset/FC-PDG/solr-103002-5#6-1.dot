digraph {
3 [style = filled, label = "assertTrue(\"flush: \" + meter.getCount(),meter.getCount() > 10)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "System.setProperty(\"solr.tests.metrics.mergeDetails\",\"false\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "System.setProperty(\"solr.tests.metrics.merge\",\"true\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertNotNull(registry)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Meter meter = (Meter)metrics.get(\"INDEX.flush\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "addDocs()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(12,metrics.entrySet().stream().filter(null).count())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(10,metrics.entrySet().stream().filter(null).count())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Map<String,Metric> metrics = registry.getMetrics()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "initCore(\"solrconfig-indexmetrics.xml\",\"schema.xml\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"majorMerge: \" + timer.getCount(),0,timer.getCount())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNull((Meter)metrics.get(\"INDEX.merge.major.docs\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Timer timer = (Timer)metrics.get(\"INDEX.merge.minor\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(0,metrics.entrySet().stream().filter(null).count())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(\"minorMerge: \" + timer.getCount(),timer.getCount() >= 3)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testIndexMetricsNoDetails['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "timer = (Timer)metrics.get(\"INDEX.merge.major\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testIndexNoMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "System.setProperty(\"solr.tests.metrics.merge\",\"false\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testIndexMetricsNoDetails['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "MetricRegistry registry = h.getCoreContainer().getMetricManager().registry(h.getCore().getCoreMetricManager().getRegistryName())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
7->11 [style = bold, label=""];
7->17 [style = bold, label=""];
0->13 [style = bold, label=""];
10->14 [style = bold, label=""];
16->6 [style = bold, label=""];
17->9 [style = bold, label=""];
1->3 [style = bold, label=""];
6->0 [style = bold, label=""];
11->17 [style = dashed, label="0"];
11->9 [style = bold, label=""];
9->8 [style = bold, label=""];
12->7 [style = bold, label=""];
19->0 [style = bold, label=""];
5->6 [style = bold, label=""];
8->2 [style = bold, label=""];
11->18 [style = dashed, label="0"];
14->12 [style = bold, label=""];
2->15 [style = bold, label=""];
6->19 [style = dashed, label="0"];
15->4 [style = bold, label=""];
7->18 [style = bold, label=""];
4->1 [style = bold, label=""];
14->12 [style = solid, label="registry"];
20->19 [style = bold, label=""];
}
