digraph {
7 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,virtualColumns,Granularities.ALL,false,null),ImmutableList.of(\"page\",FACT_TO_REGION_PREFIX + \"regionName\",REGION_TO_COUNTRY_PREFIX + \"countryName\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9710d6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9710dc,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9710e2,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9710e8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9710ee,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9710f4,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9710fa,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971100,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971106,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@97110c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971112,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971118,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@97111e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971124))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new SelectorFilter(\"channel\",\"#en.wikipedia\"),null,ImmutableList.of())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(adapter,originalFilter,true)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Filter originalFilter = new AndFilter(ImmutableList.of(new SelectorFilter(\"v1\",\"virtual-column-#en.wikipedia\")))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),ImmutableList.of(factToRegion(JoinType.LEFT),regionToCountry(JoinType.LEFT)))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.create(ImmutableList.of(new ExpressionVirtualColumn(\"v1\",\"concat('virtual-column-', \"channel\")\",ValueType.STRING,TestExprMacroTable.INSTANCE))),Granularities.ALL,false,null),ImmutableList.of(\"page\",FACT_TO_REGION_PREFIX + \"regionName\",REGION_TO_COUNTRY_PREFIX + \"countryName\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971003,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971009,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@97100f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971015,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@97101b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971021,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971027,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@97102d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971033,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971039,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@97103f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971045,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@97104b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971051))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(adapter,adapter.determineBaseColumnsWithPreAndPostJoinVirtualColumns(virtualColumns,null,null),originalFilter,true)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",FACT_TO_REGION_PREFIX + \"regionName\",REGION_TO_COUNTRY_PREFIX + \"countryName\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@97118c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971192,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971198,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@97119e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9711a4,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9711aa,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9711b0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9711b6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9711bc,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9711c2,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9711c8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9711ce,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9711d4,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9711da))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "VirtualColumns virtualColumns = VirtualColumns.create(ImmutableList.of(new ExpressionVirtualColumn(\"v1\",\"concat('virtual-column-', \"channel\")\",ValueType.STRING,TestExprMacroTable.INSTANCE)))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Filter originalFilter = new SelectorFilter(\"channel\",\"#en.wikipedia\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new SelectorFilter(\"v1\",\"virtual-column-#en.wikipedia\"),null,ImmutableList.of())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(expectedFilterSplit,actualFilterSplit)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->11 [style = solid, label="originalFilter"];
8->0 [style = solid, label="actualFilterSplit"];
0->6 [style = bold, label=""];
9->2 [style = bold, label=""];
2->1 [style = bold, label=""];
2->4 [style = solid, label="adapter"];
14->0 [style = solid, label="expectedFilterSplit"];
6->7 [style = dashed, label="0"];
6->11 [style = dashed, label="0"];
1->3 [style = bold, label=""];
3->0 [style = solid, label="expectedFilterSplit"];
0->11 [style = bold, label=""];
10->3 [style = bold, label=""];
2->8 [style = solid, label="adapter"];
10->8 [style = solid, label="virtualColumns"];
1->7 [style = solid, label="originalFilter"];
3->4 [style = bold, label=""];
2->12 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
8->0 [style = bold, label=""];
1->12 [style = dashed, label="0"];
5->2 [style = bold, label=""];
1->6 [style = solid, label="originalFilter"];
1->4 [style = solid, label="originalFilter"];
3->8 [style = bold, label=""];
12->14 [style = bold, label=""];
13->2 [style = bold, label=""];
4->8 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
12->4 [style = solid, label="originalFilter"];
1->10 [style = bold, label=""];
10->7 [style = solid, label="virtualColumns"];
4->0 [style = solid, label="actualFilterSplit"];
14->4 [style = bold, label=""];
1->8 [style = solid, label="originalFilter"];
}
