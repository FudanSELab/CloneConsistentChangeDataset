digraph {
29 [style = filled, label = "RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,terms.subList(i,i + 1)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "RexNode t = terms.get(i)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "i < terms.size()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "terms.set(i,simplify.simplify(t,unknownAs))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "terms.set(i,simplify.simplify(t,unknownAs))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<RexNode> terms@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RexSimplify simplify = this@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "simplifyOrTerms['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Predicate.of(t) != null@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "doneTerms.set(i)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "simplifyOrTerms['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "i < terms.size()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<RexNode> terms@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "Predicate.of(t) == null@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "terms.set(i,t2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "simplify = simplify.withPredicates(newPredicates)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final RexNode inverse = simplify.simplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NOT_TRUE,t2),RexUnknownAs.UNKNOWN)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "doneTerms.get(i)@@@23@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "RexNode t = terms.get(i)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "RexUnknownAs unknownAs@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "terms.set(i,simplify.simplify(t,unknownAs))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "allowedAsPredicateDuringOrSimplification(t)@@@21@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,ImmutableList.of(inverse)))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final RexNode t2 = simplify.simplify(t,unknownAs)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final RexNode t = terms.get(i)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "RexUnknownAs unknownAs@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final BitSet doneTerms = new BitSet()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "simplifyAndTerms['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "!simplify.allowedAsPredicateDuringOrSimplification(t)@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final RexNode t = terms.get(i)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "List<RexNode> terms@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19->17 [style = solid, label="i"];
16->3 [style = solid, label="simplify"];
7->18 [style = dotted, label="true"];
30->19 [style = dotted, label="true"];
28->16 [style = bold, label=""];
13->1 [style = dotted, label="true"];
27->7 [style = bold, label=""];
18->10 [style = solid, label="t2"];
4->10 [style = solid, label="i"];
10->29 [style = dashed, label="0"];
16->17 [style = solid, label="simplify"];
14->32 [style = solid, label="i"];
7->6 [style = bold, label=""];
0->17 [style = solid, label="i"];
4->7 [style = solid, label="i"];
14->4 [style = solid, label="i"];
10->3 [style = bold, label=""];
12->5 [style = dotted, label="true"];
5->17 [style = bold, label=""];
7->31 [style = dotted, label="true"];
16->34 [style = solid, label="simplify"];
16->23 [style = bold, label=""];
16->18 [style = solid, label="simplify"];
3->8 [style = solid, label="inverse"];
7->0 [style = bold, label=""];
19->20 [style = solid, label="i"];
30->34 [style = dotted, label="true"];
18->33 [style = dashed, label="0"];
20->17 [style = bold, label=""];
32->27 [style = solid, label="t"];
5->12 [style = bold, label=""];
4->22 [style = solid, label="i"];
0->12 [style = solid, label="i"];
33->29 [style = bold, label=""];
4->33 [style = solid, label="i"];
29->31 [style = solid, label="newPredicates"];
14->7 [style = bold, label=""];
27->33 [style = bold, label=""];
11->20 [style = bold, label=""];
28->26 [style = dotted, label="true"];
14->22 [style = solid, label="i"];
7->8 [style = dotted, label="true"];
7->10 [style = dotted, label="true"];
12->11 [style = dotted, label="true"];
14->10 [style = solid, label="i"];
32->33 [style = solid, label="t"];
7->29 [style = dotted, label="true"];
14->7 [style = solid, label="i"];
7->32 [style = bold, label=""];
28->25 [style = dotted, label="true"];
0->12 [style = bold, label=""];
12->19 [style = bold, label=""];
3->8 [style = bold, label=""];
0->34 [style = solid, label="i"];
7->33 [style = dotted, label="true"];
13->15 [style = dotted, label="true"];
14->2 [style = solid, label="i"];
19->12 [style = solid, label="i"];
24->15 [style = dotted, label="true"];
2->32 [style = dashed, label="0"];
7->32 [style = dotted, label="true"];
7->22 [style = dotted, label="true"];
15->26 [style = dashed, label="0"];
20->12 [style = bold, label=""];
6->17 [style = solid, label="simplify"];
7->2 [style = bold, label=""];
7->2 [style = dotted, label="true"];
15->18 [style = solid, label="unknownAs"];
7->4 [style = dotted, label="true"];
4->7 [style = bold, label=""];
6->4 [style = bold, label=""];
14->33 [style = solid, label="i"];
6->18 [style = solid, label="simplify"];
17->19 [style = bold, label=""];
12->19 [style = dotted, label="true"];
6->12 [style = solid, label="i"];
31->33 [style = solid, label="simplify"];
32->27 [style = bold, label=""];
26->34 [style = solid, label="unknownAs"];
8->6 [style = bold, label=""];
7->27 [style = dotted, label="true"];
19->34 [style = bold, label=""];
7->6 [style = dotted, label="true"];
12->34 [style = solid, label="t"];
31->4 [style = bold, label=""];
0->11 [style = solid, label="i"];
2->9 [style = bold, label=""];
18->3 [style = solid, label="t2"];
0->30 [style = solid, label="i"];
13->16 [style = bold, label=""];
24->16 [style = bold, label=""];
6->34 [style = solid, label="i"];
30->12 [style = bold, label=""];
29->31 [style = bold, label=""];
22->18 [style = bold, label=""];
23->14 [style = bold, label=""];
30->0 [style = dotted, label="true"];
0->30 [style = bold, label=""];
0->20 [style = solid, label="i"];
2->18 [style = solid, label="t"];
6->30 [style = bold, label=""];
11->5 [style = bold, label=""];
7->3 [style = dotted, label="true"];
9->18 [style = bold, label=""];
9->22 [style = bold, label=""];
12->19 [style = solid, label="t"];
19->30 [style = bold, label=""];
8->6 [style = solid, label="newPredicates"];
26->33 [style = solid, label="unknownAs"];
4->29 [style = solid, label="i"];
11->12 [style = dashed, label="0"];
0->19 [style = solid, label="i"];
6->3 [style = solid, label="simplify"];
15->17 [style = solid, label="unknownAs"];
24->21 [style = dotted, label="true"];
12->20 [style = dotted, label="true"];
4->32 [style = solid, label="i"];
7->9 [style = dotted, label="true"];
34->0 [style = bold, label=""];
11->17 [style = solid, label="t"];
12->17 [style = dotted, label="true"];
4->2 [style = solid, label="i"];
16->33 [style = solid, label="simplify"];
16->14 [style = bold, label=""];
18->10 [style = bold, label=""];
14->29 [style = solid, label="i"];
12->11 [style = bold, label=""];
11->5 [style = solid, label="t"];
6->0 [style = solid, label="i"];
31->34 [style = solid, label="simplify"];
30->12 [style = dotted, label="true"];
19->11 [style = solid, label="i"];
19->12 [style = bold, label=""];
6->30 [style = solid, label="i"];
9->7 [style = bold, label=""];
}
