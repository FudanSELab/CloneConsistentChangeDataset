digraph {
20 [style = filled, label = "assertThrows(,null)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "snapshot.freeze()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "OffsetAndEpoch id = new OffsetAndEpoch(10L,3)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testAbortedSnapshot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "expected.forEach(null)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(Optional.empty(),context.log.readSnapshot(id))@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testAbortedSnapshot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(Optional.empty(),context.log.readSnapshot(id))@@@12@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "context.pollUntil(null)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "context.advanceLocalLeaderHighWatermarkToLogEndOffset()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "contextBuilder.appendToLog(id.epoch,batch)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "int recordsPerBatch = 3@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "List<List<String>> expected = buildRecords(recordsPerBatch,batches)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "int epoch = context.currentEpoch()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "int batches = 3@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertEquals(id,snapshot.snapshotId())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "RaftClientTestContext.Builder contextBuilder = new RaftClientTestContext.Builder(localId,voters)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "expected.forEach(null)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "List<List<String>> expected = buildRecords(3,3)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testAppendToFrozenSnapshot['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "OffsetAndEpoch id = new OffsetAndEpoch(recordsPerBatch * batches,3)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).build()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RaftClientTestContext context = contextBuilder.build()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
17->10 [style = bold, label=""];
8->16 [style = bold, label=""];
1->4 [style = bold, label=""];
7->11 [style = bold, label=""];
6->18 [style = bold, label=""];
17->8 [style = solid, label="batches"];
10->18 [style = solid, label="id"];
11->12 [style = bold, label=""];
19->10 [style = solid, label="recordsPerBatch"];
4->2 [style = bold, label=""];
19->17 [style = bold, label=""];
4->5 [style = solid, label="id"];
12->6 [style = bold, label=""];
14->7 [style = bold, label=""];
22->4 [style = bold, label=""];
17->10 [style = solid, label="batches"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
21->20 [style = bold, label=""];
10->8 [style = bold, label=""];
19->8 [style = solid, label="recordsPerBatch"];
10->15 [style = solid, label="id"];
18->13 [style = bold, label=""];
9->19 [style = bold, label=""];
16->14 [style = bold, label=""];
3->21 [style = bold, label=""];
13->15 [style = bold, label=""];
}
