digraph {
15 [style = filled, label = "slave.toComputer().isOnline()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(slave.toComputer().isOffline(),equalTo(true))@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(result,succeededSilently())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DumbSlave slave = j.createSlave(\"aNode\",\"\",null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Thread.sleep(100)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "waitNodeOfflineShouldSucceedOnOfflineNode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ).invokeWithArgs(\"aNode\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ).invokeWithArgs(\"aNode\")@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "!slave.toComputer().isOffline()@@@5@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "slave.toComputer().setTemporarilyOffline(true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "slave.toComputer().waitUntilOnline()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "waitNodeOfflineShouldSucceedOnOfflineNode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(slave.toComputer().isOnline(),equalTo(true))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Thread.sleep(100)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "true@@@5@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "waitNodeOnlineShouldSuccessOnOnlineNode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "slave.toComputer().isOffline()@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
4->5 [style = dotted, label="true"];
10->6 [style = solid, label="result"];
1->4 [style = bold, label=""];
16->0 [style = bold, label=""];
0->13 [style = bold, label=""];
4->1 [style = dotted, label="true"];
4->6 [style = bold, label=""];
0->2 [style = bold, label=""];
4->15 [style = bold, label=""];
15->6 [style = bold, label=""];
4->15 [style = dotted, label="true"];
12->9 [style = bold, label=""];
2->4 [style = bold, label=""];
10->6 [style = bold, label=""];
7->3 [style = bold, label=""];
2->12 [style = bold, label=""];
4->12 [style = dashed, label="0"];
7->14 [style = bold, label=""];
8->0 [style = bold, label=""];
5->1 [style = bold, label=""];
12->10 [style = bold, label=""];
11->0 [style = bold, label=""];
5->6 [style = bold, label=""];
2->13 [style = dashed, label="0"];
6->7 [style = solid, label="result"];
9->12 [style = bold, label=""];
3->14 [style = dashed, label="0"];
6->7 [style = bold, label=""];
5->15 [style = dashed, label="0"];
4->5 [style = bold, label=""];
13->4 [style = bold, label=""];
12->9 [style = dotted, label="true"];
15->1 [style = bold, label=""];
}
