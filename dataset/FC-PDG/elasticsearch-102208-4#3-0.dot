digraph {
4 [style = filled, label = "routingTableBuilder.addAsNew(metaData.index(\"target\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ShardRouting shardRouting = TestShardRouting.newShardRouting(\"non-resize\",0,null,true,ShardRoutingState.UNASSIGNED)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String allowedNode = clusterState.getRoutingTable().index(\"source\").shard(sourceShardId).primaryShard().currentNodeId()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int sourceShardId = IndexMetaData.selectSplitShard(shardId,clusterState.metaData().index(\"source\"),4).id()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider(Settings.EMPTY)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ClusterState clusterState = createInitialClusterState(true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testSourcePrimaryActive['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx,shardId),null,true,RecoverySource.LocalShardsRecoverySource.INSTANCE,ShardRoutingState.UNASSIGNED)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Decision.NO,resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node1\"),routingAllocation))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(Decision.ALWAYS,resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node1\"),routingAllocation))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(Decision.YES,resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node2\"),routingAllocation))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testSourcePrimaryActive['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(Decision.ALWAYS,resizeAllocationDecider.canAllocate(shardRouting,routingAllocation))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(\"source primary is allocated on another node\",resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node1\"),routingAllocation).getExplanation())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(Decision.NO,resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node2\"),routingAllocation))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RoutingAllocation routingAllocation = new RoutingAllocation(null,clusterState.getRoutingNodes(),clusterState,null,0)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\"source primary is active\",resizeAllocationDecider.canAllocate(shardRouting,routingAllocation).getExplanation())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(Decision.YES,resizeAllocationDecider.canAllocate(shardRouting,routingAllocation))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"source primary is allocated on this node\",resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node1\"),routingAllocation).getExplanation())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"source primary is allocated on this node\",resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node2\"),routingAllocation).getExplanation())@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "RoutingAllocation routingAllocation = new RoutingAllocation(null,null,clusterState,null,0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "RoutingTable.Builder routingTableBuilder = RoutingTable.builder(clusterState.routingTable())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "metaBuilder.put(IndexMetaData.builder(\"target\").settings(settings(Version.CURRENT).put(IndexMetaData.INDEX_RESIZE_SOURCE_NAME.getKey(),\"source\").put(IndexMetaData.INDEX_RESIZE_SOURCE_UUID_KEY,IndexMetaData.INDEX_UUID_NA_VALUE)).numberOfShards(4).numberOfReplicas(0))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "\"node1\".equals(allowedNode)@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(\"source primary is allocated on another node\",resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node2\"),routingAllocation).getExplanation())@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "MetaData.Builder metaBuilder = MetaData.builder(clusterState.metaData())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int shardId = randomIntBetween(0,3)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Decision.YES,resizeAllocationDecider.canAllocate(shardRouting,clusterState.getRoutingNodes().node(\"node1\"),routingAllocation))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx,shardId),null,true,ShardRoutingState.UNASSIGNED,RecoverySource.LocalShardsRecoverySource.INSTANCE)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "MetaData metaData = metaBuilder.build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "routingAllocation.debugDecision(true)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testNonResizeRouting['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "clusterState = ClusterState.builder(clusterState).routingTable(routingTableBuilder.build()).metaData(metaData).build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Index idx = clusterState.metaData().index(\"target\").getIndex()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "\"node1\".equals(allowedNode)@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11->20 [style = bold, label=""];
5->2 [style = solid, label="shardRouting"];
4->14 [style = bold, label=""];
23->5 [style = solid, label="shardId"];
20->13 [style = bold, label=""];
16->11 [style = bold, label=""];
23->27 [style = bold, label=""];
25->22 [style = bold, label=""];
5->9 [style = bold, label=""];
17->6 [style = bold, label=""];
1->7 [style = dotted, label="false"];
0->19 [style = bold, label=""];
15->21 [style = bold, label=""];
17->6 [style = solid, label="allowedNode"];
6->18 [style = bold, label=""];
2->3 [style = bold, label=""];
26->1 [style = bold, label=""];
29->9 [style = bold, label=""];
28->11 [style = bold, label=""];
18->15 [style = bold, label=""];
33->31 [style = solid, label="routingAllocation"];
6->15 [style = dotted, label="false"];
5->18 [style = solid, label="shardRouting"];
1->24 [style = dotted, label="true"];
9->17 [style = bold, label=""];
29->9 [style = solid, label="shardRouting"];
5->29 [style = dashed, label="0"];
12->24 [style = bold, label=""];
13->3 [style = solid, label="routingAllocation"];
29->18 [style = solid, label="shardRouting"];
10->7 [style = bold, label=""];
5->3 [style = solid, label="shardRouting"];
20->33 [style = bold, label=""];
31->34 [style = bold, label=""];
11->33 [style = solid, label="clusterState"];
6->2 [style = bold, label=""];
8->29 [style = solid, label="idx"];
14->13 [style = solid, label="clusterState"];
21->26 [style = bold, label=""];
6->18 [style = dotted, label="false"];
13->18 [style = solid, label="routingAllocation"];
1->10 [style = dotted, label="false"];
6->2 [style = dotted, label="true"];
8->20 [style = bold, label=""];
22->0 [style = bold, label=""];
13->2 [style = solid, label="routingAllocation"];
30->31 [style = bold, label=""];
13->15 [style = solid, label="routingAllocation"];
5->15 [style = solid, label="shardRouting"];
13->9 [style = solid, label="routingAllocation"];
1->12 [style = dotted, label="true"];
30->31 [style = solid, label="shardRouting"];
29->3 [style = solid, label="shardRouting"];
13->23 [style = bold, label=""];
1->12 [style = bold, label=""];
33->30 [style = bold, label=""];
5->9 [style = solid, label="shardRouting"];
23->29 [style = solid, label="shardId"];
8->5 [style = solid, label="idx"];
3->21 [style = bold, label=""];
17->1 [style = solid, label="allowedNode"];
13->33 [style = dashed, label="0"];
14->8 [style = bold, label=""];
30->34 [style = solid, label="shardRouting"];
19->4 [style = bold, label=""];
33->34 [style = solid, label="routingAllocation"];
27->5 [style = bold, label=""];
27->29 [style = bold, label=""];
6->3 [style = dotted, label="true"];
1->10 [style = bold, label=""];
32->11 [style = bold, label=""];
11->25 [style = bold, label=""];
29->15 [style = solid, label="shardRouting"];
29->2 [style = solid, label="shardRouting"];
}
