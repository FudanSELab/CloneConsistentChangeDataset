digraph {
30 [style = filled, label = "i += 1@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "actual.sort(Comparator.comparing(null))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"entries\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"entries_test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TestHelpers.assertEqualsSafe(entriesTable.schema().asStruct(),expected.get(i),actual.get(i))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testAllDataFilesTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i < expected.size()@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(\"Entries table should have 3 rows\",3,expected.size())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.builderFor(SCHEMA).identity(\"id\").build())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"all_entries\")).orderBy(\"snapshot_id\").collectAsList()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "df2.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"files_test\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"all_data_files\")).orderBy(\"file_path\").collectAsList()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(\"Actual results should have 3 rows\",3,actual.size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "testAllEntriesTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "GenericData.Record file = (GenericData.Record)record.get(\"data_file\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "df1.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Dataset<Row> df2 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(2,\"b\")),)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expected.add(file)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testAllDataFilesTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "i < expected.size()@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "TestHelpers.assertEqualsSafe(filesTable.schema().asStruct(),expected.get(i),actual.get(i))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Dataset<Row> df2 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"b\")),)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "(Integer)record.get(\"status\") < 2@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int i = 0@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.unpartitioned())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "table.newDelete().deleteFromRowFilter(Expressions.equal(\"id\",1)).commit()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Dataset<Row> df1 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"a\")),)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "file.put(0,FileContent.DATA.id())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "rows.forEach(null)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Files table should have two rows\",2,expected.size())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "table.refresh()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(\"Actual results should have two rows\",2,actual.size())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Table filesTable = loadTable(tableIdentifier,\"all_data_files\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i += 1@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"all_entries\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->11 [style = solid, label="tableIdentifier"];
12->7 [style = bold, label=""];
28->3 [style = bold, label=""];
27->14 [style = bold, label=""];
5->3 [style = solid, label="tableIdentifier"];
6->24 [style = solid, label="i"];
11->22 [style = bold, label=""];
5->9 [style = solid, label="tableIdentifier"];
18->15 [style = dotted, label="true"];
23->6 [style = dotted, label="true"];
30->1 [style = solid, label="i"];
0->31 [style = dashed, label="0"];
33->31 [style = bold, label=""];
14->16 [style = bold, label=""];
29->25 [style = solid, label="tableIdentifier"];
17->21 [style = bold, label=""];
23->24 [style = bold, label=""];
19->5 [style = bold, label=""];
36->29 [style = bold, label=""];
29->31 [style = solid, label="tableIdentifier"];
16->18 [style = bold, label=""];
39->35 [style = bold, label=""];
21->16 [style = bold, label=""];
20->4 [style = bold, label=""];
22->27 [style = bold, label=""];
15->17 [style = bold, label=""];
38->37 [style = bold, label=""];
32->39 [style = bold, label=""];
9->33 [style = dashed, label="0"];
23->24 [style = dotted, label="true"];
9->0 [style = bold, label=""];
22->20 [style = bold, label=""];
5->9 [style = bold, label=""];
1->23 [style = bold, label=""];
16->38 [style = bold, label=""];
37->32 [style = bold, label=""];
35->1 [style = dotted, label="true"];
1->24 [style = solid, label="i"];
21->10 [style = bold, label=""];
29->28 [style = solid, label="tableIdentifier"];
2->8 [style = bold, label=""];
25->11 [style = bold, label=""];
10->12 [style = bold, label=""];
35->1 [style = bold, label=""];
5->2 [style = solid, label="tableIdentifier"];
18->17 [style = dotted, label="true"];
18->21 [style = dotted, label="true"];
26->5 [style = bold, label=""];
21->18 [style = bold, label=""];
15->21 [style = solid, label="file"];
18->10 [style = bold, label=""];
16->14 [style = bold, label=""];
8->28 [style = bold, label=""];
3->25 [style = bold, label=""];
18->16 [style = bold, label=""];
29->33 [style = solid, label="tableIdentifier"];
8->13 [style = bold, label=""];
30->35 [style = solid, label="i"];
39->35 [style = solid, label="i"];
1->30 [style = bold, label=""];
4->14 [style = bold, label=""];
13->8 [style = dashed, label="0"];
13->3 [style = bold, label=""];
24->1 [style = dashed, label="0"];
35->30 [style = dotted, label="true"];
34->8 [style = bold, label=""];
30->35 [style = bold, label=""];
7->1 [style = bold, label=""];
6->23 [style = solid, label="i"];
1->23 [style = solid, label="i"];
0->2 [style = bold, label=""];
24->6 [style = bold, label=""];
6->23 [style = bold, label=""];
12->32 [style = dashed, label="0"];
5->0 [style = solid, label="tableIdentifier"];
29->33 [style = bold, label=""];
39->1 [style = solid, label="i"];
31->34 [style = bold, label=""];
5->29 [style = dashed, label="0"];
20->22 [style = dashed, label="0"];
18->15 [style = bold, label=""];
}
