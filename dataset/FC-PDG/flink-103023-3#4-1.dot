digraph {
4 [style = filled, label = "testDisablingSortingInputsWithoutBatchStateBackendOneInputTransformation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "DataStreamSink<Integer> sink = process.addSink(new DiscardingSink<>())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "StreamGraphGenerator graphGenerator = new StreamGraphGenerator(Collections.singletonList(sink.getTransformation()),env.getConfig(),env.getCheckpointConfig(),configuration)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DataStreamSource<Integer> elements2 = env.fromElements(1,2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testDisablingSortingInputsWithoutBatchStateBackendTwoInputTransformation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Configuration configuration = new Configuration()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "configuration.set(ExecutionOptions.SORT_INPUTS,false)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "DataStreamSource<Integer> elements1 = env.fromElements(1,2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "graphGenerator.setRuntimeExecutionMode(RuntimeExecutionMode.BATCH)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SingleOutputStreamOperator<Integer> process = env.fromElements(1,2).keyBy(null).process(DUMMY_PROCESS_FUNCTION)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DataStreamSink<Integer> sink = process.addSink(new DiscardingSink<>())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expectedException.expect()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Configuration configuration = new Configuration()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "getStreamGraphInBatchMode(sink,configuration)@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testDisablingSortingInputsWithoutBatchStateBackendOneInputTransformation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectedException.expectMessage(\"Batch state backend requires the sorted inputs to be enabled!\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "graphGenerator.generate()@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "SingleOutputStreamOperator<Integer> process = elements1.connect(elements2).keyBy(null,null).process(DUMMY_KEYED_CO_PROCESS_FUNCTION)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
7->13 [style = bold, label=""];
5->10 [style = bold, label=""];
0->6 [style = bold, label=""];
0->11 [style = bold, label=""];
1->11 [style = solid, label="configuration"];
15->16 [style = bold, label=""];
12->7 [style = bold, label=""];
4->7 [style = bold, label=""];
6->15 [style = bold, label=""];
3->0 [style = bold, label=""];
1->10 [style = solid, label="configuration"];
8->1 [style = bold, label=""];
10->3 [style = solid, label="configuration"];
13->17 [style = bold, label=""];
17->14 [style = bold, label=""];
7->2 [style = bold, label=""];
9->3 [style = bold, label=""];
10->9 [style = bold, label=""];
8->11 [style = solid, label="sink"];
18->7 [style = bold, label=""];
2->8 [style = bold, label=""];
14->5 [style = bold, label=""];
}
