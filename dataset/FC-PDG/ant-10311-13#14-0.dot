digraph {
8 [style = filled, label = "assertNotNull(\"Support for \" + name + \" in IntrospectionHelperTest?\",expect)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testGetAttributes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"Return type of \" + name,expect,ih.getElementType(name))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNotNull(\"Support for \" + name + \" in IntrospectionHelperTest?\",expect)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testGetNestedElements['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "elemMap.remove(name)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(\"Found all\",attrMap.isEmpty())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "attrMap.remove(name)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"Type of \" + name,expect,ih.getAttributeType(name))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertNotNull(\"Support for \" + name + \" in IntrospectioNHelperTest?\",expect)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Map<String,Class<?>> attrMap = getExpectedAttributes()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Class<?> expect = elemMap.get(name)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Class<?> expect = attrMap.get(name)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "attrMap.remove(\"name\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(\"Found all\",elemMap.isEmpty())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Map<String,Class<?>> elemMap = getExpectedNestedElements()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testGetNestedElements['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13->10 [style = bold, label=""];
5->8 [style = bold, label=""];
10->15 [style = solid, label="expect"];
2->5 [style = bold, label=""];
16->11 [style = bold, label=""];
10->15 [style = bold, label=""];
0->6 [style = bold, label=""];
1->15 [style = dashed, label="0"];
5->8 [style = solid, label="expect"];
8->3 [style = bold, label=""];
1->3 [style = bold, label=""];
5->3 [style = solid, label="expect"];
4->2 [style = bold, label=""];
13->16 [style = bold, label=""];
10->9 [style = solid, label="expect"];
3->0 [style = bold, label=""];
5->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
12->10 [style = bold, label=""];
5->1 [style = solid, label="expect"];
5->10 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
15->9 [style = bold, label=""];
7->2 [style = bold, label=""];
14->12 [style = bold, label=""];
0->13 [style = dashed, label="0"];
1->8 [style = dashed, label="0"];
0->5 [style = bold, label=""];
9->13 [style = bold, label=""];
}
