digraph {
4 [style = filled, label = "assertNotNull(inventory.getProducts())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNotNull(inventory)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sampleInventory_shouldBeSetUpWith3Books['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final boolean inInteraction = interactionService.isInInteraction()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(\"Sample Book\",product.getName())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assertions.assertThat(inInteraction).isTrue()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "val inventories = repositoryService.allInstances()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "setUp()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(1,inventories.size())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "val inventories = repositoryService.allInstances()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "sampleInventoryShouldBeSetUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(0,repositoryService.allInstances().size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "val inventory = inventories.get(0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cleanUp()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(1,inventory.getProducts().size())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "val product = inventory.getProducts().iterator().next()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "setUp3Books(repositoryService)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sampleInventory_shouldBeSetUpWith3Books['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertEquals(1,inventories.size())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
4->14 [style = dashed, label="0"];
9->11 [style = bold, label=""];
8->0 [style = bold, label=""];
10->9 [style = bold, label=""];
11->6 [style = bold, label=""];
3->7 [style = bold, label=""];
6->8 [style = bold, label=""];
1->6 [style = bold, label=""];
3->7 [style = solid, label="inventory"];
7->13 [style = dashed, label="0"];
12->16 [style = bold, label=""];
2->3 [style = bold, label=""];
7->4 [style = bold, label=""];
4->13 [style = bold, label=""];
16->17 [style = bold, label=""];
18->12 [style = bold, label=""];
0->5 [style = bold, label=""];
13->14 [style = bold, label=""];
14->15 [style = bold, label=""];
5->2 [style = solid, label="inventory"];
17->5 [style = bold, label=""];
}
