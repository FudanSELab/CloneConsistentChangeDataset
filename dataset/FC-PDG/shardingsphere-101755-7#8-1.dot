digraph {
3 [style = filled, label = "assertNotNull(actual)@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem),true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0,10)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "OwnerSegment owner = new OwnerSegment(0,10,new IdentifierValue(\"name\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ProjectionsSegment projectionsSegment = new ProjectionsSegment(0,0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "OrderByItem orderByItem = new OrderByItem(new ExpressionOrderByItemSegment(0,1,\"\",OrderDirection.ASC))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ProjectionsContext actual = new ProjectionsContextEngine(schema).createProjectionsContext(tables,projectionsSegment,new GroupByContext(Collections.emptyList()),orderByContext)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "ProjectionsContext actual = new ProjectionsContextEngine(schema).createProjectionsContext(tables,projectionsSegment,new GroupByContext(Collections.emptyList(),0),orderByContext)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "selectStatement.setFrom(new SimpleTableSegment(0,0,new IdentifierValue(\"name\")))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "selectStatement.setProjections(projectionsSegment)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(schema,new LinkedList<>(),selectStatement)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shorthandProjectionSegment.setOwner(owner)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertCreateProjectionsContextWithoutIndexOrderByItemSegment['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0,0,new IdentifierValue(\"name\")),OrderDirection.ASC))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertCreateProjectionsContextWithoutIndexOrderByItemSegment['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17->2 [style = solid, label="selectStatement"];
0->3 [style = bold, label=""];
14->3 [style = bold, label=""];
4->11 [style = solid, label="projectionsSegment"];
2->1 [style = bold, label=""];
8->14 [style = solid, label="orderByContext"];
8->0 [style = solid, label="orderByContext"];
0->3 [style = solid, label="actual"];
16->17 [style = dotted, label="true"];
6->7 [style = solid, label="owner"];
1->14 [style = solid, label="tables"];
15->10 [style = dotted, label="true"];
5->18 [style = bold, label=""];
12->8 [style = solid, label="orderByItem"];
1->0 [style = bold, label=""];
11->19 [style = bold, label=""];
11->9 [style = bold, label=""];
13->10 [style = dotted, label="true"];
9->6 [style = bold, label=""];
0->14 [style = dashed, label="0"];
7->5 [style = bold, label=""];
18->8 [style = solid, label="orderByItem"];
10->2 [style = solid, label="selectStatement"];
5->12 [style = bold, label=""];
8->2 [style = bold, label=""];
19->9 [style = bold, label=""];
12->8 [style = bold, label=""];
4->0 [style = solid, label="projectionsSegment"];
15->4 [style = bold, label=""];
10->17 [style = dashed, label="0"];
9->5 [style = solid, label="shorthandProjectionSegment"];
12->18 [style = dashed, label="0"];
1->14 [style = bold, label=""];
18->8 [style = bold, label=""];
16->4 [style = bold, label=""];
6->7 [style = bold, label=""];
4->11 [style = bold, label=""];
14->3 [style = solid, label="actual"];
1->0 [style = solid, label="tables"];
4->14 [style = solid, label="projectionsSegment"];
13->4 [style = bold, label=""];
}
