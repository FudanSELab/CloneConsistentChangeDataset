digraph {
16 [style = filled, label = "m2.update(0,0,11.0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(m1.equals(m2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "m1 = new MatrixSeries<>(\"Test 2\",10,3)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertFalse(m1.equals(m2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "m1 = new MatrixSeries(\"Test 2\",8,3)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(m1,m2)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "m2 = new MatrixSeries<>(\"Test 2\",10,5)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "m1.update(0,0,11.0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "CategoryMarker m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(1.1f))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "MatrixSeries<String> m1 = new MatrixSeries<>(\"Test\",8,3)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertTrue(m1.equals(m2))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "m2.update(7,2,22.0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "m2 = new MatrixSeries<>(\"Test 2\",8,3)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertFalse(m1.equals(m2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "m1 = new MatrixSeries(\"Test 2\",10,5)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "m1 = new MatrixSeries<>(\"Test 2\",10,5)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertTrue(m2.equals(m1))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "m1.update(7,2,22.0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "MatrixSeries m1 = new MatrixSeries(\"Test\",8,3)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "m2.update(0,0,99)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(m1.equals(m2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "MatrixSeries<String> m2 = new MatrixSeries<>(\"Test\",8,3)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "m1 = new MatrixSeries<>(\"Test 2\",8,3)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "m2 = new MatrixSeries(\"Test 2\",10,3)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "CategoryMarker m2 = TestUtils.serialised(m1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "m1.update(0,0,99)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "m1 = new MatrixSeries(\"Test 2\",10,3)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertFalse(m1.equals(m2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "m2 = new MatrixSeries(\"Test 2\",10,5)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "MatrixSeries m2 = new MatrixSeries(\"Test\",8,3)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertTrue(m1.equals(m2))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "m2 = new MatrixSeries<>(\"Test 2\",10,3)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertFalse(m1.equals(m2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(m1.equals(m2))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "m2 = new MatrixSeries(\"Test 2\",8,3)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9->22 [style = bold, label=""];
5->3 [style = bold, label=""];
4->20 [style = solid, label="m2"];
26->22 [style = solid, label="m2"];
33->3 [style = bold, label=""];
24->21 [style = solid, label="m1"];
34->35 [style = solid, label="m2"];
3->25 [style = bold, label=""];
10->24 [style = bold, label=""];
30->20 [style = solid, label="m2"];
0->32 [style = dashed, label="0"];
25->18 [style = bold, label=""];
23->26 [style = bold, label=""];
2->27 [style = dashed, label="0"];
1->29 [style = dashed, label="0"];
18->30 [style = bold, label=""];
37->35 [style = solid, label="m1"];
32->14 [style = bold, label=""];
28->13 [style = bold, label=""];
22->32 [style = bold, label=""];
2->23 [style = solid, label="m2"];
24->13 [style = bold, label=""];
4->8 [style = solid, label="m2"];
33->3 [style = solid, label="m2"];
20->6 [style = bold, label=""];
29->23 [style = bold, label=""];
27->16 [style = bold, label=""];
9->22 [style = solid, label="m2"];
5->18 [style = solid, label="m2"];
33->18 [style = solid, label="m2"];
13->11 [style = bold, label=""];
17->25 [style = dashed, label="0"];
11->2 [style = bold, label=""];
4->7 [style = bold, label=""];
1->23 [style = bold, label=""];
26->22 [style = bold, label=""];
14->33 [style = bold, label=""];
30->7 [style = solid, label="m2"];
24->28 [style = dashed, label="0"];
2->16 [style = bold, label=""];
9->14 [style = solid, label="m2"];
37->34 [style = solid, label="m1"];
4->30 [style = dashed, label="0"];
0->14 [style = bold, label=""];
2->19 [style = solid, label="m2"];
5->3 [style = solid, label="m2"];
21->29 [style = bold, label=""];
24->37 [style = dashed, label="0"];
22->0 [style = bold, label=""];
18->4 [style = bold, label=""];
30->8 [style = solid, label="m2"];
15->20 [style = bold, label=""];
30->7 [style = bold, label=""];
37->34 [style = bold, label=""];
21->1 [style = bold, label=""];
6->8 [style = bold, label=""];
9->26 [style = dashed, label="0"];
5->33 [style = dashed, label="0"];
11->27 [style = bold, label=""];
27->19 [style = solid, label="m2"];
3->17 [style = bold, label=""];
7->15 [style = bold, label=""];
27->23 [style = solid, label="m2"];
4->7 [style = solid, label="m2"];
26->14 [style = solid, label="m2"];
36->37 [style = bold, label=""];
31->28 [style = bold, label=""];
34->35 [style = bold, label=""];
28->21 [style = solid, label="m1"];
12->19 [style = bold, label=""];
23->9 [style = bold, label=""];
16->12 [style = bold, label=""];
17->18 [style = bold, label=""];
14->5 [style = bold, label=""];
19->21 [style = bold, label=""];
}
