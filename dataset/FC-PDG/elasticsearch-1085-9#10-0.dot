digraph {
31 [style = filled, label = "databaseRegistry.checkDatabases(state)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "task = new PersistentTask<>(task,new GeoIpTaskState(Map.of(\"GeoIP2-City.mmdb\",new GeoIpTaskState.Metadata(10L,5,14,md5))))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"database (GeoIP2-City.mmdb( was not updated for 30 days and is disabled\",e.getMessage())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "ClusterState state = ClusterState.builder(new ClusterName(\"name\")).metadata(Metadata.builder().putCustom(TYPE,tasksCustomMetadata).build()).nodes(new DiscoveryNodes.Builder().add(new DiscoveryNode(\"_id1\",buildNewFakeTransportAddress(),Version.CURRENT)).localNodeId(\"_id1\")).routingTable(createIndexRoutingTable()).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(files.collect(Collectors.toList()),hasSize(1))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(databaseRegistry.getDatabase(\"GeoIP2-City.mmdb\",false),nullValue())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "state = ClusterState.builder(new ClusterName(\"name\")).metadata(Metadata.builder().putCustom(TYPE,tasksCustomMetadata).build()).nodes(new DiscoveryNodes.Builder().add(new DiscoveryNode(\"_id1\",buildNewFakeTransportAddress(),Version.CURRENT)).localNodeId(\"_id1\")).routingTable(createIndexRoutingTable()).build()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "task = new PersistentTask<>(task,new GeoIpTaskState(Map.of(\"GeoIP2-City.mmdb\",new GeoIpTaskState.Metadata(10,5,14,md5,10))))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "PersistentTask<?> task = new PersistentTask<>(taskId,GeoIpDownloader.GEOIP_DOWNLOADER,new GeoIpTaskParams(),1,null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "expectThrows(,null)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "task = new PersistentTask<>(task,new GeoIpTaskState(Map.of(\"GeoIP2-City.mmdb\",new GeoIpTaskState.Metadata(System.currentTimeMillis(),5,14,md5))))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "IllegalStateException e = expectThrows(,null)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testCheckDatabases_dontCheckDatabaseWhenGeoIpDownloadTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(database,notNullValue())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "tasksCustomMetadata = new PersistentTasksCustomMetadata(1L,Map.of(taskId,task))@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "verify(client,never()).search(any())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "verify(client,times(0)).search(any())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(0,files.count())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "mockSearches(\"GeoIP2-City.mmdb\",0,9)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "PersistentTasksCustomMetadata tasksCustomMetadata = new PersistentTasksCustomMetadata(0L,Map.of())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DatabaseReaderLazyLoader database = databaseRegistry.getDatabase(\"GeoIP2-City.mmdb\",false)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectThrows(,null)@@@24@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testCheckDatabases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(files.collect(Collectors.toList()),empty())@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(database,nullValue())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertThat(databaseRegistry.getDatabase(\"GeoIP2-City.mmdb\",false),nullValue())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(database,notNullValue())@@@22@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "testCheckDatabases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "databaseRegistry.checkDatabases(state)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "database = databaseRegistry.getDatabase(\"GeoIP2-City.mmdb\",false)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "PersistentTasksCustomMetadata tasksCustomMetadata = new PersistentTasksCustomMetadata(1L,Map.of(taskId,task))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "task = new PersistentTask<>(task,new GeoIpTaskState(Map.of(\"GeoIP2-City.mmdb\",new GeoIpTaskState.Metadata(10,5,14,md5,System.currentTimeMillis()))))@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "verify(client,times(10)).search(any())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "String taskId = GeoIpDownloader.GEOIP_DOWNLOADER@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String md5 = mockSearches(\"GeoIP2-City.mmdb\",5,14)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verify(client,times(10)).search(any())@@@23@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->33 [style = dashed, label="0"];
11->16 [style = bold, label=""];
16->22 [style = solid, label="md5"];
4->3 [style = bold, label=""];
1->2 [style = solid, label="database"];
18->4 [style = solid, label="task"];
21->0 [style = solid, label="state"];
33->3 [style = bold, label=""];
21->0 [style = bold, label=""];
1->25 [style = solid, label="database"];
22->23 [style = solid, label="task"];
17->18 [style = solid, label="task"];
28->22 [style = bold, label=""];
13->20 [style = dashed, label="0"];
27->22 [style = solid, label="task"];
18->27 [style = dashed, label="0"];
12->17 [style = bold, label=""];
35->32 [style = bold, label=""];
16->19 [style = solid, label="md5"];
14->19 [style = bold, label=""];
9->20 [style = bold, label=""];
8->6 [style = bold, label=""];
30->34 [style = bold, label=""];
34->31 [style = bold, label=""];
18->19 [style = solid, label="task"];
16->27 [style = solid, label="md5"];
20->1 [style = bold, label=""];
5->14 [style = bold, label=""];
12->4 [style = solid, label="taskId"];
2->10 [style = bold, label=""];
32->30 [style = bold, label=""];
12->0 [style = solid, label="taskId"];
22->23 [style = bold, label=""];
30->31 [style = solid, label="state"];
0->15 [style = bold, label=""];
16->18 [style = solid, label="md5"];
15->8 [style = solid, label="state"];
19->0 [style = bold, label=""];
6->29 [style = bold, label=""];
27->4 [style = solid, label="task"];
9->34 [style = dashed, label="0"];
3->9 [style = bold, label=""];
24->16 [style = bold, label=""];
19->0 [style = solid, label="task"];
27->4 [style = bold, label=""];
3->20 [style = bold, label=""];
10->26 [style = dashed, label="0"];
18->4 [style = bold, label=""];
10->13 [style = bold, label=""];
23->21 [style = bold, label=""];
31->33 [style = bold, label=""];
25->26 [style = bold, label=""];
17->27 [style = solid, label="task"];
2->25 [style = dashed, label="0"];
13->5 [style = bold, label=""];
1->2 [style = bold, label=""];
15->8 [style = solid, label="database"];
26->28 [style = bold, label=""];
17->27 [style = bold, label=""];
6->7 [style = bold, label=""];
12->23 [style = solid, label="taskId"];
16->12 [style = bold, label=""];
1->25 [style = bold, label=""];
15->8 [style = bold, label=""];
17->18 [style = bold, label=""];
12->17 [style = solid, label="taskId"];
3->20 [style = solid, label="state"];
}
