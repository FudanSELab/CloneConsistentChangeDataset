digraph {
14 [style = filled, label = "final SqlOperatorTable opTable = operatorTableFor(SqlLibrary.POSTGRESQL)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "wholeExpr(\"TO_DATE('2000-01-01')\").withOperatorTable(postgresTable).fails(\"Invalid number of arguments to function 'TO_DATE'. \" + \"Was expecting 2 arguments\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "wholeExpr(\"translate('abc', 'ab')\").withOperatorTable(oracleTable).fails(\"Invalid number of arguments to function 'TRANSLATE3'. \" + \"Was expecting 3 arguments\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "wholeExpr(\"TO_DATE(2000, 'YYYY')\").withOperatorTable(postgresTable).withTypeCoercion(false).fails(\"Cannot apply 'TO_DATE' to arguments of type \" + \"'TO_DATE\(<INTEGER>, <CHAR\(4\)>\)'\. \" + \"Supported form\(s\): 'TO_DATE\(<STRING>, <STRING>\)'\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "testTranslate3['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "expr(\"TO_DATE(2000, 'YYYY')\").withOperatorTable(postgresTable).columnType(\"DATE NOT NULL\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "wholeExpr(\"TO_DATE(2000, 'YYYY')\").withOperatorTable(opTable).withTypeCoercion(false).fails(\"Cannot apply 'TO_DATE' to arguments of type \" + \"'TO_DATE\(<INTEGER>, <CHAR\(4\)>\)'\. \" + \"Supported form\(s\): 'TO_DATE\(<STRING>, <STRING>\)'\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "expr(\"TO_DATE('2000-01-01', 'YYYY-MM-DD')\").withOperatorTable(postgresTable).columnType(\"DATE NOT NULL\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "wholeExpr(\"TO_DATE('2000-01-01', 'YYYY-MM-DD', 'YYYY-MM-DD')\").withOperatorTable(opTable).fails(\"Invalid number of arguments to function 'TO_DATE'. \" + \"Was expecting 2 arguments\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "expr(\"TO_DATE(2000, 'YYYY')\").withOperatorTable(opTable).columnType(\"DATE NOT NULL\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "wholeExpr(\"translate('abc', 'ab', '+-', 'four')\").withOperatorTable(oracleTable).fails(\"Invalid number of arguments to function 'TRANSLATE3'. \" + \"Was expecting 3 arguments\")@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "wholeExpr(\"translate('abc', 'ab', 123)\").withOperatorTable(oracleTable).withTypeCoercion(false).fails(\"(?s)Cannot apply 'TRANSLATE3' to arguments of type \" + \"'TRANSLATE3\(<CHAR\(3\)>, <CHAR\(2\)>, <INTEGER>\)'\. .*\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testToDateFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "wholeExpr(\"TO_DATE('2000-01-01', 'YYYY-MM-DD')\").fails(\"No match found for function signature \" + \"TO_DATE\(<CHARACTER>, <CHARACTER>\)\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final SqlOperatorTable postgresTable = SqlLibraryOperatorTableFactory.INSTANCE.getOperatorTable(SqlLibrary.STANDARD,SqlLibrary.POSTGRESQL)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expr(\"TO_DATE('2000-01-01', 'YYYY-MM-DD')\").withOperatorTable(opTable).columnType(\"DATE NOT NULL\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testToDateFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "wholeExpr(\"TO_DATE('2000-01-01', 'YYYY-MM-DD', 'YYYY-MM-DD')\").withOperatorTable(postgresTable).fails(\"Invalid number of arguments to function 'TO_DATE'. \" + \"Was expecting 2 arguments\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "final SqlOperatorTable oracleTable = SqlLibraryOperatorTableFactory.INSTANCE.getOperatorTable(SqlLibrary.STANDARD,SqlLibrary.ORACLE)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "expr(\"translate('abc', 'ab', 123)\").withOperatorTable(oracleTable).columnType(\"VARCHAR(3) NOT NULL\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "wholeExpr(\"translate('aabbcc', 'ab', '+-')\").fails(\"No match found for function signature \" + \"TRANSLATE3\(<CHARACTER>, <CHARACTER>, <CHARACTER>\)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "wholeExpr(\"TO_DATE('2000-01-01')\").withOperatorTable(opTable).fails(\"Invalid number of arguments to function 'TO_DATE'. \" + \"Was expecting 2 arguments\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "expr(\"translate('aabbcc', 'ab', '+-')\").withOperatorTable(oracleTable).columnType(\"VARCHAR(6) NOT NULL\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
9->11 [style = bold, label=""];
7->18 [style = dashed, label="0"];
21->15 [style = bold, label=""];
6->9 [style = dashed, label="0"];
1->19 [style = dashed, label="0"];
0->16 [style = dashed, label="0"];
7->11 [style = dashed, label="0"];
7->0 [style = bold, label=""];
5->14 [style = bold, label=""];
3->13 [style = dashed, label="0"];
6->22 [style = dashed, label="0"];
0->10 [style = dashed, label="0"];
4->12 [style = dashed, label="0"];
5->20 [style = dashed, label="0"];
12->13 [style = bold, label=""];
5->1 [style = bold, label=""];
22->18 [style = bold, label=""];
1->6 [style = bold, label=""];
8->5 [style = bold, label=""];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
10->12 [style = bold, label=""];
16->21 [style = bold, label=""];
3->15 [style = dashed, label="0"];
14->9 [style = bold, label=""];
6->7 [style = bold, label=""];
20->19 [style = bold, label=""];
19->22 [style = bold, label=""];
2->5 [style = bold, label=""];
17->20 [style = bold, label=""];
18->16 [style = bold, label=""];
}
