digraph {
0 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "context.assertElectedLeader(epoch,otherNodeId)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "FetchResponseData response = context.outOfRangeFetchRecordsResponse(epoch,otherNodeId,2L,lastEpoch,1L)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testInitializeAsFollowerNonEmptyLog['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).withElectedLeader(epoch,otherNodeId).appendToLog(0L,lastEpoch,singletonList(\"foo\")).build()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).withElectedLeader(epoch,otherNodeId).updateLog(null).build()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "context.client.poll()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int epoch = 5@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "context.client.poll()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "context.pollUntilSend()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "int correlationId = context.assertSentFetchRequest(epoch,3L,lastEpoch)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "context.assertSentFetchRequest(epoch,2L,lastEpoch)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int localId = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testInitializeAsFollowerNonEmptyLog['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "context.assertElectedLeader(epoch,otherNodeId)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int otherNodeId = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "context.pollUntilSend()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "context.assertElectedLeader(epoch,otherNodeId)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "context.deliverResponse(correlationId,otherNodeId,response)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(2L,context.log.endOffset().offset)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(3L,context.log.endOffset().offset)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "context.assertSentFetchRequest(epoch,1L,lastEpoch)@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "int lastEpoch = 3@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testFollowerLogReconciliation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9->22 [style = bold, label=""];
2->17 [style = bold, label=""];
7->10 [style = solid, label="epoch"];
7->18 [style = solid, label="epoch"];
8->13 [style = solid, label="otherNodeId"];
22->2 [style = bold, label=""];
5->18 [style = solid, label="lastEpoch"];
21->6 [style = bold, label=""];
5->19 [style = solid, label="lastEpoch"];
9->2 [style = bold, label=""];
4->6 [style = bold, label=""];
0->12 [style = bold, label=""];
11->6 [style = bold, label=""];
5->17 [style = solid, label="lastEpoch"];
23->15 [style = bold, label=""];
1->3 [style = bold, label=""];
14->10 [style = bold, label=""];
7->2 [style = solid, label="epoch"];
8->0 [style = solid, label="otherNodeId"];
15->16 [style = bold, label=""];
2->17 [style = dashed, label="0"];
17->19 [style = bold, label=""];
7->17 [style = solid, label="epoch"];
1->9 [style = bold, label=""];
8->7 [style = bold, label=""];
6->0 [style = solid, label="localId"];
19->23 [style = solid, label="response"];
3->9 [style = bold, label=""];
20->18 [style = bold, label=""];
12->13 [style = bold, label=""];
5->2 [style = solid, label="lastEpoch"];
7->9 [style = solid, label="epoch"];
1->12 [style = dashed, label="0"];
7->5 [style = bold, label=""];
8->3 [style = solid, label="otherNodeId"];
5->10 [style = solid, label="lastEpoch"];
5->0 [style = bold, label=""];
0->1 [style = bold, label=""];
19->23 [style = bold, label=""];
6->8 [style = bold, label=""];
7->3 [style = solid, label="epoch"];
7->13 [style = solid, label="epoch"];
8->9 [style = solid, label="otherNodeId"];
7->19 [style = solid, label="epoch"];
17->23 [style = solid, label="correlationId"];
8->19 [style = solid, label="otherNodeId"];
16->20 [style = bold, label=""];
13->14 [style = bold, label=""];
8->23 [style = solid, label="otherNodeId"];
}
