digraph {
48 [style = filled, label = "nextFromFlinkSort = sortedData.next(nextFromFlinkSort)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "MutableObjectIterator<StringValue> sortedData = sorter.getIterator()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int retCode = p.waitFor()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "File input = null@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{if (p != null) {p.destroy()}}@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "p = Runtime.getRuntime().exec(command)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "retCode != 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "IOManager ioMan = new IOManagerAsync()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "input = generateFileWithStrings(300000,\"http://some-uri.com/that/is/a/common/prefix/to/all\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Process p = null@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "e.printStackTrace()@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertNotNull(nextFromFlinkSort)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "System.err.println(e.getMessage())@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "BufferedReader reader = null@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "MutableObjectIterator<String> sortedData = sorter.getIterator()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "MemoryManager mm = new MemoryManager(1024 * 1024,1)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "(nextVerify = verifyReader.readLine()) != null@@@41@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Exception e@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "sorter = new UnilateralSortMerger<StringValue>(mm,ioMan,inputIterator,new DummyInvokable(),new RuntimeSerializerFactory<StringValue>(serializer,),comparator,1.0,4,0.8f)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertEquals(nextVerify,nextFromFlinkSort.getValue())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "StringValue nextFromFlinkSort = new StringValue()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "UnilateralSortMerger<StringValue> sorter = null@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TypeComparator<String> comparator = new StringComparator(true)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String nextFromStratoSort = sortedData.next(\"\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "{if (input != null) {input.delete()}if (sorted != null) {sorted.delete()}}@@@64@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "TypeSerializer<StringValue> serializer = new CopyableValueSerializer<StringValue>()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "sorter = new UnilateralSortMerger<String>(mm,ioMan,inputIterator,new DummyInvokable(),new RuntimeSerializerFactory<String>(serializer,),comparator,1.0,4,0.8f,false)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "p = null@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "{if (reader != null) {reader.close()}if (verifyReader != null) {verifyReader.close()}if (sorter != null) {sorter.close()}}@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "UnilateralSortMerger<String> sorter = null@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "throw new Exception(\"Command failed with return code \" + retCode)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Exception e@@@59@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "sorter = new UnilateralSortMerger<String>(mm,ioMan,inputIterator,new DummyInvokable(),new RuntimeSerializerFactory<String>(serializer,),comparator,1.0,4,0.8f)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "reader.close()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testStringSorting['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "{if (reader != null) {reader.close()}if (verifyReader != null) {verifyReader.close()}if (sorter != null) {sorter.close()}}@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertEquals(next,nextFromStratoSort)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "{if (input != null) {input.delete()}if (sorted != null) {sorted.delete()}}@@@63@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testStringValueSorting['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "String next@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "TypeSerializer<String> serializer = StringSerializer.INSTANCE@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "MutableObjectIterator<String> inputIterator = new StringReaderMutableObjectIterator(reader)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "reader = new BufferedReader(new FileReader(input))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String(( command = {\"/bin/bash\",\"-c\",\"export LC_ALL=\"C\" && cat \"\" + input.getAbsolutePath() + \"\" | sort > \"\" + sorted.getAbsolutePath() + \"\"\"}@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "TypeComparator<StringValue> comparator = new CopyableValueComparator<StringValue>(true,)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "sorted = File.createTempFile(\"sorted_strings\",\"txt\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "String nextVerify@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "MutableObjectIterator<StringValue> inputIterator = new StringValueReaderMutableObjectIterator(reader)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testStringSorting['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "verifyReader = new BufferedReader(new FileReader(sorted))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "(next = verifyReader.readLine()) != null@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertNotNull(nextFromStratoSort)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "File sorted = null@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.fail(e.getMessage())@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "BufferedReader verifyReader = null@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->35 [style = bold, label=""];
25->1 [style = bold, label=""];
27->47 [style = dotted, label="true"];
34->20 [style = bold, label=""];
20->9 [style = bold, label=""];
15->21 [style = bold, label=""];
27->33 [style = dotted, label="true"];
0->44 [style = dashed, label="0"];
23->0 [style = solid, label="inputIterator"];
4->15 [style = bold, label=""];
8->17 [style = solid, label="sorted"];
21->8 [style = bold, label=""];
21->17 [style = solid, label="input"];
43->44 [style = solid, label="comparator"];
10->17 [style = bold, label=""];
19->36 [style = bold, label=""];
42->48 [style = bold, label=""];
7->31 [style = bold, label=""];
2->38 [style = solid, label="comparator"];
9->7 [style = bold, label=""];
0->38 [style = dashed, label="0"];
1->13 [style = bold, label=""];
35->23 [style = bold, label=""];
39->44 [style = solid, label="serializer"];
43->35 [style = bold, label=""];
20->31 [style = dotted, label="true"];
42->48 [style = dotted, label="true"];
35->45 [style = bold, label=""];
21->50 [style = solid, label="input"];
38->26 [style = bold, label=""];
32->4 [style = bold, label=""];
27->33 [style = bold, label=""];
31->20 [style = bold, label=""];
5->12 [style = solid, label="command"];
13->14 [style = bold, label=""];
11->25 [style = bold, label=""];
25->1 [style = solid, label="p"];
29->47 [style = bold, label=""];
46->42 [style = bold, label=""];
22->25 [style = bold, label=""];
48->49 [style = bold, label=""];
28->30 [style = bold, label=""];
45->44 [style = solid, label="inputIterator"];
3->39 [style = dashed, label="0"];
8->50 [style = solid, label="sorted"];
7->48 [style = dashed, label="0"];
20->31 [style = solid, label="next"];
28->38 [style = solid, label="mm"];
52->19 [style = bold, label=""];
34->40 [style = dashed, label="0"];
33->29 [style = bold, label=""];
2->43 [style = dashed, label="0"];
28->0 [style = solid, label="mm"];
3->2 [style = bold, label=""];
2->0 [style = solid, label="comparator"];
27->29 [style = dotted, label="true"];
44->54 [style = solid, label="sorter"];
49->41 [style = bold, label=""];
21->35 [style = solid, label="input"];
28->44 [style = solid, label="mm"];
31->49 [style = dashed, label="0"];
22->11 [style = bold, label=""];
3->0 [style = solid, label="serializer"];
14->6 [style = bold, label=""];
18->27 [style = dotted, label="true"];
36->10 [style = solid, label="verifyReader"];
18->29 [style = dotted, label="true"];
36->54 [style = solid, label="verifyReader"];
24->12 [style = bold, label=""];
29->17 [style = bold, label=""];
36->40 [style = bold, label=""];
9->7 [style = solid, label="nextFromStratoSort"];
51->4 [style = bold, label=""];
20->9 [style = dotted, label="true"];
0->10 [style = solid, label="sorter"];
8->36 [style = solid, label="sorted"];
38->10 [style = solid, label="sorter"];
18->33 [style = dotted, label="true"];
9->31 [style = solid, label="nextFromStratoSort"];
35->10 [style = solid, label="reader"];
20->7 [style = dotted, label="true"];
26->19 [style = bold, label=""];
23->0 [style = bold, label=""];
45->44 [style = bold, label=""];
47->50 [style = bold, label=""];
42->41 [style = dotted, label="true"];
53->14 [style = bold, label=""];
42->49 [style = dotted, label="true"];
30->3 [style = bold, label=""];
48->49 [style = solid, label="nextFromFlinkSort"];
13->53 [style = dashed, label="0"];
5->24 [style = bold, label=""];
3->38 [style = solid, label="serializer"];
46->48 [style = solid, label="nextFromFlinkSort"];
42->41 [style = solid, label="nextVerify"];
36->34 [style = bold, label=""];
30->0 [style = solid, label="ioMan"];
23->38 [style = solid, label="inputIterator"];
35->54 [style = solid, label="reader"];
16->22 [style = solid, label="retCode"];
0->26 [style = bold, label=""];
30->38 [style = solid, label="ioMan"];
39->43 [style = bold, label=""];
35->23 [style = solid, label="reader"];
23->45 [style = dashed, label="0"];
22->11 [style = dotted, label="true"];
12->16 [style = bold, label=""];
16->22 [style = bold, label=""];
37->4 [style = bold, label=""];
20->10 [style = bold, label=""];
40->46 [style = bold, label=""];
54->50 [style = bold, label=""];
8->5 [style = bold, label=""];
18->27 [style = bold, label=""];
23->38 [style = bold, label=""];
44->52 [style = bold, label=""];
30->39 [style = bold, label=""];
26->52 [style = dashed, label="0"];
35->45 [style = solid, label="reader"];
42->54 [style = bold, label=""];
30->44 [style = solid, label="ioMan"];
1->53 [style = bold, label=""];
20->9 [style = solid, label="next"];
16->11 [style = solid, label="retCode"];
6->28 [style = bold, label=""];
41->42 [style = bold, label=""];
}
