digraph {
1 [style = filled, label = "clearAllCaches['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Cache b = mockCache(\"b\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "clearCache['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "verify(b,never()).clear()@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "endpoint.clearCaches()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(a).clear()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Cache a = mockCache(\"a\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "clearAllCaches['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertThat(endpoint.clearCache(\"a\",null)).isTrue()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CachesEndpoint endpoint = new CachesEndpoint(Collections.singletonMap(\"test\",cacheManager(a,b)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "verify(b).clear()@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
3->10 [style = bold, label=""];
3->5 [style = bold, label=""];
7->0 [style = bold, label=""];
6->8 [style = dashed, label="0"];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
9->0 [style = bold, label=""];
5->10 [style = dashed, label="0"];
0->4 [style = bold, label=""];
4->2 [style = solid, label="b"];
2->6 [style = bold, label=""];
2->8 [style = bold, label=""];
8->3 [style = bold, label=""];
0->2 [style = solid, label="a"];
}
