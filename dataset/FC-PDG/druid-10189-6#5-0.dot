digraph {
4 [style = filled, label = "final String data = NOT_PARSEABLE@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "InputRowListPlusJson rowPlusRaw = target.nextRowWithRaw()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "InputRowListPlusRawValues rowPlusRaw = target.nextRowWithRaw()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assert.assertNull(rowPlusRaw.getParseException())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expected.put(\"value\",TIMESTAMP_0)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Assert.assertNull(rowPlusRaw.getInputRows())@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(expected,raw)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertRowValue(VALUE_0,row)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Map<String,Object> expected = new HashMap<>()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Assert.assertNotNull(rowPlusRaw.getParseException())@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "InlineFirehose target = create(data)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertNull(row)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testNextRowWithRawParseable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "expected.put(\"timestamp\",VALUE_0)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "byte(( raw = rowPlusRaw.getRaw()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,Object> raw = rowPlusRaw.getRawValues()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertRawValue(data,raw)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testNextRowWithRawNotParseable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final String data = PARSEABLE@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "InputRow row = rowPlusRaw.getInputRow()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testNextRowWithRawNotParseable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Assert.assertNotNull(rowPlusRaw.getParseException())@@@10@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->1 [style = solid, label="data"];
10->12 [style = solid, label="expected"];
3->20 [style = dashed, label="0"];
5->8 [style = bold, label=""];
4->0 [style = solid, label="data"];
11->12 [style = bold, label=""];
6->4 [style = bold, label=""];
18->2 [style = bold, label=""];
5->14 [style = dashed, label="0"];
8->18 [style = dashed, label="0"];
10->17 [style = bold, label=""];
19->1 [style = bold, label=""];
19->0 [style = solid, label="data"];
15->4 [style = bold, label=""];
14->9 [style = bold, label=""];
0->3 [style = bold, label=""];
2->0 [style = solid, label="raw"];
19->1 [style = solid, label="data"];
5->18 [style = solid, label="row"];
4->1 [style = bold, label=""];
12->13 [style = bold, label=""];
5->8 [style = solid, label="row"];
0->20 [style = bold, label=""];
8->2 [style = bold, label=""];
21->19 [style = bold, label=""];
16->14 [style = bold, label=""];
5->18 [style = bold, label=""];
17->11 [style = bold, label=""];
7->5 [style = bold, label=""];
7->16 [style = dashed, label="0"];
2->0 [style = bold, label=""];
1->7 [style = bold, label=""];
4->19 [style = dashed, label="0"];
1->16 [style = bold, label=""];
9->10 [style = bold, label=""];
9->12 [style = solid, label="raw"];
}
