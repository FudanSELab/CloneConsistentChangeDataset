digraph {
30 [style = filled, label = "result.getConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableNameClause().tableName()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "result.getColumnDefinitions().add((ColumnDefinitionSegment)each)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "CreateDefinitionSegment each@@@8@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "result.getAddColumnDefinitions().add((AddColumnDefinitionSegment)each)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return result@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final CreateTableContext ctx@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final AlterTableContext ctx@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "visitAlterTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "PostgreSQLCreateTableStatement result = new PostgreSQLCreateTableStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableName()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "each instanceof DropColumnDefinitionSegment@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "visitCreateTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "result.setNotExisted(null != ctx.tableNotExistClause())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "result.setRenameTable(new SimpleTableSegment(identifier.start.getStartIndex(),identifier.stop.getStopIndex(),(IdentifierValue)visit(identifier)))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "visitAlterTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "((CollectionValue<AlterDefinitionSegment>)visit(ctx.alterDefinitionClause())).getValue()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "createDefinitions.getValue()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "PostgreSQLAlterTableStatement result = new PostgreSQLAlterTableStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return result@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "IdentifierContext identifier = ctx.alterDefinitionClause().renameTableSpecification().identifier()@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "((CollectionValue<AlterDefinitionSegment>)visit(ctx.alterDefinitionClause())).getValue()@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "result.getDropColumnDefinitions().add((DropColumnDefinitionSegment)each)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "AlterDefinitionSegment each@@@6@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "result.getModifyColumnDefinitions().add((ModifyColumnDefinitionSegment)each)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "null != ctx.alterDefinitionClause().renameTableSpecification()@@@20@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "null != ctx.alterDefinitionClause()@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "each instanceof AddColumnDefinitionSegment@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "null != ctx.createDefinitionClause()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "CollectionValue<CreateDefinitionSegment> createDefinitions = (CollectionValue<CreateDefinitionSegment>)visit(ctx.createDefinitionClause())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "result.getAddConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "each instanceof ModifyColumnDefinitionSegment@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "each instanceof ColumnDefinitionSegment@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25->30 [style = dotted, label="true"];
14->5 [style = bold, label=""];
4->14 [style = dotted, label="false"];
10->32 [style = dashed, label="0"];
6->18 [style = bold, label=""];
11->4 [style = bold, label=""];
30->26 [style = bold, label=""];
19->20 [style = solid, label="identifier"];
13->7 [style = bold, label=""];
0->4 [style = bold, label=""];
11->12 [style = bold, label=""];
33->31 [style = bold, label=""];
6->4 [style = bold, label=""];
8->12 [style = bold, label=""];
11->2 [style = dotted, label="true"];
8->4 [style = bold, label=""];
14->5 [style = dotted, label="true"];
22->28 [style = dotted, label="true"];
0->28 [style = dashed, label="0"];
7->10 [style = bold, label=""];
9->21 [style = dashed, label="0"];
19->20 [style = bold, label=""];
25->26 [style = bold, label=""];
31->33 [style = dotted, label="true"];
7->12 [style = solid, label="result"];
10->11 [style = bold, label=""];
14->15 [style = dotted, label="false"];
24->21 [style = dotted, label="true"];
13->9 [style = dotted, label="true"];
3->18 [style = bold, label=""];
4->0 [style = dotted, label="true"];
6->8 [style = bold, label=""];
11->17 [style = dotted, label="true"];
15->6 [style = bold, label=""];
5->4 [style = bold, label=""];
30->31 [style = bold, label=""];
22->27 [style = dotted, label="true"];
23->31 [style = bold, label=""];
8->18 [style = bold, label=""];
8->30 [style = dashed, label="0"];
18->20 [style = dotted, label="true"];
6->8 [style = dotted, label="true"];
22->26 [style = bold, label=""];
29->32 [style = bold, label=""];
0->12 [style = bold, label=""];
29->26 [style = solid, label="result"];
3->12 [style = bold, label=""];
18->19 [style = bold, label=""];
11->1 [style = dotted, label="true"];
16->9 [style = dotted, label="true"];
22->23 [style = dotted, label="true"];
31->25 [style = dotted, label="false"];
4->23 [style = dashed, label="0"];
15->6 [style = dotted, label="false"];
22->31 [style = dotted, label="true"];
11->18 [style = dotted, label="true"];
18->19 [style = dotted, label="true"];
6->12 [style = bold, label=""];
5->18 [style = bold, label=""];
15->3 [style = bold, label=""];
4->14 [style = bold, label=""];
25->31 [style = bold, label=""];
16->7 [style = bold, label=""];
11->4 [style = dotted, label="true"];
5->12 [style = bold, label=""];
32->34 [style = bold, label=""];
18->12 [style = bold, label=""];
22->23 [style = bold, label=""];
34->22 [style = bold, label=""];
31->25 [style = bold, label=""];
24->29 [style = bold, label=""];
31->33 [style = bold, label=""];
11->34 [style = dashed, label="0"];
14->15 [style = bold, label=""];
25->30 [style = bold, label=""];
0->18 [style = bold, label=""];
3->4 [style = bold, label=""];
20->12 [style = bold, label=""];
4->0 [style = bold, label=""];
7->29 [style = dashed, label="0"];
33->26 [style = bold, label=""];
15->3 [style = dotted, label="true"];
}
