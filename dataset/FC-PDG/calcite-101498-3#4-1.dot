digraph {
9 [style = filled, label = "checkDateRange(f,f.and(f.le(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(11)),f.eq(f.exDayTs,f.literal(2))),is(\"AND(<($9, 2011-01-01 00:00:00), =(EXTRACT(FLAG(MONTH), $9), 11),\" + \" =(EXTRACT(FLAG(DAY), $9), 2))\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testExtractRewriteForInvalidMonthComparison['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testExtractRewriteForInvalidMonthComparison['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "checkDateRange(f,f.and(f.eq(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(14))),is(\"AND(AND(>=($9, 2010-01-01 00:00:00), <($9, 2011-01-01 00:00:00)),\" + \" false)\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Fixture2 f = new Fixture2()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "checkDateRange(f,f.and(f.ge(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(11)),f.eq(f.exDayTs,f.literal(2))),is(\"AND(>=($9, 2010-01-01 00:00:00), =(EXTRACT(FLAG(MONTH), $9), 11),\" + \" =(EXTRACT(FLAG(DAY), $9), 2))\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "checkDateRange(f,f.and(f.eq(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(12))),is(\"AND(AND(>=($9, 2010-01-01 00:00:00), <($9, 2011-01-01 00:00:00)),\" + \" AND(>=($9, 2010-12-01 00:00:00), <($9, 2011-01-01 00:00:00)))\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkDateRange(f,f.and(f.eq(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(1))),is(\"AND(AND(>=($9, 2010-01-01 00:00:00), <($9, 2011-01-01 00:00:00)),\" + \" AND(>=($9, 2010-01-01 00:00:00), <($9, 2010-02-01 00:00:00)))\"))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testUnboundYearExtractRewrite['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "checkDateRange(f,f.and(f.eq(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(0))),is(\"AND(AND(>=($9, 2010-01-01 00:00:00), <($9, 2011-01-01 00:00:00)),\" + \" false)\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "checkDateRange(f,f.and(f.eq(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(13))),is(\"AND(AND(>=($9, 2010-01-01 00:00:00), <($9, 2011-01-01 00:00:00)),\" + \" false)\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "checkDateRange(f,f.and(f.le(f.exYearTs,f.literal(2010)),f.ge(f.exYearTs,f.literal(2010)),f.eq(f.exMonthTs,f.literal(5))),is(\"AND(<($9, 2011-01-01 00:00:00), AND(>=($9, 2010-01-01 00:00:00),\" + \" <($9, 2011-01-01 00:00:00)), AND(>=($9, 2010-05-01 00:00:00),\" + \" <($9, 2010-06-01 00:00:00)))\"))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3->2 [style = solid, label="f"];
3->6 [style = solid, label="f"];
4->3 [style = bold, label=""];
8->10 [style = bold, label=""];
6->8 [style = dashed, label="0"];
3->0 [style = solid, label="f"];
3->8 [style = solid, label="f"];
5->9 [style = dashed, label="0"];
1->10 [style = dashed, label="0"];
9->8 [style = bold, label=""];
7->3 [style = bold, label=""];
3->9 [style = bold, label=""];
6->1 [style = bold, label=""];
3->1 [style = solid, label="f"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
3->10 [style = solid, label="f"];
5->6 [style = bold, label=""];
11->3 [style = bold, label=""];
3->5 [style = solid, label="f"];
1->2 [style = bold, label=""];
3->9 [style = solid, label="f"];
}
