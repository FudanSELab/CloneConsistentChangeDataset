digraph {
8 [style = filled, label = "groupingExprs.remove(0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ArrayList<Expr> groupingExprs = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "AnalysisException execption@@@15@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "GroupByClause groupByClause = new GroupByClause(Expr.cloneList(groupingExprs),GroupByClause.GroupingType.GROUP_BY)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "AnalysisException exception@@@15@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(groupByClause.getGroupingExprs(),groupingExprs)@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(\"`testdb`.`t`.`k2`, `testdb`.`t`.`k2`, `testdb`.`t`.`k3`, `testdb`.`t`.`k1`\",groupByClause.toSql())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "groupingExprs.add(expr)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testGroupBy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testGroupBy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "groupByClause.analyze(analyzer)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(false)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String(( cols = {\"k2\",\"k2\",\"k3\",\"k1\"}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testReset['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(3,groupByClause.getGroupingExprs().size())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "groupByClause.reset()@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Expr expr = new SlotRef(new TableName(\"testdb\",\"t\"),col)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
2->1 [style = bold, label=""];
16->6 [style = bold, label=""];
6->10 [style = solid, label="groupingExprs"];
7->4 [style = solid, label="expr"];
0->15 [style = dashed, label="0"];
5->15 [style = bold, label=""];
13->5 [style = dotted, label="true"];
1->0 [style = bold, label=""];
7->4 [style = bold, label=""];
9->7 [style = bold, label=""];
3->13 [style = dashed, label="0"];
12->6 [style = bold, label=""];
4->7 [style = bold, label=""];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
3->5 [style = dotted, label="true"];
2->15 [style = bold, label=""];
0->8 [style = bold, label=""];
13->5 [style = bold, label=""];
6->11 [style = solid, label="groupingExprs"];
10->2 [style = bold, label=""];
6->9 [style = bold, label=""];
8->11 [style = bold, label=""];
14->6 [style = bold, label=""];
}
