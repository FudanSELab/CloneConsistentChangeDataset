digraph {
33 [style = filled, label = "assert(p.getProperty(\"numWorkers\").equals(\"2\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(\"hello4\",rs.getString(1))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "providedProperties.put(\"collection\",\"collection1\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "providedProperties.put(\"collection\",COLLECTIONORALIAS)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertEquals(\"hello0\",rs.getString(\"a_s\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(18,rs.getDouble(\"sum(a_f)\"),0)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assert(p.getProperty(\"testKey2\").equals(\"\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(rs.next())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(18,rs.getDouble(\"sum(a_f)\"),0)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(rs.next())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(\"hello3\",rs.getString(1))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(18,rs.getDouble(2),0)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "providedProperties.put(\"testKey2\",\"\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testJDBCPropertiesParameters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(\"hello4\",rs.getString(\"a_s\"))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(\"hello0\",rs.getString(1))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "testConnectionParams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(11,rs.getDouble(2),0)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(26,rs.getDouble(\"sum(a_f)\"),0)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(18,rs.getDouble(2),0)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testJDBCPropertiesParameters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(11,rs.getDouble(\"sum(a_f)\"),0)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(11,rs.getDouble(2),0)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertFalse(rs.next())@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(26,rs.getDouble(2),0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assert(p.getProperty(\"testKey1\").equals(\"testValue\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assert(p.getProperty(\"aggregationMode\").equals(\"map_reduce\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Properties p = ((ConnectionImpl)con).getProperties()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"hello3\",rs.getString(\"a_s\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(rs.next())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "providedProperties.put(\"username\",\"\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Properties providedProperties = new Properties()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "providedProperties.put(\"testKey1\",\"testValue\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(11,rs.getDouble(\"sum(a_f)\"),0)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assert(p.getProperty(\"username\").equals(\"\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "providedProperties.put(\"password\",\"\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assert(p.getProperty(\"password\").equals(\"\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"hello4\",rs.getString(\"a_s\"))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFalse(rs.next())@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"hello4\",rs.getString(1))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertTrue(rs.next())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->28 [style = bold, label=""];
23->20 [style = bold, label=""];
15->28 [style = dashed, label="0"];
17->34 [style = dashed, label="0"];
21->6 [style = bold, label=""];
22->19 [style = bold, label=""];
26->5 [style = bold, label=""];
0->27 [style = bold, label=""];
18->11 [style = bold, label=""];
34->33 [style = bold, label=""];
35->39 [style = bold, label=""];
31->36 [style = bold, label=""];
9->17 [style = bold, label=""];
28->26 [style = bold, label=""];
20->14 [style = bold, label=""];
4->2 [style = bold, label=""];
32->34 [style = bold, label=""];
38->31 [style = bold, label=""];
1->7 [style = bold, label=""];
3->0 [style = bold, label=""];
11->15 [style = bold, label=""];
15->26 [style = bold, label=""];
2->13 [style = bold, label=""];
37->9 [style = bold, label=""];
39->30 [style = bold, label=""];
5->21 [style = bold, label=""];
8->1 [style = bold, label=""];
30->19 [style = bold, label=""];
27->4 [style = bold, label=""];
7->24 [style = bold, label=""];
29->11 [style = bold, label=""];
24->25 [style = bold, label=""];
13->23 [style = bold, label=""];
40->32 [style = bold, label=""];
25->10 [style = bold, label=""];
14->8 [style = bold, label=""];
16->33 [style = dashed, label="0"];
6->9 [style = bold, label=""];
36->35 [style = bold, label=""];
33->37 [style = bold, label=""];
9->38 [style = bold, label=""];
16->12 [style = bold, label=""];
19->3 [style = bold, label=""];
12->22 [style = bold, label=""];
17->16 [style = bold, label=""];
}
