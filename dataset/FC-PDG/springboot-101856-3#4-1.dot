digraph {
5 [style = filled, label = "contextWhenHasAddConversionServiceFalseUsesRegularConversionService['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "headlessFalse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TestSpringApplication application = new TestSpringApplication()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(this.context.getBeanFactory().getConversionService()).isNull()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SpringApplication application = new SpringApplication()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "application.setWebApplicationType(WebApplicationType.NONE)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(System.getProperty(\"java.awt.headless\")).isEqualTo(\"false\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "contextWhenHasAddConversionServiceFalseUsesRegularConversionService['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "application.setHeadless(false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "application.setAddConversionService(false)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(this.context.getEnvironment().getConversionService()).isNotInstanceOf()@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this.context = application.run()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
5->2 [style = bold, label=""];
10->9 [style = bold, label=""];
11->0 [style = bold, label=""];
1->6 [style = bold, label=""];
3->11 [style = dashed, label="0"];
4->11 [style = bold, label=""];
2->9 [style = dashed, label="0"];
2->4 [style = bold, label=""];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
3->0 [style = bold, label=""];
9->4 [style = bold, label=""];
0->8 [style = bold, label=""];
}
