digraph {
6 [style = filled, label = "mutateRepaired(sstable,repairID)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertFalse(repairedContains(sstable))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(pendingContains(repairID,sstable))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "Assert.assertNotNull(pendingContains(repairID,sstable))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "sstableDeleted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertTrue(sstable.isPendingRepair())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertSame(,compactionTask.getClass())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertTrue(unrepairedContains(sstable))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertFalse(repairedContains(sstable))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertEquals(ActiveRepairService.UNREPAIRED_SSTABLE,sstable.getSSTableMetadata().repairedAt)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "sstableDeleted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "csm.getForPendingRepair(repairID).forEach(null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertFalse(unrepairedContains(sstable))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertFalse(sstable.isRepaired())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertFalse(pendingContains(repairID,sstable))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(pendingContains(sstable))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "csm.getForPendingRepair(repairID).forEach(null)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "cfs.getCompactionStrategyManager().enable()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertFalse(sstable.isPendingRepair())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertFalse(sstable.isRepaired())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "SSTableDeletingNotification notification = new SSTableDeletingNotification(sstable)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "mutateRepaired(sstable,repairID,false)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "SSTableReader sstable = makeSSTable(true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "LocalSessionAccessor.prepareUnsafe(repairID,COORDINATOR,PARTICIPANTS)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "csm.handleNotification(notification,cfs.getTracker())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertNotNull(compactionTask)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "cleanupCompactionFailed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertFalse(pendingContains(sstable))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "UUID repairID = registerSession(cfs,true,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "LocalSessionAccessor.failUnsafe(repairID)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "csm.handleNotification(new SSTableAddedNotification(Collections.singleton(sstable),null),cfs.getTracker())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "AbstractCompactionTask compactionTask = csm.getNextBackgroundTask(FBUtilities.nowInSeconds())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "compactionTask.execute(null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->11 [style = solid, label="sstable"];
8->6 [style = solid, label="repairID"];
5->0 [style = solid, label="notification"];
29->17 [style = bold, label=""];
0->13 [style = bold, label=""];
11->14 [style = bold, label=""];
10->19 [style = solid, label="sstable"];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
12->11 [style = bold, label=""];
18->19 [style = bold, label=""];
8->9 [style = solid, label="repairID"];
8->12 [style = solid, label="repairID"];
8->19 [style = solid, label="repairID"];
31->18 [style = bold, label=""];
9->10 [style = bold, label=""];
16->22 [style = bold, label=""];
7->8 [style = bold, label=""];
20->25 [style = bold, label=""];
10->6 [style = bold, label=""];
10->4 [style = solid, label="sstable"];
24->16 [style = solid, label="compactionTask"];
8->31 [style = solid, label="repairID"];
21->28 [style = bold, label=""];
8->4 [style = solid, label="repairID"];
28->32 [style = bold, label=""];
6->12 [style = dashed, label="0"];
10->3 [style = solid, label="sstable"];
23->29 [style = bold, label=""];
1->13 [style = dashed, label="0"];
11->31 [style = bold, label=""];
24->16 [style = bold, label=""];
26->27 [style = bold, label=""];
17->24 [style = bold, label=""];
10->2 [style = solid, label="sstable"];
5->0 [style = bold, label=""];
22->20 [style = bold, label=""];
10->12 [style = bold, label=""];
10->14 [style = solid, label="sstable"];
0->1 [style = bold, label=""];
10->26 [style = solid, label="sstable"];
6->11 [style = bold, label=""];
19->23 [style = bold, label=""];
2->29 [style = dashed, label="0"];
25->26 [style = bold, label=""];
8->9 [style = bold, label=""];
13->2 [style = bold, label=""];
10->13 [style = solid, label="sstable"];
4->14 [style = dashed, label="0"];
1->2 [style = bold, label=""];
10->12 [style = solid, label="sstable"];
10->25 [style = solid, label="sstable"];
30->8 [style = bold, label=""];
10->5 [style = solid, label="sstable"];
10->1 [style = solid, label="sstable"];
8->1 [style = solid, label="repairID"];
27->21 [style = bold, label=""];
1->23 [style = dashed, label="0"];
10->6 [style = solid, label="sstable"];
4->5 [style = bold, label=""];
15->8 [style = bold, label=""];
14->5 [style = bold, label=""];
}
