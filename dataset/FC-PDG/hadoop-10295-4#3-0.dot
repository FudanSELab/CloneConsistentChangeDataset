digraph {
7 [style = filled, label = "ApplicationAttemptId attemptId = ApplicationAttemptId.newInstance(appId,1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(fs).delete(stagingJobPath,true)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "appMaster.init(conf)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testDeletionofStagingOnReboot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "when(fs.exists(stagingDir)).thenReturn(true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "fs = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testDeletionofStagingOnReboot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ContainerAllocator mockAlloc = mock()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "appMaster.shutDownJob()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testNoDeletionofStagingOnReboot['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "MRAppMaster appMaster = new TestMRApp(attemptId,mockAlloc,JobStateInternal.REBOOT,MRJobConfig.DEFAULT_MR_AM_MAX_ATTEMPTS)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "MRAppMaster appMaster = new TestMRApp(attemptId,mockAlloc,JobStateInternal.REBOOT,1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(MRJobConfig.DEFAULT_MR_AM_MAX_ATTEMPTS > 1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "appMaster.init(conf)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ApplicationId appId = ApplicationId.newInstance(System.currentTimeMillis(),0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String user = UserGroupInformation.getCurrentUser().getShortUserName()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Path stagingDir = MRApps.getStagingAreaDir(conf,user)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "appMaster.start()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "conf.set(MRJobConfig.MAPREDUCE_JOB_DIR,stagingJobDir)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(false,((TestMRApp)appMaster).getTestIsLastAMRetry())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(((TestMRApp)appMaster).getTestIsLastAMRetry())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "when(fs.delete(any(),anyBoolean())).thenReturn(true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "verify(fs,times(0)).delete(stagingJobPath,true)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0->19 [style = dashed, label="0"];
22->19 [style = bold, label=""];
8->16 [style = dashed, label="0"];
21->14 [style = bold, label=""];
18->20 [style = bold, label=""];
8->0 [style = bold, label=""];
3->2 [style = bold, label=""];
2->7 [style = bold, label=""];
7->20 [style = solid, label="attemptId"];
1->12 [style = bold, label=""];
2->7 [style = solid, label="appId"];
16->0 [style = bold, label=""];
1->18 [style = bold, label=""];
17->14 [style = bold, label=""];
11->16 [style = bold, label=""];
12->10 [style = bold, label=""];
13->11 [style = bold, label=""];
20->13 [style = bold, label=""];
10->13 [style = bold, label=""];
1->12 [style = solid, label="mockAlloc"];
11->8 [style = bold, label=""];
8->22 [style = bold, label=""];
6->3 [style = bold, label=""];
15->5 [style = bold, label=""];
9->14 [style = bold, label=""];
5->6 [style = solid, label="user"];
7->1 [style = bold, label=""];
7->12 [style = solid, label="attemptId"];
14->4 [style = bold, label=""];
4->15 [style = bold, label=""];
1->20 [style = solid, label="mockAlloc"];
5->6 [style = bold, label=""];
8->22 [style = dashed, label="0"];
}
