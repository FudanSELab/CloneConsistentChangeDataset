digraph {
59 [style = filled, label = "int index@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "index >= limit@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return incompleteStateFor(byte1,byte2,byte3)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int byte3 = 0@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return incompleteStateFor(byte1,byte2,byte3)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "byte1 < (byte)0xE0@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "byte3 = UnsafeUtil.getByte(bytes,offset++)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "byte2 > (byte)0xBF || (((byte1 << 28) + (byte2 - (byte)0x90)) >> 30) != 0 || byte3 > (byte)0xBF || bytes(index++( > (byte)0xBF@@@43@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return incompleteStateFor(byte1,byte2)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final long offsetLimit = limit@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "byte3 == 0@@@37@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "int byte3 = 0@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "byte2 == 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "offset >= offsetLimit@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "byte3 == 0@@@42@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final int limit@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "byte3 = bytes(index++(@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return incompleteStateFor(byte1,byte2)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int limit@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int state@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int byte1 = (byte)state@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "offset >= offsetLimit@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "int state@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "int limit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "byte2 = UnsafeUtil.getByte(bytes,offset++)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "return MALFORMED@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return partialIsValidUtf8(bytes,offset,(int)(offsetLimit - offset))@@@53@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "offset >= offsetLimit@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final int index@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "byte2 == 0@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "byte2 > (byte)0xBF || (byte1 == (byte)0xE0 && byte2 < (byte)0xA0) || (byte1 == (byte)0xED && byte2 >= (byte)0xA0) || bytes(index++( > (byte)0xBF@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "byte1 < (byte)0xF0@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "index >= limit@@@39@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "throw new ArrayIndexOutOfBoundsException(String.format(\"Array length=%d, index=%d, limit=%d\",bytes.length,index,limit))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "byte(( bytes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "partialIsValidUtf8['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "byte2 > (byte)0xBF || (byte1 == (byte)0xE0 && byte2 < (byte)0xA0) || (byte1 == (byte)0xED && byte2 >= (byte)0xA0) || UnsafeUtil.getByte(bytes,offset++) > (byte)0xBF@@@26@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final int index@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "byte1 < (byte)0xC2 || UnsafeUtil.getByte(bytes,offset++) > (byte)0xBF@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "byte2 = bytes(index++(@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "byte3 = (byte)(state >> 16)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "byte2 == 0@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "byte1 < (byte)0xC2 || bytes(index++( > (byte)0xBF@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final long offsetLimit = getArrayBaseOffset() + limit@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "return MALFORMED@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return incompleteStateFor(byte1,byte2)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "long offset = index@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "return MALFORMED@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "(index | limit | bytes.length - limit) < 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "long offset = getArrayBaseOffset() + index@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "byte2 = UnsafeUtil.getByte(bytes,offset++)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "state != COMPLETE@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "index >= limit@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "return MALFORMED@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "partialIsValidUtf8['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "partialIsValidUtf8['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "byte2 > (byte)0xBF || (((byte1 << 28) + (byte2 - (byte)0x90)) >> 30) != 0 || byte3 > (byte)0xBF || UnsafeUtil.getByte(bytes,offset++) > (byte)0xBF@@@48@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int byte2 = (byte)~(state >> 8)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "int byte2 = (byte)~(state >> 8)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "int byte2 = (byte)~(state >> 8)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "byte(( bytes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "int state@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "return partialIsValidUtf8(bytes,index,limit)@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "byte2 == 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "offset >= offsetLimit@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "index >= limit@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "return state@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return incompleteStateFor(byte1,byte2)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "int byte1 = (byte)state@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "byte2 = bytes(index++(@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52->64 [style = solid, label="byte1"];
62->52 [style = dotted, label="true"];
27->32 [style = bold, label=""];
59->53 [style = solid, label="index"];
23->6 [style = solid, label="offset"];
68->61 [style = dotted, label="false"];
9->11 [style = bold, label=""];
39->15 [style = solid, label="offset"];
16->53 [style = solid, label="byte3"];
2->6 [style = bold, label=""];
18->6 [style = solid, label="offset"];
22->37 [style = bold, label=""];
60->64 [style = solid, label="bytes"];
48->12 [style = solid, label="byte2"];
67->17 [style = bold, label=""];
27->54 [style = dashed, label="0"];
5->11 [style = dotted, label="false"];
1->20 [style = bold, label=""];
68->69 [style = dotted, label="true"];
53->58 [style = bold, label=""];
64->58 [style = solid, label="index"];
60->54 [style = solid, label="bytes"];
17->14 [style = dotted, label="false"];
2->47 [style = dashed, label="0"];
62->55 [style = bold, label=""];
7->63 [style = dashed, label="0"];
38->27 [style = solid, label="bytes"];
41->38 [style = dotted, label="true"];
41->20 [style = bold, label=""];
8->31 [style = solid, label="limit"];
10->13 [style = solid, label="state"];
18->23 [style = solid, label="offset"];
0->21 [style = solid, label="byte2"];
63->22 [style = bold, label=""];
41->36 [style = dotted, label="true"];
42->9 [style = solid, label="state"];
69->50 [style = bold, label=""];
51->63 [style = solid, label="index"];
18->39 [style = dashed, label="0"];
60->53 [style = solid, label="bytes"];
57->67 [style = solid, label="limit"];
11->16 [style = dotted, label="false"];
5->11 [style = dotted, label="true"];
11->2 [style = dotted, label="true"];
41->40 [style = dotted, label="true"];
28->21 [style = bold, label=""];
29->13 [style = dotted, label="true"];
46->49 [style = dotted, label="true"];
54->64 [style = solid, label="byte2"];
11->64 [style = dotted, label="true"];
23->33 [style = bold, label=""];
53->65 [style = bold, label=""];
20->31 [style = dotted, label="true"];
36->43 [style = solid, label="limit"];
9->3 [style = solid, label="byte1"];
39->2 [style = solid, label="offset"];
9->2 [style = solid, label="byte1"];
39->29 [style = solid, label="offset"];
51->22 [style = solid, label="byte3"];
32->3 [style = dotted, label="true"];
18->35 [style = bold, label=""];
21->16 [style = bold, label=""];
5->9 [style = dotted, label="true"];
11->17 [style = dotted, label="false"];
45->19 [style = solid, label="byte2"];
61->50 [style = solid, label="byte3"];
9->23 [style = solid, label="byte1"];
39->23 [style = solid, label="offset"];
45->64 [style = solid, label="byte2"];
27->21 [style = solid, label="byte2"];
40->39 [style = solid, label="index"];
5->29 [style = dotted, label="true"];
28->27 [style = dotted, label="true"];
41->42 [style = dotted, label="true"];
32->3 [style = bold, label=""];
21->64 [style = dashed, label="0"];
35->32 [style = solid, label="offsetLimit"];
57->69 [style = solid, label="limit"];
69->12 [style = bold, label=""];
9->21 [style = solid, label="byte1"];
15->23 [style = solid, label="byte2"];
35->7 [style = solid, label="offsetLimit"];
40->20 [style = solid, label="index"];
43->34 [style = solid, label="offsetLimit"];
52->22 [style = solid, label="byte1"];
5->29 [style = bold, label=""];
67->64 [style = bold, label=""];
37->7 [style = dotted, label="true"];
15->34 [style = bold, label=""];
24->18 [style = solid, label="index"];
52->12 [style = solid, label="byte1"];
19->54 [style = dotted, label="true"];
16->6 [style = bold, label=""];
10->9 [style = solid, label="state"];
49->61 [style = solid, label="state"];
21->6 [style = solid, label="offset"];
14->22 [style = bold, label=""];
26->14 [style = bold, label=""];
50->51 [style = dotted, label="true"];
15->34 [style = solid, label="offset"];
54->67 [style = solid, label="index"];
18->21 [style = solid, label="offset"];
38->30 [style = solid, label="bytes"];
57->63 [style = solid, label="limit"];
67->17 [style = dotted, label="true"];
20->31 [style = bold, label=""];
19->6 [style = bold, label=""];
68->48 [style = dotted, label="true"];
47->58 [style = bold, label=""];
59->54 [style = solid, label="index"];
30->7 [style = solid, label="offset"];
20->18 [style = bold, label=""];
35->5 [style = bold, label=""];
60->58 [style = solid, label="bytes"];
56->58 [style = bold, label=""];
18->29 [style = solid, label="offset"];
43->29 [style = solid, label="offsetLimit"];
52->5 [style = bold, label=""];
36->15 [style = solid, label="bytes"];
5->6 [style = bold, label=""];
59->55 [style = solid, label="index"];
59->48 [style = solid, label="index"];
48->22 [style = solid, label="byte2"];
25->37 [style = bold, label=""];
26->23 [style = solid, label="byte3"];
39->27 [style = solid, label="offset"];
43->7 [style = solid, label="offsetLimit"];
30->7 [style = bold, label=""];
7->23 [style = bold, label=""];
35->29 [style = solid, label="offsetLimit"];
2->6 [style = solid, label="offset"];
1->8 [style = dotted, label="true"];
20->39 [style = bold, label=""];
11->17 [style = bold, label=""];
14->15 [style = bold, label=""];
49->52 [style = solid, label="state"];
14->34 [style = dotted, label="true"];
55->44 [style = dotted, label="true"];
11->19 [style = dotted, label="true"];
21->16 [style = dotted, label="true"];
15->30 [style = solid, label="offset"];
23->33 [style = dotted, label="true"];
17->23 [style = dotted, label="false"];
5->11 [style = bold, label=""];
17->21 [style = dotted, label="true"];
17->64 [style = bold, label=""];
63->53 [style = bold, label=""];
35->43 [style = dashed, label="0"];
57->55 [style = solid, label="limit"];
4->23 [style = bold, label=""];
15->25 [style = solid, label="byte2"];
12->23 [style = solid, label="byte2"];
42->13 [style = solid, label="state"];
2->19 [style = dotted, label="true"];
52->53 [style = solid, label="byte1"];
17->12 [style = dotted, label="false"];
51->63 [style = bold, label=""];
24->31 [style = solid, label="index"];
10->22 [style = solid, label="state"];
46->60 [style = dotted, label="true"];
36->6 [style = solid, label="bytes"];
36->23 [style = solid, label="bytes"];
52->47 [style = solid, label="byte1"];
6->58 [style = dashed, label="0"];
1->10 [style = dotted, label="true"];
19->64 [style = bold, label=""];
62->55 [style = dotted, label="true"];
66->68 [style = solid, label="byte2"];
69->12 [style = dotted, label="true"];
36->30 [style = solid, label="bytes"];
27->3 [style = solid, label="byte2"];
48->51 [style = solid, label="index"];
14->22 [style = dotted, label="false"];
57->58 [style = solid, label="limit"];
18->30 [style = solid, label="offset"];
53->65 [style = dotted, label="true"];
37->30 [style = bold, label=""];
59->58 [style = solid, label="index"];
12->4 [style = solid, label="byte2"];
11->50 [style = dotted, label="false"];
11->66 [style = bold, label=""];
15->48 [style = dashed, label="0"];
36->20 [style = solid, label="limit"];
53->58 [style = solid, label="index"];
10->5 [style = solid, label="state"];
30->23 [style = solid, label="byte3"];
59->47 [style = solid, label="index"];
15->4 [style = solid, label="byte2"];
7->4 [style = bold, label=""];
62->5 [style = dotted, label="true"];
47->13 [style = bold, label=""];
22->23 [style = solid, label="byte3"];
16->68 [style = bold, label=""];
48->69 [style = bold, label=""];
68->48 [style = bold, label=""];
36->27 [style = solid, label="bytes"];
0->28 [style = solid, label="byte2"];
11->68 [style = dotted, label="false"];
19->54 [style = bold, label=""];
64->56 [style = dotted, label="true"];
52->5 [style = solid, label="byte1"];
17->12 [style = bold, label=""];
28->32 [style = dotted, label="true"];
17->0 [style = bold, label=""];
46->59 [style = dotted, label="true"];
43->5 [style = bold, label=""];
54->67 [style = bold, label=""];
43->6 [style = solid, label="offsetLimit"];
11->66 [style = dotted, label="false"];
23->6 [style = bold, label=""];
66->16 [style = bold, label=""];
30->4 [style = solid, label="byte3"];
17->28 [style = dotted, label="true"];
50->63 [style = dotted, label="true"];
11->53 [style = dotted, label="false"];
61->53 [style = solid, label="byte3"];
3->21 [style = bold, label=""];
32->67 [style = dashed, label="0"];
13->9 [style = bold, label=""];
31->39 [style = bold, label=""];
47->58 [style = solid, label="index"];
55->52 [style = bold, label=""];
9->25 [style = solid, label="byte1"];
46->57 [style = dotted, label="true"];
64->58 [style = bold, label=""];
60->48 [style = solid, label="bytes"];
40->31 [style = solid, label="index"];
18->15 [style = solid, label="offset"];
17->37 [style = dotted, label="false"];
34->25 [style = dotted, label="true"];
36->21 [style = solid, label="bytes"];
60->51 [style = solid, label="bytes"];
48->53 [style = solid, label="byte2"];
52->17 [style = solid, label="byte1"];
23->53 [style = dashed, label="0"];
60->47 [style = solid, label="bytes"];
17->0 [style = dotted, label="true"];
12->50 [style = bold, label=""];
59->64 [style = solid, label="index"];
59->51 [style = solid, label="index"];
12->14 [style = solid, label="byte2"];
38->21 [style = solid, label="bytes"];
48->69 [style = solid, label="index"];
2->19 [style = bold, label=""];
32->21 [style = bold, label=""];
34->25 [style = bold, label=""];
21->6 [style = bold, label=""];
34->69 [style = dashed, label="0"];
19->67 [style = dotted, label="true"];
35->6 [style = solid, label="offsetLimit"];
38->6 [style = solid, label="bytes"];
33->6 [style = bold, label=""];
1->24 [style = dotted, label="true"];
29->9 [style = bold, label=""];
39->43 [style = bold, label=""];
35->34 [style = solid, label="offsetLimit"];
62->58 [style = bold, label=""];
39->30 [style = solid, label="offset"];
11->45 [style = bold, label=""];
31->18 [style = bold, label=""];
42->5 [style = solid, label="state"];
39->6 [style = solid, label="offset"];
11->45 [style = dotted, label="true"];
12->26 [style = bold, label=""];
9->4 [style = solid, label="byte1"];
27->32 [style = solid, label="offset"];
13->58 [style = bold, label=""];
37->23 [style = bold, label=""];
29->55 [style = dashed, label="0"];
66->53 [style = solid, label="byte2"];
18->27 [style = solid, label="offset"];
8->35 [style = solid, label="limit"];
24->20 [style = solid, label="index"];
9->17 [style = solid, label="byte1"];
49->62 [style = solid, label="state"];
54->17 [style = solid, label="byte2"];
37->30 [style = dotted, label="true"];
16->50 [style = solid, label="byte3"];
63->22 [style = dotted, label="true"];
8->20 [style = solid, label="limit"];
11->2 [style = bold, label=""];
36->31 [style = solid, label="limit"];
38->23 [style = solid, label="bytes"];
5->47 [style = bold, label=""];
14->15 [style = dotted, label="true"];
55->44 [style = bold, label=""];
30->51 [style = dashed, label="0"];
1->36 [style = dotted, label="true"];
22->37 [style = solid, label="byte3"];
64->56 [style = bold, label=""];
18->2 [style = solid, label="offset"];
49->44 [style = solid, label="state"];
38->2 [style = solid, label="bytes"];
5->47 [style = dotted, label="true"];
34->37 [style = bold, label=""];
22->53 [style = bold, label=""];
65->58 [style = bold, label=""];
45->19 [style = bold, label=""];
51->53 [style = solid, label="byte3"];
50->51 [style = bold, label=""];
39->21 [style = solid, label="offset"];
36->2 [style = solid, label="bytes"];
7->4 [style = dotted, label="true"];
44->52 [style = bold, label=""];
17->26 [style = dotted, label="false"];
61->50 [style = bold, label=""];
36->60 [style = dashed, label="0"];
68->61 [style = bold, label=""];
52->11 [style = solid, label="byte1"];
28->27 [style = bold, label=""];
66->22 [style = solid, label="byte2"];
47->13 [style = dotted, label="true"];
38->15 [style = solid, label="bytes"];
46->62 [style = bold, label=""];
26->37 [style = solid, label="byte3"];
50->53 [style = bold, label=""];
42->22 [style = solid, label="state"];
43->32 [style = solid, label="offsetLimit"];
0->28 [style = bold, label=""];
9->11 [style = solid, label="byte1"];
29->13 [style = bold, label=""];
}
