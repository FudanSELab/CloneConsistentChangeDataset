digraph {
11 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.getConnectionStateListenable().addListener(new ConnectionStateListener(){@Override public void stateChanged(CuratorFramework client,ConnectionState newState){if (newState == ConnectionState.LOST) {countDownLatch.countDown()}}})@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<LeaderLatch> latches = Lists.newArrayList()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testLostConnection['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "latch.start()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "latches.add(latch)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Timing timing = new Timing()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "timing.forWaiting().sleepABit()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testCorrectWatching['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final CountDownLatch countDownLatch = new CountDownLatch(1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "server.stop()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final int PARTICIPANT_ID = 2@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "i < PARTICIPANT_QTY@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.start()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "latches.get(PARTICIPANT_ID).close()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "++i@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "{for (LeaderLatch latch : latches){CloseableUtils.closeQuietly(latch)}CloseableUtils.closeQuietly(client)}@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "server = new TestingServer(server.getPort(),server.getTempDirectory())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "LeaderLatch latch = new LeaderLatch(client,PATH_NAME)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final int PARTICIPANT_QTY = 10@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testLostConnection['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(getLeaders(latches).size(),0)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(countDownLatch))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertTrue(!latches.get(PARTICIPANT_ID - 1).hasLeadership())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "{latches.remove(PARTICIPANT_ID)for (LeaderLatch latch : latches){Closeables.closeQuietly(latch)}Closeables.closeQuietly(client)}@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(waitForALeader(latches,timing).size(),1)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "waitForALeader(latches,timing)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->20 [style = bold, label=""];
17->5 [style = bold, label=""];
16->0 [style = bold, label=""];
15->2 [style = bold, label=""];
10->9 [style = solid, label="latches"];
22->2 [style = bold, label=""];
4->17 [style = bold, label=""];
10->25 [style = solid, label="latches"];
20->9 [style = bold, label=""];
20->8 [style = dotted, label="true"];
21->8 [style = bold, label=""];
18->12 [style = bold, label=""];
17->3 [style = solid, label="client"];
1->18 [style = bold, label=""];
8->6 [style = bold, label=""];
11->20 [style = solid, label="i"];
7->20 [style = bold, label=""];
20->7 [style = dotted, label="true"];
20->21 [style = dotted, label="true"];
17->25 [style = solid, label="client"];
2->10 [style = bold, label=""];
26->24 [style = bold, label=""];
13->11 [style = bold, label=""];
9->16 [style = bold, label=""];
14->1 [style = bold, label=""];
20->21 [style = bold, label=""];
9->26 [style = bold, label=""];
17->21 [style = solid, label="client"];
5->19 [style = bold, label=""];
2->23 [style = bold, label=""];
16->26 [style = dashed, label="0"];
0->14 [style = bold, label=""];
21->25 [style = solid, label="latch"];
19->13 [style = bold, label=""];
24->25 [style = bold, label=""];
2->20 [style = solid, label="PARTICIPANT_QTY"];
10->4 [style = bold, label=""];
23->10 [style = bold, label=""];
19->0 [style = solid, label="countDownLatch"];
0->24 [style = dashed, label="0"];
5->11 [style = bold, label=""];
12->3 [style = bold, label=""];
6->7 [style = bold, label=""];
21->6 [style = solid, label="latch"];
21->3 [style = solid, label="latch"];
10->3 [style = solid, label="latches"];
27->2 [style = bold, label=""];
23->25 [style = solid, label="PARTICIPANT_ID"];
20->6 [style = dotted, label="true"];
4->9 [style = solid, label="timing"];
}
