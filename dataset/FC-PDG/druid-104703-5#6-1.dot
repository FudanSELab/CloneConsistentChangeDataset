digraph {
27 [style = filled, label = "immutableZkWorker != null && workersWithUnacknowledgedTask.putIfAbsent(immutableZkWorker.getWorker().getHost(),task.getId()) == null@@@25@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "WorkerBehaviorConfig workerConfig = workerConfigRef.get()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return announceTask(task,assignedWorker,taskRunnerWorkItem)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final ImmutableWorkerInfo immutableZkWorker@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "workerConfig == null || workerConfig.getSelectStrategy() == null@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Preconditions.checkNotNull(task,\"task\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Task task@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ZkWorker assignedWorker = null@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assignedWorker = zkWorkers.get(immutableZkWorker.getWorker().getHost())@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "WorkerBehaviorConfig workerConfig = workerConfigRef.get()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return true@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assignedWorker != null@@@29@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "Task task@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assignedWorker != null@@@34@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Preconditions.checkArgument(task.getId().equals(taskRunnerWorkItem.getTaskId()),\"task id != workItem id\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "log.debug(\"Unsuccessful task-assign attempt for task (%s( on workers (%s(. Workers to ack tasks are (%s(.\",task.getId(),zkWorkers.values(),workersWithUnacknowledgedTask)@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "tryAssignTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assignedWorker = zkWorkers.get(immutableZkWorker.getWorker().getHost())@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "log.info(\"Task(%s( already running.\",task.getId())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final RemoteTaskRunnerWorkItem taskRunnerWorkItem@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "immutableZkWorker = strategy.findWorkerForTask(config,ImmutableMap.copyOf(Maps.transformEntries(Maps.filterEntries(zkWorkers,new Predicate<Map.Entry<String,ZkWorker>>(){@Override public boolean apply(Map.Entry<String,ZkWorker> input){return !lazyWorkers.containsKey(input.getKey()) && !workersWithUnacknowledgedTask.containsKey(input.getKey()) && !blackListedWorkers.contains(input.getValue())}}),null)),task)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "strategy = WorkerBehaviorConfig.DEFAULT_STRATEGY@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "findWorkerToRunTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "log.debug(\"No worker selection strategy set. Using default of (%s(\",strategy.getClass().getSimpleName())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "log.debug(\"No worker selection strategy set. Using default of (%s(\",strategy.getClass().getSimpleName())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "immutableZkWorker = strategy.findWorkerForTask(config,ImmutableMap.copyOf(Maps.transformEntries(Maps.filterEntries(zkWorkers,null),null)),task)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Preconditions.checkNotNull(taskRunnerWorkItem,\"taskRunnerWorkItem\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "workerConfig == null || workerConfig.getSelectStrategy() == null@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "{if (assignedWorker != null) {workersWithUnacknowledgedTask.remove(assignedWorker.getWorker().getHost())runPendingTasks()}}@@@42@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "log.debug(\"Unsuccessful task-assign attempt for task (%s( on workers (%s(. Workers to ack tasks are (%s(.\",task.getId(),zkWorkers.values(),workersWithUnacknowledgedTask)@@@38@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "workersWithUnacknowledgedTask@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "tryAssignTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "WorkerSelectStrategy strategy@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return false@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return strategy.findWorkerForTask(config,ImmutableMap.copyOf(Maps.transformEntries(Maps.filterEntries(workers,new Predicate<Map.Entry<String,WorkerHolder>>(){@Override public boolean apply(Map.Entry<String,WorkerHolder> input){return !lazyWorkers.containsKey(input.getKey()) && !workersWithUnacknowledgedTask.containsKey(input.getKey()) && !blackListedWorkers.containsKey(input.getKey())}}),null)),task)@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "{if (assignedWorker != null) {workersWithUnacknowledgedTask.remove(assignedWorker.getWorker().getHost())runPendingTasks()}}@@@37@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "strategy = workerConfig.getSelectStrategy()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "strategy = WorkerBehaviorConfig.DEFAULT_STRATEGY@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "runningTasks.containsKey(task.getId()) || findWorkerRunningTask(task.getId()) != null@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "strategy = workerConfig.getSelectStrategy()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Task task@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return false@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->24 [style = bold, label=""];
8->10 [style = bold, label=""];
5->18 [style = solid, label="assignedWorker"];
18->16 [style = dotted, label="false"];
13->4 [style = solid, label="taskRunnerWorkItem"];
7->17 [style = solid, label="immutableZkWorker"];
33->17 [style = solid, label="taskRunnerWorkItem"];
29->30 [style = bold, label=""];
14->2 [style = solid, label="assignedWorker"];
15->21 [style = bold, label=""];
3->14 [style = dotted, label="false"];
3->15 [style = dotted, label="false"];
26->13 [style = dotted, label="true"];
3->25 [style = dotted, label="true"];
3->0 [style = dotted, label="false"];
9->1 [style = solid, label="task"];
25->31 [style = bold, label=""];
30->28 [style = bold, label=""];
35->37 [style = bold, label=""];
35->39 [style = solid, label="workerConfig"];
14->30 [style = solid, label="assignedWorker"];
2->32 [style = bold, label=""];
39->36 [style = dotted, label="false"];
1->4 [style = bold, label=""];
17->5 [style = bold, label=""];
21->0 [style = bold, label=""];
0->19 [style = bold, label=""];
27->30 [style = bold, label=""];
26->1 [style = bold, label=""];
6->13 [style = dotted, label="true"];
3->11 [style = bold, label=""];
3->30 [style = dotted, label="true"];
15->0 [style = solid, label="workerConfig"];
33->4 [style = solid, label="taskRunnerWorkItem"];
25->7 [style = bold, label=""];
22->23 [style = bold, label=""];
14->17 [style = solid, label="assignedWorker"];
23->14 [style = bold, label=""];
17->2 [style = bold, label=""];
31->27 [style = bold, label=""];
29->32 [style = solid, label="assignedWorker"];
27->29 [style = dotted, label="true"];
3->18 [style = dotted, label="true"];
0->19 [style = dotted, label="false"];
30->28 [style = dotted, label="false"];
39->41 [style = bold, label=""];
41->38 [style = bold, label=""];
5->10 [style = solid, label="assignedWorker"];
14->10 [style = solid, label="assignedWorker"];
34->35 [style = bold, label=""];
27->29 [style = bold, label=""];
7->17 [style = bold, label=""];
30->17 [style = bold, label=""];
26->33 [style = dotted, label="true"];
7->31 [style = dashed, label="0"];
16->8 [style = bold, label=""];
25->31 [style = dotted, label="true"];
14->18 [style = solid, label="assignedWorker"];
29->30 [style = solid, label="assignedWorker"];
5->18 [style = bold, label=""];
5->2 [style = solid, label="assignedWorker"];
25->7 [style = dotted, label="true"];
13->17 [style = solid, label="task"];
6->1 [style = bold, label=""];
19->14 [style = bold, label=""];
6->9 [style = dotted, label="true"];
13->1 [style = solid, label="task"];
24->25 [style = bold, label=""];
9->7 [style = solid, label="task"];
4->12 [style = bold, label=""];
0->23 [style = dotted, label="true"];
12->3 [style = bold, label=""];
30->17 [style = dotted, label="true"];
37->39 [style = bold, label=""];
34->40 [style = dotted, label="true"];
18->2 [style = dotted, label="true"];
18->16 [style = bold, label=""];
13->2 [style = solid, label="taskRunnerWorkItem"];
13->31 [style = solid, label="task"];
3->11 [style = dotted, label="true"];
11->20 [style = bold, label=""];
14->32 [style = solid, label="assignedWorker"];
3->2 [style = dotted, label="true"];
39->38 [style = dotted, label="true"];
9->2 [style = solid, label="task"];
3->15 [style = bold, label=""];
18->2 [style = bold, label=""];
0->22 [style = dotted, label="true"];
36->21 [style = bold, label=""];
28->2 [style = bold, label=""];
31->27 [style = solid, label="immutableZkWorker"];
25->17 [style = dotted, label="true"];
29->17 [style = solid, label="assignedWorker"];
0->22 [style = bold, label=""];
39->41 [style = dotted, label="true"];
38->21 [style = bold, label=""];
14->21 [style = dashed, label="0"];
3->21 [style = dotted, label="false"];
40->21 [style = solid, label="task"];
3->24 [style = dotted, label="false"];
3->8 [style = dotted, label="true"];
25->27 [style = dotted, label="true"];
39->36 [style = bold, label=""];
17->18 [style = bold, label=""];
2->8 [style = bold, label=""];
3->20 [style = dotted, label="true"];
17->5 [style = dotted, label="true"];
}
