digraph {
28 [style = filled, label = "terms = searchAndReduce(searcher,new TermQuery(new Term(\"text\",\"even\")),sigAgg,textFieldType)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNull(terms.getBucketByKey(\"regular\"))@@@64@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "SignificantTermsAggregationBuilder sigAgg = new SignificantTermsAggregationBuilder(\"sig_text\").field(\"unmapped_field\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertNull(terms.getBucketByKey(\"common\"))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSignificance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertNotNull(terms.getBucketByKey(\"even\"))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "indexWriterConfig.setMaxBufferedDocs(100)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "IndexWriterConfig indexWriterConfig = newIndexWriterConfig(new StandardAnalyzer())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertNotNull(terms.getBucketByKey(\"odd\"))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sigAgg.includeExclude(new IncludeExclude(evenStrings,oddStrings))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "SignificantTermsAggregationBuilder sigAgg = new SignificantTermsAggregationBuilder(\"sig_text\").field(\"text\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(terms.getSubsetSize(),equalTo(5L))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertNull(terms.getBucketByKey(\"even\"))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(1,terms.getBuckets().size())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "sigAgg.executionHint(randomExecutionHint())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "sigAgg.significanceHeuristic(SignificanceHeuristicTests.getRandomSignificanceheuristic())@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertNull(terms.getBucketByKey(\"weird\"))@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "terms = searchAndReduce(searcher,new TermQuery(new Term(\"text\",\"odd\")),sigAgg,textFieldType)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(1,terms.getBuckets().size())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "sigNumAgg.executionHint(randomExecutionHint())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertNull(terms.getBucketByKey(\"common\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(terms.getSubsetSize(),equalTo(5L))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(\"test expects a single segment\",1,reader.leaves().size())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String oddStrings = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13d0804@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "SignificantTermsAggregationBuilder sigNumAgg = new SignificantTermsAggregationBuilder(\"sig_number\").field(\"long_field\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "indexWriterConfig.setRAMBufferSizeMB(100)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "String evenStrings = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13d080d@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNull(terms.getBucketByKey(\"odd\"))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "textFieldType.setFielddata(true)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNull(terms.getBucketByKey(\"even\"))@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(1,terms.getBuckets().size())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertThat(terms.getSubsetSize(),equalTo(5L))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "randomBoolean()@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "SignificantStringTerms terms = searchAndReduce(searcher,new TermQuery(new Term(\"text\",\"odd\")),sigAgg,textFieldType)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testSignificance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "SignificanceHeuristic heuristic@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "terms = searchAndReduce(searcher,new TermQuery(new Term(\"text\",\"odd\")),sigAgg,textFieldType)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertNull(terms.getBucketByKey(\"common\"))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "sigAgg.significanceHeuristic(heuristic)@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertNotNull(terms.getBucketByKey(\"odd\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "sigAgg.includeExclude(new IncludeExclude(oddStrings,evenStrings))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertNull(terms.getBucketByKey(\"weird\"))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNull(terms.getBucketByKey(\"common\"))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "addMixedTextDocs(w)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(0,terms.getBuckets().size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(1,terms.getBuckets().size())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertNull(terms.getBucketByKey(\"odd\"))@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "sigAgg.backgroundFilter(QueryBuilders.termsQuery(\"text\",\"common\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNotNull(terms.getBucketByKey(\"odd\"))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "TextFieldType textFieldType = new TextFieldType(\"text\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "SignificantTerms terms = searchAndReduce(searcher,new TermQuery(new Term(\"text\",\"odd\")),sigAgg,textFieldType)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertNull(terms.getBucketByKey(\"odd\"))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertNull(terms.getBucketByKey(\"regular\"))@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertNull(terms.getBucketByKey(\"common\"))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "terms = searchAndReduce(searcher,new TermQuery(new Term(\"text\",\"odd\")),sigAgg,textFieldType)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(0,terms.getBuckets().size())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertNull(terms.getBucketByKey(\"even\"))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "sigAgg.includeExclude(new IncludeExclude(\"o.d\",null))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testUnmapped['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(terms.getSubsetSize(),equalTo(5L))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertNull(terms.getBucketByKey(\"even\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertThat(terms.getSubsetSize(),equalTo(5L))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->4 [style = bold, label=""];
38->7 [style = solid, label="searcher"];
53->55 [style = dashed, label="0"];
38->52 [style = bold, label=""];
5->10 [style = solid, label="oddStrings"];
57->55 [style = solid, label="heuristic"];
45->27 [style = bold, label=""];
29->0 [style = bold, label=""];
38->28 [style = solid, label="searcher"];
10->35 [style = bold, label=""];
43->26 [style = bold, label=""];
31->1 [style = bold, label=""];
51->52 [style = solid, label="textFieldType"];
21->38 [style = bold, label=""];
44->46 [style = bold, label=""];
35->23 [style = bold, label=""];
24->11 [style = bold, label=""];
13->36 [style = bold, label=""];
36->18 [style = bold, label=""];
51->7 [style = solid, label="textFieldType"];
28->42 [style = bold, label=""];
3->30 [style = bold, label=""];
14->48 [style = bold, label=""];
5->26 [style = solid, label="oddStrings"];
59->60 [style = bold, label=""];
38->18 [style = solid, label="searcher"];
62->25 [style = bold, label=""];
51->28 [style = solid, label="textFieldType"];
60->62 [style = bold, label=""];
43->26 [style = solid, label="evenStrings"];
22->52 [style = solid, label="sigAgg"];
16->17 [style = bold, label=""];
33->29 [style = bold, label=""];
56->51 [style = bold, label=""];
22->7 [style = solid, label="sigAgg"];
58->51 [style = bold, label=""];
7->2 [style = bold, label=""];
55->7 [style = bold, label=""];
47->41 [style = bold, label=""];
43->10 [style = solid, label="evenStrings"];
22->54 [style = bold, label=""];
48->13 [style = bold, label=""];
11->61 [style = bold, label=""];
39->20 [style = bold, label=""];
12->31 [style = bold, label=""];
38->59 [style = solid, label="searcher"];
50->34 [style = bold, label=""];
38->59 [style = bold, label=""];
42->37 [style = bold, label=""];
32->46 [style = bold, label=""];
25->39 [style = bold, label=""];
22->28 [style = solid, label="sigAgg"];
17->6 [style = bold, label=""];
26->53 [style = bold, label=""];
18->33 [style = bold, label=""];
8->3 [style = bold, label=""];
51->59 [style = solid, label="textFieldType"];
51->18 [style = solid, label="textFieldType"];
1->9 [style = bold, label=""];
22->35 [style = solid, label="sigAgg"];
26->55 [style = bold, label=""];
19->45 [style = bold, label=""];
51->35 [style = solid, label="textFieldType"];
6->10 [style = bold, label=""];
52->59 [style = dashed, label="0"];
38->52 [style = solid, label="searcher"];
11->22 [style = bold, label=""];
32->44 [style = bold, label=""];
4->12 [style = bold, label=""];
54->21 [style = bold, label=""];
56->57 [style = dotted, label="true"];
52->50 [style = bold, label=""];
27->24 [style = bold, label=""];
61->54 [style = bold, label=""];
32->44 [style = dotted, label="true"];
22->61 [style = dashed, label="0"];
34->25 [style = bold, label=""];
46->49 [style = bold, label=""];
20->28 [style = bold, label=""];
49->21 [style = bold, label=""];
5->43 [style = bold, label=""];
38->35 [style = solid, label="searcher"];
37->14 [style = bold, label=""];
0->47 [style = bold, label=""];
53->7 [style = bold, label=""];
23->40 [style = bold, label=""];
61->59 [style = solid, label="sigAgg"];
22->18 [style = solid, label="sigAgg"];
54->32 [style = bold, label=""];
30->16 [style = bold, label=""];
51->19 [style = bold, label=""];
2->8 [style = bold, label=""];
41->5 [style = bold, label=""];
15->51 [style = bold, label=""];
}
