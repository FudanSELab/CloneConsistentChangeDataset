digraph {
4 [style = filled, label = "ExecutorService exec = Executors.newCachedThreadPool()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TestHelper.assertExpectedObjects(bySegmentResults,theRunner.run(QueryPlus.wrap(fullQuery)),\"bySegment\")@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "GroupByQuery.Builder builder = makeQueryBuilder().setDataSource(QueryRunnerTestHelper.dataSource).setInterval(\"2011-04-02/2011-04-04\").setDimensions(new DefaultDimensionSpec(\"quality\",\"alias\")).setAggregatorSpecs(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory(\"idx\",\"index\")).setGranularity(new PeriodGranularity(new Period(\"P1M\"),null,null)).setDimFilter(new SelectorDimFilter(\"quality\",\"mezzanine\",null)).overrideContext(ImmutableMap.of(\"bySegment\",true))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final GroupByQuery fullQuery = builder.build()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<Result> bySegmentResults = new ArrayList<>()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "GroupByQuery.Builder builder = makeQueryBuilder().setDataSource(QueryRunnerTestHelper.dataSource).setInterval(\"2011-04-02/2011-04-04\").setDimensions(new ExtractionDimensionSpec(\"quality\",\"alias\",new LookupExtractionFn(new MapLookupExtractor(ImmutableMap.of(\"mezzanine\",\"mezzanine0\"),false),false,null,false,false))).setAggregatorSpecs(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory(\"idx\",\"index\")).setGranularity(new PeriodGranularity(new Period(\"P1M\"),null,null)).setDimFilter(new SelectorDimFilter(\"quality\",\"mezzanine\",null)).overrideContext(ImmutableMap.of(\"bySegment\",true))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testBySegmentResults['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "QueryToolChest toolChest = factory.getToolchest()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testBySegmentResults['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "List<QueryRunner<Row>> singleSegmentRunners = new ArrayList<>()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final GroupByQuery fullQuery = builder.build()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<Result> bySegmentResults = new ArrayList<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "bySegmentResults.add(singleSegmentResult)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Result<BySegmentResultValue> singleSegmentResult = new Result<>(DateTimes.of(\"2011-01-12T00:00:00.000Z\"),new BySegmentResultValueClass<>(Collections.singletonList(GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"mezzanine0\",\"rows\",6L,\"idx\",4420L)),QueryRunnerTestHelper.segmentId.toString(),Intervals.of(\"2011-04-02T00:00:00.000Z/2011-04-04T00:00:00.000Z\")))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TestHelper.assertExpectedObjects(bySegmentResults,theRunner.run(QueryPlus.wrap(fullQuery),new HashMap<>()),\"bySegment\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "cannotVectorize()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i < segmentCount@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ExecutorService exec = Executors.newCachedThreadPool()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int segmentCount = 32@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "exec.shutdownNow()@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i++@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int i = 0@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "QueryRunner theRunner = toolChest.postMergeQueryDecoration(new FinalizeResultsQueryRunner<>(toolChest.mergeResults(factory.mergeRunners(Executors.newCachedThreadPool(),singleSegmentRunners)),toolChest))@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < segmentCount@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int segmentCount = 32@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testBySegmentResultsUnOptimizedDimextraction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "singleSegmentRunners.add(toolChest.preMergeQueryDecoration(runner))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->22 [style = bold, label=""];
6->17 [style = bold, label=""];
2->23 [style = dashed, label="0"];
4->3 [style = bold, label=""];
16->6 [style = solid, label="i"];
18->7 [style = solid, label="i"];
23->16 [style = bold, label=""];
27->1 [style = bold, label=""];
14->25 [style = bold, label=""];
20->13 [style = bold, label=""];
0->3 [style = solid, label="fullQuery"];
8->3 [style = solid, label="singleSegmentRunners"];
18->7 [style = dotted, label="true"];
24->2 [style = bold, label=""];
3->21 [style = dashed, label="0"];
14->17 [style = dotted, label="true"];
8->18 [style = bold, label=""];
8->18 [style = solid, label="i"];
10->3 [style = solid, label="toolChest"];
16->6 [style = bold, label=""];
18->1 [style = dotted, label="true"];
18->15 [style = bold, label=""];
4->21 [style = bold, label=""];
0->11 [style = bold, label=""];
7->18 [style = solid, label="i"];
2->14 [style = solid, label="segmentCount"];
6->19 [style = bold, label=""];
7->4 [style = bold, label=""];
17->14 [style = solid, label="i"];
11->4 [style = solid, label="toolChest"];
1->7 [style = bold, label=""];
25->17 [style = bold, label=""];
10->4 [style = solid, label="singleSegmentRunners"];
26->11 [style = bold, label=""];
0->21 [style = solid, label="fullQuery"];
6->17 [style = dotted, label="true"];
19->0 [style = bold, label=""];
5->16 [style = bold, label=""];
3->9 [style = bold, label=""];
2->23 [style = bold, label=""];
12->13 [style = bold, label=""];
6->14 [style = bold, label=""];
14->26 [style = bold, label=""];
14->6 [style = solid, label="i"];
23->25 [style = solid, label="singleSegmentResult"];
21->9 [style = bold, label=""];
16->14 [style = solid, label="i"];
11->9 [style = solid, label="fullQuery"];
6->14 [style = dotted, label="true"];
19->26 [style = dashed, label="0"];
10->8 [style = bold, label=""];
18->1 [style = bold, label=""];
18->1 [style = solid, label="i"];
6->17 [style = solid, label="i"];
17->14 [style = bold, label=""];
11->10 [style = bold, label=""];
2->17 [style = solid, label="singleSegmentResult"];
5->21 [style = solid, label="bySegmentResults"];
14->25 [style = dotted, label="true"];
15->4 [style = bold, label=""];
7->27 [style = dotted, label="true"];
7->27 [style = bold, label=""];
7->18 [style = bold, label=""];
28->24 [style = bold, label=""];
5->3 [style = solid, label="bySegmentResults"];
16->9 [style = solid, label="bySegmentResults"];
13->6 [style = solid, label="segmentCount"];
18->7 [style = bold, label=""];
7->1 [style = dotted, label="true"];
13->18 [style = solid, label="segmentCount"];
8->7 [style = solid, label="i"];
2->7 [style = solid, label="segmentCount"];
14->6 [style = bold, label=""];
6->14 [style = solid, label="i"];
1->7 [style = solid, label="i"];
2->5 [style = bold, label=""];
13->2 [style = bold, label=""];
}
