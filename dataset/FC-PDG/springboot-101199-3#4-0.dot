digraph {
9 [style = filled, label = "assertThat(testDataSource.getUser()).isNull()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(testDataSource.getDriverClassName()).isEqualTo(.getName())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(testDataSource.getUrl()).isEqualTo(\"jdbc:h2:test\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "this.dataSource = DataSourceBuilder.create().url(\"jdbc:h2:test\").type().username(\"test\").build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertThat(testDataSource.getDriverClass()).isNull()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(h2DataSource.getUser()).isEqualTo(\"test\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "buildWhenH2TypeSpecifiedReturnsExpectedDataSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(testDataSource.getUsername()).isEqualTo(\"test\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "buildWhenCustomSubclassTypeSpecifiedReturnsDataSourceWithOnlyBasePropertiesSet['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(this.dataSource).isInstanceOf()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(testDataSource.getJdbcUrl()).isNull()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "JdbcDataSource h2DataSource = (JdbcDataSource)this.dataSource@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(h2DataSource.getPassword()).isEqualTo(\"secret\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "CustomTomcatDataSource testDataSource = (CustomTomcatDataSource)this.dataSource@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(this.dataSource).isInstanceOf()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "this.dataSource = DataSourceBuilder.create().url(\"jdbc:h2:test\").type().username(\"test\").password(\"secret\").build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "buildWhenH2TypeSpecifiedReturnsExpectedDataSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "this.dataSource = DataSourceBuilder.create().url(\"jdbc:h2:test\").type().username(\"test\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->10 [style = bold, label=""];
4->3 [style = bold, label=""];
16->11 [style = bold, label=""];
14->17 [style = solid, label="dataSource"];
1->5 [style = dashed, label="0"];
1->14 [style = dashed, label="0"];
4->17 [style = dashed, label="0"];
2->1 [style = bold, label=""];
5->4 [style = solid, label="dataSource"];
0->15 [style = dashed, label="0"];
3->6 [style = bold, label=""];
1->0 [style = bold, label=""];
12->9 [style = bold, label=""];
1->4 [style = solid, label="dataSource"];
9->16 [style = bold, label=""];
15->17 [style = bold, label=""];
7->5 [style = bold, label=""];
10->8 [style = bold, label=""];
5->0 [style = bold, label=""];
0->4 [style = bold, label=""];
14->15 [style = bold, label=""];
3->10 [style = dashed, label="0"];
13->14 [style = bold, label=""];
8->12 [style = bold, label=""];
}
