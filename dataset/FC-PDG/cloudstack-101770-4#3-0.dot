digraph {
29 [style = filled, label = "deleteVpcOffering['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final int vpcCount = _vpcDao.getVpcCountByOfferingId(offId)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "annotationDao.removeByEntityType(AnnotationService.EntityType.NETWORK_OFFERING.name(),offering.getUuid())@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "final VpcOfferingVO offering = _vpcOffDao.findById(offId)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final DeleteNetworkOfferingCmd cmd@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "throw new InvalidParameterValueException(\"Can't delete vpc offering \" + offId + \" as its used by \" + vpcCount + \" vpcs. \" + \"To make the network offering unavaiable, disable it\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CallContext.current().setEventDetails(\" Id: \" + offeringId)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return false@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "offering.getRemoved() != null || offering.isSystemOnly()@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Long offeringId = cmd.getId()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "throw new InvalidParameterValueException(\"unable to find network offering \" + offeringId)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final NetworkOfferingVO offering = _networkOfferingDao.findById(offeringId)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final int networkCount = _networkDao.getNetworkCountByNetworkOffId(offeringId)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "CallContext.current().setEventDetails(\" Id: \" + offId)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "throw new InvalidParameterValueException(\"Can't delete network offering \" + offeringId + \" as its used by \" + networkCount + \" networks. \" + \"To make the network offering unavaiable, disable it\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "_vpcOffDao.remove(offId)@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "offering == null@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "throw new InvalidParameterValueException(\"unable to find network offering \" + offeringId)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return true@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "deleteNetworkOffering['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "vpcCount > 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "throw new InvalidParameterValueException(\"Default network offering can't be deleted\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "networkCount > 0@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "throw new InvalidParameterValueException(\"unable to find vpc offering \" + offId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return false@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "_networkOfferingDao.remove(offeringId)@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "deleteNetworkOffering['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "return true@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "offering.isDefault() == true@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final long offId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "throw new InvalidParameterValueException(\"Default network offering can't be deleted\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->5 [style = dotted, label="false"];
14->5 [style = bold, label=""];
11->3 [style = bold, label=""];
30->24 [style = solid, label="offId"];
11->3 [style = dotted, label="true"];
12->27 [style = bold, label=""];
14->0 [style = dotted, label="true"];
25->12 [style = dotted, label="true"];
22->23 [style = dotted, label="true"];
11->12 [style = bold, label=""];
6->4 [style = bold, label=""];
20->10 [style = bold, label=""];
8->7 [style = solid, label="offeringId"];
19->28 [style = bold, label=""];
30->28 [style = solid, label="offId"];
15->18 [style = bold, label=""];
22->21 [style = dotted, label="false"];
27->19 [style = solid, label="vpcCount"];
16->18 [style = bold, label=""];
12->2 [style = bold, label=""];
26->20 [style = bold, label=""];
1->8 [style = bold, label=""];
9->15 [style = solid, label="networkCount"];
30->26 [style = solid, label="offId"];
9->15 [style = bold, label=""];
17->13 [style = dotted, label="true"];
19->22 [style = bold, label=""];
8->9 [style = solid, label="offeringId"];
30->22 [style = solid, label="offId"];
10->11 [style = bold, label=""];
14->0 [style = bold, label=""];
8->6 [style = bold, label=""];
8->3 [style = solid, label="offeringId"];
8->4 [style = solid, label="offeringId"];
10->25 [style = bold, label=""];
10->7 [style = dotted, label="true"];
12->2 [style = dotted, label="true"];
25->12 [style = bold, label=""];
27->28 [style = solid, label="vpcCount"];
20->25 [style = bold, label=""];
12->9 [style = bold, label=""];
28->22 [style = bold, label=""];
30->10 [style = solid, label="offId"];
15->19 [style = dashed, label="0"];
2->9 [style = bold, label=""];
10->7 [style = bold, label=""];
30->27 [style = solid, label="offId"];
20->10 [style = dotted, label="true"];
7->12 [style = bold, label=""];
19->28 [style = dotted, label="true"];
3->12 [style = bold, label=""];
15->14 [style = bold, label=""];
1->13 [style = dotted, label="true"];
4->10 [style = solid, label="offering"];
16->28 [style = dashed, label="0"];
16->14 [style = bold, label=""];
29->30 [style = dotted, label="true"];
15->16 [style = bold, label=""];
8->16 [style = solid, label="offeringId"];
14->22 [style = dashed, label="0"];
17->8 [style = bold, label=""];
4->10 [style = bold, label=""];
15->16 [style = dotted, label="true"];
27->19 [style = bold, label=""];
22->21 [style = bold, label=""];
22->23 [style = bold, label=""];
29->24 [style = bold, label=""];
18->14 [style = bold, label=""];
25->27 [style = bold, label=""];
10->11 [style = dotted, label="false"];
24->26 [style = bold, label=""];
13->30 [style = dashed, label="0"];
8->6 [style = solid, label="offeringId"];
7->10 [style = dashed, label="0"];
8->14 [style = solid, label="offeringId"];
26->20 [style = solid, label="offering"];
9->16 [style = solid, label="networkCount"];
}
