digraph {
23 [style = filled, label = "testDeleteWithExistSubquery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "append(new Employee(1,\"hr\"),new Employee(2,\"hardware\"),new Employee(null,\"hr\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"Should have expected rows\",ImmutableList.of(),sql(\"SELECT * FROM %s ORDER BY id ASC NULLS LAST\",tableName))@@@18@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "sql(\"DELETE FROM %s t WHERE \" + \"id NOT IN (SELECT * FROM deleted_id WHERE value IS NOT NULL) AND \" + \"EXISTS (SELECT 1 FROM FROM deleted_dep WHERE t.dep = deleted_dep.value)\",tableName)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "sql(\"DELETE FROM %s t WHERE EXISTS (SELECT 1 FROM deleted_id d WHERE t.id = d.value)\",tableName)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "sql(\"DELETE FROM %s t WHERE EXISTS (SELECT 1 FROM deleted_id d WHERE t.id = d.value + 2)\",tableName)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "sql(\"DELETE FROM %s WHERE id NOT IN (SELECT * FROM deleted_id) OR dep IN ('software', 'hr')\",tableName)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "sql(\"DELETE FROM %s WHERE id NOT IN (SELECT * FROM deleted_id WHERE value IS NOT NULL)\",tableName)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "createOrReplaceView(\"deleted_dep\",Arrays.asList(\"software\",\"hr\"),Encoders.STRING())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "sql(\"DELETE FROM %s t WHERE \" + \"id NOT IN (SELECT * FROM deleted_id WHERE value IS NOT NULL) OR \" + \"EXISTS (SELECT 1 FROM FROM deleted_dep WHERE t.dep = deleted_dep.value)\",tableName)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(\"Should have expected rows\",ImmutableList.of(row(2,\"hardware\"),row(null,\"hr\")),sql(\"SELECT * FROM %s ORDER BY id ASC NULLS LAST\",tableName))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "sql(\"DELETE FROM %s WHERE id NOT IN (SELECT * FROM deleted_id)\",tableName)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"Should have expected rows\",ImmutableList.of(row(2,\"hardware\")),sql(\"SELECT * FROM %s\",tableName))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testDeleteWithNotInSubquery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertEquals(\"Should have expected rows\",ImmutableList.of(row(null,\"hr\")),sql(\"SELECT * FROM %s ORDER BY id ASC NULLS LAST\",tableName))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "createOrReplaceView(\"deleted_id\",Arrays.asList(-1,-2,null),Encoders.INT())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "sql(\"DELETE FROM %s t WHERE EXISTS (SELECT 1 FROM deleted_id d WHERE t.id = d.value) OR t.id IS NULL\",tableName)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"Should have expected rows\",ImmutableList.of(row(2,\"hardware\")),sql(\"SELECT * FROM %s ORDER BY id ASC NULLS LAST\",tableName))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"Should have expected rows\",ImmutableList.of(row(1,\"hr\"),row(2,\"hardware\"),row(null,\"hr\")),sql(\"SELECT * FROM %s ORDER BY id ASC NULLS LAST\",tableName))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "createAndInitUnpartitionedTable()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sql(\"INSERT INTO TABLE %s VALUES (1, 'hr'), (2, 'hardware'), (null, 'hr')\",tableName)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"Should have expected rows\",ImmutableList.of(row(2,\"hardware\")),sql(\"SELECT * FROM %s ORDER BY id ASC NULLS LAST\",tableName))@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(\"Should have expected rows\",ImmutableList.of(row(1,\"hr\"),row(2,\"hardware\"),row(null,\"hr\"),row(null,\"hr\")),sql(\"SELECT * FROM %s ORDER BY id ASC NULLS LAST\",tableName))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testDeleteWithNotInSubquery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11->3 [style = bold, label=""];
14->17 [style = bold, label=""];
0->19 [style = dashed, label="0"];
11->22 [style = bold, label=""];
4->7 [style = bold, label=""];
10->2 [style = bold, label=""];
1->10 [style = bold, label=""];
8->9 [style = bold, label=""];
3->22 [style = dashed, label="0"];
4->21 [style = dashed, label="0"];
23->1 [style = bold, label=""];
2->11 [style = bold, label=""];
9->13 [style = bold, label=""];
0->8 [style = bold, label=""];
5->18 [style = dashed, label="0"];
5->4 [style = bold, label=""];
20->19 [style = bold, label=""];
12->5 [style = bold, label=""];
16->1 [style = bold, label=""];
21->20 [style = bold, label=""];
3->12 [style = bold, label=""];
17->15 [style = bold, label=""];
7->0 [style = bold, label=""];
12->18 [style = bold, label=""];
18->21 [style = bold, label=""];
22->12 [style = bold, label=""];
13->14 [style = bold, label=""];
6->1 [style = bold, label=""];
}
