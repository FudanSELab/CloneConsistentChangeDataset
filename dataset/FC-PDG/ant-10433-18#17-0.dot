digraph {
5 [style = filled, label = "waitForAck(in)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "doSingleTransfer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i.hasNext()@@@18@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "getPreserveLastModified()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final String cmd = sb.toString()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "sb.append(remotePath)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Directory current = (Directory)i.next()@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "sendFileToRemote(localFile,in,out)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "{if (channel != null) {channel.disconnect()}}@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "sb.append(\"-p \")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "{if (channel != null) {channel.disconnect()}}@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "getCompressed()@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final OutputStream out = channel.getOutputStream()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final InputStream in = channel.getInputStream()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Channel channel = openExecChannel(sb.toString())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "{if (channel != null) {channel.disconnect()}}@@@24@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "sendDirectory(current,in,out)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "doMultipleTransfer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "final Channel channel = openExecChannel(cmd)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "channel.connect()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sb.append(\"-C \")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final OutputStream out = channel.getOutputStream()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "StringBuilder sb = new StringBuilder(\"scp -t \")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "StringBuilder sb = new StringBuilder(\"scp -r -d -t \")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "doMultipleTransfer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17->8 [style = bold, label=""];
11->14 [style = solid, label="in"];
0->16 [style = bold, label=""];
16->13 [style = bold, label=""];
5->9 [style = bold, label=""];
21->19 [style = bold, label=""];
5->23 [style = bold, label=""];
21->19 [style = solid, label="cmd"];
24->0 [style = bold, label=""];
3->14 [style = bold, label=""];
0->2 [style = bold, label=""];
12->11 [style = bold, label=""];
4->6 [style = solid, label="channel"];
19->11 [style = bold, label=""];
15->6 [style = bold, label=""];
15->6 [style = solid, label="current"];
11->23 [style = solid, label="out"];
3->23 [style = solid, label="in"];
9->10 [style = bold, label=""];
8->24 [style = dashed, label="0"];
7->8 [style = bold, label=""];
9->6 [style = dotted, label="true"];
4->21 [style = dashed, label="0"];
1->13 [style = bold, label=""];
8->0 [style = bold, label=""];
3->5 [style = solid, label="in"];
23->22 [style = bold, label=""];
4->10 [style = solid, label="channel"];
16->1 [style = dotted, label="true"];
16->1 [style = bold, label=""];
11->3 [style = bold, label=""];
18->6 [style = bold, label=""];
11->6 [style = solid, label="in"];
9->15 [style = bold, label=""];
12->6 [style = solid, label="out"];
4->12 [style = bold, label=""];
14->18 [style = bold, label=""];
9->15 [style = dotted, label="true"];
11->18 [style = solid, label="in"];
0->2 [style = dotted, label="true"];
6->9 [style = bold, label=""];
20->24 [style = bold, label=""];
13->21 [style = bold, label=""];
19->22 [style = solid, label="channel"];
12->18 [style = solid, label="out"];
14->5 [style = bold, label=""];
13->4 [style = bold, label=""];
2->16 [style = bold, label=""];
}
