digraph {
5 [style = filled, label = "testMarkSegmentsAsUnusedInvalidPayload['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DataSourcesResource dataSourcesResource = new DataSourcesResource(inventoryView,segmentsMetadataManager,null,null,null)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DataSourcesResource dataSourcesResource = new DataSourcesResource(inventoryView,segmentsMetadataManager,null,null,null,null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testMarkSegmentsAsUnusedInvalidPayload['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Response response = dataSourcesResource.markSegmentsAsUnused(\"datasource1\",payload)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertNotNull(response.getEntity())@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final DataSourcesResource.MarkDataSourceSegmentsPayload payload = new DataSourcesResource.MarkDataSourceSegmentsPayload(null,null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final DataSourcesResource.MarkDataSourceSegmentsPayload payload = new DataSourcesResource.MarkDataSourceSegmentsPayload(Intervals.of(\"2010-01-01/P1D\"),ImmutableSet.of())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testMarkSegmentsAsUnusedInvalidPayloadBothArguments['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(400,response.getStatus())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->4 [style = solid, label="payload"];
6->3 [style = bold, label=""];
3->8 [style = dashed, label="0"];
5->2 [style = bold, label=""];
4->1 [style = bold, label=""];
7->6 [style = bold, label=""];
1->0 [style = bold, label=""];
8->4 [style = bold, label=""];
3->4 [style = solid, label="payload"];
9->2 [style = bold, label=""];
3->4 [style = bold, label=""];
2->3 [style = bold, label=""];
2->8 [style = bold, label=""];
2->6 [style = dashed, label="0"];
}
