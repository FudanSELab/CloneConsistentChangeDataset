digraph {
0 [style = filled, label = "return EMPTY@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return SampleFamily.build(this.context,Arrays.stream(samples).collect(groupingBy(null,mapping(identity(),toList()))).entrySet().stream().map(null).toArray(null))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "double result = Arrays.stream(samples).mapToDouble(null).average().orElse(0.0D)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "aggregate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "avg['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return SampleFamily.build(this.context,InternalOps.newSample(ImmutableMap.of(),samples(0(.timestamp,result))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return SampleFamily.build(this.context,Arrays.stream(samples).collect(groupingBy(null,mapping(identity(),toList()))).entrySet().stream().map(null).toArray(null))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "double result = Arrays.stream(samples).mapToDouble(null).reduce(aggregator).orElse(0.0D)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "DoubleBinaryOperator aggregator@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "this == EMPTY@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return SampleFamily.build(this.context,InternalOps.newSample(samples(0(.name,ImmutableMap.of(),samples(0(.timestamp,result))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "return SampleFamily.build(this.context,Arrays.stream(samples).collect(groupingBy(null,mapping(identity(),toList()))).entrySet().stream().map(null).toArray(null))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "List<String> by@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<String> by@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "by == null@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "avg['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "ExpressionParsingContext.get().ifPresent(null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
2->4 [style = solid, label="by"];
4->1 [style = dotted, label="true"];
4->6 [style = bold, label=""];
7->12 [style = bold, label=""];
8->2 [style = dotted, label="true"];
8->3 [style = bold, label=""];
16->7 [style = bold, label=""];
16->7 [style = solid, label="result"];
4->7 [style = dotted, label="true"];
5->0 [style = dotted, label="true"];
9->10 [style = bold, label=""];
15->14 [style = dotted, label="true"];
15->3 [style = bold, label=""];
1->7 [style = bold, label=""];
1->9 [style = bold, label=""];
15->13 [style = dotted, label="true"];
6->10 [style = dashed, label="0"];
1->7 [style = solid, label="result"];
6->12 [style = dashed, label="0"];
3->5 [style = bold, label=""];
11->2 [style = dotted, label="true"];
2->14 [style = dashed, label="0"];
1->9 [style = solid, label="result"];
5->0 [style = bold, label=""];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
7->9 [style = dashed, label="0"];
1->16 [style = dashed, label="0"];
5->4 [style = bold, label=""];
7->6 [style = bold, label=""];
4->12 [style = bold, label=""];
13->4 [style = solid, label="by"];
4->1 [style = bold, label=""];
4->16 [style = dotted, label="true"];
4->9 [style = dotted, label="true"];
4->16 [style = bold, label=""];
}
