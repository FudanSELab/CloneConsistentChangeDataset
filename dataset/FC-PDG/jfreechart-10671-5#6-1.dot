digraph {
13 [style = filled, label = "assertEquals(4.0,dataset.getQ3Value(\"R1\",\"C1\").doubleValue(),EPSILON)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "BoxAndWhiskerItem item1 = new BoxAndWhiskerItem(1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,new ArrayList<>())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(2.0,dataset.getValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(6.0,dataset.getMaxRegularValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(7.5,dataset.getMinOutlier(\"R1\",\"C1\").doubleValue(),EPSILON)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testAdd['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(new Range(7.5,8.5),dataset.getRangeBounds(false))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(1.5,dataset.getMeanValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(5.5,dataset.getMinRegularValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testAddUpdatesCachedRange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(3.5,dataset.getQ1Value(\"R1\",\"C1\").doubleValue(),EPSILON)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset dataset = new DefaultBoxAndWhiskerCategoryDataset()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(3.0,dataset.getQ1Value(\"R1\",\"C1\").doubleValue(),EPSILON)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(2.0,dataset.getMedianValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "BoxAndWhiskerItem item2 = new BoxAndWhiskerItem(1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,new ArrayList<>())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "dataset.add(item1,\"R1\",\"C1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(2.5,dataset.getMedianValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "dataset.add(item2,\"R1\",\"C1\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testAdd['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertEquals(6.5,dataset.getMaxRegularValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(8.0,dataset.getMaxOutlier(\"R1\",\"C1\").doubleValue(),EPSILON)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(4.5,dataset.getQ3Value(\"R1\",\"C1\").doubleValue(),EPSILON)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(2.5,dataset.getValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(5.0,dataset.getMinRegularValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1.0,dataset.getMeanValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset<String,String> dataset = new DefaultBoxAndWhiskerCategoryDataset<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(7.0,dataset.getMinOutlier(\"R1\",\"C1\").doubleValue(),EPSILON)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(8.5,dataset.getMaxOutlier(\"R1\",\"C1\").doubleValue(),EPSILON)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(new Range(7.0,8.0),dataset.getRangeBounds(false))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
17->25 [style = bold, label=""];
9->0 [style = bold, label=""];
2->3 [style = bold, label=""];
0->11 [style = bold, label=""];
16->19 [style = bold, label=""];
12->9 [style = bold, label=""];
15->3 [style = bold, label=""];
24->22 [style = bold, label=""];
24->22 [style = solid, label="item2"];
2->15 [style = dashed, label="0"];
23->28 [style = bold, label=""];
20->18 [style = bold, label=""];
26->2 [style = bold, label=""];
7->24 [style = bold, label=""];
7->5 [style = bold, label=""];
3->7 [style = solid, label="item1"];
0->25 [style = dashed, label="0"];
10->8 [style = bold, label=""];
22->20 [style = bold, label=""];
3->7 [style = bold, label=""];
19->27 [style = bold, label=""];
9->17 [style = dashed, label="0"];
5->4 [style = bold, label=""];
6->19 [style = dashed, label="0"];
12->27 [style = dashed, label="0"];
27->17 [style = bold, label=""];
10->20 [style = dashed, label="0"];
8->18 [style = dashed, label="0"];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
13->6 [style = bold, label=""];
11->21 [style = dashed, label="0"];
25->21 [style = bold, label=""];
6->12 [style = bold, label=""];
8->13 [style = bold, label=""];
13->16 [style = dashed, label="0"];
21->23 [style = bold, label=""];
18->16 [style = bold, label=""];
}
