digraph {
22 [style = filled, label = "docs.add(makeJob(\"java\",2006))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "TopDocs hits = s.search(fullChildQuery,10)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "dir.close()@@@53@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "testSimple['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "BooleanQuery fullQuery = new BooleanQuery()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "IndexSearcher s = newSearcher(r)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "w.addDocuments(docs)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "dir.close()@@@51@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testEmptyChildFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testEmptyChildFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "childQuery.add(new BooleanClause(new TermQuery(new Term(\"skill\",\"java\")),Occur.MUST))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "fullQuery.add(new BooleanClause(childJoinQuery,Occur.MUST))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "docs.add(makeResume(\"Lisa\",\"United Kingdom\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(r.leaves().size() > 1)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "w.addDocuments(docs)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "docs.add(makeJob(\"ruby\",2005))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "ToParentBlockJoinQuery childJoinQuery = new ToParentBlockJoinQuery(childQuery,parentsFilter,ScoreMode.Avg)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "docs.add(makeJob(\"python\",2010))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final GroupDocs<Integer> group = results.groups(0(@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertFalse(Float.isNaN(results.maxScore))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final IndexWriterConfig config = new IndexWriterConfig(new MockAnalyzer(random()))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "Query parentQuery = new TermQuery(new Term(\"country\",\"United Kingdom\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final IndexWriterConfig config = new IndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer(random()))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertEquals(1,results.totalGroupedHitCount)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(0,s.search(fullChildQuery,new QueryWrapperFilter(new TermQuery(new Term(\"skill\",\"foosball\"))),1).totalHits)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "fullQuery.add(new BooleanClause(parentQuery,Occur.MUST))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "docs.add(makeResume(\"Frank\",\"United States\"))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "IndexSearcher s = new IndexSearcher(r)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"Lisa\",getParentDoc(r,parentsFilter,hits.scoreDocs(0(.doc).get(\"name\"))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "docs.add(makeJob(\"java\",2007))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(\"java\",childDoc.get(\"skill\"))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertFalse(Float.isNaN(group.score))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(1,hits.totalHits)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "final RandomIndexWriter w = new RandomIndexWriter(random(),dir)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "final List<Document> docs = new ArrayList<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "IndexReader r = w.getReader()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "r.close()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(\"java\",childDoc.get(\"skill\"))@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "w.shutdown()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "childQuery.add(new BooleanClause(NumericRangeQuery.newIntRange(\"year\",2006,2011,true,true),Occur.MUST))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "IndexReader r = DirectoryReader.open(w,random().nextBoolean())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "TopGroups<Integer> results = c.getTopGroups(childJoinQuery,null,0,10,0,true)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int num = atLeast(10)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "i++@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "ToParentBlockJoinCollector c = new ToParentBlockJoinCollector(Sort.RELEVANCE,1,true,true)@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"Lisa\",parentDoc.get(\"name\"))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "BooleanQuery childQuery = new BooleanQuery()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertNotNull(group.groupValue)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(1,results.groups.length)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "BooleanQuery fullChildQuery = new BooleanQuery()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "w.commit()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final IndexWriter w = new IndexWriter(dir,config)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "docs.clear()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "fullQuery.add(new BooleanClause(new MatchAllDocsQuery(),Occur.MUST))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "docs.clear()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "StoredDocument childDoc = s.doc(group.scoreDocs(0(.doc)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "fullChildQuery.add(new BooleanClause(parentJoinQuery,Occur.MUST))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i < num@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "s.search(fullQuery,c)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "w.addDocuments(docs)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(1,group.totalHits)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "w.close()@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "r.close()@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "StoredDocument parentDoc = s.doc(group.groupValue)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(2007,childDoc.getField(\"year\").numericValue())@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "childDoc = s.doc(hits.scoreDocs(0(.doc)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int i = 0@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "docs.add(makeJob(\"java\",2007))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "Filter parentsFilter = new FixedBitSetCachingWrapperFilter(new QueryWrapperFilter(new TermQuery(new Term(\"docType\",\"resume\"))))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "config.setMergePolicy(NoMergePolicy.INSTANCE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery,parentsFilter,random().nextBoolean())@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "fullChildQuery.add(new BooleanClause(childQuery,Occur.MUST))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31->37 [style = bold, label=""];
47->7 [style = solid, label="parentsFilter"];
30->7 [style = solid, label="childQuery"];
39->9 [style = bold, label=""];
71->48 [style = bold, label=""];
45->48 [style = bold, label=""];
36->55 [style = bold, label=""];
18->29 [style = solid, label="fullQuery"];
23->29 [style = bold, label=""];
7->8 [style = solid, label="childJoinQuery"];
57->25 [style = solid, label="docs"];
46->51 [style = bold, label=""];
49->24 [style = bold, label=""];
61->68 [style = bold, label=""];
61->67 [style = solid, label="fullQuery"];
26->35 [style = bold, label=""];
40->22 [style = bold, label=""];
7->4 [style = solid, label="childJoinQuery"];
37->32 [style = bold, label=""];
32->37 [style = dotted, label="true"];
72->47 [style = bold, label=""];
8->39 [style = bold, label=""];
32->11 [style = bold, label=""];
14->20 [style = bold, label=""];
32->15 [style = dotted, label="true"];
8->9 [style = solid, label="parentJoinQuery"];
24->28 [style = bold, label=""];
69->54 [style = solid, label="childJoinQuery"];
48->41 [style = bold, label=""];
26->11 [style = solid, label="w"];
23->29 [style = solid, label="c"];
11->44 [style = bold, label=""];
18->56 [style = bold, label=""];
37->32 [style = solid, label="i"];
16->19 [style = bold, label=""];
17->65 [style = bold, label=""];
25->2 [style = bold, label=""];
16->26 [style = solid, label="config"];
51->26 [style = solid, label="config"];
66->69 [style = bold, label=""];
16->51 [style = dashed, label="0"];
53->35 [style = bold, label=""];
22->38 [style = bold, label=""];
46->63 [style = bold, label=""];
18->4 [style = bold, label=""];
52->69 [style = solid, label="childQuery"];
3->37 [style = solid, label="i"];
54->44 [style = bold, label=""];
55->7 [style = bold, label=""];
19->26 [style = bold, label=""];
33->36 [style = bold, label=""];
64->66 [style = bold, label=""];
52->62 [style = bold, label=""];
70->8 [style = solid, label="parentsFilter"];
34->14 [style = bold, label=""];
52->0 [style = solid, label="childQuery"];
11->28 [style = solid, label="r"];
57->53 [style = bold, label=""];
4->23 [style = bold, label=""];
35->31 [style = solid, label="docs"];
32->31 [style = dotted, label="true"];
17->10 [style = bold, label=""];
39->34 [style = solid, label="fullChildQuery"];
46->16 [style = bold, label=""];
66->8 [style = solid, label="parentQuery"];
30->33 [style = bold, label=""];
32->6 [style = dotted, label="true"];
0->45 [style = bold, label=""];
28->47 [style = bold, label=""];
63->57 [style = bold, label=""];
21->65 [style = solid, label="r"];
35->17 [style = solid, label="docs"];
44->67 [style = bold, label=""];
67->72 [style = bold, label=""];
3->32 [style = solid, label="i"];
45->58 [style = bold, label=""];
70->69 [style = solid, label="parentsFilter"];
35->1 [style = bold, label=""];
44->67 [style = solid, label="c"];
10->13 [style = bold, label=""];
13->32 [style = solid, label="num"];
7->18 [style = bold, label=""];
20->42 [style = bold, label=""];
57->43 [style = solid, label="docs"];
41->12 [style = bold, label=""];
44->24 [style = bold, label=""];
1->25 [style = bold, label=""];
11->49 [style = bold, label=""];
38->43 [style = bold, label=""];
58->71 [style = bold, label=""];
69->72 [style = solid, label="childJoinQuery"];
29->8 [style = bold, label=""];
43->21 [style = bold, label=""];
10->21 [style = dashed, label="0"];
35->40 [style = solid, label="docs"];
9->0 [style = bold, label=""];
65->70 [style = bold, label=""];
50->46 [style = bold, label=""];
39->45 [style = solid, label="fullChildQuery"];
12->34 [style = bold, label=""];
15->6 [style = bold, label=""];
2->40 [style = bold, label=""];
62->64 [style = bold, label=""];
60->46 [style = bold, label=""];
69->61 [style = bold, label=""];
46->63 [style = solid, label="dir"];
47->30 [style = bold, label=""];
56->4 [style = bold, label=""];
6->31 [style = bold, label=""];
13->3 [style = bold, label=""];
36->7 [style = bold, label=""];
66->68 [style = solid, label="parentQuery"];
4->27 [style = bold, label=""];
32->15 [style = bold, label=""];
70->52 [style = bold, label=""];
44->49 [style = dashed, label="0"];
27->23 [style = bold, label=""];
14->59 [style = bold, label=""];
3->32 [style = bold, label=""];
46->26 [style = solid, label="dir"];
5->46 [style = bold, label=""];
21->17 [style = bold, label=""];
68->54 [style = bold, label=""];
51->19 [style = bold, label=""];
}
