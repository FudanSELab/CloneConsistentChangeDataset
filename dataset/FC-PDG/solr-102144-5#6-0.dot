digraph {
8 [style = filled, label = "return collectors@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "create['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "List<Collector> collectors = new ArrayList<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "firstPhaseGroups.isEmpty()@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "fieldType.getNumericType() != null@@@16@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "firstPassGroupingCollector = new FunctionFirstPassGroupingCollector(vs,new HashMap<Object,Object>(),groupSort,topNGroups)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "return Collections.emptyList()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "collectors.add(firstPassGroupingCollector)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "FieldType fieldType = field.getType()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "secondPassCollector = new TermSecondPassGroupingCollector(field.getName(),firstPhaseGroups,groupSort,sortWithinGroup,maxDocPerGroup,needScores,needMaxScore,true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "collectors.add(allGroupsCollector)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "fieldType.getNumericType() != null@@@6@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "create['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ValueSource vs = fieldType.getValueSource(field,null)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "topNGroups > 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "includeGroupCount@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "create['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return collectors@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ValueSource vs = fieldType.getValueSource(field,null)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "firstPassGroupingCollector = new TermFirstPassGroupingCollector(field.getName(),groupSort,topNGroups)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "allGroupsCollector = new FunctionAllGroupsCollector(vs,new HashMap<Object,Object>())@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "allGroupsCollector = new TermAllGroupsCollector(field.getName())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<Collector> collectors = new ArrayList<>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "collectors.add(secondPassCollector)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->8 [style = bold, label=""];
11->12 [style = bold, label=""];
13->4 [style = bold, label=""];
3->22 [style = dashed, label="0"];
16->0 [style = solid, label="firstPassGroupingCollector"];
1->0 [style = dotted, label="true"];
21->18 [style = dotted, label="true"];
19->22 [style = solid, label="secondPassCollector"];
5->3 [style = dotted, label="true"];
9->16 [style = bold, label=""];
17->19 [style = bold, label=""];
21->17 [style = bold, label=""];
16->0 [style = bold, label=""];
14->16 [style = dotted, label="true"];
19->22 [style = bold, label=""];
11->12 [style = solid, label="vs"];
14->9 [style = bold, label=""];
5->15 [style = dotted, label="true"];
15->11 [style = dotted, label="true"];
14->2 [style = dotted, label="false"];
17->23 [style = solid, label="collectors"];
1->14 [style = bold, label=""];
15->6 [style = bold, label=""];
2->0 [style = solid, label="firstPassGroupingCollector"];
15->12 [style = dotted, label="true"];
4->1 [style = bold, label=""];
12->3 [style = solid, label="allGroupsCollector"];
10->1 [style = bold, label=""];
20->21 [style = bold, label=""];
5->6 [style = dotted, label="true"];
6->3 [style = solid, label="allGroupsCollector"];
15->11 [style = bold, label=""];
7->4 [style = bold, label=""];
12->3 [style = bold, label=""];
21->18 [style = bold, label=""];
6->3 [style = bold, label=""];
15->6 [style = dotted, label="false"];
3->8 [style = bold, label=""];
4->10 [style = bold, label=""];
14->2 [style = bold, label=""];
1->2 [style = dotted, label="true"];
18->17 [style = bold, label=""];
1->14 [style = dotted, label="true"];
2->0 [style = bold, label=""];
22->23 [style = bold, label=""];
6->19 [style = dashed, label="0"];
0->5 [style = bold, label=""];
1->2 [style = bold, label=""];
5->6 [style = bold, label=""];
4->8 [style = solid, label="collectors"];
5->15 [style = bold, label=""];
9->16 [style = solid, label="vs"];
1->5 [style = bold, label=""];
14->9 [style = dotted, label="true"];
}
