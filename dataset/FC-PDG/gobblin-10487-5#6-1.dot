digraph {
10 [style = filled, label = "assertEquals(res3,(long)50)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(res6,(long)-1)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "long res3 = oracleExtractor.exractSampleRecordCountFromQuery(QUERY_3)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "long res4 = postgresqlExtractor.exractSampleRecordCountFromQuery(QUERY_EMPTY)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "long res4 = oracleExtractor.exractSampleRecordCountFromQuery(QUERY_4)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "long res5 = oracleExtractor.exractSampleRecordCountFromQuery(QUERY_EMPTY)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "long res1 = postgresqlExtractor.exractSampleRecordCountFromQuery(QUERY_1)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertEquals(res2,(long)5)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "long res2 = postgresqlExtractor.exractSampleRecordCountFromQuery(QUERY_2)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "long res4 = postgresqlExtractor.extractSampleRecordCountFromQuery(QUERY_EMPTY)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "long res2 = postgresqlExtractor.extractSampleRecordCountFromQuery(QUERY_2)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(res1,(long)532)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(res1,(long)532)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "long res6 = oracleExtractor.exractSampleRecordCountFromQuery(QUERY_REG)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testExractSampleRecordCountFromQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(res5,(long)-1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "long res1 = postgresqlExtractor.extractSampleRecordCountFromQuery(QUERY_1)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(res3,(long)50)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(res4,(long)50)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "long res5 = postgresqlExtractor.extractSampleRecordCountFromQuery(QUERY_REG)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "long res3 = postgresqlExtractor.exractSampleRecordCountFromQuery(QUERY_3)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "long res3 = postgresqlExtractor.extractSampleRecordCountFromQuery(QUERY_3)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(res5,(long)-1)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testExractSampleRecordCountFromQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "long res2 = oracleExtractor.exractSampleRecordCountFromQuery(QUERY_2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "long res5 = postgresqlExtractor.exractSampleRecordCountFromQuery(QUERY_REG)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "testExractSampleRecordCountFromQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "long res1 = oracleExtractor.exractSampleRecordCountFromQuery(QUERY_1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
10->22 [style = bold, label=""];
11->16 [style = bold, label=""];
17->10 [style = bold, label=""];
22->26 [style = bold, label=""];
3->10 [style = solid, label="res4"];
5->14 [style = dashed, label="0"];
4->17 [style = bold, label=""];
9->6 [style = solid, label="res3"];
25->17 [style = solid, label="res2"];
9->24 [style = dashed, label="0"];
3->21 [style = dashed, label="0"];
4->6 [style = bold, label=""];
12->0 [style = solid, label="res5"];
4->17 [style = dashed, label="0"];
20->26 [style = solid, label="res5"];
8->20 [style = dashed, label="0"];
18->19 [style = bold, label=""];
23->4 [style = bold, label=""];
8->12 [style = dashed, label="0"];
2->9 [style = bold, label=""];
7->4 [style = bold, label=""];
23->27 [style = solid, label="res6"];
10->22 [style = dashed, label="0"];
12->7 [style = bold, label=""];
19->25 [style = bold, label=""];
8->7 [style = bold, label=""];
2->4 [style = solid, label="res2"];
2->15 [style = dashed, label="0"];
25->24 [style = bold, label=""];
26->27 [style = bold, label=""];
5->2 [style = bold, label=""];
19->4 [style = solid, label="res1"];
21->22 [style = solid, label="res4"];
16->10 [style = solid, label="res4"];
21->20 [style = bold, label=""];
15->11 [style = bold, label=""];
20->23 [style = bold, label=""];
11->6 [style = solid, label="res3"];
24->21 [style = bold, label=""];
3->8 [style = bold, label=""];
6->10 [style = bold, label=""];
10->0 [style = bold, label=""];
15->4 [style = solid, label="res2"];
8->0 [style = solid, label="res5"];
2->25 [style = dashed, label="0"];
9->3 [style = bold, label=""];
9->11 [style = dashed, label="0"];
24->10 [style = solid, label="res3"];
14->15 [style = bold, label=""];
5->7 [style = solid, label="res1"];
5->19 [style = dashed, label="0"];
16->12 [style = bold, label=""];
13->14 [style = bold, label=""];
14->7 [style = solid, label="res1"];
3->16 [style = dashed, label="0"];
}
