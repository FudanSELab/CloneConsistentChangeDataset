digraph {
9 [style = filled, label = "when(run.getName()).thenReturn(CommandExecutorTaskAdvice.COMMAND_EXECUTOR_RUN)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(MetricsPool.get(MetricIds.PROXY_EXECUTE_LATENCY_MILLIS).isPresent())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "FixtureWrapper requestWrapper = (FixtureWrapper)MetricsPool.get(MetricIds.PROXY_EXECUTE_ERROR).get()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "e.printStackTrace()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(requestWrapper.getFixtureValue(),org.hamcrest.Matchers.greaterThan(0d))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertNotNull(requestWrapper)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "MockAdviceTargetObject targetObject = new MockAdviceTargetObject()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "commandExecutorTaskAdvice.afterMethod(targetObject,processException,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16947c5,new MethodInvocationResult())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "when(processException.getName()).thenReturn(CommandExecutorTaskAdvice.COMMAND_EXECUTOR_EXCEPTION)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "commandExecutorTaskAdvice.afterMethod(targetObject,run,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1694781,new MethodInvocationResult())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertExecutorErrorTotal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(requestWrapper.getFixtureValue(),org.hamcrest.Matchers.greaterThan(0d))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "InterruptedException e@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Thread.sleep(500)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertExecuteLatency['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "commandExecutorTaskAdvice.beforeMethod(targetObject,run,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1694767,new MethodInvocationResult())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNotNull(requestWrapper)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertExecuteLatency['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertThat(requestWrapper.getFixtureValue(),Matchers.greaterThan(0.0))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "FixtureWrapper requestWrapper = (FixtureWrapper)MetricsPool.get(MetricIds.PROXY_EXECUTE_LATENCY_MILLIS).get()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
4->7 [style = solid, label="targetObject"];
5->10 [style = bold, label=""];
4->14 [style = bold, label=""];
19->16 [style = solid, label="requestWrapper"];
7->1 [style = bold, label=""];
0->13 [style = bold, label=""];
7->14 [style = dashed, label="0"];
9->4 [style = bold, label=""];
8->3 [style = bold, label=""];
18->15 [style = bold, label=""];
1->3 [style = bold, label=""];
4->14 [style = solid, label="targetObject"];
14->19 [style = bold, label=""];
16->17 [style = bold, label=""];
12->9 [style = bold, label=""];
13->11 [style = bold, label=""];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
19->16 [style = bold, label=""];
10->11 [style = dashed, label="0"];
0->5 [style = solid, label="requestWrapper"];
9->15 [style = dashed, label="0"];
15->4 [style = bold, label=""];
4->3 [style = solid, label="targetObject"];
6->9 [style = bold, label=""];
2->8 [style = dotted, label="true"];
2->8 [style = bold, label=""];
0->5 [style = bold, label=""];
}
