digraph {
3 [style = filled, label = "assertThat(compositeMsgs.get(0).getAlarmMessage(),is(\"composite rule triggered!\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "alarmMessages.remove(0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\",\"(a_rule && b_rule) || c_rule\",\"composite rule triggered!\",new HashMap<>())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testEvaluateMessageWithOrOp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<CompositeAlarmRule> compositeAlarmRules = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\",\"a_rule || b_rule\",\"composite rule triggered!\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(compositeMsgs.get(0).getId0(),is(\"id0\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testEvaluateMessageWithParenthesisAndOrOp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(compositeMsgs.get(0).isOnlyAsCondition(),is(false))@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<AlarmMessage> alarmMessages = getAlarmMessages()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testEvaluateMessageWithParenthesisAndOrOp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CompositeAlarmRule compositeAlarmRule = new CompositeAlarmRule(\"dummy\",\"(a_rule && b_rule) || c_rule\",\"composite rule triggered!\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "compositeAlarmRules.add(compositeAlarmRule)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(compositeMsgs.size(),is(1))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(compositeMsgs.get(0).getRuleName(),is(\"dummy\"))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(compositeMsgs.get(0).getId1(),is(\"id1\"))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<AlarmMessage> compositeMsgs = ruleEvaluate.evaluate(compositeAlarmRules,alarmMessages)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
0->3 [style = bold, label=""];
7->11 [style = bold, label=""];
15->7 [style = bold, label=""];
4->6 [style = bold, label=""];
11->16 [style = dashed, label="0"];
8->14 [style = bold, label=""];
9->10 [style = bold, label=""];
11->2 [style = solid, label="compositeAlarmRule"];
16->2 [style = bold, label=""];
1->7 [style = bold, label=""];
12->7 [style = bold, label=""];
11->2 [style = bold, label=""];
3->9 [style = bold, label=""];
13->2 [style = solid, label="compositeAlarmRule"];
7->5 [style = solid, label="compositeAlarmRules"];
11->13 [style = dashed, label="0"];
8->5 [style = bold, label=""];
5->0 [style = bold, label=""];
8->5 [style = solid, label="alarmMessages"];
7->16 [style = bold, label=""];
13->2 [style = bold, label=""];
10->4 [style = bold, label=""];
2->8 [style = bold, label=""];
16->2 [style = solid, label="compositeAlarmRule"];
14->5 [style = bold, label=""];
}
