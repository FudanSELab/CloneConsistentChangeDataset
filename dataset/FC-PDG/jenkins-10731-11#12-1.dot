digraph {
7 [style = filled, label = "File external = File.createTempFile(\"something\",\"\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(external.getAbsolutePath(),Util.resolveSymlink(new File(d,\"outside\")))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertFalse(Util.isSymlink(new File(d,\"dir\")))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertNull(Util.resolveSymlink(new File(d,\"a\")))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Util.createSymlink(d,buf.toString(),\"x\",l)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(\"Couldn't create \" + dir,dir.mkdir())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "File anotherDir = new File(d,\"anotherDir\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "File d = tmp.getRoot()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "String log = baos.toString()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Util.createSymlink(d,\"a\",\"anotherDir/link\",l)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testIsSymlink['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "StreamTaskListener l = new StreamTaskListener(baos)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "{assertTrue(external.delete())}@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "File dir = new File(d,\"dir\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "new FilePath(new File(d,\"a\")).touch(0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assume.assumeTrue(!Functions.isWindows())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "{Util.deleteRecursive(d)}@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "log.length() > 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "{Util.deleteRecursive(d)}@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(Util.isSymlink(new File(d,\"link\")))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Util.createSymlink(d,\"a\",\"x\",l)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"a\",Util.resolveSymlink(new File(d,\"anotherDir/link\")))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testSymlink['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i++@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "buf.append((char)('0' + (i % 10)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "System.err.println(\"log output: \" + log)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "testSymlink['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "assertTrue(\"Couldn't create \" + anotherDir,anotherDir.mkdir())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "i < 768@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "File anotherDir = new File(d,\"anotherDir\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(\"Couldn't create \" + anotherDir,anotherDir.mkdir())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Util.createSymlink(d,external.getAbsolutePath(),\"outside\",l)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "File d = Util.createTempDir()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Util.createSymlink(d,\"dir\",\"anotherDir/symlinkDir\",l)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "System.err.println(\"log output: \" + log)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(buf.toString(),Util.resolveSymlink(new File(d,\"x\")))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Util.createSymlink(d,\"original\",\"link\",l)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "new FilePath(new File(d,\"original\")).touch(0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "StringBuilder buf = new StringBuilder(768)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertFalse(Util.isSymlink(new File(d,\"original\")))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(\"a\",Util.resolveSymlink(new File(d,\"x\")))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i++@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->10 [style = bold, label=""];
20->11 [style = dotted, label="true"];
28->20 [style = bold, label=""];
11->17 [style = solid, label="i"];
23->34 [style = solid, label="d"];
21->37 [style = dashed, label="0"];
31->21 [style = bold, label=""];
11->20 [style = solid, label="i"];
23->10 [style = solid, label="d"];
27->15 [style = dotted, label="true"];
12->9 [style = bold, label=""];
30->18 [style = bold, label=""];
31->3 [style = solid, label="d"];
23->42 [style = solid, label="d"];
27->15 [style = bold, label=""];
23->4 [style = solid, label="d"];
16->11 [style = solid, label="i"];
29->2 [style = bold, label=""];
22->42 [style = dashed, label="0"];
25->19 [style = solid, label="baos"];
31->12 [style = solid, label="d"];
36->18 [style = bold, label=""];
25->19 [style = bold, label=""];
23->5 [style = solid, label="d"];
38->35 [style = solid, label="anotherDir"];
12->9 [style = solid, label="anotherDir"];
31->1 [style = solid, label="d"];
16->28 [style = solid, label="i"];
37->33 [style = bold, label=""];
8->27 [style = bold, label=""];
27->2 [style = bold, label=""];
23->0 [style = solid, label="d"];
23->24 [style = solid, label="d"];
28->20 [style = solid, label="i"];
28->17 [style = solid, label="i"];
23->1 [style = solid, label="d"];
16->20 [style = solid, label="i"];
23->31 [style = dashed, label="0"];
19->24 [style = solid, label="l"];
23->3 [style = solid, label="d"];
20->14 [style = bold, label=""];
23->38 [style = solid, label="d"];
1->0 [style = bold, label=""];
23->43 [style = solid, label="d"];
19->32 [style = solid, label="l"];
0->7 [style = bold, label=""];
31->4 [style = solid, label="d"];
7->24 [style = bold, label=""];
23->37 [style = bold, label=""];
27->29 [style = dotted, label="true"];
23->22 [style = solid, label="d"];
18->25 [style = bold, label=""];
39->41 [style = bold, label=""];
14->8 [style = bold, label=""];
31->22 [style = solid, label="d"];
27->29 [style = bold, label=""];
9->1 [style = bold, label=""];
38->35 [style = bold, label=""];
16->20 [style = bold, label=""];
32->42 [style = bold, label=""];
4->22 [style = bold, label=""];
24->3 [style = bold, label=""];
13->18 [style = bold, label=""];
22->6 [style = bold, label=""];
1->39 [style = dashed, label="0"];
34->40 [style = bold, label=""];
31->0 [style = solid, label="d"];
20->17 [style = dotted, label="true"];
34->40 [style = solid, label="dir"];
35->39 [style = bold, label=""];
8->29 [style = solid, label="log"];
3->26 [style = bold, label=""];
31->5 [style = solid, label="d"];
23->14 [style = solid, label="d"];
43->38 [style = bold, label=""];
23->32 [style = solid, label="d"];
31->2 [style = solid, label="d"];
31->10 [style = solid, label="d"];
33->32 [style = bold, label=""];
40->43 [style = bold, label=""];
23->39 [style = solid, label="d"];
31->14 [style = solid, label="d"];
11->20 [style = bold, label=""];
42->34 [style = bold, label=""];
15->2 [style = bold, label=""];
20->17 [style = bold, label=""];
16->17 [style = solid, label="i"];
19->31 [style = bold, label=""];
26->5 [style = bold, label=""];
23->12 [style = solid, label="d"];
23->2 [style = solid, label="d"];
19->14 [style = solid, label="l"];
10->33 [style = dashed, label="0"];
23->41 [style = solid, label="d"];
19->39 [style = solid, label="l"];
17->11 [style = bold, label=""];
2->12 [style = bold, label=""];
19->1 [style = solid, label="l"];
4->32 [style = dashed, label="0"];
17->28 [style = bold, label=""];
31->24 [style = solid, label="d"];
23->21 [style = bold, label=""];
20->28 [style = dotted, label="true"];
6->16 [style = bold, label=""];
19->23 [style = bold, label=""];
19->4 [style = solid, label="l"];
23->33 [style = solid, label="d"];
10->4 [style = bold, label=""];
8->15 [style = solid, label="log"];
}
