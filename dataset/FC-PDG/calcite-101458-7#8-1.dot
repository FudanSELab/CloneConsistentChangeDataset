digraph {
1 [style = filled, label = "int rightJoinIndex = deptRow.getFieldNames().indexOf(\"DEPTNO\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RexNode joinCond = relBuilder.call(SqlStdOperatorTable.EQUALS,RexInputRef.of(leftJoinIndex,empDeptJoinRelFields),RexInputRef.of(empRow.getFieldCount() + rightJoinIndex,empDeptJoinRelFields))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "splitJoinConditionHelper(joinCond,Collections.singletonList(leftJoinIndex),Collections.singletonList(rightJoinIndex),Collections.singletonList(false),relBuilder.literal(true))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "RexNode joinCond = relBuilder.call(SqlStdOperatorTable.IS_NOT_DISTINCT_FROM,RexInputRef.of(leftJoinIndex,empDeptJoinRelFields),RexInputRef.of(empRow.getFieldCount() + rightJoinIndex,empDeptJoinRelFields))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testSplitJoinConditionEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "splitJoinConditionHelper(joinCond,Collections.singletonList(leftJoinIndex),Collections.singletonList(rightJoinIndex),Collections.singletonList(true),relBuilder.literal(true))@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int leftJoinIndex = empScan.getRowType().getFieldNames().indexOf(\"DEPTNO\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSplitJoinConditionIsNotDistinctFrom['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testSplitJoinConditionEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
1->4 [style = solid, label="rightJoinIndex"];
0->4 [style = solid, label="joinCond"];
1->7 [style = solid, label="rightJoinIndex"];
1->0 [style = solid, label="rightJoinIndex"];
7->6 [style = bold, label=""];
3->7 [style = solid, label="leftJoinIndex"];
1->0 [style = bold, label=""];
3->4 [style = solid, label="leftJoinIndex"];
3->6 [style = solid, label="leftJoinIndex"];
3->1 [style = bold, label=""];
0->7 [style = dashed, label="0"];
4->6 [style = dashed, label="0"];
0->4 [style = bold, label=""];
7->6 [style = solid, label="joinCond"];
1->7 [style = bold, label=""];
3->0 [style = solid, label="leftJoinIndex"];
2->3 [style = bold, label=""];
1->6 [style = solid, label="rightJoinIndex"];
8->3 [style = bold, label=""];
}
