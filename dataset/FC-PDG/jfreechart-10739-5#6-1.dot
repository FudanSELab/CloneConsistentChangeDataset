digraph {
1 [style = filled, label = "assertTrue(d1.equals(d2))@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SlidingCategoryDataset<String,String> d1 = new SlidingCategoryDataset<>(u1,0,5)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "DefaultCategoryDataset u2 = (DefaultCategoryDataset)d2.getUnderlyingDataset()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "u1.addValue(1.0,\"R1\",\"C1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "u2.addValue(3.0,\"R1\",\"C3\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(d1.equals(d2))@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "d2 = (SlidingCategoryDataset)d1.clone()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertFalse(d1.equals(d2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "u1.addValue(2.0,\"R1\",\"C2\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SlidingCategoryDataset d2@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DefaultCategoryDataset u1 = new DefaultCategoryDataset()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "DefaultCategoryDataset u2 = (DefaultCategoryDataset)d2.getUnderlyingDataset()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "SlidingCategoryDataset d2 = (SlidingCategoryDataset)TestUtils.serialised(d1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(d1 != d2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SlidingCategoryDataset d1 = new SlidingCategoryDataset(u1,0,5)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "SlidingCategoryDataset<String,String> d2@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(d1,d2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "u1.addValue(3.0,\"R1\",\"C3\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(d1.equals(d2))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DefaultCategoryDataset<String,String> u1 = new DefaultCategoryDataset<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "DefaultCategoryDataset<String,String> u2 = (DefaultCategoryDataset)d2.getUnderlyingDataset()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "u2.addValue(3.0,\"R1\",\"C3\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = solid, label="u1"];
12->20 [style = solid, label="d1"];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
17->5 [style = bold, label=""];
2->12 [style = solid, label="u1"];
24->2 [style = bold, label=""];
4->17 [style = dashed, label="0"];
2->6 [style = bold, label=""];
25->23 [style = bold, label=""];
16->6 [style = bold, label=""];
14->10 [style = bold, label=""];
5->9 [style = solid, label="d2"];
3->15 [style = bold, label=""];
5->1 [style = solid, label="d2"];
4->22 [style = dashed, label="0"];
3->12 [style = bold, label=""];
21->25 [style = bold, label=""];
11->9 [style = bold, label=""];
5->8 [style = solid, label="d2"];
12->22 [style = solid, label="d1"];
19->16 [style = bold, label=""];
10->18 [style = dashed, label="0"];
20->21 [style = bold, label=""];
15->17 [style = bold, label=""];
5->14 [style = solid, label="d2"];
12->4 [style = bold, label=""];
22->20 [style = bold, label=""];
23->13 [style = bold, label=""];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
2->16 [style = dashed, label="0"];
12->8 [style = solid, label="d1"];
10->0 [style = bold, label=""];
15->8 [style = solid, label="d1"];
12->15 [style = dashed, label="0"];
22->25 [style = solid, label="d2"];
14->18 [style = bold, label=""];
22->20 [style = solid, label="d2"];
8->11 [style = bold, label=""];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
18->0 [style = bold, label=""];
12->22 [style = bold, label=""];
22->14 [style = solid, label="d2"];
9->13 [style = bold, label=""];
}
