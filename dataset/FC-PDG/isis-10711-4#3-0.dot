digraph {
1 [style = filled, label = "PromptStyleFacet facet = PromptStyleFacetForPropertyLayoutAnnotation.create(mockPropertyLayout,mockConfiguration,mockFacetHolder)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertThat(facet.value(),is(PromptStyle.INLINE))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when_not_annotated['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when_not_annotated['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "context.checking(new Expectations(){})@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertThat(facet,is((Matcher)IsisMatchers.anInstanceOf()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "when_annotated_with_as_configured['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "PromptStyleFacet facet = PromptStyleFacetForPropertyLayoutAnnotation.create(mockPropertyLayout,mockConfiguration,mockFacetHolder)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertThat(facet,is((Matcher)IsisMatchers.anInstanceOf()))@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertThat(facet.value(),is(PromptStyle.INLINE))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->0 [style = bold, label=""];
1->5 [style = dashed, label="0"];
9->8 [style = bold, label=""];
0->5 [style = bold, label=""];
1->9 [style = bold, label=""];
7->4 [style = bold, label=""];
6->4 [style = bold, label=""];
1->9 [style = solid, label="facet"];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
4->1 [style = bold, label=""];
4->2 [style = bold, label=""];
2->5 [style = solid, label="facet"];
2->1 [style = solid, label="facet"];
}
