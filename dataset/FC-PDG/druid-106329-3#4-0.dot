digraph {
16 [style = filled, label = "SegmentAnalysis mergedSegmentAnalysis = new SegmentAnalysis(differentIds? \"merged\": \"testSegment\",null,ImmutableMap.of(\"placement\",new ColumnAnalysis(ValueType.STRING.toString(),false,0,0,null,null,null)),0,expectedSegmentAnalysis1.getNumRows() + expectedSegmentAnalysis2.getNumRows(),null,null,Granularities.NONE,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testSegmentMetadataQueryWithAggregatorsMerge['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "QueryRunner myRunner = new FinalizeResultsQueryRunner<>(toolChest.mergeResults(FACTORY.mergeRunners(MoreExecutors.sameThreadExecutor(),Lists.newArrayList(toolChest.preMergeQueryDecoration(runner1),toolChest.preMergeQueryDecoration(runner2)))),toolChest)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Map<String,AggregatorFactory> expectedAggregators = new HashMap<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "expectedAggregators.put(agg.getName(),agg.getCombiningFactory())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "exec.shutdownNow()@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestHelper.assertExpectedObjects(ImmutableList.of(mergedSegmentAnalysis),myRunner.run(QueryPlus.wrap(query),Maps.newHashMap()),\"failed SegmentMetadata merging query\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TestHelper.assertExpectedObjects(ImmutableList.of(mergedSegmentAnalysis),myRunner.run(QueryPlus.wrap(query),Maps.newHashMap()),\"failed SegmentMetadata merging query\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "testSegmentMetadataQueryWithAggregatorsMerge['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "QueryRunner myRunner = new FinalizeResultsQueryRunner<>(toolChest.mergeResults(FACTORY.mergeRunners(MoreExecutors.sameThreadExecutor(),Lists.newArrayList(toolChest.preMergeQueryDecoration(runner1),toolChest.preMergeQueryDecoration(runner2)))),toolChest)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SegmentAnalysis mergedSegmentAnalysis = new SegmentAnalysis(differentIds? \"merged\": \"testSegment\",null,ImmutableMap.of(\"placement\",new ColumnAnalysis(ValueType.STRING.toString(),false,0,0,null,null,null)),0,expectedSegmentAnalysis1.getNumRows() + expectedSegmentAnalysis2.getNumRows(),expectedAggregators,null,null,null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSegmentMetadataQueryWithQueryGranularityMerge['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ExecutorService exec = Executors.newCachedThreadPool()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SegmentMetadataQuery query = Druids.newSegmentMetadataQueryBuilder().dataSource(\"testing\").intervals(\"2013/2014\").toInclude(new ListColumnIncluderator(Collections.singletonList(\"placement\"))).analysisTypes(SegmentMetadataQuery.AnalysisType.AGGREGATORS).merge(true).build()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "SegmentMetadataQuery query = Druids.newSegmentMetadataQueryBuilder().dataSource(\"testing\").intervals(\"2013/2014\").toInclude(new ListColumnIncluderator(Collections.singletonList(\"placement\"))).analysisTypes(SegmentMetadataQuery.AnalysisType.QUERYGRANULARITY).merge(true).build()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "QueryToolChest toolChest = FACTORY.getToolchest()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final Map<String,AggregatorFactory> expectedAggregators = Maps.newHashMap()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "TestHelper.assertExpectedObjects(ImmutableList.of(mergedSegmentAnalysis),myRunner.run(QueryPlus.wrap(query),new HashMap<>()),\"failed SegmentMetadata merging query\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "exec.shutdownNow()@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->6 [style = solid, label="toolChest"];
4->3 [style = bold, label=""];
16->13 [style = bold, label=""];
9->2 [style = bold, label=""];
13->18 [style = solid, label="toolChest"];
12->11 [style = bold, label=""];
3->6 [style = bold, label=""];
0->11 [style = dashed, label="0"];
1->0 [style = bold, label=""];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
15->16 [style = bold, label=""];
0->7 [style = solid, label="expectedAggregators"];
2->10 [style = dashed, label="0"];
9->2 [style = solid, label="query"];
14->4 [style = solid, label="query"];
11->5 [style = bold, label=""];
13->17 [style = bold, label=""];
16->4 [style = solid, label="mergedSegmentAnalysis"];
9->14 [style = dashed, label="0"];
10->8 [style = bold, label=""];
7->2 [style = solid, label="mergedSegmentAnalysis"];
7->10 [style = solid, label="mergedSegmentAnalysis"];
9->10 [style = solid, label="query"];
5->7 [style = bold, label=""];
6->9 [style = bold, label=""];
18->14 [style = bold, label=""];
11->7 [style = solid, label="expectedAggregators"];
17->18 [style = bold, label=""];
2->8 [style = bold, label=""];
0->5 [style = bold, label=""];
14->4 [style = bold, label=""];
}
