digraph {
4 [style = filled, label = "testRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertClusterHealthStatus(allocation,ClusterHealthStatus.YELLOW)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RoutingAllocation allocation = getRestoreRoutingAllocation(yesAllocationDeciders(),\"allocId\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertThat(allocation.routingNodes().shardsWithState(ShardRoutingState.INITIALIZING).size(),equalTo(1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(allocation.routingNodesChanged(),equalTo(true))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testAllocator.addData(node1,\"some allocId\",randomBoolean())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "RoutingAllocation allocation = getRestoreRoutingAllocation(yesAllocationDeciders(),randomLong(),\"allocId\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testAllocator.addData(node1,\"allocId1\",randomBoolean(),new ShardLockObtainFailedException(shardId,\"test\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(allocation.routingNodes().unassigned().ignored().isEmpty(),equalTo(true))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(allocation.routingNodes().shardsWithState(ShardRoutingState.INITIALIZING).get(0).allocationId().getId(),equalTo(\"allocId1\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "allocateAllUnassigned(allocation)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testShardLockObtainFailedException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final RoutingAllocation allocation = routingAllocationWithOnePrimaryNoReplicas(yesAllocationDeciders(),CLUSTER_RECOVERED,\"allocId1\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(allocation.routingNodes().shardsWithState(ShardRoutingState.INITIALIZING).get(0).currentNodeId(),equalTo(node1.getId()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
14->3 [style = bold, label=""];
0->13 [style = bold, label=""];
8->3 [style = solid, label="allocation"];
8->1 [style = solid, label="allocation"];
12->11 [style = bold, label=""];
5->1 [style = solid, label="allocation"];
5->3 [style = solid, label="allocation"];
7->0 [style = bold, label=""];
8->6 [style = bold, label=""];
9->8 [style = bold, label=""];
6->10 [style = dashed, label="0"];
6->1 [style = bold, label=""];
5->6 [style = bold, label=""];
5->11 [style = dashed, label="0"];
11->10 [style = bold, label=""];
5->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
11->3 [style = solid, label="allocation"];
2->7 [style = bold, label=""];
10->1 [style = bold, label=""];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
11->1 [style = solid, label="allocation"];
}
