digraph {
3 [style = filled, label = "throw new IllegalArgumentException(\"addRepeatedField() can only be called on repeated fields.\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "list = new ArrayList<Object>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "addRepeatedField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final Object value@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "addRepeatedField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "fields.put(descriptor,list)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "list = new ArrayList<>()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final T descriptor@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "!descriptor.isRepeated()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "list = (List<Object>)existingValue@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "list.add(value)@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Object value@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "verifyType(descriptor.getLiteType(),value)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "addRepeatedField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "verifyType(descriptor,value)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "ensureIsMutable()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<Object> list@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Object existingValue = getField(descriptor)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "hasNestedBuilders = hasNestedBuilders || value instanceof MessageLite.Builder@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "existingValue == null@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final T descriptor@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13->15 [style = solid, label="value"];
8->15 [style = bold, label=""];
16->8 [style = bold, label=""];
18->1 [style = solid, label="value"];
0->10 [style = solid, label="descriptor"];
12->6 [style = dotted, label="false"];
8->3 [style = bold, label=""];
13->1 [style = solid, label="value"];
19->10 [style = bold, label=""];
3->15 [style = bold, label=""];
19->10 [style = solid, label="list"];
11->4 [style = dotted, label="true"];
9->10 [style = bold, label=""];
12->9 [style = bold, label=""];
12->6 [style = bold, label=""];
9->10 [style = solid, label="list"];
18->7 [style = solid, label="value"];
8->3 [style = dotted, label="true"];
14->13 [style = dotted, label="true"];
2->12 [style = bold, label=""];
8->7 [style = bold, label=""];
15->5 [style = bold, label=""];
4->15 [style = solid, label="descriptor"];
0->5 [style = solid, label="descriptor"];
17->7 [style = bold, label=""];
8->17 [style = bold, label=""];
9->19 [style = dashed, label="0"];
6->1 [style = bold, label=""];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
20->16 [style = bold, label=""];
4->10 [style = solid, label="descriptor"];
12->10 [style = dotted, label="true"];
3->7 [style = bold, label=""];
12->19 [style = dotted, label="true"];
20->4 [style = dotted, label="true"];
11->0 [style = dotted, label="true"];
20->18 [style = dotted, label="true"];
7->15 [style = dashed, label="0"];
4->7 [style = solid, label="value"];
5->12 [style = solid, label="existingValue"];
11->8 [style = bold, label=""];
18->17 [style = solid, label="value"];
3->17 [style = bold, label=""];
14->8 [style = bold, label=""];
4->5 [style = solid, label="descriptor"];
12->19 [style = bold, label=""];
14->4 [style = dotted, label="true"];
10->1 [style = bold, label=""];
4->1 [style = solid, label="value"];
5->6 [style = solid, label="existingValue"];
12->9 [style = dotted, label="true"];
}
