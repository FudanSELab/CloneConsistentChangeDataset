digraph {
8 [style = filled, label = "Release anotherRelease = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int i = 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i++@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testFindLatestActiveReleaseWithIrrelevantMessages['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verify(releaseMessageService,times(1)).findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(someRelease,anotherRelease)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "when(releaseService.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)).thenReturn(anotherRelease)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "Release anotherRelease = mock()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "testFindLatestActiveRelease['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "when(anotherReleaseMessage.getId()).thenReturn(someNewNotificationId)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "verify(releaseService,times(1)).findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String someIrrelevantKey = \"someIrrelevantKey\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "long someNewNotificationId = someNotificationId + 1@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Release release = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ReleaseMessage anotherReleaseMessage = mock()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "when(releaseMessageService.findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))).thenReturn(anotherReleaseMessage)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "i < retryTimes@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "someNotificationMessages.put(someIrrelevantKey,someNewNotificationId)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "when(releaseMessageService.findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))).thenReturn(someReleaseMessage)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testFindLatestActiveReleaseWithIrrelevantMessages['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertEquals(someRelease,release)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Release shouldStillBeOldRelease = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "verify(releaseMessageService,times(1)).findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(someRelease,stillOldRelease)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "when(someReleaseMessage.getId()).thenReturn(someNotificationId)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "verify(releaseService,times(1)).findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "when(releaseService.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)).thenReturn(someRelease)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Release stillOldRelease = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int retryTimes = 100@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(someRelease,shouldStillBeOldRelease)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(someRelease,release)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25->31 [style = solid, label="release"];
22->26 [style = bold, label=""];
13->9 [style = solid, label="release"];
2->19 [style = bold, label=""];
1->8 [style = bold, label=""];
13->28 [style = dotted, label="true"];
12->5 [style = bold, label=""];
29->30 [style = bold, label=""];
17->23 [style = solid, label="i"];
3->21 [style = dashed, label="0"];
16->6 [style = bold, label=""];
4->12 [style = solid, label="someNewNotificationId"];
11->13 [style = solid, label="retryTimes"];
1->16 [style = solid, label="someIrrelevantKey"];
30->25 [style = bold, label=""];
5->3 [style = solid, label="stillOldRelease"];
31->21 [style = bold, label=""];
24->29 [style = bold, label=""];
13->23 [style = dotted, label="true"];
4->0 [style = bold, label=""];
20->4 [style = bold, label=""];
5->16 [style = bold, label=""];
6->28 [style = dashed, label="0"];
18->1 [style = bold, label=""];
3->7 [style = bold, label=""];
17->13 [style = solid, label="i"];
23->13 [style = bold, label=""];
28->23 [style = bold, label=""];
7->2 [style = bold, label=""];
21->22 [style = bold, label=""];
6->7 [style = solid, label="shouldStillBeOldRelease"];
8->21 [style = solid, label="anotherRelease"];
23->13 [style = solid, label="i"];
13->5 [style = bold, label=""];
10->4 [style = bold, label=""];
9->3 [style = bold, label=""];
11->17 [style = bold, label=""];
0->18 [style = bold, label=""];
14->15 [style = bold, label=""];
17->13 [style = bold, label=""];
15->12 [style = bold, label=""];
4->1 [style = bold, label=""];
25->8 [style = bold, label=""];
13->31 [style = bold, label=""];
27->24 [style = bold, label=""];
6->9 [style = bold, label=""];
0->14 [style = solid, label="anotherReleaseMessage"];
8->11 [style = bold, label=""];
13->14 [style = bold, label=""];
18->15 [style = solid, label="anotherRelease"];
4->16 [style = solid, label="someNewNotificationId"];
13->28 [style = bold, label=""];
}
