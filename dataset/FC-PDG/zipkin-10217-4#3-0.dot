digraph {
5 [style = filled, label = "Span span3 = span1.toBuilder().traceId(\"1\" + span1.traceId()).putTag(\"foo\",\"3\").build()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Span span1 = Span.newBuilder().traceId(CLIENT_SPAN.traceId().substring(16)).id(\"1\").name(\"1\").putTag(\"foo\",\"1\").timestamp(TODAY * 1000L).localEndpoint(FRONTEND).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Span span2 = span1.toBuilder().traceId(CLIENT_SPAN.traceId()).putTag(\"foo\",\"2\").build()@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String testSuffix = testSuffix(testInfo)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "TestInfo testInfo@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Span span3 = span1.toBuilder().traceId(\"1\" + span1.traceId()).name(\"3\").putTag(\"foo\",\"3\").build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "accept(span1,span2,span3)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "getTraces_considersBitsAbove64bit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Span span2 = span1.toBuilder().traceId(traceId).putTag(\"foo\",\"2\").build()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Span span1 = Span.newBuilder().traceId(CLIENT_SPAN.traceId().substring(16)).id(\"1\").putTag(\"foo\",\"1\").timestamp(TODAY * 1000L).localEndpoint(FRONTEND).build()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Span span1 = Span.newBuilder().traceId(traceId.substring(16)).id(\"1\").putTag(\"foo\",\"1\").timestamp(TODAY * 1000L).localEndpoint(frontend).build()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Span span2 = span1.toBuilder().traceId(CLIENT_SPAN.traceId()).name(\"2\").putTag(\"foo\",\"2\").build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertGetTracesReturns(requestBuilder().serviceName(frontend.serviceName()).parseAnnotationQuery(\"foo=\" + span.tags().get(\"foo\")).build(),asList(span))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Endpoint frontend = suffixServiceName(TestObjects.FRONTEND,testSuffix)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Span span3 = span1.toBuilder().traceId(\"1\" + span1.traceId()).putTag(\"foo\",\"3\").build()@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String traceId = newTraceId()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "return new ArrayList<>(asList(asList(span1),asList(span2),asList(span3)))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "accept(span1,span2,span3)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "getTraces_considersBitsAbove64bit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "traces['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
5->13 [style = dashed, label="0"];
5->7 [style = solid, label="span3"];
10->6 [style = dotted, label="true"];
16->18 [style = bold, label=""];
9->11 [style = bold, label=""];
12->5 [style = bold, label=""];
11->14 [style = bold, label=""];
0->19 [style = dashed, label="0"];
6->9 [style = solid, label="testInfo"];
16->19 [style = solid, label="span1"];
18->15 [style = bold, label=""];
3->16 [style = dashed, label="0"];
1->3 [style = bold, label=""];
12->7 [style = solid, label="span2"];
8->7 [style = solid, label="span1"];
15->19 [style = bold, label=""];
3->0 [style = solid, label="span1"];
2->4 [style = bold, label=""];
4->0 [style = bold, label=""];
15->19 [style = solid, label="span3"];
9->14 [style = solid, label="testSuffix"];
3->2 [style = bold, label=""];
2->0 [style = solid, label="span2"];
4->15 [style = dashed, label="0"];
2->18 [style = dashed, label="0"];
5->7 [style = bold, label=""];
14->8 [style = bold, label=""];
10->9 [style = bold, label=""];
18->19 [style = solid, label="span2"];
8->12 [style = bold, label=""];
17->16 [style = bold, label=""];
4->0 [style = solid, label="span3"];
0->5 [style = bold, label=""];
}
