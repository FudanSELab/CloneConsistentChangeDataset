digraph {
25 [style = filled, label = "Collection<ExecutionUnit> actual = ExecutionContextBuilder.build(metaData,new RouteSQLRewriteResult(sqlRewriteUnits),mock())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(actual.iterator().next().getSqlUnit().getSqlRuntimeContext().getPrimaryKeysMetaData().size(),is(1))@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expected.add(expectedUnit2)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RouteUnit routeUnit1 = new RouteUnit(new RouteMapper(\"logicName1\",\"actualName1\"),Collections.singletonList(new RouteMapper(\"logicName1\",\"actualName1\")))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(actual.iterator().next().getSqlUnit().getSqlRuntimeContext().getPrimaryKeysMetaData().size(),is(0))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(actual,is(expected))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SQLRewriteUnit sqlRewriteUnit2 = new SQLRewriteUnit(\"sql2\",Collections.singletonList(\"parameter2\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Collection<ExecutionUnit> expected = new LinkedHashSet<>(1,1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertBuildRouteSQLRewriteResult['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ExecutionUnit expectedUnit2 = new ExecutionUnit(\"actualName2\",new SQLUnit(\"sql2\",Collections.singletonList(\"parameter2\")))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(actual,is(expected))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SQLRewriteUnit sqlRewriteUnit1 = new SQLRewriteUnit(\"sql1\",Collections.singletonList(\"parameter1\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ExecutionUnit expectedUnit2 = new ExecutionUnit(\"actualName2\",new SQLUnit(\"sql2\",Collections.singletonList(\"parameter2\")))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expected.add(expectedUnit2)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RouteUnit routeUnit2 = new RouteUnit(new RouteMapper(\"logicName2\",\"actualName2\"),Collections.singletonList(new RouteMapper(\"logicName2\",\"actualName2\")))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "sqlRewriteUnits.put(routeUnit1,sqlRewriteUnit1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RouteUnit routeUnit2 = new RouteUnit(new RouteMapper(\"logicName2\",\"actualName2\"),Collections.singletonList(new RouteMapper(\"logicName1\",\"actualName1\")))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ShardingSphereMetaData metaData = new ShardingSphereMetaData(mock(),ruleSchemaMetaData,mock())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ShardingSphereMetaData metaData = new ShardingSphereMetaData(mock(),buildRuleSchemaMetaData(),mock())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "ShardingSphereMetaData metaData = new ShardingSphereMetaData(mock(),buildLogicSchemaMetaData(),mock())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "expected.add(expectedUnit1)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "sqlRewriteUnits.put(routeUnit2,sqlRewriteUnit2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Map<RouteUnit,SQLRewriteUnit> sqlRewriteUnits = new HashMap<>(2,1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Collection<ExecutionUnit> actual = ExecutionContextBuilder.build(metaData,new RouteSQLRewriteResult(sqlRewriteUnits),mock())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertBuildRouteSQLRewriteResult['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertBuildRouteSQLRewriteResultWithEmptyPrimaryKeyMeta['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "RuleSchemaMetaData ruleSchemaMetaData = buildRuleSchemaMetaDataWithoutPrimaryKey()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
11->16 [style = bold, label=""];
18->10 [style = solid, label="metaData"];
19->8 [style = solid, label="sqlRewriteUnit2"];
4->18 [style = dashed, label="0"];
15->2 [style = bold, label=""];
23->20 [style = bold, label=""];
14->25 [style = bold, label=""];
6->26 [style = bold, label=""];
16->12 [style = solid, label="routeUnit1"];
14->25 [style = solid, label="metaData"];
7->12 [style = solid, label="sqlRewriteUnit1"];
16->7 [style = bold, label=""];
1->3 [style = bold, label=""];
21->8 [style = bold, label=""];
25->26 [style = solid, label="actual"];
13->26 [style = solid, label="expected"];
7->0 [style = bold, label=""];
3->15 [style = bold, label=""];
24->13 [style = bold, label=""];
26->22 [style = bold, label=""];
20->8 [style = solid, label="routeUnit2"];
0->14 [style = solid, label="routeUnit2"];
9->10 [style = solid, label="sqlRewriteUnits"];
9->14 [style = solid, label="ruleSchemaMetaData"];
6->1 [style = bold, label=""];
25->24 [style = bold, label=""];
16->20 [style = dashed, label="0"];
6->13 [style = dashed, label="0"];
5->6 [style = bold, label=""];
18->10 [style = bold, label=""];
10->13 [style = bold, label=""];
21->25 [style = solid, label="sqlRewriteUnits"];
24->6 [style = solid, label="expectedUnit2"];
6->15 [style = solid, label="expected"];
12->14 [style = bold, label=""];
0->8 [style = bold, label=""];
8->9 [style = bold, label=""];
13->5 [style = bold, label=""];
9->14 [style = bold, label=""];
8->14 [style = solid, label="sqlRewriteUnit2"];
5->3 [style = solid, label="expectedUnit2"];
14->18 [style = bold, label=""];
9->12 [style = bold, label=""];
13->6 [style = bold, label=""];
20->19 [style = bold, label=""];
2->22 [style = dashed, label="0"];
4->10 [style = solid, label="metaData"];
13->1 [style = solid, label="expectedUnit1"];
17->16 [style = bold, label=""];
14->4 [style = bold, label=""];
10->15 [style = solid, label="actual"];
19->21 [style = bold, label=""];
}
