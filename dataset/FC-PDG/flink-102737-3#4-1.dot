digraph {
8 [style = filled, label = "EventTimeSessionWindows assigner = EventTimeSessionWindows.withGap(Time.milliseconds(sessionGap))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "EventTimeSessionWindows assigner = EventTimeSessionWindows.withGap(Time.seconds(SESSION_GAP / 1000))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(assigner.assignWindows(\"String\",0L,mockContext),contains(timeWindow(0,0 + sessionGap)))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(assigner.assignWindows(\"String\",4999L,mockContext),contains(timeWindow(4999,4999 + sessionGap)))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "EventTimeSessionWindows assigner = EventTimeSessionWindows.withGap(Time.milliseconds(SESSION_GAP))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "testTimeUnits['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(assigner.assignWindows(\"String\",5000L,mockContext),contains(timeWindow(5000,5000 + sessionGap)))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testWindowAssignment['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final int sessionGap = 5000@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testWindowAssignment['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "WindowAssigner.WindowAssignerContext mockContext = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(assigner.assignWindows(\"String\",4999L,mockContext),contains(timeWindow(4999,4999 + SESSION_GAP)))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final int SESSION_GAP = 5000@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(assigner.assignWindows(\"String\",0L,mockContext),contains(timeWindow(0,0 + SESSION_GAP)))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(assigner.assignWindows(\"String\",5000L,mockContext),contains(timeWindow(5000,5000 + SESSION_GAP)))@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2->4 [style = solid, label="mockContext"];
4->3 [style = bold, label=""];
2->9 [style = solid, label="mockContext"];
7->10 [style = bold, label=""];
2->1 [style = bold, label=""];
11->9 [style = solid, label="sessionGap"];
12->11 [style = bold, label=""];
5->0 [style = solid, label="SESSION_GAP"];
1->0 [style = bold, label=""];
11->7 [style = solid, label="sessionGap"];
11->8 [style = solid, label="sessionGap"];
2->0 [style = solid, label="mockContext"];
11->2 [style = bold, label=""];
8->7 [style = bold, label=""];
2->13 [style = bold, label=""];
1->13 [style = dashed, label="0"];
2->10 [style = solid, label="mockContext"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
2->3 [style = solid, label="mockContext"];
2->7 [style = solid, label="mockContext"];
5->11 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
0->4 [style = bold, label=""];
11->10 [style = solid, label="sessionGap"];
1->8 [style = dashed, label="0"];
10->9 [style = bold, label=""];
4->10 [style = dashed, label="0"];
5->1 [style = solid, label="SESSION_GAP"];
0->7 [style = dashed, label="0"];
5->13 [style = solid, label="SESSION_GAP"];
5->4 [style = solid, label="SESSION_GAP"];
2->8 [style = bold, label=""];
13->0 [style = bold, label=""];
14->5 [style = bold, label=""];
5->3 [style = solid, label="SESSION_GAP"];
}
