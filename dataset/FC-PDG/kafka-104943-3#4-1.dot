digraph {
8 [style = filled, label = "assertEquals(connectorDescPluginPath.hashCode(),connectorDescClasspath.hashCode())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "PluginDesc<Connector> connectorDescClasspath = new PluginDesc<>(,snaphotVersion,systemLoader)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(converterDescPluginPath.hashCode(),converterDescClasspath.hashCode())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNotEquals(transformDescPluginPath,transformDescClasspath)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testPluginDescEquality['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "PluginDesc<Transformation> transformDescClasspath = new PluginDesc<>(,noVersion,pluginLoader)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(connectorDescPluginPath,connectorDescClasspath)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "PluginDesc<Transformation> transformDescClasspath = new PluginDesc<>(,regularVersion,systemLoader)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "PluginDesc<Transformation> transformDescPluginPath = new PluginDesc<>(,null,pluginLoader)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "PluginDesc<Converter> converterDescPluginPath = new PluginDesc<>(,noVersion,pluginLoader)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(converterDescPluginPath,converterDescClasspath)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "PluginDesc<Connector> connectorDescClasspath = new PluginDesc<>(,newerVersion,systemLoader)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "PluginDesc<Connector> connectorDescPluginPath = new PluginDesc<>(,regularVersion,pluginLoader)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PluginDesc<Converter> converterDescClasspath = new PluginDesc<>(,snaphotVersion,systemLoader)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "PluginDesc<Converter> converterDescClasspath = new PluginDesc<>(,noVersion,systemLoader)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertNewer(connectorDescPluginPath,connectorDescClasspath)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testPluginDescComparison['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testPluginDescEquality['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertNewer(converterDescPluginPath,converterDescClasspath)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "PluginDesc<Connector> connectorDescPluginPath = new PluginDesc<>(,snaphotVersion,pluginLoader)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNewer(transformDescPluginPath,transformDescClasspath)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
16->15 [style = bold, label=""];
5->9 [style = solid, label="connectorDescPluginPath"];
0->11 [style = solid, label="transformDescClasspath"];
3->4 [style = solid, label="converterDescPluginPath"];
15->19 [style = solid, label="connectorDescPluginPath"];
12->5 [style = bold, label=""];
11->7 [style = dashed, label="0"];
10->3 [style = dashed, label="0"];
8->3 [style = bold, label=""];
0->11 [style = bold, label=""];
3->13 [style = solid, label="converterDescClasspath"];
7->0 [style = bold, label=""];
4->2 [style = bold, label=""];
7->11 [style = solid, label="transformDescPluginPath"];
9->8 [style = bold, label=""];
20->19 [style = solid, label="connectorDescClasspath"];
1->9 [style = bold, label=""];
1->20 [style = dashed, label="0"];
9->19 [style = dashed, label="0"];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
13->17 [style = bold, label=""];
10->4 [style = solid, label="converterDescClasspath"];
19->14 [style = bold, label=""];
14->13 [style = solid, label="converterDescPluginPath"];
15->20 [style = bold, label=""];
1->9 [style = solid, label="connectorDescClasspath"];
10->4 [style = bold, label=""];
3->13 [style = bold, label=""];
0->18 [style = dashed, label="0"];
18->7 [style = solid, label="transformDescClasspath"];
17->7 [style = solid, label="transformDescPluginPath"];
2->7 [style = bold, label=""];
18->7 [style = bold, label=""];
20->19 [style = bold, label=""];
5->15 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
17->18 [style = bold, label=""];
}
