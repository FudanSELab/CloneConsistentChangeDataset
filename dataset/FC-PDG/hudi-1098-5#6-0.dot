digraph {
18 [style = filled, label = "assertEquals(expected,got)@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String expected = HoodiePrintHelper.print(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@162c1ab,rows)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String expected = HoodiePrintHelper.print(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@162c24c,rows)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(fs.mkdirs(new Path(partition1)))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "cr = getShell().executeCommand(\"repair addpartitionmeta\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(expected,got)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "expected = removeNonWordAndStripSpace(expected)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String partition1 = tablePath + File.separator + HoodieTestDataGenerator.DEFAULT_FIRST_PARTITION_PATH@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expected = HoodiePrintHelper.print(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@162c28d,rows)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String partition2 = tablePath + File.separator + HoodieTestDataGenerator.DEFAULT_SECOND_PARTITION_PATH@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Files.createFile(Paths.get(tablePath + \"/.hoodie/100.commit\"))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(fs.mkdirs(new Path(partition3)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String got = removeNonWordAndStripSpace(cr.getResult().toString())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "got = removeNonWordAndStripSpace(cr.getResult().toString())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "String(((( rows = paths.stream().map(null).toArray(null)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "expected = removeNonWordAndStripSpace(expected)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testAddPartitionMetaWithDryRun['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String partition3 = tablePath + File.separator + HoodieTestDataGenerator.DEFAULT_THIRD_PARTITION_PATH@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(cr.isSuccess())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(fs.mkdirs(new Path(partition2)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "CommandResult cr = getShell().executeCommand(\"repair addpartitionmeta --dryrun false\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String(((( rows = FSUtils.getAllPartitionFoldersThreeLevelsDown(fs,tablePath).stream().map(null).toArray(null)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expected = removeNonWordAndStripSpace(expected)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "rows = paths.stream().map(null).toArray(null)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "CommandResult cr = getShell().executeCommand(\"repair addpartitionmeta\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testAddPartitionMetaWithDryRun['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "testAddPartitionMetaWithRealRun['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "List<String> paths = FSUtils.getAllPartitionFoldersThreeLevelsDown(fs,tablePath)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24->21 [style = bold, label=""];
12->25 [style = dashed, label="0"];
20->26 [style = solid, label="rows"];
3->14 [style = bold, label=""];
10->2 [style = bold, label=""];
17->27 [style = bold, label=""];
13->19 [style = bold, label=""];
5->7 [style = solid, label="partition2"];
12->9 [style = solid, label="rows"];
26->14 [style = solid, label="expected"];
2->7 [style = bold, label=""];
23->1 [style = bold, label=""];
22->6 [style = bold, label=""];
16->17 [style = solid, label="expected"];
1->12 [style = bold, label=""];
25->20 [style = bold, label=""];
10->4 [style = solid, label="partition3"];
21->16 [style = bold, label=""];
6->0 [style = bold, label=""];
17->18 [style = solid, label="expected"];
9->3 [style = bold, label=""];
14->13 [style = bold, label=""];
4->8 [style = bold, label=""];
19->24 [style = bold, label=""];
11->6 [style = bold, label=""];
5->10 [style = bold, label=""];
26->14 [style = bold, label=""];
1->25 [style = bold, label=""];
15->6 [style = bold, label=""];
9->3 [style = solid, label="expected"];
14->13 [style = solid, label="got"];
21->16 [style = solid, label="rows"];
8->1 [style = bold, label=""];
12->9 [style = bold, label=""];
8->23 [style = dashed, label="0"];
7->4 [style = bold, label=""];
0->2 [style = solid, label="partition1"];
27->18 [style = bold, label=""];
4->23 [style = bold, label=""];
13->19 [style = solid, label="got"];
14->19 [style = solid, label="expected"];
16->17 [style = bold, label=""];
0->5 [style = bold, label=""];
20->26 [style = bold, label=""];
27->18 [style = solid, label="got"];
3->13 [style = solid, label="expected"];
}
