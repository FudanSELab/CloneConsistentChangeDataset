digraph {
5 [style = filled, label = "header = parseHeader(buffer)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(1,selector.completedSends().size())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "delayedApiVersionsResponse(0,(short)0,new ApiVersionsResponse(new ApiVersionsResponseData().setErrorCode(Errors.UNSUPPORTED_VERSION.code()).setApiKeys(apiKeys)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ByteBuffer buffer = selector.completedSendBuffers().get(0).buffer()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(1,selector.completedReceives().size())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testUnsupportedApiVersionsRequestWithVersionProvidedByTheBroker['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(1,selector.completedSends().size())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(client.isReady(node,time.milliseconds()))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RequestHeader header = parseHeader(buffer)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(ApiKeys.API_VERSIONS,header.apiKey())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "apiKeys.add(new ApiVersionsResponseKey().setApiKey(ApiKeys.API_VERSIONS.id).setMinVersion((short)0).setMaxVersion((short)2))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(2,header.apiVersion())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ApiVersionCollection apiKeys = new ApiVersionCollection()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "client.poll(0,time.milliseconds())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "apiKeys.add(new ApiVersion().setApiKey(ApiKeys.API_VERSIONS.id).setMinVersion((short)0).setMaxVersion((short)2))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "client.ready(node,time.milliseconds())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "client.poll(0,time.milliseconds())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testUnsupportedApiVersionsRequestWithVersionProvidedByTheBroker['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertTrue(client.hasInFlightRequests(node.idString()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.poll(0,time.milliseconds())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "delayedApiVersionsResponse(0,ApiKeys.API_VERSIONS.latestVersion(),ApiVersionsResponse.DEFAULT_API_VERSIONS_RESPONSE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "selector.completedSends().clear()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1,selector.completedReceives().size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "selector.completedReceives().clear()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ApiVersionsResponseKeyCollection apiKeys = new ApiVersionsResponseKeyCollection()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(3,header.apiVersion())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testApiVersionsRequest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(ApiKeys.API_VERSIONS,header.apiKey())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "selector.completedSendBuffers().clear()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "buffer = selector.completedSendBuffers().get(0).buffer()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "client.poll(0,time.milliseconds())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(client.hasInFlightRequests(node.idString()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(client.hasInFlightRequests(node.idString()))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "delayedApiVersionsResponse(1,(short)0,ApiVersionsResponse.DEFAULT_API_VERSIONS_RESPONSE)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "client.poll(0,time.milliseconds())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
27->13 [style = bold, label=""];
11->28 [style = bold, label=""];
22->26 [style = bold, label=""];
9->17 [style = solid, label="buffer"];
17->5 [style = bold, label=""];
1->8 [style = bold, label=""];
33->20 [style = bold, label=""];
5->23 [style = bold, label=""];
28->30 [style = bold, label=""];
21->15 [style = bold, label=""];
9->4 [style = bold, label=""];
2->32 [style = dashed, label="0"];
18->19 [style = bold, label=""];
30->32 [style = bold, label=""];
3->33 [style = bold, label=""];
34->8 [style = bold, label=""];
28->12 [style = bold, label=""];
32->16 [style = bold, label=""];
12->30 [style = dashed, label="0"];
19->6 [style = bold, label=""];
25->17 [style = bold, label=""];
29->21 [style = bold, label=""];
15->22 [style = bold, label=""];
15->26 [style = bold, label=""];
8->0 [style = bold, label=""];
6->27 [style = bold, label=""];
12->2 [style = bold, label=""];
3->20 [style = bold, label=""];
12->16 [style = solid, label="apiKeys"];
10->29 [style = bold, label=""];
9->4 [style = solid, label="buffer"];
13->7 [style = bold, label=""];
23->10 [style = bold, label=""];
30->16 [style = solid, label="apiKeys"];
16->14 [style = bold, label=""];
17->5 [style = solid, label="buffer"];
14->18 [style = bold, label=""];
7->25 [style = bold, label=""];
20->24 [style = bold, label=""];
4->11 [style = bold, label=""];
20->15 [style = bold, label=""];
31->8 [style = bold, label=""];
24->9 [style = bold, label=""];
2->16 [style = bold, label=""];
}
