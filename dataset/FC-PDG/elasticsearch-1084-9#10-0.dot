digraph {
2 [style = filled, label = "task = new PersistentTask<>(task,new GeoIpTaskState(Map.of(\"GeoIP2-City.mmdb\",new GeoIpTaskState.Metadata(System.currentTimeMillis(),5,14,md5))))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "tasksCustomMetadata = new PersistentTasksCustomMetadata(1L,Map.of(taskId,task))@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "PersistentTasksCustomMetadata tasksCustomMetadata = new PersistentTasksCustomMetadata(1L,Map.of(taskId,task))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expectThrows(,null)@@@24@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "databaseRegistry.checkDatabases(state)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "task = new PersistentTask<>(task,new GeoIpTaskState(Map.of(\"GeoIP2-City.mmdb\",new GeoIpTaskState.Metadata(10L,5,14,md5))))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "state = ClusterState.builder(new ClusterName(\"name\")).metadata(Metadata.builder().putCustom(TYPE,tasksCustomMetadata).build()).nodes(new DiscoveryNodes.Builder().add(new DiscoveryNode(\"_id1\",buildNewFakeTransportAddress(),Version.CURRENT)).localNodeId(\"_id1\")).routingTable(createIndexRoutingTable()).build()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "verify(client,times(10)).search(any())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "task = new PersistentTask<>(task,new GeoIpTaskState(Map.of(\"GeoIP2-City.mmdb\",new GeoIpTaskState.Metadata(10,5,14,md5,10))))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testCheckDatabases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testCheckDatabases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "String md5 = mockSearches(\"GeoIP2-City.mmdb\",0,9)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "databaseRegistry.checkDatabases(state)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "database = databaseRegistry.getDatabase(\"GeoIP2-City.mmdb\",false)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "expectThrows(,null)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertThat(database,nullValue())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "task = new PersistentTask<>(task,new GeoIpTaskState(Map.of(\"GeoIP2-City.mmdb\",new GeoIpTaskState.Metadata(0L,0,9,md5))))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(databaseRegistry.getDatabase(\"GeoIP2-City.mmdb\",false),nullValue())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String taskId = GeoIpDownloader.GEOIP_DOWNLOADER@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(0,files.count())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "verify(client,times(10)).search(any())@@@23@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "IllegalStateException e = expectThrows(,null)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "PersistentTask<?> task = new PersistentTask<>(taskId,GeoIpDownloader.GEOIP_DOWNLOADER,new GeoIpTaskParams(),1,null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DatabaseReaderLazyLoader database = databaseRegistry.getDatabase(\"GeoIP2-City.mmdb\",false)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testCheckDatabases_dontCheckDatabaseWhenNoDatabasesIndex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(\"database (GeoIP2-City.mmdb( was not updated for 30 days and is disabled\",e.getMessage())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertThat(database,notNullValue())@@@22@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertThat(files.collect(Collectors.toList()),hasSize(1))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ClusterState state = ClusterState.builder(new ClusterName(\"name\")).metadata(Metadata.builder().putCustom(TYPE,tasksCustomMetadata).build()).nodes(new DiscoveryNodes.Builder().add(new DiscoveryNode(\"_id1\",buildNewFakeTransportAddress(),Version.CURRENT)).localNodeId(\"_id1\")).routingTable(createIndexRoutingTable()).build()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(databaseRegistry.getDatabase(\"GeoIP2-City.mmdb\",false),nullValue())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(database,notNullValue())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "ClusterState state = ClusterState.builder(new ClusterName(\"name\")).metadata(Metadata.builder().putCustom(TYPE,tasksCustomMetadata).build()).nodes(new DiscoveryNodes.Builder().add(new DiscoveryNode(\"_id1\",buildNewFakeTransportAddress(),Version.CURRENT)).localNodeId(\"_id1\")).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "verify(client,times(0)).search(any())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "String md5 = mockSearches(\"GeoIP2-City.mmdb\",5,14)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(files.collect(Collectors.toList()),empty())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "verify(client,never()).search(any())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "task = new PersistentTask<>(task,new GeoIpTaskState(Map.of(\"GeoIP2-City.mmdb\",new GeoIpTaskState.Metadata(10,5,14,md5,System.currentTimeMillis()))))@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32->35 [style = bold, label=""];
15->23 [style = solid, label="md5"];
6->21 [style = dashed, label="0"];
23->25 [style = bold, label=""];
15->34 [style = dashed, label="0"];
2->19 [style = bold, label=""];
13->32 [style = bold, label=""];
16->32 [style = dashed, label="0"];
12->5 [style = bold, label=""];
12->28 [style = bold, label=""];
11->3 [style = solid, label="taskId"];
7->12 [style = bold, label=""];
3->31 [style = bold, label=""];
15->6 [style = solid, label="md5"];
34->31 [style = solid, label="md5"];
31->13 [style = bold, label=""];
32->35 [style = solid, label="state"];
3->6 [style = bold, label=""];
6->2 [style = solid, label="task"];
6->31 [style = dashed, label="0"];
4->29 [style = bold, label=""];
5->18 [style = bold, label=""];
30->34 [style = bold, label=""];
11->25 [style = solid, label="taskId"];
24->22 [style = bold, label=""];
36->33 [style = bold, label=""];
1->7 [style = bold, label=""];
22->23 [style = bold, label=""];
13->16 [style = bold, label=""];
34->11 [style = bold, label=""];
21->23 [style = solid, label="task"];
9->14 [style = solid, label="database"];
11->13 [style = solid, label="taskId"];
16->7 [style = solid, label="state"];
3->21 [style = solid, label="task"];
23->25 [style = solid, label="task"];
25->27 [style = bold, label=""];
12->5 [style = solid, label="database"];
0->10 [style = bold, label=""];
27->19 [style = solid, label="state"];
31->13 [style = solid, label="task"];
5->28 [style = dashed, label="0"];
15->11 [style = bold, label=""];
10->8 [style = bold, label=""];
8->2 [style = bold, label=""];
16->1 [style = bold, label=""];
11->3 [style = bold, label=""];
19->9 [style = bold, label=""];
21->13 [style = solid, label="task"];
2->19 [style = solid, label="task"];
6->13 [style = bold, label=""];
15->21 [style = solid, label="md5"];
0->33 [style = dashed, label="0"];
11->19 [style = solid, label="taskId"];
26->15 [style = bold, label=""];
4->20 [style = bold, label=""];
17->15 [style = bold, label=""];
9->14 [style = bold, label=""];
28->24 [style = bold, label=""];
3->21 [style = bold, label=""];
18->24 [style = dashed, label="0"];
3->31 [style = solid, label="task"];
27->19 [style = bold, label=""];
12->7 [style = dashed, label="0"];
12->28 [style = solid, label="database"];
15->2 [style = solid, label="md5"];
9->14 [style = solid, label="state"];
35->7 [style = bold, label=""];
18->0 [style = bold, label=""];
3->6 [style = solid, label="task"];
7->36 [style = bold, label=""];
6->13 [style = solid, label="task"];
21->13 [style = bold, label=""];
14->4 [style = bold, label=""];
}
