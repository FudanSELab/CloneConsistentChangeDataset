digraph {
15 [style = filled, label = "final KafkaSourceReaderMetrics kafkaSourceReaderMetrics = new KafkaSourceReaderMetrics(metricListener.getMetricGroup())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertCommittedOffset(BAR_0,18613L,metricListener)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "kafkaSourceReaderMetrics.registerTopicPartition(FOO_1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "kafkaSourceReaderMetrics.recordCommittedOffset(BAR_0,18613L)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(0L,metricListener.getCounter(KafkaSourceReaderMetrics.KAFKA_SOURCE_READER_METRIC_GROUP,KafkaSourceReaderMetrics.COMMITS_SUCCEEDED_METRIC_COUNTER).getCount())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "kafkaSourceReaderMetrics.recordCommittedOffset(FOO_1,18213L)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCommitOffsetTracking['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "kafkaSourceReaderMetrics.registerTopicPartition(BAR_1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertCurrentOffset(FOO_1,18213L,metricListener)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testCurrentOffsetTracking['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testCommitOffsetTracking['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "kafkaSourceReaderMetrics.recordCurrentOffset(FOO_1,18213L)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertCommittedOffset(FOO_0,15213L,metricListener)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertCommittedOffset(BAR_1,15513L,metricListener)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "kafkaSourceReaderMetrics.recordCurrentOffset(BAR_1,15513L)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertCommittedOffset(FOO_1,18213L,metricListener)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "kafkaSourceReaderMetrics.recordCommittedOffset(FOO_0,15213L)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "kafkaSourceReaderMetrics.recordCurrentOffset(BAR_0,18613L)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertCurrentOffset(BAR_0,18613L,metricListener)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertCurrentOffset(BAR_1,15513L,metricListener)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "kafkaSourceReaderMetrics.registerTopicPartition(FOO_0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1L,metricListener.getCounter(KafkaSourceReaderMetrics.KAFKA_SOURCE_READER_METRIC_GROUP,KafkaSourceReaderMetrics.COMMITS_SUCCEEDED_METRIC_COUNTER).getCount())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "kafkaSourceReaderMetrics.registerTopicPartition(BAR_0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(4L,metricListener.getCounter(KafkaSourceReaderMetrics.KAFKA_SOURCE_READER_METRIC_GROUP,KafkaSourceReaderMetrics.COMMITS_SUCCEEDED_METRIC_COUNTER).getCount())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "MetricListener metricListener = new MetricListener()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "kafkaSourceReaderMetrics.recordCurrentOffset(FOO_0,15213L)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "kafkaSourceReaderMetrics.recordSucceededCommit()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertCurrentOffset(FOO_0,15213L,metricListener)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "kafkaSourceReaderMetrics.recordCommittedOffset(BAR_1,15513L)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
5->8 [style = bold, label=""];
14->9 [style = solid, label="metricListener"];
9->24 [style = dashed, label="0"];
10->14 [style = bold, label=""];
21->27 [style = bold, label=""];
14->26 [style = solid, label="metricListener"];
20->26 [style = bold, label=""];
14->22 [style = solid, label="metricListener"];
3->18 [style = dashed, label="0"];
12->11 [style = bold, label=""];
2->27 [style = dashed, label="0"];
14->11 [style = solid, label="metricListener"];
14->28 [style = solid, label="metricListener"];
22->28 [style = bold, label=""];
14->12 [style = solid, label="metricListener"];
14->24 [style = solid, label="metricListener"];
16->19 [style = bold, label=""];
26->24 [style = bold, label=""];
24->22 [style = bold, label=""];
2->4 [style = bold, label=""];
11->18 [style = bold, label=""];
5->20 [style = dashed, label="0"];
23->14 [style = bold, label=""];
4->25 [style = dashed, label="0"];
11->28 [style = dashed, label="0"];
25->20 [style = bold, label=""];
1->6 [style = bold, label=""];
13->21 [style = dashed, label="0"];
11->3 [style = bold, label=""];
17->14 [style = bold, label=""];
0->1 [style = bold, label=""];
14->8 [style = solid, label="metricListener"];
15->0 [style = bold, label=""];
12->22 [style = dashed, label="0"];
8->9 [style = bold, label=""];
7->21 [style = bold, label=""];
14->15 [style = bold, label=""];
9->12 [style = bold, label=""];
6->7 [style = bold, label=""];
4->5 [style = bold, label=""];
27->25 [style = bold, label=""];
13->2 [style = bold, label=""];
8->26 [style = dashed, label="0"];
18->16 [style = bold, label=""];
}
