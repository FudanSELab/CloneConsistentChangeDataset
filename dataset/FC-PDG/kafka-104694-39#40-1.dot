digraph {
52 [style = filled, label = "worker.stop()@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "EasyMock.expectLastCall().andReturn()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "EasyMock.expectLastCall()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "expectNewWorkerTask()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "EasyMock.expectLastCall()@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "expectStopStorage()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "origProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testConverterOverrides['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "connProps.put(\"value.converter.extra.config\",\"bar\")@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "EasyMock.expect(plugins.newTask()).andReturn(task)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertStatistics(worker,0,0)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertNotNull(taskValueConverter)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "TaskConfig taskConfig = new TaskConfig(origProps)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "worker.stop()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "expectClusterId()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Map<String,String> origProps = new HashMap<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "plugins.connectorClass(.getName())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "expectTaskValueConverters(ClassLoaderUsage.CURRENT_CLASSLOADER,null)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "workerTask.removeMetrics()@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "expectTaskHeaderConverter(ClassLoaderUsage.CURRENT_CLASSLOADER,null)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "EasyMock.expect(workerTask.awaitStop(EasyMock.anyLong())).andReturn(true)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testCleanupTasksOnStop['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(2)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "expectFileConfigProvider()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "EasyMock.expect(workerTask.id()).andStubReturn(TASK_ID)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(Collections.emptySet(),worker.taskIds())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "worker.stopAndAwaitTask(TASK_ID)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertNotNull(taskHeaderConverter)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.expect(delegatingLoader.connectorLoader(.getName())).andReturn(pluginLoader)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expectTaskValueConverters(ClassLoaderUsage.PLUGINS,taskValueConverter)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "connProps.put(ConnectorConfig.VALUE_CONVERTER_CLASS_CONFIG,.getName())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "connProps.put(ConnectorConfig.KEY_CONVERTER_CLASS_CONFIG,.getName())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "PowerMock.verifyAll()@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "EasyMock.expectLastCall()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertStatistics(worker,0,0)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "worker.startTask(TASK_ID,ClusterConfigState.EMPTY,connProps,origProps,taskStatusListener,TargetState.STARTED)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "worker.startTask(TASK_ID,ClusterConfigState.EMPTY,anyConnectorConfigMap(),origProps,taskStatusListener,TargetState.STARTED)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "expectTaskHeaderConverter(ClassLoaderUsage.PLUGINS,taskHeaderConverter)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "connProps.put(\"key.converter.extra.config\",\"foo\")@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "PowerMock.verifyAll()@@@58@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "workerTask.stop()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(Collections.emptySet(),worker.taskIds())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "EasyMock.expect(executorService.submit(workerTask)).andReturn(null)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "EasyMock.expectLastCall()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testCleanupTasksOnStop['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "Map<String,String> connProps = anyConnectorConfigMap()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expectStartStorage()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "expectConverters()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(pluginLoader)).andReturn(delegatingLoader).times(2)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EasyMock.expect(task.version()).andReturn(\"1.0\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "workerTask.initialize(taskConfig)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "EasyMock.expect(plugins.delegatingLoader()).andReturn(delegatingLoader)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "expectTaskKeyConverters(ClassLoaderUsage.PLUGINS,taskKeyConverter)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertStatistics(worker,0,1)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "EasyMock.expect(workerTask.awaitStop(EasyMock.anyLong())).andStubReturn(true)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertStatistics(worker,0,0)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "worker.herder = herder@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertStatistics(worker,0,1)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(TASK_ID)),worker.taskIds())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "EasyMock.expect(workerTask.loader()).andReturn(pluginLoader)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertNotNull(taskKeyConverter)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore,executorService,noneConnectorClientConfigOverridePolicy)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertStatistics(worker,0,0)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "PowerMock.replayAll()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "worker.start()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectTaskKeyConverters(ClassLoaderUsage.CURRENT_CLASSLOADER,null)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50->26 [style = bold, label=""];
10->22 [style = bold, label=""];
4->10 [style = bold, label=""];
24->28 [style = bold, label=""];
41->0 [style = bold, label=""];
54->64 [style = bold, label=""];
17->46 [style = bold, label=""];
15->45 [style = bold, label=""];
64->52 [style = bold, label=""];
42->51 [style = solid, label="origProps"];
30->1 [style = bold, label=""];
36->41 [style = bold, label=""];
55->29 [style = bold, label=""];
47->48 [style = bold, label=""];
5->39 [style = bold, label=""];
57->51 [style = bold, label=""];
52->61 [style = bold, label=""];
7->19 [style = solid, label="worker"];
65->51 [style = solid, label="connProps"];
25->30 [style = bold, label=""];
56->60 [style = bold, label=""];
0->12 [style = bold, label=""];
61->62 [style = bold, label=""];
21->55 [style = dashed, label="0"];
8->3 [style = bold, label=""];
59->65 [style = bold, label=""];
16->26 [style = bold, label=""];
28->36 [style = solid, label="taskConfig"];
44->15 [style = bold, label=""];
53->58 [style = bold, label=""];
7->61 [style = solid, label="worker"];
9->17 [style = bold, label=""];
19->11 [style = bold, label=""];
63->56 [style = bold, label=""];
31->21 [style = bold, label=""];
51->53 [style = bold, label=""];
6->19 [style = bold, label=""];
7->4 [style = bold, label=""];
29->34 [style = bold, label=""];
42->24 [style = bold, label=""];
12->9 [style = bold, label=""];
32->2 [style = bold, label=""];
43->23 [style = bold, label=""];
66->54 [style = bold, label=""];
28->32 [style = bold, label=""];
7->14 [style = solid, label="worker"];
35->25 [style = bold, label=""];
3->35 [style = bold, label=""];
58->66 [style = bold, label=""];
42->28 [style = solid, label="origProps"];
20->40 [style = bold, label=""];
1->33 [style = bold, label=""];
38->18 [style = bold, label=""];
23->37 [style = bold, label=""];
21->29 [style = bold, label=""];
22->59 [style = bold, label=""];
60->57 [style = bold, label=""];
7->22 [style = solid, label="worker"];
40->27 [style = bold, label=""];
31->55 [style = bold, label=""];
45->8 [style = bold, label=""];
2->36 [style = bold, label=""];
37->44 [style = bold, label=""];
33->31 [style = bold, label=""];
7->53 [style = solid, label="worker"];
7->54 [style = solid, label="worker"];
27->5 [style = bold, label=""];
34->38 [style = bold, label=""];
49->26 [style = bold, label=""];
18->7 [style = bold, label=""];
29->47 [style = bold, label=""];
39->42 [style = bold, label=""];
42->13 [style = solid, label="origProps"];
48->34 [style = bold, label=""];
13->14 [style = bold, label=""];
65->63 [style = bold, label=""];
14->6 [style = bold, label=""];
22->13 [style = bold, label=""];
26->20 [style = bold, label=""];
46->43 [style = bold, label=""];
}
