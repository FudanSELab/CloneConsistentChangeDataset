digraph {
38 [style = filled, label = "verify(firstFailHandle).openInputStream()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "restorerProcedure.createAndRestore(sortedRestoreOptions)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(3,(int)stateIterator.next())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ListState<Integer> listState = restoredBackend.getListState(stateDescriptor)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "OperatorStateHandle firstFailHandle = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verify(secondSuccessHandle).openInputStream()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "snapshotResult = snapshot.get()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "OperatorStateHandle thirdNotUsedHandle = mock()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testRestoreProcedureOrderAndFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "OperatorStateHandle secondFailHandle = mock()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "OperatorStateHandle thirdFailHandle = mock()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<StateObjectCollection<OperatorStateHandle>> sortedRestoreOptions = Arrays.asList(new StateObjectCollection<>(Collections.singletonList(firstFailHandle)),new StateObjectCollection<>(Collections.singletonList(secondSuccessHandle)),new StateObjectCollection<>(Collections.singletonList(thirdNotUsedHandle)))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertFalse(stateIterator.hasNext())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "verify(thirdFailHandle).openInputStream()@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "verifyZeroInteractions(thirdNotUsedHandle)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CloseableRegistry closeableRegistry = new CloseableRegistry()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "OperatorStateBackend restoredBackend = restorerProcedure.createAndRestore(sortedRestoreOptions)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "{restoredBackend.close()restoredBackend.dispose()}@@@41@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "OperatorStateBackend originalBackend = backendSupplier.apply(Collections.emptyList())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "Exception ignore@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "{}@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ListState<Integer> listState = originalBackend.getListState(stateDescriptor)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.fail()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "BackendRestorerProcedure<OperatorStateBackend,OperatorStateHandle> restorerProcedure = new BackendRestorerProcedure<>(backendSupplier,closeableRegistry,\"test op state backend\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(1,(int)stateIterator.next())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(firstFailHandle).openInputStream()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "listState.add(0)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "SnapshotResult<OperatorStateHandle> snapshotResult@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "listState.add(3)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(2,(int)stateIterator.next())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(0,(int)stateIterator.next())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "{originalBackend.close()originalBackend.dispose()}@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RunnableFuture<SnapshotResult<OperatorStateHandle>> snapshot = originalBackend.snapshot(0L,0L,checkpointStreamFactory,CheckpointOptions.forCheckpointWithDefaultLocation())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "CheckpointStreamFactory checkpointStreamFactory = new MemCheckpointStreamFactory(1024)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "listState.add(1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ListStateDescriptor<Integer> stateDescriptor = new ListStateDescriptor<>(\"test-state\",)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "List<StateObjectCollection<OperatorStateHandle>> sortedRestoreOptions = Arrays.asList(new StateObjectCollection<>(Collections.singletonList(firstFailHandle)),new StateObjectCollection<>(Collections.singletonList(secondFailHandle)),new StateObjectCollection<>(Collections.singletonList(thirdFailHandle)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "listState.add(2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "verify(secondFailHandle).openInputStream()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "testExceptionThrownIfAllRestoresFailed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Iterator<Integer> stateIterator = listState.get().iterator()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "OperatorStateBackend originalBackend = backendSupplier.apply(null)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "OperatorStateHandle secondSuccessHandle = spy(snapshotResult.getJobManagerOwnedSnapshot())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testRestoreProcedureOrderAndFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "snapshot.run()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertNotNull(restoredBackend)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44->41 [style = solid, label="thirdFailHandle"];
28->29 [style = bold, label=""];
16->15 [style = bold, label=""];
13->24 [style = bold, label=""];
27->43 [style = bold, label=""];
30->9 [style = solid, label="checkpointStreamFactory"];
25->34 [style = dashed, label="0"];
22->19 [style = bold, label=""];
29->9 [style = bold, label=""];
18->11 [style = bold, label=""];
42->39 [style = bold, label=""];
5->42 [style = dashed, label="0"];
31->4 [style = bold, label=""];
30->32 [style = bold, label=""];
12->30 [style = bold, label=""];
27->41 [style = solid, label="firstFailHandle"];
25->14 [style = bold, label=""];
4->2 [style = bold, label=""];
3->12 [style = bold, label=""];
32->34 [style = bold, label=""];
33->12 [style = bold, label=""];
26->22 [style = bold, label=""];
21->28 [style = bold, label=""];
20->5 [style = bold, label=""];
45->12 [style = bold, label=""];
17->41 [style = dashed, label="0"];
9->26 [style = bold, label=""];
17->24 [style = solid, label="sortedRestoreOptions"];
6->1 [style = bold, label=""];
35->40 [style = bold, label=""];
2->0 [style = bold, label=""];
8->20 [style = bold, label=""];
10->17 [style = solid, label="secondSuccessHandle"];
23->0 [style = solid, label="thirdNotUsedHandle"];
23->44 [style = dashed, label="0"];
12->13 [style = solid, label="closeableRegistry"];
24->31 [style = bold, label=""];
10->23 [style = bold, label=""];
1->21 [style = bold, label=""];
37->38 [style = bold, label=""];
32->18 [style = solid, label="stateDescriptor"];
19->27 [style = bold, label=""];
27->10 [style = bold, label=""];
13->36 [style = bold, label=""];
7->16 [style = bold, label=""];
32->25 [style = bold, label=""];
44->41 [style = bold, label=""];
32->6 [style = solid, label="stateDescriptor"];
43->41 [style = solid, label="secondFailHandle"];
39->38 [style = bold, label=""];
23->17 [style = bold, label=""];
0->18 [style = bold, label=""];
17->13 [style = bold, label=""];
34->14 [style = bold, label=""];
36->37 [style = bold, label=""];
23->17 [style = solid, label="thirdNotUsedHandle"];
24->31 [style = solid, label="restoredBackend"];
10->43 [style = dashed, label="0"];
38->35 [style = bold, label=""];
43->44 [style = bold, label=""];
27->17 [style = solid, label="firstFailHandle"];
12->27 [style = bold, label=""];
41->13 [style = bold, label=""];
14->6 [style = bold, label=""];
15->8 [style = bold, label=""];
11->7 [style = bold, label=""];
41->36 [style = solid, label="sortedRestoreOptions"];
}
