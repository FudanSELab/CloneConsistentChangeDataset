digraph {
1 [style = filled, label = "InvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\"test.property\",\"invalid\",null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertCommonParts(failure,analysis)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "InvalidConfigurationPropertyValueException failure = new InvalidConfigurationPropertyValueException(\"test.property\",\"invalid\",\"This is not valid.\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "MapPropertySource additional = new MapPropertySource(\"additional\",Collections.singletonMap(\"test.property\",\"valid\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "FailureAnalysis analysis = performAnalysis(failure)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(analysis.getDescription()).contains(\"Additionally, this property is also set in the following \" + \"property sources:\").contains(\"In 'additional' with the value 'valid'\").contains(\"In 'another' with the value 'test' (originating from 'TestOrigin test.property')\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "this.environment.getPropertySources().addLast(OriginCapablePropertySource.get(another))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(analysis.getAction()).contains(\"Review the value of the property.\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "MapPropertySource another = new MapPropertySource(\"another\",Collections.singletonMap(\"test.property\",\"test\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "analysisWithKnownPropertyAndNoReason['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertThat(analysis.getAction()).contains(\"Review the value of the property with the provided reason.\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "this.environment.getPropertySources().addLast(additional)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "analysisWithKnownPropertyAndNoReason['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "analysisWithKnownPropertyAndOtherCandidates['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "FailureAnalysis analysis = performAnalysis(failure)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this.environment.getPropertySources().addFirst(OriginCapablePropertySource.get(source))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "MapPropertySource source = new MapPropertySource(\"test\",Collections.singletonMap(\"test.property\",\"invalid\"))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
13->12 [style = solid, label="failure"];
0->9 [style = bold, label=""];
9->11 [style = bold, label=""];
14->11 [style = solid, label="another"];
5->0 [style = solid, label="source"];
2->6 [style = bold, label=""];
12->15 [style = bold, label=""];
8->9 [style = solid, label="additional"];
8->14 [style = bold, label=""];
15->16 [style = bold, label=""];
4->12 [style = solid, label="analysis"];
6->4 [style = bold, label=""];
3->5 [style = bold, label=""];
7->5 [style = bold, label=""];
10->5 [style = bold, label=""];
14->0 [style = bold, label=""];
5->0 [style = bold, label=""];
0->1 [style = bold, label=""];
11->13 [style = bold, label=""];
13->4 [style = solid, label="failure"];
4->12 [style = bold, label=""];
1->2 [style = bold, label=""];
1->2 [style = solid, label="failure"];
13->4 [style = bold, label=""];
}
