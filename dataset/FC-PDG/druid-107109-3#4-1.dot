digraph {
22 [style = filled, label = "DimFilter intervalFilter5 = new IntervalDimFilter(\"__thyme\",Arrays.asList(Intervals.of(\"1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z\"),Intervals.of(\"1975-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z\")),null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testGetCacheKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "DimFilter intervalFilter3 = new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Arrays.asList(Intervals.of(\"1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z\"),Intervals.of(\"1975-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z\")),regexFn)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assert.assertNotEquals(intervalFilter1,intervalFilter3)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(intervalFilter1,intervalFilter4)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertNotEquals(intervalFilter3.getCacheKey(),intervalFilter4.getCacheKey())@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DimFilter intervalFilter3 = new IntervalDimFilter(Column.TIME_COLUMN_NAME,Arrays.asList(Intervals.of(\"1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z\"),Intervals.of(\"1977-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z\")),null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DimFilter intervalFilter2 = new IntervalDimFilter(Column.TIME_COLUMN_NAME,Arrays.asList(Intervals.of(\"1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z\"),Intervals.of(\"1976-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z\")),null)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "RegexDimExtractionFn regexFn = new RegexDimExtractionFn(\".*\",false,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "DimFilter intervalFilter3 = new IntervalDimFilter(Column.TIME_COLUMN_NAME,Arrays.asList(Intervals.of(\"1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z\"),Intervals.of(\"1975-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z\")),regexFn)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Assert.assertNotEquals(intervalFilter1,intervalFilter5)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "DimFilter intervalFilter4 = new IntervalDimFilter(Column.TIME_COLUMN_NAME,Arrays.asList(Intervals.of(\"1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z\"),Intervals.of(\"1975-01-01T00:00:00.001Z/1977-01-01T00:00:00.004Z\"),Intervals.of(\"1976-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z\")),null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertNotEquals(intervalFilter1,intervalFilter2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "DimFilter intervalFilter1 = new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Arrays.asList(Intervals.of(\"1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z\"),Intervals.of(\"1975-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z\")),null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertNotEquals(intervalFilter1.getCacheKey(),intervalFilter2.getCacheKey())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DimFilter intervalFilter1 = new IntervalDimFilter(Column.TIME_COLUMN_NAME,Arrays.asList(Intervals.of(\"1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z\"),Intervals.of(\"1975-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z\")),null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "DimFilter intervalFilter4 = new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Arrays.asList(Intervals.of(\"1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z\"),Intervals.of(\"1976-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z\")),regexFn)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "DimFilter intervalFilter2 = new IntervalDimFilter(ColumnHolder.TIME_COLUMN_NAME,Arrays.asList(Intervals.of(\"1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z\"),Intervals.of(\"1976-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z\")),null)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "DimFilter intervalFilter2 = new IntervalDimFilter(Column.TIME_COLUMN_NAME,Arrays.asList(Intervals.of(\"1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z\"),Intervals.of(\"1975-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z\")),regexFn)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "DimFilter intervalFilter4 = new IntervalDimFilter(Column.TIME_COLUMN_NAME,Arrays.asList(Intervals.of(\"1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z\"),Intervals.of(\"1976-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z\")),regexFn)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "testGetCacheKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "DimFilter intervalFilter1 = new IntervalDimFilter(Column.TIME_COLUMN_NAME,Arrays.asList(Intervals.of(\"1970-01-01T00:00:00.001Z/1970-01-01T00:00:00.004Z\"),Intervals.of(\"1975-01-01T00:00:00.001Z/1980-01-01T00:00:00.004Z\")),null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22->15 [style = bold, label=""];
19->15 [style = solid, label="intervalFilter1"];
4->6 [style = bold, label=""];
9->2 [style = bold, label=""];
7->17 [style = dashed, label="0"];
13->17 [style = solid, label="regexFn"];
14->22 [style = bold, label=""];
1->3 [style = bold, label=""];
4->6 [style = solid, label="regexFn"];
19->17 [style = bold, label=""];
4->9 [style = solid, label="regexFn"];
12->9 [style = bold, label=""];
22->15 [style = solid, label="intervalFilter5"];
6->12 [style = dashed, label="0"];
20->21 [style = bold, label=""];
4->12 [style = solid, label="regexFn"];
3->5 [style = bold, label=""];
13->19 [style = bold, label=""];
8->5 [style = bold, label=""];
7->9 [style = dashed, label="0"];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
4->7 [style = solid, label="regexFn"];
19->20 [style = solid, label="intervalFilter1"];
19->14 [style = solid, label="intervalFilter1"];
5->4 [style = bold, label=""];
1->11 [style = dashed, label="0"];
6->19 [style = dashed, label="0"];
21->14 [style = solid, label="intervalFilter4"];
18->13 [style = bold, label=""];
4->20 [style = solid, label="intervalFilter3"];
4->12 [style = bold, label=""];
19->16 [style = solid, label="intervalFilter1"];
11->8 [style = bold, label=""];
3->8 [style = dashed, label="0"];
6->7 [style = bold, label=""];
16->20 [style = bold, label=""];
17->16 [style = solid, label="intervalFilter2"];
17->4 [style = bold, label=""];
4->16 [style = bold, label=""];
21->14 [style = bold, label=""];
10->11 [style = bold, label=""];
}
