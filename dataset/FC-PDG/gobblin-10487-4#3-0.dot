digraph {
8 [style = filled, label = "assertEquals(res2,(long)50)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "long res3 = postgresqlExtractor.exractSampleRecordCountFromQuery(QUERY_3)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "long res2 = oracleExtractor.exractSampleRecordCountFromQuery(QUERY_2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long res4 = oracleExtractor.exractSampleRecordCountFromQuery(QUERY_4)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "long res1 = oracleExtractor.exractSampleRecordCountFromQuery(QUERY_1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "long res5 = postgresqlExtractor.exractSampleRecordCountFromQuery(QUERY_REG)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "long res5 = oracleExtractor.exractSampleRecordCountFromQuery(QUERY_EMPTY)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(res3,(long)50)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "long res6 = oracleExtractor.exractSampleRecordCountFromQuery(QUERY_REG)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(res4,(long)-1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(res2,(long)5)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(res4,(long)50)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "long res1 = postgresqlExtractor.exractSampleRecordCountFromQuery(QUERY_1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(res5,(long)-1)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testExractSampleRecordCountFromQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(res1,(long)532)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(res6,(long)-1)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "long res2 = postgresqlExtractor.exractSampleRecordCountFromQuery(QUERY_2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "long res3 = oracleExtractor.exractSampleRecordCountFromQuery(QUERY_3)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(res5,(long)-1)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testExractSampleRecordCountFromQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testExractSampleRecordCountFromQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "long res4 = postgresqlExtractor.exractSampleRecordCountFromQuery(QUERY_EMPTY)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->2 [style = bold, label=""];
11->3 [style = bold, label=""];
2->22 [style = dashed, label="0"];
1->18 [style = dashed, label="0"];
7->12 [style = solid, label="res2"];
11->21 [style = bold, label=""];
8->12 [style = bold, label=""];
14->18 [style = bold, label=""];
20->16 [style = bold, label=""];
10->3 [style = solid, label="res4"];
2->7 [style = bold, label=""];
10->14 [style = dashed, label="0"];
7->20 [style = dashed, label="0"];
6->9 [style = solid, label="res6"];
0->9 [style = bold, label=""];
4->16 [style = dashed, label="0"];
19->22 [style = bold, label=""];
3->11 [style = dashed, label="0"];
22->20 [style = bold, label=""];
1->6 [style = bold, label=""];
6->8 [style = bold, label=""];
12->8 [style = dashed, label="0"];
2->8 [style = solid, label="res1"];
10->1 [style = bold, label=""];
18->21 [style = solid, label="res5"];
15->11 [style = bold, label=""];
7->4 [style = bold, label=""];
3->0 [style = bold, label=""];
16->14 [style = bold, label=""];
20->8 [style = solid, label="res2"];
17->8 [style = bold, label=""];
4->10 [style = bold, label=""];
18->17 [style = bold, label=""];
12->11 [style = bold, label=""];
4->11 [style = solid, label="res3"];
14->11 [style = solid, label="res4"];
13->2 [style = bold, label=""];
22->17 [style = solid, label="res1"];
16->15 [style = solid, label="res3"];
8->15 [style = bold, label=""];
1->0 [style = solid, label="res5"];
}
