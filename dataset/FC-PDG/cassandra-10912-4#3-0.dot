digraph {
6 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(1).build())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(cachedCf.rowCount(),100)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(c.value(),ByteBufferUtil.bytes(\"val\" + 0))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(10).build())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "long startRowCacheHits = cachedStore.metric.partitionCacheHit.getCount()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "long startRowCacheOutOfRange = cachedStore.metric.partitionCacheHitOutOfRange.getCount()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "int i = 0@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "int i = 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "cachedStore.truncateBlocking()@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(105).build())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "CacheService.instance.setRowCacheCapacityInMB(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "DecoratedKey dk = cachedStore.partitioner.decorateKey(key)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "rub.add(\"val\",ByteBufferUtil.bytes(values(i())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "RowCacheKey rck = new RowCacheKey(cachedStore.metadata.cfId,dk)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).fromIncl(String.valueOf(210)).toExcl(String.valueOf(215)).build())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "CachedPartition cachedCf = (CachedPartition)CacheService.instance.rowCache.get(rck)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(c.value(),ByteBufferUtil.bytes(values(i())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "cachedStore.truncateBlocking()@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(++startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "assertEquals(++startRowCacheOutOfRange,cachedStore.metric.partitionCacheHitOutOfRange.getCount())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "CompactionManager.instance.disableAutoCompaction()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "i++@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertEquals(r.clustering().get(0),ByteBufferUtil.bytes(values(i(.substring(3)))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "rub.build().applyUnsafe()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "rub.add(\"val\",ByteBufferUtil.bytes(\"val\" + 0))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "long startRowCacheHits = cachedStore.metric.rowCacheHit.getCount()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "values(i( = \"val\" + i@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(startRowCacheOutOfRange,cachedStore.metric.partitionCacheHitOutOfRange.getCount())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "ByteBuffer key = ByteBufferUtil.bytes(\"rowcachekey\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i < 200@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(1,cachedCf.rowCount())@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CacheService.instance.invalidateRowCache()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(++startRowCacheOutOfRange,cachedStore.metric.partitionCacheHitOutOfRange.getCount())@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(10).build())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Arrays.sort(values)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(++startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(1).build())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(++startRowCacheHits,cachedStore.metric.rowCacheHit.getCount())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "testRoundTrip['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testRowCacheRange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Row r = (Row)unfiltered@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "rub.clustering(String.valueOf(i))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE_CACHED)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "long startRowCacheOutOfRange = cachedStore.metric.rowCacheHitOutOfRange.getCount()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "CacheService.instance.invalidateRowCache()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RowUpdateBuilder rub = new RowUpdateBuilder(cachedStore.metadata,System.currentTimeMillis(),key)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(++startRowCacheOutOfRange,cachedStore.metric.rowCacheHitOutOfRange.getCount())@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "String cf = \"CachedIntCF\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "rub.clustering(String.valueOf(0))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "ColumnFamilyStore cachedStore = keyspace.getColumnFamilyStore(cf)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i++@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testRowCacheRange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "String values = new String((((@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Row r = (Row)unfiltered@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(101).build())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->22 [style = bold, label=""];
16->37 [style = bold, label=""];
52->8 [style = bold, label=""];
30->13 [style = bold, label=""];
22->21 [style = solid, label="startRowCacheHits"];
34->20 [style = bold, label=""];
61->56 [style = bold, label=""];
14->15 [style = solid, label="values"];
35->41 [style = bold, label=""];
2->6 [style = bold, label=""];
23->1 [style = solid, label="i"];
38->36 [style = solid, label="values"];
45->27 [style = bold, label=""];
64->8 [style = bold, label=""];
26->9 [style = bold, label=""];
31->21 [style = bold, label=""];
35->43 [style = bold, label=""];
5->28 [style = bold, label=""];
35->36 [style = solid, label="i"];
48->47 [style = solid, label="startRowCacheHits"];
38->23 [style = solid, label="i"];
50->12 [style = bold, label=""];
37->32 [style = bold, label=""];
25->15 [style = bold, label=""];
18->46 [style = bold, label=""];
34->8 [style = solid, label="rck"];
14->36 [style = solid, label="values"];
48->52 [style = solid, label="startRowCacheHits"];
1->38 [style = bold, label=""];
20->61 [style = bold, label=""];
38->15 [style = solid, label="values"];
55->60 [style = bold, label=""];
5->49 [style = dashed, label="0"];
23->25 [style = bold, label=""];
37->32 [style = solid, label="cf"];
21->0 [style = bold, label=""];
19->12 [style = bold, label=""];
34->59 [style = solid, label="rck"];
8->64 [style = bold, label=""];
3->11 [style = bold, label=""];
26->47 [style = dashed, label="0"];
48->50 [style = bold, label=""];
21->59 [style = bold, label=""];
44->17 [style = bold, label=""];
25->38 [style = dotted, label="true"];
13->16 [style = bold, label=""];
38->2 [style = bold, label=""];
7->5 [style = dashed, label="0"];
60->57 [style = bold, label=""];
33->52 [style = dashed, label="0"];
42->45 [style = dashed, label="0"];
47->54 [style = bold, label=""];
15->31 [style = bold, label=""];
57->21 [style = bold, label=""];
31->53 [style = bold, label=""];
29->38 [style = solid, label="i"];
25->20 [style = dotted, label="true"];
25->6 [style = dotted, label="true"];
22->26 [style = solid, label="startRowCacheHits"];
32->48 [style = bold, label=""];
34->14 [style = bold, label=""];
25->23 [style = dotted, label="true"];
36->35 [style = bold, label=""];
33->8 [style = bold, label=""];
23->25 [style = solid, label="i"];
24->3 [style = bold, label=""];
22->19 [style = bold, label=""];
38->2 [style = solid, label="i"];
6->23 [style = bold, label=""];
49->44 [style = bold, label=""];
19->28 [style = solid, label="startRowCacheOutOfRange"];
0->60 [style = dashed, label="0"];
63->6 [style = bold, label=""];
48->53 [style = solid, label="startRowCacheHits"];
12->24 [style = bold, label=""];
20->1 [style = bold, label=""];
4->33 [style = bold, label=""];
59->5 [style = bold, label=""];
22->10 [style = solid, label="startRowCacheHits"];
51->13 [style = bold, label=""];
6->55 [style = bold, label=""];
10->46 [style = dashed, label="0"];
25->20 [style = bold, label=""];
64->62 [style = bold, label=""];
9->18 [style = bold, label=""];
18->10 [style = bold, label=""];
0->49 [style = bold, label=""];
29->1 [style = solid, label="i"];
38->56 [style = dashed, label="0"];
14->29 [style = bold, label=""];
1->61 [style = dashed, label="0"];
28->17 [style = bold, label=""];
42->27 [style = bold, label=""];
19->50 [style = dashed, label="0"];
3->11 [style = solid, label="key"];
56->63 [style = bold, label=""];
40->43 [style = bold, label=""];
25->2 [style = dotted, label="true"];
43->39 [style = bold, label=""];
7->40 [style = bold, label=""];
22->48 [style = dashed, label="0"];
53->0 [style = bold, label=""];
0->5 [style = bold, label=""];
25->1 [style = dotted, label="true"];
58->13 [style = bold, label=""];
5->8 [style = bold, label=""];
11->34 [style = solid, label="dk"];
17->26 [style = bold, label=""];
23->38 [style = solid, label="i"];
19->21 [style = solid, label="startRowCacheOutOfRange"];
17->47 [style = bold, label=""];
29->25 [style = solid, label="i"];
29->25 [style = bold, label=""];
22->33 [style = solid, label="startRowCacheHits"];
22->55 [style = solid, label="startRowCacheHits"];
8->7 [style = bold, label=""];
36->64 [style = dashed, label="0"];
27->4 [style = bold, label=""];
11->34 [style = bold, label=""];
54->18 [style = bold, label=""];
4->52 [style = bold, label=""];
10->42 [style = bold, label=""];
28->44 [style = dashed, label="0"];
21->53 [style = dashed, label="0"];
3->20 [style = solid, label="key"];
40->36 [style = solid, label="i"];
46->45 [style = bold, label=""];
50->44 [style = solid, label="startRowCacheOutOfRange"];
48->46 [style = solid, label="startRowCacheHits"];
39->36 [style = bold, label=""];
9->54 [style = dashed, label="0"];
40->35 [style = solid, label="i"];
}
