digraph {
13 [style = filled, label = "project2.getBuildersList().add(new Shell(\"echo 1\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Job.READ,Job.CONFIGURE,Jenkins.READ).invokeWithArgs(\"aProject1\",\"never_created1\",\"never_created2\",\"aProject2\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "changeProjectOnTheDisc(project2,\"echo 1\",\"echo 2\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(result.stderr(),containsString(\"never_created: No such job ‘never_created’ exists.\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(result,failedWith(5))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \" + CLICommand.CLI_LISTPARAM_SUMMARY_ERROR_TEXT))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "reloadJobManyShouldFailIfMiddleJobDoesNotExist['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertThat(project2.scheduleBuild2(0).get().getLog(),containsString(\"echo 2\"))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Job.READ,Job.CONFIGURE,Jenkins.READ).invokeWithArgs(\"aProject1\",\"never_created\",\"aProject2\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "changeProjectOnTheDisc(project1,\"echo 1\",\"echo 2\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "FreeStyleProject project1 = j.createFreeStyleProject(\"aProject1\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(project2.scheduleBuild2(0).get().getLog(),containsString(\"echo 1\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Error occured while performing this command, see previous stderr output.\"))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(project1.scheduleBuild2(0).get().getLog(),containsString(\"echo 1\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "reloadJobManyShouldFailIfMoreJobsDoNotExist['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "project1.getBuildersList().add(new Shell(\"echo 1\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(project1.scheduleBuild2(0).get().getLog(),containsString(\"echo 2\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(result.stderr(),containsString(\"never_created2: No such job ‘never_created2’ exists.\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(result.stderr(),containsString(\"never_created1: No such job ‘never_created1’ exists.\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "FreeStyleProject project2 = j.createFreeStyleProject(\"aProject2\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "reloadJobManyShouldFailIfMiddleJobDoesNotExist['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18->3 [style = bold, label=""];
6->9 [style = solid, label="project1"];
14->4 [style = solid, label="result"];
10->14 [style = bold, label=""];
19->4 [style = solid, label="result"];
10->19 [style = bold, label=""];
2->3 [style = bold, label=""];
16->6 [style = bold, label=""];
19->7 [style = solid, label="result"];
15->6 [style = bold, label=""];
0->21 [style = bold, label=""];
20->6 [style = bold, label=""];
9->10 [style = bold, label=""];
11->9 [style = bold, label=""];
5->17 [style = bold, label=""];
2->17 [style = dashed, label="0"];
4->7 [style = bold, label=""];
13->1 [style = bold, label=""];
3->0 [style = bold, label=""];
1->11 [style = bold, label=""];
12->13 [style = bold, label=""];
7->22 [style = bold, label=""];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
22->18 [style = bold, label=""];
14->7 [style = solid, label="result"];
12->10 [style = solid, label="project2"];
6->8 [style = bold, label=""];
17->3 [style = bold, label=""];
14->19 [style = dashed, label="0"];
19->4 [style = bold, label=""];
8->12 [style = bold, label=""];
14->4 [style = bold, label=""];
5->22 [style = dashed, label="0"];
}
