digraph {
12 [style = filled, label = "return ROWS_CANNOT_MATCH@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "literals.isEmpty()@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return ROWS_MIGHT_MATCH@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "T upper = max(colStats,id)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "literals = literals.stream().filter(null).collect(Collectors.toList())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return ROWS_MIGHT_MATCH@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Statistics<?> colStats = stats.get(id)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Collection<T> literals = literalSet@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "literals.isEmpty()@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "hasNonNullButNoMinMax(colStats,valueCount)@@@13@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "return ROWS_CANNOT_MATCH@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return ROWS_CANNOT_MATCH@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "in['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "valueCount == null@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "return ROWS_CANNOT_MATCH@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "!colStats.hasNonNullValue()@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return ROWS_CANNOT_MATCH@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "colStats != null && !colStats.isEmpty()@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "notNull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "schema.findType(id) instanceof Type.NestedType@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "literals = literals.stream().filter(null).collect(Collectors.toList())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "in['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "return ROWS_MIGHT_MATCH@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "T lower = min(colStats,id)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Long valueCount = valueCounts.get(id)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Set<T> literalSet@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Set<T> literalSet@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "colStats != null && valueCount - colStats.getNumNulls() == 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "return ROWS_MIGHT_MATCH@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->30 [style = bold, label=""];
5->1 [style = solid, label="valueCount"];
28->7 [style = bold, label=""];
15->19 [style = dotted, label="true"];
19->0 [style = dotted, label="true"];
23->6 [style = dotted, label="true"];
6->31 [style = dashed, label="0"];
3->4 [style = solid, label="literalSet"];
22->5 [style = bold, label=""];
13->15 [style = bold, label=""];
25->4 [style = solid, label="literalSet"];
29->27 [style = bold, label=""];
7->14 [style = solid, label="id"];
11->20 [style = bold, label=""];
15->9 [style = bold, label=""];
9->8 [style = dotted, label="true"];
14->16 [style = bold, label=""];
9->4 [style = bold, label=""];
8->4 [style = bold, label=""];
13->29 [style = solid, label="colStats"];
28->31 [style = dotted, label="true"];
24->26 [style = dotted, label="true"];
18->22 [style = bold, label=""];
13->24 [style = solid, label="colStats"];
1->12 [style = bold, label=""];
7->18 [style = bold, label=""];
5->29 [style = solid, label="valueCount"];
5->1 [style = bold, label=""];
4->11 [style = bold, label=""];
18->5 [style = bold, label=""];
15->11 [style = dotted, label="true"];
19->0 [style = bold, label=""];
2->10 [style = bold, label=""];
15->24 [style = bold, label=""];
26->9 [style = bold, label=""];
7->11 [style = solid, label="id"];
21->10 [style = bold, label=""];
15->4 [style = dotted, label="true"];
2->21 [style = dotted, label="true"];
12->13 [style = bold, label=""];
20->19 [style = bold, label=""];
16->2 [style = bold, label=""];
30->27 [style = bold, label=""];
7->18 [style = solid, label="id"];
13->14 [style = solid, label="colStats"];
13->11 [style = solid, label="colStats"];
15->2 [style = dotted, label="true"];
15->20 [style = dotted, label="true"];
5->24 [style = solid, label="valueCount"];
29->30 [style = dotted, label="true"];
1->12 [style = dotted, label="true"];
13->29 [style = bold, label=""];
23->25 [style = dotted, label="true"];
15->29 [style = dashed, label="0"];
23->7 [style = bold, label=""];
17->6 [style = dotted, label="true"];
24->9 [style = bold, label=""];
15->16 [style = dotted, label="true"];
7->13 [style = solid, label="id"];
15->9 [style = dotted, label="true"];
19->14 [style = bold, label=""];
7->5 [style = solid, label="id"];
9->8 [style = bold, label=""];
17->7 [style = bold, label=""];
15->14 [style = dotted, label="true"];
0->14 [style = bold, label=""];
17->3 [style = dotted, label="true"];
13->15 [style = solid, label="colStats"];
24->26 [style = bold, label=""];
15->10 [style = bold, label=""];
18->22 [style = dotted, label="true"];
15->24 [style = dotted, label="true"];
2->21 [style = bold, label=""];
1->13 [style = bold, label=""];
}
