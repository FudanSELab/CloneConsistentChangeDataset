digraph {
7 [style = filled, label = "i++@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "_dictionaries = new Dictionary((((@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "List<TransformExpressionTree> expressions = SelectionOperatorUtils.extractExpressions(selection.getSelectionColumns(),indexSegment,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "_dictionaries(i( = _transformOperator.getDictionary(expression)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "_expressionMetadata(i( = expressionMetadata@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "TransformOperator transformOperator@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "TransformOperator transformOperator@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "columnNames(i( = expression.toString()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "IndexSegment indexSegment@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "columnDataTypes(i( = DataSchema.ColumnDataType.fromDataType(expressionMetadata.getDataType(),expressionMetadata.isSingleValue())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TransformExpressionTree expression = _expressions.get(i)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "i++@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int numExpressions = _expressions.size()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i < numExpressions@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "String(( columnNames = new String((((@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TransformExpressionTree expression = expressions.get(i)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Selection selection@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Selection selection@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TransformResultMetadata expressionMetadata = transformOperator.getResultMetadata(expression)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "int numExpressions = expressions.size()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "EmptySelectionOperator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "_expressionMetadata = new TransformResultMetadata((((@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "TransformOperator transformOperator@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "columnNames(i( = expression.toString()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expressionMetadata.hasDictionary()@@@18@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "DataSchema.ColumnDataType(( columnDataTypes = new DataSchema.ColumnDataType((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "SelectionOnlyOperator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Selection selection@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "_indexSegment = indexSegment@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "_executionStatistics = new ExecutionStatistics(0L,0L,0L,indexSegment.getSegmentMetadata().getTotalRawDocs())@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "_transformOperator = transformOperator@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "_numRowsToKeep = selection.getSize()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "columnDataTypes(i( = DataSchema.ColumnDataType.fromDataType(expressionMetadata.getDataType(),expressionMetadata.isSingleValue())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "int i = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "_rows = new ArrayList<>(Math.min(_numRowsToKeep,SelectionOperatorUtils.MAX_ROW_HOLDER_INITIAL_CAPACITY))@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "_dataSchema = new DataSchema(columnNames,columnDataTypes)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "_dataSchema = new DataSchema(columnNames,columnDataTypes)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "IndexSegment indexSegment@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "_blockValSets = new BlockValSet((((@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "SelectionOnlyOperator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "TransformResultMetadata expressionMetadata = _transformOperator.getResultMetadata(expression)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "_expressions = SelectionOperatorUtils.extractExpressions(selection.getSelectionColumns(),indexSegment,null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->21 [style = solid, label="columnDataTypes"];
32->36 [style = solid, label="i"];
9->35 [style = solid, label="columnDataTypes"];
20->0 [style = solid, label="expressionMetadata"];
2->20 [style = solid, label="expression"];
20->0 [style = bold, label=""];
4->15 [style = bold, label=""];
3->25 [style = dotted, label="true"];
7->9 [style = solid, label="i"];
28->24 [style = solid, label="indexSegment"];
3->18 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
30->35 [style = solid, label="columnDataTypes"];
18->22 [style = bold, label=""];
2->6 [style = solid, label="expression"];
2->14 [style = dashed, label="0"];
24->11 [style = bold, label=""];
26->28 [style = dotted, label="true"];
9->21 [style = bold, label=""];
9->15 [style = dotted, label="true"];
36->14 [style = dotted, label="true"];
9->40 [style = bold, label=""];
11->9 [style = solid, label="numExpressions"];
2->20 [style = bold, label=""];
9->2 [style = bold, label=""];
5->6 [style = dotted, label="true"];
14->21 [style = solid, label="columnNames"];
36->40 [style = dotted, label="true"];
36->14 [style = bold, label=""];
31->33 [style = dotted, label="true"];
25->41 [style = dashed, label="0"];
15->21 [style = solid, label="columnDataTypes"];
6->4 [style = bold, label=""];
32->14 [style = solid, label="i"];
5->6 [style = bold, label=""];
38->37 [style = bold, label=""];
4->21 [style = solid, label="columnNames"];
10->35 [style = solid, label="columnNames"];
9->4 [style = dotted, label="true"];
32->36 [style = bold, label=""];
11->17 [style = bold, label=""];
10->9 [style = solid, label="i"];
25->22 [style = solid, label="transformOperator"];
34->38 [style = bold, label=""];
36->35 [style = bold, label=""];
31->29 [style = dotted, label="true"];
15->7 [style = solid, label="i"];
21->23 [style = bold, label=""];
23->16 [style = solid, label="_numRowsToKeep"];
17->8 [style = bold, label=""];
9->0 [style = dotted, label="true"];
41->34 [style = solid, label="indexSegment"];
7->2 [style = solid, label="i"];
20->19 [style = dashed, label="0"];
37->30 [style = bold, label=""];
26->27 [style = dotted, label="true"];
35->39 [style = bold, label=""];
10->2 [style = solid, label="i"];
40->14 [style = solid, label="i"];
13->22 [style = solid, label="transformOperator"];
14->19 [style = bold, label=""];
19->10 [style = bold, label=""];
30->32 [style = bold, label=""];
28->18 [style = solid, label="indexSegment"];
36->19 [style = dotted, label="true"];
31->34 [style = bold, label=""];
18->34 [style = dashed, label="0"];
9->40 [style = solid, label="i"];
40->36 [style = bold, label=""];
14->19 [style = solid, label="expression"];
5->4 [style = bold, label=""];
37->35 [style = solid, label="columnNames"];
9->20 [style = dotted, label="true"];
10->9 [style = bold, label=""];
9->7 [style = dotted, label="true"];
25->24 [style = solid, label="indexSegment"];
3->13 [style = dotted, label="true"];
0->5 [style = bold, label=""];
9->5 [style = dotted, label="true"];
23->16 [style = bold, label=""];
15->7 [style = bold, label=""];
11->1 [style = bold, label=""];
26->25 [style = dotted, label="true"];
20->4 [style = bold, label=""];
36->10 [style = dotted, label="true"];
25->18 [style = solid, label="indexSegment"];
38->36 [style = solid, label="numExpressions"];
3->12 [style = dotted, label="true"];
9->2 [style = dotted, label="true"];
40->36 [style = solid, label="i"];
1->14 [style = bold, label=""];
22->24 [style = bold, label=""];
36->9 [style = dotted, label="true"];
31->41 [style = dotted, label="true"];
26->18 [style = bold, label=""];
}
