digraph {
17 [style = filled, label = "assertEquals(0,rcci.getUseCount())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
66 [style = filled, label = "referenceCountHelperImpl.refCountChanged(address,false,1)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertThat(referenceCountHelperImpl.getReferenceCountOwner()).isNull()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "rcci = list.get(0)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "int rc = 1@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(reenterCount.get()).isZero()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(0,list.size())@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "refCountChangeInfo = list.get(0)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "rchi.setReferenceCountOwner(owner)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(list).hasSize(1)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertThat(owner).isNotNull()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "Object owner = referenceCountHelperImpl.createReferenceCountOwner()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "rcci = list.get(0)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "assertEquals(1,ai.get())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "owner = referenceCountHelperImpl.createReferenceCountOwner()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "List<RefCountChangeInfo> list = referenceCountHelperImpl.peekRefCountInfo(address)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "decRefCount = true@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "ai = rchi.getReenterCount()@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertEquals(0,ai.get())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "owner = rchi.createReferenceCountOwner()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "reenterCount = referenceCountHelperImpl.getReenterCount()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "assertThat(refCountChangeInfo.getUseCount()).isOne()@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "rchi = getTrueFalse()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "AtomicInteger ai = rchi.getReenterCount()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(1,list.size())@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "owner = null@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "referenceCountHelperImpl.setReferenceCountOwner(owner)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "assertThat(refCountChangeInfo.getUseCount()).isZero()@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "owner = null@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rchi = getTrueTrue()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "list = referenceCountHelperImpl.peekRefCountInfo(address)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(0,rcci.getUseCount())@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertThat(owner).isNotNull()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "ai = rchi.getReenterCount()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "list = referenceCountHelperImpl.getRefCountInfo(address)@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "assertThat(list).isEmpty()@@@35@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "RefCountChangeInfo rcci = list.get(0)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertEquals(1,list.size())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "list = rchi.getRefCountInfo(address)@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertFalse(owner == null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertThat(refCountChangeInfo.getUseCount()).isZero()@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "doRefCountChangedWithOwnerWithTrackRefsTrueAndTrackFreesTrue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "doRefCountChangedWithOwnerWithTrackRefsTrueAndTrackFreesTrue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "referenceCountHelperImpl.refCountChanged(address,true,1)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertThat(reenterCount.get()).isOne()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "ReferenceCountHelperImpl referenceCountHelperImpl = newReferenceCountHelperImpl_TrueTrue()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(rchi.getReferenceCountOwner(),null)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "doCreateReferenceCountOwnerWithTrackRefsTrueAndTrackFreesFalse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "referenceCountHelperImpl.refCountChanged(address,true,1)@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "AtomicInteger reenterCount = referenceCountHelperImpl.getReenterCount()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(1,ai.get())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertEquals(1,list.size())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "refCountChangeInfo = list.get(0)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "RefCountChangeInfo refCountChangeInfo = list.get(0)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "assertThat(list).hasSize(1)@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "list = rchi.peekRefCountInfo(address)@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<RefCountChangeInfo> list = rchi.peekRefCountInfo(address)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
73 [style = filled, label = "Object owner = rchi.createReferenceCountOwner()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "list = rchi.peekRefCountInfo(address)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertEquals(0,ai.get())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "assertThat(list).hasSize(1)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "ai = rchi.getReenterCount()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "referenceCountHelperImpl.refCountChanged(address,false,1)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "assertThat(reenterCount.get()).isOne()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "boolean decRefCount = false@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(owner == null)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(rchi.getReferenceCountOwner(),null)@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Long address = (long)0x1000@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1,rcci.getUseCount())@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "list = referenceCountHelperImpl.peekRefCountInfo(address)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12->39 [style = solid, label="address"];
45->65 [style = bold, label=""];
6->62 [style = dashed, label="0"];
28->20 [style = bold, label=""];
38->51 [style = bold, label=""];
56->41 [style = bold, label=""];
43->42 [style = bold, label=""];
7->35 [style = bold, label=""];
33->50 [style = dashed, label="0"];
14->17 [style = bold, label=""];
31->48 [style = dashed, label="0"];
62->55 [style = bold, label=""];
12->35 [style = solid, label="address"];
12->48 [style = solid, label="address"];
12->32 [style = solid, label="address"];
1->63 [style = dashed, label="0"];
36->1 [style = solid, label="owner"];
2->35 [style = solid, label="decRefCount"];
33->4 [style = solid, label="owner"];
12->40 [style = solid, label="address"];
70->73 [style = bold, label=""];
29->26 [style = dashed, label="0"];
41->67 [style = bold, label=""];
40->47 [style = bold, label=""];
26->15 [style = bold, label=""];
60->63 [style = bold, label=""];
11->33 [style = bold, label=""];
50->68 [style = bold, label=""];
16->14 [style = bold, label=""];
61->49 [style = solid, label="owner"];
12->20 [style = solid, label="address"];
25->37 [style = dashed, label="0"];
2->24 [style = bold, label=""];
39->58 [style = bold, label=""];
32->3 [style = bold, label=""];
5->70 [style = dashed, label="0"];
28->52 [style = dashed, label="0"];
12->57 [style = solid, label="address"];
61->49 [style = bold, label=""];
54->52 [style = bold, label=""];
23->30 [style = bold, label=""];
8->23 [style = bold, label=""];
57->40 [style = bold, label=""];
65->12 [style = bold, label=""];
18->19 [style = bold, label=""];
26->43 [style = bold, label=""];
20->31 [style = bold, label=""];
73->69 [style = bold, label=""];
25->7 [style = bold, label=""];
24->18 [style = bold, label=""];
34->0 [style = bold, label=""];
19->25 [style = bold, label=""];
0->36 [style = bold, label=""];
19->53 [style = dashed, label="0"];
6->2 [style = bold, label=""];
66->48 [style = bold, label=""];
29->27 [style = bold, label=""];
27->11 [style = bold, label=""];
71->36 [style = bold, label=""];
73->69 [style = solid, label="owner"];
1->9 [style = solid, label="owner"];
12->31 [style = solid, label="address"];
30->10 [style = bold, label=""];
34->20 [style = solid, label="decRefCount"];
26->15 [style = solid, label="owner"];
11->42 [style = dashed, label="0"];
59->44 [style = bold, label=""];
15->29 [style = bold, label=""];
9->22 [style = bold, label=""];
22->26 [style = bold, label=""];
17->8 [style = bold, label=""];
27->43 [style = dashed, label="0"];
0->20 [style = solid, label="rc"];
4->13 [style = bold, label=""];
33->4 [style = bold, label=""];
52->66 [style = bold, label=""];
35->32 [style = bold, label=""];
12->66 [style = solid, label="address"];
55->39 [style = bold, label=""];
2->55 [style = dashed, label="0"];
10->6 [style = bold, label=""];
0->8 [style = solid, label="rc"];
1->9 [style = bold, label=""];
12->18 [style = solid, label="address"];
12->41 [style = solid, label="address"];
10->46 [style = dashed, label="0"];
21->5 [style = bold, label=""];
53->37 [style = bold, label=""];
58->53 [style = bold, label=""];
17->64 [style = dashed, label="0"];
0->24 [style = solid, label="rc"];
51->64 [style = bold, label=""];
12->55 [style = solid, label="address"];
63->61 [style = bold, label=""];
4->68 [style = dashed, label="0"];
13->54 [style = dashed, label="0"];
12->56 [style = solid, label="address"];
37->57 [style = bold, label=""];
16->38 [style = dashed, label="0"];
42->50 [style = bold, label=""];
44->60 [style = bold, label=""];
31->16 [style = bold, label=""];
67->46 [style = bold, label=""];
72->70 [style = bold, label=""];
20->66 [style = dashed, label="0"];
14->51 [style = dashed, label="0"];
12->34 [style = bold, label=""];
36->1 [style = bold, label=""];
12->8 [style = solid, label="address"];
0->35 [style = solid, label="rc"];
8->56 [style = dashed, label="0"];
64->56 [style = bold, label=""];
48->38 [style = bold, label=""];
69->71 [style = bold, label=""];
5->12 [style = bold, label=""];
15->49 [style = dashed, label="0"];
12->24 [style = solid, label="address"];
2->24 [style = solid, label="decRefCount"];
36->60 [style = dashed, label="0"];
12->59 [style = bold, label=""];
23->41 [style = dashed, label="0"];
49->26 [style = bold, label=""];
34->8 [style = solid, label="decRefCount"];
30->67 [style = dashed, label="0"];
46->62 [style = bold, label=""];
68->54 [style = bold, label=""];
12->23 [style = solid, label="address"];
5->65 [style = dashed, label="0"];
13->28 [style = bold, label=""];
}
