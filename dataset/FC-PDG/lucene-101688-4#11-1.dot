digraph {
4 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testSurrogates2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int numIterations = atLeast(1000)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "VERBOSE@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int numIterations = atLeast(10000)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testSurrogates2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testSurrogates2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "System.out.println(\"TEST: iter=\" + i)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ts.incrementToken()@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String s = _TestUtil.randomUnicodeString(random(),100)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(UnicodeUtil.validUTF16String(termAtt))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ts.reset()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CharTermAttribute termAtt = ts.addAttribute()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < numIterations@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TokenStream ts = analyzer.tokenStream(\"foo\",new StringReader(s))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ts.end()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
16->3 [style = bold, label=""];
8->10 [style = bold, label=""];
10->8 [style = dotted, label="true"];
1->10 [style = dotted, label="true"];
11->1 [style = solid, label="numIterations"];
5->9 [style = bold, label=""];
10->14 [style = bold, label=""];
7->10 [style = bold, label=""];
5->6 [style = solid, label="s"];
0->1 [style = solid, label="i"];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
12->11 [style = bold, label=""];
4->1 [style = solid, label="i"];
1->14 [style = dotted, label="true"];
9->7 [style = bold, label=""];
3->4 [style = bold, label=""];
1->13 [style = bold, label=""];
15->5 [style = bold, label=""];
1->7 [style = dotted, label="true"];
1->13 [style = dotted, label="true"];
0->15 [style = solid, label="i"];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
14->0 [style = bold, label=""];
4->15 [style = solid, label="i"];
0->1 [style = bold, label=""];
1->9 [style = dotted, label="true"];
10->0 [style = bold, label=""];
3->1 [style = solid, label="numIterations"];
13->5 [style = bold, label=""];
4->0 [style = solid, label="i"];
1->6 [style = dotted, label="true"];
13->15 [style = dotted, label="true"];
4->1 [style = bold, label=""];
13->15 [style = bold, label=""];
1->0 [style = dotted, label="true"];
6->9 [style = bold, label=""];
3->11 [style = dashed, label="0"];
1->5 [style = dotted, label="true"];
9->8 [style = solid, label="termAtt"];
}
