digraph {
31 [style = filled, label = "tt.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRES_NEW)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "given(ut.getStatus()).willReturn(Status.STATUS_NO_TRANSACTION,Status.STATUS_ACTIVE,Status.STATUS_ACTIVE,Status.STATUS_ACTIVE,Status.STATUS_ACTIVE,Status.STATUS_ACTIVE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final TransactionTemplate tt = new TransactionTemplate(tm)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(result == l,\"Correct result list\")@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(!TransactionSynchronizationManager.isSynchronizationActive(),\"JTA synchronizations not active\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final UserTransaction ut = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "given(tx.isActive()).willReturn(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "val l = new ArrayList<Object>()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "l.add(\"test\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verify(pm).flush()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(result == l,\"Correct result list\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "JtaTransactionManager ptm = new JtaTransactionManager(ut,tm)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(!TransactionSynchronizationManager.isSynchronizationActive(),\"JTA synchronizations not active\")@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testParticipatingJtaTransactionWithWithRequiresNewAndPrebound['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(TransactionSynchronizationManager.hasResource(pmf),\"Has thread pm\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testParticipatingTransactionWithWithRequiresNewAndPrebound['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "tt.setPropagationBehavior(TransactionDefinition.PROPAGATION_REQUIRES_NEW)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "val l = new ArrayList<Object>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "verify(pm,times(2)).close()@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "given(pmf.getPersistenceManager()).willReturn(pm)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verify(pm).close()@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final TransactionTemplate tt = new TransactionTemplate(ptm)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(TransactionSynchronizationManager.hasResource(pmf),\"Has thread pm\")@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TransactionSynchronizationManager.unbindResource(pmf)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(ut,times(2)).begin()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "l.add(\"test\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final TransactionManager tm = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "given(pmf.getPersistenceManager()).willReturn(pm)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "given(pm.currentTransaction()).willReturn(tx)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TransactionSynchronizationManager.bindResource(pmf,new PersistenceManagerHolder(pm))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testParticipatingTransactionWithWithRequiresNewAndPrebound['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Object result = tt.execute(new TransactionCallback<Object>(){@Override public Object doInTransaction(TransactionStatus status){try {MockJtaTransaction transaction = new MockJtaTransaction()given(tm.suspend()).willReturn(transaction)}catch (Exception ex) PersistenceManagerFactoryUtils.getPersistenceManager(pmf,true)return tt.execute(new TransactionCallback<Object>(){@Override public Object doInTransaction(TransactionStatus status){PersistenceManagerFactoryUtils.getPersistenceManager(pmf,true).flush()return l}})}})@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
12->3 [style = dashed, label="0"];
2->5 [style = solid, label="result"];
16->18 [style = bold, label=""];
31->23 [style = bold, label=""];
1->8 [style = bold, label=""];
15->29 [style = bold, label=""];
27->0 [style = bold, label=""];
11->5 [style = solid, label="l"];
28->31 [style = bold, label=""];
30->26 [style = bold, label=""];
4->19 [style = bold, label=""];
19->11 [style = bold, label=""];
10->17 [style = bold, label=""];
3->15 [style = bold, label=""];
15->6 [style = bold, label=""];
22->28 [style = bold, label=""];
9->22 [style = dashed, label="0"];
9->10 [style = bold, label=""];
17->22 [style = bold, label=""];
26->24 [style = bold, label=""];
25->17 [style = bold, label=""];
21->18 [style = bold, label=""];
13->1 [style = bold, label=""];
17->4 [style = solid, label="tm"];
23->0 [style = solid, label="l"];
23->27 [style = solid, label="l"];
0->14 [style = bold, label=""];
26->22 [style = solid, label="ut"];
6->29 [style = dashed, label="0"];
8->2 [style = bold, label=""];
5->0 [style = bold, label=""];
23->13 [style = bold, label=""];
24->25 [style = bold, label=""];
20->12 [style = bold, label=""];
18->9 [style = bold, label=""];
2->27 [style = bold, label=""];
12->3 [style = bold, label=""];
11->2 [style = solid, label="l"];
24->22 [style = solid, label="tm"];
27->0 [style = solid, label="result"];
17->4 [style = bold, label=""];
11->7 [style = bold, label=""];
22->28 [style = solid, label="ptm"];
14->20 [style = bold, label=""];
2->5 [style = bold, label=""];
}
