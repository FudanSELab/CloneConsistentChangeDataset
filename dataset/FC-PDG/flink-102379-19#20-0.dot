digraph {
17 [style = filled, label = "assertEquals(Constants.MAIN_CONTAINER_NAME,resultedMainContainer.getName())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(CONTAINER_IMAGE_PULL_POLICY.name(),resultMainContainer.getImagePullPolicy())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(CONTAINER_IMAGE_PULL_POLICY.name(),resultedMainContainer.getImagePullPolicy())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(resultMainContainer.getEnv().stream().anyMatch(null))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(3,resultMainContainer.getEnv().size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final Map<String,Quantity> requests = resultedMainContainer.getResources().getRequests()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Container resultedMainContainer = resultPodSpec.getContainers().get(0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(1,resultPodSpec.getContainers().size())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "kubernetesJobManagerSpecification = KubernetesJobManagerFactory.buildKubernetesJobManagerSpecification(kubernetesJobManagerParameters)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertEquals(1,resultContainers.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testPodSpec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(Double.toString(JOB_MANAGER_CPU),requests.get(\"cpu\").getAmount())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "kubernetesJobManagerSpecification = KubernetesJobManagerFactory.buildKubernetesJobManagerSpecification(flinkPod,kubernetesJobManagerParameters)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertTrue(resultedMainContainer.getEnv().stream().anyMatch(null))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(CONTAINER_IMAGE,resultMainContainer.getImage())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(SERVICE_ACCOUNT_NAME,resultPodSpec.getServiceAccountName())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testContainer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final PodSpec resultPodSpec = this.kubernetesJobManagerSpecification.getDeployment().getSpec().getTemplate().getSpec()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(Constants.MAIN_CONTAINER_NAME,resultMainContainer.getName())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(1,resultMainContainer.getCommand().size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(CONTAINER_IMAGE,resultedMainContainer.getImage())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(3,resultedMainContainer.getArgs().size())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(3,resultPodSpec.getVolumes().size())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(1,resultedMainContainer.getCommand().size())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(3,resultedMainContainer.getEnv().size())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(3,resultMainContainer.getArgs().size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(3,resultedMainContainer.getVolumeMounts().size())@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final List<Container> resultContainers = this.resultPod.getSpec().getContainers()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testPodSpec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertEquals(4,resultMainContainer.getVolumeMounts().size())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(String.valueOf(JOB_MANAGER_MEMORY),requests.get(\"memory\").getAmount())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final Container resultMainContainer = resultContainers.get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(1,resultMainContainer.getPorts().size())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(3,resultedMainContainer.getPorts().size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
13->10 [style = bold, label=""];
30->33 [style = bold, label=""];
16->8 [style = bold, label=""];
25->23 [style = bold, label=""];
0->12 [style = bold, label=""];
24->32 [style = bold, label=""];
23->26 [style = bold, label=""];
8->32 [style = dashed, label="0"];
10->33 [style = dashed, label="0"];
4->2 [style = bold, label=""];
15->3 [style = bold, label=""];
32->30 [style = bold, label=""];
17->31 [style = dashed, label="0"];
10->6 [style = bold, label=""];
14->26 [style = dashed, label="0"];
1->11 [style = bold, label=""];
19->16 [style = bold, label=""];
4->28 [style = dashed, label="0"];
5->16 [style = bold, label=""];
2->0 [style = bold, label=""];
21->31 [style = bold, label=""];
0->25 [style = dashed, label="0"];
18->1 [style = bold, label=""];
12->14 [style = bold, label=""];
9->5 [style = bold, label=""];
7->15 [style = bold, label=""];
14->18 [style = bold, label=""];
31->28 [style = bold, label=""];
22->24 [style = bold, label=""];
28->27 [style = bold, label=""];
29->22 [style = bold, label=""];
33->21 [style = bold, label=""];
20->19 [style = bold, label=""];
5->19 [style = dashed, label="0"];
27->25 [style = bold, label=""];
17->4 [style = bold, label=""];
11->7 [style = bold, label=""];
8->13 [style = bold, label=""];
}
