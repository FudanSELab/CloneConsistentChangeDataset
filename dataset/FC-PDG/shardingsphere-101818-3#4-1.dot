digraph {
22 [style = filled, label = "DataSource dataSource = mock(,RETURNS_DEEP_STUBS)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "final AlterTableStatement alterTableStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "refreshWithRenameTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "when(materials.getDataSourceMap()).thenReturn(Collections.singletonMap(\"ds\",dataSource))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "ResultSet resultSet = mock()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "schemaRefresher.refresh(schema,Collections.singletonList(\"ds\"),alterTableStatement,materials)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(resultSet.next()).thenReturn(false)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(schema.containsTable(\"t_order\"))@@@18@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final AlterTableStatement alterTableStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SchemaRefresher<AlterTableStatement> schemaRefresher = new AlterTableStatementSchemaRefresher()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(schema.containsTable(\"t_order\"))@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "when(dataSourceMap.get(eq(\"ds\"))).thenReturn(dataSource)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "schemaRefresher.refresh(schema,Collections.singletonList(\"ds\"),alterTableStatement,materials)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "refresh['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(schema.containsTable(\"t_order_new\"))@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "when(metaData.getTables(any(),any(),any(),any())).thenReturn(resultSet)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Map<String,DataSource> dataSourceMap = mock()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "alterTableStatement.setRenameTable(new SimpleTableSegment(new TableNameSegment(1,3,new IdentifierValue(\"t_order_new\"))))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(materials.getDataSourceMap()).thenReturn(dataSourceMap)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(dataSource.getConnection()).thenReturn(connection)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "DatabaseMetaData metaData = mock()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(connection.getMetaData()).thenReturn(metaData)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema()@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DataSource dataSource = mock()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Connection connection = mock()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "alterTableStatement.setTable(new SimpleTableSegment(new TableNameSegment(1,3,new IdentifierValue(\"t_order\"))))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "refresh['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "SchemaRefresher<AlterTableStatement> schemaRefresher = new AlterTableStatementSchemaRefresher()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "when(dataSource.getConnection().getMetaData().getTables(any(),any(),any(),any())).thenReturn(mock())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertFalse(schema.containsTable(\"t_order\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
22->25 [style = bold, label=""];
3->30 [style = dashed, label="0"];
28->6 [style = solid, label="alterTableStatement"];
18->16 [style = dotted, label="true"];
9->4 [style = bold, label=""];
16->6 [style = solid, label="alterTableStatement"];
15->24 [style = dashed, label="0"];
0->10 [style = solid, label="connection"];
8->14 [style = bold, label=""];
18->2 [style = bold, label=""];
1->7 [style = bold, label=""];
22->24 [style = solid, label="dataSource"];
23->19 [style = solid, label="schema"];
7->6 [style = solid, label="schema"];
30->29 [style = bold, label=""];
11->15 [style = bold, label=""];
24->20 [style = bold, label=""];
25->24 [style = bold, label=""];
26->2 [style = bold, label=""];
15->17 [style = bold, label=""];
0->10 [style = bold, label=""];
12->2 [style = bold, label=""];
17->0 [style = bold, label=""];
13->8 [style = solid, label="metaData"];
20->23 [style = bold, label=""];
16->19 [style = solid, label="alterTableStatement"];
10->13 [style = bold, label=""];
12->16 [style = dotted, label="true"];
26->28 [style = dotted, label="true"];
23->19 [style = bold, label=""];
5->11 [style = solid, label="dataSourceMap"];
7->6 [style = bold, label=""];
11->25 [style = dashed, label="0"];
15->17 [style = solid, label="dataSource"];
2->27 [style = bold, label=""];
14->9 [style = bold, label=""];
5->11 [style = bold, label=""];
4->1 [style = bold, label=""];
27->5 [style = bold, label=""];
6->30 [style = bold, label=""];
14->9 [style = solid, label="resultSet"];
13->8 [style = bold, label=""];
2->22 [style = bold, label=""];
16->28 [style = dashed, label="0"];
2->5 [style = bold, label=""];
19->21 [style = bold, label=""];
}
