digraph {
9 [style = filled, label = "executeAndRunAssertions(env)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "env.getConfig().disableSysoutLogging()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testRestart['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "fail(e.getMessage())@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "testRestart['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testRestartMultipleTimes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<Long> resultCollection = new ArrayList<Long>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Exception e@@@21@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(5,100))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(55,sum)@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "env.generateSequence(1,10).rebalance().map(new FailingMapper2<Long>()).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return value1 + value2}}).output(new LocalCollectionOutputFormat<Long>(resultCollection))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "env.setParallelism(4)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "{FailingMapper2.failuresBeforeSuccess = 1}@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "e.printStackTrace()@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "env.generateSequence(1,10).rebalance().map(new FailingMapper3<Long>()).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return value1 + value2}}).output(new LocalCollectionOutputFormat<Long>(resultCollection))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "sum += l@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "long sum = 0@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
5->3 [style = bold, label=""];
4->10 [style = bold, label=""];
14->12 [style = dotted, label="true"];
2->1 [style = bold, label=""];
17->9 [style = bold, label=""];
3->4 [style = solid, label="sum"];
0->17 [style = solid, label="resultCollection"];
6->0 [style = bold, label=""];
0->1 [style = solid, label="resultCollection"];
16->2 [style = bold, label=""];
3->4 [style = bold, label=""];
14->13 [style = dotted, label="true"];
1->9 [style = bold, label=""];
8->7 [style = bold, label=""];
12->10 [style = bold, label=""];
11->0 [style = bold, label=""];
13->12 [style = bold, label=""];
1->17 [style = dashed, label="0"];
7->2 [style = bold, label=""];
15->0 [style = bold, label=""];
7->16 [style = bold, label=""];
8->9 [style = solid, label="env"];
0->8 [style = bold, label=""];
9->5 [style = bold, label=""];
14->13 [style = bold, label=""];
}
