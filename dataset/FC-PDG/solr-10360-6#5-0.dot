digraph {
5 [style = filled, label = "String function = expression.getFunctionName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return false@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "isEvaluator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Class<? extends Expressible> clazz = functionNames.get(function)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return true@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "return (org.apache.solr.client.solrj.io.eval.StreamEvaluator)createInstance(functionNames.get(function),new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f61fa6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f61fab)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "constructEvaluator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid evaluator expression %s - function '%s' is unknown (not mapped to a valid StreamEvaluator)\",expression,expression.getFunctionName()))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = ".isAssignableFrom(clazz) && .isAssignableFrom(clazz)@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "StreamExpression expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
14 [style = filled, label = ".isAssignableFrom(clazz) && .isAssignableFrom(clazz)@@@7@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "StreamExpression expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Class<? extends Expressible> clazz = classSupplier.get()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "isEvaluator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(function)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "classSupplier != null@@@5@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "return false@@@10@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return true@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "functionNames.containsKey(function)@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2->3 [style = dotted, label="true"];
0->3 [style = bold, label=""];
13->10 [style = bold, label=""];
17->5 [style = bold, label=""];
2->19 [style = bold, label=""];
2->0 [style = dotted, label="true"];
4->16 [style = dashed, label="0"];
5->15 [style = solid, label="function"];
17->18 [style = dotted, label="true"];
4->6 [style = bold, label=""];
2->6 [style = bold, label=""];
0->3 [style = solid, label="clazz"];
18->19 [style = solid, label="expression"];
5->0 [style = solid, label="function"];
14->10 [style = bold, label=""];
18->16 [style = solid, label="expression"];
3->6 [style = bold, label=""];
5->15 [style = bold, label=""];
3->4 [style = dotted, label="true"];
1->18 [style = dashed, label="0"];
3->16 [style = bold, label=""];
16->19 [style = bold, label=""];
12->9 [style = bold, label=""];
3->4 [style = bold, label=""];
14->13 [style = dotted, label="true"];
2->15 [style = dashed, label="0"];
12->14 [style = dotted, label="true"];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
12->10 [style = bold, label=""];
15->12 [style = solid, label="classSupplier"];
3->19 [style = bold, label=""];
9->14 [style = bold, label=""];
1->8 [style = dashed, label="0"];
11->8 [style = dotted, label="true"];
15->12 [style = bold, label=""];
5->2 [style = solid, label="function"];
14->13 [style = bold, label=""];
7->1 [style = dotted, label="true"];
12->9 [style = dotted, label="true"];
9->14 [style = solid, label="clazz"];
3->16 [style = dotted, label="true"];
5->16 [style = solid, label="function"];
}
