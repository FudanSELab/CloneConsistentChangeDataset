digraph {
19 [style = filled, label = "Assert.assertTrue(\"Should expect a BigDecimal\",expected instanceof BigDecimal)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "Assert.assertTrue(\"Should expect a Map\",expected instanceof Map)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Type type@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertEqualsUnsafe(type.asNestedType().asStructType(),(Record)expected,(InternalRow)actual)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Object expected@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertTrue(\"Should be a byte((\",actual instanceof byte(()@@@37@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(\"Primitive value should be equal to expected\",expected,actual)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "Assert.assertEquals(\"Primitive value should be equal to expected\",expected,actual)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Object expected@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "Assert.assertTrue(\"Should be a UTF8String\",actual instanceof UTF8String)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "Assert.assertTrue(\"Should be a Decimal\",actual instanceof Decimal)@@@41@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(\"Primitive value should be equal to expected\",expectedMicros,actual)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(\"Primitive value should be equal to expected\",expectedDays,actual)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertArrayEquals(\"Bytes should match\",((ByteBuffer)expected).array(),(byte(()actual)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertTrue(\"Should expect a Fixed\",expected instanceof GenericData.Fixed)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEqualsUnsafe(type.asNestedType().asListType(),(Collection)expected,(ArrayData)actual)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "Assert.assertTrue(\"Should be a UTF8String\",actual instanceof UTF8String)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "type.typeId()@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Type type@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "throw new IllegalArgumentException(\"Not a supported type: \" + type)@@@56@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(\"Strings should be equal\",expected,actual.toString())@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(\"UUID string representation should match\",expected.toString(),actual.toString())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertTrue(\"Should be an ArrayData\",actual instanceof ArrayData)@@@49@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "Assert.assertTrue(\"Should expect an OffsetDateTime\",expected instanceof OffsetDateTime)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "expected instanceof Float@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(\"Primitive value should be equal to expected\",expectedMicros,actual)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "Assert.assertEquals(\"Values didn't match\",((Number)expected).longValue(),actual)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertTrue(\"Should expect a UUID\",expected instanceof UUID)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "Assert.assertTrue(\"Should be an ArrayData\",actual instanceof ArrayData)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Type type@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(\"Should expect an OffsetDateTime\",expected instanceof OffsetDateTime)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertTrue(\"Should be a UTF8String\",actual instanceof UTF8String)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
77 [style = filled, label = "Object actual@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertTrue(\"Should be an InternalRow\",actual instanceof InternalRow)@@@45@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Assert.assertTrue(\"Should be an ArrayBasedMapData\",actual instanceof MapData)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Assert.assertTrue(\"Should be a Decimal\",actual instanceof Decimal)@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "int expectedDays = (int)ChronoUnit.DAYS.between(EPOCH_DAY,(LocalDate)expected)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(\"BigDecimals should be equal\",expected,((Decimal)actual).toJavaBigDecimal())@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Strings should be equal\",expected,actual.toString())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "throw new IllegalArgumentException(\"Not a supported type: \" + type)@@@56@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "long expectedMicros = ChronoUnit.MICROS.between(EPOCH,(OffsetDateTime)expected)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "Assert.assertTrue(\"Should be a byte((\",actual instanceof byte(()@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Assert.assertTrue(\"Should be a byte((\",actual instanceof byte(()@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "Object expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertTrue(\"Should expect a BigDecimal\",expected instanceof BigDecimal)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(\"Should expect a Collection\",expected instanceof Collection)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(\"Should be a byte((\",actual instanceof byte(()@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "long expectedMicros = ChronoUnit.MICROS.between(EPOCH,(OffsetDateTime)expected)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "Assert.assertEquals(\"Primitive value should be equal to expected\",expected,actual)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "Assert.assertTrue(\"Should be a long\",actual instanceof Long)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "Assert.assertTrue(\"Should be a double\",actual instanceof Double)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Assert.assertTrue(\"Should be a byte((\",actual instanceof byte(()@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "Assert.assertTrue(\"Should be an InternalRow\",actual instanceof InternalRow)@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "Assert.assertTrue(\"Should expect a ByteBuffer\",expected instanceof ByteBuffer)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "long expectedMicros = ChronoUnit.MICROS.between(EPOCH,((LocalDateTime)expected).atZone(ZoneId.of(\"UTC\")))@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "assertEqualsUnsafe['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "assertEqualsUnsafe['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(\"Should expect a UUID\",expected instanceof UUID)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(\"Should be a UTF8String\",actual instanceof UTF8String)@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "expected instanceof Integer@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Assert.assertTrue(\"Should expect an LocalDateTime\",expected instanceof LocalDateTime)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Assert.assertEquals(\"UUID string representation should match\",expected.toString(),actual.toString())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(\"BigDecimals should be equal\",expected,((Decimal)actual).toJavaBigDecimal())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Types.TimestampType timestampType = (Types.TimestampType)type@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "Assert.assertArrayEquals(\"Bytes should match\",((GenericData.Fixed)expected).bytes(),(byte(()actual)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEqualsUnsafe['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(\"Primitive value should be equal to expected\",expectedMicros,actual)@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Assert.assertEquals(\"Primitive value should be equal to expected\",expected,actual)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertTrue(\"Should expect a Record\",expected instanceof Record)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Assert.assertEquals(\"Values didn't match\",Double.doubleToLongBits(((Number)expected).doubleValue()),Double.doubleToLongBits((double)actual))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertTrue(\"Should expect a LocalDate\",expected instanceof LocalDate)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertEqualsUnsafe(type.asNestedType().asMapType(),(Map)expected,(MapData)actual)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Assert.assertTrue(\"Should be an ArrayBasedMapData\",actual instanceof MapData)@@@53@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Strings should be equal\",expected,actual.toString())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expected == null && actual == null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertTrue(\"Should be a UTF8String\",actual instanceof UTF8String)@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "timestampType.shouldAdjustToUTC()@@@14@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
14->43 [style = dotted, label="true"];
14->72 [style = dotted, label="true"];
39->7 [style = solid, label="expected"];
24->46 [style = solid, label="actual"];
20->23 [style = bold, label=""];
14->4 [style = dotted, label="true"];
39->1 [style = solid, label="expected"];
77->68 [style = solid, label="actual"];
14->68 [style = dotted, label="true"];
24->41 [style = solid, label="actual"];
14->75 [style = dotted, label="true"];
16->32 [style = solid, label="expected"];
76->68 [style = solid, label="expected"];
35->4 [style = bold, label=""];
14->5 [style = dotted, label="true"];
14->18 [style = dotted, label="true"];
30->21 [style = bold, label=""];
14->3 [style = bold, label=""];
16->15 [style = solid, label="expected"];
14->32 [style = bold, label=""];
60->65 [style = dotted, label="false"];
77->67 [style = solid, label="actual"];
14->64 [style = bold, label=""];
24->34 [style = solid, label="actual"];
76->29 [style = solid, label="expected"];
14->62 [style = dotted, label="true"];
14->26 [style = dotted, label="true"];
33->24 [style = dotted, label="true"];
76->57 [style = solid, label="expected"];
24->69 [style = solid, label="type"];
14->64 [style = dotted, label="true"];
14->7 [style = dotted, label="true"];
14->19 [style = bold, label=""];
24->20 [style = solid, label="actual"];
44->28 [style = bold, label=""];
19->43 [style = bold, label=""];
14->28 [style = bold, label=""];
39->19 [style = solid, label="expected"];
14->29 [style = bold, label=""];
24->17 [style = solid, label="actual"];
76->26 [style = solid, label="expected"];
16->22 [style = solid, label="expected"];
39->36 [style = solid, label="expected"];
4->19 [style = bold, label=""];
14->28 [style = dotted, label="true"];
59->13 [style = bold, label=""];
77->62 [style = solid, label="actual"];
13->0 [style = dotted, label="true"];
77->13 [style = solid, label="actual"];
1->17 [style = bold, label=""];
77->65 [style = solid, label="actual"];
14->70 [style = dotted, label="true"];
38->35 [style = bold, label=""];
27->11 [style = solid, label="expectedMicros"];
24->7 [style = solid, label="actual"];
59->76 [style = dotted, label="true"];
76->35 [style = solid, label="expected"];
49->39 [style = dotted, label="true"];
16->36 [style = solid, label="expected"];
31->29 [style = bold, label=""];
32->56 [style = bold, label=""];
14->23 [style = dotted, label="true"];
14->10 [style = bold, label=""];
77->20 [style = solid, label="actual"];
14->71 [style = bold, label=""];
16->5 [style = solid, label="expected"];
39->13 [style = solid, label="expected"];
77->25 [style = solid, label="actual"];
14->5 [style = bold, label=""];
28->30 [style = bold, label=""];
14->74 [style = bold, label=""];
57->61 [style = bold, label=""];
64->3 [style = bold, label=""];
14->7 [style = bold, label=""];
16->35 [style = solid, label="expected"];
23->75 [style = dashed, label="0"];
14->71 [style = dotted, label="true"];
37->31 [style = bold, label=""];
58->75 [style = bold, label=""];
24->25 [style = solid, label="actual"];
14->35 [style = bold, label=""];
14->36 [style = dotted, label="true"];
13->0 [style = bold, label=""];
14->21 [style = bold, label=""];
14->35 [style = dotted, label="true"];
16->29 [style = solid, label="expected"];
77->75 [style = solid, label="actual"];
26->72 [style = bold, label=""];
33->16 [style = dotted, label="true"];
10->68 [style = dashed, label="0"];
39->28 [style = solid, label="expected"];
76->15 [style = solid, label="expected"];
34->9 [style = bold, label=""];
39->23 [style = solid, label="expected"];
77->23 [style = solid, label="actual"];
12->26 [style = solid, label="type"];
39->48 [style = solid, label="expected"];
14->41 [style = bold, label=""];
8->3 [style = bold, label=""];
39->29 [style = solid, label="expected"];
24->44 [style = solid, label="actual"];
14->31 [style = dotted, label="true"];
14->32 [style = dotted, label="true"];
60->67 [style = bold, label=""];
45->50 [style = solid, label="type"];
47->40 [style = bold, label=""];
24->15 [style = solid, label="actual"];
56->37 [style = bold, label=""];
76->23 [style = solid, label="expected"];
39->47 [style = solid, label="expected"];
49->13 [style = bold, label=""];
45->53 [style = solid, label="type"];
39->32 [style = solid, label="expected"];
62->60 [style = bold, label=""];
24->35 [style = solid, label="actual"];
14->2 [style = dotted, label="true"];
52->48 [style = dotted, label="true"];
14->20 [style = dotted, label="true"];
14->34 [style = bold, label=""];
24->32 [style = solid, label="actual"];
77->72 [style = solid, label="actual"];
14->22 [style = dotted, label="true"];
15->20 [style = bold, label=""];
14->23 [style = bold, label=""];
6->54 [style = bold, label=""];
14->37 [style = dotted, label="true"];
33->12 [style = dotted, label="true"];
14->52 [style = dotted, label="true"];
14->44 [style = dotted, label="true"];
0->14 [style = bold, label=""];
14->34 [style = dotted, label="true"];
76->13 [style = solid, label="expected"];
39->15 [style = solid, label="expected"];
24->11 [style = solid, label="actual"];
14->69 [style = dotted, label="true"];
76->74 [style = solid, label="expected"];
18->6 [style = bold, label=""];
16->1 [style = solid, label="expected"];
77->70 [style = solid, label="actual"];
14->30 [style = dotted, label="true"];
24->26 [style = solid, label="actual"];
59->77 [style = dotted, label="true"];
14->17 [style = dotted, label="true"];
14->36 [style = bold, label=""];
14->22 [style = bold, label=""];
77->73 [style = solid, label="actual"];
16->37 [style = solid, label="expected"];
24->23 [style = solid, label="actual"];
57->63 [style = bold, label=""];
29->55 [style = bold, label=""];
73->57 [style = bold, label=""];
39->2 [style = solid, label="expected"];
40->42 [style = solid, label="expectedMicros"];
40->42 [style = bold, label=""];
77->58 [style = solid, label="actual"];
39->3 [style = solid, label="expected"];
76->3 [style = solid, label="expected"];
24->54 [style = solid, label="actual"];
76->63 [style = solid, label="expected"];
14->3 [style = dotted, label="true"];
24->29 [style = solid, label="actual"];
14->1 [style = dotted, label="true"];
41->2 [style = bold, label=""];
24->56 [style = solid, label="actual"];
3->66 [style = dashed, label="0"];
71->25 [style = bold, label=""];
76->65 [style = solid, label="expected"];
74->58 [style = bold, label=""];
14->46 [style = dotted, label="true"];
51->34 [style = bold, label=""];
54->22 [style = bold, label=""];
76->28 [style = solid, label="expected"];
27->11 [style = bold, label=""];
76->37 [style = solid, label="expected"];
51->34 [style = solid, label="expectedMicros"];
24->28 [style = solid, label="actual"];
14->38 [style = dotted, label="true"];
14->6 [style = dotted, label="true"];
14->73 [style = bold, label=""];
76->71 [style = solid, label="expected"];
77->64 [style = solid, label="actual"];
76->75 [style = solid, label="expected"];
55->15 [style = bold, label=""];
14->25 [style = dotted, label="true"];
77->61 [style = solid, label="actual"];
52->34 [style = dotted, label="true"];
16->13 [style = solid, label="expected"];
49->45 [style = dotted, label="true"];
16->28 [style = solid, label="expected"];
24->3 [style = solid, label="actual"];
52->48 [style = bold, label=""];
24->13 [style = solid, label="actual"];
21->38 [style = bold, label=""];
16->7 [style = solid, label="expected"];
14->2 [style = bold, label=""];
57->61 [style = dotted, label="true"];
76->60 [style = solid, label="expected"];
39->37 [style = solid, label="expected"];
24->8 [style = solid, label="actual"];
24->42 [style = solid, label="actual"];
24->18 [style = solid, label="actual"];
76->70 [style = solid, label="expected"];
49->24 [style = dotted, label="true"];
77->32 [style = solid, label="actual"];
14->15 [style = bold, label=""];
52->51 [style = dotted, label="true"];
14->56 [style = dotted, label="true"];
14->50 [style = bold, label=""];
17->67 [style = dashed, label="0"];
39->26 [style = solid, label="expected"];
52->47 [style = bold, label=""];
4->66 [style = bold, label=""];
39->51 [style = solid, label="expected"];
14->50 [style = dotted, label="true"];
24->21 [style = solid, label="actual"];
14->9 [style = dotted, label="true"];
24->55 [style = solid, label="actual"];
14->55 [style = dotted, label="true"];
14->66 [style = dotted, label="true"];
25->32 [style = bold, label=""];
60->65 [style = bold, label=""];
24->30 [style = solid, label="actual"];
14->53 [style = dotted, label="true"];
43->5 [style = bold, label=""];
22->8 [style = bold, label=""];
52->42 [style = dotted, label="false"];
39->5 [style = solid, label="expected"];
24->43 [style = solid, label="actual"];
24->4 [style = solid, label="actual"];
48->51 [style = bold, label=""];
14->58 [style = dotted, label="true"];
1->17 [style = solid, label="expectedDays"];
14->74 [style = dotted, label="true"];
57->63 [style = dotted, label="false"];
23->46 [style = bold, label=""];
46->26 [style = bold, label=""];
14->27 [style = dotted, label="true"];
24->31 [style = solid, label="actual"];
14->37 [style = bold, label=""];
14->8 [style = dotted, label="true"];
10->27 [style = bold, label=""];
59->24 [style = dotted, label="true"];
14->69 [style = bold, label=""];
16->19 [style = solid, label="expected"];
3->44 [style = bold, label=""];
77->30 [style = solid, label="actual"];
14->57 [style = dotted, label="true"];
14->26 [style = bold, label=""];
16->27 [style = solid, label="expected"];
77->31 [style = solid, label="actual"];
33->13 [style = bold, label=""];
24->37 [style = solid, label="actual"];
39->21 [style = solid, label="expected"];
14->21 [style = dotted, label="true"];
77->4 [style = solid, label="actual"];
14->41 [style = dotted, label="true"];
22->35 [style = dashed, label="0"];
39->6 [style = solid, label="expected"];
14->15 [style = dotted, label="true"];
2->18 [style = bold, label=""];
29->70 [style = dashed, label="0"];
5->25 [style = bold, label=""];
16->2 [style = solid, label="expected"];
52->47 [style = dotted, label="false"];
14->53 [style = bold, label=""];
72->70 [style = bold, label=""];
36->1 [style = bold, label=""];
14->29 [style = dotted, label="true"];
14->10 [style = dotted, label="true"];
14->73 [style = dotted, label="true"];
14->6 [style = bold, label=""];
14->19 [style = dotted, label="true"];
52->40 [style = dotted, label="false"];
16->9 [style = solid, label="expected"];
14->62 [style = bold, label=""];
60->67 [style = dotted, label="true"];
50->52 [style = bold, label=""];
36->62 [style = dashed, label="0"];
14->11 [style = dotted, label="true"];
16->10 [style = solid, label="expected"];
14->54 [style = dotted, label="true"];
13->14 [style = bold, label=""];
16->23 [style = solid, label="expected"];
14->68 [style = bold, label=""];
14->60 [style = dotted, label="true"];
16->3 [style = solid, label="expected"];
77->66 [style = solid, label="actual"];
77->63 [style = solid, label="actual"];
24->38 [style = solid, label="actual"];
}
