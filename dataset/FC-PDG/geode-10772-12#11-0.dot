digraph {
22 [style = filled, label = "waitForCreated(client,cqName,KEY + numOfEntries * 2)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "deleteValues(server,regions(0(,5)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testCqExecuteWithoutQueryExecutionAndNoRSCaching['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "final String cqName = \"testCqExecuteWithoutQueryExecution_1\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "server.invoke(new CacheSerializableRunnable(\"execute cq\"){@Override public void run2(){assertFalse(\"CqServiceImpl.EXECUTE_QUERY_DURING_INIT flag should be false \",CqServiceImpl.EXECUTE_QUERY_DURING_INIT)long numOfQueryExecutions = (Long)((GemFireCacheImpl)getCache()).getCachePerfStats().getStats().get(\"queryExecutions\")assertEquals(\"Number of query executions for cq.execute should be 0 \",0,numOfQueryExecutions)}})@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCqExecuteWithoutQueryExecutionAndNoRSCaching['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "waitForUpdated(client,cqName,KEY + numOfEntries)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "closeClient(client)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "createServer(server)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "server.invoke(new CacheSerializableRunnable(\"Create values\"){@Override public void run2(){Region region1 = getRootRegion().getSubregion(regions(0()for (int i = numOfEntries + 1 i <= numOfEntries * 2 i++){region1.put(KEY + i,new Portfolio(i))}LogWriterUtils.getLogWriter().info(\"### Number of Entries in Region :\" + region1.keySet().size())}})@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "executeCQ(client,cqName,false,null)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final VM server = host.getVM(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final int thePort = server.invoke(null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "createClient(client,thePort,host0)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "validateCQCount(client,1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "server.invoke(new CacheSerializableRunnable(\"execute cq\"){@Override public void run2(){CqServiceProvider.MAINTAIN_KEYS = false}})@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Host host = Host.getHost(0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "createCQ(client,cqName,cqs(0()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "validateCQ(client,cqName,noTest,numOfEntries,15,5,numOfEntries,15,5,numOfEntries + 15 + 5)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testCqExecuteWithoutQueryExecution['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "createValues(server,regions(0(,10)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "validateCQ(client,cqName,noTest,numOfEntries,15,0,numOfEntries,15,0,numOfEntries + 15)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "closeServer(server)@@@46@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final VM client = host.getVM(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final int numOfEntries = 10@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String host0 = NetworkUtils.getServerHostName(server.getHost())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "createValues(server,regions(0(,numOfEntries)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "waitForDestroyed(client,cqName,KEY + 5)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "validateCQ(client,cqName,noTest,numOfEntries,0,0,numOfEntries,0,0,numOfEntries)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "createValues(server,regions(0(,5)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->26 [style = solid, label="server"];
1->0 [style = solid, label="server"];
28->3 [style = bold, label=""];
7->9 [style = solid, label="thePort"];
24->13 [style = bold, label=""];
16->23 [style = solid, label="cqName"];
29->3 [style = bold, label=""];
18->20 [style = solid, label="numOfEntries"];
18->19 [style = solid, label="numOfEntries"];
27->25 [style = bold, label=""];
16->26 [style = bold, label=""];
12->23 [style = solid, label="client"];
12->11 [style = solid, label="client"];
16->27 [style = solid, label="cqName"];
0->7 [style = bold, label=""];
2->5 [style = bold, label=""];
1->12 [style = bold, label=""];
16->2 [style = solid, label="cqName"];
12->27 [style = solid, label="client"];
4->11 [style = bold, label=""];
12->5 [style = solid, label="client"];
22->27 [style = bold, label=""];
18->22 [style = solid, label="numOfEntries"];
20->22 [style = bold, label=""];
12->2 [style = solid, label="client"];
12->24 [style = solid, label="client"];
18->5 [style = solid, label="numOfEntries"];
14->9 [style = solid, label="host0"];
16->6 [style = solid, label="cqName"];
14->9 [style = bold, label=""];
12->4 [style = solid, label="client"];
19->24 [style = bold, label=""];
6->19 [style = bold, label=""];
17->3 [style = bold, label=""];
12->9 [style = solid, label="client"];
1->15 [style = solid, label="server"];
15->6 [style = bold, label=""];
1->8 [style = solid, label="server"];
18->0 [style = solid, label="numOfEntries"];
3->1 [style = bold, label=""];
16->11 [style = solid, label="cqName"];
7->14 [style = bold, label=""];
1->13 [style = solid, label="server"];
16->21 [style = bold, label=""];
11->10 [style = bold, label=""];
8->2 [style = bold, label=""];
18->27 [style = solid, label="numOfEntries"];
1->25 [style = solid, label="server"];
21->26 [style = bold, label=""];
12->22 [style = solid, label="client"];
21->10 [style = solid, label="MAINTAIN_KEYS"];
18->16 [style = bold, label=""];
12->18 [style = bold, label=""];
16->19 [style = solid, label="cqName"];
25->8 [style = bold, label=""];
9->23 [style = bold, label=""];
16->5 [style = solid, label="cqName"];
12->6 [style = solid, label="client"];
23->4 [style = bold, label=""];
16->22 [style = solid, label="cqName"];
12->19 [style = solid, label="client"];
26->0 [style = bold, label=""];
5->15 [style = bold, label=""];
18->2 [style = solid, label="numOfEntries"];
10->20 [style = bold, label=""];
}
