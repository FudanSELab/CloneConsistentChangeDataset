digraph {
5 [style = filled, label = "return null@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "totalBytes > primaryAndCoordinatingLimits@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "forceExecution == false && totalBytes > primaryAndCoordinatingLimits@@@6@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "boolean forceExecution@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "markPrimaryOperationStarted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "this.currentCombinedCoordinatingAndPrimaryBytes.getAndAdd(-bytes)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "forceExecution == false && totalBytes > primaryAndCoordinatingLimits@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "totalPrimaryBytes.getAndAdd(bytes)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "totalCoordinatingBytes.getAndAdd(bytes)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "long bytes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of primary operation (\" + \"coordinating_and_primary_bytes=\" + bytesWithoutOperation + \", \" + \"replica_bytes=\" + replicaWriteBytes + \", \" + \"all_bytes=\" + totalBytesWithoutOperation + \", \" + \"primary_operation_bytes=\" + bytes + \", \" + \"max_coordinating_and_primary_bytes=\" + primaryAndCoordinatingLimits + \"(\",false)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "currentCoordinatingBytes.getAndAdd(bytes)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "markCoordinatingOperationStarted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "boolean forceExecution@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "long bytes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "totalCombinedCoordinatingAndPrimaryBytes.getAndAdd(bytes)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of coordinating operation (\" + \"coordinating_and_primary_bytes=\" + bytesWithoutOperation + \", \" + \"replica_bytes=\" + replicaWriteBytes + \", \" + \"all_bytes=\" + totalBytesWithoutOperation + \", \" + \"coordinating_operation_bytes=\" + bytes + \", \" + \"max_coordinating_and_primary_bytes=\" + primaryAndCoordinatingLimits + \"(\",false)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "currentPrimaryBytes.getAndAdd(bytes)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "this.coordinatingRejections.getAndIncrement()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "long bytes@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "long totalBytesWithoutOperation = totalBytes - bytes@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "long bytesWithoutOperation = combinedBytes - bytes@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "long replicaWriteBytes = this.currentReplicaBytes.get()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "this.primaryRejections.getAndIncrement()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "markCoordinatingOperationStarted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "long combinedBytes = this.currentCombinedCoordinatingAndPrimaryBytes.addAndGet(bytes)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "long totalBytes = combinedBytes + replicaWriteBytes@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->3 [style = bold, label=""];
14->13 [style = solid, label="totalBytesWithoutOperation"];
7->13 [style = solid, label="replicaWriteBytes"];
9->11 [style = bold, label=""];
12->5 [style = bold, label=""];
23->22 [style = dotted, label="true"];
16->13 [style = solid, label="bytes"];
4->14 [style = solid, label="totalBytes"];
4->15 [style = bold, label=""];
2->22 [style = solid, label="bytesWithoutOperation"];
26->22 [style = bold, label=""];
15->9 [style = dotted, label="true"];
8->0 [style = bold, label=""];
9->26 [style = bold, label=""];
15->0 [style = bold, label=""];
6->2 [style = solid, label="bytes"];
2->14 [style = bold, label=""];
11->13 [style = bold, label=""];
19->3 [style = solid, label="bytes"];
1->12 [style = bold, label=""];
4->8 [style = bold, label=""];
14->9 [style = bold, label=""];
19->25 [style = solid, label="bytes"];
17->15 [style = solid, label="forceExecution"];
10->6 [style = dotted, label="true"];
16->3 [style = solid, label="bytes"];
18->16 [style = dotted, label="true"];
15->2 [style = dotted, label="true"];
3->2 [style = solid, label="combinedBytes"];
6->17 [style = dashed, label="0"];
20->3 [style = bold, label=""];
15->14 [style = dotted, label="true"];
23->2 [style = dotted, label="true"];
23->9 [style = dotted, label="true"];
15->13 [style = dotted, label="true"];
23->14 [style = dotted, label="true"];
6->12 [style = solid, label="bytes"];
14->22 [style = solid, label="totalBytesWithoutOperation"];
6->0 [style = solid, label="bytes"];
3->7 [style = bold, label=""];
19->24 [style = solid, label="bytes"];
8->14 [style = dotted, label="true"];
7->22 [style = solid, label="replicaWriteBytes"];
7->4 [style = solid, label="replicaWriteBytes"];
18->17 [style = dotted, label="true"];
16->1 [style = solid, label="bytes"];
4->23 [style = bold, label=""];
19->1 [style = solid, label="bytes"];
13->0 [style = bold, label=""];
4->8 [style = solid, label="totalBytes"];
6->13 [style = solid, label="bytes"];
8->2 [style = dotted, label="true"];
11->26 [style = dashed, label="0"];
7->4 [style = bold, label=""];
19->22 [style = solid, label="bytes"];
19->2 [style = solid, label="bytes"];
19->14 [style = solid, label="bytes"];
8->2 [style = bold, label=""];
0->1 [style = bold, label=""];
3->4 [style = solid, label="combinedBytes"];
15->11 [style = dotted, label="true"];
8->11 [style = dotted, label="true"];
25->5 [style = bold, label=""];
20->19 [style = dotted, label="true"];
4->23 [style = solid, label="totalBytes"];
23->2 [style = bold, label=""];
8->9 [style = dotted, label="true"];
24->1 [style = bold, label=""];
8->13 [style = dotted, label="true"];
16->2 [style = solid, label="bytes"];
1->25 [style = bold, label=""];
6->21 [style = dashed, label="0"];
15->2 [style = bold, label=""];
21->23 [style = solid, label="forceExecution"];
6->1 [style = solid, label="bytes"];
16->14 [style = solid, label="bytes"];
8->15 [style = dashed, label="0"];
10->3 [style = bold, label=""];
6->3 [style = solid, label="bytes"];
20->21 [style = dotted, label="true"];
6->14 [style = solid, label="bytes"];
16->0 [style = solid, label="bytes"];
23->24 [style = bold, label=""];
23->26 [style = dotted, label="true"];
12->25 [style = dashed, label="0"];
16->12 [style = solid, label="bytes"];
4->15 [style = solid, label="totalBytes"];
0->24 [style = dashed, label="0"];
22->24 [style = bold, label=""];
13->22 [style = dashed, label="0"];
2->13 [style = solid, label="bytesWithoutOperation"];
8->23 [style = dashed, label="0"];
}
