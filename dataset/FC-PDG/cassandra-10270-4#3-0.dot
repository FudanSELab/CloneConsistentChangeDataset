digraph {
1 [style = filled, label = "shouldSelectTwoRandomHostsFromSingleOtherRack['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(result,JUnitMatchers.hasItem(InetAddress.getByName(\"1\")))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(result,JUnitMatchers.hasItem(InetAddress.getByName(\"0\")))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "shouldSelectHostFromLocal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(result.size(),is(2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(new HashSet<>(result).size(),is(2))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertThat(result,JUnitMatchers.hasItem(InetAddress.getByName(\"11\")))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(result.size(),is(2))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Multimap<String,InetAddress> endpoints = ImmutableMultimap.builder().put(LOCAL,InetAddress.getByName(\"0\")).put(LOCAL,InetAddress.getByName(\"00\")).put(\"1\",InetAddress.getByName(\"1\")).put(\"1\",InetAddress.getByName(\"11\")).put(\"1\",InetAddress.getByName(\"111\")).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(result,JUnitMatchers.hasItem(InetAddress.getByName(\"111\")))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Multimap<String,InetAddress> endpoints = ImmutableMultimap.builder().put(LOCAL,InetAddress.getByName(\"0\")).put(LOCAL,InetAddress.getByName(\"00\")).put(\"1\",InetAddress.getByName(\"1\")).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Collection<InetAddress> result = new TestEndpointFilter(LOCAL,endpoints).filter()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldSelectTwoRandomHostsFromSingleOtherRack['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
0->11 [style = bold, label=""];
8->10 [style = bold, label=""];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
11->12 [style = bold, label=""];
0->6 [style = solid, label="result"];
5->6 [style = bold, label=""];
3->11 [style = dashed, label="0"];
12->9 [style = bold, label=""];
0->4 [style = bold, label=""];
3->4 [style = dashed, label="0"];
4->5 [style = bold, label=""];
7->2 [style = bold, label=""];
0->5 [style = solid, label="result"];
10->0 [style = bold, label=""];
2->10 [style = dashed, label="0"];
0->12 [style = solid, label="result"];
0->9 [style = solid, label="result"];
}
