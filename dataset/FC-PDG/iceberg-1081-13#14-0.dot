digraph {
27 [style = filled, label = "stats.put(id,col.getStatistics())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "PrimitiveType colType = fileSchema.getType(meta.getPath().toArray()).asPrimitiveType()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "colType.getId() != null@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "BlockMetaData rowGroup@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "BlockMetaData rowGroup@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BlockMetaData rowGroup@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "eval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "conversions.put(id,ParquetConversions.converterFromParquet(colType))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "return ROWS_CANNOT_MATCH@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "this.isFallback = Maps.newHashMap()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "PrimitiveType colType = fileSchema.getType(desc.getPath()).asPrimitiveType()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "this.dictCache = Maps.newHashMap()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "return ExpressionVisitors.visitEvaluator(expr,this)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "this.dictionaries = dictionaryReadStore@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "mayContainNulls.put(id,mayContainNull(meta))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "valueCounts.put(id,col.getValueCount())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "MessageType fileSchema@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "eval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "rowGroup.getRowCount() <= 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int id = colType.getId().intValue()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "this.stats = Maps.newHashMap()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "this.cols = Maps.newHashMap()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "MessageType fileSchema@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "return ExpressionVisitors.visitEvaluator(expr,this)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "colType.getId() != null@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "this.valueCounts = Maps.newHashMap()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "eval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "this.mayContainNulls = Maps.newHashMap()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cols.put(id,desc)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "isFallback.put(id,ParquetUtil.hasNonDictionaryPages(meta))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "conversions.put(id,ParquetConversions.converterFromParquet(colType))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "DictionaryPageReadStore dictionaryReadStore@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "this.conversions = Maps.newHashMap()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "{this.dictionaries = nullthis.dictCache = nullthis.isFallback = nullthis.mayContainNulls = nullthis.cols = nullthis.conversions = null}@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "MessageType fileSchema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "PrimitiveType colType = fileSchema.getType(col.getPath().toArray()).asPrimitiveType()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int id = colType.getId().intValue()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
32->35 [style = bold, label=""];
14->31 [style = dashed, label="0"];
19->27 [style = dashed, label="0"];
2->26 [style = bold, label=""];
27->36 [style = bold, label=""];
1->8 [style = bold, label=""];
24->14 [style = dotted, label="true"];
15->4 [style = solid, label="colType"];
32->35 [style = dotted, label="true"];
9->2 [style = bold, label=""];
10->27 [style = bold, label=""];
18->34 [style = bold, label=""];
10->19 [style = bold, label=""];
17->9 [style = bold, label=""];
20->0 [style = bold, label=""];
12->17 [style = bold, label=""];
18->15 [style = bold, label=""];
20->3 [style = solid, label="id"];
10->36 [style = solid, label="id"];
4->15 [style = bold, label=""];
3->11 [style = bold, label=""];
1->20 [style = bold, label=""];
35->33 [style = bold, label=""];
18->26 [style = bold, label=""];
30->26 [style = bold, label=""];
18->19 [style = dotted, label="true"];
23->7 [style = solid, label="dictionaryReadStore"];
10->4 [style = solid, label="id"];
30->34 [style = bold, label=""];
20->0 [style = solid, label="id"];
10->30 [style = solid, label="id"];
17->33 [style = dashed, label="0"];
15->18 [style = bold, label=""];
25->2 [style = bold, label=""];
32->33 [style = bold, label=""];
21->6 [style = dotted, label="true"];
1->11 [style = bold, label=""];
1->3 [style = dotted, label="true"];
18->10 [style = dotted, label="true"];
8->1 [style = bold, label=""];
36->30 [style = bold, label=""];
18->36 [style = dotted, label="true"];
24->23 [style = dotted, label="true"];
14->7 [style = solid, label="dictionaryReadStore"];
18->10 [style = bold, label=""];
29->28 [style = dotted, label="true"];
33->25 [style = bold, label=""];
10->19 [style = solid, label="id"];
26->30 [style = solid, label="colType"];
3->8 [style = bold, label=""];
29->32 [style = bold, label=""];
24->22 [style = dotted, label="true"];
11->13 [style = bold, label=""];
2->15 [style = bold, label=""];
7->16 [style = bold, label=""];
9->25 [style = dashed, label="0"];
21->14 [style = dotted, label="true"];
15->26 [style = dashed, label="0"];
21->7 [style = bold, label=""];
4->8 [style = bold, label=""];
21->5 [style = dotted, label="true"];
29->31 [style = dotted, label="true"];
18->8 [style = bold, label=""];
19->4 [style = bold, label=""];
18->4 [style = dotted, label="true"];
1->0 [style = dotted, label="true"];
24->7 [style = bold, label=""];
16->12 [style = bold, label=""];
1->20 [style = dotted, label="true"];
18->27 [style = dotted, label="true"];
26->18 [style = bold, label=""];
18->30 [style = dotted, label="true"];
10->27 [style = solid, label="id"];
}
