digraph {
2 [style = filled, label = "HadoopTables tables = new HadoopTables(CONF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Dataset<Row> df = spark.read().format(\"iceberg\").option(SparkReadOptions.SNAPSHOT_ID,snapshotId).option(SparkReadOptions.AS_OF_TIMESTAMP,timestamp).load(tableLocation)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "expectedRecords.addAll(secondBatchRecords)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(\"Expected 2 snapshots\",2,Iterables.size(table.snapshots()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<SimpleRecord> secondBatchRecords = Lists.newArrayList(new SimpleRecord(4,\"d\"),new SimpleRecord(5,\"e\"),new SimpleRecord(6,\"f\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "df.collectAsList()@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<SimpleRecord> firstBatchRecords = Lists.newArrayList(new SimpleRecord(1,\"a\"),new SimpleRecord(2,\"b\"),new SimpleRecord(3,\"c\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Snapshot currentSnapshot = table.currentSnapshot()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String tableLocation = temp.newFolder(\"iceberg-table\").toString()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "secondDf.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(tableLocation)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "firstDf.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(tableLocation)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "long timestamp = System.currentTimeMillis()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(\"Previous snapshot rows should match\",firstBatchRecords,previousSnapshotRecords)@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "PartitionSpec spec = PartitionSpec.unpartitioned()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Table table = tables.create(SCHEMA,spec,tableLocation)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Dataset<Row> secondDf = spark.createDataFrame(secondBatchRecords,)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Dataset<Row> firstDf = spark.createDataFrame(firstBatchRecords,)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "List<SimpleRecord> currentSnapshotRecords = currentSnapshotResult.orderBy(\"id\").as(Encoders.bean()).collectAsList()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Dataset<Row> previousSnapshotResult = spark.read().format(\"iceberg\").option(\"snapshot-id\",parentSnapshotId).load(tableLocation)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<SimpleRecord> expectedRecords = Lists.newArrayList()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testSnapshotSelectionBySnapshotIdAndTimestamp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "expectedRecords.addAll(firstBatchRecords)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Long parentSnapshotId = currentSnapshot.parentId()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Dataset<Row> df = spark.read().format(\"iceberg\").option(\"snapshot-id\",snapshotId).option(\"as-of-timestamp\",timestamp).load(tableLocation)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "long snapshotId = table.currentSnapshot().snapshotId()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Dataset<Row> currentSnapshotResult = spark.read().format(\"iceberg\").load(tableLocation)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testSnapshotSelectionBySnapshotIdAndTimestamp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<SimpleRecord> previousSnapshotRecords = previousSnapshotResult.orderBy(\"id\").as(Encoders.bean()).collectAsList()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(\"Current snapshot rows should match\",expectedRecords,currentSnapshotRecords)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testSnapshotSelectionById['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
6->4 [style = solid, label="tableLocation"];
6->28 [style = solid, label="tableLocation"];
25->28 [style = bold, label=""];
7->11 [style = bold, label=""];
8->17 [style = solid, label="firstBatchRecords"];
18->21 [style = solid, label="secondBatchRecords"];
16->24 [style = bold, label=""];
0->4 [style = solid, label="spec"];
15->24 [style = solid, label="expectedRecords"];
8->1 [style = solid, label="firstBatchRecords"];
1->3 [style = bold, label=""];
23->17 [style = solid, label="previousSnapshotRecords"];
9->7 [style = bold, label=""];
15->19 [style = bold, label=""];
12->6 [style = bold, label=""];
20->25 [style = bold, label=""];
10->6 [style = bold, label=""];
27->15 [style = bold, label=""];
26->22 [style = bold, label=""];
19->16 [style = bold, label=""];
29->26 [style = bold, label=""];
3->18 [style = bold, label=""];
6->2 [style = bold, label=""];
24->20 [style = bold, label=""];
3->9 [style = bold, label=""];
8->1 [style = bold, label=""];
6->11 [style = solid, label="tableLocation"];
11->5 [style = bold, label=""];
11->13 [style = dashed, label="0"];
2->0 [style = bold, label=""];
21->29 [style = bold, label=""];
22->27 [style = bold, label=""];
18->16 [style = solid, label="secondBatchRecords"];
0->4 [style = bold, label=""];
28->23 [style = bold, label=""];
6->22 [style = solid, label="tableLocation"];
6->3 [style = solid, label="tableLocation"];
13->5 [style = bold, label=""];
4->8 [style = bold, label=""];
23->17 [style = bold, label=""];
6->29 [style = solid, label="tableLocation"];
27->24 [style = solid, label="currentSnapshotRecords"];
18->21 [style = bold, label=""];
6->13 [style = solid, label="tableLocation"];
14->6 [style = bold, label=""];
8->19 [style = solid, label="firstBatchRecords"];
}
