digraph {
12 [style = filled, label = "assertEquals(n1.getMax(),n2.getMax(),1e-6)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "n1.setAvg(2.0f)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final Map<String,Object> params = n1.paramsToMap()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Map<String,Object> params = n1.paramsToMap()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testParamsToMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(n1.getStd(),n2.getStd(),1e-6)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final StandardNormalizer n2 = (StandardNormalizer)Normalizer.getInstance(new SolrResourceLoader(Paths.get(\"\").toAbsolutePath()),.getName(),params)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "n1.setStd(3.0f)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "n1.setMax(10.0f)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "n1.setMin(5.0f)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testParamsToMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testParamsToMap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(n1.getAvg(),n2.getAvg(),1e-6)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final MinMaxNormalizer n1 = new MinMaxNormalizer()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final StandardNormalizer n2 = (StandardNormalizer)Normalizer.getInstance(new SolrResourceLoader(),.getName(),params)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(n1.getMin(),n2.getMin(),1e-6)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final StandardNormalizer n1 = new StandardNormalizer()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final MinMaxNormalizer n2 = (MinMaxNormalizer)Normalizer.getInstance(new SolrResourceLoader(),.getName(),params)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
5->3 [style = bold, label=""];
15->13 [style = bold, label=""];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
4->16 [style = dashed, label="0"];
9->0 [style = bold, label=""];
1->14 [style = dashed, label="0"];
7->17 [style = dashed, label="0"];
1->8 [style = solid, label="params"];
6->0 [style = bold, label=""];
16->17 [style = bold, label=""];
2->8 [style = dashed, label="0"];
4->7 [style = bold, label=""];
0->10 [style = dashed, label="0"];
2->15 [style = dashed, label="0"];
1->2 [style = solid, label="params"];
13->12 [style = bold, label=""];
3->12 [style = dashed, label="0"];
8->5 [style = bold, label=""];
10->16 [style = bold, label=""];
0->4 [style = bold, label=""];
17->14 [style = bold, label=""];
11->10 [style = bold, label=""];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
14->15 [style = solid, label="params"];
2->5 [style = bold, label=""];
}
