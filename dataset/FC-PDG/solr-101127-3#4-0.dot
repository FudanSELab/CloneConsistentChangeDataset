digraph {
21 [style = filled, label = "assertEquals(13,queryResponse.getResults().getNumFound())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final JsonQueryRequest request = new JsonQueryRequest().setQuery(\"*:*\").withFilter(\"price:(1.0 TO *(\").withFilter(\"popularity:(0 TO 10(\").withStatFacet(\"min_manu_id_s\",\"min(manu_id_s)\").withStatFacet(\"avg_value\",\"avg(div(popularity,price))\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "final JsonQueryRequest request = new JsonQueryRequest().setQuery(\"*:*\").withFilter(\"price:(1.0 TO *(\").withFilter(\"popularity:(0 TO 10(\").withFacet(\"avg_value\",expandedStatFacet)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(val instanceof String)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(10,queryResponse.getResults().size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "expandedStatFacet.put(\"type\",\"func\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(10,queryResponse.getResults().size())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Object val = topLevelFacetingData.getStatValue(\"min_manu_id_s\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "expandedStatFacet.put(\"denom\",\"price\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "QueryResponse queryResponse = request.process(solrClient,COLLECTION_NAME)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testStatFacetSimple['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Map<String,Object> expandedStatFacet = new HashMap<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testStatFacetExpanded['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(0.036,(double)topLevelFacetingData.getStatValue(\"avg_value\"),0.1)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(13,queryResponse.getResults().getNumFound())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expandedStatFacet.put(\"func\",\"avg(div($numer,$denom))\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "QueryResponse queryResponse = request.process(solrClient,COLLECTION_NAME)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testStatFacetSimple['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "expandedStatFacet.put(\"numer\",\"mul(popularity,3.0)\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"apple\",val.toString())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "SolrClient solrClient = cluster.getSolrClient()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(0.108,(double)topLevelFacetingData.getStatFacetValue(\"avg_value\"),0.1)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(0,queryResponse.getStatus())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final JsonQueryRequest request = new JsonQueryRequest().setQuery(\"*:*\").withFilter(\"price:(1.0 TO *(\").withFilter(\"popularity:(0 TO 10(\").withStatFacet(\"avg_value\",\"avg(div(popularity,price))\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(0,queryResponse.getStatus())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->3 [style = bold, label=""];
26->17 [style = bold, label=""];
11->14 [style = bold, label=""];
22->16 [style = bold, label=""];
15->21 [style = bold, label=""];
8->3 [style = bold, label=""];
12->11 [style = bold, label=""];
10->3 [style = bold, label=""];
16->23 [style = bold, label=""];
17->22 [style = bold, label=""];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
4->0 [style = bold, label=""];
6->2 [style = bold, label=""];
11->14 [style = solid, label="val"];
5->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
21->20 [style = bold, label=""];
3->2 [style = solid, label="solrClient"];
3->19 [style = bold, label=""];
19->26 [style = bold, label=""];
24->25 [style = bold, label=""];
19->23 [style = solid, label="expandedStatFacet"];
7->6 [style = bold, label=""];
2->15 [style = bold, label=""];
2->25 [style = dashed, label="0"];
3->13 [style = bold, label=""];
3->0 [style = solid, label="solrClient"];
14->9 [style = bold, label=""];
23->2 [style = bold, label=""];
4->13 [style = dashed, label="0"];
20->24 [style = bold, label=""];
0->5 [style = bold, label=""];
13->0 [style = bold, label=""];
6->12 [style = bold, label=""];
}
