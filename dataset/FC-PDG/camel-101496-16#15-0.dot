digraph {
7 [style = filled, label = "throw new IllegalStateException(\"Tar file has more than 1 entry.\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Exchange exchange@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "BufferedInputStream bis = new BufferedInputStream(stream)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final InputStream stream@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "TarArchiveInputStream tis = (TarArchiveInputStream)new ArchiveStreamFactory().createArchiveInputStream(ArchiveStreamFactory.TAR,bis)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final Exchange exchange@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "OutputStreamBuilder osb = OutputStreamBuilder.withExchange(exchange)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "zipIterator.setSupportIteratorForEmptyDirectory(supportIteratorForEmptyDirectory)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "entry != null@@@18@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "unmarshal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return new ZipIterator(exchange.getIn())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "return new TarIterator(exchange.getIn(),stream)@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final Exchange exchange@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "{IOHelper.close(zis,osb)}@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "usingIterator@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "exchange.getOut().setHeader(FILE_NAME,entry.getName())@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "entry != null@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return osb.build()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TarArchiveEntry entry = tis.getNextTarEntry()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "IOHelper.copy(tis,osb)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ZipIterator zipIterator = new ZipIterator(exchange.getIn())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "entry != null@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "return zipIterator@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "OutputStreamBuilder osb = OutputStreamBuilder.withExchange(exchange)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "entry = tis.getNextTarEntry()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ZipInputStream zis = new ZipInputStream(inputStream)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{IOHelper.close(osb,tis,bis)}@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "unmarshal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "unmarshal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "entry != null@@@12@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "exchange.getOut().setHeader(FILE_NAME,entry.getName())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "entry != null@@@17@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "exchange.getIn().setHeader(\"unzipEmptyDirectorySupported\",isSupportEmptyDirectory())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "ZipInputStream zis = new ZipInputStream(inputStream)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "final InputStream inputStream@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14->17 [style = dotted, label="false"];
27->13 [style = solid, label="osb"];
28->6 [style = bold, label=""];
31->26 [style = solid, label="stream"];
14->2 [style = dotted, label="false"];
16->7 [style = bold, label=""];
14->17 [style = bold, label=""];
14->22 [style = dotted, label="true"];
21->24 [style = bold, label=""];
33->1 [style = solid, label="tis"];
5->12 [style = dotted, label="true"];
25->6 [style = bold, label=""];
3->4 [style = bold, label=""];
1->23 [style = bold, label=""];
16->7 [style = dotted, label="true"];
5->13 [style = dotted, label="true"];
14->21 [style = dotted, label="true"];
14->0 [style = dotted, label="false"];
29->14 [style = dotted, label="true"];
15->14 [style = dashed, label="0"];
17->6 [style = solid, label="zis"];
14->7 [style = dotted, label="true"];
12->13 [style = solid, label="entry"];
29->14 [style = bold, label=""];
14->11 [style = dotted, label="true"];
2->26 [style = dashed, label="0"];
11->5 [style = solid, label="entry"];
21->22 [style = solid, label="zipIterator"];
28->13 [style = dotted, label="true"];
31->14 [style = solid, label="stream"];
13->6 [style = dotted, label="true"];
13->25 [style = bold, label=""];
11->28 [style = bold, label=""];
29->26 [style = dotted, label="false"];
14->12 [style = dotted, label="true"];
13->25 [style = dotted, label="true"];
14->24 [style = dotted, label="true"];
30->7 [style = dotted, label="true"];
27->1 [style = solid, label="osb"];
11->12 [style = bold, label=""];
33->27 [style = bold, label=""];
9->34 [style = dashed, label="0"];
29->26 [style = bold, label=""];
29->33 [style = dotted, label="false"];
5->6 [style = bold, label=""];
27->11 [style = bold, label=""];
30->7 [style = bold, label=""];
9->11 [style = solid, label="exchange"];
20->10 [style = dotted, label="true"];
30->10 [style = bold, label=""];
26->33 [style = solid, label="bis"];
14->15 [style = bold, label=""];
14->1 [style = dotted, label="true"];
6->7 [style = bold, label=""];
10->1 [style = bold, label=""];
19->17 [style = solid, label="inputStream"];
14->21 [style = bold, label=""];
32->31 [style = dotted, label="true"];
11->6 [style = solid, label="osb"];
29->10 [style = dotted, label="true"];
29->6 [style = dotted, label="true"];
4->14 [style = bold, label=""];
2->1 [style = solid, label="zis"];
32->34 [style = dotted, label="true"];
18->19 [style = dotted, label="true"];
0->11 [style = bold, label=""];
15->21 [style = dashed, label="0"];
7->20 [style = bold, label=""];
20->1 [style = bold, label=""];
28->12 [style = bold, label=""];
6->16 [style = solid, label="entry"];
34->27 [style = solid, label="exchange"];
3->9 [style = dotted, label="true"];
14->16 [style = dotted, label="true"];
6->30 [style = solid, label="entry"];
12->13 [style = bold, label=""];
11->5 [style = bold, label=""];
2->0 [style = bold, label=""];
14->5 [style = dotted, label="true"];
29->28 [style = dotted, label="true"];
0->1 [style = solid, label="osb"];
29->27 [style = dotted, label="false"];
18->9 [style = dotted, label="true"];
11->23 [style = solid, label="osb"];
14->2 [style = bold, label=""];
13->6 [style = bold, label=""];
14->11 [style = dotted, label="false"];
28->12 [style = dotted, label="true"];
29->11 [style = dotted, label="true"];
14->6 [style = dotted, label="true"];
2->13 [style = solid, label="zis"];
16->10 [style = bold, label=""];
7->10 [style = bold, label=""];
7->20 [style = solid, label="entry"];
33->13 [style = solid, label="tis"];
8->0 [style = solid, label="exchange"];
0->13 [style = solid, label="osb"];
24->22 [style = bold, label=""];
14->10 [style = dotted, label="true"];
14->13 [style = dotted, label="true"];
20->10 [style = bold, label=""];
32->29 [style = bold, label=""];
14->20 [style = dotted, label="true"];
14->15 [style = dotted, label="true"];
11->28 [style = solid, label="entry"];
5->12 [style = bold, label=""];
6->16 [style = bold, label=""];
13->7 [style = bold, label=""];
26->1 [style = solid, label="bis"];
29->30 [style = dotted, label="true"];
9->2 [style = solid, label="inputStream"];
3->8 [style = dotted, label="true"];
26->33 [style = bold, label=""];
18->14 [style = bold, label=""];
17->23 [style = solid, label="zis"];
17->11 [style = bold, label=""];
6->30 [style = bold, label=""];
}
