digraph {
17 [style = filled, label = "return UTF8String.fromBytes(data)@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int resultSize = Math.toIntExact((long)numBytes + (long)pad.numBytes * count + remain.numBytes)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "copyMemory(this.base,this.offset,data,BYTE_ARRAY_OFFSET,this.numBytes)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "copyMemory(pad.base,pad.offset,data,BYTE_ARRAY_OFFSET + offset,pad.numBytes)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int count = spaces / padChars@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "UTF8String pad@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return substring(0,len)@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "rpad['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "copyMemory(remain.base,remain.offset,data,BYTE_ARRAY_OFFSET + offset,remain.numBytes)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "byte(( data = new byte((((@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "spaces <= 0 || pad.numBytes() == 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int offset = this.numBytes@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int len@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "UTF8String pad@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "++idx@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "rpad['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "offset += remain.numBytes@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "copyMemory(this.base,this.offset,data,BYTE_ARRAY_OFFSET + offset,numBytes())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int resultSize = Math.toIntExact((long)numBytes + pad.numBytes * count + remain.numBytes)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int len@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "idx < count@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "offset += pad.numBytes@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int offset = 0@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int spaces = len - this.numChars()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "lpad['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int padChars = pad.numChars()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return UTF8String.fromBytes(data)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "offset += pad.numBytes@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "UTF8String remain = pad.substring(0,spaces - padChars * count)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int len@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int idx = 0@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->16 [style = bold, label=""];
15->10 [style = bold, label=""];
1->3 [style = solid, label="len"];
4->8 [style = solid, label="offset"];
11->1 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
8->16 [style = dotted, label="true"];
24->25 [style = solid, label="offset"];
15->6 [style = dotted, label="false"];
14->17 [style = bold, label=""];
25->14 [style = bold, label=""];
7->8 [style = bold, label=""];
4->25 [style = solid, label="offset"];
8->4 [style = dotted, label="true"];
9->18 [style = solid, label="count"];
28->30 [style = dotted, label="true"];
13->16 [style = solid, label="data"];
15->17 [style = dotted, label="false"];
20->3 [style = solid, label="len"];
15->25 [style = dotted, label="false"];
18->21 [style = dashed, label="0"];
6->14 [style = solid, label="offset"];
7->16 [style = dotted, label="true"];
9->5 [style = bold, label=""];
3->15 [style = solid, label="spaces"];
28->3 [style = bold, label=""];
15->23 [style = dotted, label="false"];
6->16 [style = solid, label="offset"];
28->27 [style = dotted, label="true"];
15->7 [style = dotted, label="false"];
19->14 [style = solid, label="offset"];
21->13 [style = bold, label=""];
14->23 [style = solid, label="offset"];
27->3 [style = solid, label="len"];
15->14 [style = dotted, label="false"];
10->9 [style = solid, label="padChars"];
15->2 [style = dotted, label="true"];
4->19 [style = bold, label=""];
10->5 [style = solid, label="padChars"];
13->25 [style = solid, label="data"];
12->30 [style = dashed, label="0"];
15->24 [style = dotted, label="false"];
7->8 [style = solid, label="idx"];
5->21 [style = bold, label=""];
15->0 [style = dotted, label="false"];
22->20 [style = dotted, label="true"];
24->8 [style = solid, label="offset"];
29->7 [style = solid, label="idx"];
3->9 [style = solid, label="spaces"];
13->14 [style = solid, label="data"];
6->7 [style = bold, label=""];
7->8 [style = dotted, label="true"];
13->8 [style = solid, label="data"];
8->19 [style = dotted, label="true"];
13->0 [style = bold, label=""];
13->0 [style = solid, label="data"];
13->24 [style = bold, label=""];
15->9 [style = dotted, label="false"];
20->2 [style = solid, label="len"];
13->26 [style = solid, label="data"];
8->14 [style = bold, label=""];
15->5 [style = dotted, label="false"];
5->18 [style = bold, label=""];
9->8 [style = solid, label="count"];
4->7 [style = bold, label=""];
14->23 [style = bold, label=""];
11->3 [style = bold, label=""];
15->18 [style = dotted, label="false"];
9->5 [style = solid, label="count"];
10->9 [style = bold, label=""];
16->4 [style = bold, label=""];
27->2 [style = solid, label="len"];
15->8 [style = dotted, label="false"];
15->2 [style = bold, label=""];
9->21 [style = solid, label="count"];
0->6 [style = bold, label=""];
1->2 [style = solid, label="len"];
13->23 [style = solid, label="data"];
23->26 [style = bold, label=""];
3->15 [style = bold, label=""];
24->29 [style = bold, label=""];
13->17 [style = solid, label="data"];
15->21 [style = dotted, label="false"];
19->8 [style = bold, label=""];
3->5 [style = solid, label="spaces"];
22->12 [style = dotted, label="true"];
15->29 [style = dotted, label="false"];
22->3 [style = bold, label=""];
7->4 [style = dotted, label="true"];
18->13 [style = bold, label=""];
29->7 [style = bold, label=""];
15->26 [style = dotted, label="false"];
15->13 [style = dotted, label="false"];
7->25 [style = bold, label=""];
9->7 [style = solid, label="count"];
15->10 [style = dotted, label="false"];
19->16 [style = solid, label="offset"];
}
