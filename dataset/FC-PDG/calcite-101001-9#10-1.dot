digraph {
0 [style = filled, label = "testEquiJoinPlan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "CalciteAssert.model(JdbcTest.SCOTT_MODEL).query(\"select empno, ename, e.deptno, dname \" + \"from scott.emp e inner join scott.dept d \" + \"on e.deptno = d.deptno\").explainContains(\"PLAN=JdbcToEnumerableConverter\" + \" JdbcProject(EMPNO=($2(, ENAME=($3(, DEPTNO=($4(, DNAME=($1()\" + \" JdbcJoin(condition=(=($4, $0)(, joinType=(inner()\" + \" JdbcProject(DEPTNO=($0(, DNAME=($1()\" + \" JdbcTableScan(table=((SCOTT, DEPT(()\" + \" JdbcProject(EMPNO=($0(, ENAME=($1(, DEPTNO=($7()\" + \" JdbcTableScan(table=((SCOTT, EMP(()\").runs().enable(CalciteAssert.DB == CalciteAssert.DatabaseInstance.HSQLDB).planHasSql(\"SELECT \"t0\".\"EMPNO\", \"t0\".\"ENAME\", \" + \"\"t0\".\"DEPTNO\", \"t\".\"DNAME\"\" + \"FROM (SELECT \"DEPTNO\", \"DNAME\"\" + \"FROM \"SCOTT\".\"DEPT\") AS \"t\"\" + \"INNER JOIN (SELECT \"EMPNO\", \"ENAME\", \"DEPTNO\"\" + \"FROM \"SCOTT\".\"EMP\") AS \"t0\" \" + \"ON \"t\".\"DEPTNO\" = \"t0\".\"DEPTNO\"\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "CalciteAssert.model(JdbcTest.SCOTT_MODEL).query(\"select empno, ename, e.deptno, dname \" + \"from scott.emp e inner join scott.dept d \" + \"on e.deptno = d.deptno\").explainContains(\"PLAN=JdbcToEnumerableConverter\" + \" JdbcProject(EMPNO=($0(, ENAME=($1(, DEPTNO=($2(, DNAME=($4()\" + \" JdbcJoin(condition=(=($2, $3)(, joinType=(inner()\" + \" JdbcProject(EMPNO=($0(, ENAME=($1(, DEPTNO=($7()\" + \" JdbcTableScan(table=((SCOTT, EMP(()\" + \" JdbcProject(DEPTNO=($0(, DNAME=($1()\" + \" JdbcTableScan(table=((SCOTT, DEPT(()\").runs().enable(CalciteAssert.DB == CalciteAssert.DatabaseInstance.HSQLDB).planHasSql(\"SELECT \"t\".\"EMPNO\", \"t\".\"ENAME\", \" + \"\"t\".\"DEPTNO\", \"t0\".\"DNAME\"\" + \"FROM (SELECT \"EMPNO\", \"ENAME\", \"DEPTNO\"\" + \"FROM \"SCOTT\".\"EMP\") AS \"t\"\" + \"INNER JOIN (SELECT \"DEPTNO\", \"DNAME\"\" + \"FROM \"SCOTT\".\"DEPT\") AS \"t0\" \" + \"ON \"t\".\"DEPTNO\" = \"t0\".\"DEPTNO\"\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testCrossJoinWithJoinKeyPlan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "CalciteAssert.model(JdbcTest.SCOTT_MODEL).query(\"select empno, ename, d.deptno, dname \" + \"from scott.emp e,scott.dept d \" + \"where e.deptno = d.deptno\").explainContains(\"PLAN=JdbcToEnumerableConverter\" + \" JdbcProject(EMPNO=($2(, ENAME=($3(, DEPTNO=($0(, DNAME=($1()\" + \" JdbcJoin(condition=(=($4, $0)(, joinType=(inner()\" + \" JdbcProject(DEPTNO=($0(, DNAME=($1()\" + \" JdbcTableScan(table=((SCOTT, DEPT(()\" + \" JdbcProject(EMPNO=($0(, ENAME=($1(, DEPTNO=($7()\" + \" JdbcTableScan(table=((SCOTT, EMP(()\").runs().enable(CalciteAssert.DB == CalciteAssert.DatabaseInstance.HSQLDB).planHasSql(\"SELECT \"t0\".\"EMPNO\", \"t0\".\"ENAME\", \" + \"\"t\".\"DEPTNO\", \"t\".\"DNAME\"\" + \"FROM (SELECT \"DEPTNO\", \"DNAME\"\" + \"FROM \"SCOTT\".\"DEPT\") AS \"t\"\" + \"INNER JOIN (SELECT \"EMPNO\", \"ENAME\", \"DEPTNO\"\" + \"FROM \"SCOTT\".\"EMP\") AS \"t0\" ON \"t\".\"DEPTNO\" = \"t0\".\"DEPTNO\"\")@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testEquiJoinPlan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->2 [style = dashed, label="0"];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
3->2 [style = bold, label=""];
}
