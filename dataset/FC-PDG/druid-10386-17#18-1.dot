digraph {
15 [style = filled, label = "loadManagementPeons = new ConcurrentHashMap<>()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "scheduledExecutorFactory = null@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sourceLoadQueuePeon = new CuratorLoadQueuePeon(curator,SOURCE_LOAD_PATH,objectMapper,peonExec,callbackExec,druidCoordinatorConfig)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "coordinatorRuntimeParams = EasyMock.createNiceMock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "druidServer = EasyMock.createMock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "setupServerAndCurator()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "objectMapper = new DefaultObjectMapper()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "segmentsMetadata = EasyMock.createNiceMock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "sourceLoadQueueChildrenCache = new PathChildrenCache(curator,SOURCE_LOAD_PATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache_src-%d\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "pathChildrenCache = new PathChildrenCache(curator,LOADPATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache-%d\"))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(SEGPATH)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "JacksonConfigManager configManager = EasyMock.createNiceMock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorCompactionConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference(CoordinatorCompactionConfig.empty())).anyTimes()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "coordinator = new DruidCoordinator(druidCoordinatorConfig,new ZkPathsConfig(){@Override public String getBase(){return \"druid\"}},configManager,segmentsMetadata,baseView,metadataRuleManager,curator,new NoopServiceEmitter(),scheduledExecutorFactory,null,null,new NoopServiceAnnouncer(){@Override public void announce(DruidNode node){leaderAnnouncerLatch.countDown()}@Override public void unannounce(DruidNode node){leaderUnannouncerLatch.countDown()}},druidNode,loadManagementPeons,null,new CostBalancerStrategyFactory(),EasyMock.createNiceMock(),new TestDruidLeaderSelector(),null)@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorDynamicConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference<>(CoordinatorDynamicConfig.builder().build())).anyTimes()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "druidNode = new DruidNode(\"hey\",\"what\",false,1234,null,true,false)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "curator.start()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(LOADPATH)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "dataSourcesSnapshot = EasyMock.createNiceMock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "metadataRuleManager = EasyMock.createNiceMock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "serverInventoryView = EasyMock.createMock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "druidNode = new DruidNode(\"hey\",\"what\",false,1234,null,true,false)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "destinationLoadQueuePeon = new CuratorLoadQueuePeon(curator,DESTINATION_LOAD_PATH,objectMapper,peonExec,callbackExec,druidCoordinatorConfig)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "leaderAnnouncerLatch = new CountDownLatch(1)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "loadQueuePeon.start()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "loadQueuePeon = new CuratorLoadQueuePeon(curator,LOADPATH,objectMapper,Execs.scheduledSingleThreaded(\"coordinator_test_load_queue_peon_scheduled-%d\"),Execs.singleThreaded(\"coordinator_test_load_queue_peon-%d\"),druidCoordinatorConfig)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(DESTINATION_LOAD_PATH)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "configManager = EasyMock.createNiceMock()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "leaderUnannouncerLatch = new CountDownLatch(1)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "curator.blockUntilConnected()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "leaderUnannouncerLatch = new CountDownLatch(1)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "coordinator = new DruidCoordinator(druidCoordinatorConfig,new ZkPathsConfig(){@Override public String getBase(){return \"druid\"}},configManager,segmentsMetadata,serverInventoryView,metadataRuleManager,curator,serviceEmitter,scheduledExecutorFactory,null,null,new NoopServiceAnnouncer(){@Override public void announce(DruidNode node){leaderAnnouncerLatch.countDown()}@Override public void unannounce(DruidNode node){leaderUnannouncerLatch.countDown()}},druidNode,loadManagementPeons,null,new CostBalancerStrategyFactory(),EasyMock.createNiceMock(),new TestDruidLeaderSelector())@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorDynamicConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference(CoordinatorDynamicConfig.builder().build())).anyTimes()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "scheduledExecutorFactory = new ScheduledExecutorFactory(){@Override public ScheduledExecutorService create(int corePoolSize,final String nameFormat){return Executors.newSingleThreadScheduledExecutor()}}@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "EasyMock.replay(configManager)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "druidCoordinatorConfig = new TestDruidCoordinatorConfig(new Duration(COORDINATOR_START_DELAY),new Duration(COORDINATOR_PERIOD),null,null,new Duration(COORDINATOR_PERIOD),null,10,null,new Duration(\"PT0s\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "destinationLoadQueueChildrenCache = new PathChildrenCache(curator,DESTINATION_LOAD_PATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache_dest-%d\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(SOURCE_LOAD_PATH)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "loadManagementPeons = new ConcurrentHashMap<>()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "leaderAnnouncerLatch = new CountDownLatch(1)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
11->20 [style = bold, label=""];
36->40 [style = bold, label=""];
2->13 [style = solid, label="configManager"];
37->28 [style = bold, label=""];
28->36 [style = bold, label=""];
34->22 [style = solid, label="objectMapper"];
30->33 [style = bold, label=""];
21->19 [style = bold, label=""];
38->10 [style = bold, label=""];
23->5 [style = dashed, label="0"];
20->26 [style = bold, label=""];
26->5 [style = bold, label=""];
22->37 [style = bold, label=""];
10->32 [style = solid, label="segmentsMetadata"];
18->15 [style = bold, label=""];
16->7 [style = bold, label=""];
39->8 [style = bold, label=""];
22->0 [style = solid, label="druidCoordinatorConfig"];
40->32 [style = solid, label="scheduledExecutorFactory"];
14->10 [style = bold, label=""];
11->29 [style = dashed, label="0"];
22->1 [style = solid, label="druidCoordinatorConfig"];
9->17 [style = bold, label=""];
38->32 [style = solid, label="serverInventoryView"];
18->13 [style = solid, label="druidNode"];
36->32 [style = solid, label="loadManagementPeons"];
34->42 [style = bold, label=""];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
5->1 [style = solid, label="objectMapper"];
29->34 [style = bold, label=""];
42->22 [style = solid, label="druidCoordinatorConfig"];
15->16 [style = bold, label=""];
12->1 [style = bold, label=""];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
22->23 [style = bold, label=""];
4->41 [style = bold, label=""];
22->13 [style = solid, label="druidCoordinatorConfig"];
4->13 [style = solid, label="metadataRuleManager"];
10->13 [style = solid, label="segmentsMetadata"];
28->32 [style = solid, label="druidNode"];
7->24 [style = bold, label=""];
31->35 [style = bold, label=""];
19->9 [style = bold, label=""];
4->32 [style = solid, label="metadataRuleManager"];
15->13 [style = solid, label="loadManagementPeons"];
27->10 [style = bold, label=""];
2->21 [style = solid, label="configManager"];
12->22 [style = dashed, label="0"];
8->21 [style = bold, label=""];
16->13 [style = solid, label="scheduledExecutorFactory"];
41->21 [style = solid, label="configManager"];
0->18 [style = bold, label=""];
40->30 [style = bold, label=""];
25->8 [style = bold, label=""];
23->12 [style = bold, label=""];
33->32 [style = bold, label=""];
35->38 [style = bold, label=""];
42->5 [style = bold, label=""];
5->0 [style = solid, label="objectMapper"];
2->41 [style = dashed, label="0"];
41->39 [style = bold, label=""];
17->29 [style = bold, label=""];
2->25 [style = bold, label=""];
5->22 [style = bold, label=""];
16->40 [style = dashed, label="0"];
42->32 [style = solid, label="druidCoordinatorConfig"];
25->39 [style = dashed, label="0"];
41->32 [style = solid, label="configManager"];
24->13 [style = bold, label=""];
17->11 [style = bold, label=""];
}
