digraph {
8 [style = filled, label = "builder.add(\"non masked arg\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ArgumentListBuilder builder = new ArgumentListBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "builder.prepend(\"first\",\"second\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "boolean(( array = builder.toMaskArray()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertSeveralMaskedArguments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertNotNull(\"The mask array should not be null\",array)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "builder.addMasked(\"ismasked\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "builder.add(\"arg\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(\"The mask array was incorrect\",array,is(new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@47e74d))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertSeveralMaskedArguments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertTrue(\"There should be masked arguments\",builder.hasMaskedArguments())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertArrayEquals(\"The mask array was incorrect\",new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@47e70d,array)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertArrayEquals(\"The mask array was incorrect\",new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@47e785,array)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "builder.addMasked(\"ismasked2\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "builder.add(\"arg\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertPrependBeforeAddingMasked['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
5->8 [style = bold, label=""];
15->2 [style = bold, label=""];
9->10 [style = dashed, label="0"];
4->0 [style = solid, label="array"];
0->10 [style = solid, label="array"];
8->6 [style = bold, label=""];
5->14 [style = bold, label=""];
8->14 [style = dashed, label="0"];
0->3 [style = solid, label="array"];
11->2 [style = bold, label=""];
4->0 [style = bold, label=""];
2->13 [style = bold, label=""];
3->9 [style = bold, label=""];
3->10 [style = bold, label=""];
6->4 [style = bold, label=""];
7->5 [style = bold, label=""];
12->4 [style = bold, label=""];
0->9 [style = solid, label="array"];
14->12 [style = bold, label=""];
7->13 [style = dashed, label="0"];
13->5 [style = bold, label=""];
1->2 [style = bold, label=""];
2->7 [style = bold, label=""];
4->3 [style = solid, label="array"];
}
