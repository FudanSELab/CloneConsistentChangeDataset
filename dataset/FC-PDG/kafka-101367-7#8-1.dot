digraph {
3 [style = filled, label = "verifyEquality(TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)).grace(ofMillis(1)).until(4),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)).grace(ofMillis(1)).until(4))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "verifyEquality(TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "verifyEquality(TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)).grace(ofMillis(1)).grace(ofMillis(4)),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)).grace(ofMillis(1)).grace(ofMillis(4)))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "verifyEquality(TimeWindows.of(ofMillis(3)).grace(ofMillis(1)),TimeWindows.of(ofMillis(3)).grace(ofMillis(1)))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verifyEquality(TimeWindows.of(ofMillis(3)).until(4),TimeWindows.of(ofMillis(3)).until(4))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "equalsAndHashcodeShouldBeValidForPositiveCases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "equalsAndHashcodeShouldBeValidForPositiveCases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "verifyEquality(SessionWindows.with(ofMillis(1)).until(7),SessionWindows.with(ofMillis(1)).until(7))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "equalsAndHashcodeShouldBeValidForPositiveCases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verifyEquality(SessionWindows.with(ofMillis(1)).grace(ofMillis(6)),SessionWindows.with(ofMillis(1)).grace(ofMillis(6)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "verifyEquality(TimeWindows.of(ofMillis(3)),TimeWindows.of(ofMillis(3)))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verifyEquality(TimeWindows.of(ofMillis(3)).grace(ofMillis(4)),TimeWindows.of(ofMillis(3)).grace(ofMillis(4)))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "verifyEquality(SessionWindows.with(ofMillis(1)),SessionWindows.with(ofMillis(1)))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "verifyEquality(SessionWindows.with(ofMillis(1)).grace(ofMillis(6)).until(7),SessionWindows.with(ofMillis(1)).grace(ofMillis(6)).until(7))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6->8 [style = bold, label=""];
13->10 [style = bold, label=""];
3->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
11->12 [style = bold, label=""];
5->12 [style = dashed, label="0"];
5->0 [style = bold, label=""];
12->9 [style = bold, label=""];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
2->3 [style = bold, label=""];
9->13 [style = bold, label=""];
2->6 [style = dashed, label="0"];
}
