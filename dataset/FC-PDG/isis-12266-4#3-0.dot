digraph {
9 [style = filled, label = "Assertions.assertThat(userMemento.getName()).isEqualTo(\"fredflintstone\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "val userMemento2 = userMemento.withImpersonating()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Assertions.assertThat(userMemento2).isNotSameAs(userMemento)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "val userMemento2 = userMemento.withImpersonating(true)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assertions.assertThat(userMemento.getAvatarUrl()).isNull()@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assertions.assertThat(userMemento.getRealName()).isNull()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assertions.assertThat(userMemento.getRoles()).hasSize(2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assertions.assertThat(userMemento.isImpersonating()).isFalse()@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "val userMemento = UserMemento.ofNameAndRoleNames(\"fredflintstone\",\"CAVEMAN\",\"HUSBAND\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assertions.assertThat(userMemento2.isImpersonating()).isTrue()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "name_and_roles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assertions.assertThat(userMemento.streamRoleNames()).anyMatch(null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assertions.assertThat(userMemento.streamRoleNames()).anyMatch(null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "user_and_roles_preserved_and_impersonating_flag_set['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "user_and_roles_preserved_and_impersonating_flag_set['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3->6 [style = dashed, label="0"];
7->1 [style = bold, label=""];
9->11 [style = bold, label=""];
11->14 [style = bold, label=""];
2->1 [style = bold, label=""];
1->3 [style = bold, label=""];
0->12 [style = dashed, label="0"];
1->9 [style = bold, label=""];
4->0 [style = bold, label=""];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
3->5 [style = bold, label=""];
1->6 [style = bold, label=""];
5->11 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
14->12 [style = bold, label=""];
5->4 [style = bold, label=""];
4->14 [style = dashed, label="0"];
13->8 [style = bold, label=""];
10->1 [style = bold, label=""];
1->5 [style = solid, label="userMemento"];
}
