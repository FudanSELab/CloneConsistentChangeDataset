digraph {
3 [style = filled, label = "short epoch = 15@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,RecordBatch.CURRENT_MAGIC_VALUE,compressionType,TimestampType.CREATE_TIME,0L,0L,pid,epoch,sequence,true,RecordBatch.NO_PARTITION_LEADER_EPOCH,buffer.capacity())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "testWriteTransactionalRecordSet['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int sequence = 2342@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "builder.append(System.currentTimeMillis(),\"foo\".getBytes(),\"bar\".getBytes())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(1,batches.size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "buffer.position(bufferOffset)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MemoryRecords records = builder.build()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,RecordBatch.CURRENT_MAGIC_VALUE,compressionType,TimestampType.CREATE_TIME,0L,0L,pid,epoch,sequence,true,RecordBatch.NO_PARTITION_LEADER_EPOCH,buffer.capacity())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "long pid = 9809@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ByteBuffer buffer = ByteBuffer.allocate(128)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "new MemoryRecordsBuilder(buffer,RecordBatch.CURRENT_MAGIC_VALUE,compressionType,TimestampType.CREATE_TIME,0L,0L,pid,epoch,sequence,true,RecordBatch.NO_PARTITION_LEADER_EPOCH,buffer.capacity())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "builder.close()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertTrue(batches.get(0).isTransactional())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<MutableRecordBatch> batches = Utils.toList(records.batches().iterator())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "long pid = RecordBatch.NO_PRODUCER_ID@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testWriteTransactionalWithInvalidPID['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "testWriteTransactionalWithInvalidPID['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16->15 [style = bold, label=""];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
6->10 [style = solid, label="sequence"];
15->14 [style = bold, label=""];
4->17 [style = dashed, label="0"];
9->2 [style = bold, label=""];
3->10 [style = solid, label="epoch"];
2->1 [style = bold, label=""];
6->7 [style = solid, label="sequence"];
0->2 [style = bold, label=""];
3->6 [style = bold, label=""];
7->8 [style = bold, label=""];
6->5 [style = solid, label="sequence"];
3->5 [style = solid, label="epoch"];
13->16 [style = bold, label=""];
11->2 [style = bold, label=""];
1->17 [style = bold, label=""];
6->5 [style = bold, label=""];
10->13 [style = bold, label=""];
5->10 [style = dashed, label="0"];
6->10 [style = bold, label=""];
14->12 [style = bold, label=""];
2->5 [style = solid, label="buffer"];
17->3 [style = bold, label=""];
2->7 [style = solid, label="buffer"];
2->10 [style = solid, label="buffer"];
4->7 [style = solid, label="pid"];
5->7 [style = dashed, label="0"];
6->7 [style = bold, label=""];
4->5 [style = solid, label="pid"];
17->10 [style = solid, label="pid"];
3->7 [style = solid, label="epoch"];
}
