digraph {
2 [style = filled, label = "UserExceptionAsyncFunction asyncWaitFunction = new UserExceptionAsyncFunction()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "OneInputStreamOperatorTestHarness<Integer,Integer> harness = new OneInputStreamOperatorTestHarness<>(asyncWaitOperator,IntSerializer.INSTANCE,mockEnvironment)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "harness.getCheckpointLock()@@@12@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testUserExceptionHandling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "harness.getCheckpointLock()@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testUserExceptionHandling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "mockEnvironment.setExpectedExternalFailureCause()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(harness.getEnvironment().getActualExternalFailureCause().isPresent())@@@16@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "AsyncFunction<Integer,Integer> asyncFunction = new NoOpAsyncFunction<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "AsyncDataStream.OutputMode outputMode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "harness.getCheckpointLock()@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(harness.getEnvironment().getActualExternalFailureCause().isPresent())@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "long timeout = 2000L@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "AsyncDataStream.OutputMode outputMode@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "OneInputStreamOperatorTestHarness<Integer,Integer> harness = new OneInputStreamOperatorTestHarness<>(asyncWaitOperator,IntSerializer.INSTANCE)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "AsyncWaitOperator<Integer,Integer> asyncWaitOperator = new AsyncWaitOperator<>(asyncWaitFunction,TIMEOUT,2,outputMode)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "AsyncWaitOperator<Integer,Integer> asyncWaitOperator = new AsyncWaitOperator<>(asyncFunction,timeout,2,outputMode)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "harness.close()@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final MockEnvironment mockEnvironment = createMockEnvironment()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "harness.setProcessingTime(10L)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "harness.getEnvironment().setExpectedExternalFailureCause()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "testTimeoutExceptionHandling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "harness.processElement(1,1L)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "harness.open()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "long timeout = 10L@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "harness.open()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7->13 [style = bold, label=""];
6->3 [style = bold, label=""];
10->21 [style = dashed, label="0"];
25->22 [style = bold, label=""];
5->10 [style = dotted, label="true"];
1->18 [style = solid, label="asyncWaitOperator"];
25->23 [style = solid, label="asyncFunction"];
0->4 [style = dotted, label="true"];
3->11 [style = bold, label=""];
18->17 [style = bold, label=""];
1->18 [style = bold, label=""];
6->17 [style = dashed, label="0"];
16->2 [style = bold, label=""];
9->3 [style = solid, label="mockEnvironment"];
22->23 [style = bold, label=""];
16->10 [style = dotted, label="true"];
12->7 [style = bold, label=""];
0->15 [style = bold, label=""];
1->9 [style = bold, label=""];
21->23 [style = solid, label="outputMode"];
9->6 [style = bold, label=""];
8->1 [style = bold, label=""];
8->22 [style = dashed, label="0"];
5->2 [style = bold, label=""];
11->0 [style = bold, label=""];
23->3 [style = solid, label="asyncWaitOperator"];
1->3 [style = solid, label="asyncWaitOperator"];
10->1 [style = solid, label="outputMode"];
0->4 [style = bold, label=""];
17->14 [style = bold, label=""];
24->25 [style = bold, label=""];
11->0 [style = dotted, label="true"];
20->12 [style = bold, label=""];
4->20 [style = bold, label=""];
4->12 [style = bold, label=""];
15->12 [style = dotted, label="true"];
15->12 [style = bold, label=""];
22->23 [style = solid, label="timeout"];
12->19 [style = bold, label=""];
12->7 [style = dotted, label="true"];
24->21 [style = dotted, label="true"];
2->1 [style = solid, label="asyncWaitFunction"];
14->11 [style = bold, label=""];
23->9 [style = bold, label=""];
1->23 [style = dashed, label="0"];
2->8 [style = bold, label=""];
}
