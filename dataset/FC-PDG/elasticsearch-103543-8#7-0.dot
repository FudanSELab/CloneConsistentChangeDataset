digraph {
20 [style = filled, label = "thread.start()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertFalse(tracker.pendingInSync.contains(trackingAllocationId.getId()))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final ReplicationTracker tracker = newTracker(inSyncAllocationId)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(interrupted.get())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "randomBoolean()@@@38@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "testWaitForAllocationIdToBeInSync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final AtomicBoolean interrupted = new AtomicBoolean()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertFalse(complete.get())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Randomness.shuffle(elements)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i < elements.size()@@@31@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "updateLocalCheckpoint(tracker,trackingAllocationId.getId(),randomIntBetween(globalCheckpoint,64))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(tracker.getTrackedLocalCheckpointForShard(trackingAllocationId.getId()).inSync)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final Thread thread = new Thread(null)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "tracker.activatePrimaryMode(globalCheckpoint)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "barrier.await()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "tracker.updateFromMaster(randomNonNegativeLong(),Collections.singleton(inSyncAllocationId.getId()),routingTable(Collections.singleton(trackingAllocationId),inSyncAllocationId),emptySet())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final int globalCheckpoint = randomIntBetween(localCheckpoint + 1,64)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertFalse(tracker.getTrackedLocalCheckpointForShard(trackingAllocationId.getId()).inSync)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testWaitForAllocationIdToBeInSyncCanBeInterrupted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "updateLocalCheckpoint(tracker,trackingAllocationId.getId(),elements.get(i))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "tracker.updateFromMaster(clusterStateVersion + 1,Collections.singleton(inSyncAllocationId.getId()),routingTable(emptySet(),inSyncAllocationId),emptySet())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final List<Integer> elements = IntStream.rangeClosed(0,globalCheckpoint - 1).boxed().collect(Collectors.toList())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "tracker.updateFromMaster(clusterStateVersion,Collections.singleton(inSyncAllocationId.getId()),routingTable(Collections.singleton(trackingAllocationId),inSyncAllocationId),emptySet())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertNull(tracker.getTrackedLocalCheckpointForShard(trackingAllocationId.getId()))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertBusy(null)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int i = 0@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tracker.updateFromMaster(randomNonNegativeLong(),Collections.singleton(inSyncAllocationId.getId()),routingTable(Collections.singleton(trackingAllocationId),inSyncAllocationId))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "barrier.await()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final AtomicBoolean complete = new AtomicBoolean()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "thread.join()@@@51@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final CyclicBarrier barrier = new CyclicBarrier(2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "barrier.await()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "thread.join()@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testWaitForAllocationIdToBeInSyncCanBeInterrupted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "assertTrue(complete.get())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final long clusterStateVersion = randomNonNegativeLong()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final AllocationId inSyncAllocationId = AllocationId.newInitializing()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final AllocationId trackingAllocationId = AllocationId.newInitializing()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final int localCheckpoint = randomIntBetween(1,32)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "barrier.await()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(complete.get())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i++@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tracker.activatePrimaryMode(globalCheckpoint)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
27->13 [style = bold, label=""];
32->37 [style = bold, label=""];
34->20 [style = bold, label=""];
10->15 [style = solid, label="inSyncAllocationId"];
11->18 [style = solid, label="trackingAllocationId"];
16->7 [style = bold, label=""];
36->12 [style = bold, label=""];
41->28 [style = bold, label=""];
22->8 [style = bold, label=""];
15->0 [style = bold, label=""];
40->26 [style = bold, label=""];
10->41 [style = solid, label="inSyncAllocationId"];
30->33 [style = dotted, label="false"];
3->30 [style = bold, label=""];
4->16 [style = bold, label=""];
21->3 [style = bold, label=""];
3->42 [style = dotted, label="true"];
10->11 [style = bold, label=""];
13->34 [style = bold, label=""];
30->41 [style = bold, label=""];
5->3 [style = solid, label="i"];
39->41 [style = solid, label="clusterStateVersion"];
16->29 [style = bold, label=""];
4->19 [style = solid, label="globalCheckpoint"];
30->19 [style = dotted, label="true"];
39->27 [style = solid, label="clusterStateVersion"];
30->19 [style = bold, label=""];
30->28 [style = dotted, label="false"];
30->23 [style = dotted, label="true"];
22->8 [style = solid, label="elements"];
14->6 [style = bold, label=""];
30->41 [style = dotted, label="false"];
42->38 [style = bold, label=""];
21->32 [style = solid, label="i"];
3->1 [style = bold, label=""];
3->37 [style = dotted, label="true"];
10->0 [style = solid, label="inSyncAllocationId"];
15->32 [style = solid, label="tracker"];
24->26 [style = bold, label=""];
17->12 [style = bold, label=""];
14->23 [style = dashed, label="0"];
3->21 [style = dotted, label="true"];
3->38 [style = dotted, label="true"];
30->40 [style = dotted, label="false"];
11->0 [style = solid, label="trackingAllocationId"];
29->10 [style = bold, label=""];
9->12 [style = bold, label=""];
12->4 [style = solid, label="localCheckpoint"];
37->42 [style = bold, label=""];
30->31 [style = dotted, label="true"];
31->23 [style = bold, label=""];
3->32 [style = dotted, label="true"];
30->24 [style = dotted, label="true"];
11->27 [style = solid, label="trackingAllocationId"];
10->18 [style = solid, label="inSyncAllocationId"];
7->10 [style = bold, label=""];
19->31 [style = bold, label=""];
35->22 [style = bold, label=""];
26->25 [style = bold, label=""];
0->2 [style = bold, label=""];
4->2 [style = solid, label="globalCheckpoint"];
5->21 [style = solid, label="i"];
18->2 [style = bold, label=""];
39->27 [style = bold, label=""];
5->32 [style = solid, label="i"];
15->18 [style = bold, label=""];
11->15 [style = bold, label=""];
2->13 [style = bold, label=""];
23->24 [style = bold, label=""];
33->40 [style = bold, label=""];
15->19 [style = solid, label="tracker"];
8->5 [style = bold, label=""];
12->4 [style = bold, label=""];
28->33 [style = bold, label=""];
10->27 [style = solid, label="inSyncAllocationId"];
15->39 [style = bold, label=""];
38->21 [style = bold, label=""];
0->18 [style = dashed, label="0"];
1->14 [style = bold, label=""];
7->29 [style = dashed, label="0"];
20->35 [style = bold, label=""];
4->13 [style = solid, label="globalCheckpoint"];
13->8 [style = bold, label=""];
3->32 [style = bold, label=""];
21->3 [style = solid, label="i"];
}
