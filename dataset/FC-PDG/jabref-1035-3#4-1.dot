digraph {
8 [style = filled, label = "testNoAstCaseSensitive['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TextFlow description = new ContainsAndRegexBasedSearchRuleDescriber(true,false,query).getDescription()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String query = \"a b\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which any field contains the regular expression \"),TooltipTextUtil.createText(\"a\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" and \"),TooltipTextUtil.createText(\"b\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" (case sensitive). \"),TooltipTextUtil.createText(\"Hint: To search specific fields only, enter for example:\"),TooltipTextUtil.createText(\"author=smith and title=electrical\",TooltipTextUtil.TextType.MONOSPACED))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testNoAstRegexCaseSensitive['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "TextFlowEqualityHelper.assertEquals(expectedTexts,description)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which any field contains the term \"),TooltipTextUtil.createText(\"a\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" and \"),TooltipTextUtil.createText(\"b\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" (case sensitive). \"),TooltipTextUtil.createText(\"Hint: To search specific fields only, enter for example:\"),TooltipTextUtil.createText(\"author=smith and title=electrical\",TooltipTextUtil.TextType.MONOSPACED))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testNoAstRegexCaseSensitive['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TextFlow description = new ContainsAndRegexBasedSearchRuleDescriber(true,true,query).getDescription()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(TextFlowEqualityHelper.checkIfDescriptionEqualsExpectedTexts(description,expectedTexts))@@@6@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->3 [style = bold, label=""];
7->9 [style = bold, label=""];
7->1 [style = solid, label="expectedTexts"];
2->1 [style = solid, label="description"];
4->2 [style = bold, label=""];
9->1 [style = bold, label=""];
3->7 [style = bold, label=""];
4->6 [style = solid, label="expectedTexts"];
4->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
2->6 [style = bold, label=""];
2->1 [style = bold, label=""];
1->6 [style = dashed, label="0"];
2->9 [style = dashed, label="0"];
4->1 [style = solid, label="expectedTexts"];
9->1 [style = solid, label="description"];
8->3 [style = bold, label=""];
2->6 [style = solid, label="description"];
}
