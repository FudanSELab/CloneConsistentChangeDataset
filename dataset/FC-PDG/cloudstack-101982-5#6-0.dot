digraph {
10 [style = filled, label = "getDefaultNetworkForBasicZone['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "DataCenter dc@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "defaultNetworks.size() != 1@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "throw new CloudRuntimeException(\"Found \" + defaultNetworks.size() + \" networks of type \" + defaultTrafficType + \" when expect to find 1\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "throw new CloudRuntimeException(String.format(\"Found (%s( networks of type (%s( when expect to find 1.\",networksSize,defaultTrafficType))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "dc.isSecurityGroupEnabled()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "DataCenter dc@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "throw new CloudRuntimeException(String.format(\"%s is not advanced.\",dc.toString()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "CollectionUtils.isEmpty(networks)@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "getDefaultNetworkForBasicZone['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "dc.getNetworkType() != NetworkType.Basic@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "networksSize != 1@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<NetworkVO> defaultNetworks = networkDao.listByZoneAndTrafficType(dc.getId(),defaultTrafficType)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "return defaultNetworks.get(0)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<NetworkVO> networks = _networkDao.listByZoneSecurityGroup(dc.getId())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<NetworkVO> defaultNetworks = _networkDao.listByZoneAndTrafficType(dc.getId(),defaultTrafficType)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "return networks.get(0)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TrafficType defaultTrafficType = TrafficType.Guest@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<NetworkVO> defaultNetworks = _networkDao.listByZoneAndTrafficType(dc.getId(),defaultTrafficType)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "return defaultNetworks.get(0)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "throw new CloudRuntimeException(String.format(\"Can not found security enabled network in SG %s.\",dc.toString()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "dc.getNetworkType() != NetworkType.Advanced@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "TrafficType defaultTrafficType = TrafficType.Public@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "getDefaultNetworkForAdvancedZone['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "throw new CloudRuntimeException(\"Zone \" + dc + \"is not basic.\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int networksSize = defaultNetworks.size()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
10->6 [style = dotted, label="true"];
20->17 [style = bold, label=""];
25->16 [style = solid, label="networksSize"];
16->11 [style = bold, label=""];
3->1 [style = bold, label=""];
17->18 [style = dotted, label="true"];
1->14 [style = dashed, label="0"];
19->17 [style = dotted, label="true"];
5->23 [style = dashed, label="0"];
19->20 [style = dotted, label="true"];
19->20 [style = bold, label=""];
12->15 [style = dotted, label="true"];
19->22 [style = dotted, label="false"];
2->0 [style = solid, label="defaultTrafficType"];
14->23 [style = dotted, label="true"];
14->19 [style = bold, label=""];
21->24 [style = bold, label=""];
19->13 [style = dotted, label="true"];
7->4 [style = bold, label=""];
2->9 [style = bold, label=""];
3->6 [style = dotted, label="true"];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
25->16 [style = bold, label=""];
19->25 [style = dotted, label="false"];
16->22 [style = bold, label=""];
2->9 [style = solid, label="defaultTrafficType"];
19->24 [style = dotted, label="false"];
0->7 [style = bold, label=""];
5->2 [style = bold, label=""];
2->8 [style = solid, label="defaultTrafficType"];
2->0 [style = bold, label=""];
21->11 [style = solid, label="defaultTrafficType"];
19->16 [style = dotted, label="false"];
14->23 [style = bold, label=""];
20->17 [style = solid, label="networks"];
6->15 [style = dashed, label="0"];
24->25 [style = bold, label=""];
23->19 [style = bold, label=""];
12->14 [style = bold, label=""];
19->21 [style = dotted, label="false"];
18->13 [style = bold, label=""];
11->22 [style = bold, label=""];
7->25 [style = dashed, label="0"];
6->5 [style = solid, label="dc"];
25->11 [style = solid, label="networksSize"];
1->2 [style = bold, label=""];
19->21 [style = bold, label=""];
17->13 [style = bold, label=""];
8->4 [style = bold, label=""];
0->9 [style = dashed, label="0"];
7->8 [style = dotted, label="true"];
16->11 [style = dotted, label="true"];
10->1 [style = bold, label=""];
1->5 [style = dotted, label="true"];
17->18 [style = bold, label=""];
21->24 [style = solid, label="defaultTrafficType"];
}
