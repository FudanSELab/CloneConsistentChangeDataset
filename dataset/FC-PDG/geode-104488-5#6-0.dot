digraph {
28 [style = filled, label = "String query = \"select distinct e1.key from /pr1.entries e1,/pr2.entries e2\" + \" where e1.value=e2.value\"@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String query = \"select distinct e1.value from \" + SEPARATOR + \"pr1 e1, \" + SEPARATOR + \"pr2 e2\" + \" where e1.value=e2.value\"@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testEquijoinPRColocatedQuery_1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testEquijoinPRColocatedQuery_1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "AttributesFactory factory = new AttributesFactory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String query = \"select distinct e1.value from /pr1 e1, \" + \"/pr2 e2\" + \" where e1.value=e2.value\"@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "testEquijoinPRColocatedQuery_2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "SelectResults r = (SelectResults)lds.executeQuery(cury,executionContext,null,set)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DefaultQuery cury = (DefaultQuery)CacheUtils.getQueryService().newQuery(query)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "!observer.isIndexesUsed@@@41@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "qs.createIndex(\"valueIndex\",IndexType.FUNCTIONAL,\"e.value\",\"/pr1 e\")@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "PartitionedRegion pr1 = (PartitionedRegion)CacheUtils.getCache().createRegion(\"pr1\",factory.create())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Set<Integer> set = createAndPopulateSet(15)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final PartitionedRegion pr2 = (PartitionedRegion)CacheUtils.getCache().createRegion(\"pr2\",factory.create())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "qs.createIndex(\"valueIndex\",IndexType.FUNCTIONAL,\"e.value\",\"/pr2 e\")@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "LocalDataSet lds = new LocalDataSet(pr1,set)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "qs.createIndex(\"valueIndex\",IndexType.FUNCTIONAL,\"e.value\",SEPARATOR + \"pr1 e\")@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "qs.createIndex(\"valueIndex\",IndexType.FUNCTIONAL,\"e.value\",\"/pr1.entries e\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "QueryService qs = pr1.getCache().getQueryService()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "QueryObserverImpl observer = new QueryObserverImpl()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "QueryObserverHolder.setInstance(observer)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "factory.setPartitionAttributes(new PartitionAttributesFactory().setRedundantCopies(1).setTotalNumBuckets(40).setPartitionResolver(new PartitionResolver(){@Override public String getName(){return \"blah\"}@Override public Serializable getRoutingObject(EntryOperation opDetails){return (Serializable)opDetails.getKey()}@Override public void close(){}}).create())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "fail(\"Indexes should have been used\")@@@42@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "factory = new AttributesFactory()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "qs.createIndex(\"valueIndex\",IndexType.FUNCTIONAL,\"e.value\",SEPARATOR + \"pr2 e\")@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "final ExecutionContext executionContext = new QueryExecutionContext(null,(InternalCache)cache,cury)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "createAllNumPRAndEvenNumPR(pr1,pr2,80)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "factory.setPartitionAttributes(new PartitionAttributesFactory().setRedundantCopies(1).setTotalNumBuckets(40).setPartitionResolver(new PartitionResolver(){@Override public String getName(){return \"blah\"}@Override public Serializable getRoutingObject(EntryOperation opDetails){return (Serializable)opDetails.getKey()}@Override public void close(){}}).setColocatedWith(pr1.getName()).create())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "qs.createIndex(\"valueIndex\",IndexType.FUNCTIONAL,\"e.value\",\"/pr2.entries e\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->10 [style = bold, label=""];
16->0 [style = bold, label=""];
12->6 [style = solid, label="cury"];
15->14 [style = bold, label=""];
24->15 [style = bold, label=""];
4->12 [style = solid, label="query"];
18->19 [style = bold, label=""];
17->16 [style = solid, label="pr1"];
22->12 [style = solid, label="query"];
0->18 [style = solid, label="observer"];
14->17 [style = bold, label=""];
19->11 [style = bold, label=""];
8->6 [style = bold, label=""];
4->22 [style = dashed, label="0"];
12->8 [style = solid, label="cury"];
28->12 [style = bold, label=""];
28->12 [style = solid, label="query"];
13->23 [style = dashed, label="0"];
1->7 [style = bold, label=""];
13->26 [style = dashed, label="0"];
9->16 [style = bold, label=""];
27->15 [style = bold, label=""];
19->25 [style = bold, label=""];
4->28 [style = dashed, label="0"];
20->5 [style = bold, label=""];
9->16 [style = solid, label="set"];
1->7 [style = dotted, label="true"];
6->1 [style = bold, label=""];
8->6 [style = solid, label="executionContext"];
3->20 [style = bold, label=""];
23->22 [style = bold, label=""];
12->8 [style = bold, label=""];
22->12 [style = bold, label=""];
11->13 [style = bold, label=""];
2->15 [style = bold, label=""];
25->26 [style = bold, label=""];
9->6 [style = solid, label="set"];
11->25 [style = dashed, label="0"];
17->3 [style = bold, label=""];
4->12 [style = bold, label=""];
0->18 [style = bold, label=""];
10->9 [style = bold, label=""];
26->28 [style = bold, label=""];
17->10 [style = solid, label="pr1"];
11->21 [style = dashed, label="0"];
21->23 [style = bold, label=""];
5->10 [style = solid, label="pr2"];
13->4 [style = bold, label=""];
19->21 [style = bold, label=""];
}
