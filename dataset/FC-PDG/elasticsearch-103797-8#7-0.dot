digraph {
30 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,mappingKey,reader,termBytes)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(1,cache.count())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().getBytes() > value.length())@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "writer.addDocument(newDoc(0,\"foo\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "randomBoolean()@@@32@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(1,cache.count())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().getBytes() > value.length())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testInvalidate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "TermQueryBuilder termQuery = new TermQueryBuilder(\"id\",\"0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "loader = new Loader(reader,0)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Loader loader = new Loader(reader,0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(0,cache.count())@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Directory dir = newDirectory()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "value = cache.getOrCompute(entity,loader,mappingKey,reader,termBytes)@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "reader.close()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "ShardRequestCache requestCacheStats = new ShardRequestCache()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "IOUtils.close(reader,writer,dir,cache)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "cache.invalidate(entity,mappingKey,reader,termBytes)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,newIndexWriterConfig())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "cache.clear(entity)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "indexShard.set(false)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "BytesReference termBytes = XContentHelper.toXContent(termQuery,XContentType.JSON,false)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "DirectoryReader reader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "IndicesRequestCache cache = new IndicesRequestCache(Settings.EMPTY)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "cache.cleanCache()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testInvalidate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "value = cache.getOrCompute(entity,loader,mappingKey,reader,termBytes)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "testBasicOperationsCache['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "MappingLookup.CacheKey mappingKey = MappingLookupUtils.fromTypes().cacheKey()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@47@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(1,cache.count())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "TestEntity entity = new TestEntity(requestCacheStats,indexShard)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(0L,requestCacheStats.stats().getMemorySize().getBytes())@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "loader = new Loader(reader,0)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "cache.invalidate(entity,reader,termBytes)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@45@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36->59 [style = bold, label=""];
7->32 [style = bold, label=""];
16->55 [style = bold, label=""];
29->14 [style = solid, label="termBytes"];
34->48 [style = solid, label="indexShard"];
15->61 [style = bold, label=""];
28->62 [style = bold, label=""];
50->56 [style = bold, label=""];
19->11 [style = bold, label=""];
21->52 [style = bold, label=""];
29->34 [style = bold, label=""];
57->41 [style = bold, label=""];
9->51 [style = solid, label="entity"];
8->40 [style = bold, label=""];
49->8 [style = bold, label=""];
39->22 [style = solid, label="writer"];
52->28 [style = bold, label=""];
61->22 [style = bold, label=""];
44->60 [style = solid, label="loader"];
22->14 [style = solid, label="reader"];
53->65 [style = bold, label=""];
22->59 [style = solid, label="reader"];
36->10 [style = solid, label="loader"];
22->1 [style = solid, label="reader"];
16->14 [style = bold, label=""];
27->19 [style = bold, label=""];
34->38 [style = solid, label="indexShard"];
5->39 [style = solid, label="dir"];
20->58 [style = dashed, label="0"];
22->20 [style = solid, label="reader"];
14->20 [style = bold, label=""];
48->60 [style = solid, label="entity"];
28->37 [style = bold, label=""];
26->7 [style = bold, label=""];
34->48 [style = bold, label=""];
5->39 [style = bold, label=""];
31->5 [style = bold, label=""];
65->12 [style = bold, label=""];
12->63 [style = bold, label=""];
49->38 [style = bold, label=""];
8->40 [style = dotted, label="true"];
48->44 [style = bold, label=""];
17->51 [style = bold, label=""];
8->17 [style = bold, label=""];
29->55 [style = solid, label="termBytes"];
41->9 [style = solid, label="requestCacheStats"];
61->55 [style = solid, label="mappingKey"];
10->45 [style = bold, label=""];
44->27 [style = solid, label="loader"];
22->55 [style = solid, label="reader"];
2->54 [style = dashed, label="0"];
60->19 [style = bold, label=""];
24->8 [style = bold, label=""];
64->41 [style = bold, label=""];
46->56 [style = dashed, label="0"];
3->29 [style = bold, label=""];
29->27 [style = solid, label="termBytes"];
22->60 [style = solid, label="reader"];
32->50 [style = bold, label=""];
22->58 [style = solid, label="reader"];
34->9 [style = solid, label="indexShard"];
8->17 [style = dotted, label="false"];
37->24 [style = bold, label=""];
45->23 [style = bold, label=""];
2->1 [style = bold, label=""];
59->45 [style = bold, label=""];
38->16 [style = bold, label=""];
6->42 [style = bold, label=""];
63->0 [style = bold, label=""];
5->1 [style = solid, label="dir"];
9->10 [style = solid, label="entity"];
41->48 [style = solid, label="requestCacheStats"];
22->16 [style = solid, label="reader"];
4->41 [style = bold, label=""];
41->38 [style = solid, label="requestCacheStats"];
15->22 [style = bold, label=""];
22->27 [style = solid, label="reader"];
16->58 [style = solid, label="loader"];
8->51 [style = dotted, label="false"];
38->14 [style = solid, label="entity"];
40->33 [style = bold, label=""];
30->21 [style = bold, label=""];
29->60 [style = solid, label="termBytes"];
37->62 [style = dashed, label="0"];
38->20 [style = solid, label="entity"];
61->60 [style = solid, label="mappingKey"];
31->1 [style = solid, label="cache"];
62->24 [style = bold, label=""];
14->55 [style = dashed, label="0"];
0->54 [style = bold, label=""];
41->31 [style = bold, label=""];
13->9 [style = bold, label=""];
10->59 [style = dashed, label="0"];
35->30 [style = bold, label=""];
38->55 [style = solid, label="entity"];
36->10 [style = bold, label=""];
9->36 [style = bold, label=""];
61->58 [style = solid, label="mappingKey"];
42->18 [style = bold, label=""];
39->15 [style = bold, label=""];
53->25 [style = bold, label=""];
27->60 [style = dashed, label="0"];
56->49 [style = bold, label=""];
44->60 [style = bold, label=""];
54->1 [style = bold, label=""];
29->59 [style = solid, label="termBytes"];
50->46 [style = bold, label=""];
1->43 [style = bold, label=""];
61->59 [style = solid, label="mappingKey"];
11->6 [style = bold, label=""];
46->49 [style = bold, label=""];
0->2 [style = bold, label=""];
29->10 [style = solid, label="termBytes"];
23->26 [style = bold, label=""];
9->59 [style = solid, label="entity"];
22->44 [style = solid, label="reader"];
47->35 [style = bold, label=""];
12->0 [style = bold, label=""];
22->10 [style = solid, label="reader"];
20->47 [style = bold, label=""];
33->53 [style = bold, label=""];
25->65 [style = dashed, label="0"];
29->58 [style = solid, label="termBytes"];
22->3 [style = bold, label=""];
58->47 [style = bold, label=""];
22->36 [style = solid, label="reader"];
25->12 [style = bold, label=""];
38->58 [style = solid, label="entity"];
18->13 [style = bold, label=""];
48->27 [style = solid, label="entity"];
36->59 [style = solid, label="loader"];
29->20 [style = solid, label="termBytes"];
44->27 [style = bold, label=""];
38->51 [style = solid, label="entity"];
55->58 [style = bold, label=""];
16->20 [style = solid, label="loader"];
3->29 [style = solid, label="termQuery"];
51->33 [style = bold, label=""];
39->1 [style = solid, label="writer"];
}
