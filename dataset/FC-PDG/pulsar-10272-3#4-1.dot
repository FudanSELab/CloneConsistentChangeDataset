digraph {
2 [style = filled, label = "ByteBuf encoded@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "decompressor.decompress(encodedNio,encodedNio.position(),uncompressedNio,uncompressedNio.position(),uncompressedNio.remaining())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int uncompressedLength@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "decode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "decode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "uncompressed.writerIndex(uncompressedLength)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ByteBuf uncompressed = PooledByteBufAllocator.DEFAULT.buffer(uncompressedLength,uncompressedLength)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ByteBuf encoded@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "return uncompressed@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int uncompressedLength@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "encoded.hasMemoryAddress()@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ByteBuffer uncompressedNio = uncompressed.nioBuffer(0,uncompressedLength)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ByteBuffer encodedNio = encoded.nioBuffer(encoded.readerIndex(),encoded.readableBytes())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ByteBuffer encodedNio = encoded.nioBuffer(encoded.readerIndex(),encoded.readableBytes())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return uncompressed@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ByteBuf uncompressed = PooledByteBufAllocator.DEFAULT.directBuffer(uncompressedLength,uncompressedLength)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "ByteBuf uncompressed = PulsarByteBufAllocator.DEFAULT.directBuffer(uncompressedLength,uncompressedLength)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "uncompressed.writerIndex(uncompressedLength)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Zstd.decompressUnsafe(uncompressed.memoryAddress(),uncompressedLength,encoded.memoryAddress() + encoded.readerIndex(),encoded.readableBytes())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "decode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Zstd.decompress(uncompressedNio,encodedNio)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->5 [style = solid, label="uncompressedLength"];
14->2 [style = dotted, label="true"];
8->19 [style = dashed, label="0"];
17->5 [style = bold, label=""];
0->6 [style = solid, label="uncompressedLength"];
3->9 [style = dotted, label="false"];
16->18 [style = bold, label=""];
20->17 [style = bold, label=""];
5->9 [style = bold, label=""];
9->1 [style = solid, label="encodedNio"];
7->10 [style = bold, label=""];
5->1 [style = solid, label="uncompressedNio"];
4->0 [style = dotted, label="true"];
8->3 [style = bold, label=""];
12->11 [style = bold, label=""];
0->7 [style = solid, label="uncompressedLength"];
12->2 [style = dotted, label="true"];
2->6 [style = solid, label="uncompressedLength"];
3->6 [style = bold, label=""];
14->19 [style = bold, label=""];
15->19 [style = solid, label="uncompressedLength"];
18->20 [style = solid, label="encodedNio"];
3->6 [style = dotted, label="true"];
0->5 [style = solid, label="uncompressedLength"];
1->7 [style = bold, label=""];
8->10 [style = solid, label="uncompressed"];
2->7 [style = solid, label="uncompressedLength"];
19->16 [style = bold, label=""];
1->20 [style = dashed, label="0"];
11->10 [style = solid, label="uncompressed"];
18->20 [style = bold, label=""];
14->15 [style = dotted, label="true"];
3->5 [style = bold, label=""];
12->13 [style = dotted, label="true"];
15->16 [style = solid, label="uncompressedLength"];
19->5 [style = solid, label="uncompressed"];
11->3 [style = bold, label=""];
2->11 [style = solid, label="uncompressedLength"];
4->8 [style = bold, label=""];
16->20 [style = solid, label="uncompressedNio"];
0->8 [style = solid, label="uncompressedLength"];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
3->5 [style = dotted, label="false"];
3->1 [style = dotted, label="false"];
8->11 [style = dashed, label="0"];
4->2 [style = dotted, label="true"];
15->17 [style = solid, label="uncompressedLength"];
}
