digraph {
10 [style = filled, label = "return ROWS_MIGHT_MATCH@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "in['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "return ROWS_MUST_MATCH@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "containsNullsOnly(id)@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "T lower = Conversions.fromByteBuffer(struct.field(id).type(),lowerBounds.get(id))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return ROWS_MUST_MATCH@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "T upper = Conversions.fromByteBuffer(ref.type(),upperBounds.get(id))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return ROWS_CANNOT_MATCH@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "literals.isEmpty()@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "return ROWS_MUST_MATCH@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "return ROWS_MIGHT_MATCH@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "in['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "literals.isEmpty()@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "literals = literals.stream().filter(null).collect(Collectors.toList())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "notIn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "T upper = Conversions.fromByteBuffer(field.type(),upperBounds.get(id))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "T lower = Conversions.fromByteBuffer(ref.type(),lowerBounds.get(id))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return ROWS_CANNOT_MATCH@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Collection<T> literals = literalSet@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return ROWS_CANNOT_MATCH@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "literals.size() > IN_PREDICATE_LIMIT@@@8@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "upperBounds != null && upperBounds.containsKey(id)@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Set<T> literalSet@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "lowerBounds != null && lowerBounds.containsKey(id)@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Set<T> literalSet@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "literals = literals.stream().filter(null).collect(Collectors.toList())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->16 [style = bold, label=""];
18->3 [style = bold, label=""];
3->29 [style = bold, label=""];
13->26 [style = bold, label=""];
3->7 [style = solid, label="id"];
19->21 [style = dotted, label="true"];
11->22 [style = bold, label=""];
11->4 [style = bold, label=""];
18->20 [style = dotted, label="true"];
3->14 [style = bold, label=""];
13->7 [style = bold, label=""];
3->28 [style = solid, label="id"];
7->8 [style = bold, label=""];
26->8 [style = bold, label=""];
16->2 [style = dotted, label="true"];
4->28 [style = dashed, label="0"];
2->11 [style = bold, label=""];
30->27 [style = dotted, label="true"];
3->29 [style = solid, label="id"];
25->14 [style = bold, label=""];
17->31 [style = dotted, label="true"];
13->16 [style = dotted, label="true"];
31->22 [style = bold, label=""];
14->12 [style = bold, label=""];
14->9 [style = bold, label=""];
24->12 [style = solid, label="literalSet"];
32->11 [style = bold, label=""];
3->26 [style = solid, label="id"];
13->8 [style = dotted, label="true"];
11->0 [style = dotted, label="true"];
1->6 [style = dotted, label="true"];
11->28 [style = dotted, label="true"];
30->24 [style = dotted, label="true"];
11->17 [style = dotted, label="true"];
14->9 [style = dotted, label="true"];
3->11 [style = solid, label="id"];
29->25 [style = bold, label=""];
6->12 [style = solid, label="literalSet"];
19->13 [style = bold, label=""];
12->13 [style = bold, label=""];
13->26 [style = dotted, label="true"];
16->2 [style = bold, label=""];
16->32 [style = bold, label=""];
18->6 [style = dotted, label="true"];
19->21 [style = bold, label=""];
17->15 [style = dotted, label="true"];
13->11 [style = bold, label=""];
1->3 [style = bold, label=""];
11->10 [style = bold, label=""];
17->15 [style = bold, label=""];
23->12 [style = bold, label=""];
30->3 [style = bold, label=""];
1->5 [style = dotted, label="true"];
21->13 [style = bold, label=""];
12->19 [style = bold, label=""];
0->17 [style = bold, label=""];
9->23 [style = dashed, label="0"];
14->23 [style = bold, label=""];
11->4 [style = dotted, label="true"];
16->32 [style = dotted, label="true"];
15->31 [style = dashed, label="0"];
17->22 [style = bold, label=""];
6->27 [style = dashed, label="0"];
3->4 [style = solid, label="id"];
3->25 [style = solid, label="id"];
14->23 [style = dotted, label="true"];
7->26 [style = dashed, label="0"];
11->28 [style = bold, label=""];
16->11 [style = bold, label=""];
2->32 [style = dashed, label="0"];
10->22 [style = dashed, label="0"];
15->10 [style = bold, label=""];
13->7 [style = dotted, label="true"];
29->25 [style = solid, label="field"];
17->10 [style = bold, label=""];
28->0 [style = bold, label=""];
4->0 [style = bold, label=""];
9->12 [style = bold, label=""];
3->14 [style = solid, label="id"];
17->31 [style = bold, label=""];
3->13 [style = solid, label="id"];
}
