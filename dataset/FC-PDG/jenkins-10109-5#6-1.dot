digraph {
6 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(\"aProject\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(result,succeededSilently())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").contains(project),equalTo(true))@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").contains(project),equalTo(false))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "addJobShouldSucceed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final CLICommandInvoker.Result result = command.invokeWithArgs(\"aView\",\"aProject\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "addJobManyShouldSucceedEvenAJobIsSpecifiedTwice['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").getAllItems().size(),equalTo(1))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "j.jenkins.addView(new ListView(\"aView\"))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.READ,View.READ,Item.READ,View.CONFIGURE).everywhere().toAuthenticated())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,View.READ,Item.READ,View.CONFIGURE).invokeWithArgs(\"aView\",\"aProject\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").getAllItems().size(),equalTo(0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,View.READ,Item.READ,View.CONFIGURE).invokeWithArgs(\"aView\",\"aProject\",\"aProject\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").contains(project),equalTo(true))@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "addJobShouldSucceed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->8 [style = bold, label=""];
6->7 [style = solid, label="project"];
4->6 [style = bold, label=""];
7->10 [style = bold, label=""];
11->2 [style = solid, label="result"];
9->4 [style = bold, label=""];
12->11 [style = bold, label=""];
8->14 [style = bold, label=""];
14->1 [style = solid, label="result"];
0->12 [style = dashed, label="0"];
3->4 [style = bold, label=""];
11->2 [style = bold, label=""];
14->1 [style = bold, label=""];
0->1 [style = solid, label="result"];
8->0 [style = bold, label=""];
0->14 [style = dashed, label="0"];
6->5 [style = bold, label=""];
6->10 [style = solid, label="project"];
0->1 [style = bold, label=""];
6->8 [style = solid, label="project"];
1->2 [style = bold, label=""];
2->7 [style = bold, label=""];
8->12 [style = bold, label=""];
13->4 [style = bold, label=""];
}
