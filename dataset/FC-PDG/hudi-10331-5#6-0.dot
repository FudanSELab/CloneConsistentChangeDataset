digraph {
32 [style = filled, label = "assertFalse(hiveClient.doesTableExist(hiveSyncConfig.tableName),\"Table \" + hiveSyncConfig.tableName + \" should not exist initially\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "hiveSyncConfig.tableName = \"multi_part_key\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(commitTime2,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was synced should be 101\")@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "String commitTime3 = \"102\"@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(PartitionEventType.ADD,partitionEvents.iterator().next().eventType,\"The one partition event must of type ADD\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "hiveSyncConfig.partitionValueExtractorClass = .getCanonicalName()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(7,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table partitions should match the number of partitions we wrote\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(1,partitionEvents.size(),\"There should be only one partition event\")@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertTrue(hiveClient.doesTableExist(hiveSyncConfig.tableName),\"Table \" + hiveSyncConfig.tableName + \" should exist after sync completes\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(hiveClient.doesTableExist(hiveSyncConfig.tableName),\"Table \" + hiveSyncConfig.tableName + \" should exist after sync completes\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(commitTime2,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was sycned should be 101\")@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "testMultiPartitionKeySync['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "hiveSyncConfig.partitionFields = Arrays.asList(\"year\",\"month\",\"day\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "hiveSyncConfig.tableName = \"non_partitioned\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<String> writtenPartitionsSince = hiveClient.getPartitionsWrittenToSince(Option.of(instantTime))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(instantTime,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was sycned should be updated in the TBLPROPERTIES\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "HiveTestUtil.hiveSyncConfig.useJdbc = useJdbc@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testNonPartitionedSync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tool.syncHoodieTable()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "HiveTestUtil.getCreatedTablesSet().add(hiveSyncConfig.databaseName + \".\" + hiveSyncConfig.tableName)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "tool.syncHoodieTable()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(6,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table partitions should match the number of partitions we wrote\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "boolean useJdbc@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(hiveClient.getTableSchema(hiveSyncConfig.tableName).size(),hiveClient.getDataSchema().getColumns().size(),\"Hive Schema should match the table schema�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽ�ｿｽignoring the partition fields\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(hiveClient.getTableSchema(hiveSyncConfig.tableName).size(),hiveClient.getDataSchema().getColumns().size() + 3,\"Hive Schema should match the table schema + partition fields\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(1,partitionEvents.size(),\"There should be only one paritition event\")@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1,hiveClient.getPartitionsWrittenToSince(Option.of(commitTime2)).size())@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testMultiPartitionKeySync['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<PartitionEvent> partitionEvents = hiveClient.getPartitionEvents(hivePartitions,writtenPartitionsSince)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "HiveTestUtil.addCOWPartition(\"2010/01/02\",true,true,commitTime2)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "boolean useJdbc@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "hiveSyncConfig.partitionValueExtractorClass = .getCanonicalName()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(5,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table partitions should match the number of partitions we wrote\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "HoodieHiveClient hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "List<Partition> hivePartitions = hiveClient.scanTablePartitions(hiveSyncConfig.tableName)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(commitTime3,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was sycned should be updated in the TBLPROPERTIES\")@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "String instantTime = \"100\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(0,hiveClient.scanTablePartitions(hiveSyncConfig.tableName).size(),\"Table should not have partitions because of the NonPartitionedExtractor\")@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "hiveClient = new HoodieHiveClient(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(instantTime,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was synced should be updated in the TBLPROPERTIES\")@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "HiveTestUtil.createCOWTable(instantTime,5,true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(commitTime3,hiveClient.getLastCommitTimeSynced(hiveSyncConfig.tableName).get(),\"The last commit that was synced should be updated in the TBLPROPERTIES\")@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "HiveTestUtil.getCreatedTablesSet().add(hiveSyncConfig.databaseName + \".\" + hiveSyncConfig.tableName)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "HiveTestUtil.addCOWPartition(\"2010/02/01\",true,true,commitTime3)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "HiveSyncTool tool = new HiveSyncTool(hiveSyncConfig,HiveTestUtil.getHiveConf(),HiveTestUtil.fileSystem)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "tool.syncHoodieTable()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "HiveSyncConfig hiveSyncConfig = HiveSyncConfig.copy(HiveTestUtil.hiveSyncConfig)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(hiveClient.getTableSchema(hiveSyncConfig.tableName).size(),hiveClient.getDataSchema().getColumns().size() + 3,\"Hive Schema should match the table schema + partition fields\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(1,writtenPartitionsSince.size(),\"We should have one partition written after 100 commit\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String commitTime2 = \"101\"@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->43 [style = bold, label=""];
1->32 [style = solid, label="tableName"];
22->15 [style = bold, label=""];
39->51 [style = dashed, label="0"];
22->37 [style = solid, label="hiveSyncConfig"];
25->22 [style = bold, label=""];
26->10 [style = bold, label=""];
10->17 [style = bold, label=""];
28->25 [style = solid, label="instantTime"];
5->6 [style = solid, label="writtenPartitionsSince"];
7->8 [style = bold, label=""];
39->0 [style = solid, label="useJdbc"];
1->23 [style = solid, label="tableName"];
28->5 [style = solid, label="instantTime"];
3->34 [style = bold, label=""];
47->49 [style = bold, label=""];
29->47 [style = dashed, label="0"];
1->17 [style = solid, label="tableName"];
33->46 [style = bold, label=""];
52->23 [style = solid, label="tableName"];
1->12 [style = bold, label=""];
9->14 [style = bold, label=""];
28->25 [style = bold, label=""];
35->38 [style = bold, label=""];
32->18 [style = bold, label=""];
8->4 [style = bold, label=""];
40->44 [style = dashed, label="0"];
51->0 [style = solid, label="useJdbc"];
31->39 [style = dotted, label="true"];
22->20 [style = solid, label="hiveSyncConfig"];
1->2 [style = solid, label="tableName"];
52->2 [style = solid, label="tableName"];
43->16 [style = bold, label=""];
37->26 [style = bold, label=""];
30->46 [style = dashed, label="0"];
44->3 [style = bold, label=""];
22->50 [style = bold, label=""];
27->16 [style = bold, label=""];
16->19 [style = bold, label=""];
38->6 [style = bold, label=""];
45->11 [style = bold, label=""];
15->50 [style = dashed, label="0"];
52->12 [style = bold, label=""];
19->13 [style = bold, label=""];
40->3 [style = bold, label=""];
33->30 [style = bold, label=""];
36->37 [style = bold, label=""];
9->45 [style = solid, label="commitTime3"];
14->36 [style = bold, label=""];
22->26 [style = solid, label="hiveSyncConfig"];
42->39 [style = dotted, label="true"];
27->43 [style = dashed, label="0"];
22->18 [style = solid, label="hiveSyncConfig"];
23->20 [style = bold, label=""];
18->24 [style = bold, label=""];
46->9 [style = bold, label=""];
31->0 [style = bold, label=""];
28->40 [style = solid, label="instantTime"];
3->30 [style = solid, label="commitTime2"];
30->9 [style = bold, label=""];
1->36 [style = solid, label="tableName"];
42->0 [style = bold, label=""];
4->45 [style = dashed, label="0"];
21->5 [style = bold, label=""];
6->27 [style = bold, label=""];
41->40 [style = bold, label=""];
52->32 [style = solid, label="tableName"];
8->45 [style = bold, label=""];
22->19 [style = solid, label="hiveSyncConfig"];
38->6 [style = solid, label="hivePartitions"];
2->47 [style = bold, label=""];
5->35 [style = bold, label=""];
22->21 [style = solid, label="hiveSyncConfig"];
34->21 [style = bold, label=""];
15->1 [style = bold, label=""];
9->14 [style = solid, label="commitTime3"];
24->2 [style = bold, label=""];
3->46 [style = solid, label="commitTime2"];
1->38 [style = solid, label="tableName"];
29->41 [style = bold, label=""];
1->52 [style = dashed, label="0"];
20->32 [style = bold, label=""];
28->44 [style = solid, label="instantTime"];
48->51 [style = dotted, label="true"];
50->52 [style = bold, label=""];
48->0 [style = bold, label=""];
17->7 [style = bold, label=""];
41->49 [style = dashed, label="0"];
9->4 [style = solid, label="commitTime3"];
12->23 [style = bold, label=""];
13->33 [style = bold, label=""];
2->29 [style = bold, label=""];
4->11 [style = bold, label=""];
41->44 [style = bold, label=""];
0->28 [style = bold, label=""];
3->34 [style = solid, label="commitTime2"];
}
