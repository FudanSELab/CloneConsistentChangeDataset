digraph {
11 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertThat(toString(transform),equalTo(\"EnumerableSort(sort0=($1(, dir0=(ASC()\" + \" EnumerableProject(empid=($0(, deptno=($1(, name=($2(, salary=($3(, commission=($4()\" + \" EnumerableTableScan(table=((hr, emps(()\"))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testPlanTransformTwice['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RuleSet ruleSet = RuleSets.ofList(SortRemoveRule.INSTANCE,EnumerableRules.ENUMERABLE_PROJECT_RULE,EnumerableRules.ENUMERABLE_SORT_RULE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RuleSet ruleSet = RuleSets.ofList(FilterMergeRule.INSTANCE,EnumerableRules.ENUMERABLE_FILTER_RULE,EnumerableRules.ENUMERABLE_PROJECT_RULE)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(toString(transform2),equalTo(\"EnumerableProject(empid=($0(, deptno=($1(, name=($2(, salary=($3(, commission=($4()\" + \" EnumerableTableScan(table=((hr, emps(()\"))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SqlNode parse = planner.parse(\"select * from \"emps\"\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testPlanTransformTwice['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "RelTraitSet traitSet = planner.getEmptyTraitSet().replace(EnumerableConvention.INSTANCE)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Planner planner = getPlanner(null,Programs.of(ruleSet))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "SqlNode parse = planner.parse(\"select * from \"emps\" \" + \"order by \"emps\".\"deptno\"\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "RelNode convert = planner.rel(validate).project()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RelNode transform2 = planner.transform(0,traitSet,transform)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testSortPlan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7->9 [style = solid, label="convert"];
7->11 [style = bold, label=""];
5->9 [style = solid, label="traitSet"];
9->3 [style = solid, label="transform"];
5->9 [style = bold, label=""];
2->4 [style = solid, label="ruleSet"];
4->13 [style = bold, label=""];
15->9 [style = solid, label="traitSet"];
11->9 [style = bold, label=""];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
13->1 [style = bold, label=""];
3->0 [style = bold, label=""];
8->13 [style = dashed, label="0"];
6->2 [style = bold, label=""];
8->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
7->5 [style = bold, label=""];
12->4 [style = solid, label="ruleSet"];
12->4 [style = bold, label=""];
5->11 [style = dashed, label="0"];
15->9 [style = bold, label=""];
3->0 [style = solid, label="transform2"];
11->9 [style = solid, label="traitSet"];
9->14 [style = bold, label=""];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
8->1 [style = solid, label="parse"];
7->15 [style = bold, label=""];
10->2 [style = bold, label=""];
5->3 [style = solid, label="traitSet"];
5->15 [style = dashed, label="0"];
9->14 [style = solid, label="transform"];
16->12 [style = bold, label=""];
13->1 [style = solid, label="parse"];
11->3 [style = solid, label="traitSet"];
}
