digraph {
2 [style = filled, label = "final Mapping inverse = mapping.inverse()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(integers,equalTo(Arrays.asList(null,1,null,0,2,3,null,null,4,null)))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testTarget['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "{}@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Mappings.NoElementException e@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(mapping.getTargetCount(),equalTo(10))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(mapping.getSourceCount(),equalTo(10))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final List<Integer> integers = Mappings.asList(mapping)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(mapping.getTargetCount(),equalTo(5))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(mapping.getTarget(0),equalTo(3))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(mapping.getTarget(4),equalTo(2))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<Integer> sources = Arrays.asList(3,1,4,5,8)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(mapping.getTarget(3),equalTo(0))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "fail(\"expected error, got \" + target)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Mapping mapping = Mappings.source(targets,10)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final int target = mapping.getTarget(0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(mapping.getSourceCount(),equalTo(5))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(mapping.getTarget(1),equalTo(1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertThat(integers,equalTo(targets))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(inverse.toString(),equalTo(\"(size=5, sourceCount=10, targetCount=5, elements=(1:1, 3:0, 4:2, 5:3, 8:4((\"))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Mapping mapping = Mappings.target(sources,10)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<Integer> targets = Arrays.asList(3,1,4,5,8)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final List<Integer> integers = Mappings.asList(mapping)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(mapping.getTarget(2),equalTo(4))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->25 [style = bold, label=""];
0->9 [style = bold, label=""];
1->3 [style = solid, label="targets"];
7->11 [style = bold, label=""];
16->13 [style = bold, label=""];
7->17 [style = bold, label=""];
3->18 [style = dashed, label="0"];
11->17 [style = dashed, label="0"];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
15->18 [style = bold, label=""];
22->7 [style = bold, label=""];
23->19 [style = solid, label="sources"];
8->0 [style = bold, label=""];
6->9 [style = solid, label="mapping"];
25->24 [style = bold, label=""];
6->5 [style = bold, label=""];
24->16 [style = bold, label=""];
25->24 [style = solid, label="target"];
1->6 [style = bold, label=""];
21->20 [style = bold, label=""];
20->16 [style = bold, label=""];
0->25 [style = dashed, label="0"];
3->2 [style = bold, label=""];
14->23 [style = bold, label=""];
23->19 [style = bold, label=""];
6->19 [style = dashed, label="0"];
1->6 [style = solid, label="targets"];
9->3 [style = bold, label=""];
19->15 [style = solid, label="mapping"];
5->7 [style = bold, label=""];
11->8 [style = bold, label=""];
13->15 [style = bold, label=""];
10->1 [style = bold, label=""];
19->22 [style = bold, label=""];
1->23 [style = dashed, label="0"];
9->3 [style = solid, label="integers"];
15->18 [style = solid, label="integers"];
5->22 [style = dashed, label="0"];
}
