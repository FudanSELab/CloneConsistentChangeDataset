digraph {
3 [style = filled, label = "testAbortableErrorWhileAbortInProgress['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(transactionManager.isAborting())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "transactionManager.transitionToAbortableError(new KafkaException())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(abortResult.isSuccessful())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "transactionManager.beginTransaction()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "sendAddPartitionsToTxnResponse(Errors.NOT_COORDINATOR,tp0,epoch,pid)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "prepareEndTxnResponse(Errors.NONE,TransactionResult.ABORT,pid,epoch)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(brokerNode,transactionManager.coordinator(CoordinatorType.TRANSACTION))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "sender.runOnce()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testFindCoordinatorAllowedInAbortableErrorState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertNull(transactionManager.coordinator(CoordinatorType.TRANSACTION))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertFalse(transactionManager.hasError())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(abortResult.isCompleted())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "sender.runOnce()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final short epoch = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "doInitTransactions(pid,epoch)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(transactionManager.hasAbortableError())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "TransactionalRequestResult abortResult = transactionManager.beginAbort()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "prepareFindCoordinatorResponse(Errors.NONE,false,CoordinatorType.TRANSACTION,transactionalId)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final long pid = 13131L@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(transactionManager.hasAbortableError())@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sendProduceResponse(Errors.OUT_OF_ORDER_SEQUENCE_NUMBER,pid,epoch)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "sender.runOnce()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testAbortableErrorWhileAbortInProgress['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertFalse(transactionManager.hasError())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "transactionManager.failIfNotReadyForSend()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Future<RecordMetadata> responseFuture = appendToAccumulator(tp0)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "prepareAddPartitionsToTxnResponse(Errors.NONE,tp0,epoch,pid)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "sender.runOnce()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "transactionManager.maybeAddPartitionToTransaction(tp0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Future<RecordMetadata> responseFuture = accumulator.append(tp0,time.milliseconds(),\"key\".getBytes(),\"value\".getBytes(),Record.EMPTY_HEADERS,null,MAX_BLOCK_TIMEOUT,false).future@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(transactionManager.isAborting())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(responseFuture.isDone())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(transactionManager.isReady())@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
9->16 [style = solid, label="pid"];
7->11 [style = bold, label=""];
19->16 [style = solid, label="epoch"];
22->2 [style = bold, label=""];
0->13 [style = bold, label=""];
21->0 [style = bold, label=""];
17->1 [style = bold, label=""];
19->12 [style = bold, label=""];
10->14 [style = bold, label=""];
23->27 [style = dashed, label="0"];
25->13 [style = bold, label=""];
19->12 [style = solid, label="epoch"];
27->28 [style = bold, label=""];
29->9 [style = bold, label=""];
12->15 [style = bold, label=""];
9->1 [style = solid, label="pid"];
22->32 [style = bold, label=""];
31->2 [style = bold, label=""];
4->18 [style = bold, label=""];
17->33 [style = dashed, label="0"];
9->31 [style = solid, label="pid"];
21->25 [style = bold, label=""];
16->22 [style = bold, label=""];
9->12 [style = solid, label="pid"];
13->16 [style = bold, label=""];
33->26 [style = bold, label=""];
26->30 [style = bold, label=""];
19->1 [style = solid, label="epoch"];
20->21 [style = bold, label=""];
3->9 [style = bold, label=""];
2->23 [style = bold, label=""];
6->28 [style = dashed, label="0"];
19->10 [style = solid, label="epoch"];
28->33 [style = bold, label=""];
0->25 [style = dashed, label="0"];
15->20 [style = bold, label=""];
18->5 [style = bold, label=""];
23->6 [style = bold, label=""];
9->19 [style = bold, label=""];
2->27 [style = bold, label=""];
5->7 [style = bold, label=""];
30->14 [style = bold, label=""];
19->31 [style = solid, label="epoch"];
8->30 [style = dashed, label="0"];
14->8 [style = bold, label=""];
4->14 [style = dashed, label="0"];
13->22 [style = bold, label=""];
8->4 [style = bold, label=""];
1->10 [style = bold, label=""];
32->31 [style = bold, label=""];
24->9 [style = bold, label=""];
9->10 [style = solid, label="pid"];
}
