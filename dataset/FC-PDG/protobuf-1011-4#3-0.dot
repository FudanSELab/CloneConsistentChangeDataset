digraph {
18 [style = filled, label = "counter++@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "deserializeFromMemoryStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "deserializeFromMemoryStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "inputDataList.size() == 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "inputStreamList.get((int)(counter % inputStreamList.size())).reset()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "benchmarkMessageType.getDefaultInstance().getParserForType().parseFrom(inputStreamList.get((int)(counter % inputStreamList.size())),extensions)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int reps@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "inputStreamList.get(j).reset()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "i < reps@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "counter++@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "deserializeFromByteArray['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int reps@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "j < inputStreamList.size()@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "inputStreamList.size() == 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "benchmarkMessageType.getDefaultInstance().getParserForType().parseFrom(inputDataList.get((int)(counter % inputDataList.size())),extensions)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "benchmarkMessageType.getDefaultInstance().getParserForType().parseFrom(inputStreamList.get(j),extensions)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "int j = 0@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "j++@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0->9 [style = solid, label="i"];
4->9 [style = bold, label=""];
4->9 [style = solid, label="i"];
8->19 [style = dashed, label="0"];
1->4 [style = bold, label=""];
9->12 [style = dotted, label="true"];
0->9 [style = bold, label=""];
5->12 [style = dashed, label="0"];
9->11 [style = bold, label=""];
15->14 [style = bold, label=""];
7->17 [style = dashed, label="0"];
10->15 [style = solid, label="j"];
10->12 [style = solid, label="j"];
9->11 [style = dotted, label="true"];
9->17 [style = dotted, label="true"];
18->17 [style = solid, label="counter"];
2->9 [style = solid, label="reps"];
12->15 [style = bold, label=""];
12->15 [style = dotted, label="true"];
14->10 [style = bold, label=""];
9->17 [style = bold, label=""];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
11->12 [style = bold, label=""];
0->4 [style = solid, label="i"];
9->7 [style = bold, label=""];
19->6 [style = bold, label=""];
11->12 [style = solid, label="j"];
20->16 [style = dotted, label="true"];
19->0 [style = bold, label=""];
1->7 [style = solid, label="counter"];
8->0 [style = bold, label=""];
13->2 [style = dotted, label="true"];
12->14 [style = dotted, label="true"];
5->1 [style = bold, label=""];
7->5 [style = bold, label=""];
8->6 [style = dotted, label="true"];
18->4 [style = bold, label=""];
12->10 [style = dotted, label="true"];
12->4 [style = bold, label=""];
10->12 [style = bold, label=""];
3->8 [style = bold, label=""];
2->16 [style = dashed, label="0"];
9->1 [style = dotted, label="true"];
9->4 [style = dotted, label="true"];
11->10 [style = solid, label="j"];
9->18 [style = dotted, label="true"];
19->6 [style = dotted, label="true"];
9->7 [style = dotted, label="true"];
13->8 [style = bold, label=""];
20->19 [style = bold, label=""];
11->15 [style = solid, label="j"];
16->9 [style = solid, label="reps"];
17->18 [style = bold, label=""];
3->2 [style = dotted, label="true"];
9->5 [style = dotted, label="true"];
}
