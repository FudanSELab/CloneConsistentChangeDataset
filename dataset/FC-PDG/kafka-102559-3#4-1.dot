digraph {
13 [style = filled, label = "assertEquals(Collections.singletonList(new KeyValueTimestamp<>(\"A\",\"aa\",0)),throughProcessorSupplier.theCapturedProcessor().processed())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(Collections.singletonList(new KeyValueTimestamp<>(\"A\",\"aa\",0)),sourceProcessorSupplier.theCapturedProcessor().processed)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final MockProcessorSupplier<String,String> sourceProcessorSupplier = new MockProcessorSupplier<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final KStream<String,String> through = source.repartition()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final KStream<String,String> source = builder.stream(\"topic-source\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shouldProcessViaThroughTopic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "through.process(throughProcessorSupplier)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Collections.singletonList(new KeyValueTimestamp<>(\"A\",\"aa\",0)),sourceProcessorSupplier.theCapturedProcessor().processed())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(Collections.singletonList(new KeyValueTimestamp<>(\"A\",\"aa\",0)),throughProcessorSupplier.theCapturedProcessor().processed)@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "shouldProcessViaThroughTopic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final TestInputTopic<String,String> inputTopic = driver.createInputTopic(\"topic-source\",new StringSerializer(),new StringSerializer(),Instant.ofEpochMilli(0L),Duration.ZERO)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "source.process(sourceProcessorSupplier)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final MockProcessorSupplier<String,String> throughProcessorSupplier = new MockProcessorSupplier<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "inputTopic.pipeInput(\"A\",\"aa\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final KStream<String,String> through = source.through(\"topic-sink\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "shouldProcessViaRepartitionTopic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
5->12 [style = dashed, label="0"];
10->6 [style = solid, label="throughProcessorSupplier"];
9->10 [style = bold, label=""];
7->8 [style = bold, label=""];
3->13 [style = dashed, label="0"];
10->6 [style = bold, label=""];
0->15 [style = bold, label=""];
2->12 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
11->0 [style = bold, label=""];
14->0 [style = bold, label=""];
8->9 [style = bold, label=""];
7->15 [style = dashed, label="0"];
1->2 [style = bold, label=""];
15->8 [style = bold, label=""];
8->9 [style = solid, label="sourceProcessorSupplier"];
2->5 [style = bold, label=""];
}
