digraph {
14 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "values.put(\"c\",3.1)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "values.put(\"a\",123456789123456789L)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Assert.assertEquals(6 * 4.12345678,result)@@@52@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "values.put(\"a\",1.1)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,mult(c,d))\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "values.put(\"b\",4.12345678)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "values.clear()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "values.put(\"d\",123456789123456789L)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "values.clear()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "values.put(\"c\",4.12345678)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "values.put(\"a\",1.1)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertEquals(6 * 123456789123456789L,result)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "values.clear()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "values.put(\"d\",4.12345678)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "Assert.assertEquals(14.623456789123456,result)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "values.clear()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "multManyFieldsWithSubmults['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "values.put(\"d\",4.123456789123456)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "values.put(\"b\",2.1)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "multManyFieldsWithSubmults['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "values.put(\"b\",123456789123456789L)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "values.put(\"d\",4)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "values.put(\"a\",1.1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "addManyFieldsWithManySubAdds['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "values.put(\"c\",3)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "values.put(\"b\",2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "values.put(\"d\",4.1)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "values.put(\"a\",4.12345678)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "values.put(\"c\",3.1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(24L,result)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(14.2D,result)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(14L,result)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "values.put(\"b\",2.1)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "values.clear()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Assert.assertEquals(14.6D,result)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(24D,result)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40->2 [style = bold, label=""];
8->30 [style = bold, label=""];
46->42 [style = bold, label=""];
41->34 [style = solid, label="result"];
13->47 [style = bold, label=""];
51->28 [style = bold, label=""];
5->9 [style = bold, label=""];
39->13 [style = bold, label=""];
38->14 [style = solid, label="result"];
1->30 [style = dashed, label="0"];
19->20 [style = bold, label=""];
21->43 [style = bold, label=""];
26->25 [style = bold, label=""];
0->2 [style = bold, label=""];
29->41 [style = bold, label=""];
33->46 [style = solid, label="result"];
44->19 [style = bold, label=""];
41->53 [style = solid, label="result"];
52->45 [style = bold, label=""];
32->27 [style = bold, label=""];
28->17 [style = solid, label="result"];
2->10 [style = bold, label=""];
49->36 [style = bold, label=""];
12->0 [style = bold, label=""];
10->7 [style = bold, label=""];
54->22 [style = bold, label=""];
17->23 [style = bold, label=""];
50->49 [style = bold, label=""];
36->33 [style = bold, label=""];
3->0 [style = bold, label=""];
38->14 [style = bold, label=""];
9->6 [style = bold, label=""];
27->15 [style = bold, label=""];
15->18 [style = bold, label=""];
48->40 [style = bold, label=""];
4->11 [style = solid, label="result"];
38->55 [style = solid, label="result"];
4->1 [style = solid, label="result"];
8->1 [style = bold, label=""];
31->50 [style = bold, label=""];
6->4 [style = bold, label=""];
24->26 [style = bold, label=""];
22->38 [style = bold, label=""];
7->5 [style = bold, label=""];
23->24 [style = bold, label=""];
18->29 [style = bold, label=""];
13->52 [style = solid, label="result"];
25->37 [style = bold, label=""];
33->46 [style = bold, label=""];
16->31 [style = bold, label=""];
33->42 [style = solid, label="result"];
42->32 [style = bold, label=""];
28->17 [style = bold, label=""];
13->47 [style = solid, label="result"];
4->8 [style = bold, label=""];
45->21 [style = bold, label=""];
14->55 [style = bold, label=""];
4->30 [style = solid, label="result"];
28->23 [style = solid, label="result"];
20->35 [style = bold, label=""];
55->16 [style = bold, label=""];
4->8 [style = solid, label="result"];
8->11 [style = dashed, label="0"];
4->11 [style = bold, label=""];
47->52 [style = bold, label=""];
0->40 [style = dashed, label="0"];
43->54 [style = bold, label=""];
41->34 [style = bold, label=""];
35->51 [style = bold, label=""];
37->39 [style = bold, label=""];
30->44 [style = bold, label=""];
34->53 [style = bold, label=""];
}
