digraph {
26 [style = filled, label = "testHiveSync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "tableType == HoodieTableType.COPY_ON_WRITE.name()@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "String inputBasePath = dfsBasePath + \"/input/\" + UUID.randomUUID().toString()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "String tableType@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(metaClient.getActiveTimeline().getCommitsTimeline().getInstants().count(),2)@@@12@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "HoodieTableMetaClient metaClient = new HoodieTableMetaClient(new Configuration(),cfg.targetBasePath)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "boolean useDeltaStreamer@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String tableType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "cfg.workloadDagGenerator = .getName()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "cfg.workloadDagGenerator = .getName()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "HoodieTestSuiteConfig cfg = makeConfig(inputBasePath,outputBasePath,useDeltaStreamer,tableType)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testDagWithInsertUpsertAndValidate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "boolean useDeltaStreamer@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(metaClient.getActiveTimeline().getCommitsTimeline().getInstants().count(),2)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String outputBasePath = dfsBasePath + \"/result/\" + UUID.randomUUID().toString()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testDagWithInsertUpsertAndValidate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String inputBasePath = dfsBasePath + \"/input\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "hoodieTestSuiteJob.runTestSuite()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "HoodieTestSuiteConfig cfg = makeConfig(inputBasePath,outputBasePath,useDeltaStreamer,tableType)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(metaClient.getActiveTimeline().getCommitsTimeline().getInstants().count(),1)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "dfs.delete(new Path(dfsBasePath + \"/result\"),true)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HoodieTableMetaClient metaClient = new HoodieTableMetaClient(new Configuration(),cfg.targetBasePath)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "boolean useDeltaStreamer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "HoodieTestSuiteJob hoodieTestSuiteJob = new HoodieTestSuiteJob(cfg,jsc)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "hoodieTestSuiteJob.runTestSuite()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String outputBasePath = dfsBasePath + \"/result\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "HoodieTestSuiteJob hoodieTestSuiteJob = new HoodieTestSuiteJob(cfg,jsc)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "this.cleanDFSDirs()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "dfs.delete(new Path(dfsBasePath + \"/input\"),true)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->20 [style = solid, label="cfg"];
11->3 [style = bold, label=""];
7->4 [style = dotted, label="true"];
13->4 [style = dotted, label="true"];
1->9 [style = bold, label=""];
10->6 [style = bold, label=""];
14->16 [style = bold, label=""];
18->28 [style = solid, label="tableType"];
24->20 [style = bold, label=""];
2->5 [style = bold, label=""];
1->8 [style = solid, label="cfg"];
25->19 [style = bold, label=""];
1->22 [style = dashed, label="0"];
3->27 [style = dashed, label="0"];
28->23 [style = bold, label=""];
28->24 [style = dotted, label="false"];
15->1 [style = solid, label="useDeltaStreamer"];
26->18 [style = dotted, label="true"];
16->1 [style = solid, label="inputBasePath"];
5->19 [style = dashed, label="0"];
22->9 [style = bold, label=""];
17->9 [style = solid, label="useDeltaStreamer"];
4->1 [style = solid, label="tableType"];
3->1 [style = bold, label=""];
6->2 [style = bold, label=""];
27->22 [style = bold, label=""];
11->27 [style = bold, label=""];
21->25 [style = bold, label=""];
0->9 [style = solid, label="useDeltaStreamer"];
4->9 [style = solid, label="tableType"];
18->9 [style = solid, label="tableType"];
20->21 [style = bold, label=""];
28->24 [style = bold, label=""];
7->12 [style = bold, label=""];
27->9 [style = solid, label="inputBasePath"];
3->1 [style = solid, label="outputBasePath"];
16->3 [style = bold, label=""];
23->20 [style = bold, label=""];
3->9 [style = solid, label="inputBasePath"];
9->10 [style = solid, label="cfg"];
26->12 [style = bold, label=""];
28->23 [style = dotted, label="true"];
4->18 [style = dashed, label="0"];
12->11 [style = bold, label=""];
7->0 [style = dotted, label="true"];
13->15 [style = dotted, label="true"];
1->9 [style = solid, label="outputBasePath"];
9->28 [style = bold, label=""];
9->8 [style = bold, label=""];
13->14 [style = bold, label=""];
22->9 [style = solid, label="outputBasePath"];
8->10 [style = bold, label=""];
26->17 [style = dotted, label="true"];
}
