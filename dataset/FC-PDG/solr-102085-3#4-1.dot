digraph {
0 [style = filled, label = "Map context@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "getValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "AtomicReaderContext readerContext@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "r = SlowCompositeReaderWrapper.wrap(topReader)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "AtomicReader insaneLeaves = new AtomicReader((((@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Map context@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "AtomicReaderContext raw@@@13@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "AtomicReaderContext raw@@@13@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "r = SlowCompositeReaderWrapper.wrap(new MultiReader(insaneLeaves))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "LeafReaderContext readerContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "o instanceof SolrIndexSearcher@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Object o = context.get(\"searcher\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<AtomicReaderContext> leaves = is.getIndexReader().leaves()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<LeafReaderContext> leaves = is.getIndexReader().leaves()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "final LeafReader r@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "return new IntDocValues(this){@Override public int intVal(int doc){return (end - sindex.getOrd(doc + off) - 1)}}@@@28@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "IndexReader topReader = ReaderUtil.getTopLevelContext(readerContext).reader()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "sf != null && sf.hasDocValues() == false && sf.multiValued() == false && sf.getType().getNumericType() != null@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "leaves@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "r = ((SolrIndexSearcher)o).getLeafReader()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final int off = readerContext.docBase@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "getValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "SolrIndexSearcher is = (SolrIndexSearcher)o@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "r = ((SolrIndexSearcher)o).getAtomicReader()@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "insaneLeaves(upto++( = Insanity.wrapInsanity(raw.reader(),field)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final SortedDocValues sindex = SortedSetSelector.wrap(DocValues.getSortedSet(r,field),SortedSetSelector.Type.MIN)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "LeafReader insaneLeaves = new LeafReader((((@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "SchemaField sf = is.getSchema().getFieldOrNull(field)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "getValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final AtomicReader r@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "LeafReaderContext raw@@@13@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "leaves@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final int end = sindex.getValueCount()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Map context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "int upto = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->19 [style = solid, label="topReader"];
14->16 [style = bold, label=""];
21->10 [style = bold, label=""];
4->18 [style = dotted, label="true"];
23->20 [style = bold, label=""];
10->20 [style = bold, label=""];
33->13 [style = dotted, label="true"];
3->28 [style = dashed, label="0"];
17->1 [style = bold, label=""];
5->9 [style = bold, label=""];
19->20 [style = solid, label="r"];
21->1 [style = dotted, label="true"];
10->20 [style = solid, label="r"];
15->21 [style = bold, label=""];
8->19 [style = bold, label=""];
12->18 [style = solid, label="o"];
15->21 [style = solid, label="sf"];
19->20 [style = bold, label=""];
4->19 [style = dotted, label="false"];
21->29 [style = dotted, label="true"];
30->27 [style = dotted, label="true"];
33->34 [style = dotted, label="true"];
18->15 [style = bold, label=""];
16->7 [style = bold, label=""];
20->32 [style = bold, label=""];
21->2 [style = dotted, label="true"];
21->22 [style = dotted, label="true"];
16->7 [style = solid, label="insaneLeaves"];
4->18 [style = bold, label=""];
30->9 [style = bold, label=""];
21->17 [style = dotted, label="true"];
5->0 [style = dotted, label="true"];
7->20 [style = bold, label=""];
3->12 [style = bold, label=""];
28->12 [style = bold, label=""];
32->11 [style = solid, label="end"];
4->15 [style = dotted, label="true"];
33->9 [style = bold, label=""];
21->10 [style = dotted, label="false"];
17->29 [style = dashed, label="0"];
4->8 [style = dotted, label="false"];
12->4 [style = solid, label="o"];
21->6 [style = dotted, label="true"];
24->14 [style = bold, label=""];
9->28 [style = bold, label=""];
4->21 [style = dotted, label="true"];
5->13 [style = dotted, label="true"];
9->11 [style = solid, label="off"];
21->29 [style = bold, label=""];
13->27 [style = dashed, label="0"];
30->25 [style = dotted, label="true"];
21->24 [style = dotted, label="true"];
12->4 [style = bold, label=""];
21->26 [style = dotted, label="true"];
7->20 [style = solid, label="r"];
21->31 [style = dotted, label="true"];
1->24 [style = dashed, label="0"];
6->26 [style = dashed, label="0"];
21->7 [style = dotted, label="true"];
21->14 [style = dotted, label="true"];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
1->14 [style = bold, label=""];
21->16 [style = dotted, label="true"];
21->23 [style = dotted, label="false"];
29->24 [style = bold, label=""];
32->11 [style = bold, label=""];
21->17 [style = bold, label=""];
23->20 [style = solid, label="r"];
10->23 [style = dashed, label="0"];
20->11 [style = bold, label=""];
21->23 [style = bold, label=""];
}
