digraph {
11 [style = filled, label = "closeClient(client)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final VM server = host.getVM(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "server.invoke(new CacheSerializableRunnable(\"execute cq\"){public void run2(){CqServiceProvider.MAINTAIN_KEYS = false}})@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "validateCQCount(client,1)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "server.invoke(new CacheSerializableRunnable(\"Create values\"){public void run2(){Region region1 = getRootRegion().getSubregion(regions(0()for (int i = numOfEntries + 1 i <= numOfEntries * 2 i++){region1.put(KEY + i,new Portfolio(i))}LogWriterUtils.getLogWriter().info(\"### Number of Entries in Region :\" + region1.keySet().size())}})@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "executeCQ(client,cqName,false,null)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testCqExecuteWithoutQueryExecution['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "server.invoke(new CacheSerializableRunnable(\"execute cq\"){public void run2(){assertFalse(\"CqServiceImpl.EXECUTE_QUERY_DURING_INIT flag should be false \",CqServiceImpl.EXECUTE_QUERY_DURING_INIT)assertFalse(DistributionConfig.GEMFIRE_PREFIX + \"cq.MAINTAIN_KEYS flag should be false \",CqServiceProvider.MAINTAIN_KEYS)int numOfQueryExecutions = (Integer)((GemFireCacheImpl)getCache()).getCachePerfStats().getStats().get(\"queryExecutions\")assertEquals(\"Number of query executions for cq.execute should be 0 \",0,numOfQueryExecutions)}})@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "validateCQ(client,cqName,noTest,numOfEntries,0,0,numOfEntries,0,0,numOfEntries)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "createCQ(client,cqName,cqs(0()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "deleteValues(server,regions(0(,5)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final int numOfEntries = 10@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "createValues(server,regions(0(,numOfEntries)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "validateCQ(client,cqName,noTest,numOfEntries,15,5,numOfEntries,15,5,numOfEntries + 15 + 5)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "createServer(server)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final int thePort = server.invoke(null)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testCqExecuteWithoutQueryExecutionAndNoRSCaching['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "waitForCreated(client,cqName,KEY + numOfEntries * 2)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "validateCQ(client,cqName,noTest,numOfEntries,15,0,numOfEntries,15,0,numOfEntries + 15)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "createClient(client,thePort,host0)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "waitForDestroyed(client,cqName,KEY + 5)@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String cqName = \"testCqExecuteWithoutQueryExecution_1\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testCqExecuteWithoutQueryExecution['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String host0 = NetworkUtils.getServerHostName(server.getHost())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "waitForUpdated(client,cqName,KEY + numOfEntries)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "createValues(server,regions(0(,10)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "closeServer(server)@@@53@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "createValues(server,regions(0(,5)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Host host = Host.getHost(0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final VM client = host.getVM(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20->23 [style = bold, label=""];
8->14 [style = bold, label=""];
3->23 [style = solid, label="cqName"];
17->26 [style = bold, label=""];
3->9 [style = solid, label="cqName"];
28->1 [style = solid, label="MAINTAIN_KEYS"];
10->2 [style = bold, label=""];
26->8 [style = solid, label="numOfEntries"];
3->12 [style = solid, label="cqName"];
21->14 [style = solid, label="server"];
26->23 [style = solid, label="numOfEntries"];
27->4 [style = bold, label=""];
17->15 [style = solid, label="client"];
17->19 [style = solid, label="client"];
17->9 [style = solid, label="client"];
3->8 [style = solid, label="cqName"];
7->16 [style = bold, label=""];
21->17 [style = bold, label=""];
13->6 [style = bold, label=""];
24->4 [style = bold, label=""];
21->5 [style = solid, label="server"];
17->25 [style = solid, label="client"];
29->4 [style = bold, label=""];
6->16 [style = solid, label="thePort"];
19->22 [style = bold, label=""];
11->18 [style = bold, label=""];
5->9 [style = bold, label=""];
0->13 [style = bold, label=""];
17->2 [style = solid, label="client"];
25->11 [style = bold, label=""];
21->0 [style = solid, label="server"];
17->23 [style = solid, label="client"];
17->11 [style = solid, label="client"];
16->12 [style = bold, label=""];
21->18 [style = solid, label="server"];
3->2 [style = solid, label="cqName"];
26->15 [style = solid, label="numOfEntries"];
26->2 [style = solid, label="numOfEntries"];
26->13 [style = solid, label="numOfEntries"];
3->0 [style = bold, label=""];
23->8 [style = bold, label=""];
3->15 [style = solid, label="cqName"];
12->19 [style = bold, label=""];
15->5 [style = bold, label=""];
26->25 [style = solid, label="numOfEntries"];
3->25 [style = solid, label="cqName"];
7->16 [style = solid, label="host0"];
17->12 [style = solid, label="client"];
17->8 [style = solid, label="client"];
26->20 [style = solid, label="numOfEntries"];
3->22 [style = solid, label="cqName"];
6->7 [style = bold, label=""];
1->20 [style = bold, label=""];
26->3 [style = bold, label=""];
14->10 [style = bold, label=""];
9->25 [style = bold, label=""];
22->1 [style = bold, label=""];
4->21 [style = bold, label=""];
3->28 [style = bold, label=""];
21->10 [style = solid, label="server"];
17->22 [style = solid, label="client"];
2->15 [style = bold, label=""];
28->0 [style = bold, label=""];
21->13 [style = solid, label="server"];
17->16 [style = solid, label="client"];
}
