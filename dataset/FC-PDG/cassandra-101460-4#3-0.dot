digraph {
9 [style = filled, label = "TriggerDefinition td = TriggerDefinition.create(triggerName,triggerClass)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "addTriggerToCf['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MigrationManager.announceNewKeyspace(ksm)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName,cfName)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(td,cfm3.getTriggers().get(triggerName))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MigrationManager.announceColumnFamilyUpdate(cfm2,false)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(1,cfm3.getTriggers().size())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "addTriggerToCf['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "newKsContainsCfWithTrigger['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(td,cfm2.getTriggers().get(triggerName))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "KSMetaData ksm = KSMetaData.newKeyspace(ksName,,Collections.singletonMap(\"replication_factor\",\"1\"),true,Collections.singletonList(cfm1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "CFMetaData cfm2 = Schema.instance.getCFMetaData(ksName,cfName).copy()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "TriggerDefinition td = TriggerDefinition.create(triggerName,triggerClass)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\",cfName),ksName)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertFalse(cfm2.getTriggers().isEmpty())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(1,cfm2.getTriggers().size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "cfm2.addTriggerDefinition(td)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CFMetaData cfm1 = CFMetaData.compile(String.format(\"CREATE TABLE %s (k int PRIMARY KEY, v int)\",cfName),ksName)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(cfm3.getTriggers().isEmpty())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CFMetaData cfm3 = Schema.instance.getCFMetaData(ksName,cfName)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cfm1.addTriggerDefinition(td)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->19 [style = dashed, label="0"];
5->8 [style = bold, label=""];
3->7 [style = solid, label="cfm2"];
6->15 [style = bold, label=""];
9->8 [style = solid, label="td"];
2->13 [style = bold, label=""];
10->17 [style = dashed, label="0"];
9->10 [style = solid, label="td"];
6->2 [style = solid, label="cfm1"];
11->6 [style = bold, label=""];
17->20 [style = bold, label=""];
11->6 [style = solid, label="cfm1"];
0->11 [style = bold, label=""];
3->13 [style = dashed, label="0"];
15->2 [style = bold, label=""];
4->1 [style = bold, label=""];
6->2 [style = bold, label=""];
2->3 [style = bold, label=""];
10->7 [style = bold, label=""];
14->20 [style = solid, label="td"];
14->15 [style = solid, label="td"];
7->4 [style = bold, label=""];
3->9 [style = bold, label=""];
16->14 [style = bold, label=""];
3->19 [style = bold, label=""];
14->6 [style = bold, label=""];
6->2 [style = solid, label="ksm"];
18->17 [style = bold, label=""];
12->11 [style = bold, label=""];
13->9 [style = bold, label=""];
13->7 [style = solid, label="cfm2"];
19->18 [style = bold, label=""];
9->10 [style = bold, label=""];
2->3 [style = solid, label="ksm"];
1->5 [style = bold, label=""];
}
