digraph {
17 [style = filled, label = "partitionPath.append(customAvroKeyGenerator.getDefaultPartitionPathSeparator())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "IOException e@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "String partitionPathField@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "partitionPath.append(new SimpleKeyGenerator(config,partitionPathField).getPartitionPath(internalRowStructTypePair.get().getKey(),internalRowStructTypePair.get().getValue()))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "getPartitionPathFields() == null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Option<GenericRecord> record@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "Option<GenericRecord> record@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "partitionPath.append(new TimestampBasedAvroKeyGenerator(config,partitionPathField).getPartitionPath(record))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "partitionPath.deleteCharAt(partitionPath.length() - 1)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String(( fieldWithType = field.split(customAvroKeyGenerator.SPLIT_REGEX)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CustomAvroKeyGenerator.PartitionKeyType keyType = CustomAvroKeyGenerator.PartitionKeyType.valueOf(fieldWithType(1(.toUpperCase())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "throw new HoodieKeyGeneratorException(\"Please provide valid PartitionKeyType with fields! You provided: \" + keyType)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Option<Row> row@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "String(( fieldWithType = field.split(SPLIT_REGEX)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "record.isPresent()@@@30@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "GenericRecord record@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return \"\"@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "IOException ioe@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "row.isPresent()@@@22@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "getPartitionPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "throw new HoodieKeyException(\"Unable to find field names for partition path in cfg\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "getPartitionPathFields().size() == 1 && getPartitionPathFields().get(0).isEmpty()@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "return partitionPath.toString()@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "throw new HoodieKeyGeneratorException(\"Unable to find field names for partition path in proper format\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "partitionPath.append(new SimpleKeyGenerator(config,partitionPathField).getPartitionPath(record.get()))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "partitionPath.deleteCharAt(partitionPath.length() - 1)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "throw new HoodieKeyException(\"Unable to find field names for partition path in proper format\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return partitionPath.toString()@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "throw new HoodieKeyGeneratorException(\"Unable to initialise TimestampBasedKeyGenerator class\",e)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "record.isPresent()@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "partitionPath.append(new TimestampBasedKeyGenerator(config,partitionPathField).getPartitionPath(internalRowStructTypePair.get().getKey(),internalRowStructTypePair.get().getValue()))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "partitionPath.append(new SimpleAvroKeyGenerator(config,partitionPathField).getPartitionPath(record))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "keyType@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "fieldWithType.length != 2@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "partitionPath.append(new TimestampBasedKeyGenerator(config,partitionPathField).getPartitionPath(record.get()))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Option<Pair<InternalRow,StructType>> internalRowStructTypePair@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "getPartitionPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "partitionPath.append(DEFAULT_PARTITION_PATH_SEPARATOR)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "partitionPath.append(new SimpleKeyGenerator(config,partitionPathField).getPartitionPath(row.get()))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Option<Row> row@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "row.isPresent()@@@33@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "StringBuilder partitionPath = new StringBuilder()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "partitionPath.append(new TimestampBasedKeyGenerator(config,partitionPathField).getPartitionPath(row.get()))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "throw new HoodieKeyGeneratorException(\"Please provide valid PartitionKeyType with fields! You provided: \" + keyType)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "PartitionKeyType keyType = PartitionKeyType.valueOf(fieldWithType(1(.toUpperCase())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "partitionPathField = fieldWithType(0(@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new HoodieKeyGeneratorException(\"Unable to initialise TimestampBasedKeyGenerator class\",ioe)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "getPartitionPath['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42->23 [style = bold, label=""];
33->30 [style = dotted, label="false"];
18->3 [style = bold, label=""];
41->19 [style = bold, label=""];
17->9 [style = bold, label=""];
4->5 [style = dotted, label="false"];
18->15 [style = dotted, label="true"];
38->39 [style = bold, label=""];
23->46 [style = dotted, label="true"];
26->22 [style = bold, label=""];
19->24 [style = bold, label=""];
9->26 [style = bold, label=""];
20->35 [style = dashed, label="0"];
15->17 [style = bold, label=""];
23->4 [style = dotted, label="true"];
42->46 [style = solid, label="keyType"];
23->18 [style = dotted, label="true"];
45->43 [style = bold, label=""];
4->36 [style = dashed, label="0"];
0->24 [style = bold, label=""];
32->3 [style = dotted, label="true"];
26->35 [style = bold, label=""];
18->32 [style = bold, label=""];
1->6 [style = dotted, label="true"];
14->9 [style = bold, label=""];
23->36 [style = bold, label=""];
27->19 [style = bold, label=""];
32->3 [style = bold, label=""];
45->43 [style = dotted, label="true"];
4->16 [style = bold, label=""];
40->37 [style = bold, label=""];
18->3 [style = dotted, label="false"];
23->25 [style = bold, label=""];
21->44 [style = bold, label=""];
47->38 [style = solid, label="record"];
12->25 [style = solid, label="keyType"];
18->15 [style = bold, label=""];
47->36 [style = solid, label="record"];
8->7 [style = dotted, label="true"];
26->20 [style = dotted, label="true"];
18->32 [style = dotted, label="false"];
16->17 [style = bold, label=""];
46->39 [style = bold, label=""];
5->17 [style = bold, label=""];
21->9 [style = bold, label=""];
27->29 [style = dotted, label="true"];
2->21 [style = bold, label=""];
19->0 [style = dotted, label="true"];
5->43 [style = dashed, label="0"];
33->30 [style = bold, label=""];
32->31 [style = bold, label=""];
26->20 [style = bold, label=""];
22->42 [style = bold, label=""];
6->17 [style = bold, label=""];
17->10 [style = bold, label=""];
17->39 [style = dashed, label="0"];
30->17 [style = bold, label=""];
11->34 [style = dashed, label="0"];
33->5 [style = bold, label=""];
4->33 [style = bold, label=""];
25->17 [style = bold, label=""];
32->31 [style = dotted, label="false"];
44->22 [style = solid, label="fieldWithType"];
36->39 [style = bold, label=""];
19->0 [style = bold, label=""];
23->38 [style = dotted, label="true"];
1->6 [style = bold, label=""];
12->42 [style = dashed, label="0"];
11->47 [style = dashed, label="0"];
10->13 [style = bold, label=""];
9->44 [style = dashed, label="0"];
39->40 [style = bold, label=""];
41->47 [style = dotted, label="true"];
9->22 [style = solid, label="fieldWithType"];
8->11 [style = dotted, label="true"];
3->17 [style = bold, label=""];
23->36 [style = dotted, label="true"];
26->35 [style = dotted, label="true"];
31->17 [style = bold, label=""];
43->39 [style = bold, label=""];
4->5 [style = bold, label=""];
23->25 [style = dotted, label="true"];
23->18 [style = bold, label=""];
21->14 [style = bold, label=""];
39->44 [style = bold, label=""];
24->2 [style = bold, label=""];
27->34 [style = dotted, label="true"];
8->19 [style = bold, label=""];
12->23 [style = solid, label="keyType"];
35->22 [style = bold, label=""];
23->4 [style = bold, label=""];
23->46 [style = bold, label=""];
18->38 [style = dashed, label="0"];
14->44 [style = bold, label=""];
20->22 [style = bold, label=""];
27->28 [style = dotted, label="true"];
44->26 [style = bold, label=""];
22->12 [style = bold, label=""];
33->5 [style = dotted, label="true"];
23->38 [style = bold, label=""];
21->14 [style = dotted, label="true"];
4->33 [style = dotted, label="false"];
12->23 [style = bold, label=""];
4->16 [style = dotted, label="true"];
42->23 [style = solid, label="keyType"];
}
