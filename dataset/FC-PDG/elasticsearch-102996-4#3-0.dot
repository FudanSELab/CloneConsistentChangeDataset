digraph {
12 [style = filled, label = "DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "defaultMapper = createIndex(\"test2\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "boolean ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "coerce = ((LegacyGeoShapeFieldMapper)fieldMapper).coerce().value()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "testCoerceParsing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "defaultMapper = createIndex(\"test2\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(\"tree\",\"quadtree\").field(\"coerce\",\"true\").endObject().endObject().endObject().endObject())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(ignoreZValue,equalTo(true))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(ignoreZValue,equalTo(false))@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(\"tree\",\"quadtree\").field(\"coerce\",\"false\").endObject().endObject().endObject().endObject())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertFieldWarnings(\"tree\")@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "mapper = createDocumentMapper(fieldMapping(null))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testIgnoreZValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue().value()@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Mapper fieldMapper = mapper.mappers().getMapper(\"field\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_point\").field(IGNORE_Z_VALUE.getPreferredName(),\"true\").endObject().endObject().endObject().endObject())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "boolean coerce = ((LegacyGeoShapeFieldMapper)fieldMapper).coerce().value()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(coerce,equalTo(false))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "fieldMapper = defaultMapper.mappers().getMapper(\"location\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_point\").field(IGNORE_Z_VALUE.getPreferredName(),\"false\").endObject().endObject().endObject().endObject())@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "fieldMapper = mapper.mappers().getMapper(\"field\")@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertThat(ignoreZValue,equalTo(false))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(coerce,equalTo(true))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testIgnoreZValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23->30 [style = bold, label=""];
8->22 [style = solid, label="fieldMapper"];
4->6 [style = bold, label=""];
28->23 [style = solid, label="coerce"];
7->29 [style = dashed, label="0"];
26->21 [style = bold, label=""];
13->7 [style = bold, label=""];
8->9 [style = bold, label=""];
10->2 [style = bold, label=""];
19->9 [style = bold, label=""];
14->18 [style = bold, label=""];
9->1 [style = solid, label="ignoreZValue"];
2->12 [style = solid, label="mapping"];
0->7 [style = bold, label=""];
0->29 [style = solid, label="fieldMapper"];
11->0 [style = bold, label=""];
6->11 [style = bold, label=""];
17->19 [style = bold, label=""];
22->27 [style = bold, label=""];
25->24 [style = bold, label=""];
0->29 [style = bold, label=""];
18->13 [style = bold, label=""];
29->28 [style = bold, label=""];
3->23 [style = dashed, label="0"];
28->23 [style = bold, label=""];
24->0 [style = bold, label=""];
27->20 [style = bold, label=""];
8->9 [style = solid, label="fieldMapper"];
5->3 [style = solid, label="ignoreZValue"];
11->24 [style = dashed, label="0"];
21->12 [style = bold, label=""];
20->25 [style = bold, label=""];
21->12 [style = solid, label="mapping"];
25->24 [style = solid, label="mapping"];
1->27 [style = dashed, label="0"];
13->7 [style = solid, label="ignoreZValue"];
8->22 [style = bold, label=""];
0->7 [style = solid, label="fieldMapper"];
15->16 [style = bold, label=""];
1->4 [style = bold, label=""];
1->4 [style = solid, label="ignoreZValue"];
14->18 [style = solid, label="fieldMapper"];
4->14 [style = bold, label=""];
7->5 [style = bold, label=""];
2->21 [style = dashed, label="0"];
16->17 [style = bold, label=""];
5->3 [style = bold, label=""];
4->20 [style = dashed, label="0"];
17->19 [style = solid, label="fieldMapper"];
6->11 [style = solid, label="mapping"];
12->8 [style = bold, label=""];
9->1 [style = bold, label=""];
6->25 [style = dashed, label="0"];
27->20 [style = solid, label="coerce"];
5->28 [style = dashed, label="0"];
2->12 [style = bold, label=""];
9->22 [style = dashed, label="0"];
}
