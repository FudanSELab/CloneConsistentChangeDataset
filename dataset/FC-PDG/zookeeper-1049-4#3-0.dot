digraph {
9 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Assert.assertNotSame(stat.getCtime(),stat.getMtime())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "String name@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(0,stat.getVersion())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getMzxid())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(0,stat.getAversion())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testDataSizeChange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "zk.create(name,name.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertEquals(0,stat.getNumChildren())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(0,stat.getCversion())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertNotSame(stat.getCtime(),stat.getMtime())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "String name = \"/foo\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "zk.getData(name,false,stat)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "zk.getData(name,false,stat)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "stat = newStat()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertNotSame(stat.getCzxid(),stat.getMzxid())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getPzxid())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(name.length(),stat.getDataLength())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(1,stat.getVersion())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "zk.setData(name,(name + name).getBytes(),-1)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(name.length(),stat.getDataLength())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Stat stat@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(stat.getCtime(),stat.getMtime())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "testDataSizeChange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(name.length() * 2,stat.getDataLength())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(0,stat.getEphemeralOwner())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "Stat stat@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(0,stat.getNumChildren())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "validateCreateStat['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(name.length(),stat.getDataLength())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertEquals(name.length() * 2,stat.getDataLength())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(1,stat.getVersion())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "Assert.assertNotSame(stat.getCzxid(),stat.getMzxid())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "stat = newStat()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getPzxid())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertEquals(0,stat.getEphemeralOwner())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "assertEquals(0,stat.getCversion())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(0,stat.getAversion())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->42 [style = dashed, label="0"];
21->10 [style = bold, label=""];
53->46 [style = dotted, label="true"];
16->0 [style = bold, label=""];
2->20 [style = bold, label=""];
35->27 [style = bold, label=""];
41->32 [style = bold, label=""];
7->17 [style = bold, label=""];
1->8 [style = bold, label=""];
40->35 [style = bold, label=""];
27->43 [style = bold, label=""];
37->28 [style = bold, label=""];
51->4 [style = bold, label=""];
19->12 [style = bold, label=""];
3->40 [style = bold, label=""];
36->44 [style = bold, label=""];
14->3 [style = solid, label="name"];
14->13 [style = solid, label="name"];
15->21 [style = bold, label=""];
8->18 [style = bold, label=""];
2->35 [style = dashed, label="0"];
20->27 [style = dashed, label="0"];
30->42 [style = bold, label=""];
25->9 [style = bold, label=""];
26->32 [style = dashed, label="0"];
23->15 [style = bold, label=""];
53->52 [style = dotted, label="true"];
49->48 [style = bold, label=""];
53->47 [style = bold, label=""];
31->29 [style = bold, label=""];
14->7 [style = solid, label="name"];
4->2 [style = bold, label=""];
12->26 [style = bold, label=""];
5->14 [style = bold, label=""];
42->36 [style = bold, label=""];
10->29 [style = dashed, label="0"];
0->39 [style = dashed, label="0"];
8->36 [style = dashed, label="0"];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
50->49 [style = bold, label=""];
6->33 [style = dashed, label="0"];
26->13 [style = bold, label=""];
47->50 [style = bold, label=""];
28->41 [style = bold, label=""];
9->37 [style = dashed, label="0"];
23->15 [style = solid, label="stat"];
14->7 [style = bold, label=""];
12->41 [style = dashed, label="0"];
39->30 [style = bold, label=""];
21->31 [style = dashed, label="0"];
16->34 [style = dashed, label="0"];
18->44 [style = dashed, label="0"];
48->51 [style = bold, label=""];
29->33 [style = bold, label=""];
45->14 [style = bold, label=""];
43->38 [style = bold, label=""];
25->38 [style = dashed, label="0"];
24->43 [style = dashed, label="0"];
11->3 [style = bold, label=""];
38->37 [style = bold, label=""];
6->16 [style = bold, label=""];
15->31 [style = bold, label=""];
24->25 [style = bold, label=""];
22->30 [style = dashed, label="0"];
0->22 [style = bold, label=""];
19->28 [style = dashed, label="0"];
34->39 [style = bold, label=""];
13->23 [style = bold, label=""];
9->19 [style = bold, label=""];
22->1 [style = bold, label=""];
32->13 [style = bold, label=""];
20->24 [style = bold, label=""];
4->40 [style = dashed, label="0"];
33->34 [style = bold, label=""];
11->3 [style = solid, label="stat"];
14->15 [style = solid, label="name"];
17->11 [style = bold, label=""];
}
