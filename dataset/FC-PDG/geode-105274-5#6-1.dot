digraph {
17 [style = filled, label = "testGetFieldName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(objOut.getClass().getName(),pi.getClassName())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "setupSerializer(new ExplicitFieldNameAutoSerializer(false,\"org.apache.geode.pdx.DomainObjectPdxAuto\"),true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testIsIdentityField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "PdxInstance pi = (PdxInstance)DataSerializer.readObject(dis)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "PdxInstance pi = (PdxInstance)DataSerializer.readObject(new DataInputStream(new ByteArrayInputStream(out.toByteArray())))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(objOut,pi.getObject())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "DataSerializer.writeObject(objOut,out)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "HeapDataOutputStream out = new HeapDataOutputStream(Version.CURRENT)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "DataInputStream dis = new DataInputStream(new ByteArrayInputStream(out.toByteArray()))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(true,pi.isIdentityField(\"long_0\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DataSerializer.writeObject(objOut,out)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(false,pi.hasField(\"long_0\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(objOut,pi2.getObject())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "setupSerializer(new ExplicitIdentityAutoSerializer(false,\"org.apache.geode.pdx.DomainObjectPdxAuto\"),true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HeapDataOutputStream out = new HeapDataOutputStream(KnownVersion.CURRENT)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DomainObject objOut = new DomainObjectPdxAuto(4)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(true,pi.hasField(\"_long_0\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testIsIdentityField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(true,pi.hasField(\"string_0\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(objOut,pi.getObject())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "System.out.println(\"fieldNames=\" + pi.getFieldNames())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "PdxInstance pi2 = (PdxInstance)DataSerializer.readObject(dis)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(false,pi.isIdentityField(\"string_0\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(false,pi.isEnum())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->24 [style = dashed, label="0"];
6->11 [style = solid, label="out"];
3->13 [style = solid, label="dis"];
4->3 [style = bold, label=""];
9->7 [style = solid, label="objOut"];
15->10 [style = bold, label=""];
16->11 [style = bold, label=""];
12->5 [style = bold, label=""];
10->19 [style = dashed, label="0"];
0->12 [style = bold, label=""];
11->21 [style = bold, label=""];
11->4 [style = bold, label=""];
16->4 [style = solid, label="out"];
3->2 [style = solid, label="dis"];
9->8 [style = solid, label="objOut"];
7->8 [style = bold, label=""];
24->22 [style = bold, label=""];
4->21 [style = dashed, label="0"];
9->11 [style = solid, label="objOut"];
17->19 [style = bold, label=""];
9->16 [style = bold, label=""];
9->6 [style = bold, label=""];
9->4 [style = solid, label="objOut"];
18->20 [style = bold, label=""];
6->16 [style = dashed, label="0"];
14->0 [style = bold, label=""];
19->9 [style = bold, label=""];
6->11 [style = bold, label=""];
2->14 [style = bold, label=""];
3->13 [style = bold, label=""];
5->7 [style = bold, label=""];
10->9 [style = bold, label=""];
16->11 [style = solid, label="out"];
20->24 [style = bold, label=""];
1->10 [style = bold, label=""];
6->4 [style = solid, label="out"];
9->22 [style = solid, label="objOut"];
23->18 [style = bold, label=""];
13->2 [style = bold, label=""];
21->23 [style = bold, label=""];
}
