digraph {
2 [style = filled, label = "_driver.pollForJobState(queueName,TaskUtil.getNamespacedJobName(queueName,\"JOB\" + 3),TaskState.IN_PROGRESS)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "builder.enqueueJob(\"JOB\" + 4,jobBuilder)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "_driver.cleanupQueue(queueName)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(_driver.getWorkflowConfig(queueName).getJobDag().size(),2)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testJobQueueNotCleanupRunningJobs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Assert.assertEquals(_driver.getWorkflowConfig(queueName).getJobDag().size(),0)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String queueName = TestHelper.getTestMethodName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "_driver.pollForJobState(queueName,TaskUtil.getNamespacedJobName(queueName,\"JOB\" + 4),TaskState.FAILED)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i < 3@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i < 5@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "builder.enqueueJob(\"JOB\" + 3,jobBuilder.setJobCommandConfigMap(ImmutableMap.of(MockTask.JOB_DELAY,\"1000000\")))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testJobQueueCleanUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "JobConfig.Builder jobBuilder = new JobConfig.Builder().setTargetResource(WorkflowGenerator.DEFAULT_TGT_DB).setCommand(MockTask.TASK_COMMAND).setMaxAttemptsPerTask(2).setJobCommandConfigMap(ImmutableMap.of(MockTask.SUCCESS_COUNT_BEFORE_FAIL,\"2\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "JobConfig.Builder jobBuilder = new JobConfig.Builder().setTargetResource(WorkflowGenerator.DEFAULT_TGT_DB).setCommand(MockTask.TASK_COMMAND).setMaxAttemptsPerTask(2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "builder.enqueueJob(\"JOB\" + i,jobBuilder)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testJobQueueNotCleanupRunningJobs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "_driver.start(builder.build())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "JobQueue.Builder builder = TaskTestUtil.buildJobQueue(queueName)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->1 [style = solid, label="i"];
10->16 [style = bold, label=""];
3->10 [style = bold, label=""];
5->19 [style = bold, label=""];
16->12 [style = solid, label="jobBuilder"];
14->3 [style = bold, label=""];
6->4 [style = bold, label=""];
2->7 [style = bold, label=""];
13->17 [style = dashed, label="0"];
1->12 [style = bold, label=""];
5->1 [style = bold, label=""];
9->3 [style = bold, label=""];
5->12 [style = solid, label="i"];
16->8 [style = bold, label=""];
3->2 [style = solid, label="queueName"];
19->5 [style = dotted, label="true"];
2->18 [style = dashed, label="0"];
10->11 [style = bold, label=""];
19->0 [style = bold, label=""];
8->19 [style = solid, label="i"];
1->6 [style = bold, label=""];
8->1 [style = bold, label=""];
5->1 [style = solid, label="i"];
5->19 [style = solid, label="i"];
3->10 [style = solid, label="queueName"];
7->13 [style = bold, label=""];
1->19 [style = dashed, label="0"];
12->5 [style = bold, label=""];
1->5 [style = dotted, label="true"];
3->18 [style = solid, label="queueName"];
11->8 [style = bold, label=""];
19->12 [style = dotted, label="true"];
11->16 [style = dashed, label="0"];
8->12 [style = solid, label="i"];
1->12 [style = dotted, label="true"];
11->12 [style = solid, label="jobBuilder"];
15->3 [style = bold, label=""];
7->17 [style = bold, label=""];
0->2 [style = bold, label=""];
4->0 [style = bold, label=""];
19->12 [style = bold, label=""];
11->4 [style = solid, label="jobBuilder"];
0->18 [style = bold, label=""];
8->5 [style = solid, label="i"];
3->7 [style = solid, label="queueName"];
8->19 [style = bold, label=""];
18->7 [style = bold, label=""];
}
