digraph {
7 [style = filled, label = "env.enableCheckpointing()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "StreamGraph graph = env.getStreamGraph()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(1337,((RestartStrategies.FixedDelayRestartStrategyConfiguration)restartStrategy).getDelayBetweenAttempts())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testFixedRestartingWhenCheckpointingAndExplicitExecutionRetriesNonZero['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(restartStrategy instanceof RestartStrategies.FixedDelayRestartStrategyConfiguration)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(42,((RestartStrategies.FixedDelayRestartStrategyConfiguration)restartStrategy).getRestartAttempts())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testNoRestartingWhenCheckpointingAndExplicitExecutionRetriesZero['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testNoRestartingWhenCheckpointingAndExplicitExecutionRetriesZero['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "env.enableCheckpointing(500)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "JobGraph jobGraph = graph.getJobGraph()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "env.getConfig().setExecutionRetryDelay(1337)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "env.setNumberOfExecutionRetries(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "env.fromElements(1).print()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RestartStrategies.RestartStrategyConfiguration restartStrategy = jobGraph.getSerializedExecutionConfig().deserializeValue(getClass().getClassLoader()).getRestartStrategy()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "env.setNumberOfExecutionRetries(42)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "env.fromElements(1).print()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RestartStrategies.RestartStrategyConfiguration restartStrategy = ExecutionConfigTest.deserializeConfig(jobGraph.getSerializedExecutionConfig()).getRestartStrategy()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertNotNull(restartStrategy)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->0 [style = bold, label=""];
15->13 [style = bold, label=""];
8->10 [style = dashed, label="0"];
5->9 [style = bold, label=""];
8->9 [style = solid, label="restartStrategy"];
4->6 [style = bold, label=""];
10->9 [style = solid, label="restartStrategy"];
5->18 [style = solid, label="restartStrategy"];
9->18 [style = dashed, label="0"];
2->3 [style = bold, label=""];
5->9 [style = solid, label="restartStrategy"];
7->11 [style = dashed, label="0"];
18->17 [style = bold, label=""];
0->11 [style = bold, label=""];
1->0 [style = bold, label=""];
12->0 [style = bold, label=""];
3->4 [style = bold, label=""];
11->2 [style = bold, label=""];
0->7 [style = bold, label=""];
2->15 [style = dashed, label="0"];
9->18 [style = bold, label=""];
10->5 [style = bold, label=""];
8->5 [style = bold, label=""];
17->14 [style = bold, label=""];
8->5 [style = solid, label="restartStrategy"];
7->2 [style = bold, label=""];
6->10 [style = bold, label=""];
6->8 [style = bold, label=""];
10->5 [style = solid, label="restartStrategy"];
7->15 [style = bold, label=""];
13->4 [style = bold, label=""];
}
