digraph {
19 [style = filled, label = "when(commands.size()).thenReturn(3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Answer answer1 = mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(answer1,times(1)).getResult()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Commands commands = mock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "when(answer2.getResult()).thenReturn(false)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(this.agentManager.send(HOST_ID,commands)).thenReturn(answers)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "NetworkHelperImpl nwHelperUT = spy(this.nwHelper)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testSendCommandsToRouterWithTrueResult['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "when(answer3.getResult()).thenReturn(false)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "verify(answer3,times(0)).getResult()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(answer1.getResult()).thenReturn(true)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "when(answer2.getResult()).thenReturn(true)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Answer(( answers = {answer1,answer2,answer3}@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "doReturn(true).when(nwHelperUT).checkRouterVersion(vr)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testSendCommandsToRouter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertFalse(result)@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "when(answer3.getResult()).thenReturn(true)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "lenient().when(answer3.getResult()).thenReturn(false)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Answer answer3 = mock()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "VirtualRouter vr = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(vr.getHostId()).thenReturn(HOST_ID)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "verify(answer3,times(1)).getResult()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testSendCommandsToRouter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(result)@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "verify(answer2,times(1)).getResult()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Answer answer2 = mock()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final boolean result = nwHelperUT.sendCommandsToRouter(vr,commands)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "verify(this.agentManager,times(1)).send(HOST_ID,commands)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
13->25 [style = bold, label=""];
18->3 [style = bold, label=""];
16->11 [style = bold, label=""];
7->2 [style = solid, label="answers"];
3->5 [style = solid, label="commands"];
1->26 [style = dashed, label="0"];
6->7 [style = solid, label="answer2"];
16->18 [style = solid, label="vr"];
19->10 [style = bold, label=""];
9->17 [style = bold, label=""];
3->14 [style = solid, label="commands"];
1->21 [style = dashed, label="0"];
20->1 [style = bold, label=""];
24->23 [style = bold, label=""];
10->6 [style = bold, label=""];
0->15 [style = bold, label=""];
4->7 [style = bold, label=""];
11->18 [style = bold, label=""];
16->14 [style = solid, label="vr"];
21->2 [style = bold, label=""];
20->21 [style = bold, label=""];
6->4 [style = bold, label=""];
26->2 [style = bold, label=""];
4->7 [style = solid, label="answer3"];
3->19 [style = bold, label=""];
5->0 [style = bold, label=""];
20->25 [style = dashed, label="0"];
14->8 [style = solid, label="result"];
12->8 [style = bold, label=""];
15->24 [style = bold, label=""];
12->24 [style = dashed, label="0"];
2->14 [style = bold, label=""];
25->26 [style = bold, label=""];
10->7 [style = solid, label="answer1"];
27->17 [style = bold, label=""];
14->23 [style = solid, label="result"];
22->17 [style = bold, label=""];
1->2 [style = bold, label=""];
15->12 [style = bold, label=""];
17->16 [style = bold, label=""];
8->23 [style = dashed, label="0"];
14->5 [style = bold, label=""];
13->20 [style = bold, label=""];
}
