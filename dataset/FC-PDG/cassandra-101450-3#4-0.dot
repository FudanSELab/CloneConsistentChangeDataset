digraph {
12 [style = filled, label = "testMoveBackwardCalculateRangesToStreamWithPreferredEndpoints['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "expectedResult.put(address04,transientReplica(address04,oneToken,threeToken))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "expectedResult.put(cAddress,fullReplica(cAddress,oneToken,threeToken))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "expectedResult.put(dAddress,transientReplica(dAddress,twoToken,threeToken))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expectedResult.put(address02,fullReplica(address02,fourteenToken,oneToken))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "expectedResult.put(address03,transientReplica(address03,fourteenToken,oneToken))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "expectedResult.put(cAddress,transientReplica(cAddress,fourteenToken,oneToken))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "expectedResult.put(dAddress,transientReplica(dAddress,oneToken,threeToken))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "testMoveBackwardBetweenCalculateRangesToStreamWithPreferredEndpoints['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "expectedResult.put(cAddress,fullReplica(cAddress,twoToken,threeToken))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveBackward().left,constructTMDsMoveBackward(),expectedResult.asImmutableView())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "expectedResult.put(address03,fullReplica(address03,oneToken,threeToken))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "expectedResult.put(bAddress,fullReplica(bAddress,fourteenToken,oneToken))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveBackwardBetween().left,constructTMDsMoveBackwardBetween(),expectedResult.asImmutableView())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testMoveBackwardBetweenCalculateRangesToStreamWithPreferredEndpoints['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RangesByEndpoint.Mutable expectedResult = new RangesByEndpoint.Mutable()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
15->14 [style = bold, label=""];
0->6 [style = bold, label=""];
9->2 [style = bold, label=""];
6->7 [style = dashed, label="0"];
11->4 [style = bold, label=""];
4->15 [style = bold, label=""];
1->9 [style = dashed, label="0"];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
0->10 [style = dashed, label="0"];
7->9 [style = bold, label=""];
0->14 [style = dashed, label="0"];
6->1 [style = bold, label=""];
6->13 [style = dashed, label="0"];
5->0 [style = bold, label=""];
12->4 [style = bold, label=""];
5->8 [style = dashed, label="0"];
4->8 [style = bold, label=""];
1->2 [style = bold, label=""];
14->13 [style = bold, label=""];
5->15 [style = dashed, label="0"];
4->5 [style = bold, label=""];
}
