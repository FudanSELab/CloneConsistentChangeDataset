digraph {
18 [style = filled, label = "ShardingSphereSchema shardingSphereSchema = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Map<String,SchemaContext> schemaContextsMap = createSchemaContextMap()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "RuntimeContext runtimeContext = mock()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(null,is(ProxyContext.getInstance().getSchema(null)))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<String> keyList = Lists.newArrayList(schemaContextsMap.keySet())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "when(schemaContext.getName()).thenReturn(\"schema\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Map<String,SchemaContext> schemaContextsMap = Collections.singletonMap(\"schema\",schemaContext)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "when(schemaContext.getRuntimeContext()).thenReturn(runtimeContext)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Field schemaContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"schemaContexts\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Field schemaContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"schemaContexts\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i++@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(schemaContextsMap,new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "when(schemaContext.getSchema()).thenReturn(shardingSphereSchema)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "schemaContexts.setAccessible(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "SchemaContext schemaContext = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(schemaContextsMap,new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertGetAllSchemaNames['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(schemaContext,is(ProxyContext.getInstance().getSchema(\"schema\")))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(null,is(ProxyContext.getInstance().getSchema(\"schema1\")))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(null,is(ProxyContext.getInstance().getSchema(\"\")))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "when(shardingSphereSchema.getDataSources()).thenReturn(new HashMap<String,DataSource>())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Map<String,SchemaContext> schemaContextsMap = getSchemaContextMap()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "i < keyList.size()@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertGetAllSchemaNames['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "schemaContexts.setAccessible(true)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "int i = 0@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertGetSchema['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()),is(schemaContextsMap.keySet()))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
4->7 [style = solid, label="i"];
4->9 [style = bold, label=""];
17->25 [style = bold, label=""];
27->18 [style = bold, label=""];
4->9 [style = solid, label="i"];
11->2 [style = solid, label="schemaContextsMap"];
16->13 [style = bold, label=""];
11->1 [style = bold, label=""];
3->7 [style = solid, label="i"];
12->11 [style = bold, label=""];
20->14 [style = bold, label=""];
4->3 [style = solid, label="i"];
9->7 [style = bold, label=""];
2->10 [style = bold, label=""];
15->16 [style = bold, label=""];
7->3 [style = bold, label=""];
0->10 [style = dashed, label="0"];
3->9 [style = bold, label=""];
8->1 [style = bold, label=""];
14->26 [style = bold, label=""];
13->17 [style = bold, label=""];
5->2 [style = bold, label=""];
7->24 [style = bold, label=""];
2->0 [style = bold, label=""];
3->9 [style = solid, label="i"];
21->20 [style = bold, label=""];
22->27 [style = bold, label=""];
0->4 [style = bold, label=""];
27->25 [style = solid, label="schemaContext"];
23->19 [style = bold, label=""];
26->23 [style = bold, label=""];
8->2 [style = solid, label="schemaContextsMap"];
6->8 [style = bold, label=""];
19->15 [style = solid, label="schemaContextsMap"];
18->21 [style = bold, label=""];
21->23 [style = solid, label="runtimeContext"];
9->7 [style = dotted, label="true"];
8->11 [style = dashed, label="0"];
19->7 [style = bold, label=""];
9->3 [style = dotted, label="true"];
27->19 [style = solid, label="schemaContext"];
18->26 [style = solid, label="shardingSphereSchema"];
24->15 [style = bold, label=""];
3->25 [style = dashed, label="0"];
}
