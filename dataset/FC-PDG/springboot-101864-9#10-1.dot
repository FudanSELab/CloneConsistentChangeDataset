digraph {
0 [style = filled, label = "String(( lines = banner.split(System.lineSeparator())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 2@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "AnsiOutput.setEnabled(AnsiOutput.Enabled.NEVER)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "printBannerWhenHasMarginPropertyShouldPrintSizedMargin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "printBannerShouldPrintMargin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String banner = printBanner(\"large.gif\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String banner = printBanner(\"large.gif\",\"spring.banner.image.margin=4\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "i < lines.length - 1@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "printBannerShouldPrintMargin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(lines(i().startsWith(\" @\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->7 [style = bold, label=""];
6->1 [style = bold, label=""];
10->0 [style = bold, label=""];
1->2 [style = bold, label=""];
3->10 [style = dashed, label="0"];
6->2 [style = dotted, label="true"];
5->6 [style = bold, label=""];
9->7 [style = bold, label=""];
7->10 [style = bold, label=""];
5->6 [style = solid, label="i"];
2->6 [style = bold, label=""];
5->2 [style = solid, label="i"];
2->6 [style = solid, label="i"];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
0->5 [style = bold, label=""];
6->1 [style = dotted, label="true"];
}
