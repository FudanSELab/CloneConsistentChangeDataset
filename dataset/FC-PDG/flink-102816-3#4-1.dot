digraph {
7 [style = filled, label = "OneInputStreamOperator<Tuple2<String,Integer>,Tuple2<String,Integer>> operator = transform.getOperator()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final OneInputTransformation<Tuple3<String,String,Integer>,Integer> transform = (OneInputTransformation<Tuple3<String,String,Integer>,Integer>)window1.getTransformation()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertTrue(winOperator.getWindowAssigner() instanceof SlidingEventTimeWindows)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "DataStream<Tuple3<String,String,Integer>> source = env.fromElements(Tuple3.of(\"hello\",\"hallo\",1),Tuple3.of(\"hello\",\"hallo\",2))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertTrue(winOperator.getStateDescriptor() instanceof AggregatingStateDescriptor)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.IngestionTime)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final OneInputStreamOperator<Tuple3<String,String,Integer>,Integer> operator = transform.getOperator()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testAggregateEventTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(operator instanceof WindowOperator)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(winOperator.getTrigger() instanceof ProcessingTimeTrigger)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertTrue(winOperator.getWindowAssigner() instanceof SlidingProcessingTimeWindows)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testAggregateEventTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Assert.assertTrue(winOperator.getTrigger() instanceof EventTimeTrigger)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,?,?,?> winOperator = (WindowOperator<String,Tuple2<String,Integer>,?,?,?>)operator@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DataStream<Integer> window1 = source.keyBy(new Tuple3KeySelector()).window(SlidingEventTimeWindows.of(Time.of(1,TimeUnit.SECONDS),Time.of(100,TimeUnit.MILLISECONDS))).aggregate(new DummyAggregationFunction())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "processElementAndEnsureOutput(winOperator,winOperator.getKeySelector(),BasicTypeInfo.STRING_TYPE_INFO,new Tuple3<>(\"hello\",\"hallo\",1))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "WindowOperator<String,Tuple3<String,String,Integer>,?,?,?> winOperator = (WindowOperator<String,Tuple3<String,String,Integer>,?,?,?>)operator@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "DataStream<Tuple2<String,Integer>> source = env.fromElements(Tuple2.of(\"hello\",1),Tuple2.of(\"hello\",2))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.ProcessingTime)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "DataStream<Tuple2<String,Integer>> window1 = source.keyBy(new TupleKeySelector()).window(SlidingEventTimeWindows.of(Time.of(1,TimeUnit.SECONDS),Time.of(100,TimeUnit.MILLISECONDS))).aggregate(new DummyAggregationFunction())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "testAggregateProcessingTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "DataStream<Tuple2<String,Integer>> window1 = source.keyBy(new TupleKeySelector()).window(SlidingProcessingTimeWindows.of(Time.of(1,TimeUnit.SECONDS),Time.of(100,TimeUnit.MILLISECONDS))).aggregate(new DummyAggregationFunction())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "processElementAndEnsureOutput(winOperator,winOperator.getKeySelector(),BasicTypeInfo.STRING_TYPE_INFO,new Tuple2<>(\"hello\",1))@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "OneInputTransformation<Tuple2<String,Integer>,Tuple2<String,Integer>> transform = (OneInputTransformation<Tuple2<String,Integer>,Tuple2<String,Integer>>)window1.getTransformation()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
13->10 [style = bold, label=""];
8->10 [style = bold, label=""];
13->17 [style = solid, label="winOperator"];
16->0 [style = bold, label=""];
7->3 [style = solid, label="operator"];
4->17 [style = bold, label=""];
15->14 [style = bold, label=""];
11->4 [style = bold, label=""];
20->0 [style = bold, label=""];
18->15 [style = bold, label=""];
7->8 [style = solid, label="operator"];
22->21 [style = bold, label=""];
14->19 [style = bold, label=""];
1->18 [style = bold, label=""];
6->14 [style = dashed, label="0"];
10->22 [style = dashed, label="0"];
12->6 [style = bold, label=""];
7->3 [style = bold, label=""];
2->12 [style = bold, label=""];
8->22 [style = bold, label=""];
8->13 [style = dashed, label="0"];
19->13 [style = solid, label="operator"];
0->23 [style = bold, label=""];
5->0 [style = bold, label=""];
7->19 [style = dashed, label="0"];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
9->17 [style = dashed, label="0"];
12->24 [style = dashed, label="0"];
2->18 [style = dashed, label="0"];
12->15 [style = dashed, label="0"];
3->13 [style = bold, label=""];
19->3 [style = solid, label="operator"];
1->2 [style = bold, label=""];
23->2 [style = bold, label=""];
2->24 [style = bold, label=""];
6->7 [style = bold, label=""];
8->9 [style = solid, label="winOperator"];
24->6 [style = bold, label=""];
1->23 [style = dashed, label="0"];
19->3 [style = bold, label=""];
21->4 [style = bold, label=""];
10->11 [style = bold, label=""];
11->21 [style = dashed, label="0"];
}
