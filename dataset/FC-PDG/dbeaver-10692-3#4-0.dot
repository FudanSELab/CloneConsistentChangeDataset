digraph {
2 [style = filled, label = "offset == -1@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "isSameToken(token,closingPeer)@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "int openingPeer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "findOpeningPeer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "offset = getPosition()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "depth--@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "token == SQLIndentSymbols.TokenEOF@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assert(start < _document.getLength())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "int openingPeer@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "token = nextToken(offset,_document.getLength())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "int start@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int token@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "int closingPeer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return 0@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int depth = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "findClosingPeer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "int openingPeer@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "isSameToken(token,closingPeer)@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int start@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return offset@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "isSameToken(token,openingPeer)@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assert(start <= _document.getLength())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "token = previousToken(offset,UNBOUND)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "start += 1@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int start@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "depth++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assert(start < document.getLength())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "isSameToken(token,openingPeer)@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "depth == 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int offset = start@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "findOpeningPeer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "true@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int closingPeer@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return NOT_FOUND@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->32 [style = dotted, label="true"];
0->13 [style = bold, label=""];
14->0 [style = dotted, label="true"];
18->6 [style = solid, label="offset"];
27->4 [style = solid, label="token"];
33->28 [style = dotted, label="true"];
2->15 [style = dotted, label="true"];
10->32 [style = bold, label=""];
3->16 [style = bold, label=""];
26->11 [style = bold, label=""];
13->1 [style = bold, label=""];
21->30 [style = dashed, label="0"];
2->15 [style = bold, label=""];
20->11 [style = solid, label="depth"];
7->25 [style = dashed, label="0"];
20->1 [style = solid, label="depth"];
32->26 [style = dotted, label="false"];
24->21 [style = dotted, label="true"];
32->20 [style = bold, label=""];
14->18 [style = dotted, label="true"];
11->20 [style = solid, label="depth"];
26->1 [style = bold, label=""];
25->3 [style = bold, label=""];
6->4 [style = solid, label="token"];
6->13 [style = solid, label="token"];
3->11 [style = solid, label="depth"];
14->27 [style = dotted, label="true"];
13->11 [style = bold, label=""];
32->26 [style = bold, label=""];
13->26 [style = dashed, label="0"];
4->0 [style = bold, label=""];
18->4 [style = bold, label=""];
6->27 [style = dashed, label="0"];
24->22 [style = dotted, label="true"];
10->0 [style = bold, label=""];
23->25 [style = solid, label="start"];
0->20 [style = bold, label=""];
14->1 [style = dotted, label="true"];
11->1 [style = solid, label="depth"];
0->13 [style = dotted, label="false"];
31->3 [style = bold, label=""];
1->19 [style = bold, label=""];
14->4 [style = dotted, label="true"];
17->21 [style = dotted, label="true"];
14->6 [style = bold, label=""];
4->10 [style = bold, label=""];
27->18 [style = bold, label=""];
7->31 [style = dashed, label="0"];
4->10 [style = dotted, label="true"];
6->18 [style = bold, label=""];
21->0 [style = solid, label="closingPeer"];
32->20 [style = dotted, label="true"];
8->14 [style = bold, label=""];
20->1 [style = bold, label=""];
15->19 [style = bold, label=""];
1->19 [style = dotted, label="true"];
30->26 [style = solid, label="closingPeer"];
3->20 [style = solid, label="depth"];
18->19 [style = solid, label="offset"];
16->8 [style = solid, label="start"];
19->14 [style = bold, label=""];
24->23 [style = dotted, label="true"];
17->12 [style = dotted, label="true"];
24->25 [style = bold, label=""];
33->29 [style = dotted, label="true"];
16->5 [style = bold, label=""];
13->11 [style = dotted, label="true"];
29->32 [style = solid, label="openingPeer"];
1->2 [style = bold, label=""];
14->27 [style = bold, label=""];
26->11 [style = dotted, label="true"];
3->1 [style = solid, label="depth"];
14->6 [style = dotted, label="true"];
22->13 [style = solid, label="openingPeer"];
5->8 [style = bold, label=""];
9->13 [style = solid, label="openingPeer"];
2->19 [style = bold, label=""];
11->1 [style = bold, label=""];
0->32 [style = dashed, label="0"];
8->6 [style = solid, label="offset"];
0->20 [style = dotted, label="true"];
8->27 [style = solid, label="offset"];
18->27 [style = solid, label="offset"];
33->30 [style = dotted, label="true"];
7->3 [style = bold, label=""];
17->7 [style = bold, label=""];
27->26 [style = solid, label="token"];
18->2 [style = solid, label="offset"];
17->9 [style = dotted, label="true"];
33->31 [style = bold, label=""];
12->7 [style = solid, label="start"];
1->14 [style = bold, label=""];
6->0 [style = solid, label="token"];
1->2 [style = dotted, label="true"];
27->32 [style = solid, label="token"];
28->31 [style = solid, label="start"];
4->32 [style = bold, label=""];
}
