digraph {
6 [style = filled, label = "i.remove()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DataContext root@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "return new AbstractEnumerable<Object((>(){public Enumerator<Object((> enumerator(){return new CsvEnumerator<>(file,cancelFlag,true,null,new CsvEnumerator.ArrayRowConverter(fieldTypes,fields,true))}}@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "addFilter(filter,filterValues)@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "scan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<RexNode> filters@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Iterator<RexNode> i = filters.iterator()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final int(( fields = CsvEnumerator.identityList(fieldTypes.size())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i.hasNext()@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final RexNode filter = i.next()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int(( fields = CsvEnumerator.identityList(fieldTypes.size())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "scan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final String(( filterValues = new String((((@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return new AbstractEnumerable<Object((>(){public Enumerator<Object((> enumerator(){return new CsvEnumerator<>(source,cancelFlag,false,filterValues,new CsvEnumerator.ArrayRowConverter(fieldTypes,fields))}}@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DataContext root@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "scan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DataContext root@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
1->8 [style = bold, label=""];
15->14 [style = bold, label=""];
13->12 [style = dotted, label="true"];
0->6 [style = bold, label=""];
4->10 [style = dotted, label="true"];
8->7 [style = solid, label="fields"];
11->0 [style = solid, label="filter"];
3->5 [style = solid, label="root"];
1->11 [style = dotted, label="true"];
12->5 [style = solid, label="root"];
18->15 [style = bold, label=""];
14->16 [style = solid, label="cancelFlag"];
17->14 [style = solid, label="root"];
5->7 [style = solid, label="cancelFlag"];
4->2 [style = bold, label=""];
2->9 [style = bold, label=""];
15->16 [style = solid, label="fields"];
0->6 [style = dotted, label="true"];
13->10 [style = dotted, label="true"];
1->11 [style = bold, label=""];
6->1 [style = bold, label=""];
11->0 [style = bold, label=""];
4->3 [style = dotted, label="true"];
8->5 [style = bold, label=""];
2->7 [style = solid, label="filterValues"];
0->1 [style = bold, label=""];
10->17 [style = dashed, label="0"];
5->7 [style = bold, label=""];
1->0 [style = dotted, label="true"];
18->17 [style = dotted, label="true"];
9->1 [style = bold, label=""];
2->0 [style = solid, label="filterValues"];
13->2 [style = bold, label=""];
}
