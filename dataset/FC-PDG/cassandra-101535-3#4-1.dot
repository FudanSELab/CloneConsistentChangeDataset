digraph {
38 [style = filled, label = "bounds = restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "multiSlice2 = newMultiSlice(cfMetaData,1,Bound.END,true,value4,value5)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertStartBound(get(bounds,0),false,value1,value2,value3)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "multiSlice = newMultiSlice(cfMetaData,1,Bound.START,true,value2,value3)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ByteBuffer value3 = ByteBufferUtil.bytes(3)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(1,bounds.size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "restrictions = restrictions.mergeWith(multiEq).mergeWith(singleSlice)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Restriction multiSlice = newMultiSlice(cfMetaData,1,Bound.START,false,value2,value3)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1,bounds.size())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testBoundsAsClusteringWithMultiEqAndSingleSliceRestrictions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "singleEq = newSingleEq(cfMetaData,0,value1)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SortedSet<Slice.Bound> bounds = restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEndBound(get(bounds,0),true,value1,value4,value5)@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "singleEq = newSingleEq(cfMetaData,0,value1)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Restriction singleEq = newSingleEq(cfMetaData,0,value1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "restrictions = new ClusteringColumnRestrictions(cfMetaData)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(1,bounds.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ByteBuffer value5 = ByteBufferUtil.bytes(5)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(1,bounds.size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ByteBuffer value4 = ByteBufferUtil.bytes(4)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "restrictions = restrictions.mergeWith(multiSlice2).mergeWith(singleEq).mergeWith(multiSlice)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ByteBuffer value1 = ByteBufferUtil.bytes(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "bounds = restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Restriction singleSlice = newSingleSlice(cfMetaData,2,Bound.START,false,value3)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "multiSlice = newMultiSlice(cfMetaData,1,Bound.START,false,value2,value3)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "bounds = restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ByteBuffer value2 = ByteBufferUtil.bytes(2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(1,bounds.size())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Restriction multiEq = newMultiEq(cfMetaData,0,value1,value2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEndBound(get(bounds,0),true,value1,value2)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertStartBound(get(bounds,0),true,value1,value2,value3)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "ClusteringColumnRestrictions restrictions = new ClusteringColumnRestrictions(cfMetaData)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Restriction multiSlice2 = newMultiSlice(cfMetaData,1,Bound.END,false,value4)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testBoundsAsClusteringWithSingleEqAndSliceRestrictions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertStartBound(get(bounds,0),false,value1,value2,value3)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "bounds = restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "restrictions = restrictions.mergeWith(singleEq).mergeWith(multiSlice)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEndBound(get(bounds,0),false,value1,value4)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "restrictions = restrictions.mergeWith(multiSlice2).mergeWith(singleEq).mergeWith(multiSlice)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "restrictions = new ClusteringColumnRestrictions(cfMetaData)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "CFMetaData cfMetaData = newCFMetaData(Sort.ASC,Sort.ASC,Sort.ASC)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(1,bounds.size())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "SortedSet<ClusteringBound> bounds = restrictions.boundsAsClustering(Bound.START,QueryOptions.DEFAULT)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEndBound(get(bounds,0),true,value1)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,bounds.size())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testBoundsAsClusteringWithSingleEqAndSliceRestrictions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "bounds = restrictions.boundsAsClustering(Bound.END,QueryOptions.DEFAULT)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->45 [style = solid, label="cfMetaData"];
1->26 [style = solid, label="value3"];
29->32 [style = solid, label="cfMetaData"];
29->8 [style = solid, label="cfMetaData"];
16->18 [style = solid, label="value2"];
43->26 [style = bold, label=""];
10->19 [style = solid, label="value1"];
32->6 [style = bold, label=""];
7->9 [style = bold, label=""];
3->36 [style = bold, label=""];
36->24 [style = bold, label=""];
29->24 [style = solid, label="cfMetaData"];
36->5 [style = solid, label="value5"];
34->5 [style = solid, label="bounds"];
16->45 [style = solid, label="value2"];
1->41 [style = solid, label="value3"];
28->25 [style = bold, label=""];
10->24 [style = solid, label="value1"];
31->20 [style = bold, label=""];
14->11 [style = bold, label=""];
45->41 [style = bold, label=""];
46->42 [style = bold, label=""];
16->25 [style = solid, label="value2"];
29->4 [style = solid, label="cfMetaData"];
17->35 [style = solid, label="bounds"];
12->35 [style = bold, label=""];
29->25 [style = solid, label="cfMetaData"];
9->8 [style = bold, label=""];
24->18 [style = bold, label=""];
22->5 [style = bold, label=""];
0->7 [style = bold, label=""];
35->28 [style = bold, label=""];
30->7 [style = solid, label="bounds"];
1->25 [style = solid, label="value3"];
18->4 [style = bold, label=""];
1->18 [style = solid, label="value3"];
26->37 [style = bold, label=""];
41->46 [style = bold, label=""];
37->30 [style = solid, label="bounds"];
10->33 [style = solid, label="value1"];
1->45 [style = bold, label=""];
16->26 [style = solid, label="value2"];
3->32 [style = solid, label="value4"];
40->29 [style = bold, label=""];
27->26 [style = bold, label=""];
11->20 [style = solid, label="bounds"];
39->37 [style = bold, label=""];
26->39 [style = dashed, label="0"];
16->30 [style = solid, label="value2"];
10->7 [style = solid, label="value1"];
18->27 [style = solid, label="multiSlice"];
44->29 [style = bold, label=""];
36->23 [style = solid, label="value5"];
25->2 [style = solid, label="multiSlice"];
16->33 [style = solid, label="value2"];
23->15 [style = bold, label=""];
1->3 [style = bold, label=""];
29->46 [style = solid, label="cfMetaData"];
27->42 [style = dashed, label="0"];
42->4 [style = bold, label=""];
11->31 [style = bold, label=""];
27->39 [style = bold, label=""];
17->12 [style = bold, label=""];
10->16 [style = bold, label=""];
3->23 [style = solid, label="value4"];
16->1 [style = bold, label=""];
8->14 [style = solid, label="multiSlice"];
10->28 [style = solid, label="value1"];
10->35 [style = solid, label="value1"];
10->45 [style = solid, label="value1"];
29->10 [style = bold, label=""];
39->19 [style = solid, label="bounds"];
30->0 [style = bold, label=""];
1->8 [style = solid, label="value3"];
10->26 [style = solid, label="value1"];
4->26 [style = solid, label="bounds"];
10->30 [style = solid, label="value1"];
41->42 [style = solid, label="singleSlice"];
15->2 [style = bold, label=""];
20->17 [style = bold, label=""];
4->43 [style = bold, label=""];
8->32 [style = bold, label=""];
25->23 [style = bold, label=""];
21->33 [style = bold, label=""];
26->19 [style = solid, label="bounds"];
29->9 [style = solid, label="cfMetaData"];
1->33 [style = solid, label="value3"];
16->20 [style = solid, label="value2"];
10->5 [style = solid, label="value1"];
10->9 [style = solid, label="value1"];
29->15 [style = solid, label="cfMetaData"];
3->35 [style = solid, label="value4"];
34->22 [style = bold, label=""];
29->28 [style = solid, label="cfMetaData"];
16->19 [style = solid, label="value2"];
6->14 [style = bold, label=""];
2->38 [style = bold, label=""];
3->5 [style = solid, label="value4"];
13->29 [style = bold, label=""];
29->41 [style = solid, label="cfMetaData"];
16->8 [style = solid, label="value2"];
7->30 [style = dashed, label="0"];
4->27 [style = bold, label=""];
1->20 [style = solid, label="value3"];
38->21 [style = bold, label=""];
29->6 [style = solid, label="cfMetaData"];
29->23 [style = solid, label="cfMetaData"];
37->19 [style = bold, label=""];
29->18 [style = solid, label="cfMetaData"];
1->19 [style = solid, label="value3"];
10->20 [style = solid, label="value1"];
33->34 [style = bold, label=""];
38->33 [style = solid, label="bounds"];
19->30 [style = bold, label=""];
}
