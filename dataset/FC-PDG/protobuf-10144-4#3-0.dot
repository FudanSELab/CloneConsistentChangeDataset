digraph {
18 [style = filled, label = "setMapValuesUsingMutableMap(usingMutableMapBuilder)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "setMapValuesUsingAccessors(usingAccessorsBuilder)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(usingAccessors,usingMutableMap)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "updateMapValuesUsingAccessors(usingAccessorsBuilder)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(usingAccessors).isEqualTo(usingMutableMap)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "TestMap.Builder usingAccessorsBuilder = TestMap.newBuilder()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "usingMutableMapBuilder = usingMutableMap.toBuilder()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "updateMapValuesUsingMutableMap(usingMutableMapBuilder)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertMapValuesUpdated(usingMutableMap)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "TestMap.Builder usingMutableMapBuilder = TestMap.newBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "usingAccessors = usingAccessorsBuilder.build()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TestMap usingAccessors = usingAccessorsBuilder.build()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "usingAccessorsBuilder = usingAccessors.toBuilder()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertMapValuesSet(usingMutableMap)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(usingAccessors,usingMutableMap)@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testSetMapValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertMapValuesSet(usingAccessors)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testUpdateMapValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "TestMap usingMutableMap = usingMutableMapBuilder.build()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "usingMutableMap = usingMutableMapBuilder.build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testUpdateMapValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(usingAccessors).isEqualTo(usingMutableMap)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertMapValuesUpdated(usingAccessors)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
21->10 [style = bold, label=""];
3->8 [style = solid, label="usingMutableMap"];
1->4 [style = bold, label=""];
16->18 [style = bold, label=""];
2->15 [style = solid, label="usingAccessors"];
17->6 [style = bold, label=""];
22->16 [style = bold, label=""];
17->21 [style = solid, label="usingMutableMap"];
7->14 [style = solid, label="usingAccessors"];
18->17 [style = bold, label=""];
17->6 [style = solid, label="usingMutableMap"];
15->19 [style = bold, label=""];
1->4 [style = solid, label="usingAccessorsBuilder"];
13->16 [style = bold, label=""];
4->7 [style = bold, label=""];
15->5 [style = bold, label=""];
7->14 [style = bold, label=""];
6->1 [style = bold, label=""];
12->2 [style = bold, label=""];
10->0 [style = solid, label="usingMutableMapBuilder"];
20->16 [style = bold, label=""];
7->11 [style = solid, label="usingAccessors"];
11->10 [style = bold, label=""];
3->8 [style = bold, label=""];
17->11 [style = solid, label="usingMutableMap"];
10->0 [style = bold, label=""];
2->15 [style = bold, label=""];
8->9 [style = bold, label=""];
9->12 [style = bold, label=""];
14->21 [style = bold, label=""];
9->12 [style = solid, label="usingAccessorsBuilder"];
2->5 [style = solid, label="usingAccessors"];
5->19 [style = dashed, label="0"];
14->11 [style = bold, label=""];
3->5 [style = solid, label="usingMutableMap"];
3->19 [style = solid, label="usingMutableMap"];
16->18 [style = solid, label="usingMutableMapBuilder"];
11->21 [style = dashed, label="0"];
}
