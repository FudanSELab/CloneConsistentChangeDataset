digraph {
5 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(results,containsInAnyOrder(\"+I(1, 2020-01-01T15:35:00.123456, 2020-01-01T15:35:00.123456789, 15:35, 1.175E-37, 1.79769E308, 100.1234(\",\"+I(2, 2020-01-01T15:36:01.123456, 2020-01-01T15:36:01.123456789, 15:36:01, -1.175E-37, -1.79769E308, 101.1234(\"))@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "EnvironmentSettings envSettings = EnvironmentSettings.newInstance().useBlinkPlanner().inStreamingMode().build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "StreamTableEnvironment tEnv = StreamTableEnvironment.create(env,envSettings)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<String> results = manifestResults(tableResult)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE \" + INPUT_TABLE + \"(\" + \"id BIGINT,\" + \"timestamp6_col TIMESTAMP(6),\" + \"timestamp9_col TIMESTAMP(9),\" + \"time_col TIME,\" + \"real_col FLOAT,\" + \"decimal_col DECIMAL(10, 4)\" + \") WITH (\" + \" 'connector.type'='jdbc',\" + \" 'connector.url'='\" + DB_URL + \"',\" + \" 'connector.table'='\" + INPUT_TABLE + \"'\" + \")\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE \" + INPUT_TABLE + \"(\" + \"id BIGINT,\" + \"timestamp6_col TIMESTAMP(6),\" + \"timestamp9_col TIMESTAMP(9),\" + \"time_col TIME,\" + \"real_col FLOAT,\" + \"double_col DOUBLE,\" + \"decimal_col DECIMAL(10, 4)\" + \") WITH (\" + \" 'connector.type'='jdbc',\" + \" 'connector.url'='\" + DB_URL + \"',\" + \" 'connector.table'='\" + INPUT_TABLE + \"'\" + \")\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TableResult tableResult = tEnv.executeSql(\"SELECT timestamp6_col, decimal_col FROM \" + INPUT_TABLE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(results,containsInAnyOrder(\"2020-01-01T15:35:00.123456,100.1234\",\"2020-01-01T15:36:01.123456,101.1234\"))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TableResult tableResult = tEnv.executeSql(\"SELECT * FROM \" + INPUT_TABLE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testProjectableJdbcSource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(results,containsInAnyOrder(\"1,2020-01-01T15:35:00.123456,2020-01-01T15:35:00.123456789,15:35,1.175E-37,1.79769E308,100.1234\",\"2,2020-01-01T15:36:01.123456,2020-01-01T15:36:01.123456789,15:36:01,-1.175E-37,-1.79769E308,101.1234\"))@@@9@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testJdbcSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testJdbcSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
4->7 [style = solid, label="results"];
11->4 [style = solid, label="tableResult"];
5->2 [style = solid, label="env"];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
4->13 [style = bold, label=""];
0->2 [style = bold, label=""];
12->11 [style = bold, label=""];
0->2 [style = solid, label="envSettings"];
6->11 [style = dashed, label="0"];
3->6 [style = bold, label=""];
6->4 [style = solid, label="tableResult"];
4->7 [style = bold, label=""];
2->12 [style = bold, label=""];
6->4 [style = bold, label=""];
4->8 [style = solid, label="results"];
10->5 [style = bold, label=""];
3->12 [style = dashed, label="0"];
5->0 [style = bold, label=""];
9->5 [style = bold, label=""];
4->8 [style = bold, label=""];
4->13 [style = solid, label="results"];
}
