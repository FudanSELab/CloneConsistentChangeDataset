digraph {
9 [style = filled, label = "Assert.assertEquals(\"java.util.concurrent.CancellationException\",roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorClass())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(\"org.apache.druid.java.util.common.ISE\",new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(\"java.util.concurrent.CancellationException\",new QueryInterruptedException(new CancellationException()).getErrorClass())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(\"Something bad!\",roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getMessage())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(\"org.apache.druid.java.util.common.ISE\",roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorClass())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(\"org.apache.druid.java.util.common.ISE\",roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorClass())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(null,roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getMessage())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testSerde['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(\"Query cancelled\",roundTrip(new QueryInterruptedException(new QueryInterruptedException(new CancellationException()))).getErrorCode())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(\"Something bad!\",roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getMessage())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(\"org.apache.druid.query.ResourceLimitExceededException\",new QueryInterruptedException(new ResourceLimitExceededException(\"too many!\")).getErrorClass())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(null,new QueryInterruptedException(null).getErrorClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(\"java.util.concurrent.CancellationException\",roundTrip(new QueryInterruptedException(new CancellationException())).getErrorClass())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(null,roundTrip(new QueryInterruptedException(null)).getErrorClass())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(\"Unknown exception\",roundTrip(new QueryInterruptedException(new ISE(\"Something bad!\"))).getErrorCode())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testErrorClass['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testErrorClass['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(\"java.util.concurrent.CancellationException\",new QueryInterruptedException(new QueryInterruptedException(new CancellationException())).getErrorClass())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(\"java.lang.InterruptedException\",new QueryInterruptedException(new InterruptedException()).getErrorClass())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Unknown exception\",roundTrip(new QueryInterruptedException(new QueryInterruptedException(new ISE(\"Something bad!\")))).getErrorCode())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(\"org.apache.druid.java.util.common.ISE\",new QueryInterruptedException(new ISE(\"Something bad!\")).getErrorClass())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(\"java.lang.InterruptedException\",roundTrip(new QueryInterruptedException(new InterruptedException())).getErrorClass())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->4 [style = bold, label=""];
21->15 [style = bold, label=""];
6->11 [style = dashed, label="0"];
12->20 [style = bold, label=""];
3->6 [style = bold, label=""];
14->17 [style = bold, label=""];
1->9 [style = dashed, label="0"];
8->6 [style = bold, label=""];
5->18 [style = dashed, label="0"];
11->9 [style = bold, label=""];
4->0 [style = bold, label=""];
19->16 [style = bold, label=""];
4->12 [style = dashed, label="0"];
20->18 [style = bold, label=""];
6->1 [style = bold, label=""];
5->2 [style = bold, label=""];
13->19 [style = bold, label=""];
7->19 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
18->13 [style = bold, label=""];
16->14 [style = bold, label=""];
9->12 [style = bold, label=""];
2->7 [style = bold, label=""];
4->5 [style = bold, label=""];
17->21 [style = bold, label=""];
0->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
