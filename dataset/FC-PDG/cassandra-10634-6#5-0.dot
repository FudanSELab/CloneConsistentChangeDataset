digraph {
0 [style = filled, label = "Assert.assertTrue(reader.isMarkedCompacted())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Throwable accumulate = Helpers.setReplaced(readers,null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testMarkObsolete['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Iterable<SSTableReader> readers = Lists.newArrayList(MockSchema.sstable(1,cfs),MockSchema.sstable(2,cfs))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "accumulate = Helpers.markObsolete(null,readers,null)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "accumulate = Helpers.setReplaced(readers,null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testMarkObsolete['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(reader.isReplaced())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testSetupDeletionNotification['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "accumulate = Helpers.markObsolete(readers,null)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "ColumnFamilyStore cfs = MockSchema.newCFS()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Throwable accumulate = Helpers.markObsolete(null,readers,null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Throwable accumulate = Helpers.markObsolete(readers,null)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Assert.assertNotNull(accumulate)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertNull(accumulate)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->4 [style = solid, label="accumulate"];
6->3 [style = bold, label=""];
5->11 [style = solid, label="readers"];
1->4 [style = bold, label=""];
14->4 [style = solid, label="accumulate"];
5->8 [style = bold, label=""];
5->10 [style = solid, label="readers"];
1->14 [style = dashed, label="0"];
12->11 [style = bold, label=""];
7->11 [style = dashed, label="0"];
5->1 [style = solid, label="readers"];
5->14 [style = bold, label=""];
0->12 [style = dashed, label="0"];
11->2 [style = bold, label=""];
8->4 [style = solid, label="accumulate"];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
7->2 [style = solid, label="accumulate"];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
0->10 [style = bold, label=""];
13->3 [style = bold, label=""];
7->2 [style = bold, label=""];
10->2 [style = solid, label="accumulate"];
5->7 [style = solid, label="readers"];
3->5 [style = solid, label="cfs"];
4->12 [style = bold, label=""];
9->3 [style = bold, label=""];
7->10 [style = dashed, label="0"];
1->8 [style = dashed, label="0"];
10->2 [style = bold, label=""];
5->8 [style = solid, label="readers"];
8->4 [style = bold, label=""];
11->2 [style = solid, label="accumulate"];
5->14 [style = solid, label="readers"];
14->4 [style = bold, label=""];
}
