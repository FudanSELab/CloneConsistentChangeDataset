digraph {
3 [style = filled, label = "updateData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return new ExecuteBatchImpl(attributes,keysReceiver,false){@NotNull @Override protected DBCStatement prepareStatement(@NotNull DBCSession session,Object(( attributeValues){String tableAlias = nullSQLDialect dialect = ((SQLDataSource)session.getDataSource()).getSQLDialect()if (dialect.supportsAliasInUpdate()) {tableAlias = DEFAULT_TABLE_ALIAS}StringBuilder query = new StringBuilder()query.append(\"UPDATE \").append(getFullQualifiedName())if (tableAlias != null) {query.append(' ').append(tableAlias)}query.append(\"SET \")boolean hasKey = falsefor (DBSAttributeBase attribute : updateAttributes){if (hasKey) query.append(\",\")hasKey = trueif (tableAlias != null) {query.append(tableAlias).append(dialect.getStructSeparator())}query.append(getAttributeName(attribute)).append(\"=?\")}query.append(\"WHERE \")hasKey = falsefor (int i = 0 i < keyAttributes.length i++){DBSAttributeBase attribute = keyAttributes(i(if (hasKey) query.append(\" AND \")hasKey = trueappendAttributeCriteria(tableAlias,dialect,query,attribute,attributeValues(updateAttributes.length + i()}DBCStatement dbStat = session.prepareStatement(DBCStatementType.QUERY,query.toString(),false,false,keysReceiver != null)dbStat.setStatementSource(source)return dbStat}@Override protected void bindStatement(@NotNull DBDValueHandler(( handlers,@NotNull DBCStatement statement,Object(( attributeValues){int paramIndex = 0for (int k = 0 k < handlers.length k++){DBSAttributeBase attribute = attributes(k(if (k >= updateAttributes.length && DBUtils.isNullValue(attributeValues(k()) {continue}handlers(k(.bindValueObject(statement.getSession(),statement,attribute,paramIndex++,attributeValues(k()}}}@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "updateData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "@NotNull final DBSAttributeBase(( updateAttributes@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "deleteData['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "@NotNull final DBSAttributeBase(( keyAttributes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "@NotNull final DBCExecutionSource source@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "@NotNull DBCSession session@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "readRequiredMeta(session.getProgressMonitor())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "@NotNull DBCSession session@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "return new ExecuteBatchImpl(keyAttributes,null,false){@NotNull @Override protected DBCStatement prepareStatement(@NotNull DBCSession session,Object(( attributeValues){String tableAlias = nullSQLDialect dialect = ((SQLDataSource)session.getDataSource()).getSQLDialect()if (dialect.supportsAliasInUpdate()) {tableAlias = DEFAULT_TABLE_ALIAS}StringBuilder query = new StringBuilder()query.append(\"DELETE FROM \").append(getFullQualifiedName())if (tableAlias != null) {query.append(' ').append(tableAlias)}query.append(\" WHERE \")boolean hasKey = falsefor (int i = 0 i < keyAttributes.length i++){if (hasKey) query.append(\" AND \")hasKey = trueappendAttributeCriteria(tableAlias,dialect,query,keyAttributes(i(,attributeValues(i()}DBCStatement dbStat = session.prepareStatement(DBCStatementType.QUERY,query.toString(),false,false,false)dbStat.setStatementSource(source)return dbStat}@Override protected void bindStatement(@NotNull DBDValueHandler(( handlers,@NotNull DBCStatement statement,Object(( attributeValues){int paramIndex = 0for (int k = 0 k < handlers.length k++){DBSAttributeBase attribute = attributes(k(if (DBUtils.isNullValue(attributeValues(k()) {continue}handlers(k(.bindValueObject(statement.getSession(),statement,attribute,paramIndex++,attributeValues(k()}}}@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "@NotNull final DBCExecutionSource source@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "@NotNull final DBSAttributeBase(( keyAttributes@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "@NotNull final DBSAttributeBase(( updateAttributes@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "@NotNull final DBSAttributeBase(( keyAttributes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "@Nullable DBDDataReceiver keysReceiver@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "@NotNull final DBCExecutionSource source@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "DBSAttributeBase(( attributes = ArrayUtils.concatArrays(updateAttributes,keyAttributes)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "@Nullable DBDDataReceiver keysReceiver@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8->16 [style = dashed, label="0"];
10->13 [style = dotted, label="true"];
12->1 [style = solid, label="keysReceiver"];
17->14 [style = dotted, label="true"];
15->18 [style = solid, label="keyAttributes"];
17->16 [style = dotted, label="true"];
10->12 [style = dotted, label="true"];
4->1 [style = solid, label="updateAttributes"];
16->18 [style = solid, label="source"];
7->18 [style = bold, label=""];
5->1 [style = bold, label=""];
3->8 [style = dotted, label="true"];
6->1 [style = solid, label="keysReceiver"];
0->1 [style = solid, label="keyAttributes"];
3->7 [style = bold, label=""];
3->0 [style = dotted, label="true"];
8->1 [style = solid, label="updateAttributes"];
10->7 [style = bold, label=""];
17->15 [style = dotted, label="true"];
3->4 [style = dotted, label="true"];
10->8 [style = dotted, label="true"];
8->5 [style = solid, label="updateAttributes"];
3->2 [style = dotted, label="true"];
4->5 [style = solid, label="updateAttributes"];
5->1 [style = solid, label="attributes"];
3->6 [style = dotted, label="true"];
11->1 [style = solid, label="source"];
7->5 [style = bold, label=""];
13->5 [style = solid, label="keyAttributes"];
13->1 [style = solid, label="keyAttributes"];
2->1 [style = solid, label="source"];
17->7 [style = bold, label=""];
10->11 [style = dotted, label="true"];
10->9 [style = dotted, label="true"];
0->5 [style = solid, label="keyAttributes"];
}
