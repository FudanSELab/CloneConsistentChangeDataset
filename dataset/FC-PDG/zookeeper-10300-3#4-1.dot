digraph {
21 [style = filled, label = "assertEquals(new String(zk.getData(\"/foo\",null,null)),\"foobar\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final int CLIENT_PORT = PortAssignment.unique()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Assert.assertTrue(\"Failed to establish zkclient connection!\",clientConnected.await(CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ZooKeeper zk = new ZooKeeper(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT,this)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "main.join()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(MetricsProviderWithErrorInStop.stopCalled.get())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(\"waiting for server being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "main.deleteDirs()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testMetricsProviderConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "zk.close()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MainThread main = new MainThread(CLIENT_PORT,true,configs)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(MetricsProviderWithErrorInStop.stopCalled.get())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertTrue(\"waiting for server being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "final String configs = \"metricsProvider.className=\" + .getName() + \"\" + \"metricsProvider.httpPort=1234\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "clientConnected = new CountDownLatch(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testFaultyMetricsProviderOnStop['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT))@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(1234,MetricsProviderWithConfiguration.httpPort.get())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "MetricsProviderWithErrorInStop.stopCalled.set(false)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "main.shutdown()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(\"Failed to establish zkclient connection!\",clientConnected.await(CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Assert.assertEquals(new String(zk.getData(\"/foo\",null,null)),\"foobar\")@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "MetricsProviderWithConfiguration.httpPort.set(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testFaultyMetricsProviderOnStop['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "zk.create(\"/foo\",\"foobar\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final String configs = \"metricsProvider.className=\" + .getName() + \"\"@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "ClientBase.setupTestEnv()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final String configs = \"metricsProvider.className=\" + .getName() + \"\"@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "main.start()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->29 [style = dashed, label="0"];
15->6 [style = solid, label="CLIENT_PORT"];
7->1 [style = bold, label=""];
15->19 [style = solid, label="CLIENT_PORT"];
8->15 [style = bold, label=""];
9->0 [style = bold, label=""];
7->23 [style = dashed, label="0"];
27->0 [style = bold, label=""];
17->24 [style = dashed, label="0"];
6->23 [style = bold, label=""];
16->6 [style = bold, label=""];
18->12 [style = bold, label=""];
15->25 [style = solid, label="CLIENT_PORT"];
9->27 [style = dashed, label="0"];
14->19 [style = bold, label=""];
1->18 [style = bold, label=""];
22->0 [style = solid, label="configs"];
9->22 [style = dashed, label="0"];
5->14 [style = bold, label=""];
13->19 [style = dashed, label="0"];
15->3 [style = bold, label=""];
3->22 [style = bold, label=""];
25->16 [style = bold, label=""];
19->24 [style = bold, label=""];
21->12 [style = bold, label=""];
27->0 [style = solid, label="configs"];
3->9 [style = bold, label=""];
4->25 [style = dashed, label="0"];
29->27 [style = bold, label=""];
13->17 [style = bold, label=""];
12->2 [style = bold, label=""];
0->10 [style = bold, label=""];
20->8 [style = bold, label=""];
15->0 [style = solid, label="CLIENT_PORT"];
22->0 [style = bold, label=""];
10->25 [style = bold, label=""];
13->26 [style = bold, label=""];
1->21 [style = bold, label=""];
15->13 [style = solid, label="CLIENT_PORT"];
18->21 [style = dashed, label="0"];
28->8 [style = bold, label=""];
10->4 [style = bold, label=""];
23->1 [style = bold, label=""];
11->8 [style = bold, label=""];
17->26 [style = dashed, label="0"];
14->13 [style = bold, label=""];
6->7 [style = bold, label=""];
9->0 [style = solid, label="configs"];
15->29 [style = bold, label=""];
4->16 [style = bold, label=""];
2->5 [style = bold, label=""];
15->4 [style = solid, label="CLIENT_PORT"];
}
