digraph {
1 [style = filled, label = "value instanceof Byte@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "value instanceof Integer@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "value instanceof Float@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "return (long)(short)value@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return (double)(byte)value@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return (long)(int)value@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "defToDoubleImplicit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return (double)(long)value@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "throw new ClassCastException(\"cannot implicitly cast \" + \"def (\" + PainlessLookupUtility.typeToUnboxedType(value.getClass()).getCanonicalName() + \"( to \" + .getCanonicalName())@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "return (Long)value@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "value instanceof Character@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Object value@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "value instanceof Short@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final Object value@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "defToLongImplicit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return (Double)value@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "value instanceof Double@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "value instanceof Long@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return (long)(byte)value@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "value == null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "throw new ClassCastException(\"cannot implicitly cast \" + \"def (\" + PainlessLookupUtility.typeToUnboxedType(value.getClass()).getCanonicalName() + \"( to \" + .getCanonicalName())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "throw new ClassCastException(\"cannot implicitly cast \" + \"def (\" + value.getClass().getCanonicalName() + \"( to \" + .getCanonicalName())@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "return (long)(char)value@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return (double)(short)value@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return (double)(float)value@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return null@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return (double)(int)value@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "defToDoubleImplicit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "return (double)(char)value@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15->10 [style = bold, label=""];
14->25 [style = dashed, label="0"];
16->7 [style = bold, label=""];
1->23 [style = bold, label=""];
22->0 [style = solid, label="value"];
2->1 [style = solid, label="value"];
2->9 [style = solid, label="value"];
22->12 [style = solid, label="value"];
15->0 [style = bold, label=""];
16->5 [style = dotted, label="true"];
9->14 [style = bold, label=""];
1->23 [style = dotted, label="true"];
0->11 [style = dotted, label="true"];
2->22 [style = dashed, label="0"];
10->24 [style = dashed, label="0"];
13->4 [style = dotted, label="true"];
2->12 [style = solid, label="value"];
2->17 [style = solid, label="value"];
13->19 [style = dotted, label="false"];
9->15 [style = dotted, label="false"];
16->21 [style = dotted, label="false"];
3->21 [style = dashed, label="0"];
15->24 [style = dotted, label="true"];
1->9 [style = dotted, label="false"];
22->27 [style = solid, label="value"];
15->10 [style = dotted, label="true"];
12->1 [style = bold, label=""];
1->17 [style = bold, label=""];
0->16 [style = dotted, label="false"];
5->27 [style = dashed, label="0"];
15->0 [style = dotted, label="false"];
12->6 [style = dotted, label="true"];
22->24 [style = solid, label="value"];
22->25 [style = solid, label="value"];
13->3 [style = dotted, label="false"];
7->13 [style = dotted, label="false"];
17->23 [style = dashed, label="0"];
2->11 [style = solid, label="value"];
0->26 [style = dotted, label="true"];
2->7 [style = solid, label="value"];
2->5 [style = solid, label="value"];
2->13 [style = solid, label="value"];
0->16 [style = bold, label=""];
2->18 [style = solid, label="value"];
16->27 [style = bold, label=""];
1->17 [style = dotted, label="true"];
8->2 [style = dotted, label="true"];
11->26 [style = dashed, label="0"];
2->10 [style = solid, label="value"];
0->11 [style = bold, label=""];
28->12 [style = bold, label=""];
2->4 [style = solid, label="value"];
2->15 [style = solid, label="value"];
22->23 [style = solid, label="value"];
1->9 [style = bold, label=""];
13->19 [style = bold, label=""];
22->9 [style = solid, label="value"];
2->0 [style = solid, label="value"];
12->1 [style = dotted, label="false"];
28->22 [style = dotted, label="true"];
7->18 [style = dotted, label="true"];
16->5 [style = bold, label=""];
7->18 [style = bold, label=""];
16->27 [style = dotted, label="true"];
16->7 [style = dotted, label="false"];
8->12 [style = bold, label=""];
7->13 [style = bold, label=""];
0->26 [style = bold, label=""];
22->15 [style = solid, label="value"];
22->1 [style = solid, label="value"];
2->16 [style = solid, label="value"];
12->6 [style = bold, label=""];
22->26 [style = solid, label="value"];
9->14 [style = dotted, label="true"];
9->25 [style = dotted, label="true"];
3->19 [style = dashed, label="0"];
2->14 [style = solid, label="value"];
13->3 [style = bold, label=""];
9->15 [style = bold, label=""];
16->21 [style = bold, label=""];
9->25 [style = bold, label=""];
15->24 [style = bold, label=""];
22->16 [style = solid, label="value"];
20->12 [style = bold, label=""];
20->2 [style = dotted, label="true"];
13->4 [style = bold, label=""];
}
