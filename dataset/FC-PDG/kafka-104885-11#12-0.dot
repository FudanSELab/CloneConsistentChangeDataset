digraph {
46 [style = filled, label = "testIgnoredCommit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> committableOffsets = new HashMap<>()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"currentOffsets\"))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> workerStartingOffsets = new HashMap<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "PowerMock.replayAll()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "sinkTask.put(EasyMock.anyObject())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "EasyMock.expectLastCall().andReturn(workerStartingOffsets)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "expectConsumerPoll(0)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "workerTask.initializeAndStart()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "expectConsumerPoll(1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "workerCurrentOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "taskOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "PowerMock.verifyAll()@@@50@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "workerTask.iteration()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "EasyMock.expectLastCall()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "createTask(initialState)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "committableOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "expectConsumerPoll(0)@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "expectInitializeTask()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "EasyMock.expectLastCall().andReturn(taskOffsets)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "workerStartingOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "workerTask.iteration()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expectLastCall().andAnswer(new IAnswer<Void>(){@Override public Void answer(){callback.getValue().onComplete(committableOffsets,null)return null}})@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "PowerMock.verifyAll()@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sinkTask.put(EasyMock.anyObject())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> workerCurrentOffsets = new HashMap<>()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "workerStartingOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "workerTask.iteration()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> taskOffsets = new HashMap<>()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sinkTask.preCommit(workerCurrentOffsets)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "workerTask.iteration()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "expectPollInitialAssignment()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "taskOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "PowerMock.verifyAll()@@@31@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "expectConversionAndTransformation(1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "testPreCommit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertEquals(committableOffsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "sinkTaskContext.getValue().requestCommit()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "committableOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "taskOffsets.put(new TopicPartition(TOPIC,3),new OffsetAndMetadata(FIRST_OFFSET))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "workerTask.initializeAndStart()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "workerTask.iteration()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "expectTaskGetTopic(true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "workerCurrentOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "consumer.commitAsync(EasyMock.eq(committableOffsets),EasyMock.capture(callback))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testPreCommit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expectConversionAndTransformation(2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "workerTask.iteration()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expectConsumerPoll(2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "workerCurrentOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "sinkTaskContext.getValue().requestCommit()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "EasyMock.expectLastCall().andAnswer(null)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"currentOffsets\"))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "EasyMock.expectLastCall()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(workerCurrentOffsets,Whitebox.getInternalState(workerTask,\"currentOffsets\"))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "EasyMock.expect(consumer.assignment()).andReturn(workerCurrentOffsets.keySet())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Capture<OffsetCommitCallback> callback = EasyMock.newCapture()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->50 [style = dashed, label="0"];
5->3 [style = bold, label=""];
49->59 [style = bold, label=""];
25->22 [style = bold, label=""];
25->7 [style = solid, label="workerCurrentOffsets"];
37->49 [style = solid, label="workerStartingOffsets"];
41->8 [style = bold, label=""];
10->19 [style = bold, label=""];
34->15 [style = bold, label=""];
53->47 [style = bold, label=""];
58->60 [style = bold, label=""];
52->55 [style = bold, label=""];
7->48 [style = bold, label=""];
1->44 [style = dashed, label="0"];
40->23 [style = bold, label=""];
29->18 [style = bold, label=""];
7->26 [style = bold, label=""];
37->59 [style = solid, label="workerStartingOffsets"];
19->44 [style = bold, label=""];
47->49 [style = bold, label=""];
19->1 [style = bold, label=""];
48->51 [style = bold, label=""];
37->38 [style = bold, label=""];
25->0 [style = solid, label="workerCurrentOffsets"];
9->29 [style = bold, label=""];
27->2 [style = bold, label=""];
21->13 [style = bold, label=""];
25->57 [style = bold, label=""];
27->26 [style = solid, label="taskOffsets"];
39->34 [style = bold, label=""];
24->40 [style = bold, label=""];
3->33 [style = bold, label=""];
51->58 [style = bold, label=""];
18->28 [style = bold, label=""];
1->11 [style = bold, label=""];
43->11 [style = bold, label=""];
39->16 [style = solid, label="committableOffsets"];
37->31 [style = solid, label="workerStartingOffsets"];
39->19 [style = solid, label="committableOffsets"];
12->14 [style = bold, label=""];
30->10 [style = bold, label=""];
36->16 [style = bold, label=""];
32->36 [style = bold, label=""];
42->7 [style = bold, label=""];
37->28 [style = solid, label="workerStartingOffsets"];
38->35 [style = bold, label=""];
14->39 [style = bold, label=""];
59->56 [style = bold, label=""];
37->32 [style = solid, label="workerStartingOffsets"];
22->42 [style = bold, label=""];
56->11 [style = bold, label=""];
22->57 [style = dashed, label="0"];
28->31 [style = bold, label=""];
50->13 [style = bold, label=""];
35->25 [style = bold, label=""];
37->48 [style = solid, label="workerStartingOffsets"];
6->37 [style = bold, label=""];
11->41 [style = bold, label=""];
17->0 [style = bold, label=""];
33->24 [style = bold, label=""];
4->20 [style = bold, label=""];
42->27 [style = bold, label=""];
13->6 [style = bold, label=""];
31->17 [style = bold, label=""];
0->32 [style = bold, label=""];
16->4 [style = bold, label=""];
60->52 [style = bold, label=""];
26->48 [style = dashed, label="0"];
46->3 [style = bold, label=""];
40->54 [style = bold, label=""];
57->42 [style = bold, label=""];
15->7 [style = bold, label=""];
45->3 [style = bold, label=""];
39->1 [style = solid, label="committableOffsets"];
2->12 [style = bold, label=""];
44->43 [style = bold, label=""];
26->30 [style = bold, label=""];
54->50 [style = bold, label=""];
23->54 [style = dashed, label="0"];
37->0 [style = solid, label="workerStartingOffsets"];
39->4 [style = solid, label="committableOffsets"];
23->21 [style = bold, label=""];
55->53 [style = bold, label=""];
8->9 [style = bold, label=""];
25->17 [style = solid, label="workerCurrentOffsets"];
10->19 [style = solid, label="callback"];
}
