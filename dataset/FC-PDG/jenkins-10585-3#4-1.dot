digraph {
13 [style = filled, label = "project2.scheduleBuild2(0).waitForStart()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "waitForLastBuildToStop(project2)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final FreeStyleProject project = createLongRunningProject(TEST_JOB_NAME)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "project.scheduleBuild2(0).waitForStart()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "project.scheduleBuild2(0).waitForStart()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(stdout,equalTo(\"Build '#1' stopped for job 'jobName'\" + LN + \"Build '#1' stopped for job 'jobName2'\" + LN))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final List<String> inputNames@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String stdout = runWith(inputNames).stdout()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "waitForLastBuildToStop(project)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final String stdout = runWith(Collections.singletonList(TEST_JOB_NAME)).stdout()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final FreeStyleProject project2 = createLongRunningProject(TEST_JOB_NAME_2)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "shouldStopSeveralWorkingBuilds['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "project.setConcurrentBuild(true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldStopSeveralWorkingBuilds['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "setupAndAssertTwoBuildsStop['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "waitForLastBuildToStop(project)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final FreeStyleProject project = createLongRunningProject(TEST_JOB_NAME)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "setupSlaveWithTwoExecutors()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(stdout,equalTo(\"Build '#2' stopped for job 'jobName'\" + LN + \"Build '#1' stopped for job 'jobName'\" + LN))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
4->10 [style = bold, label=""];
4->3 [style = bold, label=""];
0->3 [style = dashed, label="0"];
2->3 [style = bold, label=""];
8->15 [style = dashed, label="0"];
8->6 [style = bold, label=""];
3->15 [style = bold, label=""];
9->7 [style = bold, label=""];
15->16 [style = bold, label=""];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
3->15 [style = solid, label="stdout"];
3->5 [style = bold, label=""];
17->12 [style = bold, label=""];
18->4 [style = bold, label=""];
13->3 [style = bold, label=""];
5->0 [style = bold, label=""];
10->13 [style = bold, label=""];
18->16 [style = solid, label="project"];
7->2 [style = bold, label=""];
12->18 [style = bold, label=""];
0->8 [style = bold, label=""];
4->14 [style = solid, label="project2"];
16->14 [style = bold, label=""];
0->8 [style = solid, label="stdout"];
7->6 [style = solid, label="project"];
17->11 [style = dotted, label="true"];
}
