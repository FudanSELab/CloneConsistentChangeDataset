digraph {
1 [style = filled, label = "Util.createSymlink(d,\"a\",\"x\",l)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "new FilePath(new File(d,\"original\")).touch(0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "i++@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "assertTrue(\"Couldn't create \" + anotherDir,anotherDir.mkdir())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(\"Couldn't create \" + anotherDir,anotherDir.mkdir())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testIsSymlink['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "File anotherDir = new File(d,\"anotherDir\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "log.length() > 0@@@18@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "buf.append((char)('0' + (i % 10)))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Util.createSymlink(d,\"a\",\"anotherDir/link\",l)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertNull(Util.resolveSymlink(new File(d,\"a\")))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Util.createSymlink(d,buf.toString(),\"x\",l)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Util.createSymlink(d,\"original\",\"link\",l)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "File dir = new File(d,\"dir\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "new FilePath(new File(d,\"a\")).touch(0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Util.createSymlink(d,\"dir\",\"anotherDir/symlinkDir\",l)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertFalse(Util.isSymlink(new File(d,\"original\")))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(external.getAbsolutePath(),Util.resolveSymlink(new File(d,\"outside\")))@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertTrue(Util.isSymlink(new File(d,\"link\")))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "StreamTaskListener l = new StreamTaskListener(baos)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "System.err.println(\"log output: \" + log)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSymlink['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertTrue(\"Couldn't create \" + dir,dir.mkdir())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i < 768@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "File external = File.createTempFile(\"something\",\"\")@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Util.createSymlink(d,external.getAbsolutePath(),\"outside\",l)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "{assertTrue(external.delete())}@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "{Util.deleteRecursive(d)}@@@33@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertFalse(Util.isSymlink(new File(d,\"dir\")))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "File anotherDir = new File(d,\"anotherDir\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "buf.append((char)('0' + (i % 10)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assume.assumeTrue(!Functions.isWindows())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"a\",Util.resolveSymlink(new File(d,\"anotherDir/link\")))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(buf.toString(),Util.resolveSymlink(new File(d,\"x\")))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "{Util.deleteRecursive(d)}@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testSymlink['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "File d = Util.createTempDir()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StringBuilder buf = new StringBuilder(768)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"a\",Util.resolveSymlink(new File(d,\"x\")))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String log = baos.toString()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "System.err.println(\"log output: \" + log)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->38 [style = solid, label="anotherDir"];
0->37 [style = solid, label="d"];
19->35 [style = dashed, label="0"];
0->39 [style = solid, label="d"];
0->8 [style = bold, label=""];
22->27 [style = solid, label="i"];
5->13 [style = bold, label=""];
23->11 [style = solid, label="i"];
22->23 [style = solid, label="i"];
27->5 [style = solid, label="i"];
18->7 [style = dotted, label="true"];
20->2 [style = solid, label="anotherDir"];
3->9 [style = bold, label=""];
11->23 [style = bold, label=""];
38->35 [style = bold, label=""];
20->2 [style = bold, label=""];
39->37 [style = bold, label=""];
16->18 [style = solid, label="log"];
23->27 [style = bold, label=""];
26->18 [style = bold, label=""];
5->11 [style = dotted, label="true"];
6->13 [style = solid, label="l"];
36->33 [style = solid, label="dir"];
0->34 [style = solid, label="d"];
23->5 [style = solid, label="i"];
0->21 [style = solid, label="d"];
12->6 [style = solid, label="baos"];
4->17 [style = bold, label=""];
0->25 [style = solid, label="d"];
7->14 [style = bold, label=""];
22->5 [style = solid, label="i"];
37->34 [style = bold, label=""];
6->19 [style = solid, label="l"];
42->40 [style = bold, label=""];
23->5 [style = bold, label=""];
1->37 [style = dashed, label="0"];
28->10 [style = bold, label=""];
0->19 [style = solid, label="d"];
0->40 [style = solid, label="d"];
0->3 [style = solid, label="d"];
6->1 [style = solid, label="l"];
6->25 [style = solid, label="l"];
0->14 [style = solid, label="d"];
35->31 [style = bold, label=""];
6->0 [style = bold, label=""];
24->17 [style = bold, label=""];
34->36 [style = bold, label=""];
5->27 [style = dotted, label="true"];
26->14 [style = bold, label=""];
8->21 [style = bold, label=""];
29->25 [style = bold, label=""];
0->4 [style = solid, label="d"];
0->30 [style = solid, label="d"];
2->19 [style = bold, label=""];
0->20 [style = solid, label="d"];
27->23 [style = solid, label="i"];
0->35 [style = solid, label="d"];
13->16 [style = bold, label=""];
8->32 [style = dashed, label="0"];
41->10 [style = bold, label=""];
19->4 [style = bold, label=""];
36->33 [style = bold, label=""];
21->1 [style = bold, label=""];
18->14 [style = bold, label=""];
17->30 [style = bold, label=""];
15->10 [style = bold, label=""];
21->39 [style = dashed, label="0"];
12->6 [style = bold, label=""];
18->7 [style = bold, label=""];
40->38 [style = bold, label=""];
9->22 [style = bold, label=""];
0->31 [style = solid, label="d"];
22->5 [style = bold, label=""];
6->35 [style = solid, label="l"];
0->36 [style = solid, label="d"];
16->26 [style = bold, label=""];
0->32 [style = bold, label=""];
16->18 [style = bold, label=""];
0->13 [style = solid, label="d"];
25->24 [style = bold, label=""];
32->39 [style = bold, label=""];
16->7 [style = solid, label="log"];
26->18 [style = dotted, label="true"];
10->12 [style = bold, label=""];
1->3 [style = bold, label=""];
0->42 [style = solid, label="d"];
5->11 [style = bold, label=""];
5->23 [style = bold, label=""];
27->5 [style = bold, label=""];
6->37 [style = solid, label="l"];
0->1 [style = solid, label="d"];
3->34 [style = dashed, label="0"];
0->17 [style = solid, label="d"];
0->24 [style = solid, label="d"];
4->29 [style = bold, label=""];
22->11 [style = solid, label="i"];
5->23 [style = dotted, label="true"];
14->20 [style = bold, label=""];
33->42 [style = bold, label=""];
}
