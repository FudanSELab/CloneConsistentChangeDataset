digraph {
8 [style = filled, label = "buildRule.executeTarget(\"trimfilebyline\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "String contents = getFileString(\"trimfile\",getProject().getProperty(\"output\") + \"/trimfile\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testTrimFileByLine['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testTrimFileByLine['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertNotContains(\" This is the second\",contents)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertStringContains(contents,\"file.This is the second\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertFalse(\"no ws at end\",contents.endsWith(\"second line.\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(\"no ws at end\",contents.endsWith(\"second line.\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertFalse(\"no ws at start\",contents.startsWith(\"This is th\"))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/trimfilebyline\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testTrimFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String contents = getFileString(\"trimfilebyline\",getProject().getProperty(\"output\") + \"/trimfilebyline\")@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFalse(\"no ws at start\",contents.startsWith(\"This is th\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(\"no ws at start\",contents.startsWith(\"This is th\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertContains(\"file.This is the second\",contents)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertStringContains(contents,\" This is the second\")@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
0->9 [style = bold, label=""];
5->12 [style = dashed, label="0"];
2->1 [style = bold, label=""];
1->15 [style = dashed, label="0"];
14->11 [style = solid, label="contents"];
12->11 [style = bold, label=""];
0->11 [style = dashed, label="0"];
9->10 [style = bold, label=""];
2->0 [style = solid, label="contents"];
2->4 [style = solid, label="contents"];
7->9 [style = solid, label="contents"];
8->7 [style = bold, label=""];
7->5 [style = bold, label=""];
2->14 [style = dashed, label="0"];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
0->4 [style = bold, label=""];
6->8 [style = bold, label=""];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
7->10 [style = solid, label="contents"];
0->9 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
13->14 [style = bold, label=""];
}
