digraph {
19 [style = filled, label = "testCleanShutdown['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "UpdateHandler uhandler = req.getCore().getUpdateHandler()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Semaphore logReplayFinish = new Semaphore(0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testCleanShutdown['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testCleanShutdown['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "createCore()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertU(commit())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "clearIndex()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertU(adoc(\"id\",\"E1\",\"val_i\",\"1\"))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "h.close()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertU(adoc(\"id\",\"E2\",\"val_i\",\"1\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DirectUpdateHandler2.commitOnClose = true@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "{DirectUpdateHandler2.commitOnClose = trueUpdateLog.testing_logReplayHook = nullUpdateLog.testing_logReplayFinishHook = nullreq().close()}@@@31@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SolrQueryRequest req = req()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "UpdateLog.testing_logReplayHook = null@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertU(adoc(\"id\",\"E2\",\"val_i\",v1))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(10,logReplay.availablePermits())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "UpdateLog.testing_logReplayFinishHook = null@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "UpdateLog ulog = uhandler.getUpdateLog()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertU(adoc(\"id\",\"E1\",\"val_i\",v1))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final Semaphore logReplay = new Semaphore(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "logReplay.release(10)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String v1 = getNextVersion()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->17 [style = bold, label=""];
7->8 [style = bold, label=""];
4->7 [style = bold, label=""];
15->9 [style = bold, label=""];
10->6 [style = bold, label=""];
6->15 [style = bold, label=""];
23->1 [style = bold, label=""];
23->20 [style = solid, label="v1"];
5->1 [style = bold, label=""];
11->0 [style = bold, label=""];
9->2 [style = bold, label=""];
3->21 [style = dashed, label="0"];
17->3 [style = bold, label=""];
1->14 [style = bold, label=""];
3->13 [style = bold, label=""];
17->20 [style = dashed, label="0"];
23->21 [style = solid, label="v1"];
12->16 [style = bold, label=""];
20->21 [style = bold, label=""];
8->11 [style = bold, label=""];
12->15 [style = solid, label="req"];
5->23 [style = bold, label=""];
22->7 [style = bold, label=""];
16->5 [style = bold, label=""];
18->12 [style = bold, label=""];
19->7 [style = bold, label=""];
13->10 [style = bold, label=""];
0->18 [style = bold, label=""];
14->20 [style = bold, label=""];
21->13 [style = bold, label=""];
}
