digraph {
0 [style = filled, label = "Assert.assertEquals(expected,metadata.spec())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String location = \"file://tmp/db/table\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "PartitionSpec spec = PartitionSpec.builderFor(schema).withSpecId(5).add(1,1005,\"x_partition\",\"bucket(4(\").build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testNewTableMetadataReassignmentAllIds['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "PartitionSpec expected = PartitionSpec.builderFor(metadata.schema()).withSpecId(0).add(1,1000,\"x_partition\",\"bucket(4(\").add(3,1001,\"z_partition\",\"bucket(8(\").build()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "PartitionSpec spec = PartitionSpec.builderFor(schema).withSpecId(5).add(3,1005,\"x_partition\",\"bucket(4(\").add(5,1003,\"z_partition\",\"bucket(8(\").build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Schema schema = new Schema(Types.NestedField.required(1,\"x\",Types.LongType.get()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "AssertHelpers.assertThrows(\"Should fail to update an invalid partition spec\",,\"Spec does not use sequential IDs that are required in v1\",null)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Schema schema = new Schema(Types.NestedField.required(3,\"x\",Types.LongType.get()),Types.NestedField.required(4,\"y\",Types.LongType.get()),Types.NestedField.required(5,\"z\",Types.LongType.get()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "PartitionSpec spec = PartitionSpec.builderFor(schema).withSpecId(5).add(3,1005,\"x_partition\",\"bucket(4(\").add(5,1005,\"z_partition\",\"bucket(8(\").build()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "TableMetadata metadata = TableMetadata.newTableMetadata(schema,spec,location,ImmutableMap.of())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testNewTableMetadataReassignmentAllIds['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testInvalidUpdatePartitionSpecForV1Table['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
4->0 [style = solid, label="spec"];
8->0 [style = solid, label="spec"];
3->1 [style = bold, label=""];
12->11 [style = bold, label=""];
1->0 [style = solid, label="expected"];
9->3 [style = solid, label="spec"];
1->0 [style = bold, label=""];
11->9 [style = bold, label=""];
2->4 [style = bold, label=""];
6->2 [style = bold, label=""];
3->10 [style = bold, label=""];
5->3 [style = solid, label="location"];
4->9 [style = dashed, label="0"];
8->5 [style = bold, label=""];
2->3 [style = solid, label="schema"];
7->2 [style = bold, label=""];
4->3 [style = solid, label="spec"];
8->3 [style = solid, label="spec"];
4->8 [style = dashed, label="0"];
9->5 [style = bold, label=""];
11->3 [style = solid, label="schema"];
2->11 [style = dashed, label="0"];
4->5 [style = bold, label=""];
2->8 [style = bold, label=""];
}
