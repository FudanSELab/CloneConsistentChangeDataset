digraph {
9 [style = filled, label = "return new Stats(sizeInBytes,numRows)@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "numRows += file.file().recordCount()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "sizeInBytes += file.length()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "estimateStatistics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "long sizeInBytes = 0L@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return new Stats(SparkSchemaUtil.estimateSize(lazyType(),totalRecords),totalRecords)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return new Stats(0L,0L)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "long numRows = 0L@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "estimateStatistics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "!table.spec().isUnpartitioned() && (filterExpressions == null || filterExpressions.isEmpty())@@@6@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "long totalRecords = PropertyUtil.propertyAsLong(table.currentSnapshot().summary(),SnapshotSummary.TOTAL_RECORDS_PROP,Long.MAX_VALUE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "long sizeInBytes = 0L@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "long numRows = 0L@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "sizeInBytes += file.length()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "filterExpressions == null || filterExpressions.isEmpty()@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "filterExpressions == null || filterExpressions == Expressions.alwaysTrue()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "numRows += file.file().recordCount()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "estimateStatistics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "return new Stats(SparkSchemaUtil.estimateSize(SparkSchemaUtil.convert(projectedSchema),totalRecords),totalRecords)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "table.currentSnapshot() == null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return new Stats(sizeInBytes,numRows)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Schema projectedSchema = expectedSchema != null? expectedSchema: table.schema()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "LOG.debug(\"using table metadata to estimate table statistics\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
4->9 [style = bold, label=""];
7->2 [style = dotted, label="true"];
14->2 [style = dotted, label="true"];
8->10 [style = bold, label=""];
4->3 [style = bold, label=""];
7->11 [style = bold, label=""];
7->10 [style = dotted, label="true"];
1->8 [style = bold, label=""];
1->10 [style = solid, label="totalRecords"];
21->6 [style = bold, label=""];
2->1 [style = bold, label=""];
7->14 [style = dashed, label="0"];
15->22 [style = dotted, label="true"];
1->18 [style = bold, label=""];
6->0 [style = bold, label=""];
17->20 [style = solid, label="numRows"];
19->17 [style = bold, label=""];
16->19 [style = bold, label=""];
12->6 [style = bold, label=""];
3->4 [style = bold, label=""];
15->18 [style = bold, label=""];
17->19 [style = bold, label=""];
14->10 [style = dotted, label="true"];
0->15 [style = bold, label=""];
6->15 [style = bold, label=""];
15->22 [style = bold, label=""];
0->7 [style = bold, label=""];
6->14 [style = bold, label=""];
3->9 [style = solid, label="sizeInBytes"];
11->5 [style = bold, label=""];
0->14 [style = bold, label=""];
8->10 [style = solid, label="projectedSchema"];
19->20 [style = solid, label="sizeInBytes"];
7->2 [style = bold, label=""];
15->1 [style = dotted, label="true"];
14->8 [style = dotted, label="true"];
7->15 [style = dashed, label="0"];
22->1 [style = solid, label="totalRecords"];
14->2 [style = bold, label=""];
14->1 [style = dotted, label="true"];
6->0 [style = dotted, label="true"];
22->1 [style = bold, label=""];
13->6 [style = bold, label=""];
6->7 [style = bold, label=""];
7->1 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
14->11 [style = bold, label=""];
4->9 [style = solid, label="numRows"];
17->20 [style = bold, label=""];
10->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
