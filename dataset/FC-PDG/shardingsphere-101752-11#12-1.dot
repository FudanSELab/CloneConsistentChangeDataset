digraph {
0 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "shorthandProjectionSegment.setOwner(owner)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ProjectionsContext actual = new ProjectionsContextEngine(schema).createProjectionsContext(tables,projectionsSegment,new GroupByContext(Collections.emptyList()),new OrderByContext(Collections.emptyList(),false))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "OwnerSegment owner = new OwnerSegment(0,10,new IdentifierValue(\"name\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Collection<SimpleTableSegment> tables = selectStatementContext.getAllTables()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertProjectionsContextCreatedProperlyWhenProjectionPresent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertCreateProjectionsContextWithoutIndexOrderByItemSegment['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "selectStatement.setProjections(projectionsSegment)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "OrderByItem orderByItem = new OrderByItem(new ExpressionOrderByItemSegment(0,1,\"\",OrderDirection.ASC))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ProjectionsContext actual = new ProjectionsContextEngine(schema).createProjectionsContext(tables,projectionsSegment,new GroupByContext(Collections.emptyList()),orderByContext)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertNotNull(actual)@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertProjectionsContextCreatedProperlyWhenProjectionPresent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem),true)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0,10)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ProjectionsSegment projectionsSegment = new ProjectionsSegment(0,0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->15 [style = bold, label=""];
14->17 [style = solid, label="orderByItem"];
3->1 [style = bold, label=""];
2->3 [style = solid, label="owner"];
10->15 [style = solid, label="tables"];
16->6 [style = bold, label=""];
2->3 [style = bold, label=""];
15->8 [style = solid, label="actual"];
17->9 [style = bold, label=""];
14->17 [style = bold, label=""];
5->0 [style = dotted, label="true"];
9->10 [style = bold, label=""];
6->4 [style = solid, label="projectionsSegment"];
10->13 [style = dashed, label="0"];
12->6 [style = bold, label=""];
1->9 [style = bold, label=""];
4->8 [style = solid, label="actual"];
5->6 [style = bold, label=""];
7->2 [style = bold, label=""];
4->15 [style = dashed, label="0"];
6->11 [style = bold, label=""];
18->9 [style = solid, label="selectStatement"];
17->15 [style = solid, label="orderByContext"];
6->15 [style = solid, label="projectionsSegment"];
10->4 [style = solid, label="tables"];
6->11 [style = solid, label="projectionsSegment"];
10->4 [style = bold, label=""];
12->0 [style = dotted, label="true"];
9->13 [style = bold, label=""];
0->18 [style = dashed, label="0"];
4->8 [style = bold, label=""];
7->1 [style = solid, label="shorthandProjectionSegment"];
1->14 [style = bold, label=""];
0->9 [style = solid, label="selectStatement"];
15->8 [style = bold, label=""];
11->7 [style = bold, label=""];
13->4 [style = solid, label="tables"];
13->4 [style = bold, label=""];
16->18 [style = dotted, label="true"];
}
