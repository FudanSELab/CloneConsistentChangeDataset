digraph {
20 [style = filled, label = "aggregate(selector,agg,buffer,0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "vectorColumnSelectorFactory = EasyMock.createMock()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "EasyMock.expect(vectorValueSelector.getNullVector()).andReturn(null).anyTimes()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "agg.init(buffer,0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertValues((VarianceAggregatorCollector)agg.get(buffer,0),0,0d,0d)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "aggregate(selector,agg,buffer,0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertValues((VarianceAggregatorCollector)agg.get(buffer,0),4,8.6d,3.95d)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "setup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(selector)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "selector = new TestLongColumnSelector(values)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "VarianceBufferAggregator agg = (VarianceBufferAggregator)aggFactory.factorizeBuffered(colSelectorFactory)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "EasyMock.expect(vectorColumnSelectorFactory.makeValueSelector(\"lngFld\")).andReturn(vectorValueSelector).anyTimes()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertValues((VarianceAggregatorCollector)agg.get(buffer,0),1,1.1d,0d)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "EasyMock.expect(colSelectorFactory.getColumnCapabilities(\"nilly\")).andReturn(null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertValues((VarianceAggregatorCollector)agg.get(buffer,0),2,3.8d,1.28d)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "setup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "aggregate(selector,agg,buffer,0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "VectorValueSelector vectorValueSelector = EasyMock.createMock()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "EasyMock.replay(vectorValueSelector)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "EasyMock.expect(vectorColumnSelectorFactory.getColumnCapabilities(\"lngFld\")).andReturn(new ColumnCapabilitiesImpl().setType(ValueType.LONG).setDictionaryEncoded(true)).anyTimes()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "EasyMock.replay(colSelectorFactory)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "aggregate(selector,agg,buffer,0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "EasyMock.replay(vectorColumnSelectorFactory)@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "ByteBuffer buffer = ByteBuffer.wrap(new byte(((()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "EasyMock.expect(vectorValueSelector.getLongVector()).andReturn(longValues1).anyTimes()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "colSelectorFactory = EasyMock.createMock()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "NullHandling.initializeForTests()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "testDoubleVarianceBufferAggregator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertValues((VarianceAggregatorCollector)agg.get(buffer,0),3,7.3d,2.9866d)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->27 [style = solid, label="agg"];
20->23 [style = bold, label=""];
17->21 [style = solid, label="agg"];
26->21 [style = bold, label=""];
18->26 [style = solid, label="buffer"];
10->6 [style = bold, label=""];
8->12 [style = bold, label=""];
18->22 [style = bold, label=""];
2->5 [style = bold, label=""];
12->9 [style = solid, label="vectorColumnSelectorFactory"];
18->25 [style = solid, label="buffer"];
10->8 [style = solid, label="vectorValueSelector"];
11->9 [style = bold, label=""];
18->19 [style = solid, label="buffer"];
15->7 [style = bold, label=""];
17->19 [style = solid, label="agg"];
0->1 [style = bold, label=""];
0->2 [style = solid, label="selector"];
5->4 [style = bold, label=""];
18->22 [style = solid, label="buffer"];
17->20 [style = solid, label="agg"];
12->13 [style = bold, label=""];
18->24 [style = solid, label="buffer"];
19->16 [style = bold, label=""];
21->25 [style = bold, label=""];
27->24 [style = bold, label=""];
18->16 [style = solid, label="buffer"];
13->11 [style = bold, label=""];
6->14 [style = bold, label=""];
22->26 [style = bold, label=""];
18->20 [style = solid, label="buffer"];
3->0 [style = bold, label=""];
7->0 [style = bold, label=""];
14->8 [style = bold, label=""];
18->21 [style = solid, label="buffer"];
4->10 [style = bold, label=""];
16->20 [style = bold, label=""];
24->19 [style = bold, label=""];
18->27 [style = solid, label="buffer"];
25->27 [style = bold, label=""];
18->23 [style = solid, label="buffer"];
1->2 [style = bold, label=""];
1->4 [style = solid, label="colSelectorFactory"];
28->17 [style = bold, label=""];
17->18 [style = bold, label=""];
}
