digraph {
8 [style = filled, label = "Collection<String> resources = new LinkedHashSet<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final ShardingSphereResource resource@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "checkToBeCreatedResources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "!notExistResources.isEmpty()@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "checkToBeAlteredResources['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final ShardingSphereResource resource@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Collection<String> notExistResources = resource.getNotExistedResources(resources)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sqlStatement.getRules().forEach(null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sqlStatement.getRules().stream().filter(null).forEach(null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "throw new ResourceNotExistedException(schemaName,notExistResources)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "final AlterReadwriteSplittingRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final ShardingSphereResource resource@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final String schemaName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final CreateDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "final CreateDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "throw new RequiredResourceMissedException(schemaName,notExistResources)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "!notExistedResources.isEmpty()@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final String schemaName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final String schemaName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "throw new ResourceNotExistedException(schemaName,notExistedResources)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Collection<String> notExistedResources = resource.getNotExistedResources(resources)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "checkToBeCreatedResources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
4->3 [style = bold, label=""];
5->8 [style = bold, label=""];
16->18 [style = bold, label=""];
21->20 [style = dotted, label="true"];
4->16 [style = dashed, label="0"];
3->1 [style = bold, label=""];
21->15 [style = dotted, label="true"];
13->12 [style = dotted, label="true"];
6->20 [style = dashed, label="0"];
19->17 [style = dotted, label="true"];
18->19 [style = bold, label=""];
21->8 [style = bold, label=""];
5->6 [style = dotted, label="true"];
19->17 [style = bold, label=""];
5->0 [style = dotted, label="true"];
20->17 [style = solid, label="schemaName"];
13->10 [style = dotted, label="true"];
1->7 [style = bold, label=""];
1->9 [style = bold, label=""];
6->12 [style = dashed, label="0"];
1->7 [style = dotted, label="true"];
0->7 [style = solid, label="schemaName"];
3->9 [style = solid, label="notExistResources"];
7->9 [style = dashed, label="0"];
18->17 [style = solid, label="notExistedResources"];
8->3 [style = solid, label="resources"];
1->9 [style = dotted, label="true"];
21->14 [style = dotted, label="true"];
8->18 [style = solid, label="resources"];
13->11 [style = dotted, label="true"];
3->7 [style = solid, label="notExistResources"];
8->4 [style = bold, label=""];
13->8 [style = bold, label=""];
10->9 [style = solid, label="schemaName"];
5->2 [style = dotted, label="true"];
}
