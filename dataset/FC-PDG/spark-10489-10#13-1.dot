digraph {
0 [style = filled, label = "String(( args@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<Row> data = Arrays.asList(RowFactory.create(Arrays.asList(\"I\",\"saw\",\"the\",\"red\",\"balloon\")),RowFactory.create(Arrays.asList(\"Mary\",\"had\",\"a\",\"little\",\"lamb\")))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Dataset<Row> dataset = spark.createDataFrame(data,schema)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "remover.transform(dataset).collect()@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "StructType schema = new StructType(new StructField((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a58d59)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SparkSession spark = SparkSession.builder().appName(\"JavaStopWordsRemoverExample\").getOrCreate()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "spark.stop()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "StopWordsRemover remover = new StopWordsRemover().setInputCol(\"raw\").setOutputCol(\"filtered\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "javaCompatibilityTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "StructType schema = new StructType(new StructField((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a58d02)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<Row> data = Arrays.asList(RowFactory.create(Arrays.asList(\"I\",\"saw\",\"the\",\"red\",\"baloon\")),RowFactory.create(Arrays.asList(\"Mary\",\"had\",\"a\",\"little\",\"lamb\")))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "remover.transform(dataset).show()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
10->8 [style = solid, label="data"];
9->0 [style = dotted, label="true"];
4->6 [style = bold, label=""];
4->0 [style = dotted, label="true"];
12->11 [style = bold, label=""];
5->8 [style = solid, label="data"];
7->8 [style = bold, label=""];
5->13 [style = solid, label="schema"];
10->7 [style = bold, label=""];
7->8 [style = solid, label="schema"];
9->6 [style = bold, label=""];
8->1 [style = bold, label=""];
3->10 [style = bold, label=""];
3->5 [style = bold, label=""];
3->13 [style = solid, label="data"];
5->10 [style = dashed, label="0"];
11->3 [style = bold, label=""];
5->13 [style = bold, label=""];
5->7 [style = bold, label=""];
1->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
13->8 [style = bold, label=""];
}
