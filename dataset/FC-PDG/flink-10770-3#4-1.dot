digraph {
3 [style = filled, label = "String srcTableName = \"src\"@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tEnv.registerTable(srcTableName,in)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(expected,result)@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "verifyHBaseLookupJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testHBaseLookupTableSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "boolean async@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<String> result = Lists.newArrayList(collected).stream().map(null).sorted().collect(Collectors.toList())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Iterator<Row> collected = tEnv.executeSql(dimJoinQuery).collect()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DataStream<Row> srcDs = execEnv.fromCollection(testData).returns(testTypeInfo)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<String> expected = new ArrayList<>()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "OLD_PLANNER.equals(planner) || isLegacyConnector@@@3@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "StreamTableEnvironment tEnv = StreamTableEnvironment.create(execEnv,streamSettings)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "StreamExecutionEnvironment execEnv = StreamExecutionEnvironment.getExecutionEnvironment()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testHBaseLookupTableSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "List<String> result = CollectionUtil.iteratorToList(collected).stream().map(null).sorted().collect(Collectors.toList())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE \" + TEST_TABLE_1 + \" (\" + \" family1 ROW<col1 INT>,\" + \" family2 ROW<col1 STRING, col2 BIGINT>,\" + \" family3 ROW<col1 DOUBLE, col2 BOOLEAN, col3 STRING>,\" + \" rowkey INT,\" + \" family4 ROW<col1 TIMESTAMP(3), col2 DATE, col3 TIME(3), col4 DECIMAL(12, 4)>,\" + \" PRIMARY KEY (rowkey) NOT ENFORCED\" + \") WITH (\" + \" 'connector' = 'hbase-1.4',\" + \" 'table-name' = '\" + TEST_TABLE_1 + \"',\" + \" 'zookeeper.quorum' = '\" + getZookeeperQuorum() + \"'\" + \")\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Table in = tEnv.fromDataStream(srcDs,$(\"a\"),$(\"b\"),$(\"c\"),$(\"proc\").proctime())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expected.add(\"+I(3, 2, 30, Hello-3, 300, 3.03, false, Welt-3, 2019-08-18T19:02, 2019-08-18, 19:02, 12345678.0003(\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expected.add(\"+I(2, 2, 20, Hello-2, 200, 2.02, true, Welt-2, 2019-08-18T19:01, 2019-08-18, 19:01, 12345678.0002(\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expected.add(\"+I(3, 3, 30, Hello-3, 300, 3.03, false, Welt-3, 2019-08-18T19:02, 2019-08-18, 19:02, 12345678.0003(\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tEnv.createTemporaryView(srcTableName,in)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "expected.add(\"+I(1, 1, 10, Hello-1, 100, 1.01, false, Welt-1, 2019-08-18T19:00, 2019-08-18, 19:00, 12345678.0001(\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE \" + TEST_TABLE_1 + \" (\" + \" family1 ROW<col1 INT>,\" + \" family2 ROW<col1 STRING, col2 BIGINT>,\" + \" family3 ROW<col1 DOUBLE, col2 BOOLEAN, col3 STRING>,\" + \" rowkey INT,\" + \" family4 ROW<col1 TIMESTAMP(3), col2 DATE, col3 TIME(3), col4 DECIMAL(12, 4)>,\" + \" PRIMARY KEY (rowkey) NOT ENFORCED\" + \") WITH (\" + \" 'connector' = 'hbase-2.2',\" + \" 'lookup.async' = '\" + async + \"',\" + \" 'table-name' = '\" + TEST_TABLE_1 + \"',\" + \" 'zookeeper.quorum' = '\" + getZookeeperQuorum() + \"'\" + \")\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String dimJoinQuery = \"SELECT\" + \" a,\" + \" b,\" + \" h.family1.col1,\" + \" h.family2.col1,\" + \" h.family2.col2,\" + \" h.family3.col1,\" + \" h.family3.col2,\" + \" h.family3.col3,\" + \" h.family4.col1,\" + \" h.family4.col2,\" + \" h.family4.col3,\" + \" h.family4.col4 \" + \" FROM src JOIN \" + TEST_TABLE_1 + \" FOR SYSTEM_TIME AS OF src.proc as h ON src.a = h.rowkey\"@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
19->18 [style = bold, label=""];
21->22 [style = solid, label="async"];
24->2 [style = bold, label=""];
0->17 [style = bold, label=""];
6->23 [style = bold, label=""];
3->14 [style = bold, label=""];
2->18 [style = bold, label=""];
9->22 [style = dashed, label="0"];
15->6 [style = bold, label=""];
3->17 [style = solid, label="srcTableName"];
23->8 [style = bold, label=""];
16->22 [style = bold, label=""];
12->7 [style = bold, label=""];
11->2 [style = bold, label=""];
2->13 [style = bold, label=""];
22->3 [style = bold, label=""];
14->0 [style = solid, label="srcDs"];
6->4 [style = bold, label=""];
8->5 [style = solid, label="expected"];
7->5 [style = bold, label=""];
14->0 [style = bold, label=""];
4->5 [style = solid, label="result"];
17->20 [style = dashed, label="0"];
17->15 [style = bold, label=""];
1->12 [style = bold, label=""];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
0->20 [style = bold, label=""];
18->16 [style = solid, label="execEnv"];
23->5 [style = solid, label="result"];
3->20 [style = solid, label="srcTableName"];
10->1 [style = bold, label=""];
24->21 [style = dotted, label="true"];
20->15 [style = bold, label=""];
0->17 [style = solid, label="in"];
4->23 [style = dashed, label="0"];
0->20 [style = solid, label="in"];
16->9 [style = bold, label=""];
2->13 [style = dotted, label="true"];
13->18 [style = bold, label=""];
18->16 [style = bold, label=""];
}
