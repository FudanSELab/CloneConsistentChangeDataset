digraph {
2 [style = filled, label = "doReturn(true).when(future).cancelOwner(anyBoolean())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(future.cancel(false))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(future.isCancelled())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertFalse(future.isDone())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testCancelFinishedFuture['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "future.get()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFalse(future.isCancelled())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(future.cancel(false))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(future.isDone())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(future.isCancelled())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(future.get())@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "fail(\"This future was canceled\")@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testCancelFinishedFuture['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(future.isDone())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "future.setResult(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(future.isCancelled())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testCancel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9->11 [style = dashed, label="0"];
5->7 [style = bold, label=""];
8->4 [style = bold, label=""];
16->18 [style = bold, label=""];
12->15 [style = bold, label=""];
4->5 [style = bold, label=""];
9->2 [style = bold, label=""];
17->12 [style = bold, label=""];
14->9 [style = bold, label=""];
10->11 [style = bold, label=""];
0->8 [style = bold, label=""];
11->2 [style = bold, label=""];
2->3 [style = bold, label=""];
6->9 [style = bold, label=""];
3->17 [style = bold, label=""];
1->3 [style = bold, label=""];
15->0 [style = bold, label=""];
3->0 [style = bold, label=""];
2->1 [style = bold, label=""];
8->13 [style = bold, label=""];
4->13 [style = dashed, label="0"];
5->16 [style = bold, label=""];
13->5 [style = bold, label=""];
}
