digraph {
46 [style = filled, label = "dataSourcesSnapshot = EasyMock.createNiceMock()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "EasyMock.expect(databaseSegmentManager.getDataSourcesSnapshot()).andReturn(dataSourcesSnapshot).anyTimes()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "leaderUnannouncerLatch = new CountDownLatch(1)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "EasyMock.replay(databaseSegmentManager)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "setupServerAndCurator()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "druidCoordinatorConfig = new TestDruidCoordinatorConfig(new Duration(COORDINATOR_START_DELAY),new Duration(COORDINATOR_PERIOD),null,null,new Duration(COORDINATOR_PERIOD),null,10,null,new Duration(\"PT0s\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "sourceLoadQueueChildrenCache = new PathChildrenCache(curator,SOURCE_LOAD_PATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache_src-%d\"))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "coordinatorRuntimeParams = EasyMock.createNiceMock()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "destinationLoadQueuePeon = new CuratorLoadQueuePeon(curator,DESTINATION_LOAD_PATH,objectMapper,Execs.scheduledSingleThreaded(\"coordinator_test_load_queue_peon_dest_scheduled-%d\"),Execs.singleThreaded(\"coordinator_test_load_queue_peon_dest-%d\"),druidCoordinatorConfig)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "EasyMock.replay(configManager)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "coordinator = new DruidCoordinator(druidCoordinatorConfig,new ZkPathsConfig(){@Override public String getBase(){return \"druid\"}},configManager,segmentsMetadata,serverInventoryView,metadataRuleManager,curator,serviceEmitter,scheduledExecutorFactory,null,null,new NoopServiceAnnouncer(){@Override public void announce(DruidNode node){leaderAnnouncerLatch.countDown()}@Override public void unannounce(DruidNode node){leaderUnannouncerLatch.countDown()}},druidNode,loadManagementPeons,null,new CostBalancerStrategyFactory(),EasyMock.createNiceMock(),new TestDruidLeaderSelector())@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorCompactionConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference(CoordinatorCompactionConfig.empty())).anyTimes()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "EasyMock.expect(databaseSegmentManager.isStarted()).andReturn(true).anyTimes()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "objectMapper = new DefaultObjectMapper()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "leaderAnnouncerLatch = new CountDownLatch(1)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "loadManagementPeons = new ConcurrentHashMap<>()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(SEGPATH)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "destinationLoadQueueChildrenCache = new PathChildrenCache(curator,DESTINATION_LOAD_PATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache_dest-%d\"))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "objectMapper = new DefaultObjectMapper()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(SOURCE_LOAD_PATH)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "loadManagementPeons = new ConcurrentHashMap<>()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "druidNode = new DruidNode(\"hey\",\"what\",false,1234,null,true,false)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "serverInventoryView = EasyMock.createMock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(DESTINATION_LOAD_PATH)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "leaderUnannouncerLatch = new CountDownLatch(1)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "dataSourcesSnapshot = EasyMock.createNiceMock()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "loadQueuePeon.start()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(LOADPATH)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "curator.blockUntilConnected()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "scheduledExecutorFactory = new ScheduledExecutorFactory(){@Override public ScheduledExecutorService create(int corePoolSize,final String nameFormat){return Executors.newSingleThreadScheduledExecutor()}}@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "metadataRuleManager = EasyMock.createNiceMock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "JacksonConfigManager configManager = EasyMock.createNiceMock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "databaseSegmentManager = EasyMock.createNiceMock()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "coordinator = new DruidCoordinator(druidCoordinatorConfig,new ZkPathsConfig(){@Override public String getBase(){return \"druid\"}},configManager,databaseSegmentManager,baseView,metadataRuleManager,curator,new NoopServiceEmitter(),scheduledExecutorFactory,null,null,new NoopServiceAnnouncer(){@Override public void announce(DruidNode node){leaderAnnouncerLatch.countDown()}@Override public void unannounce(DruidNode node){leaderUnannouncerLatch.countDown()}},druidNode,loadManagementPeons,null,new CostBalancerStrategyFactory(),EasyMock.createNiceMock(),new TestDruidLeaderSelector())@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "sourceLoadQueuePeon = new CuratorLoadQueuePeon(curator,SOURCE_LOAD_PATH,objectMapper,Execs.scheduledSingleThreaded(\"coordinator_test_load_queue_peon_src_scheduled-%d\"),Execs.singleThreaded(\"coordinator_test_load_queue_peon_src-%d\"),druidCoordinatorConfig)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "druidCoordinatorConfig = new TestDruidCoordinatorConfig(new Duration(COORDINATOR_START_DELAY),new Duration(COORDINATOR_PERIOD),null,null,new Duration(COORDINATOR_PERIOD),null,10,null,new Duration(\"PT0s\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorDynamicConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference(CoordinatorDynamicConfig.builder().build())).anyTimes()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "configManager = EasyMock.createNiceMock()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "segmentsMetadata = EasyMock.createNiceMock()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "curator.start()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "scheduledExecutorFactory = null@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "druidServer = EasyMock.createMock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "druidNode = new DruidNode(\"hey\",\"what\",false,1234,null,true,false)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "leaderAnnouncerLatch = new CountDownLatch(1)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
43->32 [style = solid, label="druidCoordinatorConfig"];
25->38 [style = solid, label="databaseSegmentManager"];
40->21 [style = solid, label="configManager"];
25->18 [style = solid, label="databaseSegmentManager"];
12->33 [style = dashed, label="0"];
46->34 [style = bold, label=""];
17->1 [style = bold, label=""];
16->10 [style = bold, label=""];
16->1 [style = solid, label="configManager"];
8->27 [style = solid, label="objectMapper"];
9->18 [style = solid, label="druidCoordinatorConfig"];
37->32 [style = solid, label="objectMapper"];
43->38 [style = solid, label="druidCoordinatorConfig"];
4->21 [style = bold, label=""];
37->35 [style = solid, label="objectMapper"];
1->20 [style = bold, label=""];
35->32 [style = bold, label=""];
42->33 [style = bold, label=""];
11->12 [style = bold, label=""];
24->29 [style = bold, label=""];
25->14 [style = bold, label=""];
42->38 [style = solid, label="loadManagementPeons"];
12->18 [style = solid, label="scheduledExecutorFactory"];
25->6 [style = bold, label=""];
2->4 [style = bold, label=""];
22->23 [style = bold, label=""];
27->15 [style = bold, label=""];
26->11 [style = bold, label=""];
28->14 [style = bold, label=""];
19->0 [style = bold, label=""];
27->35 [style = bold, label=""];
15->26 [style = bold, label=""];
20->22 [style = bold, label=""];
40->46 [style = bold, label=""];
16->18 [style = solid, label="configManager"];
6->14 [style = bold, label=""];
11->18 [style = solid, label="loadManagementPeons"];
25->4 [style = solid, label="databaseSegmentManager"];
43->35 [style = solid, label="druidCoordinatorConfig"];
39->21 [style = bold, label=""];
29->6 [style = bold, label=""];
7->24 [style = bold, label=""];
37->43 [style = bold, label=""];
15->35 [style = dashed, label="0"];
3->7 [style = bold, label=""];
43->5 [style = bold, label=""];
23->13 [style = bold, label=""];
24->25 [style = bold, label=""];
16->21 [style = bold, label=""];
30->7 [style = bold, label=""];
14->38 [style = solid, label="metadataRuleManager"];
34->39 [style = bold, label=""];
45->38 [style = bold, label=""];
41->38 [style = solid, label="druidNode"];
8->9 [style = bold, label=""];
29->18 [style = solid, label="segmentsMetadata"];
9->5 [style = bold, label=""];
33->31 [style = bold, label=""];
24->18 [style = solid, label="serverInventoryView"];
25->29 [style = dashed, label="0"];
0->18 [style = bold, label=""];
44->25 [style = bold, label=""];
10->2 [style = bold, label=""];
23->36 [style = bold, label=""];
32->41 [style = bold, label=""];
36->37 [style = bold, label=""];
5->27 [style = bold, label=""];
26->18 [style = solid, label="druidNode"];
33->38 [style = solid, label="scheduledExecutorFactory"];
13->8 [style = bold, label=""];
12->19 [style = bold, label=""];
14->18 [style = solid, label="metadataRuleManager"];
13->22 [style = dashed, label="0"];
21->17 [style = bold, label=""];
31->45 [style = bold, label=""];
14->40 [style = bold, label=""];
9->27 [style = solid, label="druidCoordinatorConfig"];
16->40 [style = dashed, label="0"];
40->38 [style = solid, label="configManager"];
6->28 [style = bold, label=""];
41->42 [style = bold, label=""];
}
