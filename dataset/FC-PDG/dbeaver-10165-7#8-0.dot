digraph {
2 [style = filled, label = "JDBCSession session@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "dbResult.next()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String plainQuery = SQLUtils.stripComments(dialect,query).toUpperCase()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "MySQLPlanJSON['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "nodes.add(node)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "JDBCSession session@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "throw new DBCException(\"Can't explain plan: \" + rootNode.getProperty(\"message\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "CommonUtils.isEmpty(rootNode.getNested()) && rootNode.getProperty(\"message\") != null@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "MySQLPlanNodeJSON rootNode = new MySQLPlanNodeJSON(null,\"select\",queryBlock)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "throw new DBCException(\"Only SELECT statements could produce execution plan\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "MySQLPlanClassic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "rootNodes = nodes@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "!\"SELECT\".equalsIgnoreCase(SQLUtils.getFirstKeyword(dialect,plainQuery))@@@6@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "String jsonPlan = dbResult.getString(1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "JsonObject queryBlock = planObject.getAsJsonObject(\"query_block\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String plainQuery = SQLUtils.stripComments(SQLUtils.getDialectFromObject(dataSource),query).toUpperCase()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String query@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "nodes.add(rootNode)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "rootNodes = nodes@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "SQLDialect dialect = SQLUtils.getDialectFromObject(dataSource)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "JsonObject planObject = gson.fromJson(jsonPlan,)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<MySQLPlanNodePlain> nodes = new ArrayList<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<MySQLPlanNodeJSON> nodes = new ArrayList<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "JDBCSession session@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "!plainQuery.startsWith(\"SELECT\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String query@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "throw new DBCException(\"Only SELECT statements could produce execution plan\")@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "List<MySQLPlanNodePlain> nodes = new ArrayList<>()@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MySQLPlanNodePlain node = new MySQLPlanNodePlain(null,dbResult)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "dbResult.next()@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "MySQLPlanClassic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rootNodes = nodes@@@15@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "super((MySQLDataSource)session.getDataSource(),query)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->18 [style = bold, label=""];
31->25 [style = solid, label="jsonPlan"];
25->32 [style = bold, label=""];
9->18 [style = solid, label="node"];
17->1 [style = bold, label=""];
11->9 [style = dotted, label="true"];
8->28 [style = dashed, label="0"];
0->4 [style = bold, label=""];
4->7 [style = bold, label=""];
4->12 [style = dashed, label="0"];
4->3 [style = dotted, label="true"];
4->26 [style = bold, label=""];
3->26 [style = bold, label=""];
7->10 [style = bold, label=""];
21->28 [style = dotted, label="true"];
16->14 [style = dotted, label="true"];
21->22 [style = dotted, label="true"];
11->9 [style = bold, label=""];
10->11 [style = bold, label=""];
3->7 [style = bold, label=""];
26->27 [style = bold, label=""];
16->10 [style = bold, label=""];
0->13 [style = dashed, label="0"];
12->16 [style = bold, label=""];
32->20 [style = bold, label=""];
11->9 [style = solid, label="node"];
13->12 [style = bold, label=""];
6->8 [style = dotted, label="true"];
17->15 [style = dotted, label="true"];
20->30 [style = bold, label=""];
30->23 [style = dotted, label="true"];
20->29 [style = solid, label="rootNode"];
10->19 [style = solid, label="nodes"];
16->14 [style = bold, label=""];
11->19 [style = bold, label=""];
28->1 [style = solid, label="query"];
30->23 [style = bold, label=""];
10->27 [style = dashed, label="0"];
11->18 [style = dotted, label="true"];
17->8 [style = dotted, label="true"];
32->20 [style = solid, label="queryBlock"];
21->1 [style = bold, label=""];
1->13 [style = bold, label=""];
26->24 [style = solid, label="nodes"];
31->25 [style = bold, label=""];
29->24 [style = bold, label=""];
10->11 [style = dotted, label="true"];
14->10 [style = bold, label=""];
6->2 [style = dotted, label="true"];
23->29 [style = bold, label=""];
8->1 [style = solid, label="query"];
7->26 [style = dashed, label="0"];
4->3 [style = bold, label=""];
6->1 [style = bold, label=""];
10->9 [style = dotted, label="true"];
10->5 [style = bold, label=""];
18->11 [style = bold, label=""];
27->31 [style = bold, label=""];
7->5 [style = solid, label="nodes"];
30->29 [style = bold, label=""];
9->10 [style = bold, label=""];
1->0 [style = bold, label=""];
}
