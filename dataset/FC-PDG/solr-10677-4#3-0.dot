digraph {
18 [style = filled, label = "List<Tuple> tuples@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assert(tuples.size() == 1)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"a_f asc\", having(rollup(over=a_f, sum(a_i), search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=a_f, qt=\"/export\")), and(eq(sum(a_i), 9),eq(sum(a_i),9))))\")@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"a_f asc\", having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=id), and(eq(a_i, 9),lt(a_i, 10))))\")@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "context.setSolrClientCache(solrClientCache)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"a_f asc\",having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=id), or(eq(a_i, 9),eq(a_i, 8))))\")@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"a_f asc\", having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=id, qt=\"/export\"), and(eq(a_i, 9),not(eq(a_i, 9)))))\")@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"a_f asc\", having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=id, qt=\"/export\"), and(eq(a_i, 9),lt(a_i, 10))))\")@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assert(tuples.size() == 2)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "tuples = getTuples(stream)@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "context.setSolrClientCache(solrClientCache)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "t = tuples.get(0)@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "stream.setStreamContext(context)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testParallelHavingStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "assert(tuples.size() == 1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\"), and(eq(a_i, 9),not(eq(a_i, 9))))\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "SolrClientCache solrClientCache = new SolrClientCache()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Tuple t = tuples.get(0)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tuples = getTuples(stream)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\"), eq(a_i, 9))\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "testHavingStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertTrue(t.getString(\"id\").equals(\"9\"))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(t.getDouble(\"a_f\") == 10.0D)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tuples = getTuples(stream)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "context = new StreamContext()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assert(tuples.size() == 1)@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"a_f asc\", having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=id), eq(a_i, 9)))\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "context = new StreamContext()@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(t.getString(\"id\").equals(\"9\"))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"a_f asc\", having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=id, qt=\"/export\"), eq(a_i, 9)))\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\"), and(lteq(a_i, 9), gteq(a_i, 8)))\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "stream = factory.constructStream(\"having(rollup(over=a_f, sum(a_i), search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\")), and(eq(sum(a_i), 9),eq(sum(a_i), 9)))\")@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testParallelHavingStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "context = new StreamContext()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TupleStream stream@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(t.getString(\"id\").equals(\"8\"))@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "stream.setStreamContext(context)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "tuples = getTuples(stream)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\"), and(eq(a_i, 9),lt(a_i, 10)))\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "context.setSolrClientCache(solrClientCache)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "stream.setStreamContext(context)@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "tuples = getTuples(stream)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertTrue(t.getString(\"id\").equals(\"9\"))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(COLLECTIONORALIAS,cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"having\",).withFunctionName(\"rollup\",).withFunctionName(\"sum\",).withFunctionName(\"and\",).withFunctionName(\"or\",).withFunctionName(\"not\",).withFunctionName(\"gt\",).withFunctionName(\"lt\",).withFunctionName(\"eq\",).withFunctionName(\"lteq\",).withFunctionName(\"gteq\",).withFunctionName(\"val\",).withFunctionName(\"parallel\",)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "context.setSolrClientCache(solrClientCache)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "StreamContext context = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assert(tuples.size() == 2)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "context = new StreamContext()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "context = new StreamContext()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "t = tuples.get(1)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assert(tuples.size() == 0)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(COLLECTIONORALIAS,cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"having\",).withFunctionName(\"rollup\",).withFunctionName(\"sum\",).withFunctionName(\"and\",).withFunctionName(\"or\",).withFunctionName(\"not\",).withFunctionName(\"gt\",).withFunctionName(\"lt\",).withFunctionName(\"eq\",).withFunctionName(\"lteq\",).withFunctionName(\"gteq\",)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "t = tuples.get(0)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"a_f asc\",having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=id, qt=\"/export\"), and(lteq(a_i, 9), gteq(a_i, 8))))\")@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\",\"subject\",\"blah blah blah 0\").add(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\",\"subject\",\"blah blah blah 2\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\",\"subject\",\"blah blah blah 3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\",\"subject\",\"blah blah blah 4\").add(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\",\"subject\",\"blah blah blah 1\").add(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"5\",\"a_f\",\"6\",\"subject\",\"blah blah blah 5\").add(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"6\",\"a_f\",\"7\",\"subject\",\"blah blah blah 6\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"7\",\"a_f\",\"8\",\"subject\",\"blah blah blah 7\").add(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"8\",\"a_f\",\"9\",\"subject\",\"blah blah blah 8\").add(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"9\",\"a_f\",\"10\",\"subject\",\"blah blah blah 9\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "tuples = getTuples(stream)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "stream.setStreamContext(context)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "solrClientCache.close()@@@58@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"a_f asc\", having(rollup(over=a_f, sum(a_i), search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=a_f)), and(eq(sum(a_i), 9),eq(sum(a_i),9))))\")@@@50@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "context.setSolrClientCache(solrClientCache)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"a_f asc\",having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=id, qt=\"/export\"), or(eq(a_i, 9),eq(a_i, 8))))\")@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "t = tuples.get(0)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "t = tuples.get(1)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "t = tuples.get(0)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "context.setSolrClientCache(solrClientCache)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(t.getString(\"id\").equals(\"8\"))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(t.getString(\"id\").equals(\"9\"))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "stream.setStreamContext(context)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "stream.setStreamContext(context)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\"), or(eq(a_i, 9),eq(a_i, 8)))\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"a_f asc\",having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=id), and(lteq(a_i, 9), gteq(a_i, 8))))\")@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "stream = factory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", workers=2, sort=\"a_f asc\", having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc\", partitionKeys=id), and(eq(a_i, 9),not(eq(a_i, 9)))))\")@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48->3 [style = bold, label=""];
41->19 [style = bold, label=""];
31->9 [style = bold, label=""];
57->8 [style = solid, label="stream"];
15->53 [style = solid, label="solrClientCache"];
24->39 [style = bold, label=""];
57->14 [style = bold, label=""];
67->71 [style = bold, label=""];
21->59 [style = dashed, label="0"];
9->43 [style = bold, label=""];
23->28 [style = bold, label=""];
8->36 [style = bold, label=""];
38->55 [style = solid, label="context"];
46->66 [style = bold, label=""];
39->49 [style = bold, label=""];
22->57 [style = bold, label=""];
63->10 [style = solid, label="stream"];
66->43 [style = solid, label="stream"];
44->57 [style = dashed, label="0"];
58->19 [style = bold, label=""];
25->10 [style = bold, label=""];
48->39 [style = solid, label="stream"];
30->8 [style = bold, label=""];
42->21 [style = bold, label=""];
15->20 [style = solid, label="solrClientCache"];
48->71 [style = dashed, label="0"];
21->51 [style = solid, label="stream"];
27->2 [style = bold, label=""];
22->64 [style = bold, label=""];
2->10 [style = solid, label="stream"];
32->56 [style = bold, label=""];
47->16 [style = solid, label="stream"];
15->6 [style = solid, label="solrClientCache"];
63->5 [style = bold, label=""];
61->16 [style = solid, label="stream"];
54->60 [style = bold, label=""];
2->70 [style = dashed, label="0"];
47->61 [style = dashed, label="0"];
59->32 [style = bold, label=""];
68->16 [style = solid, label="stream"];
17->68 [style = bold, label=""];
13->40 [style = bold, label=""];
1->0 [style = bold, label=""];
3->33 [style = bold, label=""];
44->8 [style = solid, label="stream"];
44->64 [style = dashed, label="0"];
71->39 [style = solid, label="stream"];
15->56 [style = solid, label="solrClientCache"];
46->41 [style = bold, label=""];
61->38 [style = bold, label=""];
26->27 [style = bold, label=""];
37->46 [style = bold, label=""];
48->60 [style = dashed, label="0"];
70->5 [style = bold, label=""];
56->50 [style = bold, label=""];
5->53 [style = bold, label=""];
7->42 [style = bold, label=""];
21->69 [style = dashed, label="0"];
64->14 [style = bold, label=""];
14->6 [style = bold, label=""];
27->70 [style = bold, label=""];
65->15 [style = bold, label=""];
22->44 [style = bold, label=""];
19->9 [style = solid, label="context"];
59->51 [style = solid, label="stream"];
38->20 [style = bold, label=""];
71->3 [style = bold, label=""];
35->15 [style = bold, label=""];
36->52 [style = bold, label=""];
41->58 [style = dashed, label="0"];
11->4 [style = bold, label=""];
32->50 [style = solid, label="context"];
29->37 [style = bold, label=""];
44->14 [style = bold, label=""];
66->19 [style = bold, label=""];
12->13 [style = bold, label=""];
43->17 [style = bold, label=""];
60->3 [style = bold, label=""];
15->31 [style = solid, label="solrClientCache"];
51->45 [style = bold, label=""];
10->23 [style = bold, label=""];
5->25 [style = solid, label="context"];
33->24 [style = bold, label=""];
58->43 [style = solid, label="stream"];
64->8 [style = solid, label="stream"];
15->33 [style = solid, label="solrClientCache"];
0->18 [style = bold, label=""];
18->67 [style = bold, label=""];
55->16 [style = bold, label=""];
62->15 [style = bold, label=""];
42->59 [style = bold, label=""];
47->68 [style = dashed, label="0"];
4->34 [style = bold, label=""];
28->22 [style = bold, label=""];
69->32 [style = bold, label=""];
70->10 [style = solid, label="stream"];
2->5 [style = bold, label=""];
2->63 [style = dashed, label="0"];
15->1 [style = bold, label=""];
14->30 [style = solid, label="context"];
3->24 [style = solid, label="context"];
53->25 [style = bold, label=""];
17->61 [style = bold, label=""];
16->11 [style = bold, label=""];
19->31 [style = bold, label=""];
17->47 [style = bold, label=""];
54->67 [style = dashed, label="0"];
34->7 [style = bold, label=""];
54->48 [style = bold, label=""];
27->63 [style = bold, label=""];
46->58 [style = bold, label=""];
68->38 [style = bold, label=""];
47->38 [style = bold, label=""];
20->55 [style = bold, label=""];
45->12 [style = bold, label=""];
42->69 [style = bold, label=""];
69->51 [style = solid, label="stream"];
50->51 [style = bold, label=""];
21->32 [style = bold, label=""];
60->39 [style = solid, label="stream"];
41->66 [style = dashed, label="0"];
52->29 [style = bold, label=""];
49->26 [style = bold, label=""];
18->54 [style = bold, label=""];
41->43 [style = solid, label="stream"];
6->30 [style = bold, label=""];
}
