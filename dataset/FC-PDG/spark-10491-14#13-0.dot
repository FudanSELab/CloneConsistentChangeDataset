digraph {
2 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Attribute(( attrs = new Attribute((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7e343@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "vectorSlicer.setIndices(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7e321).setNames(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7e326)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(features.size(),2)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Dataset<Row> output = vectorSlicer.transform(dataset)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<Row> data = Arrays.asList(RowFactory.create(Vectors.sparse(3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7e36e,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7e373)),RowFactory.create(Vectors.dense(-2.0,2.3,0.0)))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Attribute(( attrs = new Attribute((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7e22d@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Vector features = r.getAs(1)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "VectorSlicer vectorSlicer = new VectorSlicer().setInputCol(\"userFeatures\").setOutputCol(\"features\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "vectorSlicer.setIndices(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7e3a6).setNames(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7e3ab)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SparkSession spark = SparkSession.builder().appName(\"JavaVectorSlicerExample\").getOrCreate()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Dataset<Row> dataset = spark.createDataFrame(data,(new StructType()).add(group.toStructField()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "spark.stop()@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String(( args@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "vectorSlice['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "List<Row> data = Arrays.asList(RowFactory.create(Vectors.sparse(3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7e2e9,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7e2ee)),RowFactory.create(Vectors.dense(-2.0,2.3,0.0)))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "AttributeGroup group = new AttributeGroup(\"userFeatures\",attrs)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Dataset<Row> output = vectorSlicer.transform(dataset)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<Row> data = Lists.newArrayList(RowFactory.create(Vectors.sparse(3,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7e258,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7e25d)),RowFactory.create(Vectors.dense(-2.0,2.3,0.0)))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Attribute(( attrs = {NumericAttribute.defaultAttr().withName(\"f1\"),NumericAttribute.defaultAttr().withName(\"f2\"),NumericAttribute.defaultAttr().withName(\"f3\")}@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "output.show(false)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20->17 [style = bold, label=""];
2->6 [style = bold, label=""];
9->4 [style = bold, label=""];
18->21 [style = solid, label="dataset"];
12->11 [style = bold, label=""];
19->15 [style = solid, label="attrs"];
8->12 [style = dashed, label="0"];
12->11 [style = solid, label="attrs"];
0->11 [style = dashed, label="0"];
13->7 [style = solid, label="data"];
16->19 [style = bold, label=""];
8->11 [style = solid, label="attrs"];
14->10 [style = dotted, label="true"];
11->18 [style = bold, label=""];
7->3 [style = bold, label=""];
0->7 [style = bold, label=""];
3->9 [style = bold, label=""];
5->1 [style = bold, label=""];
11->0 [style = bold, label=""];
21->20 [style = bold, label=""];
15->11 [style = bold, label=""];
0->7 [style = solid, label="data"];
7->4 [style = solid, label="dataset"];
13->7 [style = bold, label=""];
11->13 [style = bold, label=""];
6->8 [style = bold, label=""];
11->18 [style = solid, label="data"];
0->13 [style = dashed, label="0"];
3->21 [style = bold, label=""];
19->15 [style = bold, label=""];
18->7 [style = bold, label=""];
8->11 [style = bold, label=""];
4->5 [style = bold, label=""];
14->6 [style = bold, label=""];
2->10 [style = dotted, label="true"];
17->20 [style = bold, label=""];
6->12 [style = bold, label=""];
}
