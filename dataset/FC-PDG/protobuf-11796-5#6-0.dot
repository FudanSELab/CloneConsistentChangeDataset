digraph {
2 [style = filled, label = "Object value@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "hasLazyField = true@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "newList@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final List newList = new ArrayList<>()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "ensureIsMutable()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "hasNestedBuilders = hasNestedBuilders || element instanceof MessageLite.Builder@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "setField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "newList@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final T descriptor@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "hasNestedBuilders = hasNestedBuilders || value instanceof MessageLite.Builder@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "newList@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "fields.put(descriptor,value)@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final Object element@@@10@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "!(value instanceof List)@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "descriptor.isRepeated()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final T descriptor@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "newList.addAll((List)value)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "setField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verifyType(descriptor,value)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "setField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final List newList = new ArrayList()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "verifyType(descriptor,element)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "value = newList@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final T descriptor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "value instanceof LazyField@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "throw new IllegalArgumentException(\"Wrong object type used with protocol message reflection.\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->2 [style = dotted, label="true"];
17->15 [style = solid, label="newList"];
7->18 [style = dotted, label="true"];
7->4 [style = dotted, label="true"];
0->1 [style = dotted, label="true"];
3->14 [style = bold, label=""];
14->15 [style = solid, label="newList"];
8->9 [style = bold, label=""];
23->15 [style = bold, label=""];
16->11 [style = solid, label="descriptor"];
7->17 [style = dotted, label="true"];
2->24 [style = solid, label="value"];
0->7 [style = bold, label=""];
12->14 [style = bold, label=""];
2->6 [style = solid, label="value"];
15->8 [style = solid, label="value"];
7->12 [style = dotted, label="true"];
7->10 [style = dotted, label="true"];
7->6 [style = dotted, label="false"];
4->11 [style = bold, label=""];
25->7 [style = bold, label=""];
7->6 [style = bold, label=""];
2->4 [style = solid, label="value"];
14->17 [style = dashed, label="0"];
15->24 [style = solid, label="value"];
11->15 [style = bold, label=""];
23->11 [style = bold, label=""];
13->24 [style = bold, label=""];
21->9 [style = solid, label="descriptor"];
6->8 [style = bold, label=""];
7->11 [style = dotted, label="true"];
21->11 [style = solid, label="descriptor"];
7->5 [style = dotted, label="true"];
2->8 [style = solid, label="value"];
22->2 [style = dotted, label="true"];
17->4 [style = bold, label=""];
16->9 [style = solid, label="descriptor"];
19->16 [style = dotted, label="true"];
3->17 [style = bold, label=""];
12->17 [style = bold, label=""];
19->2 [style = dotted, label="true"];
16->6 [style = solid, label="descriptor"];
7->12 [style = bold, label=""];
21->6 [style = solid, label="descriptor"];
15->9 [style = solid, label="value"];
22->25 [style = bold, label=""];
7->14 [style = dotted, label="true"];
7->15 [style = dotted, label="true"];
12->3 [style = bold, label=""];
1->9 [style = solid, label="descriptor"];
1->11 [style = solid, label="descriptor"];
11->23 [style = bold, label=""];
8->13 [style = bold, label=""];
24->9 [style = bold, label=""];
2->9 [style = solid, label="value"];
23->24 [style = solid, label="hasNestedBuilders"];
13->9 [style = bold, label=""];
14->4 [style = bold, label=""];
19->7 [style = bold, label=""];
8->24 [style = bold, label=""];
1->6 [style = solid, label="descriptor"];
15->8 [style = bold, label=""];
22->21 [style = dotted, label="true"];
7->20 [style = dotted, label="true"];
7->23 [style = dotted, label="true"];
12->3 [style = dotted, label="true"];
8->13 [style = dotted, label="true"];
}
