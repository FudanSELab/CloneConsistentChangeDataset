digraph {
5 [style = filled, label = "to = \"\"@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "initialize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "throw new BuildException(\"Missing pattern in replaceregex\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "from == null@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "to == null@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "initialize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "initialize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "regexp = regularExpression.getRegexp(getProject())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "throw new BuildException(\"Missing from in containsregex\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "substitution = new Substitution()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "options = convertRegexOptions(flags)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "regularExpression = new RegularExpression()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "regexp = regularExpression.getRegexp(project)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "substitution.setExpression(to)@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "regularExpression.setPattern(from)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "initialized@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4->5 [style = dotted, label="true"];
7->1 [style = bold, label=""];
4->17 [style = bold, label=""];
11->6 [style = bold, label=""];
8->3 [style = bold, label=""];
12->11 [style = bold, label=""];
3->11 [style = bold, label=""];
6->0 [style = bold, label=""];
3->15 [style = bold, label=""];
2->9 [style = bold, label=""];
9->10 [style = bold, label=""];
3->12 [style = bold, label=""];
9->8 [style = bold, label=""];
4->7 [style = bold, label=""];
6->14 [style = bold, label=""];
17->7 [style = bold, label=""];
0->14 [style = dashed, label="0"];
15->11 [style = bold, label=""];
10->8 [style = bold, label=""];
5->1 [style = solid, label="to"];
0->4 [style = bold, label=""];
3->12 [style = dotted, label="true"];
3->15 [style = dotted, label="true"];
12->15 [style = dashed, label="0"];
5->7 [style = bold, label=""];
13->9 [style = bold, label=""];
9->10 [style = dotted, label="true"];
4->17 [style = dotted, label="true"];
4->5 [style = bold, label=""];
16->9 [style = bold, label=""];
14->4 [style = bold, label=""];
}
