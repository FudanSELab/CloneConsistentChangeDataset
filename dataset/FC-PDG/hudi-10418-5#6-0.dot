digraph {
8 [style = filled, label = "checkInstantState(funcWrapper.getWriteClient(),HoodieInstant.State.REQUESTED,instant)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testInsert['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testInsert['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "expected.put(\"par1\",\"(id1,par1,id1,Danny,24,1,par1, id2,par1,id2,Stephen,34,2,par1(\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "funcWrapper.checkpointFunction(1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "OperatorEvent nextEvent = funcWrapper.getNextEvent()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertNotNull(funcWrapper.getEventBuffer()(0(,\"The coordinator missed the event\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "funcWrapper.invoke(rowData)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEmptyDataFiles()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expected.put(\"par3\",\"(id6,par3,id6,Emma,20,6,par3(\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "checkInstantState(funcWrapper.getWriteClient(),HoodieInstant.State.COMPLETED,instant)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "funcWrapper.openFunction()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Map<String,String> expected = new HashMap<>()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "checkWrittenData(tempFile,EXPECTED1)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertThat(\"The operator expect to send an event\",nextEvent,instanceOf())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "funcWrapper.checkpointComplete(2)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertNotNull(funcWrapper.getEventBuffer()(0(,\"The coordinator missed the event\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "checkWrittenData(tempFile,EXPECTED1)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "funcWrapper.invoke(rowData)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "funcWrapper.checkpointFunction(2)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(\"The operator expect to send an event\",nextEvent,instanceOf())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "nextEvent = funcWrapper.getNextEvent()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final OperatorEvent nextEvent = funcWrapper.getNextEvent()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(\"The operator expect to send an event\",nextEvent,instanceOf())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "testUpsertWithDelete['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "funcWrapper.checkpointComplete(1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "funcWrapper.checkpointComplete(1)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "expected.put(\"par4\",\"(id7,par4,id7,Bob,44,7,par4, id8,par4,id8,Han,56,8,par4(\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "funcWrapper.getCoordinator().handleEventFromOperator(0,nextEvent)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "funcWrapper.getCoordinator().handleEventFromOperator(0,nextEvent)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "checkWrittenData(tempFile,expected)@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "String instant = funcWrapper.getWriteClient().getLastPendingInstant(getTableType())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String instant = funcWrapper.getWriteClient().getLastPendingInstant(getTableType())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "expected.put(\"par2\",\"(id4,par2,id4,Fabian,31,4,par2(\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "checkInstantState(funcWrapper.getWriteClient(),HoodieInstant.State.REQUESTED,instant)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->3 [style = bold, label=""];
5->14 [style = bold, label=""];
34->18 [style = bold, label=""];
12->28 [style = bold, label=""];
29->27 [style = bold, label=""];
7->8 [style = bold, label=""];
9->11 [style = bold, label=""];
33->31 [style = bold, label=""];
34->18 [style = solid, label="nextEvent"];
10->6 [style = bold, label=""];
8->0 [style = bold, label=""];
2->7 [style = bold, label=""];
32->5 [style = bold, label=""];
28->26 [style = bold, label=""];
23->33 [style = bold, label=""];
10->15 [style = solid, label="nextEvent"];
5->31 [style = solid, label="expected"];
24->11 [style = bold, label=""];
7->21 [style = bold, label=""];
3->13 [style = bold, label=""];
27->20 [style = bold, label=""];
15->2 [style = bold, label=""];
6->2 [style = bold, label=""];
4->5 [style = solid, label="instant"];
20->25 [style = bold, label=""];
22->32 [style = bold, label=""];
5->17 [style = bold, label=""];
12->5 [style = bold, label=""];
21->19 [style = bold, label=""];
10->6 [style = solid, label="nextEvent"];
26->27 [style = solid, label="nextEvent"];
0->12 [style = bold, label=""];
34->6 [style = solid, label="nextEvent"];
30->23 [style = bold, label=""];
28->32 [style = solid, label="instant"];
1->4 [style = bold, label=""];
13->1 [style = bold, label=""];
4->10 [style = bold, label=""];
28->25 [style = solid, label="instant"];
6->15 [style = dashed, label="0"];
10->15 [style = bold, label=""];
4->34 [style = dashed, label="0"];
26->29 [style = solid, label="nextEvent"];
4->8 [style = solid, label="instant"];
17->30 [style = bold, label=""];
16->11 [style = bold, label=""];
19->12 [style = bold, label=""];
25->22 [style = bold, label=""];
26->29 [style = bold, label=""];
1->34 [style = bold, label=""];
18->6 [style = bold, label=""];
10->2 [style = solid, label="nextEvent"];
}
