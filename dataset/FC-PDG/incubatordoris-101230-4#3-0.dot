digraph {
9 [style = filled, label = "cardinality == -1@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "cardinality = -1@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "getChild(0).cardinality == -1@@@4@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "cardinality = limit@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "computeStats['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "computeStats['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "LOG.debug(\"stats Sort: cardinality=\" + Long.toString(cardinality))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Analyzer analyzer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "cardinality = getChild(0).cardinality@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "computeStats['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "cardinality = Math.min(cardinality,limit)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "hasLimit()@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@10a31analyzer@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Analyzer analyzer@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "cardinality = Math.round(((double)getChild(0).cardinality) * computeSelectivity())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Preconditions.checkState(cardinality >= 0)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "LOG.info(\"stats Select: cardinality=\" + Long.toString(cardinality))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->10 [style = bold, label=""];
6->3 [style = bold, label=""];
9->15 [style = dotted, label="false"];
6->0 [style = dotted, label="false"];
15->10 [style = bold, label=""];
4->1 [style = dotted, label="true"];
7->0 [style = solid, label="cardinality"];
0->2 [style = bold, label=""];
14->5 [style = bold, label=""];
12->11 [style = bold, label=""];
7->2 [style = solid, label="cardinality"];
11->9 [style = dotted, label="true"];
7->0 [style = bold, label=""];
6->7 [style = dotted, label="false"];
3->2 [style = solid, label="cardinality"];
11->9 [style = bold, label=""];
12->9 [style = solid, label="cardinality"];
15->10 [style = solid, label="cardinality"];
6->12 [style = dashed, label="0"];
14->16 [style = dotted, label="true"];
8->1 [style = dotted, label="true"];
16->5 [style = solid, label="analyzer"];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
5->12 [style = bold, label=""];
11->10 [style = bold, label=""];
9->15 [style = bold, label=""];
1->16 [style = dashed, label="0"];
9->13 [style = dotted, label="true"];
12->15 [style = solid, label="cardinality"];
1->5 [style = solid, label="analyzer"];
7->15 [style = dashed, label="0"];
13->10 [style = solid, label="cardinality"];
6->7 [style = bold, label=""];
12->10 [style = solid, label="cardinality"];
6->3 [style = dotted, label="true"];
4->5 [style = bold, label=""];
9->13 [style = bold, label=""];
}
