digraph {
4 [style = filled, label = "Map<Integer,List<TScanRangeParams>> nodeScanRanges = scanRanges.getValue()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "instanceParam.perNodeScanRanges.put(nodeScanRange.getKey(),nodeScanRange.getValue())@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "int parallelExecInstanceNum@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "FragmentExecParams params@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "params.instanceExecParams.add(instanceParam)@@@42@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "List<Map.Entry<Integer,Map<Integer,List<TScanRangeParams>>>> scanRange = addressScanRange.getValue()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "!addressToScanRanges.containsKey(address)@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "parallelExecInstanceNum > 1@@@16@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "FInstanceExecParam instanceParam = new FInstanceExecParam(null,addressScanRange.getKey(),0,params)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "params.instanceExecParams.add(instanceParam)@@@34@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Map<Integer,List<TScanRangeParams>> filteredNodeScanRanges = Maps.newHashMap()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "!instanceParam.perNodeScanRanges.containsKey(nodeScanRange.getKey())@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Set<Integer> scanNodeIds = fragmentIdToScanNodeIds.get(fragmentId)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "PlanFragmentId fragmentId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "parallelExecInstanceNum > 1@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "computeColocateJoinInstanceParam['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "TNetworkAddress address = bucketSeqToAddress.get(scanRanges.getKey())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "List<Pair<Integer,Map<Integer,List<TScanRangeParams>>>> scanRange = addressScanRange.getValue()@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "expectedInstanceNum = Math.min(scanRange.size(),parallelExecInstanceNum)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "instanceParam.perNodeScanRanges.get(nodeScanRange.getKey()).addAll(nodeScanRange.getValue())@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "instanceParam.perNodeScanRanges.put(nodeScanRange.getKey(),nodeScanRange.getValue())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Map<Integer,TNetworkAddress> bucketSeqToAddress = fragmentIdToSeqToAddressMap.get(fragmentId)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "params.instanceExecParams.add(instanceParam)@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "FInstanceExecParam instanceParam = new FInstanceExecParam(null,addressScanRange.getKey(),0,params)@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "computeInstanceParam['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "addressToScanRanges.put(address,Lists.newArrayList())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "FragmentExecParams params@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "!addressToScanRanges.containsKey(address)@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "FInstanceExecParam instanceParam = new FInstanceExecParam(null,addressScanRange.getKey(),0,params)@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "!instanceParam.perNodeScanRanges.containsKey(nodeScanRange.getKey())@@@34@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Map<TNetworkAddress,List<Map<Integer,List<TScanRangeParams>>>> addressToScanRanges = Maps.newHashMap()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Map<TNetworkAddress,List<Pair<Integer,Map<Integer,List<TScanRangeParams>>>>> addressToScanRanges = Maps.newHashMap()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "List<List<Map<Integer,List<TScanRangeParams>>>> perInstanceScanRanges = ListUtil.splitBySize(scanRange,expectedInstanceNum)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "addressToScanRanges.get(address).add(scanRanges)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "List<Map<Integer,List<TScanRangeParams>>> scanRange = addressScanRange.getValue()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "PlanFragmentId fragmentId@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "int expectedInstanceNum = 1@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "!instanceParam.perNodeScanRanges.containsKey(nodeScanRange.getKey())@@@26@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "expectedInstanceNum = Math.min(scanRange.size(),parallelExecInstanceNum)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "computeInstanceParam['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "addressToScanRanges.put(address,Lists.newArrayList())@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Map<TNetworkAddress,List<Map.Entry<Integer,Map<Integer,List<TScanRangeParams>>>>> addressToScanRanges = Maps.newHashMap()@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "addressToScanRanges.get(address).add(filteredScanRanges)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "instanceParam.perNodeScanRanges.get(nodeScanRange.getKey()).addAll(nodeScanRange.getValue())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "scanNodeIds.contains(scanNodeId)@@@12@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Pair<Integer,Map<Integer,List<TScanRangeParams>>> filteredScanRanges = Pair.create(scanRanges.getKey(),filteredNodeScanRanges)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "List<List<Pair<Integer,Map<Integer,List<TScanRangeParams>>>>> perInstanceScanRanges = ListUtil.splitBySize(scanRange,expectedInstanceNum)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "addressToScanRanges.get(address).add(nodeScanRanges)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<List<Map.Entry<Integer,Map<Integer,List<TScanRangeParams>>>>> perInstanceScanRanges = ListUtil.splitBySize(scanRange,expectedInstanceNum)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "filteredNodeScanRanges.put(scanNodeId,nodeScanRanges.get(scanNodeId))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "int parallelExecInstanceNum@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "instanceParam.addBucketSeq(nodeScanRangeMap.first)@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "instanceParam.addBucketSeq(nodeScanRangeMap.getKey())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "instanceParam.perNodeScanRanges.get(nodeScanRange.getKey()).addAll(nodeScanRange.getValue())@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "PlanFragmentId fragmentId@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "FragmentExecParams params@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "BucketSeqToScanRange bucketSeqToScanRange = fragmentIdBucketSeqToScanRangeMap.get(fragmentId)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->55 [style = bold, label=""];
56->52 [style = bold, label=""];
11->20 [style = solid, label="expectedInstanceNum"];
5->28 [style = solid, label="expectedInstanceNum"];
5->20 [style = bold, label=""];
53->43 [style = solid, label="instanceParam"];
8->34 [style = dotted, label="false"];
43->42 [style = bold, label=""];
1->21 [style = dotted, label="true"];
24->27 [style = solid, label="filteredNodeScanRanges"];
14->17 [style = bold, label=""];
30->36 [style = bold, label=""];
47->10 [style = bold, label=""];
18->38 [style = dotted, label="true"];
9->6 [style = bold, label=""];
37->3 [style = bold, label=""];
37->31 [style = dotted, label="true"];
12->26 [style = dashed, label="0"];
5->11 [style = dotted, label="true"];
16->20 [style = solid, label="scanRange"];
2->36 [style = dashed, label="0"];
50->48 [style = dotted, label="true"];
43->53 [style = bold, label=""];
49->56 [style = bold, label=""];
38->26 [style = bold, label=""];
1->0 [style = dotted, label="true"];
19->15 [style = bold, label=""];
9->29 [style = bold, label=""];
5->55 [style = solid, label="expectedInstanceNum"];
22->30 [style = solid, label="params"];
25->40 [style = bold, label=""];
13->19 [style = dotted, label="false"];
16->39 [style = dashed, label="0"];
7->15 [style = solid, label="instanceParam"];
18->38 [style = bold, label=""];
11->28 [style = bold, label=""];
8->34 [style = bold, label=""];
28->30 [style = bold, label=""];
48->3 [style = solid, label="fragmentId"];
25->36 [style = bold, label=""];
1->22 [style = dotted, label="true"];
26->14 [style = bold, label=""];
18->12 [style = bold, label=""];
51->44 [style = bold, label=""];
50->3 [style = bold, label=""];
23->41 [style = dotted, label="true"];
27->26 [style = solid, label="filteredScanRanges"];
11->35 [style = dotted, label="true"];
19->2 [style = bold, label=""];
34->8 [style = bold, label=""];
17->51 [style = bold, label=""];
20->55 [style = dashed, label="0"];
35->28 [style = bold, label=""];
6->4 [style = bold, label=""];
10->20 [style = solid, label="expectedInstanceNum"];
19->13 [style = bold, label=""];
44->4 [style = bold, label=""];
7->2 [style = bold, label=""];
34->36 [style = bold, label=""];
31->11 [style = solid, label="parallelExecInstanceNum"];
53->56 [style = bold, label=""];
5->11 [style = bold, label=""];
51->42 [style = bold, label=""];
44->17 [style = solid, label="address"];
20->7 [style = bold, label=""];
30->40 [style = solid, label="instanceParam"];
22->54 [style = dashed, label="0"];
27->18 [style = bold, label=""];
8->25 [style = dotted, label="true"];
4->14 [style = bold, label=""];
8->15 [style = bold, label=""];
41->27 [style = bold, label=""];
34->40 [style = bold, label=""];
17->18 [style = dotted, label="true"];
39->5 [style = bold, label=""];
50->54 [style = dotted, label="true"];
32->3 [style = solid, label="fragmentId"];
3->45 [style = bold, label=""];
18->26 [style = bold, label=""];
35->28 [style = solid, label="expectedInstanceNum"];
16->42 [style = dashed, label="0"];
1->3 [style = bold, label=""];
42->47 [style = bold, label=""];
23->41 [style = bold, label=""];
21->3 [style = solid, label="fragmentId"];
14->38 [style = solid, label="address"];
45->44 [style = bold, label=""];
22->5 [style = solid, label="parallelExecInstanceNum"];
54->5 [style = solid, label="parallelExecInstanceNum"];
39->28 [style = solid, label="scanRange"];
3->9 [style = bold, label=""];
14->17 [style = dotted, label="true"];
52->43 [style = bold, label=""];
13->19 [style = bold, label=""];
17->12 [style = bold, label=""];
50->46 [style = dotted, label="true"];
40->39 [style = bold, label=""];
10->5 [style = bold, label=""];
37->32 [style = dotted, label="true"];
8->2 [style = bold, label=""];
13->8 [style = dotted, label="true"];
46->53 [style = solid, label="params"];
37->22 [style = dotted, label="true"];
21->9 [style = solid, label="fragmentId"];
36->8 [style = bold, label=""];
40->30 [style = bold, label=""];
54->10 [style = solid, label="parallelExecInstanceNum"];
8->13 [style = bold, label=""];
32->9 [style = solid, label="fragmentId"];
24->23 [style = bold, label=""];
11->20 [style = bold, label=""];
33->14 [style = bold, label=""];
56->49 [style = bold, label=""];
4->18 [style = solid, label="address"];
47->55 [style = solid, label="expectedInstanceNum"];
15->7 [style = bold, label=""];
23->27 [style = bold, label=""];
16->10 [style = bold, label=""];
12->51 [style = dashed, label="0"];
22->11 [style = solid, label="parallelExecInstanceNum"];
20->28 [style = dashed, label="0"];
42->55 [style = solid, label="scanRange"];
14->51 [style = bold, label=""];
31->35 [style = solid, label="parallelExecInstanceNum"];
52->56 [style = bold, label=""];
0->7 [style = solid, label="params"];
12->16 [style = bold, label=""];
15->16 [style = bold, label=""];
10->55 [style = bold, label=""];
10->5 [style = dotted, label="true"];
49->43 [style = bold, label=""];
26->39 [style = bold, label=""];
11->35 [style = bold, label=""];
56->52 [style = dotted, label="false"];
2->13 [style = bold, label=""];
29->33 [style = bold, label=""];
17->24 [style = bold, label=""];
12->4 [style = bold, label=""];
32->29 [style = solid, label="fragmentId"];
55->53 [style = bold, label=""];
4->51 [style = solid, label="nodeScanRanges"];
25->8 [style = bold, label=""];
56->49 [style = dotted, label="true"];
13->8 [style = bold, label=""];
41->23 [style = bold, label=""];
8->25 [style = bold, label=""];
17->18 [style = bold, label=""];
}
