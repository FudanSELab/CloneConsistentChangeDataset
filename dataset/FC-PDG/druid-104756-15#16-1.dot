digraph {
7 [style = filled, label = "final ParallelIndexSupervisorTaskClient taskClient = toolbox.getSupervisorTaskClientFactory().build(new ClientBasedTaskInfoProvider(toolbox.getIndexingServiceClient()),getId(),1,ingestionSchema.getTuningConfig().getChatHandlerTimeout(),ingestionSchema.getTuningConfig().getChatHandlerNumRetries())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final TaskToolbox toolbox@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final VersionedIntervalTimeline<String,DataSegment> timeline = VersionedIntervalTimeline.forSegments(allSegments)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "taskClient.report(supervisorTaskId,new PushedSegmentsReport(getId(),oldSegments,pushedSegments))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "LOG.warn(\"Intervals are missing in granularitySpec while this task is potentially overwriting existing segments. \" + \"Forced to use timeChunk lock.\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "return TaskStatus.success(getId())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TaskToolbox toolbox@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final InputSource inputSource = ingestionSchema.getIOConfig().getNonNullInputSource(ingestionSchema.getDataSchema().getParser())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Set<DataSegment> oldSegments = FluentIterable.from(timeline.findFullyOvershadowed()).transformAndConcat(null).transform(null).toSet()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "runTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "missingIntervalsInOverwriteMode@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(new ClientBasedTaskInfoProvider(indexingServiceClient),getId(),1,ingestionSchema.getTuningConfig().getChatHandlerTimeout(),ingestionSchema.getTuningConfig().getChatHandlerNumRetries())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final ParallelIndexSupervisorTaskClient taskClient = taskClientFactory.build(new ClientBasedTaskInfoProvider(indexingServiceClient),getId(),1,ingestionSchema.getTuningConfig().getChatHandlerTimeout(),ingestionSchema.getTuningConfig().getChatHandlerNumRetries())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "runTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final List<DataSegment> segments = generateSegments(toolbox,taskClient,inputSource,toolbox.getIndexingTmpDir())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final InputSource inputSource = ingestionSchema.getIOConfig().getNonNullInputSource(ingestionSchema.getDataSchema().getParser())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "runTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final Set<DataSegment> pushedSegments = generateAndPushSegments(toolbox,taskClient,inputSource,toolbox.getIndexingTmpDir())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final Set<DataSegment> allSegments = new HashSet<>(getTaskLockHelper().getLockedExistingSegments())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "allSegments.addAll(pushedSegments)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->10 [style = solid, label="taskClient"];
14->16 [style = bold, label=""];
16->15 [style = bold, label=""];
1->4 [style = bold, label=""];
19->16 [style = solid, label="allSegments"];
7->1 [style = bold, label=""];
0->4 [style = solid, label="toolbox"];
15->9 [style = solid, label="oldSegments"];
6->7 [style = dashed, label="0"];
10->19 [style = bold, label=""];
11->4 [style = bold, label=""];
12->11 [style = bold, label=""];
11->17 [style = dotted, label="true"];
4->2 [style = bold, label=""];
5->1 [style = solid, label="inputSource"];
1->10 [style = dashed, label="0"];
10->14 [style = solid, label="pushedSegments"];
2->10 [style = bold, label=""];
6->1 [style = bold, label=""];
3->5 [style = bold, label=""];
12->13 [style = dotted, label="true"];
9->18 [style = bold, label=""];
19->14 [style = bold, label=""];
1->4 [style = solid, label="segments"];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
15->9 [style = bold, label=""];
0->13 [style = dashed, label="0"];
4->10 [style = solid, label="inputSource"];
13->10 [style = solid, label="toolbox"];
3->0 [style = dotted, label="true"];
5->7 [style = bold, label=""];
11->17 [style = bold, label=""];
8->0 [style = dotted, label="true"];
6->1 [style = solid, label="taskClient"];
7->1 [style = solid, label="taskClient"];
0->1 [style = solid, label="toolbox"];
10->9 [style = solid, label="pushedSegments"];
17->4 [style = bold, label=""];
}
