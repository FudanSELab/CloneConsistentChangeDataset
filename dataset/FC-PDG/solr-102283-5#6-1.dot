digraph {
17 [style = filled, label = "float boost = entry.getValue()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "String text@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "boost != 1f@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String text@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "float boost = entry.getValue()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "type instanceof TextField@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "SchemaField sf = schema.getField(field)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "return simplify(bq.build())@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Analyzer analyzer = ((TextField)type).getMultiTermAnalyzer()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Query prefix = null@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "int fuzziness@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "BytesRef termBytes = TextField.analyzeMultiTerm(field,text,analyzer)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "SchemaField sf = schema.getField(field)@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "fuzzy = new FuzzyQuery(new Term(entry.getKey(),text),fuzziness)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "SchemaField sf = schema.getField(field)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "newPrefixQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "return simplify(bq.build())@@@29@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "bq.add(fuzzy,BooleanClause.Occur.SHOULD)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "prefix = sf.getType().getPrefixQuery(qParser,sf,term)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "fuzzy = new FuzzyQuery(new Term(entry.getKey(),term),fuzziness)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Query fuzzy@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "prefix = new BoostQuery(prefix,boost)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "bq.add(prefix,BooleanClause.Occur.SHOULD)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "boost != 1f@@@23@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Query prefix@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "fuzzy = new BoostQuery(fuzzy,boost)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "FieldType type = schema.getFieldType(field)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "prefix != null@@@21@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "String field = entry.getKey()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String term = termBytes.utf8ToString()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "newPrefixQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "BooleanQuery.Builder bq = new BooleanQuery.Builder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "prefix = sf.getType().getPrefixQuery(qParser,sf,term)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SchemaField sf = schema.getField(field)@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "prefix = type.getPrefixQuery(qParser,sf,text)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "termBytes != null@@@11@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "String term = TextField.analyzeMultiTerm(field,text,analyzer).utf8ToString()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "boost != 1f@@@19@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "newFuzzyQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8->16 [style = bold, label=""];
21->10 [style = bold, label=""];
8->30 [style = dotted, label="true"];
14->30 [style = solid, label="term"];
10->20 [style = solid, label="field"];
9->11 [style = bold, label=""];
0->31 [style = solid, label="fuzzy"];
14->25 [style = dashed, label="0"];
8->34 [style = dotted, label="false"];
20->0 [style = bold, label=""];
14->15 [style = solid, label="term"];
30->31 [style = solid, label="fuzzy"];
12->31 [style = dashed, label="0"];
26->19 [style = dotted, label="true"];
8->6 [style = bold, label=""];
3->17 [style = solid, label="prefix"];
19->12 [style = solid, label="prefix"];
21->28 [style = bold, label=""];
33->11 [style = bold, label=""];
12->2 [style = bold, label=""];
13->24 [style = dashed, label="0"];
12->10 [style = bold, label=""];
8->20 [style = bold, label=""];
12->2 [style = solid, label="prefix"];
15->0 [style = bold, label=""];
18->19 [style = solid, label="sf"];
0->21 [style = solid, label="prefix"];
0->12 [style = solid, label="prefix"];
16->3 [style = solid, label="sf"];
4->36 [style = bold, label=""];
24->12 [style = solid, label="prefix"];
32->34 [style = solid, label="fuzziness"];
2->28 [style = bold, label=""];
8->0 [style = dotted, label="false"];
25->26 [style = solid, label="termBytes"];
24->21 [style = solid, label="prefix"];
37->0 [style = solid, label="boost"];
16->3 [style = bold, label=""];
8->34 [style = bold, label=""];
35->31 [style = bold, label=""];
14->30 [style = bold, label=""];
33->32 [style = dotted, label="true"];
34->0 [style = solid, label="fuzzy"];
18->19 [style = bold, label=""];
7->25 [style = solid, label="text"];
20->0 [style = solid, label="sf"];
17->12 [style = solid, label="prefix"];
21->22 [style = dotted, label="true"];
21->17 [style = dotted, label="true"];
0->21 [style = bold, label=""];
17->0 [style = dashed, label="0"];
5->17 [style = bold, label=""];
3->0 [style = bold, label=""];
26->27 [style = bold, label=""];
35->0 [style = bold, label=""];
8->14 [style = dotted, label="true"];
25->26 [style = bold, label=""];
0->5 [style = solid, label="boost"];
26->18 [style = dotted, label="true"];
10->18 [style = solid, label="field"];
30->0 [style = solid, label="fuzzy"];
10->1 [style = solid, label="field"];
24->8 [style = bold, label=""];
8->16 [style = dotted, label="false"];
0->31 [style = bold, label=""];
27->18 [style = bold, label=""];
8->25 [style = dotted, label="true"];
4->24 [style = bold, label=""];
22->2 [style = bold, label=""];
27->19 [style = solid, label="term"];
26->27 [style = dotted, label="true"];
4->13 [style = bold, label=""];
8->15 [style = dotted, label="true"];
21->2 [style = dotted, label="true"];
31->38 [style = bold, label=""];
23->7 [style = dotted, label="true"];
2->10 [style = bold, label=""];
3->12 [style = solid, label="prefix"];
26->21 [style = bold, label=""];
29->34 [style = solid, label="text"];
10->25 [style = solid, label="field"];
17->12 [style = bold, label=""];
8->6 [style = dotted, label="true"];
0->17 [style = solid, label="boost"];
37->35 [style = solid, label="boost"];
11->10 [style = bold, label=""];
31->10 [style = bold, label=""];
4->8 [style = solid, label="type"];
33->29 [style = dotted, label="true"];
36->8 [style = bold, label=""];
15->12 [style = solid, label="prefix"];
7->32 [style = dashed, label="0"];
10->16 [style = solid, label="field"];
35->0 [style = dotted, label="true"];
37->35 [style = bold, label=""];
23->11 [style = bold, label=""];
9->7 [style = dotted, label="true"];
0->5 [style = bold, label=""];
7->3 [style = solid, label="text"];
19->21 [style = bold, label=""];
5->17 [style = dotted, label="true"];
1->15 [style = solid, label="sf"];
8->26 [style = dotted, label="true"];
8->3 [style = dotted, label="false"];
13->36 [style = dashed, label="0"];
17->12 [style = solid, label="boost"];
8->20 [style = dotted, label="false"];
15->17 [style = solid, label="prefix"];
1->15 [style = bold, label=""];
30->37 [style = bold, label=""];
17->22 [style = bold, label=""];
17->22 [style = solid, label="boost"];
32->30 [style = solid, label="fuzziness"];
24->2 [style = solid, label="prefix"];
14->1 [style = bold, label=""];
7->0 [style = solid, label="text"];
22->12 [style = dotted, label="true"];
6->14 [style = bold, label=""];
10->4 [style = solid, label="field"];
8->1 [style = dotted, label="true"];
19->2 [style = solid, label="prefix"];
34->37 [style = bold, label=""];
5->12 [style = bold, label=""];
34->31 [style = solid, label="fuzzy"];
22->12 [style = bold, label=""];
0->2 [style = solid, label="prefix"];
10->4 [style = bold, label=""];
19->21 [style = solid, label="prefix"];
13->8 [style = bold, label=""];
6->25 [style = solid, label="analyzer"];
21->17 [style = bold, label=""];
6->25 [style = bold, label=""];
}
