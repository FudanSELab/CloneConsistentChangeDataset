digraph {
6 [style = filled, label = "assertThat(this.context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\")@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "this.initializer.initialize(context)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.context,\"context.listener.classes=\" + .getName() + \",\" + .getName())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "StaticApplicationContext context = new StaticApplicationContext()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "this.context.getBeanFactory().registerSingleton(\"testListener\",this.listener)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "orderedInitialize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "this.context.refresh()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(context.getBeanFactory().getSingleton(\"b\")).isEqualTo(\"b\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "orderedInitialize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "this.listener.onApplicationEvent(new ApplicationEnvironmentPreparedEvent(new SpringApplication(),new String((((,this.context.getEnvironment()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(this.context.getBeanFactory().getSingleton(\"a\")).isEqualTo(\"a\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "orderedInitialize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "TestPropertySourceUtils.addInlinedPropertiesToEnvironment(context,\"context.initializer.classes=\" + .getName() + \",\" + .getName())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
8->10 [style = bold, label=""];
10->11 [style = solid, label="context"];
4->9 [style = dashed, label="0"];
7->0 [style = bold, label=""];
0->2 [style = bold, label=""];
13->12 [style = bold, label=""];
1->0 [style = bold, label=""];
3->12 [style = dashed, label="0"];
10->13 [style = solid, label="context"];
12->9 [style = bold, label=""];
4->6 [style = bold, label=""];
3->4 [style = bold, label=""];
11->13 [style = bold, label=""];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
