digraph {
1 [style = filled, label = "assertThat(union,is(mkSet(\"a\",\"b\",\"c\",\"d\",\"e\")))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final Set<String> diff = diff(null,oneSet,anotherSet)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final Set<String> union = union(null,oneSet,anotherSet)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testUnion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testUnion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(mkSet(\"a\",\"b\",\"c\",\"d\",\"e\"),union)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testDiff['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(,union.getClass())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(union.getClass(),equalTo())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "final Set<String> oneSet = mkSet(\"a\",\"b\",\"c\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Set<String> anotherSet = mkSet(\"c\",\"d\",\"e\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(diff.getClass(),equalTo())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(diff,is(mkSet(\"a\",\"b\")))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
1->4 [style = bold, label=""];
9->11 [style = solid, label="diff"];
9->11 [style = bold, label=""];
5->9 [style = bold, label=""];
2->1 [style = bold, label=""];
8->3 [style = bold, label=""];
5->2 [style = solid, label="anotherSet"];
3->9 [style = solid, label="oneSet"];
4->6 [style = dashed, label="0"];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
2->7 [style = solid, label="union"];
11->10 [style = bold, label=""];
2->9 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
7->6 [style = bold, label=""];
2->1 [style = solid, label="union"];
12->3 [style = bold, label=""];
2->7 [style = bold, label=""];
1->7 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
5->9 [style = solid, label="anotherSet"];
3->2 [style = solid, label="oneSet"];
}
