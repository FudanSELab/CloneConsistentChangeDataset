digraph {
23 [style = filled, label = "someSourceType = ConfigSourceType.REMOTE@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "upstreamRepo = mock()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "someNamespace = \"someName\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "someProperties.setProperty(defaultKey,defaultValue)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "defaultKey = \"defaultKey\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "someServerUrl = \"http://someServer\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "someProperties = new Properties()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "when(upstreamRepo.getSourceType()).thenReturn(someSourceType)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "someCluster = \"someCluster\"@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MockInjector.setInstance(,configServiceLocator)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "when(upstreamRepo.getConfig()).thenReturn(someProperties)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "MockInjector.setInstance(,new MockConfigUtil())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "MockInjector.setInstance(,propertiesFactory)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ServiceDTO serviceDTO = mock()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "PropertiesFactory propertiesFactory = mock()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "responseType = (Type)ReflectionTestUtils.getField(remoteConfigLongPollService,\"m_responseType\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "defaultValue = \"defaultValue\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "remoteConfigLongPollService = new RemoteConfigLongPollService()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MockInjector.setInstance(,httpUtil)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "someBaseDir.mkdir()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "someBaseDir = new File(\"src/test/resources/config-cache\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>(){@Override public Properties answer(InvocationOnMock invocation){return new Properties()}})@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "MockInjector.reset()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "someAppId = \"someAppId\"@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->26 [style = bold, label=""];
8->10 [style = bold, label=""];
18->24 [style = bold, label=""];
20->17 [style = bold, label=""];
12->5 [style = bold, label=""];
5->9 [style = bold, label=""];
25->22 [style = bold, label=""];
2->6 [style = bold, label=""];
0->2 [style = bold, label=""];
16->20 [style = solid, label="someProperties"];
5->15 [style = bold, label=""];
22->26 [style = solid, label="defaultValue"];
15->24 [style = solid, label="propertiesFactory"];
14->28 [style = bold, label=""];
16->25 [style = bold, label=""];
27->16 [style = bold, label=""];
9->8 [style = bold, label=""];
12->0 [style = bold, label=""];
3->4 [style = bold, label=""];
15->18 [style = bold, label=""];
2->7 [style = solid, label="someServerUrl"];
7->3 [style = bold, label=""];
17->12 [style = bold, label=""];
21->20 [style = bold, label=""];
19->14 [style = bold, label=""];
9->8 [style = solid, label="remoteConfigLongPollService"];
23->21 [style = bold, label=""];
23->17 [style = solid, label="someSourceType"];
26->23 [style = bold, label=""];
1->12 [style = bold, label=""];
28->27 [style = bold, label=""];
6->7 [style = bold, label=""];
25->26 [style = solid, label="defaultKey"];
4->5 [style = bold, label=""];
6->3 [style = solid, label="serviceDTO"];
13->0 [style = bold, label=""];
10->11 [style = bold, label=""];
}
