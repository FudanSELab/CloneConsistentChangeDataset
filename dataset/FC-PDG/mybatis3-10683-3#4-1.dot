digraph {
1 [style = filled, label = "int i = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i < 100@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "shouldDemonstrateHowAllObjectsAreFlushedAfterBasedOnTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Cache cache = new PerpetualCache(\"DefaultCache\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(i,cache.getObject(i))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "cache = new LoggingCache(cache)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "i++@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "cache.clear()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "cache.putObject(i,i)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "shouldFlushAllItemsOnDemand['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(0,cache.getSize())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "shouldFlushAllItemsOnDemand['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "cache = new SynchronizedCache(cache)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i < 5@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertNull(cache.getObject(4))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNull(cache.getObject(0))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Thread.sleep(5000)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Cache cache = new PerpetualCache(\"default\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cache = new ScheduledCache(cache)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "cache.putObject(i,i)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNotNull(cache.getObject(4))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "((ScheduledCache)cache).setClearInterval(2500)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
0->9 [style = solid, label="i"];
5->10 [style = bold, label=""];
11->16 [style = bold, label=""];
0->9 [style = bold, label=""];
9->0 [style = dotted, label="true"];
9->11 [style = bold, label=""];
1->9 [style = solid, label="i"];
19->20 [style = bold, label=""];
2->3 [style = bold, label=""];
3->18 [style = dashed, label="0"];
20->0 [style = bold, label=""];
18->15 [style = bold, label=""];
14->22 [style = dotted, label="true"];
1->8 [style = solid, label="i"];
18->15 [style = solid, label="cache"];
15->19 [style = bold, label=""];
9->8 [style = bold, label=""];
16->22 [style = bold, label=""];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
0->22 [style = solid, label="i"];
1->9 [style = bold, label=""];
15->20 [style = solid, label="cache"];
9->8 [style = dotted, label="true"];
8->0 [style = bold, label=""];
14->16 [style = dotted, label="true"];
1->0 [style = solid, label="i"];
11->5 [style = bold, label=""];
0->14 [style = solid, label="i"];
0->14 [style = bold, label=""];
9->14 [style = dashed, label="0"];
0->16 [style = solid, label="i"];
4->15 [style = dashed, label="0"];
0->11 [style = solid, label="i"];
7->6 [style = bold, label=""];
0->8 [style = solid, label="i"];
22->11 [style = solid, label="i"];
14->11 [style = dotted, label="true"];
22->14 [style = solid, label="i"];
22->16 [style = solid, label="i"];
4->1 [style = bold, label=""];
12->3 [style = bold, label=""];
3->4 [style = solid, label="cache"];
22->14 [style = bold, label=""];
14->11 [style = bold, label=""];
14->21 [style = bold, label=""];
17->18 [style = bold, label=""];
21->13 [style = bold, label=""];
}
