digraph {
6 [style = filled, label = "assertTrue(context.getSplitsAssignmentSequence().isEmpty())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verifyLastReadersAssignments(context,Arrays.asList(READER0,READER1),PRE_EXISTING_TOPICS,1)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testDiscoverPartitionsTriggersAssignments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "verifyLastReadersAssignments(context,Collections.singleton(READER1),PRE_EXISTING_TOPICS,2)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(context.getSplitsAssignmentSequence().isEmpty())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testReaderRegistrationTriggersAssignments['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "registerReader(context,enumerator,READER1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "runOneTimePartitionDiscovery(context)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "context.runNextOneTimeCallable()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "testDiscoverPartitionsTriggersAssignments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "verifyLastReadersAssignments(context,Collections.singleton(READER0),PRE_EXISTING_TOPICS,1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "enumerator.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "context.runNextOneTimeCallable()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "MockSplitEnumeratorContext<KafkaPartitionSplit> context = new MockSplitEnumeratorContext<>(NUM_SUBTASKS)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "registerReader(context,enumerator,READER0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
7->11 [style = bold, label=""];
4->8 [style = solid, label="context"];
12->5 [style = bold, label=""];
9->4 [style = bold, label=""];
0->2 [style = bold, label=""];
6->0 [style = bold, label=""];
3->4 [style = bold, label=""];
4->13 [style = solid, label="context"];
4->7 [style = solid, label="context"];
8->2 [style = bold, label=""];
13->7 [style = bold, label=""];
5->13 [style = bold, label=""];
14->12 [style = bold, label=""];
6->8 [style = bold, label=""];
7->6 [style = bold, label=""];
4->2 [style = solid, label="context"];
10->4 [style = bold, label=""];
4->5 [style = solid, label="context"];
5->7 [style = bold, label=""];
0->8 [style = dashed, label="0"];
1->14 [style = bold, label=""];
4->1 [style = bold, label=""];
4->11 [style = solid, label="context"];
}
