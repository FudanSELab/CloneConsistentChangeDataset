digraph {
1 [style = filled, label = "return new KafkaDynamicSink(schema.toPhysicalRowDataType(),keyEncodingFormat,new EncodingFormatWrapper(valueEncodingFormat),keyValueProjections.f0,keyValueProjections.f1,keyPrefix,tableOptions.get(TOPIC).get(0),properties,null,KafkaSinkSemantic.AT_LEAST_ONCE,true,parallelism)@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "validateSink(tableOptions,keyEncodingFormat,valueEncodingFormat,schema)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Duration batchInterval = tableOptions.get(SINK_BUFFER_FLUSH_INTERVAL)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "createDynamicTableSink['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Tuple2<int((,int((> keyValueProjections = createKeyValueProjections(context.getCatalogTable())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Properties properties = getKafkaProperties(context.getCatalogTable().getOptions())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "helper.validateExcept(KafkaOptions.PROPERTIES_PREFIX)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Properties properties = getKafkaProperties(context.getCatalogTable().getOptions())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this,context)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Integer parallelism = tableOptions.get(FactoryUtil.SINK_PARALLELISM)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SinkBufferFlushMode flushMode = new SinkBufferFlushMode(batchSize,batchInterval.toMillis())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "TableSchema schema = context.getCatalogTable().getSchema()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EncodingFormat<SerializationSchema<RowData>> valueEncodingFormat = helper.discoverEncodingFormat(,VALUE_FORMAT)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "validateTableOptions(tableOptions,keyEncodingFormat,valueEncodingFormat,schema)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "return new KafkaDynamicSink(schema.toPhysicalRowDataType(),schema.toPhysicalRowDataType(),keyEncodingFormat,new EncodingFormatWrapper(valueEncodingFormat),keyValueProjections.f0,keyValueProjections.f1,keyPrefix,tableOptions.get(TOPIC).get(0),properties,null,KafkaSinkSemantic.AT_LEAST_ONCE,true,flushMode,parallelism)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "DecodingFormat<DeserializationSchema<RowData>> keyDecodingFormat = helper.discoverDecodingFormat(,KEY_FORMAT)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "createDynamicTableSource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "createDynamicTableSink['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String keyPrefix = tableOptions.getOptional(KEY_FIELDS_PREFIX).orElse(null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "return new KafkaDynamicSource(schema.toPhysicalRowDataType(),keyDecodingFormat,new DecodingFormatWrapper(valueDecodingFormat),keyValueProjections.f0,keyValueProjections.f1,keyPrefix,KafkaOptions.getSourceTopics(tableOptions),KafkaOptions.getSourceTopicPattern(tableOptions),properties,earliest,Collections.emptyMap(),0,true)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final String keyPrefix = tableOptions.getOptional(KEY_FIELDS_PREFIX).orElse(null)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this,autoCompleteSchemaRegistrySubject(context))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Context context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "DecodingFormat<DeserializationSchema<RowData>> valueDecodingFormat = helper.discoverDecodingFormat(,VALUE_FORMAT)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "ReadableConfig tableOptions = helper.getOptions()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int batchSize = tableOptions.get(SINK_BUFFER_FLUSH_MAX_ROWS)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Context context@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "EncodingFormat<SerializationSchema<RowData>> keyEncodingFormat = helper.discoverEncodingFormat(,KEY_FORMAT)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "validateTableOptions(tableOptions,keyDecodingFormat,valueDecodingFormat,schema)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "StartupMode earliest = StartupMode.EARLIEST@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final ReadableConfig tableOptions = helper.getOptions()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
13->10 [style = bold, label=""];
6->21 [style = dashed, label="0"];
5->8 [style = bold, label=""];
21->24 [style = solid, label="keyDecodingFormat"];
9->0 [style = bold, label=""];
3->24 [style = bold, label=""];
0->6 [style = bold, label=""];
5->26 [style = dashed, label="0"];
2->1 [style = bold, label=""];
6->18 [style = solid, label="keyEncodingFormat"];
30->27 [style = dotted, label="true"];
30->23 [style = bold, label=""];
6->12 [style = bold, label=""];
26->22 [style = bold, label=""];
22->29 [style = bold, label=""];
12->13 [style = solid, label="valueEncodingFormat"];
4->27 [style = dashed, label="0"];
2->17 [style = solid, label="parallelism"];
14->19 [style = bold, label=""];
10->26 [style = bold, label=""];
8->1 [style = solid, label="properties"];
19->17 [style = bold, label=""];
11->4 [style = dotted, label="true"];
21->25 [style = bold, label=""];
2->1 [style = solid, label="parallelism"];
11->9 [style = bold, label=""];
25->7 [style = bold, label=""];
0->28 [style = dashed, label="0"];
0->18 [style = solid, label="tableOptions"];
9->23 [style = dashed, label="0"];
8->17 [style = solid, label="properties"];
12->18 [style = solid, label="valueEncodingFormat"];
12->7 [style = bold, label=""];
12->1 [style = solid, label="valueEncodingFormat"];
7->3 [style = bold, label=""];
28->24 [style = solid, label="tableOptions"];
21->20 [style = solid, label="keyDecodingFormat"];
3->18 [style = bold, label=""];
2->16 [style = bold, label=""];
6->13 [style = solid, label="keyEncodingFormat"];
28->20 [style = solid, label="tableOptions"];
23->28 [style = bold, label=""];
8->22 [style = dashed, label="0"];
1->20 [style = dashed, label="0"];
26->20 [style = solid, label="keyPrefix"];
6->1 [style = solid, label="keyEncodingFormat"];
29->20 [style = bold, label=""];
28->21 [style = bold, label=""];
3->13 [style = solid, label="schema"];
15->4 [style = dotted, label="true"];
12->25 [style = dashed, label="0"];
10->5 [style = bold, label=""];
13->24 [style = dashed, label="0"];
18->10 [style = bold, label=""];
22->20 [style = solid, label="properties"];
8->2 [style = bold, label=""];
25->24 [style = solid, label="valueDecodingFormat"];
4->9 [style = solid, label="context"];
15->9 [style = bold, label=""];
5->17 [style = solid, label="keyPrefix"];
3->24 [style = solid, label="schema"];
3->18 [style = solid, label="schema"];
3->13 [style = bold, label=""];
16->14 [style = bold, label=""];
0->13 [style = solid, label="tableOptions"];
5->1 [style = solid, label="keyPrefix"];
29->20 [style = solid, label="earliest"];
13->18 [style = dashed, label="0"];
6->17 [style = solid, label="keyEncodingFormat"];
12->17 [style = solid, label="valueEncodingFormat"];
19->17 [style = solid, label="flushMode"];
16->19 [style = solid, label="batchSize"];
27->23 [style = solid, label="context"];
25->20 [style = solid, label="valueDecodingFormat"];
}
