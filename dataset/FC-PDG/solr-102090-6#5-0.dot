digraph {
3 [style = filled, label = "BooleanQuery bq = (BooleanQuery)q@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return newBq@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "!(q instanceof BooleanQuery)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Collection<BooleanClause> clauses = bq.clauses()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "WrappedQuery newQ = (WrappedQuery)q.clone()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "clauses.size() == 1@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "clauses.size() == 0@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "q instanceof WrappedQuery@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "!clause.isProhibited()@@@16@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Query subQ = ((WrappedQuery)q).getWrappedQuery()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return q@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "return q@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "BooleanClause clause@@@25@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "clauses@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "getAbs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "newBq.setBoost(bq.getBoost())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "return q@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "return false@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Query negClause = clauses.iterator().next().getQuery()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "newBqB.add(clause.getQuery(),BooleanClause.Occur.SHOULD)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "BooleanQuery bq = (BooleanQuery)q@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Query q@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "!(q instanceof BooleanQuery)@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Query newBq = newBqB.build()@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "clauses.size() == 0@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "!clause.isProhibited()@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "clauses.size() == 0@@@14@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return q@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "List<BooleanClause> clauses = bq.clauses()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<BooleanClause> clauses = bq.clauses()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "!clause.isProhibited()@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "return false@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "BooleanQuery newBq = new BooleanQuery(bq.isCoordDisabled())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "BooleanQuery.Builder newBqB = new BooleanQuery.Builder()@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "newBqB.setDisableCoord(bq.isCoordDisabled())@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "Query absSubQ = getAbs(subQ)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "newQ.setWrappedQuery(absSubQ)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "isNegative['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "clauses@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Query negClause = clauses.get(0).getQuery()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "newBq.setBoost(bq.getBoost())@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "newBq.add(clause.getQuery(),BooleanClause.Occur.SHOULD)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "return q@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "return negClause@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "return true@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return newQ@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "absSubQ == subQ@@@6@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "getAbs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Query q@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "return q@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "return false@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15->0 [style = solid, label="q"];
14->25 [style = bold, label=""];
14->19 [style = dotted, label="true"];
13->28 [style = dotted, label="true"];
6->22 [style = bold, label=""];
22->37 [style = bold, label=""];
14->26 [style = dotted, label="true"];
10->38 [style = dashed, label="0"];
38->12 [style = bold, label=""];
1->21 [style = dotted, label="true"];
24->33 [style = dotted, label="true"];
21->24 [style = bold, label=""];
32->34 [style = bold, label=""];
3->16 [style = bold, label=""];
40->43 [style = dotted, label="true"];
34->9 [style = solid, label="newBq"];
22->4 [style = bold, label=""];
23->32 [style = dashed, label="0"];
15->45 [style = dashed, label="0"];
44->46 [style = bold, label=""];
41->48 [style = bold, label=""];
17->15 [style = dotted, label="true"];
22->38 [style = dotted, label="true"];
17->14 [style = bold, label=""];
10->12 [style = bold, label=""];
1->21 [style = bold, label=""];
18->27 [style = solid, label="absSubQ"];
22->20 [style = dotted, label="false"];
15->28 [style = solid, label="q"];
30->14 [style = bold, label=""];
3->39 [style = bold, label=""];
22->9 [style = dotted, label="false"];
28->3 [style = bold, label=""];
27->5 [style = bold, label=""];
21->35 [style = bold, label=""];
25->26 [style = solid, label="subQ"];
14->18 [style = dotted, label="true"];
16->39 [style = dashed, label="0"];
14->2 [style = dotted, label="true"];
46->42 [style = bold, label=""];
15->21 [style = solid, label="q"];
48->49 [style = bold, label=""];
45->42 [style = solid, label="q"];
48->41 [style = bold, label=""];
36->9 [style = bold, label=""];
22->23 [style = dotted, label="true"];
22->29 [style = dotted, label="false"];
22->4 [style = dotted, label="false"];
15->7 [style = solid, label="q"];
22->36 [style = dotted, label="false"];
14->47 [style = dashed, label="0"];
24->48 [style = dashed, label="0"];
37->29 [style = bold, label=""];
41->49 [style = bold, label=""];
13->7 [style = dotted, label="true"];
19->2 [style = bold, label=""];
10->12 [style = solid, label="negClause"];
14->27 [style = dotted, label="true"];
15->26 [style = solid, label="q"];
22->38 [style = bold, label=""];
38->12 [style = solid, label="negClause"];
18->26 [style = solid, label="absSubQ"];
41->48 [style = dotted, label="true"];
26->0 [style = bold, label=""];
29->32 [style = bold, label=""];
34->36 [style = bold, label=""];
14->25 [style = dotted, label="true"];
4->9 [style = solid, label="newBq"];
13->28 [style = bold, label=""];
22->32 [style = dotted, label="true"];
21->35 [style = dotted, label="true"];
22->8 [style = dotted, label="false"];
15->24 [style = solid, label="q"];
22->11 [style = dotted, label="false"];
44->45 [style = dotted, label="true"];
27->26 [style = bold, label=""];
6->24 [style = dotted, label="true"];
47->42 [style = bold, label=""];
46->47 [style = dotted, label="true"];
18->26 [style = bold, label=""];
25->18 [style = bold, label=""];
6->24 [style = bold, label=""];
35->24 [style = bold, label=""];
5->19 [style = bold, label=""];
24->33 [style = bold, label=""];
39->21 [style = bold, label=""];
22->37 [style = dotted, label="false"];
1->6 [style = bold, label=""];
14->5 [style = dotted, label="true"];
15->3 [style = solid, label="q"];
16->1 [style = bold, label=""];
33->24 [style = bold, label=""];
22->10 [style = bold, label=""];
43->41 [style = bold, label=""];
25->18 [style = solid, label="subQ"];
14->13 [style = bold, label=""];
40->43 [style = bold, label=""];
4->37 [style = dashed, label="0"];
15->35 [style = solid, label="q"];
22->34 [style = dotted, label="false"];
33->22 [style = bold, label=""];
0->5 [style = bold, label=""];
22->31 [style = dotted, label="false"];
21->43 [style = dashed, label="0"];
22->10 [style = dotted, label="true"];
42->50 [style = bold, label=""];
21->6 [style = bold, label=""];
25->27 [style = solid, label="subQ"];
26->5 [style = bold, label=""];
15->33 [style = solid, label="q"];
27->26 [style = dotted, label="true"];
5->2 [style = solid, label="newQ"];
18->19 [style = solid, label="absSubQ"];
46->47 [style = bold, label=""];
24->22 [style = bold, label=""];
7->3 [style = bold, label=""];
22->12 [style = dotted, label="true"];
2->13 [style = bold, label=""];
13->3 [style = bold, label=""];
18->27 [style = bold, label=""];
13->7 [style = bold, label=""];
50->40 [style = bold, label=""];
40->41 [style = bold, label=""];
15->14 [style = solid, label="q"];
4->11 [style = bold, label=""];
30->15 [style = dotted, label="true"];
24->6 [style = bold, label=""];
23->9 [style = bold, label=""];
11->23 [style = bold, label=""];
26->0 [style = dotted, label="true"];
}
