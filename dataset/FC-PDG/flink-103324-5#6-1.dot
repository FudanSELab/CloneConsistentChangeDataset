digraph {
22 [style = filled, label = "windowFunction.process(42L,w,ctx,23L,c)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "windowFunction.close()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "AllWindowFunctionMock mock = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testInternalSingleValueWindowFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "StreamingFunctionUtils.setOutputType(windowFunction,stringType,execConf)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "verify(mock).close()@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "InternalSingleValueAllWindowFunction<Long,String,TimeWindow> windowFunction = new InternalSingleValueAllWindowFunction<>(mock)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ExecutionConfig execConf = new ExecutionConfig()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "windowFunction.open(config)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "WindowFunctionMock mock = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "RuntimeContext rCtx = mock()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "windowFunction.setRuntimeContext(rCtx)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "verify(mock).close()@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "testInternalSingleValueAllWindowFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "windowFunction.apply(42L,w,23L,c)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "windowFunction.apply(((byte)0),w,23L,c)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "verify(mock).apply(eq(42L),eq(w),(Iterable<Long>)argThat(IsIterableContainingInOrder.contains(23L)),eq(c))@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TimeWindow w = mock()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Collector<String> c = (Collector<String>)mock()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testInternalSingleValueWindowFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Configuration config = new Configuration()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TypeInformation<String> stringType = BasicTypeInfo.STRING_TYPE_INFO@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(mock).setOutputType(stringType,execConf)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "InternalWindowFunction.InternalWindowContext ctx = mock()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "verify(mock).open(config)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "execConf.setParallelism(42)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "verify(mock).apply(eq(w),(Iterable<Long>)argThat(IsIterableContainingInOrder.contains(23L)),eq(c))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "verify(mock).setRuntimeContext(rCtx)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "InternalSingleValueWindowFunction<Long,String,Long,TimeWindow> windowFunction = new InternalSingleValueWindowFunction<>(mock)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->17 [style = solid, label="mock"];
8->22 [style = solid, label="w"];
12->17 [style = solid, label="mock"];
12->8 [style = solid, label="mock"];
4->17 [style = bold, label=""];
15->9 [style = solid, label="c"];
8->15 [style = bold, label=""];
3->26 [style = dashed, label="0"];
15->3 [style = solid, label="c"];
3->21 [style = dashed, label="0"];
10->4 [style = solid, label="config"];
7->14 [style = solid, label="execConf"];
17->11 [style = solid, label="rCtx"];
8->18 [style = solid, label="w"];
15->21 [style = bold, label=""];
16->25 [style = dashed, label="0"];
8->9 [style = solid, label="w"];
22->9 [style = bold, label=""];
14->10 [style = bold, label=""];
7->1 [style = solid, label="execConf"];
28->9 [style = bold, label=""];
7->0 [style = bold, label=""];
16->1 [style = solid, label="windowFunction"];
21->22 [style = solid, label="ctx"];
25->1 [style = solid, label="windowFunction"];
12->16 [style = bold, label=""];
16->2 [style = bold, label=""];
11->19 [style = bold, label=""];
15->3 [style = bold, label=""];
2->1 [style = solid, label="stringType"];
12->21 [style = solid, label="mock"];
8->28 [style = solid, label="w"];
17->11 [style = bold, label=""];
25->2 [style = bold, label=""];
19->8 [style = bold, label=""];
15->26 [style = bold, label=""];
3->18 [style = bold, label=""];
15->18 [style = solid, label="c"];
10->5 [style = solid, label="config"];
10->5 [style = bold, label=""];
24->8 [style = solid, label="mock"];
24->15 [style = solid, label="mock"];
15->22 [style = solid, label="c"];
21->22 [style = bold, label=""];
0->1 [style = bold, label=""];
24->25 [style = bold, label=""];
15->26 [style = solid, label="c"];
12->15 [style = solid, label="mock"];
5->4 [style = bold, label=""];
12->24 [style = dashed, label="0"];
20->12 [style = bold, label=""];
18->9 [style = bold, label=""];
13->23 [style = bold, label=""];
18->28 [style = dashed, label="0"];
8->3 [style = solid, label="w"];
1->14 [style = bold, label=""];
27->24 [style = bold, label=""];
26->28 [style = bold, label=""];
2->7 [style = bold, label=""];
17->19 [style = solid, label="rCtx"];
24->25 [style = solid, label="mock"];
12->16 [style = solid, label="mock"];
2->14 [style = solid, label="stringType"];
15->28 [style = solid, label="c"];
9->13 [style = bold, label=""];
8->26 [style = solid, label="w"];
6->12 [style = bold, label=""];
}
