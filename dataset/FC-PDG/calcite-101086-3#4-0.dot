digraph {
1 [style = filled, label = "f.checkImplies(node1,node1)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "f.checkImplies(iEq30,iNe10)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "f.checkImplies(iNe10,iNe10)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final RexNode iNe10 = f.ne(f.i,f.literal(10))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testSimpleEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final RexNode node2 = f.ge(f.sh,f.shortLiteral((short)11))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "f.checkImplies(node1,node2)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "f.checkNotImplies(node1,node2)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final RexNode node2 = f.ne(f.i,f.literal(10))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "f.checkNotImplies(iNe10,iEq30)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "f.checkImplies(node2,node1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "f.checkNotImplies(iNe30,iEq30)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "final RexNode iEq30 = f.eq(f.i,f.literal(30))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final RexNode iNe30 = f.ne(f.i,f.literal(30))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "final RexNode node1 = f.ge(f.sh,f.shortLiteral((short)10))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final RexNode node1 = f.eq(f.i,f.literal(30))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final Fixture f = new Fixture()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "f.checkImplies(iEq30,iEq30)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testSimpleEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "testSimpleShort['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "f.checkNotImplies(node2,node1)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7->13 [style = bold, label=""];
8->10 [style = solid, label="iEq30"];
13->10 [style = bold, label=""];
15->10 [style = solid, label="iNe30"];
0->16 [style = bold, label=""];
19->18 [style = bold, label=""];
19->20 [style = solid, label="node2"];
8->12 [style = solid, label="iEq30"];
2->20 [style = dashed, label="0"];
11->9 [style = solid, label="iNe10"];
4->16 [style = dashed, label="0"];
16->18 [style = solid, label="node1"];
2->3 [style = bold, label=""];
5->3 [style = solid, label="node2"];
6->0 [style = bold, label=""];
4->1 [style = solid, label="node1"];
5->2 [style = solid, label="node2"];
11->13 [style = solid, label="iNe10"];
19->18 [style = solid, label="node2"];
1->18 [style = dashed, label="0"];
9->7 [style = bold, label=""];
12->9 [style = bold, label=""];
16->19 [style = bold, label=""];
8->13 [style = solid, label="iEq30"];
11->7 [style = solid, label="iNe10"];
11->15 [style = bold, label=""];
5->1 [style = bold, label=""];
18->20 [style = bold, label=""];
2->12 [style = dashed, label="0"];
17->0 [style = bold, label=""];
14->0 [style = bold, label=""];
5->11 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
0->4 [style = bold, label=""];
0->8 [style = bold, label=""];
4->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
15->12 [style = bold, label=""];
16->20 [style = solid, label="node1"];
8->11 [style = bold, label=""];
5->19 [style = dashed, label="0"];
4->5 [style = bold, label=""];
4->2 [style = solid, label="node1"];
4->3 [style = solid, label="node1"];
8->7 [style = solid, label="iEq30"];
}
