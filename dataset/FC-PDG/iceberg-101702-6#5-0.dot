digraph {
3 [style = filled, label = "validateSnapshot(start,table.currentSnapshot(),FILE_A)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(\"Table order ID should match\",0,table.sortOrder().orderId())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(\"Version should be 2\",2L,(long)version())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "table.refresh()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(\"Partition spec should have no fields\",0,table.spec().fields().size())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Schema schema = table.schema()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Schema newSchema = new Schema(required(4,\"id\",Types.IntegerType.get()),required(5,\"data\",Types.StringType.get()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Version should be 1\",1L,(long)version())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(\"Table should have 1 order\",1,table.sortOrders().size())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testReplaceTransaction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertNull(\"Table should not have a current snapshot\",table.currentSnapshot())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Schema should use new schema, not compatible with previous\",new Schema(required(3,\"obj_id\",Types.IntegerType.get())).asStruct(),table.schema().asStruct())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "table.newAppend().appendFile(FILE_A).commit()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "replace.commitTransaction()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testReplaceWithIncompatibleSchemaUpdate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testReplaceWithIncompatibleSchemaUpdate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(\"Schema should match previous schema\",schema.asStruct(),table.schema().asStruct())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Snapshot start = table.currentSnapshot()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(\"Table should be unsorted\",table.sortOrder().isUnsorted())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Transaction replace = TestTables.beginReplace(tableDir,\"test\",newSchema,unpartitioned())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Schema newSchema = new Schema(required(4,\"obj_id\",Types.IntegerType.get()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(\"Schema should use new schema, not compatible with previous\",new Schema(required(1,\"obj_id\",Types.IntegerType.get())).asStruct(),table.schema().asStruct())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->10 [style = bold, label=""];
16->15 [style = bold, label=""];
5->3 [style = solid, label="start"];
1->4 [style = bold, label=""];
3->1 [style = bold, label=""];
21->19 [style = bold, label=""];
4->6 [style = bold, label=""];
7->12 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
8->12 [style = dashed, label="0"];
5->18 [style = bold, label=""];
8->14 [style = dashed, label="0"];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
20->5 [style = bold, label=""];
19->16 [style = bold, label=""];
7->14 [style = bold, label=""];
10->1 [style = solid, label="newSchema"];
10->5 [style = bold, label=""];
5->0 [style = bold, label=""];
11->10 [style = bold, label=""];
20->1 [style = solid, label="newSchema"];
10->20 [style = dashed, label="0"];
6->9 [style = bold, label=""];
18->0 [style = bold, label=""];
14->21 [style = bold, label=""];
17->20 [style = bold, label=""];
}
