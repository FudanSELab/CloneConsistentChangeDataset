digraph {
6 [style = filled, label = "StreamExpression expression = new StreamExpression(factory.getFunctionName(getClass()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),val.replace(\"\"\",\"\\\"\")))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),fqParam.replace(\"\"\",\"\\\"\")))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "sb.append(mapping.getValue())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),value))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "{StringBuilder builder = new StringBuilder()for (FieldComparator sort : bucketSorts){if (0 != builder.length()) {builder.append(\",\")}builder.append(sort.toExpression(factory))}expression.addParameter(new StreamExpressionNamedParameter(\"bucketSorts\",builder.toString()))}@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "expression.addParameter(metric.toExpression(factory))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "toExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),String.join(\",\",param.getValue())))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return expression@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String fqParam@@@8@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "fieldMappings.entrySet()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "return expression@@@31@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\",zkHost))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "sb.length() > 0@@@22@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "toExpression['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Entry<String,String> mapping@@@13@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "param.getValue()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "sb.append(\",\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"aliases\",sb.toString()))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "value = value.replace(\"\"\",\"\\\"\")@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "fieldMappings.entrySet()@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "toExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "return expression@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "sb.append(\"=\")@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "null != fieldMappings && 0 != fieldMappings.size()@@@11@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "{StringBuilder builder = new StringBuilder()for (Bucket bucket : buckets){if (0 != builder.length()) {builder.append(\",\")}builder.append(bucket.toString())}expression.addParameter(new StreamExpressionNamedParameter(\"buckets\",builder.toString()))}@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ModifiableSolrParams mParams = new ModifiableSolrParams(SolrParams.toMultiMap(params.toNamedList()))@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\",zkHost))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "ModifiableSolrParams tmpParams = new ModifiableSolrParams(params)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "sb.append(\"=\")@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "sb.length() > 0@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "sb.append(mapping.getKey())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"bucketSizeLimit\",Integer.toString(bucketSizeLimit)))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "StringBuilder sb = new StringBuilder()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String value = String.join(\",\",param.getValue())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "param.getKey().equals(\"fq\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "expression.addParameter(collection)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
39->36 [style = dotted, label="true"];
29->5 [style = bold, label=""];
21->15 [style = bold, label=""];
29->5 [style = dotted, label="true"];
29->0 [style = bold, label=""];
29->23 [style = dotted, label="true"];
27->15 [style = bold, label=""];
17->8 [style = dotted, label="true"];
15->17 [style = bold, label=""];
38->30 [style = bold, label=""];
21->23 [style = dotted, label="true"];
22->16 [style = dotted, label="true"];
22->38 [style = dashed, label="0"];
13->22 [style = bold, label=""];
32->3 [style = bold, label=""];
17->21 [style = bold, label=""];
40->37 [style = bold, label=""];
7->11 [style = bold, label=""];
8->23 [style = bold, label=""];
10->14 [style = bold, label=""];
12->21 [style = bold, label=""];
6->32 [style = dashed, label="0"];
14->22 [style = bold, label=""];
18->12 [style = bold, label=""];
10->14 [style = solid, label="value"];
26->20 [style = dotted, label="true"];
3->33 [style = bold, label=""];
26->6 [style = bold, label=""];
19->6 [style = bold, label=""];
5->17 [style = bold, label=""];
7->12 [style = dotted, label="true"];
32->35 [style = solid, label="expression"];
22->28 [style = dashed, label="0"];
28->24 [style = bold, label=""];
13->33 [style = dashed, label="0"];
5->7 [style = bold, label=""];
15->12 [style = bold, label=""];
22->1 [style = dotted, label="false"];
22->9 [style = dotted, label="true"];
7->17 [style = dotted, label="true"];
22->4 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
7->21 [style = dotted, label="true"];
6->0 [style = solid, label="expression"];
21->23 [style = bold, label=""];
17->8 [style = bold, label=""];
7->2 [style = dotted, label="true"];
22->14 [style = dotted, label="false"];
29->17 [style = dotted, label="true"];
36->34 [style = solid, label="factory"];
7->17 [style = bold, label=""];
34->40 [style = bold, label=""];
22->16 [style = bold, label=""];
23->15 [style = bold, label=""];
29->7 [style = dotted, label="true"];
0->11 [style = bold, label=""];
7->0 [style = dotted, label="true"];
7->15 [style = dotted, label="true"];
17->23 [style = bold, label=""];
31->34 [style = bold, label=""];
3->28 [style = bold, label=""];
30->31 [style = bold, label=""];
39->32 [style = bold, label=""];
7->18 [style = dotted, label="true"];
16->5 [style = bold, label=""];
22->1 [style = bold, label=""];
37->35 [style = bold, label=""];
29->25 [style = dotted, label="true"];
14->5 [style = bold, label=""];
23->27 [style = bold, label=""];
19->20 [style = dotted, label="true"];
29->27 [style = dotted, label="true"];
36->31 [style = solid, label="factory"];
24->29 [style = bold, label=""];
29->12 [style = dotted, label="true"];
16->22 [style = bold, label=""];
29->15 [style = dotted, label="true"];
12->0 [style = bold, label=""];
15->18 [style = bold, label=""];
6->11 [style = solid, label="expression"];
20->36 [style = dashed, label="0"];
3->13 [style = bold, label=""];
33->38 [style = bold, label=""];
22->10 [style = dotted, label="false"];
1->10 [style = bold, label=""];
}
