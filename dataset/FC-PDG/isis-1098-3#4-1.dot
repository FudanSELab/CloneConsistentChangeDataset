digraph {
2 [style = filled, label = "assertTrue(validator.anyMatchesContaining(Identifier.classIdentifier(LogicalType.fqcn()),\"InvalidOrphanedActionSupport#hideOrphaned: has annotation @MemberSupport, \" + \"is assumed to support\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "orphanedCollectionSupport_shouldFail['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(validator.anyMatchesContaining(Identifier.classIdentifier(LogicalType.fqcn()),\"InvalidOrphanedActionSupport#hideMe: \" + \"is assumed to support a property, collection or action. \" + \"Unmet constraint(s): unsupported method signature or orphaned \" + \"(not associated with a member)\"))@@@4@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "orphanedActionSupport_shouldFail['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "val tester = testerFactory.objectTester()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "validator.assertAnyFailuresContaining(Identifier.classIdentifier(LogicalType.fqcn()),\"InvalidOrphanedActionSupport#hideOrphaned(): has annotation @Domain.Include, \" + \"is assumed to support\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "orphanedActionSupport_shouldFail['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tester.assertValidationFailureOnMember(ProgrammingModelConstants.Validation.ORPHANED_METHOD,\"hideMe()\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertTrue(validator.anyMatchesContaining(Identifier.classIdentifier(LogicalType.fqcn()),\"InvalidOrphanedCollectionSupport#hideMyCollection: has annotation @MemberSupport, \" + \"is assumed to support\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(validator.anyMatchesContaining(Identifier.classIdentifier(LogicalType.fqcn()),\"InvalidOrphanedCollectionSupport#hideMe: \" + \"is assumed to support a property, collection or action. \" + \"Unmet constraint(s): unsupported method signature or orphaned \" + \"(not associated with a member)\"))@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
1->7 [style = dashed, label="0"];
2->3 [style = dashed, label="0"];
9->8 [style = bold, label=""];
4->6 [style = bold, label=""];
3->4 [style = bold, label=""];
2->8 [style = dashed, label="0"];
2->1 [style = bold, label=""];
8->7 [style = bold, label=""];
0->2 [style = bold, label=""];
}
