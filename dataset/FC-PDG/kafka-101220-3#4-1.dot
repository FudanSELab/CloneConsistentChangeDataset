digraph {
21 [style = filled, label = "assertEquals(1,segments.get(1).id)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "segments.getOrCreateSegmentIfLive(3,context,streamTime)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "updateStreamTimeAndCreateSegment(4)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final List<TimestampedSegment> segments = this.segments.segments(0,2 * SEGMENT_INTERVAL)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final long streamTime = updateStreamTimeAndCreateSegment(4)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "updateStreamTimeAndCreateSegment(0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final List<TimestampedSegment> segments = this.segments.segments(0,2 * SEGMENT_INTERVAL,true)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "shouldGetSegmentsWithinTimeRange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final List<TimestampedSegment> segments = this.segments.segments(0,2 * SEGMENT_INTERVAL)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(3,segments.size())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "updateStreamTimeAndCreateSegment(1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(3,segments.size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "updateStreamTimeAndCreateSegment(2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "updateStreamTimeAndCreateSegment(0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "segments.getOrCreateSegmentIfLive(4,context,streamTime)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "updateStreamTimeAndCreateSegment(3)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(2,segments.get(2).id)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "segments.getOrCreateSegmentIfLive(1,context,streamTime)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "segments.getOrCreateSegmentIfLive(2,context,streamTime)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "shouldGetSegmentsWithinTimeRangeOutOfOrder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "shouldGetSegmentsWithinTimeRange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "updateStreamTimeAndCreateSegment(1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(0,segments.get(0).id)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
16->15 [style = bold, label=""];
7->11 [style = bold, label=""];
11->16 [style = dashed, label="0"];
3->14 [style = bold, label=""];
4->10 [style = solid, label="streamTime"];
4->2 [style = solid, label="streamTime"];
6->0 [style = bold, label=""];
4->5 [style = solid, label="streamTime"];
21->18 [style = bold, label=""];
11->15 [style = bold, label=""];
14->1 [style = bold, label=""];
4->0 [style = bold, label=""];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
19->1 [style = bold, label=""];
1->6 [style = bold, label=""];
4->7 [style = solid, label="streamTime"];
22->20 [style = bold, label=""];
7->16 [style = bold, label=""];
0->8 [style = bold, label=""];
17->3 [style = bold, label=""];
9->3 [style = bold, label=""];
10->2 [style = bold, label=""];
4->0 [style = solid, label="streamTime"];
2->7 [style = bold, label=""];
20->19 [style = bold, label=""];
13->21 [style = bold, label=""];
15->8 [style = bold, label=""];
8->12 [style = bold, label=""];
0->5 [style = bold, label=""];
}
