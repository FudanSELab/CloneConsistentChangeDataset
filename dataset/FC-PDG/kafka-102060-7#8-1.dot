digraph {
22 [style = filled, label = "task.postCommit(false)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "task.completeRestoration(null)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "EasyMock.verify(recordCollector)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "EasyMock.expectLastCall().times(2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "EasyMock.verify(stateManager,recordCollector)@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "stateManager.registerStore(stateStore,stateStore.stateRestoreCallback)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "EasyMock.expect(stateManager.changelogPartitions()).andReturn(singleton(changelogPartition))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "shouldNotCheckpointOffsetsAgainOnCommitIfSnapshotNotChangedMuch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "EasyMock.expect(recordCollector.offsets()).andReturn(singletonMap(changelogPartition,offset)).anyTimes()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Long offset = 543L@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "EasyMock.expect(stateManager.changelogOffsets()).andReturn(singletonMap(changelogPartition,0L)).andReturn(singletonMap(changelogPartition,10L)).andReturn(singletonMap(changelogPartition,12000L))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "EasyMock.replay(stateManager,recordCollector)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expectLastCall()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "task.postCommit(false)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "EasyMock.expectLastCall()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.expectLastCall().once()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "task.initializeIfNeeded()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "task.prepareCommit()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldNotCheckpointOffsetsAgainOnCommitIfSnapshotNotChangedMuch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "task = createStatefulTask(createConfig(\"100\"),true)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "task.prepareCommit()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "stateManager.checkpoint()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "shouldCheckpointOffsetsOnCommitIfSnapshotMuchChanged['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "EasyMock.replay(stateManager,recordCollector)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "task.completeRestoration()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "task.postCommit(true)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "EasyMock.expect(stateManager.changelogOffsets()).andReturn(singletonMap(changelogPartition,10L)).andReturn(singletonMap(changelogPartition,20L))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
6->3 [style = bold, label=""];
11->16 [style = bold, label=""];
7->10 [style = bold, label=""];
9->2 [style = bold, label=""];
15->21 [style = bold, label=""];
11->6 [style = bold, label=""];
26->25 [style = bold, label=""];
12->15 [style = bold, label=""];
5->24 [style = dashed, label="0"];
23->8 [style = bold, label=""];
5->17 [style = bold, label=""];
1->7 [style = bold, label=""];
3->4 [style = bold, label=""];
19->8 [style = bold, label=""];
14->1 [style = bold, label=""];
14->26 [style = dashed, label="0"];
20->10 [style = bold, label=""];
21->26 [style = bold, label=""];
25->20 [style = bold, label=""];
0->14 [style = bold, label=""];
6->16 [style = dashed, label="0"];
0->21 [style = dashed, label="0"];
15->0 [style = bold, label=""];
8->12 [style = bold, label=""];
22->24 [style = bold, label=""];
13->8 [style = bold, label=""];
5->22 [style = bold, label=""];
16->9 [style = bold, label=""];
17->18 [style = bold, label=""];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
