digraph {
51 [style = filled, label = "server.stop()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "boolean leaderSelector1Closed = false@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "client.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testKillSessionThenCloseShouldElectNewLeader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "Assert.assertEquals(leaderCount.get(),1)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "client.getZookeeperClient().getZooKeeper().getTestable().injectSessionExpiration()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(requeued2)@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "LeaderSelector leaderSelector1 = new LeaderSelector(client,PATH_NAME,listener)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "timing.sleepABit()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(timing.acquireSemaphore(semaphore,1))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "leaderSelector1.hasLeadership()@@@46@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(leaderCount.get(),1)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "leaderSelector1.close()@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(interruptedLatch))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "server = new TestingServer(port)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final AtomicInteger leaderCount = new AtomicInteger(0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertTrue(requeued2)@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "leaderSelector2.start()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testKillSessionThenCloseShouldElectNewLeader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "fail(\"No leaderselector has leadership!\")@@@55@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "leaderSelector2Closed = true@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "leaderSelector2.autoRequeue()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final CountDownLatch interruptedLatch = new CountDownLatch(1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "boolean requeued1 = leaderSelector1.requeue()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(interruptedLatch))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "boolean leaderSelector2Closed = false@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "timing.sleepABit()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertTrue(timing.acquireSemaphore(semaphore,1))@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "leaderSelector1Closed = true@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "leaderSelector1.close()@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "leaderSelector2.hasLeadership()@@@50@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "timing.sleepABit()@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(leaderCount.get(),1)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(timing.awaitLatch(interruptedLatch))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "leaderSelector1.hasLeadership()@@@45@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "!leaderSelector1Closed@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(leaderCount.get(),1)@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "!leaderSelector1Closed@@@59@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertTrue(timing.acquireSemaphore(semaphore,1))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "{client.close()}@@@66@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "leaderSelector1.autoRequeue()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "LeaderSelector leaderSelector2 = new LeaderSelector(client,PATH_NAME,listener)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "LeaderSelectorListener listener = new LeaderSelectorListenerAdapter(){@Override public void takeLeadership(CuratorFramework client){leaderCount.incrementAndGet()try {semaphore.release()try {Thread.currentThread().join()}catch (InterruptedException e) }{leaderCount.decrementAndGet()}}}@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore,1))@@@37@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "leaderSelector2Closed = true@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "leaderSelector2.close()@@@63@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "leaderSelector1.start()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(leaderCount.get(),1)@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "leaderSelector2.close()@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "int port = server.getPort()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final Timing timing = new Timing()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "!leaderSelector2Closed@@@62@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "testKillServerThenCloseShouldElectNewLeader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertTrue(requeued1)@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2->35 [style = bold, label=""];
9->18 [style = solid, label="semaphore"];
16->37 [style = bold, label=""];
27->32 [style = bold, label=""];
36->16 [style = dotted, label="true"];
9->28 [style = solid, label="semaphore"];
31->9 [style = bold, label=""];
3->14 [style = solid, label="requeued1"];
21->48 [style = bold, label=""];
5->15 [style = bold, label=""];
14->17 [style = bold, label=""];
9->10 [style = bold, label=""];
10->34 [style = solid, label="interruptedLatch"];
47->33 [style = bold, label=""];
9->40 [style = solid, label="semaphore"];
3->34 [style = bold, label=""];
47->49 [style = bold, label=""];
1->40 [style = dashed, label="0"];
12->38 [style = bold, label=""];
0->8 [style = bold, label=""];
1->12 [style = bold, label=""];
9->46 [style = solid, label="semaphore"];
55->34 [style = bold, label=""];
41->45 [style = bold, label=""];
11->43 [style = dashed, label="0"];
56->7 [style = bold, label=""];
4->46 [style = bold, label=""];
6->15 [style = dotted, label="true"];
33->16 [style = bold, label=""];
34->45 [style = solid, label="requeued2"];
37->21 [style = bold, label=""];
46->39 [style = bold, label=""];
27->16 [style = bold, label=""];
26->24 [style = bold, label=""];
17->45 [style = dashed, label="0"];
35->52 [style = bold, label=""];
8->24 [style = solid, label="listener"];
47->49 [style = dotted, label="true"];
22->18 [style = bold, label=""];
27->46 [style = bold, label=""];
18->4 [style = bold, label=""];
53->55 [style = solid, label="port"];
7->23 [style = bold, label=""];
10->0 [style = bold, label=""];
33->36 [style = bold, label=""];
43->22 [style = bold, label=""];
23->24 [style = solid, label="client"];
36->16 [style = bold, label=""];
59->55 [style = bold, label=""];
14->18 [style = bold, label=""];
34->14 [style = bold, label=""];
36->37 [style = bold, label=""];
42->7 [style = bold, label=""];
22->4 [style = dotted, label="true"];
47->33 [style = dotted, label="false"];
10->13 [style = solid, label="interruptedLatch"];
34->17 [style = solid, label="requeued2"];
32->46 [style = dashed, label="0"];
22->6 [style = bold, label=""];
6->27 [style = dotted, label="false"];
23->31 [style = bold, label=""];
57->37 [style = bold, label=""];
22->18 [style = dotted, label="true"];
37->30 [style = bold, label=""];
33->39 [style = dashed, label="0"];
8->26 [style = solid, label="listener"];
13->38 [style = dashed, label="0"];
20->1 [style = bold, label=""];
23->26 [style = solid, label="client"];
45->44 [style = bold, label=""];
32->33 [style = bold, label=""];
58->5 [style = dotted, label="true"];
35->25 [style = bold, label=""];
5->16 [style = bold, label=""];
12->13 [style = bold, label=""];
6->27 [style = bold, label=""];
6->5 [style = bold, label=""];
25->20 [style = bold, label=""];
30->21 [style = bold, label=""];
9->1 [style = solid, label="semaphore"];
40->12 [style = bold, label=""];
4->58 [style = bold, label=""];
30->54 [style = bold, label=""];
11->22 [style = bold, label=""];
54->21 [style = bold, label=""];
52->50 [style = bold, label=""];
14->41 [style = dashed, label="0"];
10->38 [style = solid, label="interruptedLatch"];
24->2 [style = bold, label=""];
53->51 [style = bold, label=""];
3->41 [style = solid, label="requeued1"];
29->3 [style = bold, label=""];
28->11 [style = bold, label=""];
38->29 [style = bold, label=""];
54->48 [style = bold, label=""];
34->41 [style = bold, label=""];
47->27 [style = dotted, label="true"];
49->27 [style = bold, label=""];
44->43 [style = bold, label=""];
37->30 [style = dotted, label="true"];
50->25 [style = bold, label=""];
51->59 [style = bold, label=""];
37->54 [style = bold, label=""];
13->29 [style = bold, label=""];
17->28 [style = bold, label=""];
20->40 [style = bold, label=""];
58->47 [style = bold, label=""];
9->44 [style = solid, label="semaphore"];
28->44 [style = dashed, label="0"];
16->57 [style = bold, label=""];
22->6 [style = dotted, label="false"];
15->46 [style = bold, label=""];
54->21 [style = dotted, label="true"];
58->6 [style = bold, label=""];
9->16 [style = solid, label="semaphore"];
58->47 [style = dotted, label="false"];
15->32 [style = bold, label=""];
9->32 [style = solid, label="semaphore"];
39->36 [style = bold, label=""];
19->7 [style = bold, label=""];
1->53 [style = bold, label=""];
4->32 [style = bold, label=""];
58->6 [style = dotted, label="true"];
6->5 [style = dotted, label="true"];
8->26 [style = bold, label=""];
}
