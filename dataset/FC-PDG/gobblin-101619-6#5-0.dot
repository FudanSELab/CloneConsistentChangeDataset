digraph {
42 [style = filled, label = "origin = new FileStatus(0l,true,0,0l,0l,new Path(originPath))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertEquals(destination.getMetadata().get(\"fsUri\"),targetFsUri)@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "String targetFsUri = \"file:///\"@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String originPath = \"/data/databases/source/profile\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "destination = (DatasetDescriptor)copyableFile.getDestinationData()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "when(targetFs.getScheme()).thenReturn(\"file\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "destinationPath = targetFsUri + destinationPath@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "FileSystem originFs = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "copyableFile.setFsDatasets(originFs,targetFs)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertEquals(source.getMetadata().get(\"fsUri\"),originFsUri)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(destination.getPlatform(),\"file\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(source.getName(),\"/data/databases/source\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(source.getPlatform(),\"hdfs\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "FileSystem fs = FileSystem.getLocal(new Configuration())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String resourcePath@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "FileStatus status = new FileStatus(0l,false,0,0l,0l,new Path(resourcePath))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "copyableFile.setFsDatasets(originFs,targetFs)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "String destinationPath = \"/data/databases/destination/profile\"@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "fs.create(new Path(resourcePath))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(destination.getPlatform(),\"file\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "FileSystem targetFs = mock()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testSetFsDatasets['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertEquals(destination.getName(),\"/data/databases/destination\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "FileStatus origin = new FileStatus(0l,false,0,0l,0l,new Path(originPath))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "DatasetDescriptor destination = (DatasetDescriptor)copyableFile.getDestinationData()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "when(originFs.getScheme()).thenReturn(\"hdfs\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(source.getMetadata().get(\"fsUri\"),originFsUri)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "originPath = originFsUri + originPath@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "createTestCopyableFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "return new CopyableFile(status,new Path(getRandomPath()),null,null,null,PreserveAttributes.fromMnemonicString(\"\"),\"\",0,0,Maps.newHashMap(),\"\",null)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "createTestCopyableFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(source.getPlatform(),\"hdfs\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return new CopyableFile(status,new Path(getRandomPath()),null,null,null,PreserveAttributes.fromMnemonicString(\"\"),\"\",0,0,Maps.newHashMap(),\"\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "source = (DatasetDescriptor)copyableFile.getSourceData()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "CopyableFile copyableFile = new CopyableFile(origin,new Path(destinationPath),null,null,null,PreserveAttributes.fromMnemonicString(\"\"),\"\",0,0,Maps.newHashMap(),\"\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "String originFsUri = \"hdfs://source.company.biz:2000\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(destination.getName(),\"/data/databases/destination/profile\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(destination.getMetadata().get(\"fsUri\"),targetFsUri)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "when(originFs.getUri()).thenReturn(new URI(originFsUri))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "when(targetFs.getUri()).thenReturn(new URI(targetFsUri))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "DatasetDescriptor source = (DatasetDescriptor)copyableFile.getSourceData()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "copyableFile = new CopyableFile(origin,new Path(destinationPath),null,null,null,PreserveAttributes.fromMnemonicString(\"\"),\"\",0,0,Maps.newHashMap(),\"\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertEquals(source.getName(),\"/data/databases/source/profile\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
17->25 [style = bold, label=""];
24->28 [style = bold, label=""];
39->15 [style = bold, label=""];
19->18 [style = bold, label=""];
1->3 [style = solid, label="resourcePath"];
33->40 [style = solid, label="targetFsUri"];
36->21 [style = solid, label="originFsUri"];
33->10 [style = solid, label="targetFsUri"];
34->9 [style = bold, label=""];
28->10 [style = bold, label=""];
35->11 [style = solid, label="targetFs"];
8->32 [style = bold, label=""];
31->22 [style = bold, label=""];
10->19 [style = solid, label="destinationPath"];
4->6 [style = bold, label=""];
4->6 [style = solid, label="status"];
41->29 [style = bold, label=""];
20->34 [style = bold, label=""];
35->33 [style = bold, label=""];
23->26 [style = bold, label=""];
18->12 [style = bold, label=""];
4->2 [style = bold, label=""];
13->30 [style = bold, label=""];
35->18 [style = solid, label="targetFs"];
3->4 [style = bold, label=""];
12->37 [style = bold, label=""];
27->35 [style = bold, label=""];
36->25 [style = solid, label="originFsUri"];
33->23 [style = bold, label=""];
25->27 [style = bold, label=""];
23->10 [style = solid, label="destinationPath"];
26->41 [style = bold, label=""];
7->5 [style = bold, label=""];
23->14 [style = solid, label="destinationPath"];
22->18 [style = solid, label="originFs"];
33->24 [style = solid, label="targetFsUri"];
10->42 [style = bold, label=""];
22->11 [style = solid, label="originFs"];
36->28 [style = solid, label="originFsUri"];
17->29 [style = solid, label="originPath"];
37->38 [style = bold, label=""];
22->36 [style = bold, label=""];
0->1 [style = dotted, label="true"];
1->4 [style = solid, label="resourcePath"];
29->14 [style = bold, label=""];
16->13 [style = bold, label=""];
2->6 [style = dashed, label="0"];
21->16 [style = bold, label=""];
11->39 [style = bold, label=""];
38->21 [style = bold, label=""];
30->40 [style = bold, label=""];
5->22 [style = dashed, label="0"];
36->17 [style = bold, label=""];
29->14 [style = solid, label="origin"];
36->32 [style = solid, label="originFsUri"];
7->1 [style = dotted, label="true"];
33->26 [style = solid, label="targetFsUri"];
28->42 [style = solid, label="originPath"];
42->19 [style = solid, label="origin"];
14->11 [style = bold, label=""];
15->8 [style = bold, label=""];
32->20 [style = bold, label=""];
9->24 [style = bold, label=""];
42->19 [style = bold, label=""];
0->5 [style = bold, label=""];
17->28 [style = solid, label="originPath"];
4->2 [style = solid, label="status"];
}
