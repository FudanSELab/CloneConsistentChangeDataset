digraph {
4 [style = filled, label = "getMockEndpoint(\"mock:bar\").expectedBodiesReceived(\"Hello World\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "getMockEndpoint(\"mock:result\").expectedBodiesReceived(\"Hello World\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "context.start()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testWeaveAddLast['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testWeaveAddLast['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RouteReifier.adviceWith(context.getRouteDefinitions().get(0),context,new AdviceWithRouteBuilder(){@Override public void configure(){weaveAddLast().to(\"mock:a\").transform(constant(\"Bye World\"))}})@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Object out = template.requestBody(\"direct:start\",\"Hello World\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertMockEndpointsSatisfied()@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"Bye World\",out)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testWeaveAddLast['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "getMockEndpoint(\"mock:foo\").expectedBodiesReceived(\"Hello World\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "getMockEndpoint(\"mock:a\").expectedBodiesReceived(\"Hello World\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->9 [style = bold, label=""];
1->7 [style = bold, label=""];
11->9 [style = bold, label=""];
5->8 [style = solid, label="out"];
5->8 [style = bold, label=""];
8->6 [style = bold, label=""];
9->1 [style = bold, label=""];
3->4 [style = bold, label=""];
10->9 [style = bold, label=""];
4->2 [style = bold, label=""];
2->5 [style = bold, label=""];
9->7 [style = bold, label=""];
7->3 [style = bold, label=""];
}
