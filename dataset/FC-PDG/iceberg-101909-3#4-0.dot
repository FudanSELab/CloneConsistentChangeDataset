digraph {
12 [style = filled, label = "Assert.assertEquals(\"Should have expected delete file\",UNPARTITIONED_POS_DELETES.path(),task.deletes().get(0).path())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(\"Should have expected delete file\",unpartitionedPosDeletes.path(),task.deletes().get(0).path())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "Assert.assertEquals(\"Table should contain 2 delete files\",2,(long)unpartitioned.currentSnapshot().deleteManifests().get(0).addedFilesCount())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "File location = temp.newFolder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(\"Should have the correct data file path\",UNPARTITIONED_FILE.path(),task.file().path())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Should have one associated delete file\",1,task.deletes().size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testUnpartitionedTableSequenceNumbers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "unpartitioned.newRowDelta().addDeletes(unpartitionedPosDeletes).commit()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "tasks = Lists.newArrayList(unpartitioned.newScan().planFiles().iterator())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "unpartitioned.newAppend().appendFile(unpartitionedFile).commit()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "unpartitioned.newRowDelta().addRows(UNPARTITIONED_FILE).addDeletes(UNPARTITIONED_POS_DELETES).addDeletes(UNPARTITIONED_EQ_DELETES).commit()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testUnpartitionedTableScan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(\"Should have one associated delete file\",1,task.deletes().size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(\"Should have one task\",1,tasks.size())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(\"Should have the correct data file path\",unpartitionedFile.path(),task.file().path())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "DeleteFile unpartitionedEqDeletes = unpartitionedEqDeletes(unpartitioned.spec())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "task = tasks.get(0)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Table unpartitioned = TestTables.create(location,\"unpartitioned\",SCHEMA,PartitionSpec.unpartitioned(),2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "unpartitioned.newRowDelta().addDeletes(UNPARTITIONED_POS_DELETES).commit()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "FileScanTask task = tasks.get(0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(\"Should have two associated delete files\",2,task.deletes().size())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "tasks = Lists.newArrayList(unpartitioned.newScan().planFiles().iterator())@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(location.delete())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "unpartitioned.newAppend().appendFile(UNPARTITIONED_FILE).commit()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(\"Should have the correct data file path\",UNPARTITIONED_FILE.path(),task.file().path())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "testUnpartitionedTableScan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "task = tasks.get(0)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(\"Should have expected delete files\",Sets.newHashSet(unpartitionedPosDeletes.path(),unpartitionedEqDeletes.path()),Sets.newHashSet(Iterables.transform(task.deletes(),null)))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Assert.assertEquals(\"Should have only pos delete file\",UNPARTITIONED_POS_DELETES.path(),task.deletes().get(0).path())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "List<FileScanTask> tasks = Lists.newArrayList(unpartitioned.newScan().planFiles().iterator())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "unpartitioned.newRowDelta().addDeletes(unpartitionedEqDeletes).commit()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "DeleteFile unpartitionedPosDeletes = unpartitionedPosDeletes(unpartitioned.spec())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "DataFile unpartitionedFile = unpartitionedFile(unpartitioned.spec())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Assert.assertEquals(\"Should have the correct data file path\",unpartitionedFile.path(),task.file().path())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->10 [style = bold, label=""];
17->5 [style = bold, label=""];
15->20 [style = dashed, label="0"];
7->11 [style = bold, label=""];
29->17 [style = bold, label=""];
18->23 [style = bold, label=""];
27->14 [style = bold, label=""];
3->31 [style = bold, label=""];
16->6 [style = bold, label=""];
33->6 [style = bold, label=""];
0->23 [style = dashed, label="0"];
12->17 [style = bold, label=""];
9->32 [style = bold, label=""];
11->29 [style = dashed, label="0"];
8->14 [style = bold, label=""];
12->31 [style = dashed, label="0"];
1->18 [style = dashed, label="0"];
1->0 [style = bold, label=""];
3->12 [style = bold, label=""];
8->28 [style = dashed, label="0"];
26->6 [style = bold, label=""];
32->30 [style = bold, label=""];
24->22 [style = bold, label=""];
1->32 [style = dashed, label="0"];
10->7 [style = bold, label=""];
6->9 [style = solid, label="location"];
5->2 [style = bold, label=""];
25->20 [style = bold, label=""];
17->24 [style = bold, label=""];
9->18 [style = bold, label=""];
22->27 [style = bold, label=""];
15->28 [style = bold, label=""];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
30->4 [style = bold, label=""];
6->13 [style = bold, label=""];
23->19 [style = bold, label=""];
12->24 [style = dashed, label="0"];
28->25 [style = bold, label=""];
21->7 [style = bold, label=""];
14->15 [style = bold, label=""];
13->9 [style = bold, label=""];
9->1 [style = bold, label=""];
3->29 [style = bold, label=""];
2->8 [style = bold, label=""];
19->21 [style = bold, label=""];
}
