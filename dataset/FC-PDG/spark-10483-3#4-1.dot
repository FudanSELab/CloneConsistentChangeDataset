digraph {
20 [style = filled, label = "model.transform(dataset,model.threshold().w(0.0),model.probabilityCol().w(\"myProb\")).registerTempTable(\"predNotAllZero\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "LinearRegression lr = new LinearRegression().setMaxIter(10).setRegParam(1.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "foundNonZero = true@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "boolean foundNonZero = false@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assert(model.fittingParamMap().apply(lr.maxIter()) == 10)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "LogisticRegression lr = new LogisticRegression().setMaxIter(10).setRegParam(1.0).setThreshold(0.6).setProbabilityCol(\"myProbability\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.maxIter()) == 5)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "linearRegressionWithSetters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assert(model2.getThreshold() == 0.4)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "model.setThreshold(1.0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "r.getDouble(0) != 0.0@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assert(r.getDouble(0) == 0.0)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "logisticRegressionWithSetters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "r.getDouble(0) != 0.0@@@19@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "LogisticRegressionModel model = lr.fit(dataset)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DataFrame predNotAllZero = jsql.sql(\"SELECT prediction, myProb FROM predNotAllZero\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.maxIter()).equals(5))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assert(model.fittingParamMap().apply(lr.maxIter()).equals(10))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assert(model.fittingParamMap().apply(lr.threshold()).equals(0.6))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "DataFrame predAllZero = jsql.sql(\"SELECT prediction, myProbability FROM predAllZero\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assert(model.getThreshold() == 0.6)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assert(model2.getPredictionCol().equals(\"thePred\"))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assert(model2.getProbabilityCol().equals(\"theProb\"))@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.regParam()).equals(0.1))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.maxIter()) == 5)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.threshold()).equals(0.4))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "model.transform(dataset).registerTempTable(\"predAllZero\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "LinearRegressionModel model = lr.fit(dataset)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assert(model.fittingParamMap().apply(lr.regParam()).equals(1.0))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "LogisticRegressionModel model2 = lr.fit(dataset,lr.maxIter().w(5),lr.regParam().w(0.1),lr.threshold().w(0.4),lr.probabilityCol().w(\"theProb\"))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "LinearRegressionModel model2 = lr.fit(dataset,lr.maxIter().w(5),lr.regParam().w(0.1),lr.predictionCol().w(\"thePred\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "logisticRegressionWithSetters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assert(model2.fittingParamMap().apply(lr.regParam()).equals(0.1))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assert(foundNonZero)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->20 [style = bold, label=""];
12->33 [style = dashed, label="0"];
33->3 [style = bold, label=""];
18->23 [style = bold, label=""];
21->27 [style = dashed, label="0"];
24->4 [style = solid, label="foundNonZero"];
31->32 [style = bold, label=""];
20->0 [style = bold, label=""];
14->22 [style = bold, label=""];
11->29 [style = dashed, label="0"];
15->6 [style = bold, label=""];
3->15 [style = bold, label=""];
4->18 [style = bold, label=""];
10->17 [style = bold, label=""];
15->30 [style = bold, label=""];
22->24 [style = dotted, label="true"];
16->19 [style = bold, label=""];
11->9 [style = bold, label=""];
24->22 [style = bold, label=""];
8->22 [style = bold, label=""];
22->4 [style = bold, label=""];
21->12 [style = bold, label=""];
26->21 [style = bold, label=""];
22->8 [style = bold, label=""];
32->29 [style = bold, label=""];
19->5 [style = bold, label=""];
0->14 [style = bold, label=""];
24->4 [style = bold, label=""];
18->10 [style = bold, label=""];
6->16 [style = bold, label=""];
30->31 [style = bold, label=""];
12->25 [style = bold, label=""];
5->13 [style = bold, label=""];
8->22 [style = dotted, label="true"];
25->15 [style = bold, label=""];
7->21 [style = bold, label=""];
14->4 [style = solid, label="foundNonZero"];
23->17 [style = bold, label=""];
14->8 [style = bold, label=""];
12->3 [style = bold, label=""];
27->33 [style = bold, label=""];
28->27 [style = bold, label=""];
8->4 [style = bold, label=""];
22->24 [style = bold, label=""];
9->1 [style = bold, label=""];
22->4 [style = solid, label="foundNonZero"];
10->23 [style = dashed, label="0"];
13->2 [style = bold, label=""];
17->11 [style = bold, label=""];
3->25 [style = dashed, label="0"];
}
