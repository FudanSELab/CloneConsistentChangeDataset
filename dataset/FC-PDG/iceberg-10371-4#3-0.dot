digraph {
7 [style = filled, label = "List<SimpleRecord> firstBatchRecords = Lists.newArrayList(new SimpleRecord(1,\"a\"),new SimpleRecord(2,\"b\"),new SimpleRecord(3,\"c\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testSnapshotSelectionByTimestamp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<SimpleRecord> secondBatchRecords = Lists.newArrayList(new SimpleRecord(4,\"d\"),new SimpleRecord(5,\"e\"),new SimpleRecord(6,\"f\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Dataset<Row> previousSnapshotResult = spark.read().format(\"iceberg\").option(\"snapshot-id\",parentSnapshotId).load(tableLocation)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Table table = tables.create(SCHEMA,spec,tableLocation)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "PartitionSpec spec = PartitionSpec.unpartitioned()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(\"Previous snapshot rows should match\",firstBatchRecords,previousSnapshotRecords)@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Dataset<Row> secondDf = spark.createDataFrame(secondBatchRecords,)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Dataset<Row> previousSnapshotResult = spark.read().format(\"iceberg\").option(\"as-of-timestamp\",firstSnapshotTimestamp).load(tableLocation)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "List<SimpleRecord> previousSnapshotRecords = previousSnapshotResult.orderBy(\"id\").as(Encoders.bean()).collectAsList()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Dataset<Row> previousSnapshotResult = spark.read().format(\"iceberg\").option(SparkReadOptions.AS_OF_TIMESTAMP,firstSnapshotTimestamp).load(tableLocation)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "expectedRecords.addAll(secondBatchRecords)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "long firstSnapshotTimestamp = System.currentTimeMillis()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<SimpleRecord> currentSnapshotRecords = currentSnapshotResult.orderBy(\"id\").as(Encoders.bean()).collectAsList()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Dataset<Row> currentSnapshotResult = spark.read().format(\"iceberg\").load(tableLocation)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Snapshot currentSnapshot = table.currentSnapshot()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Current snapshot rows should match\",expectedRecords,currentSnapshotRecords)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Long parentSnapshotId = currentSnapshot.parentId()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testSnapshotSelectionById['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testSnapshotSelectionByTimestamp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(\"Expected 2 snapshots\",2,Iterables.size(table.snapshots()))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String tableLocation = temp.newFolder(\"iceberg-table\").toString()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(\"Previous snapshot rows should match\",firstBatchRecords,previousSnapshotRecords)@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "secondDf.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(tableLocation)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HadoopTables tables = new HadoopTables(CONF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectedRecords.addAll(firstBatchRecords)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "firstDf.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(tableLocation)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "List<SimpleRecord> previousSnapshotRecords = previousSnapshotResult.orderBy(\"id\").as(Encoders.bean()).collectAsList()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List<SimpleRecord> expectedRecords = Lists.newArrayList()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Dataset<Row> firstDf = spark.createDataFrame(firstBatchRecords,)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->16 [style = solid, label="firstBatchRecords"];
10->15 [style = solid, label="currentSnapshotRecords"];
22->2 [style = bold, label=""];
9->11 [style = bold, label=""];
23->5 [style = bold, label=""];
5->17 [style = solid, label="tableLocation"];
7->12 [style = bold, label=""];
18->22 [style = dashed, label="0"];
6->21 [style = bold, label=""];
10->19 [style = bold, label=""];
12->17 [style = bold, label=""];
5->24 [style = solid, label="tableLocation"];
14->10 [style = bold, label=""];
7->12 [style = solid, label="firstBatchRecords"];
2->16 [style = solid, label="previousSnapshotRecords"];
5->14 [style = solid, label="tableLocation"];
18->2 [style = bold, label=""];
27->26 [style = solid, label="previousSnapshotRecords"];
15->18 [style = bold, label=""];
13->1 [style = bold, label=""];
11->15 [style = bold, label=""];
3->0 [style = bold, label=""];
15->22 [style = bold, label=""];
29->28 [style = bold, label=""];
5->18 [style = solid, label="tableLocation"];
5->22 [style = solid, label="tableLocation"];
19->15 [style = solid, label="expectedRecords"];
17->0 [style = bold, label=""];
21->20 [style = bold, label=""];
5->6 [style = bold, label=""];
5->20 [style = solid, label="tableLocation"];
19->9 [style = bold, label=""];
21->20 [style = solid, label="spec"];
0->8 [style = bold, label=""];
17->3 [style = bold, label=""];
28->24 [style = bold, label=""];
25->5 [style = bold, label=""];
1->14 [style = bold, label=""];
5->13 [style = solid, label="tableLocation"];
7->26 [style = solid, label="firstBatchRecords"];
20->7 [style = bold, label=""];
7->9 [style = solid, label="firstBatchRecords"];
4->5 [style = bold, label=""];
24->27 [style = bold, label=""];
15->29 [style = bold, label=""];
8->13 [style = bold, label=""];
0->11 [style = solid, label="secondBatchRecords"];
0->8 [style = solid, label="secondBatchRecords"];
27->26 [style = bold, label=""];
2->16 [style = bold, label=""];
}
