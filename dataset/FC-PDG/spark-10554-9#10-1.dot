digraph {
2 [style = filled, label = "packedPointer.set(PackedRecordPointer.packPointer(addressInPage1,360))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final SparkConf conf = new SparkConf().set(\"spark.memory.offHeap.enabled\",\"true\").set(\"spark.memory.offHeap.size\",\"10000\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(addressInPage1,recordPointer)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final MemoryConsumer c = new TestMemoryConsumer(memoryManager,MemoryMode.ON_HEAP)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final TaskMemoryManager memoryManager = new TaskMemoryManager(new TestMemoryManager(conf),0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "offHeap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "PackedRecordPointer packedPointer = new PackedRecordPointer()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final MemoryBlock page1 = memoryManager.allocatePage(128,c)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "heap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(page1.getBaseOffset() + 42,memoryManager.getOffsetInPage(recordPointer))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final long recordPointer = packedPointer.getRecordPointer()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final long addressInPage1 = memoryManager.encodePageNumberAndOffset(page1,page1.getBaseOffset() + 42)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final MemoryBlock page1 = memoryManager.allocatePage(128,null)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final SparkConf conf = new SparkConf().set(\"spark.memory.offHeap.enabled\",\"false\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "memoryManager.cleanUpAllAllocatedMemory()@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(360,packedPointer.getPartitionId())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final MemoryBlock page0 = memoryManager.allocatePage(128,c)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(1,TaskMemoryManager.decodePageNumber(recordPointer))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final MemoryBlock page0 = memoryManager.allocatePage(128,null)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "memoryManager.cleanUpAllAllocatedMemory()@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "heap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14->1 [style = solid, label="page1"];
6->18 [style = solid, label="memoryManager"];
9->11 [style = bold, label=""];
4->6 [style = bold, label=""];
6->18 [style = bold, label=""];
19->20 [style = bold, label=""];
8->3 [style = bold, label=""];
5->8 [style = solid, label="addressInPage1"];
11->8 [style = solid, label="recordPointer"];
20->6 [style = solid, label="conf"];
11->7 [style = solid, label="recordPointer"];
6->0 [style = bold, label=""];
3->15 [style = bold, label=""];
20->6 [style = bold, label=""];
7->8 [style = bold, label=""];
9->7 [style = solid, label="recordPointer"];
11->3 [style = solid, label="recordPointer"];
14->1 [style = bold, label=""];
2->13 [style = bold, label=""];
5->1 [style = bold, label=""];
9->11 [style = solid, label="recordPointer"];
0->10 [style = bold, label=""];
5->2 [style = solid, label="addressInPage1"];
10->5 [style = bold, label=""];
12->4 [style = bold, label=""];
4->20 [style = dashed, label="0"];
18->16 [style = solid, label="c"];
18->14 [style = solid, label="c"];
16->14 [style = bold, label=""];
0->18 [style = dashed, label="0"];
4->6 [style = solid, label="conf"];
1->2 [style = bold, label=""];
13->9 [style = bold, label=""];
1->3 [style = solid, label="addressInPage1"];
9->8 [style = solid, label="recordPointer"];
1->13 [style = solid, label="addressInPage1"];
10->16 [style = dashed, label="0"];
10->5 [style = solid, label="page1"];
17->4 [style = bold, label=""];
11->7 [style = bold, label=""];
18->16 [style = bold, label=""];
}
