digraph {
8 [style = filled, label = "assertThat(literal.getValueAs(),notNullValue())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(literal.getValueAs(),notNullValue())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(node.toString(),is(\"1969-07-21\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "checkTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(literal.getValueAs(),notNullValue())@@@10@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(literal.getValue3() instanceof Integer,is(true))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(literal.getValue2() instanceof Integer,is(true))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RexLiteral literal@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "checkTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "RexNode node@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(literal.getValueAs(),notNullValue())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "checkDate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "RexNode node@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertThat(node.toString(),is(\"02:56:15\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertThat((Integer)literal.getValue2(),is(MOON_DAY))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "RexLiteral literal = (RexLiteral)node@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(literal.getValue() instanceof Calendar,is(true))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(literal.getValue() instanceof Calendar,is(true))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(literal.toString(),is(\"02:56:15\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->1 [style = solid, label="node"];
0->9 [style = bold, label=""];
7->17 [style = bold, label=""];
4->16 [style = dashed, label="0"];
17->6 [style = bold, label=""];
9->18 [style = dashed, label="0"];
2->3 [style = bold, label=""];
0->4 [style = dotted, label="true"];
12->11 [style = bold, label=""];
8->6 [style = bold, label=""];
7->8 [style = bold, label=""];
6->15 [style = bold, label=""];
16->1 [style = solid, label="node"];
14->16 [style = dotted, label="true"];
6->5 [style = bold, label=""];
12->10 [style = dotted, label="true"];
18->1 [style = bold, label=""];
3->7 [style = bold, label=""];
11->13 [style = bold, label=""];
9->11 [style = dashed, label="0"];
8->17 [style = dashed, label="0"];
14->18 [style = bold, label=""];
1->2 [style = bold, label=""];
9->1 [style = bold, label=""];
4->10 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
13->2 [style = bold, label=""];
}
