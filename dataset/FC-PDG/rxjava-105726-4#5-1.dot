digraph {
2 [style = filled, label = "verify(objectSubscriber,never()).onError(any())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "verify(objectObserver,never()).onError(any())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Observable<String> source = Observable.just(\"a\",\"b\",\"cc\",\"dd\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Flowable<String> source = Flowable.just(\"a\",\"b\",\"cc\",\"dd\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "mapped.subscribe(objectSubscriber)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(objectSubscriber,times(1)).onNext(expected)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Map<Integer,Collection<String>> expected = new HashMap<Integer,Collection<String>>()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expected.put(1,Arrays.asList(\"aa\",\"bb\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Map<Integer,Collection<String>> expected = new HashMap<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Observable<Map<Integer,Collection<String>>> mapped = source.toMultimap(lengthFunc,duplicate).toObservable()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "mapped.subscribe(objectObserver)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verify(objectObserver,times(1)).onComplete()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Flowable<Map<Integer,Collection<String>>> mapped = source.toMultimap(lengthFunc,duplicate).toFlowable()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "toMultimapWithValueSelectorObservable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "toMultimapWithValueSelectorFlowable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "toMultimapWithValueSelectorFlowable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(objectSubscriber,times(1)).onComplete()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expected.put(2,Arrays.asList(\"cccc\",\"dddd\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verify(objectObserver,times(1)).onNext(expected)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12->17 [style = bold, label=""];
3->16 [style = dashed, label="0"];
7->9 [style = solid, label="expected"];
5->15 [style = bold, label=""];
2->9 [style = bold, label=""];
7->8 [style = bold, label=""];
10->9 [style = solid, label="expected"];
1->7 [style = bold, label=""];
4->0 [style = bold, label=""];
6->2 [style = bold, label=""];
1->13 [style = dashed, label="0"];
2->12 [style = dashed, label="0"];
11->0 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
10->8 [style = bold, label=""];
6->15 [style = dashed, label="0"];
13->7 [style = bold, label=""];
0->1 [style = bold, label=""];
9->17 [style = dashed, label="0"];
18->13 [style = bold, label=""];
9->3 [style = bold, label=""];
7->10 [style = dashed, label="0"];
0->18 [style = dashed, label="0"];
14->18 [style = bold, label=""];
15->12 [style = bold, label=""];
1->10 [style = bold, label=""];
7->17 [style = solid, label="expected"];
17->16 [style = bold, label=""];
}
