digraph {
37 [style = filled, label = "sameKeyDifferentCfRowMutations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(2,mutatedCFs.size())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Mutation rm2 = new Mutation(\"ks1\",cf2.partitionKey()).add(cf2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(bytes(\"trigger\"),row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value())@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "sameKeyDifferentCfRowMutations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "update.metadata().name.equals(\"cf1\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "update.metadata().name.equals(\"cf1\")@@@28@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Row row = mutatedCFs.get(0).iterator().next()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(bytes(\"k1v1\"),row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "TableMetadata metadata = makeTableMetadata(\"ks1\",\"cf1\",TriggerMetadata.create(\"test\",.getName()))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "CFMetaData metadata = makeCfMetaData(\"ks1\",\"cf1\",TriggerMetadata.create(\"test\",.getName()))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertNull(row.getCell(metadata.getColumn(bytes(\"c1\"))))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "PartitionUpdate cf2 = makeCf(metadata,\"k2\",\"k2v1\",null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertNull(row.getCell(metadata.getColumn(bytes(\"c1\"))))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(bytes(\"trigger\"),row.getCell(metadata.getColumn(bytes(\"c2\"))).value())@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertNull(row.getCell(metadata.getColumn(bytes(\"c2\"))))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertEquals(2,tmutations.size())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Row row = update.iterator().next()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(1,mutatedCFs.size())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "CFMetaData metadata = makeCfMetaData(\"ks1\",\"cf1\",TriggerMetadata.create(\"test\",.getName()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(bytes(\"trigger\"),row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Row row = update.iterator().next()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(bytes(\"trigger\"),row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(bytes(\"k2v1\"),row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value())@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertEquals(1,mutatedCFs.size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1,rm2)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(2,mutatedCFs.size())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(bytes(\"k2v1\"),row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Mutation rm1 = new Mutation(\"ks1\",cf1.partitionKey()).add(cf1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "update.metadata().cfName.equals(\"cf1\")@@@14@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertNull(row.getCell(metadata.getColumn(bytes(\"c2\"))))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Row row = update.iterator().next()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(bytes(\"k2v1\"),row.getCell(metadata.getColumn(bytes(\"c1\"))).value())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "row = mutatedCFs.get(0).iterator().next()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "sameKeySameCfPartialRowMutations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(bytes(\"trigger\"),row.getCell(metadata.getColumn(bytes(\"c2\"))).value())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Row row = update.iterator().next()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "update.metadata().cfName.equals(\"cf1\")@@@28@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "Collections.sort(tmutations,new RmComparator())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(bytes(\"k1v1\"),row.getCell(metadata.getColumn(bytes(\"c1\"))).value())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "PartitionUpdate cf1 = makeCf(metadata,\"k1\",\"k1v1\",null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates())@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->32 [style = dashed, label="0"];
22->36 [style = dashed, label="0"];
42->41 [style = bold, label=""];
37->28 [style = bold, label=""];
12->8 [style = dotted, label="true"];
20->0 [style = bold, label=""];
25->6 [style = bold, label=""];
9->7 [style = bold, label=""];
43->23 [style = bold, label=""];
1->23 [style = bold, label=""];
26->22 [style = bold, label=""];
22->8 [style = bold, label=""];
12->9 [style = dotted, label="false"];
2->24 [style = solid, label="rm1"];
0->3 [style = dotted, label="false"];
17->14 [style = bold, label=""];
29->32 [style = dotted, label="false"];
34->32 [style = bold, label=""];
41->45 [style = bold, label=""];
18->0 [style = bold, label=""];
16->9 [style = bold, label=""];
27->36 [style = dotted, label="true"];
9->30 [style = dashed, label="0"];
17->35 [style = bold, label=""];
13->25 [style = bold, label=""];
35->31 [style = bold, label=""];
28->4 [style = solid, label="metadata"];
12->7 [style = dotted, label="false"];
1->43 [style = dashed, label="0"];
0->17 [style = bold, label=""];
19->20 [style = bold, label=""];
3->11 [style = bold, label=""];
19->39 [style = bold, label=""];
31->29 [style = bold, label=""];
4->2 [style = bold, label=""];
27->16 [style = bold, label=""];
33->27 [style = bold, label=""];
27->30 [style = dotted, label="false"];
12->22 [style = dotted, label="true"];
3->34 [style = dashed, label="0"];
10->34 [style = bold, label=""];
8->38 [style = dashed, label="0"];
12->27 [style = dashed, label="0"];
14->35 [style = dashed, label="0"];
14->18 [style = bold, label=""];
0->14 [style = dotted, label="true"];
45->46 [style = bold, label=""];
18->31 [style = dashed, label="0"];
24->13 [style = bold, label=""];
27->26 [style = bold, label=""];
27->33 [style = dotted, label="false"];
29->17 [style = dotted, label="true"];
1->4 [style = solid, label="metadata"];
29->17 [style = bold, label=""];
30->33 [style = bold, label=""];
0->18 [style = dotted, label="true"];
21->27 [style = bold, label=""];
6->21 [style = bold, label=""];
6->42 [style = bold, label=""];
38->27 [style = bold, label=""];
23->2 [style = solid, label="cf1"];
27->38 [style = dotted, label="true"];
1->28 [style = dashed, label="0"];
21->42 [style = dashed, label="0"];
38->19 [style = bold, label=""];
21->12 [style = bold, label=""];
12->26 [style = dotted, label="true"];
0->11 [style = dotted, label="false"];
24->25 [style = solid, label="tmutations"];
20->8 [style = dashed, label="0"];
28->23 [style = bold, label=""];
5->24 [style = bold, label=""];
4->5 [style = solid, label="cf2"];
16->30 [style = bold, label=""];
0->29 [style = dashed, label="0"];
29->10 [style = bold, label=""];
40->43 [style = bold, label=""];
33->19 [style = bold, label=""];
7->19 [style = bold, label=""];
8->12 [style = bold, label=""];
46->22 [style = bold, label=""];
2->5 [style = bold, label=""];
15->1 [style = bold, label=""];
0->10 [style = dotted, label="false"];
28->23 [style = solid, label="metadata"];
39->44 [style = bold, label=""];
20->29 [style = bold, label=""];
7->12 [style = bold, label=""];
27->16 [style = dotted, label="false"];
8->19 [style = bold, label=""];
27->26 [style = dotted, label="true"];
26->36 [style = bold, label=""];
43->4 [style = solid, label="metadata"];
43->23 [style = solid, label="metadata"];
23->4 [style = bold, label=""];
10->3 [style = bold, label=""];
12->16 [style = bold, label=""];
12->26 [style = bold, label=""];
29->34 [style = dotted, label="false"];
1->23 [style = solid, label="metadata"];
32->29 [style = bold, label=""];
12->16 [style = dotted, label="false"];
0->10 [style = bold, label=""];
11->0 [style = bold, label=""];
0->17 [style = dotted, label="true"];
5->24 [style = solid, label="rm2"];
29->10 [style = dotted, label="false"];
7->33 [style = dashed, label="0"];
36->38 [style = bold, label=""];
29->35 [style = dotted, label="true"];
29->31 [style = dotted, label="true"];
}
