digraph {
2 [style = filled, label = "String actual = TextFormat.printer().usingTypeRegistry(TypeRegistry.newBuilder().add(TestAllTypes.getDescriptor()).build()).printToString(testAny)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(expected,actual)@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Descriptor descriptor = createDescriptorForAny(FieldDescriptorProto.newBuilder().setName(\"value\").setNumber(2).setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL).setType(FieldDescriptorProto.Type.TYPE_BYTES).build())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testPrintAny_anyFromWithNoTypeUrlField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(actual).isEqualTo(expected)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "DynamicMessage testAny = DynamicMessage.newBuilder(descriptor).setField(descriptor.findFieldByNumber(1),\"type.googleapis.com/\" + TestAllTypes.getDescriptor().getFullName()).setField(descriptor.findFieldByNumber(2),\"test\").build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "DynamicMessage testAny = DynamicMessage.newBuilder(descriptor).setField(descriptor.findFieldByNumber(2),TestAllTypes.newBuilder().setOptionalInt32(12345).build().toByteString()).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Descriptor descriptor = createDescriptorForAny(FieldDescriptorProto.newBuilder().setName(\"type_url\").setNumber(1).setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL).setType(FieldDescriptorProto.Type.TYPE_STRING).build(),FieldDescriptorProto.newBuilder().setName(\"value\").setNumber(2).setLabel(FieldDescriptorProto.Label.LABEL_OPTIONAL).setType(FieldDescriptorProto.Type.TYPE_STRING).build())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String expected = \"value: \"\b\271`\"\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String expected = \"type_url: \"type.googleapis.com/protobuf_unittest.TestAllTypes\"\" + \"value: \"test\"\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testPrintAny_anyWithInvalidFieldType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testPrintAny_anyFromWithNoTypeUrlField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
9->2 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
3->4 [style = solid, label="expected"];
11->9 [style = bold, label=""];
2->10 [style = bold, label=""];
3->4 [style = bold, label=""];
9->2 [style = solid, label="testAny"];
2->4 [style = solid, label="actual"];
0->2 [style = solid, label="testAny"];
6->5 [style = bold, label=""];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
5->11 [style = dashed, label="0"];
4->7 [style = dashed, label="0"];
10->4 [style = solid, label="expected"];
10->4 [style = bold, label=""];
3->10 [style = dashed, label="0"];
0->9 [style = dashed, label="0"];
8->11 [style = bold, label=""];
3->7 [style = solid, label="expected"];
}
