digraph {
0 [style = filled, label = "String sql@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Planner planner = Frameworks.getPlanner(config)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "CalciteAssert.model(TPCDS_MODEL).doWithConnection(null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "SqlNode parse = planner.parse(sql)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String expected@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final SchemaPlus rootSchema = Frameworks.createRootSchema(true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "checkBushy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "config['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "RelNode convert = planner.rel(validate).project()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(toString(transform),containsString(expected))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "checkBushy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Holder<SchemaPlus> root = Holder.of(null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return Frameworks.newConfigBuilder().parserConfig(SqlParser.Config.DEFAULT).defaultSchema(root.get()).traitDefs((List<RelTraitDef>)null).programs(Programs.heuristicJoinOrder(Programs.RULE_SET,true,2))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String sql@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "RelTraitSet traitSet = planner.getEmptyTraitSet().replace(EnumerableConvention.INSTANCE)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final FrameworkConfig config = Frameworks.newConfigBuilder().parserConfig(SqlParser.Config.DEFAULT).defaultSchema(CalciteAssert.addSchema(rootSchema,CalciteAssert.SchemaSpec.CLONE_FOODMART)).traitDefs((List<RelTraitDef>)null).programs(Programs.heuristicJoinOrder(Programs.RULE_SET,true,2)).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
7->3 [style = solid, label="convert"];
16->18 [style = bold, label=""];
14->12 [style = dotted, label="true"];
5->9 [style = bold, label=""];
12->6 [style = solid, label="sql"];
4->6 [style = bold, label=""];
1->2 [style = solid, label="expected"];
11->1 [style = dotted, label="true"];
9->4 [style = bold, label=""];
8->3 [style = bold, label=""];
18->17 [style = bold, label=""];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
10->7 [style = bold, label=""];
3->2 [style = solid, label="transform"];
13->3 [style = solid, label="traitSet"];
8->13 [style = dashed, label="0"];
8->3 [style = solid, label="traitSet"];
11->5 [style = bold, label=""];
3->2 [style = bold, label=""];
13->3 [style = bold, label=""];
6->10 [style = bold, label=""];
11->0 [style = dotted, label="true"];
6->10 [style = solid, label="parse"];
14->1 [style = dotted, label="true"];
0->6 [style = solid, label="sql"];
9->4 [style = solid, label="config"];
14->5 [style = bold, label=""];
}
