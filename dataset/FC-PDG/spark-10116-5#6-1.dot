digraph {
6 [style = filled, label = "pushResolver.finalizeShuffleMerge(new FinalizeShuffleMerge(TEST_APP,NO_ATTEMPT_ID,0))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testFailureAfterData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testFailureAfterData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testFailureAfterComplete['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "stream.onData(stream.getID(),ByteBuffer.wrap(new byte(((())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"num-chunks\",0,blockMeta.getNumChunks())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "stream.onFailure(stream.getID(),new RuntimeException(\"Forced Failure\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MergedBlockMeta blockMeta = pushResolver.getMergedBlockMeta(TEST_APP,0,0,0)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "MergedBlockMeta blockMeta = pushResolver.getMergedBlockMeta(TEST_APP,0,0)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "pushResolver.finalizeShuffleMerge(new FinalizeShuffleMerge(TEST_APP,NO_ATTEMPT_ID,0,0))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "stream.onData(stream.getID(),ByteBuffer.wrap(new byte(((())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "validateChunks(TEST_APP,0,0,blockMeta,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a5eb06,new int((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a5eb0a)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "stream.onData(stream.getID(),ByteBuffer.wrap(new byte(((())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "StreamCallbackWithID stream = pushResolver.receiveBlockDataAsStream(new PushBlockStream(TEST_APP,NO_ATTEMPT_ID,0,0,0,0))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "StreamCallbackWithID stream = pushResolver.receiveBlockDataAsStream(new PushBlockStream(TEST_APP,NO_ATTEMPT_ID,0,0,0,0,0))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "stream.onComplete(stream.getID())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->7 [style = dashed, label="0"];
2->3 [style = bold, label=""];
8->3 [style = bold, label=""];
0->11 [style = bold, label=""];
1->0 [style = bold, label=""];
1->10 [style = dashed, label="0"];
9->10 [style = bold, label=""];
7->8 [style = bold, label=""];
12->1 [style = bold, label=""];
2->8 [style = dashed, label="0"];
3->13 [style = dashed, label="0"];
2->13 [style = bold, label=""];
6->2 [style = bold, label=""];
11->5 [style = bold, label=""];
5->6 [style = bold, label=""];
15->0 [style = bold, label=""];
10->0 [style = bold, label=""];
5->7 [style = bold, label=""];
1->14 [style = bold, label=""];
4->1 [style = bold, label=""];
14->15 [style = bold, label=""];
2->13 [style = solid, label="blockMeta"];
0->5 [style = bold, label=""];
}
