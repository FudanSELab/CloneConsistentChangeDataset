digraph {
1 [style = filled, label = "Query serdeQuery = jsonMapper.readValue(json,)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Query query = Druids.newTimeseriesQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.dayGran).intervals(QueryRunnerTestHelper.fullOnIntervalSpec).aggregators(QueryRunnerTestHelper.rowsCount,QueryRunnerTestHelper.indexDoubleSum).postAggregators(QueryRunnerTestHelper.addRowsIndexConstant).descending(descending).build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Query serdeQuery = JSON_MAPPER.readValue(json,)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testQuerySerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Query query = Druids.newDataSourceMetadataQueryBuilder().dataSource(\"testing\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testQuerySerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "String json = jsonMapper.writeValueAsString(query)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testQuerySerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Query query = Druids.newTimeseriesQueryBuilder().dataSource(QueryRunnerTestHelper.DATA_SOURCE).granularity(QueryRunnerTestHelper.DAY_GRAN).intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC).aggregators(QueryRunnerTestHelper.ROWS_COUNT,QueryRunnerTestHelper.INDEX_DOUBLE_SUM).postAggregators(QueryRunnerTestHelper.ADD_ROWS_INDEX_CONSTANT).descending(descending).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "String json = JSON_MAPPER.writeValueAsString(query)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(query,serdeQuery)@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
4->0 [style = solid, label="query"];
10->3 [style = solid, label="query"];
1->5 [style = dashed, label="0"];
0->1 [style = solid, label="json"];
0->6 [style = dashed, label="0"];
6->5 [style = solid, label="json"];
1->3 [style = bold, label=""];
1->3 [style = solid, label="serdeQuery"];
10->0 [style = solid, label="query"];
9->10 [style = bold, label=""];
2->4 [style = bold, label=""];
8->7 [style = bold, label=""];
4->0 [style = bold, label=""];
7->3 [style = solid, label="query"];
6->5 [style = bold, label=""];
5->3 [style = solid, label="serdeQuery"];
4->7 [style = dashed, label="0"];
0->1 [style = bold, label=""];
10->0 [style = bold, label=""];
7->6 [style = bold, label=""];
4->3 [style = solid, label="query"];
7->6 [style = solid, label="query"];
}
