digraph {
34 [style = filled, label = "doc.add(new StoredField(\"boguslongs\",\"bogus\"))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.INT_POINT_PARSER,true)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.LEGACY_INT_PARSER,true)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "iw.addDocument(doc)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BinaryDocValues binaries = cache.getTerms(ar,\"bogusterms\",true)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(0,scratch.length)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertEquals(0,longs.get(0))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.LEGACY_FLOAT_PARSER,true)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(-1,sorted.getOrd(0))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "assertEquals(NO_MORE_DOCS,longs.nextDoc())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "testNonIndexedFields['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LONG_POINT_PARSER,true)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "assertFalse(bits.get(0))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.FLOAT_POINT_PARSER)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "ir.close()@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.DOUBLE_POINT_PARSER)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.INT_POINT_PARSER)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "doc.add(new StoredField(\"bogusfloats\",\"bogus\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Document doc = new Document()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RandomIndexWriter iw = new RandomIndexWriter(random(),dir)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(NO_MORE_DOCS,floats.nextDoc())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LEGACY_LONG_PARSER,true)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(0,scratch.length)@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "final FieldCache cache = FieldCache.DEFAULT@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(NO_MORE_DOCS,binaries.nextDoc())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "SortedSetDocValues sortedSet = cache.getDocTermOrds(ar,\"bogusmultivalued\",null)@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "assertEquals(NO_MORE_DOCS,doubles.nextDoc())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "scratch = sorted.get(0)@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "iw.close()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(0,floats.get(0))@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "BinaryDocValues binaries = cache.getTerms(ar,\"bogusterms\")@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "Bits bits = cache.getDocsWithField(ar,\"bogusbits\",null)@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "doc.add(new StoredField(\"bogustermsindex\",\"bogus\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testNonIndexedFields['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "dir.close()@@@41@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "SortedDocValues sorted = cache.getTermsIndex(ar,\"bogustermsindex\")@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "assertEquals(NO_MORE_DOCS,ints.nextDoc())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(NO_MORE_DOCS,sorted.nextDoc())@@@34@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LONG_POINT_PARSER)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "doc.add(new StoredField(\"bogusshorts\",\"bogus\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "dir.close()@@@30@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "LeafReader ar = getOnlyLeafReader(ir)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "DirectoryReader ir = iw.getReader()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.FLOAT_POINT_PARSER,true)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "BytesRef scratch = binaries.get(0)@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "doc.add(new StoredField(\"bogusbytes\",\"bogus\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "doc.add(new StoredField(\"bogusmultivalued\",\"bogus\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "doc.add(new StoredField(\"bogusdoubles\",\"bogus\"))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.DOUBLE_POINT_PARSER,true)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertEquals(0,doubles.get(0))@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "doc.add(new StoredField(\"bogusbits\",\"bogus\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "sortedSet.setDocument(0)@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "doc.add(new StoredField(\"bogusints\",\"bogus\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ir.close()@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(0,ints.get(0))@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "doc.add(new StoredField(\"bogusterms\",\"bogus\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testNonIndexedFields['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "assertEquals(NO_MORE_DOCS,sortedSet.nextDoc())@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.LEGACY_DOUBLE_PARSER,true)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertFalse(bits.get(0))@@@42@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "cache.purgeAllCaches()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(SortedSetDocValues.NO_MORE_ORDS,sortedSet.nextOrd())@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30->5 [style = solid, label="ar"];
4->51 [style = dashed, label="0"];
30->44 [style = solid, label="ar"];
30->61 [style = solid, label="ar"];
59->57 [style = bold, label=""];
23->62 [style = dashed, label="0"];
46->48 [style = bold, label=""];
36->20 [style = bold, label=""];
31->21 [style = dashed, label="0"];
28->0 [style = bold, label=""];
30->55 [style = solid, label="ar"];
21->31 [style = bold, label=""];
16->47 [style = dashed, label="0"];
30->52 [style = solid, label="ar"];
51->47 [style = bold, label=""];
26->35 [style = bold, label=""];
48->21 [style = bold, label=""];
33->56 [style = bold, label=""];
61->24 [style = bold, label=""];
0->40 [style = bold, label=""];
35->10 [style = bold, label=""];
30->33 [style = solid, label="ar"];
45->35 [style = bold, label=""];
6->62 [style = bold, label=""];
64->43 [style = bold, label=""];
1->53 [style = dashed, label="0"];
4->16 [style = bold, label=""];
37->59 [style = dashed, label="0"];
18->38 [style = bold, label=""];
55->60 [style = bold, label=""];
8->34 [style = bold, label=""];
7->11 [style = bold, label=""];
30->41 [style = solid, label="ar"];
6->54 [style = bold, label=""];
30->65 [style = solid, label="ar"];
22->32 [style = bold, label=""];
30->63 [style = solid, label="ar"];
11->12 [style = bold, label=""];
30->21 [style = solid, label="ar"];
39->26 [style = bold, label=""];
14->43 [style = bold, label=""];
30->19 [style = bold, label=""];
65->27 [style = bold, label=""];
23->37 [style = bold, label=""];
4->63 [style = dashed, label="0"];
19->13 [style = bold, label=""];
3->2 [style = bold, label=""];
2->21 [style = bold, label=""];
30->54 [style = solid, label="ar"];
54->59 [style = bold, label=""];
47->44 [style = bold, label=""];
39->60 [style = dashed, label="0"];
30->35 [style = solid, label="ar"];
63->16 [style = bold, label=""];
27->50 [style = dashed, label="0"];
30->53 [style = solid, label="ar"];
5->61 [style = dashed, label="0"];
41->57 [style = dashed, label="0"];
41->27 [style = bold, label=""];
52->33 [style = bold, label=""];
6->23 [style = bold, label=""];
30->57 [style = solid, label="ar"];
37->41 [style = bold, label=""];
1->3 [style = bold, label=""];
16->61 [style = bold, label=""];
41->65 [style = dashed, label="0"];
31->36 [style = bold, label=""];
3->46 [style = dashed, label="0"];
40->9 [style = bold, label=""];
30->51 [style = solid, label="ar"];
32->30 [style = bold, label=""];
37->65 [style = bold, label=""];
43->7 [style = bold, label=""];
21->55 [style = bold, label=""];
34->28 [style = bold, label=""];
43->7 [style = solid, label="dir"];
53->46 [style = bold, label=""];
11->38 [style = solid, label="doc"];
56->45 [style = bold, label=""];
58->53 [style = bold, label=""];
5->24 [style = bold, label=""];
24->58 [style = dashed, label="0"];
16->5 [style = bold, label=""];
0->18 [style = bold, label=""];
22->30 [style = solid, label="ir"];
13->6 [style = bold, label=""];
24->1 [style = bold, label=""];
60->52 [style = bold, label=""];
30->4 [style = solid, label="ar"];
24->42 [style = bold, label=""];
30->48 [style = solid, label="ar"];
5->44 [style = dashed, label="0"];
30->62 [style = solid, label="ar"];
30->1 [style = solid, label="ar"];
57->50 [style = bold, label=""];
42->17 [style = bold, label=""];
27->63 [style = bold, label=""];
15->18 [style = bold, label=""];
49->43 [style = bold, label=""];
20->33 [style = bold, label=""];
23->54 [style = dashed, label="0"];
27->4 [style = bold, label=""];
33->39 [style = bold, label=""];
10->42 [style = bold, label=""];
62->37 [style = bold, label=""];
9->15 [style = bold, label=""];
30->23 [style = solid, label="ar"];
12->25 [style = bold, label=""];
50->51 [style = bold, label=""];
25->8 [style = bold, label=""];
44->58 [style = bold, label=""];
38->22 [style = bold, label=""];
17->29 [style = bold, label=""];
}
