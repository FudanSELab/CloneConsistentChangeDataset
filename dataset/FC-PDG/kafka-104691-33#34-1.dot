digraph {
62 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(sinkConnector)).andReturn(delegatingLoader).times(3)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertStatistics(worker,0,0)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "connectorProps.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,\"WorkerTestConnector\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "EasyMock.expectLastCall()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testAddConnectorByAlias['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.expectLastCall()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "expectedTaskProps.put(\"foo\",\"bar\")@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "connectorProps.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,.getName())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "EasyMock.expect(plugins.newConnector(\"WorkerTestConnector\")).andReturn(sourceConnector)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testAddConnectorByAlias['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "expectStartStorage()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(CONNECTOR_ID)),worker.connectorNames())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "worker.startConnector(CONNECTOR_ID,connectorProps,ctx,connectorStatusListener,TargetState.STARTED)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expectLastCall()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "ConnectorConfig connConfig = new SinkConnectorConfig(plugins,connProps)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "EasyMock.expectLastCall()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertStatistics(worker,0,0)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "worker.stopConnector(CONNECTOR_ID)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "{}@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertStatistics(worker,0,0)@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "expectStopStorage()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "EasyMock.expectLastCall()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "ConnectException e@@@42@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "List<Map<String,String>> taskConfigs = worker.connectorTaskConfigs(CONNECTOR_ID,connConfig)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "PowerMock.replayAll()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testReconfigureConnectorTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore,noneConnectorClientConfigOverridePolicy)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertStatistics(worker,1,0)@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "sourceConnector.initialize(anyObject())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "EasyMock.expectLastCall()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "connProps.put(ConnectorConfig.TASKS_MAX_CONFIG,\"2\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "fail(\"Should have thrown exception when trying to add connector with same name.\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "worker.stop()@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "sinkConnector.stop()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(3)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "expectedTaskProps.put(SinkTask.TOPICS_CONFIG,\"foo,bar\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "PowerMock.replayAll()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "expectFileConfigProvider()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "PowerMock.verifyAll()@@@63@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expectStopStorage()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "connectorProps.put(SinkConnectorConfig.TOPICS_CONFIG,\"foo,bar\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(0))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "EasyMock.expect(sinkConnector.taskConfigs(2)).andReturn(Arrays.asList(taskProps,taskProps))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(3)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "EasyMock.expectLastCall()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Map<String,String> expectedTaskProps = new HashMap<>()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "taskProps.put(\"foo\",\"bar\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "worker.start()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertStatistics(worker,1,0)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "sinkConnector.start(connectorProps)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assertEquals(2,taskConfigs.size())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "sinkConnector.initialize(anyObject())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "Map<String,String> connProps = new HashMap<>(connectorProps)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "expectClusterId()@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(sourceConnector)).andReturn(delegatingLoader).times(2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "expectedTaskProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "EasyMock.expect(sourceConnector.version()).andReturn(\"1.0\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(1))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "EasyMock.expect(plugins.newConnector(.getName())).andReturn(sinkConnector)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "EasyMock.expectLastCall()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "EasyMock.expect(sinkConnector.taskClass()).andReturn()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "Map<String,String> taskProps = new HashMap<>()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "EasyMock.expectLastCall()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "worker.herder = herder@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "worker.startConnector(CONNECTOR_ID,connectorProps,ctx,connectorStatusListener,TargetState.STARTED)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "EasyMock.expect(sourceConnector.version()).andReturn(\"1.0\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expectConverters()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
23->34 [style = solid, label="worker"];
17->74 [style = dashed, label="0"];
76->64 [style = bold, label=""];
31->63 [style = dashed, label="0"];
17->9 [style = bold, label=""];
50->56 [style = bold, label=""];
11->66 [style = solid, label="worker"];
59->62 [style = bold, label=""];
48->35 [style = bold, label=""];
61->59 [style = bold, label=""];
40->38 [style = bold, label=""];
11->33 [style = solid, label="worker"];
8->40 [style = bold, label=""];
16->60 [style = bold, label=""];
3->18 [style = bold, label=""];
47->49 [style = bold, label=""];
55->74 [style = bold, label=""];
42->44 [style = bold, label=""];
65->50 [style = bold, label=""];
52->67 [style = bold, label=""];
2->49 [style = dashed, label="0"];
70->31 [style = bold, label=""];
23->35 [style = solid, label="worker"];
33->16 [style = bold, label=""];
21->19 [style = bold, label=""];
63->18 [style = bold, label=""];
9->2 [style = bold, label=""];
68->76 [style = bold, label=""];
65->50 [style = solid, label="connConfig"];
11->34 [style = solid, label="worker"];
11->16 [style = solid, label="worker"];
43->32 [style = bold, label=""];
18->12 [style = bold, label=""];
19->39 [style = bold, label=""];
0->29 [style = bold, label=""];
20->31 [style = bold, label=""];
41->6 [style = bold, label=""];
74->47 [style = bold, label=""];
36->14 [style = bold, label=""];
8->38 [style = bold, label=""];
26->27 [style = bold, label=""];
35->71 [style = bold, label=""];
11->48 [style = solid, label="worker"];
22->20 [style = bold, label=""];
71->68 [style = bold, label=""];
58->76 [style = bold, label=""];
30->7 [style = bold, label=""];
56->54 [style = solid, label="expectedTaskProps"];
14->52 [style = bold, label=""];
39->25 [style = bold, label=""];
23->15 [style = solid, label="worker"];
24->8 [style = bold, label=""];
31->3 [style = bold, label=""];
37->55 [style = dashed, label="0"];
67->45 [style = bold, label=""];
57->69 [style = bold, label=""];
15->33 [style = bold, label=""];
11->26 [style = bold, label=""];
44->57 [style = bold, label=""];
56->43 [style = solid, label="expectedTaskProps"];
54->43 [style = bold, label=""];
23->27 [style = solid, label="worker"];
23->39 [style = solid, label="worker"];
4->13 [style = bold, label=""];
12->36 [style = bold, label=""];
18->75 [style = dashed, label="0"];
35->32 [style = bold, label=""];
13->48 [style = bold, label=""];
51->6 [style = bold, label=""];
29->37 [style = bold, label=""];
45->53 [style = bold, label=""];
49->61 [style = bold, label=""];
10->6 [style = bold, label=""];
31->63 [style = bold, label=""];
73->23 [style = bold, label=""];
14->52 [style = dashed, label="0"];
29->55 [style = bold, label=""];
7->22 [style = bold, label=""];
18->75 [style = bold, label=""];
27->34 [style = bold, label=""];
60->72 [style = bold, label=""];
5->24 [style = bold, label=""];
64->65 [style = bold, label=""];
66->77 [style = bold, label=""];
62->70 [style = bold, label=""];
23->13 [style = solid, label="worker"];
28->15 [style = bold, label=""];
37->17 [style = bold, label=""];
69->54 [style = bold, label=""];
67->53 [style = solid, label="taskProps"];
38->23 [style = bold, label=""];
53->73 [style = bold, label=""];
6->0 [style = bold, label=""];
46->58 [style = bold, label=""];
76->65 [style = solid, label="connProps"];
23->33 [style = solid, label="worker"];
14->1 [style = bold, label=""];
56->42 [style = bold, label=""];
9->47 [style = dashed, label="0"];
23->21 [style = bold, label=""];
25->11 [style = bold, label=""];
11->32 [style = solid, label="worker"];
34->4 [style = bold, label=""];
75->36 [style = bold, label=""];
72->66 [style = bold, label=""];
11->28 [style = solid, label="worker"];
2->30 [style = bold, label=""];
13->35 [style = bold, label=""];
32->28 [style = bold, label=""];
}
