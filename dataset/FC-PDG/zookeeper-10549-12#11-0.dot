digraph {
7 [style = filled, label = "StatsTrack st = new StatsTrack(new String(data))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "quota.setCount(1000)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "StatsTrack st = new StatsTrack(new String(data))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "quota.setBytes(5000)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "i = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "SetQuotaCommand.createQuota(zk,\"/a\",1000L,5000)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "StatsTrack st = new StatsTrack(data)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertTrue(st.getBytes() == 2404L,\"bytes are set\")@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testQuotaWithQuorum['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "StatsTrack qst = new StatsTrack(new String(qdata))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "byte(( data = zk.getData(statPath,false,new Stat())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "zk.create(\"/a\",\"some\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertNotNull(server.getZKDatabase().getDataTree().getMaxPrefixWithQuota(path) != null,\"Quota is still set\")@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "i = 300@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "stopServer()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "final String path = \"/a/b/v\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "String absolutePath = Quotas.quotaZookeeper + path + \"/\" + Quotas.limitNode@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testQuotaWithQuorum['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTrue(qst.getBytes() == 8L,\"bytes are set\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "st = new StatsTrack(data)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertTrue(st.getCount() == 601,\"num count is set\")@@@29@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "zk.setData(\"/\",\"some\".getBytes(),-1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "zk.create(\"/a/b/v/d\",\"some\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "StatsTrack quota = new StatsTrack()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "zk.create(\"/a/b\",\"some\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "stopServer()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String statPath = Quotas.quotaZookeeper + path + \"/\" + Quotas.statNode@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertTrue(qst.getCount() == 2,\"count is set\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i = 300@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ZooKeeper zk = createClient()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "zk.create(\"/a/\" + i,\"some\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(st.getCount() == 301,\"num count is set\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(st.getBytes() == 1204L,\"bytes are set\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "ZooKeeperServer server = serverFactory.getZooKeeperServer()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "zk.setData(\"/\",\"some\".getBytes(),-1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertTrue(st.getCount() == 10,\"num count is set\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "data = zk.getData(statPath,false,new Stat())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(st.getBytes() == 5L,\"bytes are set\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(st.getBytes() == 2404L,\"bytes are set\")@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "i < 600@@@22@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "i++@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "byte(( qdata = zk.getData(statPath,false,new Stat())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "SetQuotaCommand.createQuota(zk,path,5L,10)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "byte(( data = zk.getData(statPath,false,new Stat())@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "SetQuotaCommand.createQuota(zk,\"/a\",quota)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "byte(( data = zk.getData(absolutePath,false,new Stat())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "zk.create(\"/a/b/v\",\"some\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "zk.create(\"/a/\" + i,\"some\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "startServer()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "testQuota['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "startServer()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final ZooKeeper zk = createClient()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i++@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i < 300@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String statPath = Quotas.statPath(\"/a\")@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "String statPath = Quotas.quotaZookeeper + \"/a\" + \"/\" + Quotas.statNode@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->25 [style = bold, label=""];
38->52 [style = bold, label=""];
1->10 [style = dashed, label="0"];
52->13 [style = bold, label=""];
9->7 [style = bold, label=""];
5->28 [style = bold, label=""];
30->29 [style = bold, label=""];
0->9 [style = solid, label="statPath"];
47->48 [style = solid, label="absolutePath"];
18->22 [style = bold, label=""];
8->20 [style = bold, label=""];
31->6 [style = bold, label=""];
15->11 [style = bold, label=""];
45->43 [style = bold, label=""];
2->31 [style = solid, label="i"];
20->38 [style = dashed, label="0"];
1->2 [style = solid, label="i"];
18->22 [style = solid, label="i"];
18->2 [style = solid, label="i"];
27->5 [style = bold, label=""];
5->55 [style = dashed, label="0"];
48->34 [style = bold, label=""];
19->3 [style = bold, label=""];
27->4 [style = solid, label="statPath"];
2->31 [style = bold, label=""];
38->54 [style = solid, label="zk"];
4->25 [style = solid, label="data"];
27->5 [style = solid, label="statPath"];
21->0 [style = bold, label=""];
35->54 [style = bold, label=""];
47->48 [style = bold, label=""];
1->22 [style = solid, label="i"];
43->51 [style = bold, label=""];
19->3 [style = solid, label="i"];
52->10 [style = solid, label="path"];
31->6 [style = dotted, label="true"];
2->18 [style = bold, label=""];
31->4 [style = bold, label=""];
49->38 [style = bold, label=""];
11->3 [style = solid, label="i"];
9->7 [style = solid, label="data"];
3->33 [style = bold, label=""];
31->14 [style = dotted, label="true"];
46->41 [style = bold, label=""];
1->18 [style = solid, label="i"];
24->20 [style = bold, label=""];
5->1 [style = bold, label=""];
29->27 [style = bold, label=""];
14->6 [style = solid, label="i"];
22->18 [style = bold, label=""];
11->12 [style = solid, label="i"];
52->54 [style = solid, label="path"];
2->14 [style = solid, label="i"];
13->15 [style = bold, label=""];
20->21 [style = solid, label="zk"];
22->14 [style = bold, label=""];
14->6 [style = bold, label=""];
40->46 [style = solid, label="qdata"];
44->42 [style = bold, label=""];
22->2 [style = bold, label=""];
22->18 [style = dotted, label="true"];
10->39 [style = dashed, label="0"];
23->32 [style = bold, label=""];
15->53 [style = bold, label=""];
3->12 [style = bold, label=""];
55->10 [style = bold, label=""];
33->26 [style = bold, label=""];
53->50 [style = bold, label=""];
51->37 [style = bold, label=""];
10->5 [style = bold, label=""];
5->28 [style = solid, label="data"];
11->3 [style = bold, label=""];
7->28 [style = dashed, label="0"];
11->19 [style = solid, label="i"];
34->39 [style = bold, label=""];
14->31 [style = bold, label=""];
10->40 [style = bold, label=""];
14->31 [style = solid, label="i"];
3->21 [style = bold, label=""];
17->13 [style = bold, label=""];
50->35 [style = bold, label=""];
16->4 [style = bold, label=""];
28->22 [style = bold, label=""];
20->29 [style = solid, label="zk"];
0->9 [style = bold, label=""];
20->17 [style = bold, label=""];
39->55 [style = bold, label=""];
7->10 [style = bold, label=""];
2->6 [style = solid, label="i"];
25->23 [style = bold, label=""];
33->29 [style = solid, label="quota"];
10->40 [style = solid, label="statPath"];
42->36 [style = bold, label=""];
18->2 [style = bold, label=""];
48->34 [style = solid, label="data"];
22->2 [style = dotted, label="true"];
26->30 [style = bold, label=""];
1->22 [style = bold, label=""];
40->46 [style = bold, label=""];
6->14 [style = bold, label=""];
19->12 [style = solid, label="i"];
54->47 [style = bold, label=""];
52->37 [style = solid, label="path"];
3->19 [style = dotted, label="true"];
6->25 [style = dashed, label="0"];
6->16 [style = bold, label=""];
3->12 [style = dotted, label="true"];
36->45 [style = bold, label=""];
0->14 [style = solid, label="statPath"];
12->19 [style = bold, label=""];
14->6 [style = solid, label="data"];
52->47 [style = solid, label="path"];
41->44 [style = bold, label=""];
}
