digraph {
10 [style = filled, label = "assertNotNull(d)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertNotNull(d)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNull(schema.getFieldOrNull(\"not_in_schema\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(val instanceof String)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertTrue(val instanceof String)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "testParseFrenchDate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "d = processAdd(\"parse-date-no-run-processor\",doc(f(\"id\",\"72\"),f(\"not_in_schema\",dateString,\"not a date\")))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SolrInputDocument d = processAdd(\"parse-date-no-run-processor\",doc(f(\"id\",\"18\"),f(\"not_in_schema\",dateString)))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNotNull(d)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertNotNull(d)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Instant.parse(dateString),((Date)d.getFieldValue(\"not_in_schema\")).toInstant())@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String dateString = \"2010-11-12T13:14:15.168Z\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(d.getFieldValue(\"not_in_schema\"),IS_DATE)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String frenchDateString = \"le vendredi 15 janvier 2010\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testParseDateFieldNotInSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "SolrInputDocument d = processAdd(\"parse-french-date-UTC-defaultTimeZone-no-run-processor\",doc(f(\"id\",\"88\"),f(\"not_in_schema\",frenchDateString)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "IndexSchema schema = h.getCore().getLatestSchema()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(val,IS_STRING)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(val,IS_STRING)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "String dateString = \"2010-01-15T00:00:00.000Z\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testParseDateFieldNotInSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->11 [style = solid, label="dateString"];
9->16 [style = dashed, label="0"];
5->9 [style = bold, label=""];
16->6 [style = bold, label=""];
0->2 [style = bold, label=""];
4->6 [style = solid, label="dateString"];
12->17 [style = dashed, label="0"];
10->17 [style = bold, label=""];
4->21 [style = dashed, label="0"];
8->0 [style = solid, label="d"];
3->4 [style = bold, label=""];
1->13 [style = bold, label=""];
21->18 [style = bold, label=""];
0->15 [style = bold, label=""];
9->6 [style = bold, label=""];
20->2 [style = bold, label=""];
2->15 [style = dashed, label="0"];
8->0 [style = bold, label=""];
5->16 [style = bold, label=""];
20->2 [style = solid, label="d"];
18->20 [style = bold, label=""];
7->5 [style = bold, label=""];
6->10 [style = solid, label="d"];
4->8 [style = solid, label="dateString"];
15->11 [style = bold, label=""];
13->3 [style = bold, label=""];
19->13 [style = bold, label=""];
10->12 [style = bold, label=""];
6->10 [style = bold, label=""];
4->7 [style = solid, label="dateString"];
7->5 [style = solid, label="d"];
18->7 [style = solid, label="dateString"];
4->8 [style = bold, label=""];
3->21 [style = bold, label=""];
14->13 [style = bold, label=""];
21->20 [style = solid, label="frenchDateString"];
2->11 [style = bold, label=""];
11->7 [style = bold, label=""];
}
