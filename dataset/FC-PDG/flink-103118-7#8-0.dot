digraph {
31 [style = filled, label = "ResourceSpec preferredResource2 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(300).build()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "ResourceSpec preferredResource7 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(800).build()@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "opMethod.invoke(source1,minResource1,preferredResource1)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "sinkMethod.invoke(sink,minResource7,preferredResource7)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "ResourceSpec preferredResource4 = ResourceSpec.newBuilder(2.0,500).build()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "ResourceSpec minResource2 = ResourceSpec.newBuilder(1.0,200).build()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "DataStream<Long> source1 = env.generateSequence(0,0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(preferredResource5,env.getStreamGraph().getStreamNode(connected.getId()).getPreferredResources())@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Method opMethod = .getDeclaredMethod(\"setResources\",,)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ResourceSpec preferredResource4 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(500).build()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "ResourceSpec preferredResource6 = ResourceSpec.newBuilder(2.0,700).build()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "ResourceSpec preferredResource2 = ResourceSpec.newBuilder(2.0,300).build()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "opMethod.invoke(map2,minResource4,preferredResource4)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(preferredResource6,env.getStreamGraph().getStreamNode(windowed.getId()).getPreferredResources())@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "opMethod.invoke(windowed,minResource6,preferredResource6)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ResourceSpec minResource4 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(400).build()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "DataStream<Long> windowed = connected.windowAll(GlobalWindows.create()).trigger(PurgingTrigger.of(CountTrigger.of(10))).fold(0L,new FoldFunction<Long,Long>(){@Override public Long fold(Long accumulator,Long value){return null}})@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(minResource5,env.getStreamGraph().getStreamNode(connected.getId()).getMinResources())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "ResourceSpec minResource7 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(700).build()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "ResourceSpec minResource4 = ResourceSpec.newBuilder(1.0,400).build()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "ResourceSpec minResource7 = ResourceSpec.newBuilder(1.0,700).build()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "assertEquals(minResources,operator.getMinResources())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(minResource2,env.getStreamGraph().getStreamNode(map1.getId()).getMinResources())@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "sinkMethod.setAccessible(true)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(preferredResource4,env.getStreamGraph().getStreamNode(map2.getId()).getPreferredResources())@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(preferredResource7,env.getStreamGraph().getStreamNode(sink.getTransformation().getId()).getPreferredResources())@@@71@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(preferredResource1,env.getStreamGraph().getStreamNode(source1.getId()).getPreferredResources())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(minResource6,env.getStreamGraph().getStreamNode(windowed.getId()).getMinResources())@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "ResourceSpec preferredResource3 = ResourceSpec.newBuilder(2.0,400).build()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "ResourceSpec preferredResources = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(200).build()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Method sinkMethod = .getDeclaredMethod(\"setResources\",,)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ResourceSpec preferredResource3 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(400).build()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertEquals(minResource7,env.getStreamGraph().getStreamNode(sink.getTransformation().getId()).getMinResources())@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "ResourceSpec preferredResource5 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(600).build()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "ResourceSpec minResource5 = ResourceSpec.newBuilder(1.0,500).build()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "ResourceSpec preferredResource1 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(200).build()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertEquals(preferredResource3,env.getStreamGraph().getStreamNode(source2.getId()).getPreferredResources())@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "ResourceSpec preferredResource5 = ResourceSpec.newBuilder(2.0,600).build()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "assertEquals(preferredResources,operator.getPreferredResources())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "opMethod.setAccessible(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "DataStreamSink<Long> sink = windowed.print()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "DataStream<Long> source2 = env.generateSequence(0,0)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ResourceSpec minResource3 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(300).build()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "DataStream<Long> connected = map1.connect(map2).flatMap(new CoFlatMapFunction<Long,Long,Long>(){@Override public void flatMap1(Long value,Collector<Long> out){}@Override public void flatMap2(Long value,Collector<Long> out){}})@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "ResourceSpec preferredResource7 = ResourceSpec.newBuilder(2.0,800).build()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertEquals(minResource1,env.getStreamGraph().getStreamNode(source1.getId()).getMinResources())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "opMethod.setAccessible(true)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "opMethod.invoke(source2,minResource3,preferredResource3)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "opMethod.invoke(connected,minResource5,preferredResource5)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "ResourceSpec minResource1 = ResourceSpec.newBuilder(1.0,100).build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "ResourceSpec minResource6 = ResourceSpec.newBuilder(1.0,600).build()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "ResourceSpec preferredResource1 = ResourceSpec.newBuilder(2.0,200).build()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(minResource3,env.getStreamGraph().getStreamNode(source2.getId()).getMinResources())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ResourceSpec minResource6 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(600).build()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "opMethod.invoke(map1,minResource2,preferredResource2)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "ResourceSpec minResource3 = ResourceSpec.newBuilder(1.0,300).build()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "testResources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "Method opMethod = .getDeclaredMethod(\"setResources\",,)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "opMethod.invoke(operator,minResources,preferredResources)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "ResourceSpec preferredResource6 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(700).build()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(preferredResource2,env.getStreamGraph().getStreamNode(map1.getId()).getPreferredResources())@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "ResourceSpec minResources = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(100).build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "ResourceSpec minResource1 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(100).build()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "Operator operator = new MockOperator()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ResourceSpec minResource5 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(500).build()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "ResourceSpec minResource2 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(200).build()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
71 [style = filled, label = "testConfigurationOfResource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(minResource4,env.getStreamGraph().getStreamNode(map2.getId()).getMinResources())@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DataStream<Long> map2 = source2.map(new MapFunction<Long,Long>(){@Override public Long map(Long value){return null}})@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "DataStream<Long> map1 = source1.map(new MapFunction<Long,Long>(){@Override public Long map(Long value){return null}})@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testResources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
63->66 [style = solid, label="preferredResources"];
23->32 [style = solid, label="minResource3"];
37->28 [style = bold, label=""];
70->69 [style = bold, label=""];
59->8 [style = solid, label="preferredResource1"];
51->16 [style = solid, label="preferredResource7"];
17->50 [style = dashed, label="0"];
21->32 [style = solid, label="source2"];
40->0 [style = solid, label="minResource2"];
39->14 [style = bold, label=""];
38->55 [style = dashed, label="0"];
65->66 [style = solid, label="minResources"];
59->62 [style = bold, label=""];
60->50 [style = bold, label=""];
38->41 [style = bold, label=""];
25->35 [style = bold, label=""];
23->22 [style = solid, label="minResource3"];
57->39 [style = solid, label="minResource5"];
67->66 [style = solid, label="operator"];
26->4 [style = solid, label="minResource6"];
26->49 [style = dashed, label="0"];
1->46 [style = bold, label=""];
49->55 [style = bold, label=""];
12->39 [style = solid, label="minResource5"];
8->0 [style = bold, label=""];
61->25 [style = bold, label=""];
63->66 [style = bold, label=""];
71->67 [style = bold, label=""];
53->9 [style = solid, label="preferredResource2"];
45->6 [style = bold, label=""];
62->53 [style = bold, label=""];
34->26 [style = bold, label=""];
33->25 [style = bold, label=""];
43->9 [style = solid, label="map1"];
52->46 [style = solid, label="minResource7"];
17->10 [style = solid, label="minResource4"];
36->18 [style = bold, label=""];
9->21 [style = bold, label=""];
42->3 [style = bold, label=""];
41->27 [style = solid, label="minResource7"];
15->45 [style = solid, label="connected"];
40->31 [style = bold, label=""];
7->27 [style = solid, label="preferredResource7"];
59->13 [style = solid, label="preferredResource1"];
50->37 [style = solid, label="minResource4"];
24->10 [style = bold, label=""];
48->49 [style = bold, label=""];
65->70 [style = solid, label="minResources"];
67->64 [style = bold, label=""];
29->58 [style = dashed, label="0"];
62->9 [style = solid, label="minResource2"];
30->27 [style = bold, label=""];
11->13 [style = solid, label="preferredResource1"];
24->10 [style = solid, label="map2"];
56->32 [style = solid, label="minResource3"];
5->17 [style = bold, label=""];
58->10 [style = solid, label="preferredResource4"];
38->19 [style = solid, label="preferredResource6"];
31->20 [style = solid, label="preferredResource2"];
13->43 [style = bold, label=""];
54->59 [style = bold, label=""];
0->20 [style = bold, label=""];
53->56 [style = bold, label=""];
44->37 [style = bold, label=""];
7->51 [style = dashed, label="0"];
27->47 [style = bold, label=""];
52->51 [style = bold, label=""];
12->45 [style = solid, label="minResource5"];
38->1 [style = solid, label="preferredResource6"];
35->54 [style = dashed, label="0"];
53->20 [style = solid, label="preferredResource2"];
14->4 [style = bold, label=""];
5->32 [style = solid, label="preferredResource3"];
22->44 [style = bold, label=""];
41->46 [style = solid, label="minResource7"];
40->62 [style = dashed, label="0"];
66->70 [style = bold, label=""];
46->16 [style = bold, label=""];
7->16 [style = solid, label="preferredResource7"];
23->5 [style = bold, label=""];
50->58 [style = bold, label=""];
62->0 [style = solid, label="minResource2"];
28->39 [style = bold, label=""];
56->60 [style = bold, label=""];
11->59 [style = dashed, label="0"];
6->19 [style = solid, label="windowed"];
68->65 [style = bold, label=""];
55->1 [style = solid, label="preferredResource6"];
11->8 [style = solid, label="preferredResource1"];
23->56 [style = dashed, label="0"];
58->57 [style = bold, label=""];
56->22 [style = solid, label="minResource3"];
5->60 [style = dashed, label="0"];
43->9 [style = bold, label=""];
34->48 [style = dashed, label="0"];
49->19 [style = solid, label="minResource6"];
54->13 [style = solid, label="minResource1"];
40->9 [style = solid, label="minResource2"];
31->53 [style = dashed, label="0"];
51->36 [style = bold, label=""];
34->45 [style = solid, label="preferredResource5"];
4->1 [style = bold, label=""];
55->52 [style = bold, label=""];
49->4 [style = solid, label="minResource6"];
41->52 [style = dashed, label="0"];
25->54 [style = bold, label=""];
65->63 [style = bold, label=""];
7->36 [style = bold, label=""];
31->23 [style = bold, label=""];
15->45 [style = bold, label=""];
10->15 [style = bold, label=""];
41->7 [style = bold, label=""];
29->10 [style = solid, label="preferredResource4"];
47->8 [style = bold, label=""];
17->37 [style = solid, label="minResource4"];
35->47 [style = solid, label="minResource1"];
48->14 [style = solid, label="preferredResource5"];
29->28 [style = solid, label="preferredResource4"];
12->57 [style = dashed, label="0"];
63->69 [style = solid, label="preferredResources"];
12->34 [style = bold, label=""];
6->19 [style = bold, label=""];
57->45 [style = solid, label="minResource5"];
18->2 [style = bold, label=""];
11->40 [style = bold, label=""];
58->28 [style = solid, label="preferredResource4"];
55->19 [style = solid, label="preferredResource6"];
20->22 [style = bold, label=""];
57->48 [style = bold, label=""];
26->38 [style = bold, label=""];
52->27 [style = solid, label="minResource7"];
31->9 [style = solid, label="preferredResource2"];
29->12 [style = bold, label=""];
60->32 [style = solid, label="preferredResource3"];
35->11 [style = bold, label=""];
21->32 [style = bold, label=""];
64->68 [style = bold, label=""];
34->14 [style = solid, label="preferredResource5"];
54->47 [style = solid, label="minResource1"];
50->10 [style = solid, label="minResource4"];
3->13 [style = bold, label=""];
3->13 [style = solid, label="source1"];
51->27 [style = solid, label="preferredResource7"];
48->45 [style = solid, label="preferredResource5"];
5->44 [style = solid, label="preferredResource3"];
60->44 [style = solid, label="preferredResource3"];
26->19 [style = solid, label="minResource6"];
17->29 [style = bold, label=""];
32->24 [style = bold, label=""];
2->42 [style = bold, label=""];
30->27 [style = solid, label="sink"];
35->13 [style = solid, label="minResource1"];
19->30 [style = bold, label=""];
}
