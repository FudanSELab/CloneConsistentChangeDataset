digraph {
16 [style = filled, label = "doNothing().when(vifDriver).unplug(intDef)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "fail(e.getMessage())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Domain vm = Mockito.mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertNotNull(wrapper)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "doNothing().when(vifDriver).unplug(intDef,true)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertTrue(answer.getResult())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final UnPlugNicCommand command = new UnPlugNicCommand(nic,instanceName)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "when(intDef.getDevName()).thenReturn(\"eth0\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Connect conn = Mockito.mock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "doNothing().when(vm).detachDevice(interfaceDefStr)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String interfaceDefStr = interfaceDef.toString()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(libvirtComputingResource.getInterfaces(conn,command.getVmName())).thenReturn(nics)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testUnPlugNicCommandMatchMack['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "when(intDef.getBrName()).thenReturn(\"br0\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final VifDriver vifDriver = Mockito.mock()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final String instanceName = \"Test\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final InterfaceDef intDef = Mockito.mock()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testUnPlugNicCommandMatchMack['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "when(libvirtComputingResource.getDomain(conn,instanceName)).thenReturn(vm)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "when(intDef.getMacAddress()).thenReturn(\"00:00:00:00\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "drivers.add(vifDriver)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "nics.add(intDef)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "verify(libvirtUtilitiesHelper,times(1)).getConnectionByVmName(command.getVmName())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(interfaceDef.toString()).thenReturn(\"Interface\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "when(libvirtComputingResource.getAllVifDrivers()).thenReturn(drivers)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "verify(libvirtComputingResource,times(1)).getLibvirtUtilitiesHelper()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final LibvirtException e@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final List<InterfaceDef> nics = new ArrayList<InterfaceDef>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "when(nic.getMac()).thenReturn(\"00:00:00:00\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(libvirtUtilitiesHelper.getConnectionByVmName(command.getVmName())).thenReturn(conn)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verify(libvirtComputingResource,times(1)).getDomain(conn,instanceName)@@@29@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "verify(libvirtComputingResource,times(1)).getAllVifDrivers()@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final List<VifDriver> drivers = new ArrayList<VifDriver>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testUnPlugNicCommandNoNics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final InterfaceDef interfaceDef = Mockito.mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final NicTO nic = Mockito.mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
13->16 [style = solid, label="intDef"];
30->0 [style = solid, label="vifDriver"];
18->3 [style = bold, label=""];
38->20 [style = bold, label=""];
33->35 [style = bold, label=""];
12->31 [style = dotted, label="true"];
16->37 [style = dashed, label="0"];
14->8 [style = solid, label="interfaceDefStr"];
3->1 [style = solid, label="conn"];
34->19 [style = bold, label=""];
5->20 [style = bold, label=""];
11->14 [style = bold, label=""];
6->22 [style = bold, label=""];
7->30 [style = bold, label=""];
9->2 [style = bold, label=""];
7->9 [style = solid, label="nics"];
23->1 [style = solid, label="instanceName"];
10->25 [style = solid, label="drivers"];
21->15 [style = bold, label=""];
27->30 [style = bold, label=""];
2->34 [style = bold, label=""];
13->27 [style = solid, label="intDef"];
23->4 [style = bold, label=""];
28->9 [style = bold, label=""];
3->6 [style = bold, label=""];
36->32 [style = bold, label=""];
4->18 [style = bold, label=""];
19->36 [style = bold, label=""];
17->33 [style = bold, label=""];
3->2 [style = solid, label="conn"];
23->4 [style = solid, label="instanceName"];
19->36 [style = solid, label="wrapper"];
16->19 [style = bold, label=""];
25->16 [style = bold, label=""];
22->7 [style = bold, label=""];
34->11 [style = bold, label=""];
13->37 [style = solid, label="intDef"];
18->28 [style = solid, label="libvirtUtilitiesHelper"];
24->26 [style = bold, label=""];
26->2 [style = bold, label=""];
13->27 [style = bold, label=""];
35->1 [style = bold, label=""];
20->23 [style = bold, label=""];
25->37 [style = bold, label=""];
15->24 [style = bold, label=""];
10->0 [style = bold, label=""];
9->21 [style = bold, label=""];
30->10 [style = bold, label=""];
14->8 [style = bold, label=""];
37->19 [style = bold, label=""];
4->32 [style = solid, label="command"];
1->29 [style = bold, label=""];
6->7 [style = bold, label=""];
39->20 [style = bold, label=""];
6->34 [style = solid, label="vm"];
8->25 [style = bold, label=""];
32->17 [style = bold, label=""];
31->19 [style = bold, label=""];
12->31 [style = bold, label=""];
20->4 [style = solid, label="nic"];
0->28 [style = bold, label=""];
}
