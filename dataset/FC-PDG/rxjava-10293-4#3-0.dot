digraph {
0 [style = filled, label = "assertTrue(allowed.toString(),allowed.getCause() instanceof InterruptedException)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "to.onSubscribe(Disposable.empty())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "awaitTerminalEventInterrupt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ts.onSubscribe(new BooleanSubscription())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "to.awaitDone(5,TimeUnit.SECONDS)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Thread.currentThread().interrupt()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final TestSubscriber<Integer> ts = TestSubscriber.create()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "awaitTerminalEventInterrupt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Thread.currentThread().interrupt()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "to.onSubscribe(Disposables.empty())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "ts.awaitDone(5,TimeUnit.SECONDS)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RuntimeException allowed@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "awaitTerminalEventInterrupt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "to.awaitDone(5,TimeUnit.SECONDS)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ts.awaitDone(5,TimeUnit.SECONDS)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final TestObserver<Integer> to = TestObserver.create()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
5->8 [style = bold, label=""];
2->0 [style = dotted, label="true"];
1->15 [style = dashed, label="0"];
9->4 [style = bold, label=""];
12->15 [style = bold, label=""];
7->11 [style = dashed, label="0"];
15->6 [style = bold, label=""];
1->10 [style = dashed, label="0"];
5->14 [style = bold, label=""];
8->14 [style = dashed, label="0"];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
4->12 [style = dashed, label="0"];
11->5 [style = bold, label=""];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
13->12 [style = bold, label=""];
6->11 [style = bold, label=""];
4->1 [style = bold, label=""];
6->7 [style = bold, label=""];
0->5 [style = bold, label=""];
}
