digraph {
2 [style = filled, label = "task.clearTaskTimeout()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shouldCLearTaskTimeout['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "task.maybeInitTaskTimeoutOrThrow(0L,null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "task.maybeInitTaskTimeoutOrThrow(0L,null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "task = createStandbyTask()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "task.maybeInitTaskTimeoutOrThrow(Duration.ofMinutes(5).plus(Duration.ofMillis(1L)).toMillis(),null)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "task = createStatelessTask(createConfig(),StreamsConfig.METRICS_LATEST)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "EasyMock.replay(stateManager)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "task = createStatelessTask(createConfig())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "shouldCLearTaskTimeout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "shouldCLearTaskTimeout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->5 [style = dashed, label="0"];
5->3 [style = bold, label=""];
4->3 [style = bold, label=""];
6->5 [style = bold, label=""];
1->4 [style = bold, label=""];
2->7 [style = bold, label=""];
9->0 [style = bold, label=""];
10->8 [style = bold, label=""];
3->0 [style = bold, label=""];
0->2 [style = bold, label=""];
8->9 [style = bold, label=""];
}
