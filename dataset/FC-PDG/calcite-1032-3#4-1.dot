digraph {
24 [style = filled, label = "assertNull(Linq4j.asEnumerable(numbersWithoutGT15).singleOrDefault(numberGT15))@@@38@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(numbers(3(,Linq4j.asEnumerable(numbers).singleOrDefault(numberGT15))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String(( peopleWithoutCharS = {\"Brill\",\"Andrew\",\"Alice\"}@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Integer(( numbers = {5,10,15,20,25}@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "testSingleOrDefaultPredicate1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Integer(( numbersWithoutGT15 = {5,10,15}@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertNull(Linq4j.asEnumerable(peopleWithoutCharS).firstOrDefault(startWithS))@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "String(( people = {\"Brill\",\"Smith\"}@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(people(1(,Linq4j.asEnumerable(people).singleOrDefault(startWithS))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Integer(( numbers = {5,10,15,20}@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNull(Linq4j.asEnumerable(peopleWithoutCharS).firstOrDefault(startWithS))@@@26@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Predicate1<String> startWithS = null@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertNull(Linq4j.asEnumerable(peopleWithoutCharS).singleOrDefault(startWithS))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Predicate1<Integer> numberGT15 = new Predicate1<Integer>(){public boolean apply(Integer i){return i > 15}}@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(people(1(,Linq4j.asEnumerable(people).firstOrDefault(startWithS))@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String(( people = {\"Brill\",\"Smith\",\"Simpsom\"}@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertNull(Linq4j.asEnumerable(numbersWithTwoGT15).singleOrDefault(numberGT15))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(numbers(3(,Linq4j.asEnumerable(numbers).firstOrDefault(numberGT15))@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Predicate1<Integer> numberGT15 = null@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "testFirstOrDefaultPredicate1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String(( twoPeopleWithCharS = {\"Brill\",\"Smith\",\"Simpson\"}@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(people(1(,Linq4j.asEnumerable(people).firstOrDefault(startWithS))@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Predicate1<String> startWithS = new Predicate1<String>(){public boolean apply(String s){return s != null && Character.toString(s.charAt(0)).equals(\"S\")}}@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testFirstOrDefaultPredicate1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertNull(Linq4j.asEnumerable(twoPeopleWithCharS).singleOrDefault(startWithS))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String(( peopleWithoutCharS = {\"Brill\",\"Andrew\",\"Alice\"}@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Integer(( numbersWithTwoGT15 = {5,10,15,20,25}@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->17 [style = bold, label=""];
14->16 [style = bold, label=""];
3->26 [style = solid, label="startWithS"];
17->25 [style = bold, label=""];
4->3 [style = bold, label=""];
18->3 [style = bold, label=""];
23->20 [style = bold, label=""];
15->13 [style = bold, label=""];
3->23 [style = solid, label="startWithS"];
21->19 [style = bold, label=""];
5->6 [style = solid, label="numberGT15"];
16->10 [style = bold, label=""];
25->23 [style = bold, label=""];
20->26 [style = bold, label=""];
2->6 [style = solid, label="numbers"];
0->2 [style = bold, label=""];
16->1 [style = solid, label="numbers"];
13->1 [style = solid, label="numberGT15"];
3->7 [style = solid, label="startWithS"];
3->8 [style = solid, label="startWithS"];
8->6 [style = bold, label=""];
1->0 [style = bold, label=""];
12->10 [style = solid, label="people"];
2->20 [style = solid, label="numbers"];
1->11 [style = bold, label=""];
26->21 [style = bold, label=""];
1->22 [style = bold, label=""];
19->24 [style = bold, label=""];
5->20 [style = solid, label="numberGT15"];
3->19 [style = solid, label="startWithS"];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
13->12 [style = bold, label=""];
22->0 [style = bold, label=""];
9->15 [style = bold, label=""];
12->14 [style = bold, label=""];
3->15 [style = dashed, label="0"];
15->11 [style = solid, label="startWithS"];
1->8 [style = solid, label="people"];
1->23 [style = solid, label="people"];
15->10 [style = solid, label="startWithS"];
6->7 [style = bold, label=""];
10->1 [style = bold, label=""];
5->21 [style = solid, label="numberGT15"];
5->24 [style = solid, label="numberGT15"];
2->8 [style = bold, label=""];
}
