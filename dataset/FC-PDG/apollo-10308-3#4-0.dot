digraph {
11 [style = filled, label = "assertFalse(configFile.hasContent())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "someProperties.setProperty(key,someValue)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(configRepository.getConfig()).thenThrow(new RuntimeException(\"someError\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Properties someProperties = new Properties()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(ConfigSourceType.NONE,configFile.getSourceType())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(someValue,configFile.getContent())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String someValue = \"someValue\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(configFile.hasContent())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testWhenConfigRepositoryHasErrorAndThenRecovered['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "JsonConfigFile configFile = new JsonConfigFile(someNamespace,configRepository)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(someSourceType,configFile.getSourceType())@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertTrue(configFile.getContent().contains(String.format(\"%s=%s\",someKey,someValue)))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "String someKey = \"someKey\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testWhenConfigRepositoryHasErrorAndThenRecovered['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertNull(configFile.getContent())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "someProperties.setProperty(someKey,someValue)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "someSourceType = ConfigSourceType.LOCAL@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "configFile.onRepositoryChange(someNamespace,someProperties)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String key = ConfigConsts.CONFIG_FILE_CONTENT_KEY@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "PropertiesConfigFile configFile = new PropertiesConfigFile(someNamespace,configRepository)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testWhenConfigRepositoryHasErrorAndThenRecovered['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "when(configRepository.getSourceType()).thenReturn(someSourceType)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10->16 [style = bold, label=""];
21->11 [style = bold, label=""];
7->1 [style = solid, label="someProperties"];
3->14 [style = bold, label=""];
7->8 [style = bold, label=""];
0->4 [style = bold, label=""];
15->1 [style = bold, label=""];
13->7 [style = bold, label=""];
20->6 [style = bold, label=""];
4->21 [style = dashed, label="0"];
20->18 [style = solid, label="someKey"];
4->11 [style = bold, label=""];
12->4 [style = bold, label=""];
16->14 [style = solid, label="someSourceType"];
10->17 [style = dashed, label="0"];
16->0 [style = bold, label=""];
9->15 [style = bold, label=""];
11->9 [style = bold, label=""];
16->12 [style = solid, label="someSourceType"];
6->17 [style = bold, label=""];
8->6 [style = bold, label=""];
7->20 [style = bold, label=""];
2->3 [style = bold, label=""];
6->10 [style = bold, label=""];
8->10 [style = solid, label="key"];
6->18 [style = solid, label="someValue"];
20->17 [style = solid, label="someKey"];
2->18 [style = bold, label=""];
0->12 [style = bold, label=""];
6->17 [style = solid, label="someValue"];
6->3 [style = solid, label="someValue"];
0->21 [style = bold, label=""];
6->10 [style = solid, label="someValue"];
3->18 [style = dashed, label="0"];
19->7 [style = bold, label=""];
17->0 [style = bold, label=""];
9->1 [style = bold, label=""];
1->2 [style = bold, label=""];
5->7 [style = bold, label=""];
10->0 [style = bold, label=""];
}
