digraph {
12 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,View.READ,Item.READ,View.CONFIGURE).invokeWithArgs(\"aView\",\"aProject1\",\"aProject2\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").contains(project2),equalTo(false))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").contains(project2),equalTo(true))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "j.jenkins.addView(new ListView(\"aView\"))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").contains(project2),equalTo(true))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "removeJobManyShouldSucceed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").contains(project1),equalTo(false))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(result,succeededSilently())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "((DirectlyModifiableView)j.jenkins.getView(\"aView\")).add(project1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,View.READ,Job.READ,View.CONFIGURE).invokeWithArgs(\"aView\",\"aProject1\",\"aProject2\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,View.READ,Job.READ,View.CONFIGURE).invokeWithArgs(\"aView\",\"aProject1\",\"aProject2\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").contains(project1),equalTo(true))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "FreeStyleProject project2 = j.createFreeStyleProject(\"aProject2\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "addJobManyShouldSucceed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").contains(project1),equalTo(false))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").getAllItems().size(),equalTo(0))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "addJobManyShouldSucceed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").getAllItems().size(),equalTo(0))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").getAllItems().size(),equalTo(2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(result,succeededSilently())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").contains(project2),equalTo(false))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "FreeStyleProject project1 = j.createFreeStyleProject(\"aProject1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "((DirectlyModifiableView)j.jenkins.getView(\"aView\")).add(project2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
1->14 [style = solid, label="project2"];
18->3 [style = bold, label=""];
20->17 [style = bold, label=""];
7->21 [style = dashed, label="0"];
1->17 [style = solid, label="project2"];
9->16 [style = solid, label="project1"];
21->0 [style = bold, label=""];
1->7 [style = solid, label="project2"];
1->21 [style = solid, label="project2"];
11->2 [style = solid, label="result"];
9->19 [style = solid, label="project1"];
11->12 [style = dashed, label="0"];
15->19 [style = bold, label=""];
11->2 [style = bold, label=""];
9->20 [style = solid, label="project1"];
8->7 [style = bold, label=""];
8->22 [style = bold, label=""];
3->9 [style = bold, label=""];
12->2 [style = bold, label=""];
12->2 [style = solid, label="result"];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
6->16 [style = dashed, label="0"];
0->8 [style = solid, label="result"];
13->3 [style = bold, label=""];
22->20 [style = bold, label=""];
1->4 [style = solid, label="project2"];
1->16 [style = bold, label=""];
9->8 [style = solid, label="project1"];
6->10 [style = bold, label=""];
0->8 [style = bold, label=""];
10->4 [style = bold, label=""];
4->12 [style = bold, label=""];
16->14 [style = bold, label=""];
14->15 [style = bold, label=""];
9->1 [style = bold, label=""];
4->11 [style = bold, label=""];
9->10 [style = solid, label="project1"];
10->14 [style = dashed, label="0"];
19->21 [style = bold, label=""];
}
