digraph {
1 [style = filled, label = "Path tempFilename = tempFile.toAbsolutePath()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "BibEntryAssert.assertEquals(entries,tempFile,modsImporter)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testExportAsModsAndThenImportAsMods['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<BibEntry> entries = bibtexImporter.importDatabase(importFile,charset).getDatabase().getEntries()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Builder control = Input.from(Files.newInputStream(xmlFile))@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String filename@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Builder test = Input.from(Files.newInputStream(tempFilename))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "modsExportFormat.export(databaseContext,tempFile,charset,entries)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "modsExportFormat.export(databaseContext,tempFile,charset,entries)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testImportAsModsAndExportAsMods['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<BibEntry> entries = modsImporter.importDatabase(xmlFile,charset).getDatabase().getEntries()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(test,CompareMatcher.isSimilarTo(control).withNodeMatcher(new DefaultNodeMatcher(ElementSelectors.byNameAndText)).throwComparisonFailure())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "exporter.export(databaseContext,tempFile,charset,entries)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(String.join(\"\",Files.readAllLines(xmlFile)),String.join(\"\",Files.readAllLines(tempFile)))@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testImportAsModsAndExportAsMods['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "importFile = Paths.get(.getResource(filename).toURI())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String xmlFileName = filename.replace(\".bib\",\".xml\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String filename@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Path xmlFile = Paths.get(.getResource(xmlFileName).toURI())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
8->13 [style = solid, label="entries"];
7->1 [style = bold, label=""];
1->0 [style = solid, label="tempFilename"];
15->16 [style = solid, label="entries"];
1->3 [style = bold, label=""];
15->14 [style = solid, label="entries"];
9->7 [style = bold, label=""];
12->9 [style = bold, label=""];
15->16 [style = bold, label=""];
13->11 [style = bold, label=""];
7->3 [style = bold, label=""];
6->10 [style = dotted, label="true"];
5->2 [style = bold, label=""];
0->4 [style = solid, label="test"];
2->0 [style = bold, label=""];
3->2 [style = solid, label="xmlFile"];
8->5 [style = bold, label=""];
12->10 [style = dotted, label="true"];
0->4 [style = bold, label=""];
9->15 [style = bold, label=""];
3->8 [style = bold, label=""];
18->9 [style = bold, label=""];
3->11 [style = solid, label="xmlFile"];
10->17 [style = dashed, label="0"];
16->14 [style = bold, label=""];
8->5 [style = solid, label="entries"];
18->17 [style = dotted, label="true"];
6->9 [style = bold, label=""];
8->13 [style = bold, label=""];
}
