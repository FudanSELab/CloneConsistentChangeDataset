digraph {
0 [style = filled, label = "request.add(new TermVectorsRequest(\"index2\",\"2\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "transportAction = new TransportMultiTermVectorsAction(transportService,clusterService,client,new ActionFilters(emptySet()),new Resolver()){@Override protected void executeShardAction(final ActionListener<MultiTermVectorsResponse> listener,final AtomicArray<MultiTermVectorsItemResponse> responses,final Map<ShardId,MultiTermVectorsShardRequest> shardRequests){shardActionInvoked.set(true)assertEquals(2,responses.length())assertNull(responses.get(0))assertThat(responses.get(1).getFailure().getCause(),instanceOf())assertThat(responses.get(1).getFailure().getCause().getMessage(),equalTo(\"routing is required for (index1(/(type2(/(2(\"))}}@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testTransportMultiGetAction_withMissingRouting['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "transportAction = new TransportMultiGetAction(transportService,clusterService,shardAction,new ActionFilters(emptySet()),new Resolver()){@Override protected void executeShardAction(final ActionListener<MultiGetResponse> listener,final AtomicArray<MultiGetItemResponse> responses,final Map<ShardId,MultiGetShardRequest> shardRequests){shardActionInvoked.set(true)assertEquals(2,responses.length())assertNull(responses.get(0))assertNull(responses.get(1))}}@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "transportAction = new TransportMultiTermVectorsAction(transportService,clusterService,shardAction,new ActionFilters(emptySet()),new Resolver()){@Override protected void executeShardAction(final ActionListener<MultiTermVectorsResponse> listener,final AtomicArray<MultiTermVectorsItemResponse> responses,final Map<ShardId,MultiTermVectorsShardRequest> shardRequests){shardActionInvoked.set(true)assertEquals(2,responses.length())assertNull(responses.get(0))assertThat(responses.get(1).getFailure().getCause(),instanceOf())assertThat(responses.get(1).getFailure().getCause().getMessage(),equalTo(\"routing is required for (index1(/(type2(/(2(\"))}}@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "final Task task = createTask()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "transportAction.execute(task,request.request(),new ActionListenerAdapter())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "request.add(new MultiGetRequest.Item(\"index1\",\"_doc\",\"1\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(shardActionInvoked.get())@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testTransportMultiGetAction_withMissingRouting['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "request.add(new MultiGetRequest.Item(\"index1\",\"_doc\",\"2\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final AtomicBoolean shardActionInvoked = new AtomicBoolean(false)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final MultiTermVectorsRequestBuilder request = new MultiTermVectorsRequestBuilder(client,MultiTermVectorsAction.INSTANCE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "request.add(new TermVectorsRequest(\"index2\",\"1\").routing(\"1\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final MultiGetRequestBuilder request = new MultiGetRequestBuilder(client,MultiGetAction.INSTANCE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testTransportMultiGetAction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final NodeClient client = new NodeClient(Settings.EMPTY,threadPool)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(shardActionInvoked.get())@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
4->9 [style = bold, label=""];
4->10 [style = bold, label=""];
17->8 [style = bold, label=""];
9->10 [style = dashed, label="0"];
3->1 [style = bold, label=""];
15->14 [style = bold, label=""];
11->1 [style = bold, label=""];
12->17 [style = bold, label=""];
5->6 [style = solid, label="client"];
5->10 [style = solid, label="client"];
9->8 [style = bold, label=""];
1->17 [style = solid, label="task"];
8->7 [style = bold, label=""];
6->2 [style = bold, label=""];
2->15 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
2->0 [style = bold, label=""];
6->13 [style = dashed, label="0"];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
16->1 [style = bold, label=""];
0->4 [style = bold, label=""];
5->13 [style = bold, label=""];
5->13 [style = solid, label="client"];
13->17 [style = solid, label="request"];
4->12 [style = bold, label=""];
9->12 [style = dashed, label="0"];
13->15 [style = bold, label=""];
6->8 [style = solid, label="request"];
14->4 [style = bold, label=""];
1->8 [style = solid, label="task"];
}
