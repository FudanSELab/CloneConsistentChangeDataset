digraph {
21 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "unionExp = Expressions.call(unionExp,all? BuiltInMethod.CONCAT.method: BuiltInMethod.UNION.method,childExp)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "EnumerableRel input = (EnumerableRel)ord.e@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Prefer pref@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "Expression unionExp = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Prefer pref@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "builder.add(unionExp)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "pref = pref.of(result.format)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return implementor.result(physType,builder.toBlock())@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "intersectExp = Expressions.call(intersectExp,all? BuiltInMethod.CONCAT.method: BuiltInMethod.INTERSECT.method,childExp)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final Result result = implementor.visitChild(this,ord.i,input,pref)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Expression intersectExp = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "intersectExp == null@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final BlockBuilder builder = new BlockBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Prefer pref@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "builder.add(intersectExp)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "implement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Expression childExp = builder.append(\"child\" + ord.i,result.block)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "unionExp = childExp@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "implement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "intersectExp = childExp@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "intersectExp = Expressions.call(intersectExp,BuiltInMethod.INTERSECT.method,Expressions.list(childExp).appendIfNotNull(result.physType.comparer()))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "implement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final PhysType physType = PhysTypeImpl.of(implementor.getTypeFactory(),getRowType(),pref.prefer(JavaRowFormat.CUSTOM))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "unionExp == null@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3->4 [style = solid, label="pref"];
22->21 [style = dotted, label="true"];
4->9 [style = bold, label=""];
13->10 [style = bold, label=""];
16->0 [style = bold, label=""];
18->24 [style = bold, label=""];
12->23 [style = dashed, label="0"];
20->19 [style = solid, label="unionExp"];
5->23 [style = bold, label=""];
7->4 [style = solid, label="input"];
11->1 [style = bold, label=""];
12->13 [style = solid, label="intersectExp"];
0->19 [style = bold, label=""];
24->0 [style = bold, label=""];
17->4 [style = solid, label="pref"];
18->24 [style = dotted, label="false"];
20->0 [style = bold, label=""];
13->2 [style = dotted, label="false"];
10->2 [style = solid, label="intersectExp"];
10->13 [style = solid, label="intersectExp"];
19->11 [style = bold, label=""];
7->4 [style = bold, label=""];
18->20 [style = dotted, label="true"];
13->10 [style = dotted, label="true"];
22->6 [style = dotted, label="true"];
22->5 [style = bold, label=""];
0->4 [style = solid, label="pref"];
12->7 [style = bold, label=""];
9->20 [style = solid, label="childExp"];
20->18 [style = solid, label="unionExp"];
13->16 [style = bold, label=""];
15->5 [style = bold, label=""];
12->16 [style = solid, label="intersectExp"];
0->7 [style = bold, label=""];
8->3 [style = dotted, label="true"];
15->17 [style = dotted, label="true"];
4->1 [style = solid, label="result"];
11->1 [style = solid, label="physType"];
18->20 [style = bold, label=""];
2->13 [style = solid, label="intersectExp"];
10->16 [style = solid, label="intersectExp"];
2->0 [style = bold, label=""];
0->14 [style = bold, label=""];
9->10 [style = solid, label="childExp"];
9->18 [style = bold, label=""];
8->6 [style = dotted, label="true"];
8->5 [style = bold, label=""];
5->12 [style = bold, label=""];
24->18 [style = solid, label="unionExp"];
15->6 [style = dotted, label="true"];
2->16 [style = dashed, label="0"];
6->4 [style = solid, label="pref"];
12->2 [style = solid, label="intersectExp"];
10->0 [style = bold, label=""];
13->16 [style = dotted, label="false"];
13->2 [style = bold, label=""];
2->14 [style = solid, label="intersectExp"];
23->24 [style = solid, label="unionExp"];
9->24 [style = solid, label="childExp"];
10->20 [style = dashed, label="0"];
9->2 [style = solid, label="childExp"];
10->14 [style = solid, label="intersectExp"];
16->13 [style = solid, label="intersectExp"];
23->7 [style = bold, label=""];
14->19 [style = dashed, label="0"];
20->24 [style = solid, label="unionExp"];
24->19 [style = solid, label="unionExp"];
13->18 [style = dashed, label="0"];
2->24 [style = dashed, label="0"];
14->11 [style = bold, label=""];
9->13 [style = bold, label=""];
16->14 [style = solid, label="intersectExp"];
23->18 [style = solid, label="unionExp"];
}
