digraph {
11 [style = filled, label = "afterUnsubscribeCalledThenObserverOnNextNeverCalled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testScheduler.advanceTimeBy(1,TimeUnit.SECONDS)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "inOrder.verify(subscriber,never()).onError(any())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final InOrder inOrder = inOrder(observer)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ts.cancel()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final TestScheduler testScheduler = new TestScheduler()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "inOrder.verify(subscriber,never()).onComplete()@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<>(subscriber)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "inOrder.verify(observer,never()).onNext(anyInt())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "inOrder.verify(subscriber,never()).onNext(anyInt())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "inOrder.verify(observer,never()).onComplete()@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "afterUnsubscribeCalledThenObserverOnNextNeverCalled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Flowable.just(1,2,3).observeOn(testScheduler).subscribe(ts)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TestObserver<Integer> to = new TestObserver<Integer>(observer)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final Observer<Integer> observer = TestHelper.mockObserver()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>(subscriber)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "afterUnsubscribeCalledThenObserverOnNextNeverCalled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Observable.just(1,2,3).observeOn(testScheduler).subscribe(to)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "to.dispose()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final InOrder inOrder = inOrder(subscriber)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Subscriber<Integer> subscriber = TestHelper.mockSubscriber()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "inOrder.verify(observer,never()).onError(any())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
16->15 [style = bold, label=""];
4->16 [style = dashed, label="0"];
3->21 [style = dashed, label="0"];
1->14 [style = dashed, label="0"];
0->6 [style = bold, label=""];
6->20 [style = dashed, label="0"];
3->8 [style = solid, label="ts"];
20->21 [style = solid, label="observer"];
7->17 [style = dashed, label="0"];
14->10 [style = bold, label=""];
17->19 [style = bold, label=""];
21->13 [style = solid, label="to"];
8->13 [style = dashed, label="0"];
20->21 [style = bold, label=""];
9->19 [style = dashed, label="0"];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
15->17 [style = bold, label=""];
20->16 [style = solid, label="observer"];
2->0 [style = bold, label=""];
11->0 [style = bold, label=""];
3->12 [style = dashed, label="0"];
10->16 [style = bold, label=""];
6->3 [style = solid, label="subscriber"];
12->8 [style = bold, label=""];
3->8 [style = bold, label=""];
10->4 [style = bold, label=""];
6->12 [style = solid, label="subscriber"];
5->7 [style = bold, label=""];
0->20 [style = bold, label=""];
12->8 [style = solid, label="ts"];
5->15 [style = dashed, label="0"];
1->10 [style = bold, label=""];
6->4 [style = solid, label="subscriber"];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
18->0 [style = bold, label=""];
21->13 [style = bold, label=""];
6->12 [style = bold, label=""];
}
