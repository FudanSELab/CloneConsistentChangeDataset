digraph {
23 [style = filled, label = "remoteConfigLongPollService.stopLongPollingRefresh()@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String someValue = \"someValue\"@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String(( actualArrays = config.keySet().toArray(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@6e7ef6)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertTrue(configurations.equals(config))@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertArrayEquals(expectedArrays,actualArrays)@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "configurations.put(someKey,someValue)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(configurations,config)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(ConfigSourceType.REMOTE,remoteConfigRepository.getSourceType())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testLoadConfigWithAccessKeySecret['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "configUtil.isPropertiesOrderEnabled()@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Map<String,String> configurations = Maps.newHashMap()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String(( expectedArrays = {\"someKey\",\"someKey2\"}@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "configurations.put(\"someKey2\",\"someValue2\")@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "String someKey = \"someKey\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(someResponse.getStatusCode()).thenReturn(200)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Properties config = remoteConfigRepository.getConfig()@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Map<String,String> configurations = Maps.newLinkedHashMap()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "ApolloConfig someApolloConfig = assembleApolloConfig(configurations)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String someKey = \"someKey\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "RemoteConfigRepository remoteConfigRepository = new RemoteConfigRepository(someNamespace)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testLoadConfig['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(someResponse.getBody()).thenReturn(someApolloConfig)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "doAnswer(new Answer<HttpResponse<ApolloConfig>>(){@Override public HttpResponse<ApolloConfig> answer(InvocationOnMock invocation){HttpRequest request = invocation.getArgumentAt(0,)Map<String,String> headers = request.getHeaders()assertNotNull(headers)assertTrue(headers.containsKey(Signature.HTTP_HEADER_TIMESTAMP))assertTrue(headers.containsKey(Signature.HTTP_HEADER_AUTHORIZATION))return someResponse}}).when(httpUtil).doGet(any(),any())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "someSecret = \"someSecret\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testLoadConfig['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15->19 [style = dotted, label="true"];
4->12 [style = solid, label="someApolloConfig"];
11->4 [style = bold, label=""];
4->7 [style = bold, label=""];
14->3 [style = bold, label=""];
16->19 [style = solid, label="actualArrays"];
7->6 [style = solid, label="someApolloConfig"];
13->19 [style = bold, label=""];
20->10 [style = bold, label=""];
15->13 [style = dotted, label="true"];
1->4 [style = solid, label="someValue"];
9->3 [style = solid, label="config"];
22->0 [style = bold, label=""];
13->19 [style = solid, label="expectedArrays"];
9->3 [style = bold, label=""];
8->23 [style = bold, label=""];
2->14 [style = solid, label="config"];
11->3 [style = solid, label="configurations"];
2->9 [style = solid, label="config"];
11->18 [style = bold, label=""];
17->4 [style = solid, label="configurations"];
0->11 [style = solid, label="someValue"];
16->13 [style = bold, label=""];
5->10 [style = bold, label=""];
10->0 [style = bold, label=""];
0->1 [style = bold, label=""];
6->2 [style = bold, label=""];
24->22 [style = bold, label=""];
1->11 [style = bold, label=""];
21->2 [style = bold, label=""];
1->4 [style = solid, label="configurations"];
6->21 [style = bold, label=""];
10->11 [style = solid, label="someKey"];
0->4 [style = solid, label="someKey"];
2->9 [style = bold, label=""];
9->14 [style = dashed, label="0"];
7->12 [style = bold, label=""];
3->8 [style = bold, label=""];
15->16 [style = bold, label=""];
0->17 [style = bold, label=""];
17->11 [style = bold, label=""];
12->6 [style = bold, label=""];
11->7 [style = solid, label="configurations"];
15->16 [style = dotted, label="true"];
2->14 [style = bold, label=""];
1->17 [style = dashed, label="0"];
1->9 [style = solid, label="configurations"];
8->15 [style = bold, label=""];
18->4 [style = bold, label=""];
}
