digraph {
2 [style = filled, label = "getRequest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final RequestBeanMeta rbm@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "getRequest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "ResponseBeanMeta rbm@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return (T)Proxy.newProxyInstance(c.getClassLoader(),new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@15b9e59,new InvocationHandler(){@Override public Object invoke(Object proxy,Method method,Object(( args){ResponseBeanPropertyMeta pm = rbm.getProperty(method.getName())HttpPartParserSession pp = pm.getParser(partParser)HttpPartSchema schema = pm.getSchema()HttpPartType pt = pm.getPartType()String name = pm.getPartName()ClassMeta<?> type = rc.getClassMeta(method.getGenericReturnType())if (pt == RESPONSE_HEADER) return getResponseHeader(name).parser(pp).schema(schema).asType(type).orElse(null)if (pt == RESPONSE_STATUS) return getStatusCode()return getBody().schema(schema).asType(type)}})@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Class<T> c = (Class<T>)rbm.getClassMeta().getInnerClass()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final BeanMeta<T> bm = getBeanSession().getBeanMeta(c)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RestClient rc = this.client@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "as['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return (T)Proxy.newProxyInstance(c.getClassLoader(),new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@15b9d93,new InvocationHandler(){@Override public Object invoke(Object proxy,Method method,Object(( args){RequestBeanPropertyMeta pm = rbm.getProperty(method.getName())if (pm != null) {HttpPartParserSession pp = pm.getParser(getPartParserSession())HttpPartSchema schema = pm.getSchema()String name = pm.getPartName()ClassMeta<?> type = getContext().getClassMeta(method.getGenericReturnType())HttpPartType pt = pm.getPartType()if (pt == HttpPartType.BODY) return getBody().schema(schema).asType(type)if (pt == QUERY) return getRequestQuery().getLast(name).parser(pp).schema(schema).asType(type)if (pt == FORMDATA) return getFormData().get(pp,schema,name,type)if (pt == HEADER) return getLastHeader(name).parser(pp).schema(schema).asType(type)if (pt == PATH) return getPathMatch().get(pp,schema,name,type)}return null}})@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->0 [style = dotted, label="true"];
4->3 [style = solid, label="c"];
1->3 [style = bold, label=""];
0->7 [style = dashed, label="0"];
2->0 [style = dotted, label="true"];
2->4 [style = bold, label=""];
8->6 [style = bold, label=""];
6->4 [style = bold, label=""];
6->9 [style = solid, label="c"];
4->9 [style = bold, label=""];
8->7 [style = dotted, label="true"];
4->1 [style = solid, label="c"];
5->4 [style = bold, label=""];
4->1 [style = bold, label=""];
}
