digraph {
38 [style = filled, label = "Assert.assertEquals(5,rm.getMyFifoScheduler().lastAsk.size())@@@55@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "rm.drainEvents()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "rm.drainEvents()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "allocator.sendRequest(event3)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "ContainerRequestEvent event2 = createReq(jobId,2,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ec190)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "rm.drainEvents()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ContainerRequestEvent event2 = ContainerRequestCreator.createRequest(jobId,2,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ec08f)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "JobId jobId = MRBuilderUtils.newJobId(appAttemptId.getApplicationId(),0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "MockNM nodeManager1 = rm.registerNode(\"h1:1234\",10240)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<TaskAttemptContainerAssignedEvent> assigned = allocator.schedule()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "rm.drainEvents()@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "rm.sendAMLaunched(appAttemptId)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "LOG.info(\"Running testResource\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ApplicationAttemptId appAttemptId = app.getCurrentAppAttempt().getAppAttemptId()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "rm.drainEvents()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "ContainerRequestEvent event3 = createReq(jobId,3,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ec1c2)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "rm.drainEvents()@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testResource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MyContainerAllocator allocator = new MyContainerAllocator(rm,conf,appAttemptId,mockJob)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "allocator.schedule()@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assigned = allocator.schedule()@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testSimple['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "nodeManager2.nodeHeartbeat(true)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Job mockJob = mock()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "allocator.sendRequest(event2)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "nodeManager1.nodeHeartbeat(true)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertEquals(0,rm.getMyFifoScheduler().lastAsk.size())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"amNM:1234\",2048)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "ContainerRequestEvent event1 = ContainerRequestCreator.createRequest(jobId,1,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ec078)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "rm.drainEvents()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "MockNM nodeManager3 = rm.registerNode(\"h3:1234\",10240)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "rm.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assigned = allocator.schedule()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Configuration conf = new Configuration()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "MockNM nodeManager2 = rm.registerNode(\"h2:1234\",10240)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ContainerRequestEvent event1 = createReq(jobId,1,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ec17e)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(mockJob.getReport()).thenReturn(MRBuilderUtils.newJobReport(jobId,\"job\",\"user\",JobState.RUNNING,0,0,0,0,0,0,0,\"jobfile\",null,false,\"\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "rm.drainEvents()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(4,rm.getMyFifoScheduler().lastAsk.size())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "rm.drainEvents()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "ContainerRequestEvent event2 = createReq(jobId,2,2048,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ebf84)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "testResource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "Assert.assertEquals(3,rm.getMyFifoScheduler().lastAsk.size())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "MyResourceManager rm = new MyResourceManager(conf)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "allocator.sendRequest(event1)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "LOG.info(\"Running testSimple\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "checkAssignments(new ContainerRequestEvent((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ec218,assigned,false)@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "RMApp app = rm.submitApp(1024)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "nodeManager3.nodeHeartbeat(true)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->13 [style = bold, label=""];
14->24 [style = solid, label="jobId"];
42->41 [style = bold, label=""];
36->0 [style = solid, label="event2"];
34->9 [style = bold, label=""];
0->46 [style = bold, label=""];
23->7 [style = solid, label="appAttemptId"];
50->2 [style = bold, label=""];
9->10 [style = bold, label=""];
39->5 [style = solid, label="event2"];
32->5 [style = solid, label="event2"];
37->9 [style = bold, label=""];
25->31 [style = bold, label=""];
8->36 [style = bold, label=""];
4->7 [style = solid, label="rm"];
15->11 [style = bold, label=""];
32->36 [style = dashed, label="0"];
26->35 [style = bold, label=""];
35->8 [style = bold, label=""];
14->35 [style = solid, label="jobId"];
8->39 [style = bold, label=""];
3->30 [style = bold, label=""];
43->44 [style = bold, label=""];
44->47 [style = bold, label=""];
14->32 [style = solid, label="jobId"];
14->20 [style = bold, label=""];
2->16 [style = bold, label=""];
31->14 [style = bold, label=""];
35->8 [style = solid, label="event1"];
23->25 [style = bold, label=""];
36->5 [style = solid, label="event2"];
1->42 [style = bold, label=""];
49->38 [style = bold, label=""];
26->24 [style = bold, label=""];
5->17 [style = bold, label=""];
11->18 [style = bold, label=""];
29->27 [style = bold, label=""];
21->22 [style = bold, label=""];
19->26 [style = bold, label=""];
14->6 [style = solid, label="jobId"];
12->33 [style = bold, label=""];
41->43 [style = solid, label="event3"];
24->0 [style = solid, label="event1"];
13->15 [style = bold, label=""];
24->8 [style = bold, label=""];
6->7 [style = bold, label=""];
41->43 [style = bold, label=""];
41->0 [style = solid, label="event3"];
18->23 [style = bold, label=""];
39->5 [style = bold, label=""];
14->39 [style = solid, label="jobId"];
4->29 [style = bold, label=""];
51->40 [style = bold, label=""];
32->39 [style = dashed, label="0"];
14->41 [style = solid, label="jobId"];
36->5 [style = bold, label=""];
1->2 [style = bold, label=""];
30->0 [style = bold, label=""];
47->45 [style = bold, label=""];
33->19 [style = bold, label=""];
14->36 [style = solid, label="jobId"];
23->25 [style = solid, label="appAttemptId"];
40->10 [style = bold, label=""];
32->5 [style = bold, label=""];
8->32 [style = bold, label=""];
10->4 [style = solid, label="conf"];
7->12 [style = bold, label=""];
46->49 [style = bold, label=""];
28->1 [style = bold, label=""];
20->6 [style = bold, label=""];
32->0 [style = solid, label="event2"];
24->8 [style = solid, label="event1"];
48->0 [style = bold, label=""];
22->3 [style = bold, label=""];
17->28 [style = bold, label=""];
9->40 [style = dashed, label="0"];
39->0 [style = solid, label="event2"];
45->50 [style = bold, label=""];
16->21 [style = bold, label=""];
35->0 [style = solid, label="event1"];
24->35 [style = dashed, label="0"];
10->7 [style = solid, label="conf"];
20->7 [style = solid, label="mockJob"];
10->4 [style = bold, label=""];
30->48 [style = bold, label=""];
3->0 [style = solid, label="assigned"];
}
