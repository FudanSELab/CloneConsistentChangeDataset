digraph {
8 [style = filled, label = "SolrInputDocument d = processAdd(\"parse-double-french-no-run-processor\",doc(f(\"id\",\"140\"),f(\"double_d\",doubleString1),f(\"not_in_schema\",doubleString2)))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertNotNull(d)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertThat(d.getFieldValue(\"float_f\"),IS_FLOAT)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final DecimalFormatSymbols fr_FR = DecimalFormatSymbols.getInstance(new Locale(\"fr\",\"FR\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThat(d.getFieldValue(\"double_d\"),IS_DOUBLE)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNotNull(schema.getFieldOrNull(\"double_d\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(value,(Double)d.getFieldValue(\"double_d\"),EPSILON)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "double value = 10898.83491D@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(value,(Double)d.getFieldValue(\"not_in_schema\"),EPSILON)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(d.getFieldValue(\"not_in_schema\"),IS_FLOAT)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testParseDoubleNonRootLocale['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertEquals(value,(Float)d.getFieldValue(\"not_in_schema\"),EPSILON)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final char decimalChar = fr_FR.getDecimalSeparator()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "IndexSchema schema = h.getCore().getLatestSchema()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String floatString2 = \"10鐃緒申鐃緒申鐃緒申898,83491\"@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "String floatString1 = \"10898,83491\"@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testParseFloatNonRootLocale['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "SolrInputDocument d = processAdd(\"parse-float-french-no-run-processor\",doc(f(\"id\",\"140\"),f(\"float_f\",floatString1),f(\"not_in_schema\",floatString2)))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "{final NumberFormat sanityCheck = NumberFormat.getInstance(new Locale(\"fr\",\"FR\"))sanityCheck.setParseIntegerOnly(false)sanityCheck.setRoundingMode(RoundingMode.CEILING)assumeThat(\"Your JVM appears to have NumberFormat parse bugs using U+00A0 in the fr_FR Locale\",sanityCheck.parse(\"10鐃緒申鐃緒申鐃緒申898\"),new IsNot(new IsEqual(10L)))}@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final char groupChar = fr_FR.getGroupingSeparator()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "String doubleString1 = \"10898\" + decimalChar + \"83491\"@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "String doubleString1 = \"10898,83491\"@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "String doubleString2 = \"10\" + groupChar + \"898\" + decimalChar + \"83491\"@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertNull(schema.getFieldOrNull(\"not_in_schema\"))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(d.getFieldValue(\"not_in_schema\"),IS_DOUBLE)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertNotNull(schema.getFieldOrNull(\"float_f\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testParseDoubleNonRootLocale['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "float value = 10898.83491f@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(value,(Float)d.getFieldValue(\"float_f\"),EPSILON)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "double value = 10898.83491@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "String doubleString2 = \"10鐃緒申鐃緒申鐃緒申898,83491\"@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27->22 [style = solid, label="floatString1"];
13->24 [style = bold, label=""];
29->30 [style = bold, label=""];
21->27 [style = bold, label=""];
7->12 [style = bold, label=""];
25->13 [style = bold, label=""];
11->3 [style = solid, label="value"];
18->20 [style = solid, label="decimalChar"];
21->25 [style = solid, label="value"];
18->16 [style = solid, label="decimalChar"];
20->8 [style = solid, label="doubleString2"];
0->2 [style = bold, label=""];
12->8 [style = solid, label="doubleString2"];
3->24 [style = dashed, label="0"];
1->3 [style = bold, label=""];
22->29 [style = bold, label=""];
18->17 [style = bold, label=""];
30->25 [style = bold, label=""];
17->3 [style = solid, label="value"];
0->21 [style = bold, label=""];
7->8 [style = solid, label="doubleString1"];
15->18 [style = bold, label=""];
16->8 [style = solid, label="doubleString1"];
9->6 [style = bold, label=""];
15->20 [style = solid, label="groupChar"];
20->2 [style = bold, label=""];
1->13 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
6->1 [style = bold, label=""];
26->0 [style = bold, label=""];
11->6 [style = solid, label="value"];
5->28 [style = dashed, label="0"];
19->14 [style = bold, label=""];
6->25 [style = dashed, label="0"];
12->8 [style = bold, label=""];
22->29 [style = solid, label="d"];
10->0 [style = bold, label=""];
5->4 [style = bold, label=""];
4->8 [style = bold, label=""];
17->6 [style = solid, label="value"];
14->15 [style = bold, label=""];
27->23 [style = bold, label=""];
13->9 [style = bold, label=""];
23->2 [style = bold, label=""];
21->24 [style = solid, label="value"];
9->30 [style = dashed, label="0"];
4->11 [style = bold, label=""];
16->20 [style = bold, label=""];
23->22 [style = solid, label="floatString2"];
2->28 [style = bold, label=""];
4->22 [style = bold, label=""];
8->13 [style = solid, label="d"];
11->7 [style = bold, label=""];
17->16 [style = bold, label=""];
8->13 [style = bold, label=""];
28->4 [style = bold, label=""];
2->5 [style = bold, label=""];
}
