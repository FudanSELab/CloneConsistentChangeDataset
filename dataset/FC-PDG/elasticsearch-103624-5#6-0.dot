digraph {
26 [style = filled, label = "assertThat(topDocs.totalHits.value,equalTo(3L))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertValues(bytesValues,0,two(),four())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertValues(bytesValues,2,three())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(topDocs.scoreDocs(0(.doc,equalTo(1))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(topDocs.scoreDocs(2(.doc,equalTo(2))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(fieldData.ramBytesUsed(),greaterThanOrEqualTo(minRamBytesUsed()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(topDocs.totalHits,equalTo(3L))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertValues(bytesValues,2,three())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(topDocs.scoreDocs(2(.doc,equalTo(1))@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(topDocs.scoreDocs(1(.doc,equalTo(2))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(DirectoryReader.open(writer))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "topDocs = searcher.search(new MatchAllDocsQuery(),10,new Sort(sortField))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(topDocs.totalHits,equalTo(3L))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "testMultiValueAllSet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "IndexFieldData<?> indexFieldData = getForField(\"value\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(topDocs.totalHits.value,equalTo(3L))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(topDocs.scoreDocs.length,equalTo(3))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "SortedBinaryDocValues bytesValues = fieldData.getBytesValues()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(topDocs.scoreDocs(1(.doc,equalTo(0))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(topDocs.scoreDocs(0(.doc,equalTo(0))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertValues(bytesValues,1,one())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "TopFieldDocs topDocs = searcher.search(new MatchAllDocsQuery(),10,new Sort(sortField))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testMultiValueAllSet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "SortField sortField = indexFieldData.sortField(null,MultiValueMode.MIN,null,false)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(topDocs.scoreDocs.length,equalTo(3))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertValues(bytesValues,1,Strings.EMPTY_ARRAY)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "sortField = indexFieldData.sortField(null,MultiValueMode.MAX,null,true)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<LeafReaderContext> readerContexts = refreshReader()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "writer.forceMerge(1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testMultiValueWithMissing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<LeafReaderContext> readerContexts = refreshReader()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fillMultiValueAllSet()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "fillMultiValueWithMissing()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "AtomicFieldData fieldData = indexFieldData.load(readerContext)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->20 [style = bold, label=""];
18->3 [style = bold, label=""];
1->4 [style = bold, label=""];
25->9 [style = solid, label="bytesValues"];
19->18 [style = bold, label=""];
27->1 [style = bold, label=""];
30->33 [style = bold, label=""];
9->16 [style = solid, label="bytesValues"];
5->23 [style = bold, label=""];
17->6 [style = bold, label=""];
32->12 [style = bold, label=""];
14->13 [style = solid, label="sortField"];
25->9 [style = bold, label=""];
12->15 [style = bold, label=""];
1->29 [style = dashed, label="0"];
31->29 [style = bold, label=""];
16->17 [style = bold, label=""];
9->10 [style = bold, label=""];
14->23 [style = solid, label="sortField"];
23->21 [style = solid, label="sortField"];
3->0 [style = bold, label=""];
21->28 [style = bold, label=""];
6->14 [style = bold, label=""];
28->2 [style = bold, label=""];
13->19 [style = bold, label=""];
19->26 [style = dashed, label="0"];
10->16 [style = bold, label=""];
23->21 [style = bold, label=""];
7->28 [style = dashed, label="0"];
13->26 [style = bold, label=""];
7->2 [style = bold, label=""];
24->25 [style = bold, label=""];
29->32 [style = bold, label=""];
15->24 [style = bold, label=""];
33->24 [style = bold, label=""];
16->10 [style = dashed, label="0"];
12->33 [style = bold, label=""];
4->12 [style = bold, label=""];
21->7 [style = bold, label=""];
9->10 [style = solid, label="bytesValues"];
22->1 [style = bold, label=""];
14->13 [style = bold, label=""];
25->10 [style = solid, label="bytesValues"];
25->30 [style = solid, label="bytesValues"];
20->24 [style = bold, label=""];
8->11 [style = bold, label=""];
23->14 [style = solid, label="sortField"];
10->30 [style = bold, label=""];
9->17 [style = solid, label="bytesValues"];
2->8 [style = bold, label=""];
0->5 [style = bold, label=""];
26->18 [style = bold, label=""];
}
