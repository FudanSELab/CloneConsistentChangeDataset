digraph {
3 [style = filled, label = "assertThat(this.environment.getActiveProfiles()).containsExactly(\"other\",\"dev\")@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\"spring.profiles.active=other\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Map<String,Object> source = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "source.put(\"spring.profiles.include\",\"other\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "this.initializer.postProcessEnvironment(this.environment,this.application)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "activeAndIncludedProfilesFromDefaultProperties['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(this.environment.getActiveProfiles()).containsExactly(\"other\")@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "activeFromDefaultPropertiesShouldNotApplyIfProfilesHaveBeenActivatedBefore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "source.put(\"spring.profiles.active\",\"dev\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "this.environment.getPropertySources().addLast(new MapPropertySource(\"defaultProperties\",source))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "activeAndIncludedProfilesFromDefaultProperties['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->3 [style = bold, label=""];
4->9 [style = bold, label=""];
6->1 [style = bold, label=""];
5->10 [style = bold, label=""];
8->1 [style = bold, label=""];
1->4 [style = bold, label=""];
1->2 [style = solid, label="source"];
3->10 [style = dashed, label="0"];
7->1 [style = bold, label=""];
1->0 [style = bold, label=""];
4->2 [style = bold, label=""];
0->4 [style = bold, label=""];
9->2 [style = bold, label=""];
2->5 [style = bold, label=""];
}
