digraph {
46 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_END))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "EasyMock.expect(stateManager.taskId()).andReturn(taskId)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,11L,\"key\".getBytes(),\"value\".getBytes()))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "shouldPollWithRightTimeout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertNull(changelogReader.changelogMetadata(tp).endOffset())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_BATCH))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "type == STANDBY@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "EasyMock.expect(storeMetadata.offset()).andReturn(5L).anyTimes()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final TaskId taskId = new TaskId(0,0)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertTrue(changelogReader.completedChangelogs().isEmpty())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,adminClient,consumer,callback)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "consumer.updateBeginningOffsets(Collections.singletonMap(tp,5L))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,7L,\"key\".getBytes(),\"value\".getBytes()))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "EasyMock.expect(storeMetadata.offset()).andReturn(null).andReturn(9L).anyTimes()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "adminClient.updateEndOffsets(Collections.singletonMap(tp,11L))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Duration.ofMillis(config.getLong(StreamsConfig.POLL_MS_CONFIG)),consumer.lastPollTimeout())@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(tp,callback.restoreTopicPartition)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(3L,changelogReader.changelogMetadata(tp).totalRestored())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "adminClient.updateEndOffsets(Collections.singletonMap(tp,10L))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "changelogReader.register(tp,stateManager)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(Duration.ZERO,consumer.lastPollTimeout())@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.COMPLETED,changelogReader.changelogMetadata(tp).state())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "EasyMock.expect(stateManager.changelogOffsets()).andReturn(singletonMap(tp,5L))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,9L,\"key\".getBytes(),\"value\".getBytes()))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(0L,changelogReader.changelogMetadata(tp).totalRestored())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(1,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "changelogReader.restore(Collections.singletonMap(taskId,mock()))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_END))@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(12L,consumer.position(tp))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_START))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(Collections.singleton(tp),changelogReader.completedChangelogs())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_BATCH))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,6L,\"key\".getBytes(),\"value\".getBytes()))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "type == ACTIVE@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,8L,null,\"value\".getBytes()))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "changelogReader.restore()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "EasyMock.replay(stateManager,storeMetadata,store)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Collections.singleton(tp),consumer.paused())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "changelogReader.restore()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(4L,changelogReader.changelogMetadata(tp).totalRestored())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(Collections.emptySet(),changelogReader.completedChangelogs())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "shouldPollWithRightTimeout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "shouldRestoreFromPositionAndCheckForCompletion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(10L,(long)changelogReader.changelogMetadata(tp).endOffset())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "type == ACTIVE@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(6L,consumer.position(tp))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
32->22 [style = bold, label=""];
4->15 [style = bold, label=""];
5->11 [style = dotted, label="false"];
49->48 [style = bold, label=""];
48->27 [style = bold, label=""];
6->35 [style = dashed, label="0"];
3->18 [style = bold, label=""];
3->5 [style = bold, label=""];
43->3 [style = bold, label=""];
41->40 [style = dotted, label="true"];
39->51 [style = bold, label=""];
17->14 [style = bold, label=""];
14->16 [style = solid, label="taskId"];
41->49 [style = dotted, label="true"];
41->33 [style = dotted, label="true"];
47->34 [style = bold, label=""];
21->35 [style = bold, label=""];
1->31 [style = bold, label=""];
38->5 [style = dotted, label="true"];
24->46 [style = bold, label=""];
38->46 [style = dotted, label="true"];
41->45 [style = dotted, label="false"];
4->3 [style = bold, label=""];
14->15 [style = solid, label="taskId"];
37->36 [style = bold, label=""];
41->49 [style = bold, label=""];
30->34 [style = bold, label=""];
20->38 [style = bold, label=""];
38->24 [style = dotted, label="true"];
41->48 [style = dotted, label="true"];
35->0 [style = bold, label=""];
41->23 [style = dotted, label="true"];
5->7 [style = dotted, label="true"];
18->25 [style = bold, label=""];
38->47 [style = bold, label=""];
3->15 [style = dashed, label="0"];
5->7 [style = bold, label=""];
10->2 [style = bold, label=""];
5->11 [style = bold, label=""];
12->4 [style = dotted, label="true"];
14->6 [style = bold, label=""];
41->29 [style = dotted, label="false"];
4->9 [style = bold, label=""];
38->5 [style = bold, label=""];
0->16 [style = bold, label=""];
42->37 [style = bold, label=""];
1->8 [style = bold, label=""];
22->28 [style = bold, label=""];
38->44 [style = dotted, label="true"];
51->52 [style = bold, label=""];
28->41 [style = bold, label=""];
41->37 [style = dotted, label="false"];
38->30 [style = dotted, label="true"];
31->26 [style = bold, label=""];
40->33 [style = bold, label=""];
46->30 [style = bold, label=""];
16->1 [style = bold, label=""];
5->44 [style = bold, label=""];
0->1 [style = bold, label=""];
29->42 [style = bold, label=""];
34->39 [style = bold, label=""];
9->3 [style = bold, label=""];
13->6 [style = bold, label=""];
12->43 [style = bold, label=""];
44->24 [style = bold, label=""];
33->19 [style = bold, label=""];
41->19 [style = dotted, label="true"];
4->43 [style = bold, label=""];
41->27 [style = dotted, label="true"];
41->29 [style = bold, label=""];
50->20 [style = bold, label=""];
6->0 [style = bold, label=""];
15->5 [style = bold, label=""];
2->12 [style = bold, label=""];
26->2 [style = bold, label=""];
41->42 [style = dotted, label="false"];
38->47 [style = dotted, label="false"];
12->4 [style = bold, label=""];
52->32 [style = bold, label=""];
41->36 [style = dotted, label="false"];
9->15 [style = bold, label=""];
23->40 [style = bold, label=""];
27->23 [style = bold, label=""];
8->31 [style = dashed, label="0"];
36->45 [style = bold, label=""];
4->9 [style = dotted, label="true"];
25->50 [style = bold, label=""];
}
