digraph {
7 [style = filled, label = "tester.setFor(SqlStdOperatorTable.CAST)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCastToBoolean['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "tester.checkBoolean(\"(date '1-2-3', date '4-5-6') overlaps (date '2-2-3', date '3-4-5')\",Boolean.TRUE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testCastToBoolean['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "tester.checkBoolean(\"cast(' tr' || 'Ue' as boolean)\",Boolean.TRUE)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testOverlapsOperator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "tester.checkBoolean(\"(timestamp '1-2-3 4:5:6', timestamp '1-2-3 4:5:6' ) overlaps (timestamp '2-2-3 4:5:6', interval '1 2:3:4.5' day to second)\",Boolean.FALSE)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "tester.checkNull(\"(time '1:2:3', cast(null as time)) overlaps (time '23:59:59', time '1:2:3')\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "tester.checkBoolean(\"cast(' fALse' as boolean)\",Boolean.FALSE)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tester.setFor(SqlStdOperatorTable.OVERLAPS,VM_EXPAND)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "tester.checkBoolean(\"(date '1-2-3', date '1-2-3') overlaps (date '1-2-3', interval '1' year)\",Boolean.TRUE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "tester.checkBoolean(\"(timestamp '1-2-3 4:5:6', timestamp '1-2-3 4:5:6' ) overlaps (timestamp '1-2-3 4:5:6', interval '1 2:3:4.5' day to second)\",Boolean.TRUE)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tester.checkBoolean(\"cast('false' as boolean)\",Boolean.FALSE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tester.checkNull(\"(timestamp '1-2-3 4:5:6', cast(null as interval day) ) overlaps (timestamp '1-2-3 4:5:6', interval '1 2:3:4.5' day to second)\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "tester.checkNull(\"(cast(null as date), date '1-2-3') overlaps (date '1-2-3', interval '1' year)\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "tester.checkBoolean(\"(time '1:2:3', interval '1' second) overlaps (time '23:59:59', time '1:2:2')\",Boolean.FALSE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "tester.checkBoolean(\"(time '1:2:3', interval '1' second) overlaps (time '23:59:59', interval '2' hour)\",Boolean.TRUE)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "tester.checkNull(\"(date '1-2-3', date '1-2-3') overlaps (date '1-2-3', cast(null as date))\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "tester.checkBoolean(\"cast(cast('false' as varchar(10)) as boolean)\",Boolean.FALSE)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "tester.checkFails(\"cast(cast('blah' as varchar(10)) as boolean)\",INVALID_CHAR_MESSAGE,true)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tester.checkNull(\"(time '1:2:3', interval '1' second) overlaps (time '23:59:59', cast(null as interval hour))\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "tester.checkBoolean(\"(date '1-2-3', date '1-2-3') overlaps (date '4-5-6', interval '1' year)\",Boolean.FALSE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "tester.checkBoolean(\"(time '1:2:3', interval '1' second) overlaps (time '23:59:59', time '1:2:3')\",Boolean.TRUE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "tester.checkBoolean(\"cast('true' as boolean)\",Boolean.TRUE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tester.checkBoolean(\"cast(' trUe' as boolean)\",Boolean.TRUE)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "tester.checkFails(\"cast('unknown' as boolean)\",INVALID_CHAR_MESSAGE,true)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "tester.checkNull(\"(timestamp '1-2-3 4:5:6', timestamp '1-2-3 4:5:6' ) overlaps (cast(null as timestamp), interval '1 2:3:4.5' day to second)\")@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tester.checkBoolean(\"cast(cast('true' as varchar(10)) as boolean)\",Boolean.TRUE)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Bug.FRG187_FIXED@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19->21 [style = dotted, label="true"];
4->7 [style = bold, label=""];
1->9 [style = bold, label=""];
19->13 [style = dotted, label="true"];
8->0 [style = bold, label=""];
19->24 [style = dotted, label="true"];
1->22 [style = dashed, label="0"];
6->11 [style = bold, label=""];
15->23 [style = bold, label=""];
3->27 [style = dashed, label="0"];
14->19 [style = bold, label=""];
25->18 [style = bold, label=""];
6->8 [style = bold, label=""];
18->26 [style = bold, label=""];
19->20 [style = dotted, label="true"];
3->6 [style = bold, label=""];
19->27 [style = bold, label=""];
19->23 [style = dotted, label="true"];
28->22 [style = bold, label=""];
20->21 [style = bold, label=""];
27->24 [style = bold, label=""];
10->7 [style = bold, label=""];
23->13 [style = bold, label=""];
12->17 [style = bold, label=""];
26->15 [style = bold, label=""];
8->12 [style = dashed, label="0"];
11->8 [style = bold, label=""];
22->25 [style = bold, label=""];
19->12 [style = dotted, label="true"];
19->22 [style = dotted, label="true"];
16->14 [style = bold, label=""];
2->1 [style = bold, label=""];
19->15 [style = dotted, label="true"];
6->24 [style = dashed, label="0"];
17->28 [style = bold, label=""];
19->25 [style = dotted, label="true"];
7->5 [style = bold, label=""];
24->12 [style = bold, label=""];
19->17 [style = dotted, label="true"];
5->3 [style = bold, label=""];
7->14 [style = dashed, label="0"];
0->2 [style = bold, label=""];
13->20 [style = bold, label=""];
19->27 [style = dotted, label="true"];
19->26 [style = dotted, label="true"];
19->28 [style = dotted, label="true"];
19->18 [style = dotted, label="true"];
}
