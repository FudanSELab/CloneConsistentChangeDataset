digraph {
15 [style = filled, label = "addProjectionToJobConf(realtimeSplit,jobConf)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "final Reporter reporter@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "ValidationUtils.checkArgument(split instanceof HoodieRealtimeFileSplit,\"HoodieRealtimeRecordReader can only work on HoodieRealtimeFileSplit and not with \" + split)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "return new HoodieRealtimeRecordReader((HoodieRealtimeFileSplit)split,jobConf,super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@164fe02splitjobConfreporter)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return new HoodieRealtimeRecordReader((RealtimeSplit)split,jobConf,super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@164fd44splitjobConfreporter)@@@16@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final InputSplit split@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "getRecordReader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "jobConf.get(HoodieInputFormatUtils.HOODIE_READ_COLUMNS_PROP) == null@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "jobConf@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "HoodieRealtimeInputFormatUtils.cleanProjectionColumnIds(jobConf)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "getRecordReader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final JobConf jobConf@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final InputSplit split@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "getRecordReader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ValidationUtils.checkArgument(split instanceof RealtimeSplit,\"HoodieRealtimeRecordReader can only work on RealtimeSplit and not with \" + split)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "jobConf.get(HoodieInputFormatUtils.HOODIE_READ_COLUMNS_PROP) == null@@@3@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "LOG.info(\"Creating record reader with readCols :\" + jobConf.get(ColumnProjectionUtils.READ_COLUMN_NAMES_CONF_STR) + \", Ids :\" + jobConf.get(ColumnProjectionUtils.READ_COLUMN_IDS_CONF_STR))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "return new HoodieRealtimeRecordReader(realtimeSplit,jobConf,super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@164fd85splitjobConfreporter)@@@7@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final Reporter reporter@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RealtimeSplit realtimeSplit = (RealtimeSplit)split@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "HoodieRealtimeInputFormatUtils.addRequiredProjectionFields(jobConf)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "LOG.info(\"Creating record reader with readCols :\" + jobConf.get(ColumnProjectionUtils.READ_COLUMN_NAMES_CONF_STR) + \", Ids :\" + jobConf.get(ColumnProjectionUtils.READ_COLUMN_IDS_CONF_STR))@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "this.conf.set(HoodieInputFormatUtils.HOODIE_READ_COLUMNS_PROP,\"true\")@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "this.conf = jobConf@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "LOG.info(\"Before adding Hoodie columns, Projections :\" + jobConf.get(ColumnProjectionUtils.READ_COLUMN_NAMES_CONF_STR) + \", Ids :\" + jobConf.get(ColumnProjectionUtils.READ_COLUMN_IDS_CONF_STR))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final JobConf jobConf@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final Reporter reporter@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2->1 [style = solid, label="jobConf"];
5->3 [style = solid, label="reporter"];
12->10 [style = dotted, label="true"];
19->21 [style = dotted, label="true"];
11->3 [style = bold, label=""];
2->0 [style = solid, label="jobConf"];
26->9 [style = dotted, label="true"];
26->6 [style = bold, label=""];
9->3 [style = solid, label="split"];
2->10 [style = solid, label="jobConf"];
11->20 [style = bold, label=""];
9->16 [style = solid, label="jobConf"];
17->16 [style = solid, label="reporter"];
22->24 [style = solid, label="split"];
15->18 [style = bold, label=""];
23->24 [style = bold, label=""];
26->25 [style = dotted, label="true"];
0->7 [style = bold, label=""];
12->14 [style = bold, label=""];
9->15 [style = solid, label="jobConf"];
0->7 [style = dotted, label="true"];
9->24 [style = solid, label="reporter"];
21->11 [style = solid, label="split"];
20->15 [style = solid, label="realtimeSplit"];
6->0 [style = bold, label=""];
13->6 [style = bold, label=""];
20->15 [style = bold, label=""];
8->23 [style = bold, label=""];
3->24 [style = dashed, label="0"];
0->12 [style = dotted, label="true"];
4->8 [style = bold, label=""];
19->9 [style = dotted, label="true"];
13->9 [style = dotted, label="true"];
6->8 [style = bold, label=""];
11->23 [style = dashed, label="0"];
25->10 [style = solid, label="jobConf"];
6->0 [style = dotted, label="true"];
21->20 [style = solid, label="split"];
21->16 [style = solid, label="split"];
25->1 [style = solid, label="jobConf"];
10->1 [style = bold, label=""];
8->11 [style = bold, label=""];
13->2 [style = dotted, label="true"];
12->4 [style = dotted, label="true"];
7->12 [style = bold, label=""];
19->11 [style = bold, label=""];
2->3 [style = solid, label="jobConf"];
18->16 [style = bold, label=""];
12->14 [style = dotted, label="true"];
20->16 [style = solid, label="realtimeSplit"];
1->4 [style = bold, label=""];
22->23 [style = solid, label="split"];
25->0 [style = solid, label="jobConf"];
9->11 [style = solid, label="split"];
2->14 [style = solid, label="jobConf"];
19->17 [style = dotted, label="true"];
13->5 [style = dotted, label="true"];
25->24 [style = solid, label="jobConf"];
25->14 [style = solid, label="jobConf"];
12->1 [style = dotted, label="true"];
14->10 [style = bold, label=""];
26->22 [style = dotted, label="true"];
12->8 [style = bold, label=""];
}
