digraph {
6 [style = filled, label = "consoleProxyManagerImplMock.expandPool(new Long(1),new Object())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Mockito.when(cpvmManager.assignProxyFromStoppedPool(Mockito.anyLong())).thenReturn(proxyVO)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "s_logger.info(\"Running test for new CPVM creation\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Mockito.when(consoleProxyManagerImplMock.assignProxyFromStoppedPool(Mockito.anyLong())).thenReturn(consoleProxyVOMock)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Mockito.when(cpvmManager.startProxy(Mockito.anyLong(),Mockito.anyBoolean())).thenReturn(proxyVO)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Mockito.when(globalLock.lock(Mockito.anyInt())).thenReturn(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Mockito.when(globalLock.unlock()).thenReturn(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "s_logger.info(\"Running test for existing CPVM start\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Mockito.when(consoleProxyManagerImplMock.startProxy(Mockito.anyLong(),Mockito.anyBoolean())).thenReturn(consoleProxyVOMock)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testNewCPVMCreation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Mockito.when(cpvmManager.startNew(Mockito.anyLong())).thenReturn(proxyVO)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testExistingCPVMStart['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "cpvmManager.expandPool(new Long(1),new Object())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "cpvmManager.expandPool(new Long(1),new Object())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Mockito.when(cpvmManager.assignProxyFromStoppedPool(Mockito.anyLong())).thenReturn(null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testExistingCPVMStart['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Mockito.when(cpvmManager.startProxy(Mockito.anyLong(),Mockito.anyBoolean())).thenReturn(proxyVO)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
5->3 [style = bold, label=""];
16->9 [style = bold, label=""];
8->6 [style = bold, label=""];
9->12 [style = bold, label=""];
4->2 [style = bold, label=""];
4->16 [style = dashed, label="0"];
15->14 [style = bold, label=""];
3->7 [style = bold, label=""];
7->8 [style = bold, label=""];
10->13 [style = bold, label=""];
4->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
2->8 [style = dashed, label="0"];
2->1 [style = bold, label=""];
13->16 [style = bold, label=""];
1->6 [style = dashed, label="0"];
11->15 [style = bold, label=""];
3->13 [style = dashed, label="0"];
12->11 [style = bold, label=""];
}
