digraph {
11 [style = filled, label = "assertThat(cos.size()).isEqualTo(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testNewCompositeOutputStreamWithNoStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "cos.flush()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "cos.write(9)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verifyNoMoreInteractions(streamOne)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "cos.removeOutputStream(streamOne)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(cos.isEmpty()).isFalse()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(cos.size()).isEqualTo(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "verifyZeroInteractions(streamOne)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "cos.flush()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cos.write(9)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(cos.isEmpty()).isTrue()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final CompositeOutputStream cos = new CompositeOutputStream(streamOne)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "cos.close()@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final CompositeOutputStream cos = new CompositeOutputStream()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testRemoveOutputStreamWithOneStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1685d8,2,3)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@168633)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "cos.close()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testRemoveOutputStreamWithOneStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertThat(cos.isEmpty()).isTrue()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final OutputStream streamOne = mock(,\"streamOne\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@168620,2,3)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
9->5 [style = solid, label="streamOne"];
9->12 [style = solid, label="streamOne"];
2->3 [style = bold, label=""];
22->21 [style = bold, label=""];
16->17 [style = bold, label=""];
9->6 [style = solid, label="streamOne"];
6->14 [style = dashed, label="0"];
20->22 [style = bold, label=""];
3->18 [style = bold, label=""];
9->14 [style = solid, label="streamOne"];
8->0 [style = bold, label=""];
11->5 [style = bold, label=""];
13->19 [style = bold, label=""];
1->6 [style = bold, label=""];
12->4 [style = bold, label=""];
15->9 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
21->16 [style = bold, label=""];
5->7 [style = bold, label=""];
1->14 [style = bold, label=""];
10->9 [style = bold, label=""];
17->13 [style = bold, label=""];
9->12 [style = bold, label=""];
4->11 [style = bold, label=""];
19->3 [style = bold, label=""];
13->2 [style = bold, label=""];
}
