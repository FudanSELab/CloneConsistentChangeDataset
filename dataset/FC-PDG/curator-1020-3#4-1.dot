digraph {
17 [style = filled, label = "client.getConnectionStateListenable().addListener(listener)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.getConnectionStateListenable().addListener(listener)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final CountDownLatch connectedLatch = new CountDownLatch(1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "server.stop()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(firstListenerAction.get())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(firstconnectionState,ConnectionState.CONNECTED,\"First listener state MUST BE CONNECTED but is \" + firstconnectionState)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "final AtomicReference<ConnectionState> firstListenerState = new AtomicReference<ConnectionState>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testListenerConnectedAtStart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final AtomicReference<ConnectionState> firstListenerState = new AtomicReference<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "server.restart()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ConnectionState firstconnectionState = firstListenerState.get()@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Timing timing = new Timing(2)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final AtomicBoolean firstListenerAction = new AtomicBoolean(true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "server.restart()@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ConnectionStateListener listener = null@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "client.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(connectedLatch))@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testListenerConnectedAtStart['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertFalse(firstListenerAction.get())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testListenerConnectedAtStart['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertTrue(timing.awaitLatch(connectedLatch))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "AsyncCuratorFramework async = AsyncCuratorFramework.wrap(client)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "client.create().inBackground().forPath(\"/foo\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(firstconnectionState,ConnectionState.CONNECTED,\"First listener state MUST BE CONNECTED but is \" + firstconnectionState)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ConnectionStateListener listener = new ConnectionStateListener(){@Override public void stateChanged(CuratorFramework client,ConnectionState newState){if (firstListenerAction.compareAndSet(true,false)) {firstListenerState.set(newState)System.out.println(\"First listener state is \" + newState)}if (newState == ConnectionState.CONNECTED) {connectedLatch.countDown()}}}@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryNTimes(0,0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->23 [style = dashed, label="0"];
4->18 [style = dashed, label="0"];
1->8 [style = bold, label=""];
17->1 [style = bold, label=""];
26->5 [style = bold, label=""];
4->27 [style = solid, label="firstconnectionState"];
9->4 [style = bold, label=""];
4->13 [style = bold, label=""];
8->3 [style = bold, label=""];
0->2 [style = bold, label=""];
12->17 [style = bold, label=""];
25->3 [style = bold, label=""];
24->1 [style = solid, label="listener"];
9->4 [style = solid, label="firstconnectionState"];
3->16 [style = bold, label=""];
27->22 [style = bold, label=""];
16->21 [style = dashed, label="0"];
10->6 [style = bold, label=""];
15->5 [style = bold, label=""];
2->12 [style = bold, label=""];
14->20 [style = solid, label="connectedLatch"];
14->16 [style = solid, label="connectedLatch"];
7->14 [style = bold, label=""];
20->21 [style = bold, label=""];
6->14 [style = bold, label=""];
19->5 [style = bold, label=""];
23->24 [style = bold, label=""];
21->9 [style = bold, label=""];
12->17 [style = solid, label="listener"];
8->20 [style = bold, label=""];
9->18 [style = bold, label=""];
0->23 [style = bold, label=""];
14->0 [style = bold, label=""];
11->10 [style = bold, label=""];
10->22 [style = solid, label="client"];
10->13 [style = solid, label="client"];
12->24 [style = dashed, label="0"];
10->7 [style = solid, label="client"];
4->27 [style = bold, label=""];
3->20 [style = dashed, label="0"];
18->13 [style = bold, label=""];
5->11 [style = bold, label=""];
24->1 [style = bold, label=""];
6->7 [style = bold, label=""];
9->18 [style = solid, label="firstconnectionState"];
1->25 [style = dashed, label="0"];
1->25 [style = bold, label=""];
16->9 [style = bold, label=""];
14->3 [style = solid, label="connectedLatch"];
}
