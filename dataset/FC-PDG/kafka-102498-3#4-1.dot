digraph {
8 [style = filled, label = "final StreamsConfig streamsConfig = new StreamsConfig(props)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final AssignmentInfo info10 = checkAssignment(allTopics,assignments.get(\"consumer10\"))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "builder.addStateStore(new MockKeyValueStoreBuilder(\"store1\",false).withLoggingDisabled(),\"processor\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "configurePartitionAssignor(Collections.singletonMap(StreamsConfig.NUM_STANDBY_REPLICAS_CONFIG,1))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testAssignWithStandbyReplicasAndStatelessTasks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "subscriptions.put(\"consumer20\",new ConsumerPartitionAssignor.Subscription(topics,getInfo(uuid2,mkSet(task0_2),Collections.emptySet(),\"any:9097\").encode()))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testAssignWithStandbyReplicasAndStatelessTasks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Map<String,Object> props = configProps()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final UUID uuid1 = UUID.randomUUID()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "props.put(StreamsConfig.NUM_STANDBY_REPLICAS_CONFIG,\"1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final UUID uuid2 = UUID.randomUUID()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Map<String,ConsumerPartitionAssignor.Assignment> assignments = partitionAssignor.assign(metadata,new GroupSubscription(subscriptions)).groupAssignment()@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "builder.addSource(null,\"source1\",null,null,null,\"topic1\",\"topic2\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final Map<String,Assignment> assignments = partitionAssignor.assign(metadata,new GroupSubscription(subscriptions)).groupAssignment()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertTrue(info10.standbyTasks().isEmpty())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testAssignWithStandbyReplicasAndLoggingDisabled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(info20.standbyTasks().isEmpty())@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "partitionAssignor.setInternalTopicManager(new MockInternalTopicManager(streamsConfig,mockClientSupplier.restoreConsumer))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "builder.addProcessor(\"processor\",new MockProcessorSupplier(),\"source1\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final List<String> topics = asList(\"topic1\",\"topic2\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "EasyMock.replay(taskManager)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "subscriptions.put(\"consumer20\",new Subscription(topics,getInfo(uuid2,getTaskOffsetSums(mkSet(task0_2),Collections.emptySet()),\"any:9097\").encode()))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "createMockTaskManager(mkSet(task0_0),Collections.emptySet(),uuid1,builder)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "streamsMetadataState = EasyMock.createNiceMock()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "subscriptions.put(\"consumer10\",new ConsumerPartitionAssignor.Subscription(topics,getInfo(uuid1,mkSet(task0_0),Collections.emptySet(),\"any:9096\").encode()))@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "subscriptions.put(\"consumer10\",new Subscription(topics,getInfo(uuid1,getTaskOffsetSums(mkSet(task0_0),Collections.emptySet()),\"any:9096\").encode()))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final AssignmentInfo info20 = checkAssignment(allTopics,assignments.get(\"consumer20\"))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->2 [style = bold, label=""];
16->0 [style = bold, label=""];
12->23 [style = dashed, label="0"];
2->21 [style = solid, label="topics"];
12->5 [style = bold, label=""];
3->1 [style = bold, label=""];
7->10 [style = bold, label=""];
15->25 [style = bold, label=""];
2->23 [style = solid, label="topics"];
4->15 [style = bold, label=""];
9->20 [style = bold, label=""];
10->6 [style = bold, label=""];
25->2 [style = bold, label=""];
8->1 [style = solid, label="streamsConfig"];
11->18 [style = bold, label=""];
1->23 [style = bold, label=""];
26->13 [style = bold, label=""];
2->5 [style = solid, label="topics"];
0->7 [style = bold, label=""];
5->16 [style = bold, label=""];
22->0 [style = bold, label=""];
23->21 [style = bold, label=""];
21->22 [style = bold, label=""];
13->8 [style = solid, label="props"];
18->9 [style = bold, label=""];
1->12 [style = bold, label=""];
5->21 [style = dashed, label="0"];
14->8 [style = bold, label=""];
17->13 [style = bold, label=""];
8->4 [style = bold, label=""];
20->19 [style = bold, label=""];
2->12 [style = solid, label="topics"];
13->14 [style = bold, label=""];
19->3 [style = bold, label=""];
2->11 [style = bold, label=""];
11->9 [style = solid, label="uuid1"];
16->22 [style = dashed, label="0"];
24->13 [style = bold, label=""];
}
