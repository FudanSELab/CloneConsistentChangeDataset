digraph {
6 [style = filled, label = "assertEquals(Collections.singletonList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "assertEquals(Collections.singletonList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
78 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "windowStore.put(1,\"one\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "context.restore(windowName,changeLog)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "windowStore.put(5,\"five\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "final long startTime = segmentInterval * 2@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),toSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "windowStore.put(4,\"four\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "final long startTime = SEGMENT_INTERVAL * 2@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "windowStore.put(5,\"five\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
71 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),toSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "setCurrentTime(startTime + increment)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),toSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
107 [style = filled, label = "setCurrentTime(startTime)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),toSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
90 [style = filled, label = "windowStore.flush()@@@59@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "setCurrentTime(startTime + increment * 2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "windowStore.put(8,\"eight\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "Utils.delete(baseDir)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "testRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),toSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
111 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),toSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final long increment = segmentInterval / 2@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "windowStore.put(6,\"six\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),toSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
88 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"one\")),toSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(Collections.singletonList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "assertEquals(Collections.singletonList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
89 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "windowStore.put(4,\"four\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Collections.singletonList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertEquals(Collections.singletonList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "assertEquals(Collections.singletonList(\"eight\"),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "windowStore.flush()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "windowStore = createWindowStore(context,false)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(Collections.singletonList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
108 [style = filled, label = "windowStore = createWindowStore(context,false)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "windowStore.flush()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),toSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "windowStore.put(7,\"seven\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "windowStore.put(6,\"six\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
75 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),toSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
80 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),toSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),toSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "setCurrentTime(startTime)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),toSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertEquals(Collections.singletonList(\"one\"),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
94 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@41@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "windowStore.put(0,\"zero\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@50@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),toSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
104 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "assertEquals(Collections.singletonList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "windowStore.put(7,\"seven\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "windowStore.put(2,\"two\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "setCurrentTime(startTime + increment)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
96 [style = filled, label = "windowStore.close()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(Collections.singletonList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"eight\")),toSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
98 [style = filled, label = "windowStore.put(3,\"three\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "windowStore = createWindowStore(context,false)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(Collections.singletonList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(Collections.singletonList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
82 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),toSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
100 [style = filled, label = "windowStore.put(8,\"eight\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(Collections.singletonList(\"zero\"),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
86 [style = filled, label = "final long increment = SEGMENT_INTERVAL / 2@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),toSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "setCurrentTime(startTime + increment * 3)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Collections.singletonList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Collections.singletonList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "setCurrentTime(startTime + increment * 2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(Collections.singletonList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "testRolling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
116 [style = filled, label = "assertEquals(Collections.singletonList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(Collections.singletonList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@44@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),toSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
85 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "testRolling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->14 [style = solid, label="startTime"];
51->5 [style = bold, label=""];
0->39 [style = solid, label="startTime"];
0->30 [style = solid, label="increment"];
86->66 [style = solid, label="increment"];
73->84 [style = solid, label="startTime"];
65->80 [style = bold, label=""];
111->13 [style = bold, label=""];
101->111 [style = solid, label="startTime"];
73->67 [style = solid, label="startTime"];
64->73 [style = bold, label=""];
47->40 [style = solid, label="increment"];
0->104 [style = solid, label="increment"];
101->22 [style = solid, label="startTime"];
101->13 [style = solid, label="startTime"];
16->104 [style = bold, label=""];
38->100 [style = bold, label=""];
0->12 [style = solid, label="startTime"];
86->71 [style = solid, label="increment"];
86->78 [style = solid, label="increment"];
44->18 [style = bold, label=""];
9->38 [style = bold, label=""];
0->99 [style = solid, label="increment"];
101->5 [style = solid, label="startTime"];
1->44 [style = bold, label=""];
0->16 [style = solid, label="increment"];
110->105 [style = bold, label=""];
56->84 [style = dashed, label="0"];
34->54 [style = bold, label=""];
109->5 [style = bold, label=""];
47->39 [style = solid, label="increment"];
86->81 [style = solid, label="increment"];
86->65 [style = solid, label="increment"];
66->69 [style = bold, label=""];
33->29 [style = bold, label=""];
0->38 [style = solid, label="increment"];
73->50 [style = solid, label="startTime"];
47->107 [style = bold, label=""];
47->15 [style = solid, label="increment"];
87->17 [style = bold, label=""];
86->82 [style = solid, label="increment"];
15->72 [style = dashed, label="0"];
74->75 [style = bold, label=""];
73->62 [style = solid, label="startTime"];
86->83 [style = solid, label="increment"];
101->115 [style = solid, label="startTime"];
86->84 [style = solid, label="increment"];
25->74 [style = dashed, label="0"];
69->81 [style = bold, label=""];
4->67 [style = dashed, label="0"];
47->10 [style = solid, label="increment"];
47->52 [style = solid, label="increment"];
5->102 [style = dashed, label="0"];
101->35 [style = solid, label="startTime"];
0->13 [style = solid, label="increment"];
105->111 [style = bold, label=""];
86->60 [style = solid, label="increment"];
43->7 [style = bold, label=""];
76->74 [style = bold, label=""];
0->40 [style = solid, label="startTime"];
0->29 [style = solid, label="startTime"];
36->13 [style = bold, label=""];
19->16 [style = dashed, label="0"];
47->56 [style = solid, label="increment"];
115->16 [style = bold, label=""];
40->27 [style = bold, label=""];
5->77 [style = dashed, label="0"];
86->85 [style = solid, label="increment"];
47->28 [style = solid, label="increment"];
0->4 [style = solid, label="startTime"];
86->62 [style = solid, label="increment"];
0->26 [style = solid, label="startTime"];
0->33 [style = solid, label="startTime"];
73->54 [style = solid, label="startTime"];
47->14 [style = solid, label="increment"];
47->18 [style = solid, label="increment"];
101->114 [style = solid, label="startTime"];
47->32 [style = solid, label="increment"];
101->16 [style = solid, label="startTime"];
0->22 [style = solid, label="increment"];
0->1 [style = solid, label="startTime"];
0->51 [style = solid, label="startTime"];
108->109 [style = bold, label=""];
20->6 [style = bold, label=""];
73->82 [style = solid, label="startTime"];
38->70 [style = bold, label=""];
68->77 [style = bold, label=""];
93->72 [style = bold, label=""];
73->86 [style = bold, label=""];
86->63 [style = solid, label="increment"];
86->76 [style = solid, label="increment"];
0->49 [style = solid, label="startTime"];
6->65 [style = dashed, label="0"];
47->19 [style = solid, label="increment"];
52->114 [style = dashed, label="0"];
11->23 [style = bold, label=""];
0->45 [style = solid, label="startTime"];
73->83 [style = solid, label="startTime"];
23->55 [style = bold, label=""];
73->93 [style = solid, label="startTime"];
22->97 [style = dashed, label="0"];
37->2 [style = dashed, label="0"];
48->3 [style = bold, label=""];
73->69 [style = solid, label="startTime"];
101->109 [style = solid, label="startTime"];
86->70 [style = solid, label="increment"];
73->76 [style = solid, label="startTime"];
42->9 [style = bold, label=""];
73->89 [style = solid, label="startTime"];
28->9 [style = bold, label=""];
0->8 [style = solid, label="startTime"];
101->113 [style = solid, label="startTime"];
73->63 [style = solid, label="startTime"];
0->10 [style = solid, label="startTime"];
26->15 [style = bold, label=""];
25->19 [style = bold, label=""];
3->88 [style = bold, label=""];
19->75 [style = dashed, label="0"];
73->11 [style = solid, label="startTime"];
73->35 [style = solid, label="startTime"];
101->30 [style = solid, label="startTime"];
78->89 [style = bold, label=""];
10->61 [style = dashed, label="0"];
86->68 [style = solid, label="increment"];
18->10 [style = dashed, label="0"];
0->15 [style = solid, label="startTime"];
73->91 [style = solid, label="startTime"];
47->36 [style = solid, label="increment"];
0->52 [style = solid, label="startTime"];
107->17 [style = bold, label=""];
90->57 [style = bold, label=""];
0->20 [style = solid, label="startTime"];
73->81 [style = solid, label="startTime"];
89->60 [style = bold, label=""];
7->33 [style = bold, label=""];
63->62 [style = bold, label=""];
47->49 [style = solid, label="increment"];
101->57 [style = solid, label="startTime"];
13->71 [style = dashed, label="0"];
47->33 [style = solid, label="increment"];
0->18 [style = solid, label="startTime"];
0->113 [style = solid, label="increment"];
86->74 [style = solid, label="increment"];
102->99 [style = bold, label=""];
49->28 [style = bold, label=""];
0->17 [style = solid, label="startTime"];
70->76 [style = bold, label=""];
101->94 [style = solid, label="startTime"];
0->94 [style = solid, label="increment"];
0->44 [style = solid, label="startTime"];
113->103 [style = bold, label=""];
38->1 [style = bold, label=""];
73->92 [style = solid, label="startTime"];
10->99 [style = dashed, label="0"];
52->16 [style = bold, label=""];
2->78 [style = bold, label=""];
86->75 [style = solid, label="increment"];
101->102 [style = solid, label="startTime"];
3->21 [style = bold, label=""];
19->51 [style = bold, label=""];
47->23 [style = solid, label="increment"];
44->70 [style = dashed, label="0"];
54->14 [style = bold, label=""];
27->36 [style = bold, label=""];
27->82 [style = dashed, label="0"];
0->19 [style = solid, label="startTime"];
0->26 [style = solid, label="increment"];
86->92 [style = solid, label="increment"];
101->59 [style = solid, label="startTime"];
43->42 [style = dashed, label="0"];
17->30 [style = bold, label=""];
16->2 [style = bold, label=""];
39->88 [style = dashed, label="0"];
47->51 [style = solid, label="increment"];
0->21 [style = solid, label="startTime"];
73->72 [style = solid, label="startTime"];
0->27 [style = solid, label="startTime"];
50->8 [style = bold, label=""];
86->80 [style = solid, label="increment"];
57->22 [style = bold, label=""];
2->37 [style = bold, label=""];
101->105 [style = solid, label="startTime"];
0->53 [style = solid, label="startTime"];
47->45 [style = solid, label="increment"];
73->87 [style = solid, label="startTime"];
0->114 [style = solid, label="increment"];
86->88 [style = solid, label="increment"];
32->12 [style = bold, label=""];
47->29 [style = solid, label="increment"];
15->57 [style = bold, label=""];
0->32 [style = solid, label="startTime"];
26->93 [style = dashed, label="0"];
77->61 [style = bold, label=""];
86->35 [style = solid, label="increment"];
104->102 [style = bold, label=""];
10->115 [style = bold, label=""];
7->83 [style = dashed, label="0"];
0->86 [style = dashed, label="0"];
81->45 [style = bold, label=""];
75->68 [style = bold, label=""];
62->92 [style = bold, label=""];
0->24 [style = solid, label="startTime"];
116->113 [style = bold, label=""];
8->34 [style = bold, label=""];
5->10 [style = bold, label=""];
0->6 [style = solid, label="startTime"];
0->59 [style = solid, label="increment"];
0->37 [style = solid, label="startTime"];
6->49 [style = bold, label=""];
47->25 [style = solid, label="increment"];
0->34 [style = solid, label="increment"];
0->57 [style = solid, label="increment"];
40->60 [style = dashed, label="0"];
0->25 [style = solid, label="startTime"];
59->11 [style = bold, label=""];
79->52 [style = bold, label=""];
101->38 [style = solid, label="startTime"];
31->53 [style = bold, label=""];
73->66 [style = solid, label="startTime"];
88->84 [style = bold, label=""];
67->66 [style = bold, label=""];
60->82 [style = bold, label=""];
0->115 [style = solid, label="increment"];
101->107 [style = solid, label="startTime"];
47->8 [style = solid, label="increment"];
47->31 [style = solid, label="increment"];
73->71 [style = solid, label="startTime"];
100->95 [style = bold, label=""];
21->39 [style = bold, label=""];
86->69 [style = solid, label="increment"];
47->44 [style = solid, label="increment"];
18->76 [style = dashed, label="0"];
3->41 [style = bold, label=""];
101->15 [style = solid, label="startTime"];
47->12 [style = solid, label="increment"];
73->88 [style = solid, label="startTime"];
73->61 [style = solid, label="startTime"];
21->3 [style = dashed, label="0"];
42->43 [style = bold, label=""];
0->111 [style = solid, label="increment"];
73->70 [style = solid, label="startTime"];
29->62 [style = dashed, label="0"];
73->77 [style = solid, label="startTime"];
10->52 [style = bold, label=""];
86->87 [style = bold, label=""];
96->106 [style = bold, label=""];
73->3 [style = solid, label="startTime"];
86->79 [style = solid, label="increment"];
0->47 [style = bold, label=""];
56->4 [style = bold, label=""];
101->116 [style = solid, label="startTime"];
86->77 [style = solid, label="increment"];
47->13 [style = solid, label="increment"];
85->28 [style = bold, label=""];
24->48 [style = bold, label=""];
4->32 [style = bold, label=""];
35->48 [style = bold, label=""];
91->71 [style = bold, label=""];
12->45 [style = bold, label=""];
46->0 [style = bold, label=""];
32->66 [style = dashed, label="0"];
86->89 [style = solid, label="increment"];
51->104 [style = dashed, label="0"];
106->108 [style = bold, label=""];
101->3 [style = solid, label="startTime"];
73->75 [style = solid, label="startTime"];
49->80 [style = dashed, label="0"];
83->63 [style = bold, label=""];
72->90 [style = bold, label=""];
114->110 [style = bold, label=""];
98->94 [style = bold, label=""];
37->31 [style = bold, label=""];
103->97 [style = bold, label=""];
73->2 [style = solid, label="startTime"];
1->38 [style = dashed, label="0"];
101->42 [style = solid, label="startTime"];
99->114 [style = bold, label=""];
30->8 [style = bold, label=""];
47->5 [style = solid, label="increment"];
86->93 [style = solid, label="increment"];
0->116 [style = solid, label="increment"];
16->110 [style = dashed, label="0"];
73->65 [style = solid, label="startTime"];
86->50 [style = solid, label="increment"];
82->91 [style = bold, label=""];
86->54 [style = solid, label="increment"];
45->41 [style = bold, label=""];
101->0 [style = bold, label=""];
101->99 [style = solid, label="startTime"];
73->79 [style = solid, label="startTime"];
86->61 [style = solid, label="increment"];
0->15 [style = solid, label="increment"];
80->85 [style = bold, label=""];
0->3 [style = solid, label="increment"];
112->101 [style = bold, label=""];
0->36 [style = solid, label="startTime"];
101->34 [style = solid, label="startTime"];
0->42 [style = solid, label="increment"];
29->20 [style = bold, label=""];
51->68 [style = dashed, label="0"];
86->72 [style = solid, label="increment"];
73->68 [style = solid, label="startTime"];
47->26 [style = solid, label="increment"];
71->93 [style = bold, label=""];
0->56 [style = solid, label="startTime"];
86->91 [style = solid, label="increment"];
18->25 [style = bold, label=""];
58->46 [style = bold, label=""];
34->14 [style = bold, label=""];
55->35 [style = bold, label=""];
73->42 [style = solid, label="startTime"];
47->27 [style = solid, label="increment"];
47->20 [style = solid, label="increment"];
73->80 [style = solid, label="startTime"];
59->98 [style = bold, label=""];
73->38 [style = solid, label="startTime"];
53->40 [style = bold, label=""];
86->11 [style = solid, label="increment"];
0->5 [style = solid, label="increment"];
12->69 [style = dashed, label="0"];
30->50 [style = bold, label=""];
33->63 [style = dashed, label="0"];
35->24 [style = bold, label=""];
101->26 [style = solid, label="startTime"];
0->5 [style = solid, label="startTime"];
42->83 [style = bold, label=""];
0->23 [style = solid, label="startTime"];
13->26 [style = bold, label=""];
0->13 [style = solid, label="startTime"];
73->74 [style = solid, label="startTime"];
47->6 [style = solid, label="increment"];
73->60 [style = solid, label="startTime"];
22->116 [style = bold, label=""];
86->67 [style = solid, label="increment"];
73->78 [style = solid, label="startTime"];
47->24 [style = solid, label="increment"];
94->55 [style = bold, label=""];
101->104 [style = solid, label="startTime"];
53->89 [style = dashed, label="0"];
20->92 [style = dashed, label="0"];
0->43 [style = solid, label="startTime"];
0->31 [style = solid, label="startTime"];
47->7 [style = solid, label="increment"];
84->67 [style = bold, label=""];
61->79 [style = bold, label=""];
47->53 [style = solid, label="increment"];
0->102 [style = solid, label="increment"];
0->35 [style = solid, label="increment"];
0->7 [style = solid, label="startTime"];
39->56 [style = bold, label=""];
92->65 [style = bold, label=""];
95->96 [style = bold, label=""];
36->91 [style = dashed, label="0"];
73->85 [style = solid, label="startTime"];
14->59 [style = bold, label=""];
47->17 [style = bold, label=""];
0->28 [style = solid, label="startTime"];
101->10 [style = solid, label="startTime"];
47->4 [style = solid, label="increment"];
0->10 [style = solid, label="increment"];
31->78 [style = dashed, label="0"];
41->42 [style = bold, label=""];
}
