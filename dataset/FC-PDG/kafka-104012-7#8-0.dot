digraph {
19 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,newAssignment))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(newAssignmentSet,rebalanceListener.assigned)@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(1,\"consumer\",\"leader\",Errors.NONE.code()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "coordinator.joinGroupIfNeeded()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "subscriptions.subscribe(Pattern.compile(\".*\"),rebalanceListener)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "subscriptions.subscribe(new HashSet<>(Arrays.asList(topicName,otherTopic)),rebalanceListener)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final String otherTopicName = \"otherTopic\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final Set<String> updatedSubscriptionSet = new HashSet<>(updatedSubscription)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "String otherTopic = \"otherTopic\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertFalse(coordinator.needRejoin())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "client.prepareResponse(joinGroupLeaderResponse(1,consumerId,initialSubscription,Errors.NONE.code()))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(1,rebalanceListener.revokedCount)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "coordinator.poll(time.milliseconds())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final List<String> updatedSubscription = Arrays.asList(topicName,otherTopicName)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,List<String>> initialSubscription = singletonMap(consumerId,Arrays.asList(topicName))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.assigned)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<TopicPartition> newAssignment = Arrays.asList(tp,otherPartition)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,singletonList(tp)))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Set<TopicPartition> newAssignmentSet = new HashSet<>(newAssignment)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){final Map<String,Integer> updatedPartitions = new HashMap<>()for (String topic : updatedSubscription)updatedPartitions.put(topic,1)metadata.update(TestUtils.clusterWith(1,updatedPartitions),time.milliseconds())return true}},syncGroupResponse(singletonList(tp),Errors.NONE.code()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Map<String,List<String>> updatedSubscriptions = singletonMap(consumerId,Arrays.asList(topicName,otherTopicName))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){JoinGroupRequest join = (JoinGroupRequest)bodyProtocolMetadata protocolMetadata = join.groupProtocols().iterator().next()PartitionAssignor.Subscription subscription = ConsumerProtocol.deserializeSubscription(protocolMetadata.metadata())protocolMetadata.metadata().rewind()return subscription.topics().containsAll(updatedSubscriptionSet)}},joinGroupLeaderResponse(2,consumerId,updatedSubscriptions,Errors.NONE.code()))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(updatedSubscriptionSet,subscriptions.subscription())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "metadata.needMetadataForAllTopics(true)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "client.prepareResponse(syncGroupResponse(singletonList(tp),Errors.NONE.code()))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "metadata.update(cluster,time.milliseconds())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(singleton(topicName),subscriptions.subscription())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(rebalanceListener.revoked.isEmpty())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(2,\"consumer\",\"leader\",Errors.NONE.code()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "TopicPartition otherPartition = new TopicPartition(otherTopicName,0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String consumerId = \"leader\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testMetadataRefreshDuringRebalance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(newAssignmentSet,subscriptions.assignedPartitions())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.revoked)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(2,rebalanceListener.revokedCount)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.assigned)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "coordinator.ensureCoordinatorReady()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(2,rebalanceListener.revokedCount)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.revoked)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "subscriptions.subscribe(singleton(topicName),rebalanceListener)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testMetadataRefreshDuringRebalance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "testRejoinGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "coordinator.joinGroupIfNeeded()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "client.prepareResponse(syncGroupResponse(singletonList(tp),Errors.NONE.code()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE.code()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "client.prepareResponse(syncGroupResponse(newAssignment,Errors.NONE.code()))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46->44 [style = solid, label="otherTopic"];
14->5 [style = bold, label=""];
11->25 [style = bold, label=""];
26->6 [style = bold, label=""];
18->28 [style = solid, label="updatedSubscriptionSet"];
13->28 [style = solid, label="subscription"];
3->24 [style = bold, label=""];
8->14 [style = bold, label=""];
1->25 [style = solid, label="consumerId"];
1->13 [style = solid, label="consumerId"];
32->38 [style = bold, label=""];
20->3 [style = bold, label=""];
26->47 [style = bold, label=""];
5->19 [style = solid, label="newAssignment"];
41->45 [style = bold, label=""];
45->40 [style = bold, label=""];
25->13 [style = solid, label="updatedSubscriptions"];
12->25 [style = solid, label="otherTopicName"];
4->16 [style = bold, label=""];
47->33 [style = bold, label=""];
13->17 [style = bold, label=""];
1->12 [style = bold, label=""];
25->19 [style = bold, label=""];
37->35 [style = bold, label=""];
0->29 [style = bold, label=""];
44->31 [style = bold, label=""];
43->46 [style = bold, label=""];
1->19 [style = solid, label="consumerId"];
2->38 [style = dashed, label="0"];
9->15 [style = bold, label=""];
27->14 [style = solid, label="updatedSubscription"];
18->13 [style = solid, label="updatedSubscriptionSet"];
39->42 [style = bold, label=""];
5->17 [style = solid, label="newAssignment"];
12->23 [style = bold, label=""];
33->44 [style = bold, label=""];
22->9 [style = bold, label=""];
23->0 [style = bold, label=""];
23->5 [style = solid, label="otherPartition"];
19->13 [style = bold, label=""];
6->2 [style = bold, label=""];
1->46 [style = dashed, label="0"];
12->23 [style = solid, label="otherTopicName"];
17->4 [style = bold, label=""];
28->22 [style = bold, label=""];
10->7 [style = bold, label=""];
6->8 [style = solid, label="initialSubscription"];
46->37 [style = bold, label=""];
11->22 [style = solid, label="newAssignmentSet"];
31->41 [style = bold, label=""];
5->11 [style = bold, label=""];
1->8 [style = solid, label="consumerId"];
40->34 [style = bold, label=""];
7->42 [style = dashed, label="0"];
35->36 [style = bold, label=""];
38->48 [style = bold, label=""];
12->27 [style = solid, label="otherTopicName"];
27->18 [style = solid, label="updatedSubscription"];
27->18 [style = bold, label=""];
2->27 [style = bold, label=""];
1->2 [style = solid, label="consumerId"];
36->32 [style = bold, label=""];
16->28 [style = bold, label=""];
21->1 [style = bold, label=""];
30->1 [style = bold, label=""];
34->39 [style = bold, label=""];
18->8 [style = bold, label=""];
48->24 [style = bold, label=""];
5->11 [style = solid, label="newAssignment"];
24->26 [style = bold, label=""];
15->10 [style = bold, label=""];
11->7 [style = solid, label="newAssignmentSet"];
1->6 [style = solid, label="consumerId"];
29->20 [style = bold, label=""];
}
