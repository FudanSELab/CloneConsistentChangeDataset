digraph {
9 [style = filled, label = "testAnd['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,or(lessThan(\"id\",INT_MIN_VALUE - 25),greaterThanOrEqual(\"id\",INT_MAX_VALUE - 19))).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testOr['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Assert.assertFalse(\"Should skip: or(false, false)\",shouldRead)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertFalse(\"Should skip: and(false, false)\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,or(lessThan(\"id\",5),greaterThanOrEqual(\"id\",80))).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,or(lessThan(\"id\",INT_MIN_VALUE - 25),greaterThanOrEqual(\"id\",INT_MAX_VALUE + 1))).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertTrue(\"Should read: and(true, true)\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testOr['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(\"Should read: or(false, true)\",shouldRead)@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,and(lessThan(\"id\",5),greaterThanOrEqual(\"id\",0))).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,and(greaterThan(\"id\",5),lessThanOrEqual(\"id\",30))).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,or(lessThan(\"id\",5),greaterThanOrEqual(\"id\",60))).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11->12 [style = solid, label="shouldRead"];
6->2 [style = solid, label="shouldRead"];
1->4 [style = bold, label=""];
9->11 [style = bold, label=""];
12->8 [style = solid, label="shouldRead"];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
7->4 [style = solid, label="shouldRead"];
0->6 [style = dashed, label="0"];
0->11 [style = dashed, label="0"];
7->4 [style = bold, label=""];
3->0 [style = bold, label=""];
2->10 [style = dashed, label="0"];
6->2 [style = bold, label=""];
1->12 [style = dashed, label="0"];
6->7 [style = solid, label="shouldRead"];
5->6 [style = bold, label=""];
11->10 [style = bold, label=""];
10->12 [style = bold, label=""];
12->8 [style = bold, label=""];
0->1 [style = solid, label="shouldRead"];
0->2 [style = solid, label="shouldRead"];
4->8 [style = dashed, label="0"];
11->10 [style = solid, label="shouldRead"];
2->7 [style = bold, label=""];
1->7 [style = dashed, label="0"];
1->4 [style = solid, label="shouldRead"];
}
