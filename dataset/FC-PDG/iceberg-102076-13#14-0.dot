digraph {
16 [style = filled, label = "testJsonConversionWithOperation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "writer.addAll(manifests)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(\"Parent ID should match\",expected.parentId(),snapshot.parentId())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Snapshot inMemory = new BaseSnapshot(ops.io(),id,parentId,expected.timestampMillis(),null,null,manifests)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(\"Files should match\",expected.manifests(),snapshot.manifests())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String json = SnapshotParser.toJson(expected)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Snapshot expected = new BaseSnapshot(ops.io(),id,34,parentId,System.currentTimeMillis(),null,null,localInput(manifestList))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(\"Snapshot ID should match\",expected.snapshotId(),snapshot.snapshotId())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "long id = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(\"Timestamp should match\",expected.timestampMillis(),snapshot.timestampMillis())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testJsonConversionWithManifestList['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(\"Sequence number should default to 0 for v1\",0,snapshot.sequenceNumber())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(\"Snapshot ID should match\",expected.snapshotId(),snapshot.snapshotId())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(\"Sequence number should default to 0\",expected.sequenceNumber(),snapshot.sequenceNumber())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Snapshot snapshot = SnapshotParser.fromJson(ops.io(),json)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(\"Timestamp should match\",expected.timestampMillis(),snapshot.timestampMillis())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(\"Parent ID should match\",expected.parentId(),snapshot.parentId())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(\"Manifest list should match\",expected.manifestListLocation(),snapshot.manifestListLocation())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String json = SnapshotParser.toJson(expected)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(\"Files should match in memory list\",inMemory.manifests(),expected.manifests())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testJsonConversionWithOperation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "long parentId = 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(\"Files should match\",expected.manifests(),snapshot.manifests())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "Assert.assertNull(\"Summary should be null\",snapshot.summary())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Snapshot expected = new BaseSnapshot(ops.io(),id,parentId,System.currentTimeMillis(),DataOperations.REPLACE,ImmutableMap.of(\"files-added\",\"4\",\"files-deleted\",\"100\"),manifests)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "manifestList.deleteOnExit()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(\"Manifest list should match\",expected.manifestListLocation(),snapshot.manifestListLocation())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Snapshot snapshot = SnapshotParser.fromJson(ops.io(),json)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<ManifestFile> manifests = ImmutableList.of(new GenericManifestFile(localInput(\"file:/tmp/manifest1.avro\"),0),new GenericManifestFile(localInput(\"file:/tmp/manifest2.avro\"),0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Files should match\",expected.allManifests(),snapshot.allManifests())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "File manifestList = temp.newFile(\"manifests\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertNull(\"Operation should be null\",snapshot.operation())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(manifestList.delete())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
18->31 [style = bold, label=""];
30->24 [style = bold, label=""];
4->23 [style = solid, label="manifests"];
16->0 [style = bold, label=""];
29->5 [style = bold, label=""];
31->25 [style = bold, label=""];
20->17 [style = bold, label=""];
10->15 [style = bold, label=""];
9->0 [style = bold, label=""];
0->23 [style = solid, label="parentId"];
3->1 [style = bold, label=""];
25->22 [style = bold, label=""];
0->30 [style = solid, label="parentId"];
11->20 [style = dashed, label="0"];
4->6 [style = bold, label=""];
5->12 [style = solid, label="json"];
27->28 [style = bold, label=""];
32->0 [style = bold, label=""];
0->2 [style = bold, label=""];
4->6 [style = solid, label="manifests"];
4->26 [style = bold, label=""];
8->14 [style = bold, label=""];
14->10 [style = bold, label=""];
12->20 [style = bold, label=""];
0->14 [style = solid, label="parentId"];
4->7 [style = solid, label="manifests"];
21->30 [style = bold, label=""];
2->23 [style = solid, label="id"];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
22->23 [style = bold, label=""];
15->5 [style = bold, label=""];
4->29 [style = solid, label="manifests"];
1->11 [style = bold, label=""];
2->6 [style = solid, label="id"];
23->29 [style = bold, label=""];
6->3 [style = solid, label="expected"];
7->5 [style = bold, label=""];
5->28 [style = dashed, label="0"];
12->19 [style = dashed, label="0"];
5->12 [style = bold, label=""];
22->5 [style = solid, label="expected"];
11->13 [style = bold, label=""];
4->25 [style = solid, label="manifests"];
28->19 [style = bold, label=""];
7->15 [style = dashed, label="0"];
0->6 [style = solid, label="parentId"];
2->22 [style = solid, label="id"];
13->8 [style = bold, label=""];
4->27 [style = solid, label="manifests"];
0->22 [style = solid, label="parentId"];
17->21 [style = bold, label=""];
24->27 [style = bold, label=""];
26->22 [style = solid, label="manifestList"];
26->18 [style = bold, label=""];
3->1 [style = solid, label="json"];
}
