digraph {
1 [style = filled, label = "env.execute()@@@29@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "env.setParallelism(parallelism)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "env.getConfig().disableSysoutLogging()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "env.setStateBackend(new FsStateBackend(checkpointPath))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final String host = args(1(@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final String outputPath = args(4(@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "env.enableCheckpointing(checkpointingInterval)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "env.setStateBackend(new FsStateBackend(checkpointPath))@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final String checkpointPath = args(4(@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "env.execute()@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "env.enableCheckpointing(100)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "env.execute()@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(1,1000))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final int port = Integer.parseInt(args(2()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final String checkpointPath = args(1(@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "env.getConfig().disableSysoutLogging()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final String checkpointPath = args(3(@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "env.setParallelism(parallelism)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "source.map(new MapFunction<Integer,Tuple2<Integer,Integer>>(){@Override public Tuple2<Integer,Integer> map(Integer value){return new Tuple2<>(ThreadLocalRandom.current().nextInt(parallelism),value)}}).keyBy(new KeySelector<Tuple2<Integer,Integer>,Integer>(){@Override public Integer getKey(Tuple2<Integer,Integer> value){return value.f0}}).flatMap(new ReducingStateFlatMap()).writeAsText(outputPath,FileSystem.WriteMode.OVERWRITE)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.createRemoteEnvironment(host,port,jarFile)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final String outputPath = args(6(@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "final String jarFile = args(0(@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "source.map(new MapFunction<Integer,Tuple2<Integer,Integer>>(){@Override public Tuple2<Integer,Integer> map(Integer value){return new Tuple2<>(ThreadLocalRandom.current().nextInt(parallelism),value)}}).keyBy(new KeySelector<Tuple2<Integer,Integer>,Integer>(){@Override public Integer getKey(Tuple2<Integer,Integer> value){return value.f0}}).flatMap(new ReducingStateFlatMap()).writeAsText(outputPath)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final String outputPath = args(3(@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "final int parallelism = Integer.parseInt(args(0()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "final int checkpointingInterval = Integer.parseInt(args(5()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "DataStream<Integer> source = env.addSource(new InfiniteIntegerSource())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final int parallelism = 1@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final int parallelism = Integer.parseInt(args(3()@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final int checkpointingInterval = Integer.parseInt(args(2()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33->31 [style = solid, label="checkpointPath"];
31->14 [style = bold, label=""];
22->26 [style = bold, label=""];
8->16 [style = solid, label="args"];
4->3 [style = bold, label=""];
8->13 [style = solid, label="args"];
0->9 [style = bold, label=""];
15->13 [style = bold, label=""];
8->26 [style = solid, label="args"];
20->17 [style = bold, label=""];
24->19 [style = bold, label=""];
28->8 [style = dotted, label="true"];
8->29 [style = solid, label="args"];
25->22 [style = bold, label=""];
7->10 [style = bold, label=""];
13->7 [style = solid, label="jarFile"];
2->1 [style = bold, label=""];
12->27 [style = solid, label="host"];
8->9 [style = solid, label="args"];
0->23 [style = dashed, label="0"];
3->14 [style = bold, label=""];
18->4 [style = solid, label="outputPath"];
0->27 [style = solid, label="port"];
2->34 [style = bold, label=""];
4->21 [style = bold, label=""];
19->10 [style = bold, label=""];
32->27 [style = bold, label=""];
28->13 [style = bold, label=""];
9->10 [style = solid, label="parallelism"];
26->10 [style = solid, label="checkpointPath"];
23->19 [style = solid, label="checkpointingInterval"];
4->6 [style = dashed, label="0"];
13->27 [style = solid, label="jarFile"];
12->0 [style = bold, label=""];
32->7 [style = solid, label="parallelism"];
8->23 [style = solid, label="args"];
9->16 [style = bold, label=""];
8->12 [style = solid, label="args"];
10->6 [style = bold, label=""];
8->18 [style = solid, label="args"];
11->2 [style = solid, label="outputPath"];
33->29 [style = bold, label=""];
12->26 [style = dashed, label="0"];
5->4 [style = solid, label="checkpointingInterval"];
8->11 [style = solid, label="args"];
8->33 [style = solid, label="args"];
6->4 [style = bold, label=""];
18->20 [style = bold, label=""];
17->24 [style = bold, label=""];
13->12 [style = bold, label=""];
15->8 [style = dotted, label="true"];
0->33 [style = bold, label=""];
8->22 [style = solid, label="args"];
30->31 [style = bold, label=""];
29->2 [style = solid, label="outputPath"];
29->32 [style = bold, label=""];
11->7 [style = bold, label=""];
26->23 [style = bold, label=""];
27->7 [style = bold, label=""];
16->5 [style = bold, label=""];
16->29 [style = dashed, label="0"];
5->11 [style = bold, label=""];
14->2 [style = bold, label=""];
6->30 [style = bold, label=""];
0->7 [style = solid, label="port"];
13->22 [style = dashed, label="0"];
23->18 [style = bold, label=""];
16->3 [style = solid, label="checkpointPath"];
25->8 [style = dotted, label="true"];
22->17 [style = solid, label="parallelism"];
8->5 [style = solid, label="args"];
8->0 [style = solid, label="args"];
12->7 [style = solid, label="host"];
}
