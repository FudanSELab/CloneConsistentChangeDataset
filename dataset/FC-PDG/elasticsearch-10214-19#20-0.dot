digraph {
14 [style = filled, label = "mappers.put(ObjectMapper.NESTED_CONTENT_TYPE,new ObjectMapper.TypeParser())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "mappers.put(TextFieldMapper.CONTENT_TYPE,new TextFieldMapper.TypeParser())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "getMappers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "mappers.put(TokenCountFieldMapper.CONTENT_TYPE,new TokenCountFieldMapper.TypeParser())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,Mapper.TypeParser> mappers = new LinkedHashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "mappers.put(ScaledFloatFieldMapper.CONTENT_TYPE,new ScaledFloatFieldMapper.TypeParser())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "getMappers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "mappers.put(milliseconds.type(),new DateFieldMapper.TypeParser(milliseconds))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "return Collections.unmodifiableMap(mappers)@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "throw new IllegalArgumentException(\"Mapper (\" + entry.getKey() + \"( is already registered\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "mappers.put(BooleanFieldMapper.CONTENT_TYPE,new BooleanFieldMapper.TypeParser())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "mappers.put(GeoPointFieldMapper.CONTENT_TYPE,new GeoPointFieldMapper.TypeParser())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "mappers.put(type.typeName(),new RangeFieldMapper.TypeParser(type))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "getMappers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "mappers.put(RankFeatureFieldMapper.CONTENT_TYPE,new RankFeatureFieldMapper.TypeParser())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "mappers.put(ObjectMapper.CONTENT_TYPE,new ObjectMapper.TypeParser())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "mappers.put(CompletionFieldMapper.CONTENT_TYPE,new CompletionFieldMapper.TypeParser())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return Collections.unmodifiableMap(mappers)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "DateFieldMapper.Resolution milliseconds = DateFieldMapper.Resolution.MILLISECONDS@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "mappers.put(FieldAliasMapper.CONTENT_TYPE,new FieldAliasMapper.TypeParser())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "mappers.put(RankFeaturesFieldMapper.CONTENT_TYPE,new RankFeaturesFieldMapper.TypeParser())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<MapperPlugin> mapperPlugins@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "mappers.put(type.typeName(),new NumberFieldMapper.TypeParser(type))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "mappers.put(DenseVectorFieldMapper.CONTENT_TYPE,new DenseVectorFieldMapper.TypeParser())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "mappers.put(KeywordFieldMapper.CONTENT_TYPE,new KeywordFieldMapper.TypeParser())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "mappers.put(IpFieldMapper.CONTENT_TYPE,new IpFieldMapper.TypeParser())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "mappers.put(SparseVectorFieldMapper.CONTENT_TYPE,new SparseVectorFieldMapper.TypeParser())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "mappers.put(entry.getKey(),entry.getValue()) != null@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "mappers.put(SearchAsYouTypeFieldMapper.CONTENT_TYPE,new SearchAsYouTypeFieldMapper.TypeParser())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "mappers.put(BaseGeoShapeFieldMapper.CONTENT_TYPE,new BaseGeoShapeFieldMapper.TypeParser())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "mappers.put(BinaryFieldMapper.CONTENT_TYPE,new BinaryFieldMapper.TypeParser())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "DateFieldMapper.Resolution nanoseconds = DateFieldMapper.Resolution.NANOSECONDS@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "mappers.put(nanoseconds.type(),new DateFieldMapper.TypeParser(nanoseconds))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22->11 [style = bold, label=""];
0->19 [style = dashed, label="0"];
4->6 [style = bold, label=""];
24->32 [style = bold, label=""];
17->26 [style = bold, label=""];
11->12 [style = bold, label=""];
8->5 [style = bold, label=""];
10->6 [style = bold, label=""];
5->1 [style = bold, label=""];
25->24 [style = bold, label=""];
20->22 [style = bold, label=""];
8->13 [style = dashed, label="0"];
18->25 [style = bold, label=""];
6->1 [style = solid, label="mappers"];
5->9 [style = bold, label=""];
6->19 [style = bold, label=""];
12->30 [style = bold, label=""];
19->13 [style = bold, label=""];
2->3 [style = bold, label=""];
15->27 [style = bold, label=""];
29->16 [style = bold, label=""];
32->28 [style = bold, label=""];
11->12 [style = solid, label="nanoseconds"];
7->0 [style = bold, label=""];
13->29 [style = bold, label=""];
3->8 [style = bold, label=""];
27->18 [style = bold, label=""];
23->14 [style = bold, label=""];
24->32 [style = dotted, label="true"];
16->20 [style = bold, label=""];
26->23 [style = bold, label=""];
0->2 [style = bold, label=""];
6->7 [style = bold, label=""];
24->28 [style = bold, label=""];
21->31 [style = dotted, label="true"];
30->17 [style = bold, label=""];
14->15 [style = bold, label=""];
9->1 [style = bold, label=""];
21->6 [style = bold, label=""];
6->28 [style = solid, label="mappers"];
20->22 [style = solid, label="milliseconds"];
32->24 [style = bold, label=""];
}
