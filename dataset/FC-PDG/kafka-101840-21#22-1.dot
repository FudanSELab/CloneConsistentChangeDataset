digraph {
1 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+e0 (ts: 1003)\",\"1:A1+e1 (ts: 1003)\",\"2:A2+e2 (ts: 1003)\",\"3:A3+e3 (ts: 1003)\")@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
71 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+d0 (ts: 1000)\",\"1:A1+d1 (ts: 1001)\",\"2:A2+d2 (ts: 1002)\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+d0\",1002),new KeyValueTimestamp<>(1,\"A1+d1\",1002),new KeyValueTimestamp<>(2,\"A2+d2\",1002))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "time += 1L@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(0)).after(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(0)).before(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "processor.checkAndClearProcessResult(\"2:A2+h2 (ts: 1002)\",\"3:A3+h3 (ts: 1003)\")@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"c\" + expectedKey,time))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "time += 1L@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "time += 1L@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "testAsymmetricWindowingAfter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "time = 1000L - 100L - 1L@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"f\" + expectedKey,time))@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "time = 1000 + 100L@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "time = 1000L@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "time += 1L@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b9df40@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"b\" + expectedKey,time))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b9dcf7@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "processor.checkAndClearProcessResult(\"1:A1+g1 (ts: 1101)\",\"2:A2+g2 (ts: 1101)\",\"3:A3+g3 (ts: 1101)\")@@@61@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@76@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"j\" + expectedKey,time))@@@74@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+d0 (ts: 1002)\",\"1:A1+d1 (ts: 1002)\",\"2:A2+d2 (ts: 1002)\")@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
59 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+b0\",1000))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"e\" + expectedKey,time))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+f0\",1100),new KeyValueTimestamp<>(1,\"A1+f1\",1100),new KeyValueTimestamp<>(2,\"A2+f2\",1100),new KeyValueTimestamp<>(3,\"A3+f3\",1100))@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "time = 1000L - 1L@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+c0\",1001),new KeyValueTimestamp<>(1,\"A1+c1\",1001))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "processor.checkAndClearProcessResult(\"1:A1+g1 (ts: 1001)\",\"2:A2+g2 (ts: 1002)\",\"3:A3+g3 (ts: 1003)\")@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"d\" + expectedKey,time))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+e0 (ts: 1000)\",\"1:A1+e1 (ts: 1001)\",\"2:A2+e2 (ts: 1002)\",\"3:A3+e3 (ts: 1003)\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "joined.process(supplier)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+e0\",1003),new KeyValueTimestamp<>(1,\"A1+e1\",1003),new KeyValueTimestamp<>(2,\"A2+e2\",1003),new KeyValueTimestamp<>(3,\"A3+e3\",1003))@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "processor.checkAndClearProcessResult(\"3:A3+i3 (ts: 1003)\")@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "long time = 1000L@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"a\" + expectedKey,time))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+c0 (ts: 1000)\",\"1:A1+c1 (ts: 1001)\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+c0 (ts: 1001)\",\"1:A1+c1 (ts: 1001)\")@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+b0 (ts: 1000)\")@@@36@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+f0 (ts: 1000)\",\"1:A1+f1 (ts: 1001)\",\"2:A2+f2 (ts: 1002)\",\"3:A3+f3 (ts: 1003)\")@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"g\" + expectedKey,time))@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "processor.checkAndClearProcessResult(\"2:A2+h2 (ts: 1102)\",\"3:A3+h3 (ts: 1102)\")@@@66@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "time += 1L@@@72@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testAsymmetricWindowingAfter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "i < expectedKeys.length@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"A\" + expectedKeys(i(,time + i))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(2,\"A2+h2\",1102),new KeyValueTimestamp<>(3,\"A3+h3\",1102))@@@66@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(3,\"A3+i3\",1103))@@@71@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "time += 1L@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"h\" + expectedKey,time))@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"i\" + expectedKey,time))@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "time += 1L@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "testAsymmetricWindowingBefore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "time += 1L@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+f0 (ts: 1100)\",\"1:A1+f1 (ts: 1100)\",\"2:A2+f2 (ts: 1100)\",\"3:A3+f3 (ts: 1100)\")@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "processor.checkAndClearProcessResult(\"3:A3+i3 (ts: 1103)\")@@@71@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(1,\"A1+g1\",1101),new KeyValueTimestamp<>(2,\"A2+g2\",1101),new KeyValueTimestamp<>(3,\"A3+g3\",1101))@@@61@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
31->37 [style = bold, label=""];
71->11 [style = bold, label=""];
8->4 [style = solid, label="expectedKeys"];
39->51 [style = dashed, label="0"];
35->41 [style = bold, label=""];
29->71 [style = dashed, label="0"];
24->57 [style = bold, label=""];
45->4 [style = dotted, label="true"];
69->15 [style = bold, label=""];
14->4 [style = solid, label="time"];
25->48 [style = bold, label=""];
51->10 [style = bold, label=""];
40->13 [style = bold, label=""];
24->67 [style = bold, label=""];
29->52 [style = dashed, label="0"];
41->28 [style = bold, label=""];
3->27 [style = bold, label=""];
67->69 [style = bold, label=""];
8->0 [style = bold, label=""];
9->26 [style = bold, label=""];
6->55 [style = dashed, label="0"];
20->60 [style = bold, label=""];
50->69 [style = dashed, label="0"];
38->7 [style = bold, label=""];
45->22 [style = bold, label=""];
32->25 [style = bold, label=""];
42->57 [style = dashed, label="0"];
27->51 [style = bold, label=""];
56->4 [style = solid, label="expectedKeys"];
62->23 [style = bold, label=""];
30->8 [style = bold, label=""];
28->40 [style = solid, label="time"];
22->64 [style = bold, label=""];
37->35 [style = solid, label="time"];
20->63 [style = bold, label=""];
64->17 [style = solid, label="time"];
38->66 [style = dashed, label="0"];
15->38 [style = bold, label=""];
19->34 [style = bold, label=""];
40->62 [style = bold, label=""];
66->7 [style = bold, label=""];
0->19 [style = bold, label=""];
26->47 [style = bold, label=""];
15->66 [style = bold, label=""];
53->30 [style = bold, label=""];
4->2 [style = bold, label=""];
3->27 [style = solid, label="time"];
13->62 [style = dashed, label="0"];
14->43 [style = bold, label=""];
43->45 [style = bold, label=""];
25->68 [style = solid, label="stream2"];
25->48 [style = solid, label="stream2"];
2->4 [style = solid, label="i"];
23->18 [style = solid, label="time"];
36->16 [style = bold, label=""];
59->28 [style = bold, label=""];
9->26 [style = solid, label="time"];
2->45 [style = solid, label="i"];
38->58 [style = dashed, label="0"];
27->70 [style = bold, label=""];
29->11 [style = bold, label=""];
55->9 [style = bold, label=""];
46->44 [style = bold, label=""];
50->15 [style = solid, label="time"];
43->4 [style = solid, label="i"];
65->30 [style = bold, label=""];
64->17 [style = bold, label=""];
45->2 [style = dotted, label="true"];
10->33 [style = solid, label="time"];
15->58 [style = bold, label=""];
6->61 [style = dashed, label="0"];
33->55 [style = bold, label=""];
12->17 [style = bold, label=""];
7->20 [style = bold, label=""];
11->24 [style = bold, label=""];
5->60 [style = dashed, label="0"];
35->59 [style = bold, label=""];
42->67 [style = dashed, label="0"];
48->46 [style = bold, label=""];
48->68 [style = dashed, label="0"];
12->64 [style = dashed, label="0"];
60->3 [style = bold, label=""];
43->45 [style = solid, label="i"];
27->39 [style = bold, label=""];
21->46 [style = solid, label="supplier"];
58->7 [style = bold, label=""];
16->1 [style = bold, label=""];
49->30 [style = bold, label=""];
25->68 [style = bold, label=""];
2->45 [style = bold, label=""];
10->33 [style = bold, label=""];
50->15 [style = bold, label=""];
37->35 [style = bold, label=""];
18->52 [style = bold, label=""];
63->3 [style = bold, label=""];
23->18 [style = bold, label=""];
13->54 [style = dashed, label="0"];
34->21 [style = bold, label=""];
54->23 [style = bold, label=""];
24->42 [style = bold, label=""];
52->11 [style = bold, label=""];
7->20 [style = solid, label="time"];
33->61 [style = bold, label=""];
40->54 [style = bold, label=""];
39->70 [style = dashed, label="0"];
42->50 [style = bold, label=""];
44->36 [style = bold, label=""];
28->40 [style = bold, label=""];
68->46 [style = bold, label=""];
57->50 [style = bold, label=""];
11->24 [style = solid, label="time"];
17->31 [style = bold, label=""];
33->6 [style = bold, label=""];
56->0 [style = bold, label=""];
61->9 [style = bold, label=""];
20->5 [style = bold, label=""];
45->4 [style = bold, label=""];
18->71 [style = bold, label=""];
43->2 [style = solid, label="i"];
5->63 [style = dashed, label="0"];
8->56 [style = dashed, label="0"];
18->29 [style = bold, label=""];
22->12 [style = bold, label=""];
21->32 [style = bold, label=""];
39->10 [style = bold, label=""];
13->23 [style = bold, label=""];
30->56 [style = bold, label=""];
1->14 [style = bold, label=""];
69->15 [style = solid, label="time"];
6->9 [style = bold, label=""];
41->59 [style = dashed, label="0"];
12->17 [style = solid, label="time"];
70->10 [style = bold, label=""];
}
