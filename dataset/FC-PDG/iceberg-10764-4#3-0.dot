digraph {
13 [style = filled, label = "sql(\"CREATE TABLE %s (id bigint NOT NULL, data string) USING iceberg\",tableName)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "waitUntilAfter(table.currentSnapshot().timestampMillis())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(\"Delete should not produce a new snapshot\",1,Iterables.size(table.snapshots()))@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Timestamp secondSnapshotTimestamp = Timestamp.from(Instant.ofEpochMilli(secondSnapshot.timestampMillis()))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "sql(\"INSERT INTO TABLE %s VALUES (1, 'a')\",tableName)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(\"Should have 1 snapshot\",1,Iterables.size(table.snapshots()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(\"Should have expected rows\",ImmutableList.of(row(1L,\"a\"),row(2L,\"b\"),row(3L,\"c\")),sql(\"SELECT * FROM %s ORDER BY id\",tableName))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "sql(\"INSERT OVERWRITE %s VALUES (3, 'c')\",tableName)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testExpireSnapshotsUsingPositionalArgs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "List<Object((> output = sql(\"CALL %s.system.expire_snapshots('%s', '%s', TIMESTAMP '%s', 2)\",catalogName,tableIdent.namespace(),tableIdent.name(),currentTimestamp)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "List<Object((> output1 = sql(\"CALL %s.system.expire_snapshots('%s', '%s', TIMESTAMP '%s')\",catalogName,tableIdent.namespace(),tableIdent.name(),secondSnapshotTimestamp)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "sql(\"INSERT INTO TABLE %s VALUES (1, 'a'), (2, 'b'), (3, 'c')\",tableName)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"Procedure output must match\",ImmutableList.of(row(0L,0L,1L)),output1)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(\"Procedure output must match\",ImmutableList.of(row(2L,2L,1L)),output)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(\"Should be 2 snapshots\",2,Iterables.size(table.snapshots()))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Should expire one snapshot\",1,Iterables.size(table.snapshots()))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "sql(\"INSERT INTO TABLE %s VALUES (2, 'b')\",tableName)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<Object((> output1 = sql(\"CALL %s.system.expire_snapshots('%s', TIMESTAMP '%s')\",catalogName,tableIdent,secondSnapshotTimestamp)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Table table = validationCatalog.loadTable(tableIdent)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Timestamp currentTimestamp = Timestamp.from(Instant.ofEpochMilli(System.currentTimeMillis()))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "table.refresh()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "List<Object((> output = sql(\"CALL %s.system.expire_snapshots('%s', TIMESTAMP '%s', 2)\",catalogName,tableIdent,currentTimestamp)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "table.refresh()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "sql(\"DELETE FROM %s WHERE false\",tableName)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testExpireSnapshotsUsingPositionalArgs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Table table = validationCatalog.loadTable(tableIdent)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "table.refresh()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "sql(\"INSERT INTO TABLE %s VALUES (4, 'd')\",tableName)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "waitUntilAfter(firstSnapshot.timestampMillis())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testDeleteFromWhereFalse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "table.refresh()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Should be 3 snapshots\",3,Iterables.size(table.snapshots()))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(\"Should have expected rows\",ImmutableList.of(row(3L,\"c\"),row(4L,\"d\")),sql(\"SELECT * FROM %s ORDER BY id\",tableName))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
28->30 [style = bold, label=""];
9->24 [style = dashed, label="0"];
6->22 [style = bold, label=""];
29->31 [style = bold, label=""];
23->15 [style = bold, label=""];
9->3 [style = solid, label="output1"];
14->19 [style = bold, label=""];
31->18 [style = bold, label=""];
25->21 [style = solid, label="output"];
1->25 [style = solid, label="currentTimestamp"];
10->21 [style = bold, label=""];
14->24 [style = solid, label="secondSnapshotTimestamp"];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
22->7 [style = bold, label=""];
26->13 [style = bold, label=""];
1->10 [style = solid, label="currentTimestamp"];
19->24 [style = bold, label=""];
11->28 [style = dashed, label="0"];
12->10 [style = bold, label=""];
5->6 [style = bold, label=""];
17->2 [style = bold, label=""];
20->23 [style = bold, label=""];
19->9 [style = bold, label=""];
30->5 [style = bold, label=""];
0->1 [style = bold, label=""];
12->25 [style = bold, label=""];
15->0 [style = bold, label=""];
10->21 [style = solid, label="output"];
24->3 [style = solid, label="output1"];
4->20 [style = bold, label=""];
1->12 [style = bold, label=""];
16->5 [style = bold, label=""];
7->18 [style = bold, label=""];
9->3 [style = bold, label=""];
3->17 [style = bold, label=""];
14->9 [style = solid, label="secondSnapshotTimestamp"];
5->27 [style = bold, label=""];
27->29 [style = bold, label=""];
32->13 [style = bold, label=""];
18->14 [style = bold, label=""];
24->3 [style = bold, label=""];
25->21 [style = bold, label=""];
10->25 [style = dashed, label="0"];
8->13 [style = bold, label=""];
13->28 [style = bold, label=""];
}
