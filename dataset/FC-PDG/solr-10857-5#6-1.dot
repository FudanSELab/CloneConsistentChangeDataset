digraph {
43 [style = filled, label = "testExceptionStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "indexr(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"13\",\"a_f\",\"9\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assert(t.getException().contains(\"undefined field:\"))@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assert(t.EXCEPTION)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assert(tuples.get(2).get(\"_COLLECTION_\").equals(\"collection1\"))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "indexr(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assert(t.EOF)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTION,paramsA)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "stream.setTrace(true)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "del(\"*:*\")@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "indexr(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "t = getTuple(estream)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "estream = new ExceptionStream(stream)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i, a_f\",\"sort\",\"a_s asc , a_f asc\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "commit()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assert(t.getException().contains(\"sort param field can't be found: blah\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "indexr(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"7\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "streamFactory.withCollectionZkHost(\"collection1\",zkHost)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "ExceptionStream estream = new ExceptionStream(stream)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "indexr(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"12\",\"a_f\",\"8\")@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assert(t.EOF)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assert(tuples.get(2).get(\"_COLLECTION_\").equals(COLLECTION))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "String zkHost = zkServer.getZkAddress()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"a_s,a_i,a_f,score\",\"sort\",\"a_s asc\",\"qt\",\"/export\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "indexr(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"14\",\"a_f\",\"10\")@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i, a_f\",\"sort\",\"a_s asc , a_f asc\")@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "indexr(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testTrace['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assert(tuples.get(1).get(\"_COLLECTION_\").equals(\"collection1\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assert(tuples.get(3).get(\"_COLLECTION_\").equals(COLLECTION))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "indexr(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Tuple t = getTuple(estream)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "indexr(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assert(tuples.get(1).get(\"_COLLECTION_\").equals(COLLECTION))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "stream = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<Tuple> tuples = getTuples(stream)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\").add(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\").add(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"10\",\"a_f\",\"6\").add(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"7\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"12\",\"a_f\",\"8\").add(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "List<Tuple> tuples = getTuples(stream)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assert(tuples.get(0).get(\"_COLLECTION_\").equals(COLLECTION))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"a_s,a_i,a_f,blah\",\"sort\",\"blah asc\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assert(tuples.get(3).get(\"_COLLECTION_\").equals(\"collection1\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assert(tuples.get(0).get(\"_COLLECTION_\").equals(\"collection1\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assert(t.EXCEPTION)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "indexr(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"10\",\"a_f\",\"6\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testTrace['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "stream.setTrace(true)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "commit()@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->5 [style = bold, label=""];
45->41 [style = bold, label=""];
30->24 [style = bold, label=""];
16->13 [style = bold, label=""];
30->24 [style = solid, label="paramsA"];
34->45 [style = bold, label=""];
25->32 [style = bold, label=""];
41->44 [style = solid, label="estream"];
14->10 [style = bold, label=""];
38->7 [style = solid, label="stream"];
28->26 [style = bold, label=""];
0->21 [style = bold, label=""];
19->17 [style = bold, label=""];
20->6 [style = bold, label=""];
42->36 [style = bold, label=""];
15->16 [style = bold, label=""];
9->8 [style = bold, label=""];
44->39 [style = bold, label=""];
8->41 [style = dashed, label="0"];
46->37 [style = bold, label=""];
24->25 [style = solid, label="stream"];
26->30 [style = bold, label=""];
33->29 [style = bold, label=""];
3->35 [style = bold, label=""];
40->46 [style = bold, label=""];
43->19 [style = bold, label=""];
3->45 [style = solid, label="zkHost"];
45->41 [style = solid, label="stream"];
13->32 [style = dashed, label="0"];
12->2 [style = bold, label=""];
3->20 [style = bold, label=""];
21->9 [style = bold, label=""];
7->16 [style = solid, label="stream"];
19->26 [style = dashed, label="0"];
5->12 [style = bold, label=""];
11->3 [style = bold, label=""];
7->24 [style = dashed, label="0"];
38->7 [style = bold, label=""];
6->7 [style = solid, label="paramsA"];
15->7 [style = dashed, label="0"];
31->33 [style = bold, label=""];
23->19 [style = bold, label=""];
3->7 [style = solid, label="zkHost"];
3->38 [style = solid, label="zkHost"];
7->40 [style = solid, label="estream"];
0->33 [style = dashed, label="0"];
7->15 [style = bold, label=""];
35->38 [style = solid, label="paramsA"];
3->20 [style = solid, label="zkHost"];
34->45 [style = solid, label="paramsA"];
35->38 [style = bold, label=""];
47->34 [style = bold, label=""];
22->14 [style = bold, label=""];
6->7 [style = bold, label=""];
10->1 [style = bold, label=""];
39->42 [style = bold, label=""];
21->29 [style = dashed, label="0"];
41->44 [style = bold, label=""];
18->31 [style = dashed, label="0"];
4->22 [style = bold, label=""];
2->11 [style = bold, label=""];
17->4 [style = bold, label=""];
18->0 [style = bold, label=""];
24->27 [style = bold, label=""];
13->18 [style = bold, label=""];
27->25 [style = bold, label=""];
32->31 [style = bold, label=""];
37->47 [style = bold, label=""];
16->40 [style = dashed, label="0"];
7->40 [style = bold, label=""];
}
