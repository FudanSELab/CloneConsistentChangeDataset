digraph {
4 [style = filled, label = "ConfigurableEnvironment environment = new StandardEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "getWhenAttachedShouldReturnAttached['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "sources.addLast(new MapPropertySource(\"config\",Collections.singletonMap(\"server.port\",\"4568\")))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sources.addLast(new SystemEnvironmentPropertySource(\"system\",Collections.singletonMap(\"SERVER_PORT\",\"1234\")))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int expectedSize = sources.size()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "attachShouldAddAdapterAtBeginning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "int size = sources.size()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(ConfigurationPropertySources.get(environment)).hasSize(expectedSize)@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "PropertyResolver resolver = new PropertySourcesPropertyResolver(sources)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "MutablePropertySources sources = environment.getPropertySources()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ConfigurationPropertySources.attach(environment)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "attachShouldAddAdapterAtBeginning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sources.addFirst(new MapPropertySource(\"test\",Collections.singletonMap(\"a\",\"b\")))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(sources.size()).isEqualTo(size + 1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(resolver.getProperty(\"server.port\")).isEqualTo(\"1234\")@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
9->0 [style = bold, label=""];
4->6 [style = solid, label="environment"];
11->6 [style = bold, label=""];
8->6 [style = bold, label=""];
8->2 [style = solid, label="size"];
2->9 [style = bold, label=""];
1->7 [style = bold, label=""];
3->4 [style = bold, label=""];
1->13 [style = bold, label=""];
1->9 [style = solid, label="sources"];
6->2 [style = bold, label=""];
7->5 [style = bold, label=""];
12->4 [style = bold, label=""];
7->13 [style = dashed, label="0"];
10->4 [style = bold, label=""];
2->6 [style = dashed, label="0"];
4->1 [style = bold, label=""];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
14->6 [style = solid, label="expectedSize"];
4->11 [style = solid, label="environment"];
}
