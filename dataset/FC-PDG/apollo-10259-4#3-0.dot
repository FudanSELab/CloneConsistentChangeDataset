digraph {
15 [style = filled, label = "defineComponent(,)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testGetIntPropertyMultipleTimesWithSmallCache['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(anotherValue,defaultConfig.getIntProperty(anotherKey,someDefaultValue))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String someKey = \"someKey\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Integer someDefaultValue = -1@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(someProperties,times(2)).getProperty(someKey)@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String anotherKey = \"anotherKey\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "someProperties = new Properties()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Integer anotherValue = 3@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testGetIntPropertyMultipleTimesWithPropertyChanges['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(anotherValue,defaultConfig.getIntProperty(anotherKey,someDefaultValue))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Properties anotherProperties = new Properties()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(someProperties.getProperty(someKey)).thenReturn(String.valueOf(someValue))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Integer someValue = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "MockInjector.setInstance(,new MockConfigUtilWithSmallCache())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "when(someProperties.getProperty(anotherKey)).thenReturn(String.valueOf(anotherValue))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "anotherProperties.setProperty(someKey,String.valueOf(anotherValue))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(anotherValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "defaultConfig.onRepositoryChange(someNamespace,anotherProperties)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "someProperties.setProperty(someKey,String.valueOf(someValue))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "verify(someProperties,times(1)).getProperty(anotherKey)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "someProperties = mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(someProperties,times(1)).getProperty(someKey)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testGetIntPropertyMultipleTimesWithSmallCache['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
14->16 [style = bold, label=""];
11->17 [style = solid, label="someKey"];
8->10 [style = bold, label=""];
0->7 [style = solid, label="someValue"];
25->28 [style = bold, label=""];
23->24 [style = solid, label="someProperties"];
3->6 [style = solid, label="someDefaultValue"];
12->6 [style = solid, label="anotherValue"];
12->28 [style = solid, label="anotherValue"];
17->1 [style = bold, label=""];
11->26 [style = solid, label="someKey"];
16->8 [style = bold, label=""];
3->10 [style = solid, label="someDefaultValue"];
0->17 [style = solid, label="someValue"];
3->17 [style = solid, label="someDefaultValue"];
5->26 [style = dashed, label="0"];
5->17 [style = solid, label="someProperties"];
10->19 [style = bold, label=""];
9->4 [style = bold, label=""];
0->12 [style = bold, label=""];
23->26 [style = bold, label=""];
18->12 [style = bold, label=""];
12->10 [style = solid, label="anotherValue"];
11->28 [style = solid, label="someKey"];
15->21 [style = dashed, label="0"];
10->28 [style = dashed, label="0"];
3->15 [style = bold, label=""];
26->24 [style = bold, label=""];
12->13 [style = solid, label="anotherValue"];
1->25 [style = solid, label="anotherProperties"];
18->19 [style = solid, label="anotherKey"];
15->5 [style = bold, label=""];
6->14 [style = bold, label=""];
0->6 [style = solid, label="someValue"];
21->5 [style = bold, label=""];
13->17 [style = bold, label=""];
3->23 [style = bold, label=""];
11->0 [style = bold, label=""];
1->6 [style = bold, label=""];
11->14 [style = solid, label="someKey"];
0->14 [style = solid, label="someValue"];
12->8 [style = solid, label="anotherValue"];
19->9 [style = bold, label=""];
11->16 [style = solid, label="someKey"];
11->4 [style = solid, label="someKey"];
0->26 [style = solid, label="someValue"];
3->9 [style = solid, label="someDefaultValue"];
0->9 [style = solid, label="someValue"];
11->6 [style = solid, label="someKey"];
18->8 [style = solid, label="anotherKey"];
27->17 [style = bold, label=""];
3->28 [style = solid, label="someDefaultValue"];
11->9 [style = solid, label="someKey"];
5->7 [style = bold, label=""];
0->18 [style = bold, label=""];
3->21 [style = bold, label=""];
16->6 [style = dashed, label="0"];
12->3 [style = bold, label=""];
18->10 [style = solid, label="anotherKey"];
3->14 [style = solid, label="someDefaultValue"];
24->27 [style = bold, label=""];
2->11 [style = bold, label=""];
22->11 [style = bold, label=""];
6->25 [style = bold, label=""];
20->11 [style = bold, label=""];
3->8 [style = solid, label="someDefaultValue"];
}
