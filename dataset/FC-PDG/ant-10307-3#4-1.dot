digraph {
15 [style = filled, label = "String contents = getFileString(\"filtercontainsregex\",getProject().getProperty(\"output\") + \"/filtercontainsregex\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertContains(\"hello world\",contents)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertNotContains(\"this is the moon\",contents)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertStringNotContains(contents,\"this is the moon\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "buildRule.executeTarget(\"hasregex\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Assume.assumeTrue(\"Regex not present\",getFileString(buildRule.getProject().getProperty(\"output\") + \"/replaceregexp\").contains(\"bye world\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "buildRule.executeTarget(\"containsregex\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "!hasRegex(\"testContainsRegex\")@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertStringContains(contents,\"World here\")@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertStringContains(contents,\"hello world\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "!hasRegex(\"testFilterContainsRegex\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertContains(\"World here\",contents)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "String contents = getFileString(\"containsregex\",getProject().getProperty(\"output\") + \"/containsregex\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "return@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testContainsRegex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/containsregex\")@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testContainsRegex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "testFilterContainsRegex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
16->15 [style = bold, label=""];
8->10 [style = bold, label=""];
15->4 [style = solid, label="contents"];
16->18 [style = bold, label=""];
3->0 [style = solid, label="contents"];
18->15 [style = bold, label=""];
1->3 [style = bold, label=""];
15->2 [style = solid, label="contents"];
14->7 [style = solid, label="contents"];
4->2 [style = bold, label=""];
14->8 [style = solid, label="contents"];
5->18 [style = dashed, label="0"];
7->8 [style = bold, label=""];
11->9 [style = bold, label=""];
3->0 [style = bold, label=""];
14->7 [style = bold, label=""];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
3->2 [style = solid, label="contents"];
14->10 [style = solid, label="contents"];
3->12 [style = dashed, label="0"];
15->0 [style = solid, label="contents"];
0->4 [style = bold, label=""];
15->0 [style = bold, label=""];
3->15 [style = dashed, label="0"];
9->12 [style = bold, label=""];
3->4 [style = solid, label="contents"];
13->14 [style = bold, label=""];
1->5 [style = dotted, label="true"];
17->16 [style = bold, label=""];
16->18 [style = dotted, label="true"];
}
