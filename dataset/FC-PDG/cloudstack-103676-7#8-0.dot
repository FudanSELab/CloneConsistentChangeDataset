digraph {
8 [style = filled, label = "networkObject == null@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "s_logger.debug(\"Refusing to design this network\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "s_logger.error(\"No Controller on physical network \" + physnet.getName())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "offering.getGuestType().equals(GuestType.Shared)@@@21@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "!canHandle(offering,dc.getNetworkType(),physnet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "s_logger.debug(\"Physical isolation type is ODL, asking GuestNetworkGuru to design this network\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "s_logger.debug(\"Nicira Nvp \" + devices.get(0).getUuid() + \" found on physical network \" + physnet.getId())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "s_logger.debug(\"Physical isolation type is supported, asking GuestNetworkGuru to design this network\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return null@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final DeploymentPlan plan@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final NetworkVO networkObject = (NetworkVO)super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@70cbf3offeringplanuserSpecifiedowner@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final DataCenter dc = _dcDao.findById(plan.getDataCenterId())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final PhysicalNetworkVO physnet = physicalNetworkDao.findById(plan.getPhysicalNetworkId())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final DeploymentPlan plan@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "design['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "design['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final Network userSpecified@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final Network userSpecified@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "NetworkOffering offering@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Account owner@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "networkObject.setBroadcastDomainType(BroadcastDomainType.Lswitch)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final List<NiciraNvpDeviceVO> devices = niciraNvpDao.listByPhysicalNetwork(physnet.getId())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return null@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "networkObject.setState(State.Allocated)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final NetworkOffering offering@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "PhysicalNetworkVO physnet = physicalNetworkDao.findById(plan.getPhysicalNetworkId())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "design['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "devices.isEmpty()@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "DataCenter dc = _dcDao.findById(plan.getDataCenterId())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "s_logger.error(\"No NiciraNvp Controller on physical network \" + physnet.getName())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final Account owner@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "List<OpenDaylightControllerVO> devices = openDaylightControllerMappingDao.listByPhysicalNetwork(physnet.getId())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "DeploymentPlan plan@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return networkObject@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "networkObject.setBroadcastDomainType(BroadcastDomainType.OpenDaylight)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "return null@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final NetworkOffering offering@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "Network userSpecified@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "s_logger.debug(\"Controller \" + devices.get(0).getUuid() + \" found on physical network \" + physnet.getId())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "NetworkVO networkObject = (NetworkVO)super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@70cc88offeringplanuserSpecifiedowner@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->16 [style = bold, label=""];
19->0 [style = dotted, label="true"];
13->7 [style = bold, label=""];
30->28 [style = dotted, label="true"];
1->9 [style = bold, label=""];
21->25 [style = dotted, label="true"];
38->8 [style = bold, label=""];
1->9 [style = dotted, label="true"];
31->38 [style = solid, label="userSpecified"];
25->2 [style = bold, label=""];
9->37 [style = dashed, label="0"];
30->27 [style = dotted, label="true"];
8->32 [style = bold, label=""];
9->3 [style = bold, label=""];
30->39 [style = dotted, label="true"];
20->17 [style = dotted, label="true"];
23->24 [style = dotted, label="true"];
38->2 [style = solid, label="networkObject"];
13->36 [style = dashed, label="0"];
19->0 [style = bold, label=""];
27->38 [style = solid, label="plan"];
19->10 [style = dotted, label="true"];
11->6 [style = solid, label="offering"];
23->26 [style = dotted, label="true"];
7->35 [style = dashed, label="0"];
6->8 [style = bold, label=""];
26->6 [style = solid, label="offering"];
19->33 [style = bold, label=""];
4->1 [style = bold, label=""];
1->37 [style = bold, label=""];
21->2 [style = bold, label=""];
18->32 [style = bold, label=""];
16->2 [style = bold, label=""];
0->10 [style = bold, label=""];
8->18 [style = bold, label=""];
24->6 [style = solid, label="owner"];
21->25 [style = bold, label=""];
20->12 [style = dotted, label="true"];
23->13 [style = bold, label=""];
23->22 [style = dotted, label="true"];
20->13 [style = bold, label=""];
16->21 [style = bold, label=""];
1->3 [style = dotted, label="true"];
22->6 [style = solid, label="userSpecified"];
32->2 [style = bold, label=""];
16->32 [style = dashed, label="0"];
23->17 [style = dotted, label="true"];
10->4 [style = bold, label=""];
30->31 [style = dotted, label="true"];
28->38 [style = solid, label="owner"];
18->16 [style = bold, label=""];
15->5 [style = bold, label=""];
1->15 [style = bold, label=""];
19->4 [style = bold, label=""];
3->15 [style = bold, label=""];
6->2 [style = solid, label="networkObject"];
4->33 [style = dashed, label="0"];
17->6 [style = solid, label="owner"];
6->8 [style = solid, label="networkObject"];
17->6 [style = solid, label="plan"];
37->3 [style = bold, label=""];
29->38 [style = bold, label=""];
34->29 [style = bold, label=""];
7->19 [style = bold, label=""];
6->38 [style = dashed, label="0"];
1->37 [style = dotted, label="true"];
8->18 [style = dotted, label="true"];
35->19 [style = bold, label=""];
12->6 [style = solid, label="userSpecified"];
39->38 [style = solid, label="offering"];
10->33 [style = bold, label=""];
30->36 [style = bold, label=""];
15->34 [style = dashed, label="0"];
36->35 [style = bold, label=""];
1->34 [style = bold, label=""];
38->8 [style = solid, label="networkObject"];
3->34 [style = bold, label=""];
5->6 [style = bold, label=""];
20->14 [style = dotted, label="true"];
20->11 [style = dotted, label="true"];
5->29 [style = dashed, label="0"];
14->6 [style = solid, label="plan"];
33->1 [style = bold, label=""];
}
