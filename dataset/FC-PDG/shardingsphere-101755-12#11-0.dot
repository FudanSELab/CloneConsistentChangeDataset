digraph {
5 [style = filled, label = "OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem),true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "shorthandProjectionSegment.setOwner(owner)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "OrderByItem orderByItem = new OrderByItem(new ColumnOrderByItemSegment(new ColumnSegment(0,0,new IdentifierValue(\"name\")),OrderDirection.ASC))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "OwnerSegment owner = new OwnerSegment(0,10,new IdentifierValue(\"name\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNotNull(actual)@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "selectStatement.setProjections(projectionsSegment)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ProjectionsSegment projectionsSegment = new ProjectionsSegment(0,0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "OrderByItem orderByItem = new OrderByItem(new ExpressionOrderByItemSegment(0,1,\"\",OrderDirection.ASC))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ProjectionsContext actual = new ProjectionsContextEngine(schema).createProjectionsContext(tables,projectionsSegment,new GroupByContext(Collections.emptyList()),orderByContext)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertCreateProjectionsContextWhenColumnOrderByItemSegmentOwnerAbsent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0,10)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertCreateProjectionsContextWithoutIndexOrderByItemSegment['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"name\"))))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "selectStatement.setFrom(new SimpleTableSegment(0,0,new IdentifierValue(\"name\")))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->9 [style = bold, label=""];
17->5 [style = bold, label=""];
0->13 [style = bold, label=""];
3->6 [style = solid, label="owner"];
11->13 [style = solid, label="projectionsSegment"];
12->16 [style = dashed, label="0"];
11->4 [style = bold, label=""];
2->5 [style = solid, label="orderByItem"];
19->18 [style = dotted, label="true"];
5->13 [style = solid, label="orderByContext"];
3->6 [style = bold, label=""];
19->11 [style = bold, label=""];
7->0 [style = bold, label=""];
1->18 [style = dashed, label="0"];
12->9 [style = bold, label=""];
2->17 [style = dashed, label="0"];
13->14 [style = solid, label="actual"];
0->13 [style = solid, label="tables"];
8->17 [style = bold, label=""];
15->11 [style = bold, label=""];
8->2 [style = bold, label=""];
15->1 [style = dotted, label="true"];
6->8 [style = bold, label=""];
9->8 [style = solid, label="shorthandProjectionSegment"];
17->5 [style = solid, label="orderByItem"];
4->12 [style = bold, label=""];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
10->1 [style = dotted, label="true"];
18->7 [style = solid, label="selectStatement"];
1->7 [style = solid, label="selectStatement"];
13->14 [style = bold, label=""];
16->9 [style = bold, label=""];
4->16 [style = bold, label=""];
11->4 [style = solid, label="projectionsSegment"];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
