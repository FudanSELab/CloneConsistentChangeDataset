digraph {
62 [style = filled, label = "extViews.keySet().retainAll(resources)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "partErrStates.keySet()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "iter.remove()@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "cache.refresh(accessor)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "String state = insEntry.getValue()@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "extViews = Collections.emptyMap()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "_perTypeJobMonitorMap@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "return false@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Iterator<Map.Entry<Partition,Map<String,String>>> iter = bpStateMap.entrySet().iterator()@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "boolean result = compareMap(evInstanceStateMap,bpInstanceStateMap)@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "it.hasNext()@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "bestPossStateMap.put(resourceName,new HashMap<Partition,Map<String,String>>())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "!bestPossStateMap.containsKey(resourceName)@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "bestPossStateMap.get(resourceName).put(partition,new HashMap<String,String>())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "Map<String,String> bpInstanceStateMap = bestPossOutput.getInstanceStateMap(resourceName,new Partition(partition))@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "result == false@@@87@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "extViews == null@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "resources != null && !resources.isEmpty()@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "unregisterAllJobs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "extViewSize != bestPossStateSize@@@79@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Iterator<Map.Entry<String,JobMonitor>> jobIter = _perTypeJobMonitorMap.entrySet().iterator()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "BestPossibleStateOutput bestPossOutput = calcBestPossState(cache,resources)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "String instanceName = partErrStates.get(partitionName)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "LOG.info(\"externalView is different from bestPossibleState for partition:\" + partition)@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Map.Entry<String,IdealState> pair = it.next()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "String partitionName@@@33@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "!bestPossStateMap.get(resourceName).containsKey(partition)@@@39@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "pair.getValue().getStateModelDefRef().equals(TaskConstants.STATE_MODEL_NAME)@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Map<String,Map<String,String>> errStates@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "Map.Entry<Partition,Map<String,String>> entry = iter.next()@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "Partition partition = new Partition(partitionName)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "!idealStates.containsKey(resource)@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Map<String,String> instanceStateMap = entry.getValue()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "extView == null@@@48@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "Map<String,Map<Partition,Map<String,String>>> bestPossStateMap = bestPossOutput.getStateMap()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "verifyBestPossAndExtView['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Iterator<Map.Entry<String,IdealState>> it = idealStates.entrySet().iterator()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Map.Entry<String,String> insEntry = insIter.next()@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "insIter.remove()@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "return true@@@93@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "IdealState is = idealStates.get(resourceName)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Map<String,String> evInstanceStateMap = extView.getRecord().getMapField(partition)@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "it.remove()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "errStates.keySet()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "jobEntry.getValue().unregister()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "LOG.info(\"externalView for \" + resourceName + \" is not available\")@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "return false@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "is.isExternalViewDisabled()@@@50@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "LOG.info(\"exterView size (\" + extViewSize + \") is different from bestPossState size (\" + bestPossStateSize + \") for resource: \" + resourceName)@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "int bestPossStateSize = bestPossOutput.getResourceMap(resourceName).size()@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Set<String> resources@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "bestPossStateMap.get(resourceName).get(partition).put(instanceName,HelixDefinedState.ERROR.toString())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "jobIter.hasNext()@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "ExternalView extView = extViews.get(resourceName)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Map<String,String> partErrStates = errStates.get(resourceName)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "idealStates.put(resource,new IdealState(resource))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "insIter.hasNext()@@@68@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "String resourceName@@@31@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "return false@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "int extViewSize = extView.getRecord().getMapFields().size()@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "Iterator<Map.Entry<String,String>> insIter = instanceStateMap.entrySet().iterator()@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Map<Partition,Map<String,String>> bpStateMap = bestPossOutput.getResourceMap(resourceName)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "PropertyKey.Builder keyBuilder = accessor.keyBuilder()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Map.Entry<String,JobMonitor> jobEntry = jobIter.next()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Map<String,ExternalView> extViews = accessor.getChildValuesMap(keyBuilder.externalViews())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "instanceStateMap.isEmpty()@@@63@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "idealStates.keySet().retainAll(resources)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "errStates != null@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "iter.hasNext()@@@60@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Map<String,IdealState> idealStates = new HashMap<>(cache.getIdealStates())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "unregister(getObjectName(getJobBeanName(jobEntry.getKey())))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "HelixDataAccessor accessor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "String clusterName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "unregisterAllJobs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
74 [style = filled, label = "ResourceControllerDataProvider cache = new ResourceControllerDataProvider(clusterName)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "state.equalsIgnoreCase(HelixDefinedState.DROPPED.toString())@@@71@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "jobIter.remove()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30->51 [style = bold, label=""];
20->32 [style = dotted, label="true"];
74->10 [style = bold, label=""];
55->14 [style = bold, label=""];
45->15 [style = solid, label="errStates"];
28->72 [style = bold, label=""];
23->72 [style = bold, label=""];
15->60 [style = dotted, label="true"];
51->68 [style = bold, label=""];
44->12 [style = dotted, label="true"];
53->25 [style = bold, label=""];
41->68 [style = bold, label=""];
15->37 [style = dotted, label="true"];
4->2 [style = bold, label=""];
41->54 [style = bold, label=""];
20->76 [style = bold, label=""];
36->18 [style = bold, label=""];
72->18 [style = bold, label=""];
15->48 [style = dotted, label="true"];
47->62 [style = solid, label="resources"];
31->75 [style = bold, label=""];
16->28 [style = bold, label=""];
42->31 [style = solid, label="bestPossStateSize"];
55->39 [style = bold, label=""];
70->11 [style = dotted, label="true"];
15->69 [style = dotted, label="true"];
17->16 [style = bold, label=""];
20->45 [style = dotted, label="true"];
65->42 [style = bold, label=""];
13->66 [style = bold, label=""];
15->40 [style = dotted, label="true"];
72->28 [style = dotted, label="true"];
54->52 [style = solid, label="evInstanceStateMap"];
76->74 [style = bold, label=""];
26->9 [style = dotted, label="true"];
61->52 [style = bold, label=""];
60->11 [style = solid, label="partition"];
12->22 [style = dotted, label="false"];
48->60 [style = bold, label=""];
0->7 [style = bold, label=""];
14->39 [style = bold, label=""];
51->37 [style = bold, label=""];
67->62 [style = dotted, label="true"];
18->29 [style = dotted, label="true"];
70->63 [style = bold, label=""];
59->74 [style = solid, label="clusterName"];
20->47 [style = dotted, label="true"];
26->9 [style = bold, label=""];
64->15 [style = bold, label=""];
8->3 [style = bold, label=""];
52->70 [style = solid, label="result"];
66->27 [style = bold, label=""];
2->1 [style = dotted, label="true"];
27->56 [style = dotted, label="true"];
46->71 [style = dotted, label="false"];
12->38 [style = dotted, label="false"];
37->40 [style = bold, label=""];
13->27 [style = bold, label=""];
62->14 [style = bold, label=""];
40->48 [style = bold, label=""];
72->17 [style = dotted, label="true"];
44->50 [style = bold, label=""];
71->72 [style = bold, label=""];
1->4 [style = bold, label=""];
68->44 [style = bold, label=""];
15->51 [style = dotted, label="true"];
38->33 [style = bold, label=""];
48->35 [style = bold, label=""];
25->27 [style = bold, label=""];
9->67 [style = bold, label=""];
26->67 [style = bold, label=""];
67->34 [style = bold, label=""];
15->21 [style = dotted, label="true"];
30->49 [style = dotted, label="true"];
30->49 [style = bold, label=""];
22->38 [style = bold, label=""];
60->30 [style = bold, label=""];
70->54 [style = bold, label=""];
68->44 [style = solid, label="extView"];
65->31 [style = solid, label="extViewSize"];
18->65 [style = bold, label=""];
46->72 [style = dotted, label="false"];
28->23 [style = bold, label=""];
41->63 [style = bold, label=""];
18->58 [style = dotted, label="true"];
60->61 [style = solid, label="partition"];
46->71 [style = bold, label=""];
12->68 [style = bold, label=""];
51->40 [style = bold, label=""];
72->17 [style = bold, label=""];
56->13 [style = bold, label=""];
4->25 [style = dashed, label="0"];
72->16 [style = dotted, label="true"];
44->50 [style = dotted, label="true"];
27->13 [style = dotted, label="true"];
11->41 [style = bold, label=""];
42->19 [style = bold, label=""];
6->3 [style = bold, label=""];
70->41 [style = dotted, label="true"];
32->10 [style = solid, label="accessor"];
58->29 [style = bold, label=""];
28->23 [style = dotted, label="true"];
2->0 [style = bold, label=""];
42->19 [style = solid, label="bestPossStateSize"];
19->54 [style = bold, label=""];
15->30 [style = dotted, label="true"];
52->70 [style = bold, label=""];
19->75 [style = dotted, label="true"];
70->11 [style = bold, label=""];
46->24 [style = dotted, label="true"];
67->34 [style = dotted, label="true"];
54->61 [style = bold, label=""];
5->2 [style = bold, label=""];
14->55 [style = dotted, label="true"];
15->57 [style = dotted, label="true"];
29->46 [style = bold, label=""];
40->51 [style = solid, label="instanceName"];
48->35 [style = dotted, label="true"];
14->55 [style = bold, label=""];
60->54 [style = solid, label="partition"];
2->4 [style = dotted, label="true"];
15->68 [style = bold, label=""];
18->46 [style = dotted, label="true"];
12->63 [style = bold, label=""];
24->18 [style = bold, label=""];
47->39 [style = solid, label="resources"];
15->37 [style = bold, label=""];
70->68 [style = bold, label=""];
49->51 [style = bold, label=""];
39->64 [style = bold, label=""];
75->54 [style = bold, label=""];
60->49 [style = solid, label="partition"];
34->62 [style = bold, label=""];
27->56 [style = bold, label=""];
20->59 [style = dotted, label="true"];
47->67 [style = solid, label="resources"];
65->19 [style = solid, label="extViewSize"];
61->52 [style = solid, label="bpInstanceStateMap"];
3->5 [style = bold, label=""];
0->1 [style = bold, label=""];
19->31 [style = dotted, label="true"];
12->22 [style = bold, label=""];
10->53 [style = bold, label=""];
67->14 [style = bold, label=""];
7->4 [style = bold, label=""];
15->73 [style = dotted, label="true"];
3->2 [style = dotted, label="true"];
74->39 [style = solid, label="cache"];
27->43 [style = bold, label=""];
35->60 [style = bold, label=""];
43->26 [style = solid, label="extViews"];
43->26 [style = bold, label=""];
13->66 [style = dotted, label="true"];
2->0 [style = dotted, label="true"];
19->31 [style = bold, label=""];
44->33 [style = bold, label=""];
3->5 [style = dotted, label="true"];
33->36 [style = bold, label=""];
46->24 [style = bold, label=""];
47->34 [style = solid, label="resources"];
50->12 [style = bold, label=""];
18->58 [style = bold, label=""];
2->7 [style = dotted, label="true"];
}
