digraph {
9 [style = filled, label = "this.delayError = delayError@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "UnicastProcessor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "this.onTerminate = new AtomicReference<Runnable>(Objects.requireNonNull(onTerminate,\"onTerminate\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "this.wip = new UnicastQueueSubscription()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Runnable onTerminate@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "this.downstream = new AtomicReference<>()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "int capacityHint@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "this.wip = new UnicastQueueDisposable()@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "this.queue = new SpscLinkedArrayQueue<>(ObjectHelper.verifyPositive(capacityHint,\"capacityHint\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "int capacityHint@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "this.downstream = new AtomicReference<Observer<? super T>>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "this.onTerminate = new AtomicReference<Runnable>(onTerminate)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "Runnable onTerminate@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Runnable onTerminate@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "boolean delayError@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "boolean delayError@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "this.onTerminate = new AtomicReference<>(Objects.requireNonNull(onTerminate,\"onTerminate\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "UnicastProcessor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "this.once = new AtomicBoolean()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "this.downstream = new AtomicReference<Subscriber<? super T>>()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "this.queue = new SpscLinkedArrayQueue<T>(ObjectHelper.verifyPositive(capacityHint,\"capacityHint\"))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "this.requested = new AtomicLong()@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "UnicastSubject['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int capacityHint@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22->21 [style = dotted, label="true"];
16->15 [style = bold, label=""];
0->9 [style = bold, label=""];
15->13 [style = bold, label=""];
16->12 [style = dotted, label="true"];
10->9 [style = solid, label="delayError"];
22->23 [style = dotted, label="true"];
1->14 [style = dashed, label="0"];
4->10 [style = dotted, label="true"];
1->19 [style = dashed, label="0"];
4->8 [style = dotted, label="true"];
7->20 [style = dashed, label="0"];
5->18 [style = bold, label=""];
19->6 [style = bold, label=""];
22->5 [style = bold, label=""];
16->10 [style = dotted, label="true"];
21->18 [style = solid, label="onTerminate"];
6->20 [style = bold, label=""];
11->13 [style = solid, label="onTerminate"];
1->6 [style = bold, label=""];
4->3 [style = dotted, label="true"];
5->0 [style = bold, label=""];
7->2 [style = bold, label=""];
0->13 [style = dashed, label="0"];
12->15 [style = solid, label="capacityHint"];
18->9 [style = bold, label=""];
9->14 [style = bold, label=""];
9->19 [style = bold, label=""];
0->18 [style = dashed, label="0"];
22->17 [style = dotted, label="true"];
17->5 [style = solid, label="capacityHint"];
13->9 [style = bold, label=""];
9->1 [style = bold, label=""];
6->7 [style = bold, label=""];
5->15 [style = dashed, label="0"];
16->11 [style = dotted, label="true"];
4->5 [style = bold, label=""];
14->6 [style = bold, label=""];
10->23 [style = dashed, label="0"];
23->9 [style = solid, label="delayError"];
3->0 [style = solid, label="onTerminate"];
8->5 [style = solid, label="capacityHint"];
}
