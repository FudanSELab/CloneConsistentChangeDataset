digraph {
18 [style = filled, label = "Node node = _nodeMap.get(nodeId)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "nodeStateMap.keySet().retainAll(_nodeMap.keySet())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "_preferredAssignment.containsKey(replica) && !existingPreferredAssignment.containsKey(replica) && _preferredAssignment.get(replica).id == node.id@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "replicaId < count@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "throw new IllegalArgumentException(\"partition: \" + replica + \" is in currentMapping but not in partitions\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final Map<String,Map<String,String>> currentMapping@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int count = countStateReplicas()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "skip@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int replicaId = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "_preferredAssignment.get(replica).id != node.id && !_existingPreferredAssignment.containsKey(replica) && !existingNonPreferredAssignment.containsKey(replica)@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "logger.info(\"currentMapping.keySet: \" + currentMapping.keySet())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "logger.warn(\"partitions: \" + _partitions)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "int replicaId = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "node.nonPreferred.add(replica)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "node.preferred.add(replica)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Replica replica = new Replica(partition,replicaId)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "existingNonPreferredAssignment.put(replica,node)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "skip = true@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "computeExistingNonPreferredPlacement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return existingPreferredAssignment@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return existingNonPreferredAssignment@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "replica.partition.equals(partition)@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "node.currentlyAssigned = node.currentlyAssigned + 1@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "existingPreferredAssignment.put(replica,node)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "logger.warn(\"currentMapping.keySet: \" + currentMapping.keySet())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Map<Replica,Node> existingNonPreferredAssignment = new TreeMap<Replica,Node>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "!_preferredAssignment.containsKey(replica)@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "boolean skip = false@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "replicaId < count@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Map<String,Map<String,String>> currentMapping@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "replicaId++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "computeExistingNonPreferredPlacement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "replicaId++@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Map<Replica,Node> existingPreferredAssignment = new TreeMap<Replica,Node>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "logger.info(\"partitions: \" + _partitions)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "computeExistingPreferredPlacement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Map<String,String> nodeStateMap = currentMapping.get(partition)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->24 [style = dashed, label="0"];
28->21 [style = solid, label="existingPreferredAssignment"];
31->9 [style = bold, label=""];
31->21 [style = bold, label=""];
32->27 [style = solid, label="replicaId"];
12->9 [style = bold, label=""];
22->14 [style = dotted, label="true"];
34->26 [style = dotted, label="true"];
1->3 [style = dotted, label="true"];
7->9 [style = bold, label=""];
19->5 [style = bold, label=""];
12->2 [style = bold, label=""];
33->35 [style = dotted, label="true"];
10->12 [style = bold, label=""];
15->0 [style = bold, label=""];
31->27 [style = dotted, label="true"];
16->5 [style = dotted, label="true"];
12->18 [style = bold, label=""];
7->16 [style = dotted, label="true"];
29->30 [style = solid, label="replica"];
8->2 [style = solid, label="existingNonPreferredAssignment"];
22->23 [style = dotted, label="true"];
21->16 [style = solid, label="replica"];
22->0 [style = dotted, label="true"];
13->31 [style = solid, label="count"];
27->31 [style = bold, label=""];
31->29 [style = bold, label=""];
9->17 [style = bold, label=""];
27->29 [style = solid, label="replicaId"];
22->24 [style = dotted, label="true"];
8->28 [style = dashed, label="0"];
16->19 [style = bold, label=""];
31->33 [style = dotted, label="true"];
33->27 [style = bold, label=""];
18->19 [style = solid, label="node"];
6->4 [style = bold, label=""];
2->21 [style = dashed, label="0"];
21->22 [style = bold, label=""];
7->2 [style = bold, label=""];
29->35 [style = solid, label="replica"];
20->11 [style = solid, label="replicaId"];
11->21 [style = solid, label="replicaId"];
14->15 [style = bold, label=""];
20->7 [style = bold, label=""];
22->14 [style = bold, label=""];
7->22 [style = dotted, label="true"];
7->21 [style = dotted, label="true"];
31->29 [style = dotted, label="true"];
32->31 [style = bold, label=""];
4->10 [style = bold, label=""];
21->5 [style = solid, label="replica"];
0->16 [style = bold, label=""];
1->8 [style = bold, label=""];
3->26 [style = dashed, label="0"];
22->16 [style = bold, label=""];
4->10 [style = dotted, label="true"];
22->33 [style = dashed, label="0"];
29->33 [style = solid, label="replica"];
12->20 [style = bold, label=""];
13->7 [style = solid, label="count"];
23->0 [style = bold, label=""];
34->28 [style = bold, label=""];
18->35 [style = solid, label="node"];
32->29 [style = solid, label="replicaId"];
30->21 [style = bold, label=""];
7->11 [style = dotted, label="true"];
18->6 [style = bold, label=""];
20->21 [style = solid, label="replicaId"];
7->18 [style = bold, label=""];
4->12 [style = bold, label=""];
21->0 [style = solid, label="replica"];
13->9 [style = bold, label=""];
35->30 [style = bold, label=""];
22->15 [style = dotted, label="true"];
21->19 [style = solid, label="replica"];
8->13 [style = bold, label=""];
24->23 [style = bold, label=""];
16->19 [style = dotted, label="true"];
33->35 [style = bold, label=""];
15->23 [style = dashed, label="0"];
16->11 [style = bold, label=""];
36->32 [style = bold, label=""];
28->13 [style = bold, label=""];
31->18 [style = bold, label=""];
18->36 [style = bold, label=""];
33->30 [style = dotted, label="true"];
11->7 [style = solid, label="replicaId"];
5->2 [style = bold, label=""];
29->33 [style = bold, label=""];
11->7 [style = bold, label=""];
27->31 [style = solid, label="replicaId"];
7->21 [style = bold, label=""];
25->3 [style = dotted, label="true"];
25->8 [style = bold, label=""];
22->24 [style = bold, label=""];
10->12 [style = solid, label="skip"];
6->12 [style = solid, label="skip"];
20->7 [style = solid, label="replicaId"];
17->18 [style = bold, label=""];
32->31 [style = solid, label="replicaId"];
}
