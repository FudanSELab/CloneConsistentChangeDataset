digraph {
2 [style = filled, label = "when_one['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertThat(x.get(0),is(\"/abc\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final List<String> x = isisInteractionFilter.lookupAndParsePassThru(mockFilterConfig)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "context.checking(new Expectations(){})@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<String> x = isisSessionFilter.lookupAndParsePassThru(mockFilterConfig)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when_several['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertThat(x.size(),is(1))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertThat(x.get(1),is(\"/def\"))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "when_one['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Assert.assertThat(x.size(),is(2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
5->3 [style = bold, label=""];
6->1 [style = bold, label=""];
8->1 [style = bold, label=""];
0->9 [style = bold, label=""];
1->0 [style = bold, label=""];
0->5 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
3->4 [style = bold, label=""];
2->1 [style = bold, label=""];
4->7 [style = bold, label=""];
9->4 [style = bold, label=""];
}
