digraph {
19 [style = filled, label = "AlgorithmProvidedShadowRuleConfiguration targetConfiguration = swapper.swapToObject(yamlShadowRuleConfiguration)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "actualConfiguration.getTables().entrySet().forEach(null)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "yamlShadowRuleConfiguration.getShadowTables().entrySet().forEach(null)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertSwapToYamlConfiguration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertBasicYamlShadowRule(actualConfiguration,expectedConfiguration)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertThat(targetConfiguration.getSourceDataSourceNames(),is(yamlShadowRuleConfiguration.getSourceDataSourceNames()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ShadowRuleAlgorithmProviderConfigurationYamlSwapper swapper = new ShadowRuleAlgorithmProviderConfigurationYamlSwapper()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(yamlShadowRuleConfiguration.getSourceDataSourceNames(),is(algorithmProvidedShadowRuleConfiguration.getSourceDataSourceNames()))@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "yamlShadowRuleConfiguration.getDataSources().entrySet().forEach(null)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "buildAlgorithmProvidedShadowRuleConfiguration()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertSwapToYamlConfiguration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "targetConfiguration.getShadowTables().entrySet().forEach(null)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "targetConfiguration.getShadowAlgorithms().entrySet().forEach(null)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(targetConfiguration.getShadowDataSourceNames(),is(yamlShadowRuleConfiguration.getShadowDataSourceNames()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "YamlShadowRuleConfiguration yamlShadowRuleConfiguration = swapper.swapToYamlConfiguration(algorithmProvidedShadowRuleConfiguration)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "actualConfiguration.getShadowAlgorithms().entrySet().forEach(null)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(actualConfiguration.isEnable(),is(expectedConfiguration.isEnable()))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "YamlShadowRuleConfiguration actualConfiguration = swapper.swapToYamlConfiguration(expectedConfiguration)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertSwapToObject['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "buildYamlShadowRuleConfiguration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(targetConfiguration.getColumn(),is(yamlShadowRuleConfiguration.getColumn()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "yamlShadowRuleConfiguration.getShadowAlgorithms().entrySet().forEach(null)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertThat(yamlShadowRuleConfiguration.getShadowDataSourceNames(),is(algorithmProvidedShadowRuleConfiguration.getShadowDataSourceNames()))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "actualConfiguration.getDataSources().entrySet().forEach(null)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "targetConfiguration.getDataSources().entrySet().forEach(null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "AlgorithmProvidedShadowRuleConfiguration expectedConfiguration = buildAlgorithmProvidedShadowRuleConfiguration()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(yamlShadowRuleConfiguration.getColumn(),is(algorithmProvidedShadowRuleConfiguration.getColumn()))@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->20 [style = dashed, label="0"];
4->9 [style = bold, label=""];
6->3 [style = bold, label=""];
19->18 [style = bold, label=""];
7->23 [style = dashed, label="0"];
12->16 [style = solid, label="actualConfiguration"];
1->26 [style = dashed, label="0"];
0->19 [style = dashed, label="0"];
0->2 [style = bold, label=""];
6->11 [style = dashed, label="0"];
3->22 [style = dashed, label="0"];
16->17 [style = bold, label=""];
8->21 [style = dashed, label="0"];
24->22 [style = bold, label=""];
1->7 [style = bold, label=""];
11->15 [style = bold, label=""];
20->5 [style = bold, label=""];
8->1 [style = bold, label=""];
5->19 [style = bold, label=""];
21->26 [style = bold, label=""];
25->20 [style = bold, label=""];
23->24 [style = bold, label=""];
12->10 [style = bold, label=""];
9->14 [style = dashed, label="0"];
10->16 [style = bold, label=""];
5->0 [style = bold, label=""];
14->16 [style = solid, label="expectedConfiguration"];
6->24 [style = dashed, label="0"];
14->12 [style = bold, label=""];
26->23 [style = bold, label=""];
7->6 [style = bold, label=""];
14->12 [style = solid, label="expectedConfiguration"];
2->18 [style = dashed, label="0"];
9->5 [style = bold, label=""];
3->15 [style = dashed, label="0"];
18->21 [style = bold, label=""];
13->14 [style = bold, label=""];
2->8 [style = bold, label=""];
17->11 [style = bold, label=""];
}
