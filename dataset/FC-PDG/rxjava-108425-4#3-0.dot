digraph {
9 [style = filled, label = "assertEquals(0,calls(0()@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "s.shutdown()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "s.scheduleDirect(r,1,TimeUnit.SECONDS)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "s.shutdown()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "w.dispose()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shutdownRejects['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "shutdownRejects['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "s.scheduleDirect(r)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shutdownRejects['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Disposables.disposed(),s.schedulePeriodicallyDirect(r,1,1,TimeUnit.SECONDS))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "s.schedulePeriodicallyDirect(r,1,1,TimeUnit.SECONDS)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final int(( calls = {0}@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Disposable.disposed(),w.schedule(r))@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(Disposable.disposed(),w.schedule(r,1,TimeUnit.SECONDS))@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertTrue(w.isDisposed())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(Disposables.disposed(),w.schedule(r,1,TimeUnit.SECONDS))@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Worker w = s.createWorker()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(Disposables.disposed(),s.scheduleDirect(r,1,TimeUnit.SECONDS))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "((ScheduledWorker)w).executor.shutdownNow()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Disposables.disposed(),w.schedulePeriodically(r,1,1,TimeUnit.SECONDS))@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Disposables.disposed(),s.scheduleDirect(r))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Runnable r = new Runnable(){@Override public void run(){calls(0(++}}@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "w.dispose()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Disposable.disposed(),w.schedulePeriodically(r,1,1,TimeUnit.SECONDS))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(Disposables.disposed(),w.schedule(r))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Scheduler s = new SingleScheduler()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "IoScheduler s = new IoScheduler()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->3 [style = bold, label=""];
3->10 [style = bold, label=""];
11->16 [style = solid, label="r"];
11->20 [style = bold, label=""];
8->4 [style = bold, label=""];
11->19 [style = solid, label="r"];
11->17 [style = solid, label="r"];
3->16 [style = dashed, label="0"];
14->21 [style = bold, label=""];
2->5 [style = bold, label=""];
10->9 [style = bold, label=""];
12->14 [style = solid, label="calls"];
11->7 [style = solid, label="r"];
6->0 [style = bold, label=""];
20->4 [style = bold, label=""];
25->24 [style = bold, label=""];
12->11 [style = solid, label="calls"];
7->6 [style = bold, label=""];
16->15 [style = bold, label=""];
9->17 [style = dashed, label="0"];
17->14 [style = bold, label=""];
11->5 [style = solid, label="r"];
1->0 [style = dashed, label="0"];
24->0 [style = bold, label=""];
7->25 [style = dashed, label="0"];
10->15 [style = dashed, label="0"];
0->1 [style = bold, label=""];
4->2 [style = bold, label=""];
8->20 [style = dashed, label="0"];
0->23 [style = bold, label=""];
11->6 [style = solid, label="r"];
11->10 [style = solid, label="r"];
11->9 [style = solid, label="r"];
26->25 [style = bold, label=""];
13->12 [style = bold, label=""];
2->19 [style = dashed, label="0"];
1->3 [style = bold, label=""];
11->23 [style = solid, label="r"];
4->19 [style = bold, label=""];
11->8 [style = bold, label=""];
19->26 [style = bold, label=""];
11->3 [style = solid, label="r"];
9->14 [style = bold, label=""];
11->25 [style = solid, label="r"];
12->11 [style = bold, label=""];
11->26 [style = solid, label="r"];
18->12 [style = bold, label=""];
22->12 [style = bold, label=""];
1->16 [style = bold, label=""];
11->15 [style = solid, label="r"];
5->7 [style = bold, label=""];
5->26 [style = dashed, label="0"];
12->9 [style = solid, label="calls"];
15->17 [style = bold, label=""];
}
