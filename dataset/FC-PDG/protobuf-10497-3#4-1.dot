digraph {
6 [style = filled, label = "ObjectOutputStream out = new ObjectOutputStream(baos)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(expected,actual)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testSerialize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "{out.close()}@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "TestAllTypes.Builder builder = TestAllTypes.newBuilder()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ObjectInputStream in = new ObjectInputStream(bais)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(expected,actual)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testSerializePartial['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "out.writeObject(expected)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "TestAllTypes expected = builder.buildPartial()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(actual).isEqualTo(expected)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "TestAllTypes actual = (TestAllTypes)in.readObject()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testSerialize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "out.writeObject(expected)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ObjectOutputStream out = new ObjectOutputStream(baos)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TestAllTypes expected = builder.build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestUtil.setAllFields(builder)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "{out.close()}@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
18->8 [style = solid, label="expected"];
9->2 [style = bold, label=""];
16->10 [style = bold, label=""];
7->8 [style = solid, label="actual"];
14->19 [style = bold, label=""];
5->18 [style = bold, label=""];
2->10 [style = bold, label=""];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
10->7 [style = bold, label=""];
10->7 [style = solid, label="bais"];
1->13 [style = solid, label="expected"];
3->5 [style = bold, label=""];
1->11 [style = solid, label="expected"];
1->6 [style = bold, label=""];
11->13 [style = dashed, label="0"];
5->0 [style = bold, label=""];
18->19 [style = solid, label="expected"];
0->1 [style = bold, label=""];
8->11 [style = solid, label="actual"];
17->3 [style = bold, label=""];
0->18 [style = dashed, label="0"];
12->3 [style = bold, label=""];
1->9 [style = solid, label="expected"];
3->6 [style = solid, label="baos"];
6->9 [style = bold, label=""];
19->15 [style = bold, label=""];
8->11 [style = bold, label=""];
3->14 [style = solid, label="baos"];
18->14 [style = bold, label=""];
16->10 [style = solid, label="bais"];
5->0 [style = solid, label="builder"];
8->13 [style = bold, label=""];
}
