digraph {
14 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "s1.update(0,0,1.1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "MatrixSeriesCollection c2 = (MatrixSeriesCollection)c1.clone()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "VectorSeriesCollection c1 = new VectorSeriesCollection()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "VectorSeriesCollection c2 = (VectorSeriesCollection)TestUtils.serialised(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "MatrixSeriesCollection c1 = new MatrixSeriesCollection()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "MatrixSeries s1 = new MatrixSeries(\"Series\",2,3)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "VectorSeries s1 = new VectorSeries(\"Series\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "VectorSeriesCollection c2 = (VectorSeriesCollection)TestUtilities.serialised(c1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17->10 [style = bold, label=""];
1->4 [style = bold, label=""];
1->15 [style = dashed, label="0"];
3->18 [style = dashed, label="0"];
2->3 [style = bold, label=""];
8->3 [style = bold, label=""];
15->13 [style = solid, label="c2"];
18->17 [style = bold, label=""];
3->6 [style = bold, label=""];
1->4 [style = solid, label="c2"];
6->17 [style = dashed, label="0"];
7->4 [style = bold, label=""];
11->9 [style = bold, label=""];
9->16 [style = bold, label=""];
0->15 [style = bold, label=""];
0->7 [style = bold, label=""];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
15->11 [style = solid, label="c2"];
15->11 [style = bold, label=""];
5->0 [style = bold, label=""];
5->10 [style = dashed, label="0"];
0->1 [style = bold, label=""];
10->0 [style = bold, label=""];
5->1 [style = solid, label="c1"];
7->4 [style = solid, label="c2"];
18->0 [style = solid, label="s1"];
3->0 [style = solid, label="s1"];
14->18 [style = bold, label=""];
10->11 [style = solid, label="c1"];
5->4 [style = solid, label="c1"];
15->16 [style = solid, label="c2"];
4->11 [style = dashed, label="0"];
1->7 [style = dashed, label="0"];
5->7 [style = solid, label="c1"];
16->12 [style = bold, label=""];
}
