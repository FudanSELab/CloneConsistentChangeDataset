digraph {
6 [style = filled, label = "subscriptions.put(\"consumer20\",new Subscription(topics,getInfo(uuid2,mkSet(task0_2),emptySet()).encode()))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final AssignmentInfo info20 = checkAssignment(allTopics,assignments.get(\"consumer20\"))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testAssignWithStandbyReplicasAndStatelessTasks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(info20.standbyTasks().isEmpty())@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testAssignWithStandbyReplicasAndStatelessTasks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertTrue(info10.standbyTasks().isEmpty())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "configurePartitionAssignorWith(Collections.singletonMap(StreamsConfig.NUM_STANDBY_REPLICAS_CONFIG,1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "subscriptions.put(\"consumer10\",new Subscription(topics,getInfo(UUID_1,mkSet(TASK_0_0),emptySet()).encode()))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "builder.addStateStore(new MockKeyValueStoreBuilder(\"store1\",false).withLoggingDisabled(),\"processor\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "subscriptions.put(\"consumer10\",new Subscription(topics,getInfo(uuid1,mkSet(task0_0),emptySet()).encode()))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Map<String,Assignment> assignments = partitionAssignor.assign(metadata,new GroupSubscription(subscriptions)).groupAssignment()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final List<String> topics = asList(\"topic1\",\"topic2\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "builder.addSource(null,\"source1\",null,null,null,\"topic1\",\"topic2\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "createMockTaskManager(mkSet(TASK_0_0),emptySet())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "builder.addProcessor(\"processor\",new MockProcessorSupplier(),\"source1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "createMockTaskManager(mkSet(task0_0),emptySet())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testAssignWithStandbyReplicasAndLoggingDisabled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final AssignmentInfo info10 = checkAssignment(allTopics,assignments.get(\"consumer10\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "subscriptions.put(\"consumer20\",new Subscription(topics,getInfo(UUID_2,mkSet(TASK_0_2),emptySet()).encode()))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7->13 [style = bold, label=""];
4->10 [style = bold, label=""];
11->16 [style = bold, label=""];
16->15 [style = bold, label=""];
8->16 [style = dashed, label="0"];
7->16 [style = solid, label="topics"];
7->8 [style = solid, label="topics"];
9->2 [style = bold, label=""];
17->9 [style = bold, label=""];
0->11 [style = bold, label=""];
10->3 [style = bold, label=""];
2->18 [style = bold, label=""];
7->0 [style = bold, label=""];
8->6 [style = bold, label=""];
7->6 [style = solid, label="topics"];
7->15 [style = solid, label="topics"];
13->11 [style = bold, label=""];
15->5 [style = bold, label=""];
1->9 [style = bold, label=""];
6->5 [style = bold, label=""];
12->4 [style = bold, label=""];
5->12 [style = bold, label=""];
6->15 [style = dashed, label="0"];
0->13 [style = dashed, label="0"];
11->8 [style = bold, label=""];
14->9 [style = bold, label=""];
2->7 [style = bold, label=""];
18->7 [style = bold, label=""];
}
