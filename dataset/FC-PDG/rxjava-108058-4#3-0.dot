digraph {
2 [style = filled, label = "as1.dispose()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Observer<String> o = serializedObserver(to)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Thread.sleep(100)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TestObserver<String> to = new TestObserver<String>(new DefaultObserver<String>(){@Override public void onComplete(){}@Override public void onError(Throwable e){}@Override public void onNext(String t){try {Thread.sleep(1)}catch (InterruptedException e) }})@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "threadStarvation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "o.onSubscribe(Disposables.empty())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "o.onSubscribe(Disposable.empty())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "ResourceSubscriber<String> as1 = new ResourceSubscriber<String>(){@Override public void onNext(String t){subscriber.onNext(t)}@Override public void onError(Throwable t){RxJavaPlugins.onError(t)}@Override public void onComplete(){}}@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "as2.dispose()@@@49@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "System.out.println(\"p1: \" + p1.get() + \" p2: \" + p2.get() + \" => should be close to each other unless we have thread starvation\")@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "infinite(p1).subscribe(as1)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "AtomicInteger p1 = new AtomicInteger()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "threadStarvation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DisposableObserver<String> as2 = new DisposableObserver<String>(){@Override public void onNext(String t){o.onNext(t)}@Override public void onError(Throwable t){RxJavaPlugins.onError(t)}@Override public void onComplete(){}}@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DisposableObserver<String> as1 = new DisposableObserver<String>(){@Override public void onNext(String t){o.onNext(t)}@Override public void onError(Throwable t){RxJavaPlugins.onError(t)}@Override public void onComplete(){}}@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Subscriber<String> subscriber = serializedSubscriber(ts)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "infinite(p2).subscribe(as2)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TestSubscriber<String> ts = new TestSubscriber<String>(new DefaultSubscriber<String>(){@Override public void onComplete(){}@Override public void onError(Throwable e){}@Override public void onNext(String t){try {Thread.sleep(1)}catch (InterruptedException e) }})@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(p1.get(),p2.get(),10000)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "subscriber.onSubscribe(new BooleanSubscription())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "AtomicInteger p2 = new AtomicInteger()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ResourceSubscriber<String> as2 = new ResourceSubscriber<String>(){@Override public void onNext(String t){subscriber.onNext(t)}@Override public void onError(Throwable t){RxJavaPlugins.onError(t)}@Override public void onComplete(){}}@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "threadStarvation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14->3 [style = bold, label=""];
1->4 [style = bold, label=""];
7->21 [style = dashed, label="0"];
15->7 [style = bold, label=""];
5->0 [style = solid, label="to"];
7->10 [style = bold, label=""];
4->6 [style = bold, label=""];
0->19 [style = dashed, label="0"];
12->15 [style = bold, label=""];
0->11 [style = bold, label=""];
20->19 [style = solid, label="ts"];
19->11 [style = bold, label=""];
11->12 [style = bold, label=""];
2->9 [style = bold, label=""];
10->22 [style = dashed, label="0"];
13->15 [style = dashed, label="0"];
10->4 [style = solid, label="as2"];
5->20 [style = dashed, label="0"];
6->14 [style = bold, label=""];
12->13 [style = bold, label=""];
21->1 [style = solid, label="as1"];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
8->5 [style = bold, label=""];
21->22 [style = bold, label=""];
13->7 [style = bold, label=""];
12->18 [style = bold, label=""];
16->5 [style = bold, label=""];
22->1 [style = bold, label=""];
18->21 [style = bold, label=""];
13->18 [style = dashed, label="0"];
20->19 [style = bold, label=""];
10->1 [style = bold, label=""];
7->1 [style = solid, label="as1"];
17->20 [style = bold, label=""];
22->4 [style = solid, label="as2"];
}
