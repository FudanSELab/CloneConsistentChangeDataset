digraph {
23 [style = filled, label = "testComputeTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "(record = extractor.readRecord(null)) != null@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final int NUM_WORK_UNITS = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "long timeSpentMicro = (endTimeNano - startTimeNano) / (1000)@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long endTimeNano = System.nanoTime()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "state.setProp(StressTestingSource.SLEEP_TIME_MICRO_KEY,SLEEP_TIME_MICRO)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "WorkUnitState wuState = new WorkUnitState(wu,state)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertTrue(Math.abs(timeSpentMicro - (COMPUTE_TIME_MICRO * NUM_RECORDS)) < (5000000),\"Time spent \" + timeSpentMicro)@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "state.setProp(StressTestingSource.NUM_RECORDS_KEY,NUM_RECORDS)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "state.setProp(StressTestingSource.MEM_ALLOC_BYTES_KEY,MEM_ALLOC_BYTES)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "state.setProp(StressTestingSource.RUN_DURATION_KEY,RUN_DURATION_SECS)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final int MEM_ALLOC_BYTES = 100@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SourceState state = new SourceState()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Extractor<String,byte((> extractor = source.getExtractor(wuState)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SourceState state = new SourceState()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final int NUM_RECORDS = 30@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final int RUN_DURATION_SECS = 5@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "WorkUnit wu = wus.get(0)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "state.setProp(StressTestingSource.NUM_RECORDS_KEY,NUM_RECORDS)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testRunDuration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertTrue(Math.abs(timeSpentMicro - (RUN_DURATION_SECS * 1000000)) < (1000000))@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final int COMPUTE_TIME_MICRO = 10000@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "StressTestingSource source = new StressTestingSource()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "byte(( record@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(wus.size(),NUM_WORK_UNITS)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<WorkUnit> wus = source.getWorkunits(state)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(record.length,100)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "long startTimeNano = System.nanoTime()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "state.setProp(StressTestingSource.NUM_WORK_UNITS_KEY,NUM_WORK_UNITS)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testComputeTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final int NUM_RECORDS = 500@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "long endTimeNano = System.nanoTime()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final int SLEEP_TIME_MICRO = 1000@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->9 [style = bold, label=""];
14->7 [style = bold, label=""];
21->6 [style = solid, label="COMPUTE_TIME_MICRO"];
18->20 [style = bold, label=""];
11->21 [style = bold, label=""];
9->11 [style = bold, label=""];
21->19 [style = solid, label="COMPUTE_TIME_MICRO"];
16->18 [style = solid, label="wu"];
13->19 [style = bold, label=""];
21->27 [style = dashed, label="0"];
19->28 [style = bold, label=""];
19->28 [style = dashed, label="0"];
19->28 [style = solid, label="timeSpentMicro"];
2->8 [style = dotted, label="true"];
10->24 [style = solid, label="NUM_RECORDS"];
21->24 [style = solid, label="COMPUTE_TIME_MICRO"];
16->18 [style = bold, label=""];
27->25 [style = solid, label="SLEEP_TIME_MICRO"];
2->19 [style = solid, label="startTimeNano"];
22->3 [style = bold, label=""];
25->7 [style = bold, label=""];
31->8 [style = bold, label=""];
30->9 [style = bold, label=""];
0->9 [style = bold, label=""];
11->5 [style = solid, label="NUM_WORK_UNITS"];
18->20 [style = solid, label="wuState"];
12->13 [style = solid, label="endTimeNano"];
8->31 [style = dotted, label="true"];
19->24 [style = dashed, label="0"];
29->5 [style = bold, label=""];
5->3 [style = solid, label="state"];
7->22 [style = bold, label=""];
13->24 [style = bold, label=""];
8->31 [style = bold, label=""];
11->3 [style = solid, label="NUM_WORK_UNITS"];
4->13 [style = solid, label="startTimeNano"];
20->1 [style = bold, label=""];
21->10 [style = bold, label=""];
13->24 [style = solid, label="timeSpentMicro"];
2->8 [style = bold, label=""];
12->13 [style = bold, label=""];
4->2 [style = bold, label=""];
26->7 [style = solid, label="NUM_RECORDS"];
5->17 [style = bold, label=""];
11->27 [style = bold, label=""];
29->32 [style = solid, label="RUN_DURATION_SECS"];
5->20 [style = solid, label="state"];
10->14 [style = solid, label="NUM_RECORDS"];
20->1 [style = solid, label="wuState"];
7->32 [style = bold, label=""];
8->2 [style = bold, label=""];
6->14 [style = bold, label=""];
15->22 [style = solid, label="state"];
9->6 [style = solid, label="MEM_ALLOC_BYTES"];
13->19 [style = solid, label="endTimeNano"];
17->6 [style = bold, label=""];
13->19 [style = solid, label="timeSpentMicro"];
9->17 [style = solid, label="MEM_ALLOC_BYTES"];
27->26 [style = bold, label=""];
15->5 [style = bold, label=""];
6->25 [style = bold, label=""];
8->13 [style = bold, label=""];
1->4 [style = bold, label=""];
10->19 [style = solid, label="NUM_RECORDS"];
32->22 [style = bold, label=""];
10->26 [style = dashed, label="0"];
10->15 [style = bold, label=""];
3->16 [style = bold, label=""];
11->17 [style = solid, label="NUM_WORK_UNITS"];
18->20 [style = solid, label="wu"];
11->16 [style = solid, label="NUM_WORK_UNITS"];
6->25 [style = dashed, label="0"];
26->29 [style = bold, label=""];
15->18 [style = solid, label="state"];
2->12 [style = bold, label=""];
29->28 [style = solid, label="RUN_DURATION_SECS"];
}
