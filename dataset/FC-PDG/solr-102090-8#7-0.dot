digraph {
52 [style = filled, label = "BooleanQuery bq = (BooleanQuery)q@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "BooleanQuery bq = (BooleanQuery)q@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "clauses.size() == 0@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return negClause@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "return false@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "absSubQ == subQ@@@7@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "return false@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "return q@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "q instanceof BoostQuery@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "return newBqB.build()@@@33@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "newQ.setWrappedQuery(absSubQ)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "!(q instanceof BooleanQuery)@@@16@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "return negClause@@@20@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Query q@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "getAbs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "return q@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "newBq.setBoost(bq.getBoost())@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "Query q@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Query subQ = bq.getQuery()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Query absSubQ = getAbs(subQ)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "BooleanClause clause@@@30@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "BoostQuery bq = (BoostQuery)q@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "return q@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return q@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "absSubQ == subQ@@@13@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "!(q instanceof BooleanQuery)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "!clause.isProhibited()@@@21@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "Collection<BooleanClause> clauses = bq.clauses()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "BooleanQuery.Builder newBqB = new BooleanQuery.Builder()@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "clauses@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "return q@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "return false@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "return true@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "isNegative['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "absSubQ == subQ@@@6@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "q instanceof WrappedQuery@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return q@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "return newBq@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "getAbs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "return new WrappedQuery(absSubQ)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "newBqB.add(clause.getQuery(),BooleanClause.Occur.SHOULD)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return q@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "WrappedQuery newQ = (WrappedQuery)q.clone()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "clauses.size() == 1@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "return new BoostQuery(absSubQ,bq.getBoost())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Collection<BooleanClause> clauses = bq.clauses()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Query subQ = ((WrappedQuery)q).getWrappedQuery()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Query newBq = newBqB.build()@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "!clause.isProhibited()@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return newQ@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "Query absSubQ = getAbs(subQ)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "newBqB.setDisableCoord(bq.isCoordDisabled())@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "clauses.size() == 0@@@14@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Collection<BooleanClause> clauses = bq.clauses()@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Query negClause = clauses.iterator().next().getQuery()@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "Query negClause = clauses.iterator().next().getQuery()@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "clauses.size() == 0@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "clauses@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "BooleanClause clause@@@25@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35->20 [style = dotted, label="true"];
54->55 [style = bold, label=""];
38->44 [style = bold, label=""];
13->6 [style = dotted, label="false"];
27->30 [style = solid, label="q"];
22->37 [style = bold, label=""];
10->24 [style = bold, label=""];
17->1 [style = dotted, label="true"];
16->31 [style = solid, label="subQ"];
21->8 [style = bold, label=""];
53->58 [style = bold, label=""];
51->48 [style = dotted, label="true"];
40->43 [style = dotted, label="true"];
29->45 [style = bold, label=""];
17->38 [style = bold, label=""];
48->52 [style = bold, label=""];
18->22 [style = bold, label=""];
51->48 [style = bold, label=""];
22->0 [style = bold, label=""];
16->5 [style = solid, label="subQ"];
7->27 [style = dotted, label="true"];
33->40 [style = solid, label="subQ"];
44->1 [style = bold, label=""];
17->34 [style = dotted, label="true"];
20->58 [style = dashed, label="0"];
30->33 [style = dotted, label="true"];
13->25 [style = bold, label=""];
30->41 [style = dotted, label="true"];
24->28 [style = bold, label=""];
19->18 [style = bold, label=""];
41->40 [style = solid, label="absSubQ"];
46->29 [style = dotted, label="true"];
13->3 [style = dotted, label="true"];
57->51 [style = bold, label=""];
13->25 [style = dotted, label="true"];
35->20 [style = bold, label=""];
33->41 [style = solid, label="subQ"];
27->29 [style = solid, label="q"];
14->22 [style = bold, label=""];
26->47 [style = bold, label=""];
17->6 [style = dotted, label="false"];
27->45 [style = solid, label="q"];
33->41 [style = bold, label=""];
19->21 [style = dotted, label="true"];
27->22 [style = solid, label="q"];
27->12 [style = solid, label="q"];
13->28 [style = dotted, label="false"];
58->54 [style = bold, label=""];
5->21 [style = bold, label=""];
3->10 [style = bold, label=""];
30->19 [style = bold, label=""];
17->34 [style = bold, label=""];
19->51 [style = dashed, label="0"];
23->47 [style = solid, label="absSubQ"];
19->9 [style = dotted, label="true"];
17->38 [style = dotted, label="false"];
30->32 [style = dotted, label="true"];
35->17 [style = bold, label=""];
5->26 [style = dotted, label="true"];
19->46 [style = bold, label=""];
31->47 [style = bold, label=""];
23->31 [style = solid, label="absSubQ"];
17->44 [style = dotted, label="false"];
49->54 [style = bold, label=""];
19->47 [style = dotted, label="true"];
23->31 [style = bold, label=""];
23->5 [style = bold, label=""];
4->17 [style = bold, label=""];
41->36 [style = solid, label="absSubQ"];
23->8 [style = solid, label="absSubQ"];
13->15 [style = dotted, label="false"];
10->3 [style = dashed, label="0"];
13->2 [style = dotted, label="false"];
12->17 [style = bold, label=""];
43->36 [style = bold, label=""];
27->37 [style = solid, label="q"];
1->3 [style = bold, label=""];
5->26 [style = bold, label=""];
22->37 [style = dotted, label="true"];
30->32 [style = bold, label=""];
27->56 [style = dashed, label="0"];
16->23 [style = bold, label=""];
56->52 [style = solid, label="q"];
17->39 [style = dotted, label="false"];
51->52 [style = bold, label=""];
58->49 [style = bold, label=""];
19->8 [style = dotted, label="true"];
32->33 [style = bold, label=""];
30->36 [style = dotted, label="true"];
46->29 [style = bold, label=""];
10->28 [style = solid, label="newBq"];
19->16 [style = bold, label=""];
26->21 [style = bold, label=""];
13->1 [style = dotted, label="false"];
12->13 [style = bold, label=""];
6->1 [style = bold, label=""];
31->26 [style = bold, label=""];
17->12 [style = bold, label=""];
17->3 [style = dotted, label="false"];
9->18 [style = bold, label=""];
21->47 [style = dashed, label="0"];
17->12 [style = dotted, label="true"];
58->49 [style = dotted, label="true"];
41->40 [style = bold, label=""];
40->36 [style = bold, label=""];
21->9 [style = solid, label="newQ"];
4->20 [style = bold, label=""];
19->5 [style = dotted, label="true"];
13->11 [style = dotted, label="true"];
13->10 [style = dotted, label="false"];
17->13 [style = bold, label=""];
55->50 [style = bold, label=""];
17->55 [style = dashed, label="0"];
40->43 [style = bold, label=""];
27->14 [style = solid, label="q"];
13->6 [style = bold, label=""];
37->35 [style = bold, label=""];
22->35 [style = bold, label=""];
7->19 [style = bold, label=""];
19->31 [style = dotted, label="true"];
27->19 [style = solid, label="q"];
36->19 [style = bold, label=""];
45->18 [style = bold, label=""];
25->11 [style = solid, label="negClause"];
20->17 [style = bold, label=""];
34->13 [style = solid, label="negClause"];
52->53 [style = bold, label=""];
13->24 [style = dotted, label="false"];
34->13 [style = bold, label=""];
4->20 [style = dotted, label="true"];
19->23 [style = dotted, label="true"];
47->46 [style = bold, label=""];
27->20 [style = solid, label="q"];
27->32 [style = solid, label="q"];
30->40 [style = dotted, label="true"];
18->14 [style = dotted, label="true"];
27->26 [style = solid, label="q"];
23->5 [style = solid, label="absSubQ"];
54->50 [style = bold, label=""];
42->27 [style = dotted, label="true"];
31->26 [style = dotted, label="true"];
0->4 [style = bold, label=""];
25->11 [style = bold, label=""];
42->30 [style = bold, label=""];
19->16 [style = dotted, label="true"];
8->9 [style = bold, label=""];
46->45 [style = bold, label=""];
16->23 [style = solid, label="subQ"];
54->55 [style = dotted, label="true"];
20->35 [style = bold, label=""];
55->54 [style = bold, label=""];
27->43 [style = solid, label="q"];
17->13 [style = dotted, label="true"];
18->14 [style = bold, label=""];
57->56 [style = dotted, label="true"];
}
