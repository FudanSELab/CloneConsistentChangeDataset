digraph {
35 [style = filled, label = "assertEquals(5,s3._getSheetRefId())@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "HSLFSlide s1 = ppt1.createSlide()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(1,ppt.getSlides().size())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(3,ppt.getSlides().size())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "HSLFSlideShow ppt = new HSLFSlideShow(new HSLFSlideShowImpl(.getResourceAsStream(\"/org/apache/poi/hslf/data/empty.ppt\")))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(2,s2.getSlideNumber())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "HSLFSlide s1 = ppt.createSlide()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(ppt1.getSlides().isEmpty())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "testAddSlides2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertEquals(2,ppt2.getSlides().size())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "out.close()@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(4,s2._getSheetRefId())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "HSLFSlide s3 = ppt.createSlide()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "s1 = ppt.getSlides().get(0)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(2,ppt1.getSlides().size())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "testAddSlides3['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ByteArrayOutputStream out = new ByteArrayOutputStream()@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(257,s2._getSheetNumber())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(3,s1._getSheetRefId())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "s2 = ppt.getSlides().get(1)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "HSLFSlide s2 = ppt1.createSlide()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(3,s3.getSlideNumber())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testAddSlides2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(256,s1._getSheetNumber())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ppt.write(out)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(256,s1._getSheetNumber())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(5,s3._getSheetRefId())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(3,s1._getSheetRefId())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(3,ppt.getSlides().size())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "HSLFSlide s2 = ppt.createSlide()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(2,ppt.getSlides().size())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(4,s2._getSheetRefId())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(258,s3._getSheetNumber())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "s3 = ppt.getSlides().get(2)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(3,ppt.getSlides().size())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(2,ppt.getSlides().size())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(258,s3._getSheetNumber())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ppt = new HSLFSlideShow(new HSLFSlideShowImpl(new ByteArrayInputStream(out.toByteArray())))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(1,s1.getSlideNumber())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(ppt.getSlides().isEmpty())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(1,ppt1.getSlides().size())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(257,s2._getSheetNumber())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->3 [style = bold, label=""];
6->26 [style = bold, label=""];
37->28 [style = bold, label=""];
10->15 [style = bold, label=""];
41->27 [style = bold, label=""];
0->13 [style = bold, label=""];
7->10 [style = solid, label="out"];
7->10 [style = bold, label=""];
29->39 [style = bold, label=""];
0->19 [style = dashed, label="0"];
26->34 [style = bold, label=""];
9->20 [style = bold, label=""];
15->6 [style = bold, label=""];
2->9 [style = bold, label=""];
40->38 [style = bold, label=""];
12->1 [style = bold, label=""];
12->21 [style = dashed, label="0"];
28->41 [style = bold, label=""];
1->17 [style = bold, label=""];
38->32 [style = bold, label=""];
1->22 [style = dashed, label="0"];
5->20 [style = dashed, label="0"];
32->29 [style = bold, label=""];
16->26 [style = dashed, label="0"];
36->30 [style = bold, label=""];
22->18 [style = bold, label=""];
19->13 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
24->21 [style = bold, label=""];
31->35 [style = bold, label=""];
21->22 [style = bold, label=""];
6->16 [style = bold, label=""];
39->31 [style = bold, label=""];
34->36 [style = bold, label=""];
27->7 [style = bold, label=""];
17->3 [style = bold, label=""];
9->5 [style = bold, label=""];
11->33 [style = bold, label=""];
4->8 [style = bold, label=""];
30->40 [style = bold, label=""];
25->8 [style = bold, label=""];
20->19 [style = bold, label=""];
33->37 [style = bold, label=""];
10->23 [style = dashed, label="0"];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
11->23 [style = bold, label=""];
17->18 [style = dashed, label="0"];
8->12 [style = bold, label=""];
11->7 [style = bold, label=""];
}
