digraph {
0 [style = filled, label = "TrafficType defaultTrafficType = TrafficType.Guest@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<NetworkVO> defaultNetworks = _networkDao.listByZoneAndTrafficType(dc.getId(),defaultTrafficType)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "throw new CloudRuntimeException(\"Zone \" + dc + \"is not basic.\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "getDefaultNetworkForBasicZone['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "throw new CloudRuntimeException(String.format(\"Found (%s( networks of type (%s( when expect to find 1.\",networksSize,defaultTrafficType))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "throw new CloudRuntimeException(\"Found \" + defaultNetworks.size() + \" networks of type \" + defaultTrafficType + \" when expect to find 1\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "networksSize != 1@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return defaultNetworks.get(0)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "getDefaultNetworkForBasicZone['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "throw new CloudRuntimeException(String.format(\"%s is not basic.\",dc.toString()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return defaultNetworks.get(0)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int networksSize = defaultNetworks.size()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "defaultNetworks.size() != 1@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DataCenter dc@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<NetworkVO> defaultNetworks = networkDao.listByZoneAndTrafficType(dc.getId(),defaultTrafficType)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "dc.getNetworkType() != NetworkType.Basic@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "getDefaultNetworkForBasicZone['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->8 [style = dotted, label="true"];
13->14 [style = solid, label="networksSize"];
4->6 [style = bold, label=""];
2->3 [style = dotted, label="true"];
5->11 [style = dotted, label="true"];
5->8 [style = bold, label=""];
0->4 [style = bold, label=""];
8->11 [style = dashed, label="0"];
0->1 [style = solid, label="defaultTrafficType"];
10->6 [style = bold, label=""];
14->16 [style = bold, label=""];
8->0 [style = bold, label=""];
2->5 [style = bold, label=""];
12->14 [style = bold, label=""];
11->0 [style = bold, label=""];
4->10 [style = dashed, label="0"];
6->1 [style = dotted, label="true"];
6->13 [style = dashed, label="0"];
13->12 [style = solid, label="networksSize"];
0->4 [style = solid, label="defaultTrafficType"];
0->14 [style = solid, label="defaultTrafficType"];
12->16 [style = bold, label=""];
0->10 [style = bold, label=""];
0->10 [style = solid, label="defaultTrafficType"];
5->0 [style = bold, label=""];
13->12 [style = bold, label=""];
5->11 [style = bold, label=""];
12->14 [style = dotted, label="true"];
3->8 [style = solid, label="dc"];
15->5 [style = bold, label=""];
4->13 [style = bold, label=""];
9->3 [style = dotted, label="true"];
1->7 [style = bold, label=""];
6->7 [style = bold, label=""];
9->5 [style = bold, label=""];
6->1 [style = bold, label=""];
15->3 [style = dotted, label="true"];
}
