digraph {
16 [style = filled, label = "Node node@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "prepareRebalance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "coordinator = new Node(Integer.MAX_VALUE - node.id(),node.host(),node.port())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Node node@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "prepareRebalance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "client.prepareResponseFrom(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){JoinGroupRequest joinGroupRequest = (JoinGroupRequest)bodyIterator<JoinGroupRequestData.JoinGroupRequestProtocol> protocolIterator = joinGroupRequest.data().protocols().iterator()assertTrue(protocolIterator.hasNext())ByteBuffer protocolMetadata = ByteBuffer.wrap(protocolIterator.next().metadata())ConsumerPartitionAssignor.Subscription subscription = ConsumerProtocol.deserializeSubscription(protocolMetadata)return subscribedTopics.equals(new HashSet<>(subscription.topics()))}},joinGroupFollowerResponse(assignor,1,memberId,leaderId,Errors.NONE),coordinator)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "client.prepareResponseFrom(joinGroupFollowerResponse(assignor,1,\"memberId\",\"leaderId\",Errors.NONE),coordinator)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ConsumerPartitionAssignor assignor@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "prepareRebalance['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "client.prepareResponseFrom(FindCoordinatorResponse.prepareResponse(Errors.NONE,node),node)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Set<String> subscribedTopics@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MockClient client@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ConsumerPartitionAssignor assignor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Node node@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "client.prepareResponseFrom(syncGroupResponse(partitions,Errors.NONE),coordinator)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Node coordinator@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return coordinator@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final Set<String> subscribedTopics@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<TopicPartition> partitions@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<TopicPartition> partitions@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Node coordinator@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "MockClient client@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return coordinator@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<TopicPartition> partitions@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "client.prepareResponseFrom(syncGroupResponse(partitions,Errors.NONE),coordinator)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Node coordinator@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "MockClient client@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "coordinator == null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23->7 [style = solid, label="node"];
8->3 [style = solid, label="partitions"];
12->27 [style = solid, label="coordinator"];
17->3 [style = solid, label="partitions"];
15->11 [style = solid, label="assignor"];
7->12 [style = bold, label=""];
24->20 [style = solid, label="partitions"];
6->7 [style = solid, label="node"];
9->4 [style = bold, label=""];
12->11 [style = bold, label=""];
4->7 [style = dotted, label="true"];
21->22 [style = dotted, label="true"];
19->4 [style = solid, label="coordinator"];
1->11 [style = solid, label="coordinator"];
19->27 [style = solid, label="coordinator"];
19->20 [style = solid, label="coordinator"];
9->6 [style = dotted, label="true"];
20->25 [style = bold, label=""];
1->0 [style = solid, label="coordinator"];
14->10 [style = dotted, label="true"];
14->13 [style = dotted, label="true"];
4->7 [style = bold, label=""];
10->11 [style = solid, label="assignor"];
3->0 [style = bold, label=""];
12->20 [style = solid, label="coordinator"];
9->8 [style = dotted, label="true"];
1->4 [style = solid, label="coordinator"];
14->16 [style = dotted, label="true"];
14->17 [style = dotted, label="true"];
14->15 [style = dotted, label="true"];
13->4 [style = solid, label="coordinator"];
13->3 [style = solid, label="coordinator"];
10->26 [style = dashed, label="0"];
21->26 [style = dotted, label="true"];
21->24 [style = dotted, label="true"];
13->11 [style = solid, label="coordinator"];
11->3 [style = bold, label=""];
12->11 [style = solid, label="coordinator"];
21->23 [style = dotted, label="true"];
12->3 [style = solid, label="coordinator"];
9->2 [style = dotted, label="true"];
22->27 [style = solid, label="assignor"];
21->19 [style = dotted, label="true"];
16->7 [style = solid, label="node"];
4->27 [style = bold, label=""];
12->0 [style = solid, label="coordinator"];
9->1 [style = dotted, label="true"];
13->0 [style = solid, label="coordinator"];
21->4 [style = bold, label=""];
11->27 [style = dashed, label="0"];
1->3 [style = solid, label="coordinator"];
19->25 [style = solid, label="coordinator"];
4->12 [style = dotted, label="true"];
4->11 [style = bold, label=""];
9->10 [style = dotted, label="true"];
12->25 [style = solid, label="coordinator"];
12->27 [style = bold, label=""];
14->18 [style = dotted, label="true"];
27->20 [style = bold, label=""];
14->4 [style = bold, label=""];
9->5 [style = dotted, label="true"];
}
