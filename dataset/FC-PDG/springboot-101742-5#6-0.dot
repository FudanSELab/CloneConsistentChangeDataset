digraph {
1 [style = filled, label = "loadImportsResolvesAndLoadsLocations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<String> locations = Arrays.asList(\"test1\",\"test2\")@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(loaded1and2).containsExactly(configData2,configData1)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "given(this.resolvers.resolveAll(this.locationResolverContext,locations2and3,this.profiles)).willReturn(resolvedLocations2and3)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "given(this.resolvers.resolveAll(this.locationResolverContext,locations1and2,this.profiles)).willReturn(resolvedLocations1and2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location1,this.profiles)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location1,resource1)))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "ConfigData configData2 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location2,this.profiles)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location2,resource2)))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(loaded).containsExactly(configData2,configData1)@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ConfigDataImporter importer = new ConfigDataImporter(this.logFactory,ConfigDataNotFoundAction.FAIL,this.resolvers,this.loaders)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "List<String> locations2and3 = Arrays.asList(\"test2\",\"test3\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Collection<ConfigData> loaded2and3 = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,this.loaderContext,locations2and3).values()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ConfigDataLocation location1 = ConfigDataLocation.of(\"test1\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "TestLocation resolvedLocation2 = new TestLocation()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestLocation resolvedLocation1 = new TestLocation()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<ConfigDataLocation> resolvedLocations2and3 = Arrays.asList(resolvedLocation2,resolvedLocation3)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "TestLocation resolvedLocation3 = new TestLocation()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "TestResource resource1 = new TestResource(\"r1\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "List<String> locations1and2 = Arrays.asList(\"test1\",\"test2\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "given(this.loaders.load(this.loaderContext,resource1)).willReturn(configData1)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "ConfigData configData3 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "given(this.loaders.load(this.loaderContext,resolvedLocation3)).willReturn(configData3)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "loadImportsResolvesAndLoadsLocations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "ConfigDataImporter importer = new ConfigDataImporter(this.resolvers,this.loaders)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Collection<ConfigData> loaded1and2 = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,this.loaderContext,locations1and2).values()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "given(this.loaders.load(this.loaderContext,resolvedLocation2)).willReturn(configData2)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(loaded).containsExactly(configData2,configData1)@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "given(this.loaders.load(this.loaderContext,resource2)).willReturn(configData2)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "ConfigData configData1 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ConfigData configData2 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Collection<ConfigData> loaded = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,this.loaderContext,Arrays.asList(location1,location2)).values()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "ConfigDataImporter importer = new ConfigDataImporter(this.resolvers,this.loaders)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TestResource resource2 = new TestResource(\"r2\")@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "TestLocation resolvedLocation1 = new TestLocation()@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ConfigDataLocation location2 = ConfigDataLocation.of(\"test2\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "given(this.loaders.load(this.loaderContext,resolvedLocation1)).willReturn(configData1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "loadImportsWhenAlreadyImportedLocationSkipsLoad['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "List<ConfigDataLocation> resolvedLocations1and2 = Arrays.asList(resolvedLocation1,resolvedLocation2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Collection<ConfigData> loaded = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,this.loaderContext,locations).values()@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "given(this.resolvers.resolveAll(this.locationResolverContext,locations,this.profiles)).willReturn(resolvedLocations)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "ConfigData configData1 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(loaded2and3).containsExactly(configData3)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26->29 [style = solid, label="resolvedLocations2and3"];
5->10 [style = bold, label=""];
15->23 [style = bold, label=""];
8->31 [style = solid, label="configData2"];
1->4 [style = bold, label=""];
16->13 [style = bold, label=""];
19->18 [style = bold, label=""];
41->32 [style = bold, label=""];
31->25 [style = bold, label=""];
8->16 [style = dashed, label="0"];
13->24 [style = bold, label=""];
35->29 [style = bold, label=""];
34->40 [style = bold, label=""];
32->37 [style = bold, label=""];
2->13 [style = solid, label="configData2"];
2->10 [style = solid, label="configData2"];
33->26 [style = solid, label="resolvedLocation3"];
9->2 [style = bold, label=""];
22->16 [style = bold, label=""];
9->16 [style = solid, label="configData1"];
8->34 [style = solid, label="configData2"];
33->28 [style = bold, label=""];
15->21 [style = solid, label="resource1"];
8->3 [style = bold, label=""];
11->7 [style = solid, label="resolvedLocation1"];
14->22 [style = solid, label="location2"];
9->6 [style = solid, label="configData1"];
38->40 [style = solid, label="configData3"];
0->15 [style = dashed, label="0"];
28->26 [style = bold, label=""];
0->28 [style = solid, label="resolvedLocation1"];
38->25 [style = solid, label="configData3"];
26->6 [style = bold, label=""];
12->6 [style = bold, label=""];
0->7 [style = solid, label="resolvedLocation2"];
8->38 [style = bold, label=""];
9->10 [style = solid, label="configData1"];
12->21 [style = dashed, label="0"];
2->12 [style = bold, label=""];
0->7 [style = bold, label=""];
7->28 [style = solid, label="resolvedLocation2"];
7->9 [style = bold, label=""];
5->32 [style = dashed, label="0"];
7->33 [style = bold, label=""];
29->27 [style = bold, label=""];
36->30 [style = bold, label=""];
3->5 [style = bold, label=""];
11->0 [style = bold, label=""];
27->34 [style = bold, label=""];
4->36 [style = dashed, label="0"];
37->31 [style = bold, label=""];
21->22 [style = bold, label=""];
2->21 [style = bold, label=""];
6->8 [style = bold, label=""];
24->17 [style = bold, label=""];
40->41 [style = bold, label=""];
7->12 [style = solid, label="resolvedLocations"];
23->22 [style = solid, label="resource2"];
14->15 [style = bold, label=""];
9->20 [style = solid, label="configData1"];
30->0 [style = bold, label=""];
4->11 [style = bold, label=""];
38->35 [style = bold, label=""];
2->20 [style = solid, label="configData2"];
23->9 [style = bold, label=""];
39->36 [style = bold, label=""];
18->21 [style = solid, label="location1"];
18->14 [style = bold, label=""];
7->26 [style = solid, label="resolvedLocation2"];
28->35 [style = solid, label="resolvedLocations1and2"];
6->27 [style = solid, label="configData1"];
6->31 [style = solid, label="configData1"];
2->8 [style = solid, label="configData2"];
17->20 [style = bold, label=""];
}
