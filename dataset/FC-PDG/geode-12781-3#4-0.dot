digraph {
11 [style = filled, label = "createCQ['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "createCQ['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "VM vm@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String cqName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "final String cqName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final String queryStr@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String queryStr@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "createCQ['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "VM vm@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final String queryStr@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final String cqName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "VM vm@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "vm.invoke(new CacheSerializableRunnable(\"Create CQ :\" + cqName){@Override public void run2(){LogWriterUtils.getLogWriter().info(\"### Create CQ. ###\" + cqName)QueryService qService = nulltry {qService = (PoolManager.find(poolName)).getQueryService()}catch (Exception cqe) CqAttributesFactory cqf = new CqAttributesFactory()CqListener(( cqListeners = {new CqQueryTestListener(LogWriterUtils.getLogWriter())}((CqQueryTestListener)cqListeners(0().cqName = cqNamecqf.initCqListeners(cqListeners)CqAttributes cqa = cqf.create()try {CqQuery cq1 = qService.newCq(cqName,queryStr,cqa)assertTrue(\"newCq() state mismatch\",cq1.getState().isStopped())}catch (Exception ex) }})@@@3@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String poolName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5->2 [style = bold, label=""];
5->0 [style = dotted, label="true"];
6->2 [style = solid, label="cqName"];
9->8 [style = dotted, label="true"];
11->10 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
0->2 [style = solid, label="cqName"];
5->3 [style = dotted, label="true"];
9->7 [style = dotted, label="true"];
7->2 [style = solid, label="queryStr"];
9->2 [style = bold, label=""];
5->4 [style = dotted, label="true"];
11->2 [style = bold, label=""];
9->6 [style = dotted, label="true"];
10->2 [style = solid, label="cqName"];
1->2 [style = solid, label="queryStr"];
9->4 [style = dotted, label="true"];
11->4 [style = dotted, label="true"];
5->1 [style = dotted, label="true"];
11->13 [style = dotted, label="true"];
4->2 [style = solid, label="queryStr"];
}
