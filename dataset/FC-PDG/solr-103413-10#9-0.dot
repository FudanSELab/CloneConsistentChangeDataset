digraph {
1 [style = filled, label = "wrappedException instanceof IllegalStateException && !(wrappedException instanceof SolrCoreState.CoreIsClosedException)@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary.getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String expectedMessage = \"SolrCoreState already closed.\"@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "LinkedHashMap<Class<? extends Throwable>,List<Class<? extends Throwable>>> expected = new LinkedHashMap<>()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(\"Expected wrapped SolrException message to contain '\" + expectedMessage + \"' but message is '\" + wrappedException.getMessage() + \"'\",wrappedException.getMessage().contains(expectedMessage))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "h.reload()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testShutdownDuringBuild['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String expectedMessage = \"Cannot commit on an closed writer. Add documents first\"@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertTrue(\"Expected wrapped IllegalStateException message to contain '\" + expectedMessage + \"' but message is '\" + wrappedException.getMessage() + \"'\",wrappedException.getMessage().contains(expectedMessage))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(\"Expected wrapped IllegalStateException message to contain '\" + expectedMessage + \"' but message is '\" + wrappedException.getMessage() + \"'\",wrappedException.getMessage().contains(expectedMessage))@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Future<?> job = executor.submit(null)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "{ExecutorUtil.shutdownAndAwaitTermination(executor)initCore(\"solrconfig-infixsuggesters.xml\",\"schema.xml\")}@@@25@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "h.close()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) Future job = executor.submit(null)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "wrappedException instanceof SolrException@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ExecutorService executor = ExecutorUtil.newMDCAwareCachedThreadPool(\"InfixSuggesterTest\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String expectedMessage = \"SolrCoreState already closed.\"@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "{ExecutorUtil.shutdownAndAwaitTermination(executor)}@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testShutdownDuringBuild['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "String expectedMessage = \"Cannot commit on an closed writer. Add documents first\"@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Thread.sleep(100)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "job.get()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testReloadDuringBuild['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expected.put(,Arrays.asList(,,,))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Throwable(( outerException = new Throwable((((@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "System.clearProperty(RandomTestDictionaryFactory.RandomTestDictionary.getEnabledSysProp(\"longRandomAnalyzingInfixSuggester\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "job.get()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "{ExecutorUtil.shutdownAndAwaitTermination(executor)initCore(\"solrconfig-infixsuggesters.xml\",\"schema.xml\")}@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8->16 [style = bold, label=""];
14->27 [style = bold, label=""];
11->3 [style = bold, label=""];
5->8 [style = solid, label="wrappedException"];
5->8 [style = bold, label=""];
15->1 [style = bold, label=""];
1->10 [style = bold, label=""];
8->12 [style = bold, label=""];
11->10 [style = solid, label="executor"];
3->26 [style = bold, label=""];
11->18 [style = solid, label="executor"];
5->8 [style = solid, label="expectedMessage"];
16->18 [style = bold, label=""];
4->11 [style = bold, label=""];
23->16 [style = solid, label="expectedMessage"];
20->22 [style = bold, label=""];
25->14 [style = bold, label=""];
12->1 [style = bold, label=""];
23->16 [style = bold, label=""];
24->11 [style = bold, label=""];
14->1 [style = solid, label="wrappedException"];
6->13 [style = bold, label=""];
1->18 [style = bold, label=""];
0->3 [style = bold, label=""];
14->15 [style = solid, label="wrappedException"];
16->13 [style = dotted, label="true"];
11->17 [style = bold, label=""];
1->23 [style = bold, label=""];
5->16 [style = solid, label="wrappedException"];
22->9 [style = bold, label=""];
15->1 [style = dotted, label="false"];
16->10 [style = bold, label=""];
16->6 [style = dotted, label="true"];
7->14 [style = bold, label=""];
12->1 [style = solid, label="expectedMessage"];
1->23 [style = dotted, label="true"];
8->18 [style = bold, label=""];
15->8 [style = dotted, label="true"];
26->25 [style = bold, label=""];
6->13 [style = solid, label="expectedMessage"];
15->5 [style = dotted, label="true"];
21->20 [style = bold, label=""];
19->11 [style = bold, label=""];
11->27 [style = solid, label="executor"];
3->9 [style = bold, label=""];
0->21 [style = bold, label=""];
16->6 [style = bold, label=""];
15->5 [style = bold, label=""];
8->16 [style = dotted, label="false"];
1->16 [style = dotted, label="true"];
2->0 [style = bold, label=""];
13->10 [style = bold, label=""];
14->15 [style = bold, label=""];
8->1 [style = dotted, label="true"];
8->12 [style = dotted, label="true"];
17->2 [style = bold, label=""];
9->7 [style = bold, label=""];
}
