digraph {
2 [style = filled, label = "StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "DataStream<String> consuming = see.addSource(new FlinkKinesisConsumer<>(\"test-flink\",new SimpleStringSchema(),consumerProps))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "consuming.flatMap(new FlatMapFunction<String,String>(){@Override public void flatMap(String value,Collector<String> out){String(( parts = value.split(\"-\")try {long l = Long.parseLong(parts(0()if (l < 0) {throw new RuntimeException(\"Negative\")}}catch (NumberFormatException nfe) if (parts(1(.length() != 12) {throw new RuntimeException(\"Second part of '\" + value + \"' doesn't have 12 characters\")}}})@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "FlinkKinesisProducer<String> kinesis = new FlinkKinesisProducer<>(new KinesisSerializationSchema<String>(){@Override public ByteBuffer serialize(String element){return ByteBuffer.wrap(element.getBytes(ConfigConstants.DEFAULT_CHARSET))}@Override public String getTargetStream(String element){if (element.split(\"-\")(0(.endsWith(\"0\")) {return \"flink-test-2\"}return null}},kinesisProducerConfig)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DataStream<String> simpleStringStream = see.addSource(new ProduceIntoKinesis.EventsGenerator())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "kinesis.setCustomPartitioner(new KinesisPartitioner<String>(){@Override public String getPartitionId(String element){int l = element.length()return element.substring(l - 1,l)}})@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "see.setParallelism(4)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "kinesisProducerConfig.setProperty(ProducerConfigConstants.AWS_REGION,pt.getRequired(\"region\"))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Properties consumerProps = new Properties()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "simpleStringStream.addSink(kinesis)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "kinesis.setFailOnError(true)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "kinesisProducerConfig.setProperty(ProducerConfigConstants.AWS_SECRET_ACCESS_KEY,pt.getRequired(\"secretKey\"))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "consumerProps.setProperty(ConsumerConfigConstants.AWS_SECRET_ACCESS_KEY,pt.getRequired(\"secretKey\"))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Properties kinesisProducerConfig = new Properties()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "consumerProps.setProperty(ConsumerConfigConstants.AWS_REGION,pt.getRequired(\"region\"))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "kinesis.setDefaultPartition(\"0\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "consumerProps.setProperty(ConsumerConfigConstants.AWS_ACCESS_KEY_ID,pt.getRequired(\"accessKey\"))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "kinesisProducerConfig.setProperty(AWSConfigConstants.AWS_ACCESS_KEY_ID,pt.getRequired(\"accessKey\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "see.execute()@@@58@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "kinesisProducerConfig.setProperty(AWSConfigConstants.AWS_SECRET_ACCESS_KEY,pt.getRequired(\"secretKey\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "kinesis.setDefaultStream(\"test-flink\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "kinesisProducerConfig.setProperty(ProducerConfigConstants.AWS_ACCESS_KEY_ID,pt.getRequired(\"accessKey\"))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "kinesisProducerConfig.setProperty(AWSConfigConstants.AWS_REGION,pt.getRequired(\"region\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "consuming.print()@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ParameterTool pt = ParameterTool.fromArgs(args)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = bold, label=""];
22->25 [style = bold, label=""];
24->12 [style = bold, label=""];
4->14 [style = bold, label=""];
15->20 [style = dashed, label="0"];
20->17 [style = bold, label=""];
1->8 [style = bold, label=""];
19->12 [style = bold, label=""];
4->17 [style = dashed, label="0"];
11->1 [style = bold, label=""];
25->23 [style = bold, label=""];
16->5 [style = solid, label="kinesisProducerConfig"];
27->28 [style = bold, label=""];
8->6 [style = bold, label=""];
23->3 [style = bold, label=""];
19->13 [style = dotted, label="true"];
0->7 [style = bold, label=""];
9->26 [style = bold, label=""];
26->27 [style = bold, label=""];
12->2 [style = bold, label=""];
6->25 [style = solid, label="l"];
2->0 [style = bold, label=""];
28->21 [style = bold, label=""];
10->13 [style = dotted, label="true"];
13->12 [style = solid, label="args"];
10->12 [style = bold, label=""];
21->22 [style = bold, label=""];
18->5 [style = bold, label=""];
7->16 [style = bold, label=""];
5->9 [style = solid, label="kinesis"];
15->4 [style = bold, label=""];
9->3 [style = bold, label=""];
5->11 [style = bold, label=""];
14->18 [style = dashed, label="0"];
26->22 [style = solid, label="consumerProps"];
6->9 [style = bold, label=""];
16->20 [style = bold, label=""];
17->18 [style = bold, label=""];
14->5 [style = bold, label=""];
24->13 [style = dotted, label="true"];
}
