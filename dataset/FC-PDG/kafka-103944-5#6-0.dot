digraph {
11 [style = filled, label = "MetricName maxLagMetric = metrics.metricInstance(metricsRegistry.recordsLagMax)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testReadCommittedLagMetric['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(147,partitionLag.value(),EPSILON)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "subscriptions.unsubscribe()@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(197,recordsFetchLagMax.value(),EPSILON)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "v++@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(147,recordsFetchLagMax.value(),EPSILON)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "tags.put(\"topic\",tp0.topic())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(50,recordsFetchLagMax.value(),EPSILON)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "fetchRecords(tp0,builder.build(),Errors.NONE,200L,0)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Map<String,String> tags = new HashMap<>()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "MetricName partitionLagMetric = metrics.metricName(tp0 + \".records-lag\",metricGroup)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "fetcher = createFetcher(subscriptions,metrics,new ByteArrayDeserializer(),new ByteArrayDeserializer(),Integer.MAX_VALUE,IsolationLevel.READ_COMMITTED)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "v++@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Double.NEGATIVE_INFINITY,recordsFetchLagMax.value(),EPSILON)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "fetchRecords(tp0,MemoryRecords.EMPTY,Errors.NONE,100L,0)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "fetchRecords(tp0,MemoryRecords.EMPTY,Errors.NONE,100L,50L,0)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "tags.put(\"partition\",String.valueOf(tp0.partition()))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Metrics metrics = new Metrics()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "subscriptions.assignFromUser(singleton(tp0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "KafkaMetric partitionLag = allMetrics.get(partitionLagMetric)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "MetricName partitionLagMetric = metrics.metricName(\"records-lag\",metricGroup,tags)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "KafkaMetric recordsFetchLagMax = allMetrics.get(maxLagMetric)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "subscriptions.seek(tp0,0)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "subscriptions.assignFromUser(singleton(tp0))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int v = 0@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "KafkaMetric partitionLag = allMetrics.get(partitionLagMetric)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testFetcherMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(Double.NEGATIVE_INFINITY,recordsFetchLagMax.value(),EPSILON)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertEquals(50,partitionLag.value(),EPSILON)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "subscriptions.seek(tp0,0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testFetcherMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "subscriptions.unsubscribe()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "fetchRecords(tp0,builder.build(),Errors.NONE,200L,150L,0)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "v++@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "v < 3@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(197,partitionLag.value(),EPSILON)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6->40 [style = bold, label=""];
7->24 [style = bold, label=""];
19->1 [style = solid, label="v"];
17->35 [style = dotted, label="true"];
1->18 [style = bold, label=""];
14->0 [style = bold, label=""];
6->2 [style = bold, label=""];
17->1 [style = solid, label="v"];
30->27 [style = bold, label=""];
16->12 [style = bold, label=""];
25->28 [style = bold, label=""];
14->0 [style = solid, label="v"];
17->42 [style = dashed, label="0"];
17->20 [style = solid, label="v"];
1->20 [style = dotted, label="true"];
15->13 [style = bold, label=""];
9->25 [style = bold, label=""];
31->33 [style = bold, label=""];
29->20 [style = solid, label="v"];
17->1 [style = bold, label=""];
40->32 [style = bold, label=""];
4->19 [style = solid, label="v"];
35->17 [style = bold, label=""];
26->13 [style = bold, label=""];
37->31 [style = bold, label=""];
1->29 [style = dotted, label="true"];
17->1 [style = dotted, label="true"];
14->4 [style = solid, label="v"];
4->0 [style = solid, label="v"];
34->41 [style = solid, label="metrics"];
12->14 [style = bold, label=""];
22->14 [style = solid, label="partitionLagMetric"];
20->18 [style = bold, label=""];
6->32 [style = dashed, label="0"];
0->19 [style = bold, label=""];
21->8 [style = bold, label=""];
38->34 [style = bold, label=""];
3->9 [style = solid, label="partitionLagMetric"];
0->17 [style = bold, label=""];
14->19 [style = solid, label="v"];
20->29 [style = bold, label=""];
1->37 [style = dashed, label="0"];
16->36 [style = dashed, label="0"];
2->16 [style = bold, label=""];
29->1 [style = bold, label=""];
22->10 [style = bold, label=""];
24->22 [style = solid, label="tags"];
0->19 [style = dotted, label="true"];
8->10 [style = bold, label=""];
5->7 [style = bold, label=""];
13->5 [style = bold, label=""];
10->6 [style = bold, label=""];
7->21 [style = solid, label="maxLagMetric"];
17->29 [style = solid, label="v"];
28->23 [style = bold, label=""];
29->1 [style = solid, label="v"];
19->17 [style = solid, label="v"];
7->3 [style = bold, label=""];
18->9 [style = bold, label=""];
21->12 [style = solid, label="partitionLagMetric"];
19->17 [style = bold, label=""];
34->41 [style = bold, label=""];
19->4 [style = bold, label=""];
36->0 [style = bold, label=""];
22->23 [style = solid, label="partitionLagMetric"];
19->35 [style = solid, label="v"];
21->39 [style = solid, label="partitionLagMetric"];
32->12 [style = bold, label=""];
3->11 [style = bold, label=""];
11->10 [style = solid, label="maxLagMetric"];
11->21 [style = bold, label=""];
42->37 [style = bold, label=""];
24->30 [style = bold, label=""];
10->40 [style = dashed, label="0"];
27->22 [style = bold, label=""];
35->17 [style = solid, label="v"];
35->1 [style = solid, label="v"];
33->39 [style = bold, label=""];
1->35 [style = bold, label=""];
20->31 [style = dashed, label="0"];
41->7 [style = bold, label=""];
3->2 [style = solid, label="partitionLagMetric"];
17->42 [style = bold, label=""];
7->6 [style = solid, label="maxLagMetric"];
0->4 [style = dotted, label="true"];
1->20 [style = bold, label=""];
12->36 [style = bold, label=""];
4->0 [style = bold, label=""];
34->8 [style = solid, label="metrics"];
}
