digraph {
35 [style = filled, label = "final RexNode simplified = simplifyIsNull(operand)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "simplifyIsNotNull['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "simplified.isAlwaysFalse()@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return rexBuilder.makeLiteral(!((RexLiteral)a).isNull())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return null@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return RexUtil.composeDisjunction(rexBuilder,operands,false)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "operands.add(simplified)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final RexNode simplified = simplifyIsNotNull(operand)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return rexBuilder.makeLiteral(false)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "return rexBuilder.makeLiteral(false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RexNode a@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "RexUtil.isNull(a)@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return RexUtil.composeConjunction(rexBuilder,operands)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final List<RexNode> operands = new ArrayList<>()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "a.getKind() == SqlKind.CAST@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Strong.policy(a.getKind())@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return rexBuilder.makeLiteral(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "return rexBuilder.makeLiteral(false)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "!a.getType().isNullable() && isSafeExpression(a)@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "simplifyIsNull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "throw new AssertionError(\"every CUSTOM policy needs a handler, \" + a.getKind())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "RexNode operand@@@15@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return rexBuilder.makeLiteral(true)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "a.getKind()@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "predicates.pulledUpPredicates.contains(a)@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "simplifyIsNotNull['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "a = simplify(a,UNKNOWN)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "return rexBuilder.makeLiteral(true)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "simplified == null@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "RexNode a@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return null@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "operands.add(rexBuilder.makeCall(SqlStdOperatorTable.IS_NULL,operand))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "return null@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "operands.add(rexBuilder.makeCall(SqlStdOperatorTable.IS_NOT_NULL,operand))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "((RexCall)a).getOperands()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RexNode operand@@@15@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "RexNode operand@@@16@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
19->27 [style = dashed, label="0"];
32->12 [style = bold, label=""];
11->1 [style = dotted, label="true"];
20->0 [style = dotted, label="true"];
16->17 [style = dotted, label="true"];
20->0 [style = bold, label=""];
4->7 [style = dotted, label="true"];
19->11 [style = bold, label=""];
3->34 [style = bold, label=""];
14->21 [style = dotted, label="true"];
16->14 [style = bold, label=""];
4->36 [style = dotted, label="true"];
4->24 [style = dotted, label="true"];
11->15 [style = dotted, label="true"];
8->27 [style = bold, label=""];
2->20 [style = solid, label="a"];
21->13 [style = bold, label=""];
10->18 [style = dotted, label="true"];
25->20 [style = solid, label="a"];
21->19 [style = bold, label=""];
35->8 [style = solid, label="simplified"];
26->2 [style = dotted, label="true"];
4->23 [style = dotted, label="true"];
31->3 [style = solid, label="a"];
4->35 [style = dotted, label="true"];
25->3 [style = bold, label=""];
2->3 [style = solid, label="a"];
16->17 [style = bold, label=""];
12->35 [style = bold, label=""];
2->25 [style = solid, label="a"];
33->27 [style = bold, label=""];
13->16 [style = bold, label=""];
35->16 [style = solid, label="simplified"];
34->0 [style = bold, label=""];
16->33 [style = dotted, label="true"];
4->13 [style = dotted, label="true"];
18->4 [style = bold, label=""];
22->20 [style = bold, label=""];
22->28 [style = dashed, label="0"];
16->33 [style = bold, label=""];
14->8 [style = bold, label=""];
27->29 [style = bold, label=""];
4->32 [style = dotted, label="true"];
14->21 [style = bold, label=""];
4->5 [style = dotted, label="true"];
10->18 [style = bold, label=""];
16->8 [style = bold, label=""];
13->35 [style = dashed, label="0"];
25->3 [style = solid, label="a"];
4->11 [style = dotted, label="true"];
17->33 [style = dashed, label="0"];
4->29 [style = bold, label=""];
8->35 [style = bold, label=""];
34->0 [style = dotted, label="true"];
4->7 [style = bold, label=""];
4->29 [style = dotted, label="true"];
12->13 [style = bold, label=""];
3->28 [style = bold, label=""];
30->3 [style = bold, label=""];
14->8 [style = dotted, label="false"];
4->12 [style = bold, label=""];
9->3 [style = bold, label=""];
7->32 [style = dashed, label="0"];
17->13 [style = bold, label=""];
4->12 [style = dotted, label="true"];
16->8 [style = dotted, label="false"];
4->5 [style = bold, label=""];
30->31 [style = dotted, label="true"];
13->16 [style = solid, label="simplified"];
8->13 [style = bold, label=""];
4->19 [style = dotted, label="true"];
15->1 [style = bold, label=""];
3->28 [style = dotted, label="true"];
4->6 [style = dotted, label="true"];
33->35 [style = bold, label=""];
35->16 [style = bold, label=""];
28->34 [style = bold, label=""];
7->12 [style = bold, label=""];
11->1 [style = bold, label=""];
8->19 [style = bold, label=""];
26->25 [style = bold, label=""];
12->19 [style = solid, label="operands"];
12->27 [style = solid, label="operands"];
3->22 [style = bold, label=""];
34->10 [style = bold, label=""];
17->19 [style = bold, label=""];
11->15 [style = bold, label=""];
2->31 [style = dashed, label="0"];
20->10 [style = bold, label=""];
0->10 [style = bold, label=""];
3->20 [style = bold, label=""];
13->8 [style = solid, label="simplified"];
9->2 [style = dotted, label="true"];
3->22 [style = dotted, label="true"];
4->27 [style = dotted, label="true"];
10->4 [style = bold, label=""];
31->34 [style = solid, label="a"];
16->14 [style = dotted, label="false"];
4->16 [style = dotted, label="true"];
4->11 [style = bold, label=""];
4->32 [style = bold, label=""];
}
