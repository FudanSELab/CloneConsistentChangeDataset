digraph {
11 [style = filled, label = "spaceCache != null@@@14@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return spaceCache.get(key)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "throw new IOException(\"The getCache function requires two parameters: workspace and key\")@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "return false@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ConcurrentMap<String,Object> spaceCache = objectCache.get(space)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "values.length == 2@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) ConcurrentMap spaceCache = (ConcurrentMap)objectCache.get(space)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String key = (String)values(1(@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "doWork['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "space = space.replace(\"\"\",\"\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ConcurrentMap<String,ConcurrentMap<String,Object>> objectCache = this.streamContext.getObjectCache()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "doWork['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String space = (String)values(0(@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return null@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "return spaceCache.remove(key)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "throw new IOException(\"The removeCache function requires two parameters: workspace and key\")@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) ConcurrentMap objectCache = this.streamContext.getObjectCache()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "doWork['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "throw new IOException(\"The getCache function requires two parameters: workspace and key\")@@@20@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Object values@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return (spaceCache != null)? spaceCache.get(key): null@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "key = key.replace(\"\"\",\"\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
11->20 [style = bold, label=""];
5->14 [style = dotted, label="true"];
2->19 [style = dashed, label="0"];
5->18 [style = dotted, label="false"];
5->12 [style = dotted, label="false"];
9->0 [style = bold, label=""];
21->1 [style = dotted, label="true"];
1->7 [style = solid, label="values"];
9->16 [style = solid, label="space"];
6->20 [style = dashed, label="0"];
2->6 [style = bold, label=""];
5->10 [style = dotted, label="true"];
9->4 [style = solid, label="space"];
19->20 [style = bold, label=""];
11->6 [style = bold, label=""];
8->3 [style = bold, label=""];
5->6 [style = dotted, label="true"];
5->17 [style = dotted, label="false"];
5->18 [style = bold, label=""];
5->0 [style = dotted, label="true"];
16->14 [style = solid, label="spaceCache"];
11->19 [style = bold, label=""];
15->16 [style = bold, label=""];
5->17 [style = bold, label=""];
10->7 [style = bold, label=""];
5->15 [style = dotted, label="true"];
11->2 [style = bold, label=""];
0->15 [style = bold, label=""];
5->4 [style = dotted, label="true"];
7->9 [style = bold, label=""];
8->1 [style = dotted, label="true"];
13->1 [style = dotted, label="true"];
3->5 [style = bold, label=""];
5->11 [style = dotted, label="true"];
11->2 [style = dotted, label="true"];
5->12 [style = bold, label=""];
0->4 [style = bold, label=""];
5->7 [style = dotted, label="true"];
0->19 [style = solid, label="key"];
5->16 [style = dotted, label="true"];
13->5 [style = bold, label=""];
5->9 [style = dotted, label="true"];
16->14 [style = bold, label=""];
5->20 [style = dotted, label="true"];
12->18 [style = dashed, label="0"];
0->14 [style = solid, label="key"];
0->2 [style = solid, label="key"];
11->19 [style = dotted, label="true"];
4->11 [style = solid, label="spaceCache"];
4->11 [style = bold, label=""];
1->10 [style = solid, label="values"];
21->3 [style = bold, label=""];
}
