digraph {
2 [style = filled, label = "replaceMetadata.setOperationType(writeOperationType)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "writeStat.setFileId(\"file-1\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "partitionFileIds.put(HoodieTestDataGenerator.DEFAULT_FIRST_PARTITION_PATH,Arrays.asList(fileId2))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "createReplace['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "clusteringPlan.setInputGroups(Arrays.asList(clusteringGroup))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HoodieTestTable.of(metaClient).addReplaceCommit(instantTime,requestedReplaceMetadata,replaceMetadata).withBaseFilesInPartition(HoodieTestDataGenerator.DEFAULT_FIRST_PARTITION_PATH,fileId1,fileId2)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "HoodieTestTable.of(metaClient).addReplaceCommit(instantTime,Option.of(requestedReplaceMetadata),Option.empty(),replaceMetadata).withBaseFilesInPartition(HoodieTestDataGenerator.DEFAULT_FIRST_PARTITION_PATH,fileId1,fileId2)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "HoodieRequestedReplaceMetadata requestedReplaceMetadata = new HoodieRequestedReplaceMetadata()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String instantTime@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Map<String,List<String>> partitionFileIds = new HashMap<>()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "HoodieClusteringPlan clusteringPlan = new HoodieClusteringPlan()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "HoodieReplaceCommitMetadata replaceMetadata = new HoodieReplaceCommitMetadata()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sliceInfo.setFileId(fileId1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String fileId1 = \"file-1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "WriteOperationType writeOperationType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "HoodieTestTable.of(metaClient).addRequestedReplace(instantTime,requestedReplaceMetadata).withBaseFilesInPartition(HoodieTestDataGenerator.DEFAULT_FIRST_PARTITION_PATH,fileId1,fileId2)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "requestedReplaceMetadata.setClusteringPlan(clusteringPlan)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "requestedReplaceMetadata.setOperationType(WriteOperationType.CLUSTER.name())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "sliceInfo.setPartitionPath(HoodieTestDataGenerator.DEFAULT_FIRST_PARTITION_PATH)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "replaceMetadata.setPartitionToReplaceFileIds(partitionFileIds)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "createReplaceRequested['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "createReplace['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "String instantTime@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "clusteringGroup.setSlices(Arrays.asList(sliceInfo))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "replaceMetadata.addWriteStat(HoodieTestDataGenerator.DEFAULT_FIRST_PARTITION_PATH,writeStat)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "HoodieSliceInfo sliceInfo = new HoodieSliceInfo()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "HoodieClusteringGroup clusteringGroup = new HoodieClusteringGroup()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "requestedReplaceMetadata.setVersion(TimelineLayoutVersion.CURR_VERSION)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String fileId2 = \"file-2\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String instantTime@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "HoodieWriteStat writeStat = new HoodieWriteStat()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
0->9 [style = bold, label=""];
24->19 [style = bold, label=""];
10->14 [style = bold, label=""];
17->2 [style = solid, label="writeOperationType"];
4->11 [style = dotted, label="true"];
5->15 [style = bold, label=""];
9->20 [style = bold, label=""];
23->3 [style = bold, label=""];
12->26 [style = bold, label=""];
19->13 [style = solid, label="writeStat"];
23->16 [style = solid, label="clusteringPlan"];
27->2 [style = solid, label="writeOperationType"];
15->16 [style = bold, label=""];
14->6 [style = solid, label="fileId2"];
12->6 [style = bold, label=""];
1->13 [style = bold, label=""];
3->0 [style = bold, label=""];
20->5 [style = bold, label=""];
14->29 [style = solid, label="fileId2"];
17->28 [style = dashed, label="0"];
7->22 [style = bold, label=""];
7->24 [style = solid, label="partitionFileIds"];
19->1 [style = bold, label=""];
12->29 [style = bold, label=""];
6->29 [style = dashed, label="0"];
25->17 [style = dotted, label="true"];
6->26 [style = dashed, label="0"];
10->9 [style = solid, label="fileId1"];
30->10 [style = bold, label=""];
10->6 [style = solid, label="fileId1"];
14->22 [style = solid, label="fileId2"];
0->5 [style = solid, label="sliceInfo"];
8->21 [style = bold, label=""];
14->18 [style = bold, label=""];
25->10 [style = bold, label=""];
14->8 [style = bold, label=""];
22->24 [style = bold, label=""];
18->7 [style = bold, label=""];
3->15 [style = solid, label="clusteringGroup"];
10->29 [style = solid, label="fileId1"];
4->17 [style = dotted, label="true"];
25->27 [style = dotted, label="true"];
30->28 [style = dotted, label="true"];
16->12 [style = bold, label=""];
10->26 [style = solid, label="fileId1"];
14->26 [style = solid, label="fileId2"];
2->8 [style = bold, label=""];
13->2 [style = bold, label=""];
21->23 [style = bold, label=""];
}
