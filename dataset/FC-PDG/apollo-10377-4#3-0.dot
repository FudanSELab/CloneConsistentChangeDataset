digraph {
10 [style = filled, label = "int newTimeout = 1001@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int newBatch = 2001@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int initialTimeout = 1000@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TimeUnit.MILLISECONDS.sleep(300)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "YamlConfigFile configFile = prepareYamlConfigFile(\"application.yaml\",readYamlContentAsConfigFileProperties(\"case5.yaml\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testAutoUpdateWithTypeMismatchWithYamlFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "YamlConfigFile configFile = prepareYamlConfigFile(\"application.yaml\",readYamlContentAsConfigFileProperties(\"case1.yaml\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int initialBatch = 2000@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testAutoUpdateWithOneYamlFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(newTimeout,bean.getTimeout())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestJavaConfigBean bean = context.getBean()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(initialTimeout,bean.getTimeout())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TimeUnit.MILLISECONDS.sleep(100)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertEquals(newBatch,bean.getBatch())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TimeUnit.MILLISECONDS.sleep(100)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(initialBatch,bean.getBatch())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "configFile.onRepositoryChange(\"application.yaml\",readYamlContentAsConfigFileProperties(\"case1-new.yaml\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testAutoUpdateWithTypeMismatchWithYamlFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
0->9 [style = bold, label=""];
19->18 [style = bold, label=""];
9->16 [style = dashed, label="0"];
15->7 [style = bold, label=""];
10->19 [style = bold, label=""];
11->12 [style = bold, label=""];
3->6 [style = solid, label="initialBatch"];
6->17 [style = dashed, label="0"];
7->12 [style = solid, label="initialTimeout"];
12->6 [style = bold, label=""];
1->7 [style = bold, label=""];
9->16 [style = bold, label=""];
7->3 [style = bold, label=""];
4->0 [style = bold, label=""];
6->14 [style = bold, label=""];
3->9 [style = solid, label="initialBatch"];
3->10 [style = bold, label=""];
6->4 [style = bold, label=""];
5->2 [style = bold, label=""];
3->12 [style = solid, label="initialBatch"];
17->0 [style = bold, label=""];
10->5 [style = bold, label=""];
19->16 [style = solid, label="newBatch"];
14->0 [style = bold, label=""];
13->7 [style = bold, label=""];
10->9 [style = solid, label="newTimeout"];
4->14 [style = dashed, label="0"];
18->8 [style = bold, label=""];
8->11 [style = bold, label=""];
10->0 [style = solid, label="newTimeout"];
2->8 [style = bold, label=""];
7->11 [style = solid, label="initialTimeout"];
}
