digraph {
3 [style = filled, label = "testReturn_Lv1Array['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(,resultClass.getComponentType())@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Method method = clazz.getMethod(\"selectArray\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Method method = clazz.getMethod(\"selectArray\",)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testReturn_Lv2ArrayOfArray['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(resultClass.getComponentType().isArray())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Class<?> clazz = @@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Method method = clazz.getMethod(\"selectArrayOfArray\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(,resultClass.getComponentType().getComponentType())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Type result = TypeParameterResolver.resolveReturnType(method,clazz)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(resultClass.isArray())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Class<?> resultClass = (Class<?>)result@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testReturn_Lv1Array['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertTrue(result instanceof Class)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(result instanceof Class)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Class<?> clazz = @@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
5->8 [style = bold, label=""];
6->8 [style = dashed, label="0"];
2->0 [style = solid, label="result"];
2->15 [style = solid, label="result"];
5->2 [style = solid, label="clazz"];
6->11 [style = dashed, label="0"];
7->0 [style = bold, label=""];
6->2 [style = solid, label="method"];
13->11 [style = bold, label=""];
0->15 [style = bold, label=""];
11->2 [style = bold, label=""];
2->7 [style = solid, label="result"];
6->2 [style = bold, label=""];
1->12 [style = dashed, label="0"];
3->5 [style = bold, label=""];
13->2 [style = solid, label="clazz"];
5->6 [style = bold, label=""];
8->2 [style = bold, label=""];
10->13 [style = bold, label=""];
0->4 [style = bold, label=""];
12->14 [style = bold, label=""];
15->4 [style = bold, label=""];
9->5 [style = bold, label=""];
4->12 [style = bold, label=""];
8->2 [style = solid, label="method"];
4->1 [style = bold, label=""];
2->7 [style = bold, label=""];
11->2 [style = solid, label="method"];
}
