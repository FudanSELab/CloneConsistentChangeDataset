digraph {
12 [style = filled, label = "final SearchBuilder search = Search.builder().query(query).size(queryMaxSize)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.termQuery(ServiceTraffic.GROUP,group))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "sourceBuilder.size(queryMaxSize)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return buildServices(results)@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "getAllServices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "String keyword@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return buildServices(response)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final BoolQueryBuilder query = Query.bool().must(Query.term(ServiceTraffic.NODE_TYPE,NodeType.Normal.value()))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.matchQuery(matchCName,keyword))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final SearchResponse results = getClient().search(index,search.build())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "sourceBuilder.query(boolQueryBuilder)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.termQuery(ServiceTraffic.NODE_TYPE,NodeType.Normal.value()))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "getAllServices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "searchServices['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String group@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String index = IndexController.LogicIndicesRegister.getPhysicalTableName(ServiceTraffic.INDEX_NAME)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "SearchResponse response = getClient().search(IndexController.LogicIndicesRegister.getPhysicalTableName(ServiceTraffic.INDEX_NAME),sourceBuilder)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String matchCName = MatchCNameBuilder.INSTANCE.build(ServiceTraffic.NAME)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "StringUtil.isNotEmpty(group)@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "!Strings.isNullOrEmpty(keyword)@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "sourceBuilder.query(boolQueryBuilder)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "query.must(Query.term(ServiceTraffic.GROUP,group))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2->3 [style = dotted, label="true"];
5->1 [style = solid, label="boolQueryBuilder"];
17->14 [style = solid, label="results"];
15->17 [style = solid, label="index"];
21->20 [style = dotted, label="true"];
8->7 [style = solid, label="response"];
22->18 [style = dotted, label="true"];
18->23 [style = bold, label=""];
22->23 [style = dotted, label="true"];
13->3 [style = dotted, label="true"];
4->16 [style = dashed, label="0"];
12->17 [style = solid, label="search"];
6->22 [style = bold, label=""];
9->7 [style = solid, label="sourceBuilder"];
20->23 [style = solid, label="keyword"];
11->12 [style = bold, label=""];
10->17 [style = bold, label=""];
1->0 [style = bold, label=""];
2->9 [style = bold, label=""];
16->17 [style = bold, label=""];
23->0 [style = bold, label=""];
9->8 [style = solid, label="sourceBuilder"];
8->7 [style = bold, label=""];
3->4 [style = solid, label="group"];
12->10 [style = bold, label=""];
22->18 [style = bold, label=""];
21->9 [style = bold, label=""];
22->0 [style = bold, label=""];
5->6 [style = bold, label=""];
15->11 [style = bold, label=""];
3->16 [style = solid, label="group"];
10->16 [style = bold, label=""];
5->11 [style = dashed, label="0"];
17->14 [style = bold, label=""];
6->10 [style = bold, label=""];
3->20 [style = dashed, label="0"];
5->0 [style = solid, label="boolQueryBuilder"];
0->8 [style = bold, label=""];
10->4 [style = bold, label=""];
9->5 [style = bold, label=""];
18->23 [style = solid, label="matchCName"];
4->1 [style = bold, label=""];
13->15 [style = bold, label=""];
10->4 [style = dotted, label="true"];
10->1 [style = bold, label=""];
10->16 [style = dotted, label="true"];
7->19 [style = bold, label=""];
3->10 [style = solid, label="group"];
7->19 [style = solid, label="response"];
}
