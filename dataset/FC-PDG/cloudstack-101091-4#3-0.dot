digraph {
15 [style = filled, label = "capabilities != null && implementedProvider != null@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "providers.add(implementedProvider)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Service service@@@15@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "verifyDisabledConfigDriveEntriesOnEnabledZones()@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Service service@@@15@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "start['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "s_serviceToImplementedProvidersMap.containsKey(service)@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<Provider> providers = s_serviceToImplementedProvidersMap.get(service)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "s_logger.info(\"Add provider < element map entry. \" + implementedProvider.getName() + \"-\" + element.getName() + \"-\" + element.getClass().getSimpleName())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "start['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "s_providerToNetworkElementMap.put(implementedProvider.getName(),element.getName())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "s_logger.info(\"Started Network Model\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return true@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return true@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "start['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Map<Service,Map<Capability,String>> capabilities = element.getCapabilities()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "capabilities.keySet()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "s_logger.error(\"Cannot start NetworkModel: Provider < NetworkElement must be a one-to-one map, \" + \"multiple NetworkElements found for Provider: \" + implementedProvider.getName())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Provider implementedProvider = element.getProvider()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "s_providerToNetworkElementMap.containsKey(implementedProvider.getName())@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<Provider> providers = new ArrayList<Provider>()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "s_serviceToImplementedProvidersMap.put(service,providers)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "implementedProvider != null@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "s_logger.error(\"Cannot start MapNetworkManager: Provider < NetworkElement must be a one-to-one map, \" + \"multiple NetworkElements found for Provider: \" + implementedProvider.getName())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "s_providerToNetworkElementMap.put(implementedProvider.getName(),element.getName())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "providers.add(implementedProvider)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return false@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->14 [style = dotted, label="true"];
5->0 [style = dotted, label="true"];
6->15 [style = solid, label="capabilities"];
0->16 [style = dotted, label="true"];
6->18 [style = bold, label=""];
23->25 [style = bold, label=""];
5->10 [style = dotted, label="true"];
16->0 [style = dashed, label="0"];
1->9 [style = bold, label=""];
15->9 [style = bold, label=""];
5->22 [style = dotted, label="true"];
23->24 [style = bold, label=""];
18->2 [style = solid, label="implementedProvider"];
0->22 [style = bold, label=""];
18->24 [style = bold, label=""];
2->13 [style = bold, label=""];
9->7 [style = dotted, label="true"];
18->5 [style = dotted, label="true"];
16->19 [style = bold, label=""];
18->23 [style = dotted, label="true"];
18->5 [style = bold, label=""];
17->1 [style = solid, label="providers"];
18->25 [style = bold, label=""];
15->19 [style = bold, label=""];
11->1 [style = bold, label=""];
25->18 [style = bold, label=""];
16->13 [style = bold, label=""];
1->6 [style = bold, label=""];
9->2 [style = dotted, label="true"];
15->6 [style = bold, label=""];
19->13 [style = bold, label=""];
9->7 [style = bold, label=""];
15->4 [style = dotted, label="true"];
26->25 [style = bold, label=""];
2->9 [style = bold, label=""];
2->19 [style = bold, label=""];
5->0 [style = bold, label=""];
0->16 [style = bold, label=""];
18->15 [style = solid, label="implementedProvider"];
9->1 [style = dotted, label="false"];
9->11 [style = dotted, label="false"];
5->23 [style = bold, label=""];
9->17 [style = bold, label=""];
15->20 [style = dotted, label="true"];
16->6 [style = bold, label=""];
15->13 [style = bold, label=""];
18->11 [style = solid, label="implementedProvider"];
17->11 [style = bold, label=""];
1->19 [style = bold, label=""];
2->6 [style = bold, label=""];
15->9 [style = dotted, label="true"];
10->15 [style = bold, label=""];
13->8 [style = bold, label=""];
22->23 [style = bold, label=""];
18->5 [style = solid, label="implementedProvider"];
0->14 [style = bold, label=""];
14->10 [style = bold, label=""];
25->18 [style = solid, label="implementedProvider"];
21->6 [style = bold, label=""];
9->17 [style = dotted, label="false"];
12->6 [style = bold, label=""];
5->15 [style = bold, label=""];
1->13 [style = bold, label=""];
15->3 [style = dotted, label="true"];
7->2 [style = bold, label=""];
}
