digraph {
67 [style = filled, label = "assertEquals(Utils.mkList(\"one\"),toList(windowStore.fetch(1,startTime + increment - windowSize,startTime + increment + windowSize)))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(6,startTime + increment * 6 - windowSize,startTime + increment * 6 + windowSize)))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "windowStore.put(1,\"one\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "setCurrentTime(startTime)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
77 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,startTime + increment * 2 - windowSize,startTime + increment * 2 + windowSize)))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + increment - windowSize,startTime + increment + windowSize)))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + increment * 5 - windowSize,startTime + increment * 5 + windowSize)))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + increment - windowSize,startTime + increment + windowSize)))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + increment * 5 - windowSize,startTime + increment * 5 + windowSize)))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "context.restore(windowName,changeLog)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
86 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,startTime + increment * 2 - windowSize,startTime + increment * 2 + windowSize)))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,startTime + increment * 2 - windowSize,startTime + increment * 2 + windowSize)))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "windowStore.flush()@@@60@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "windowStore.put(0,\"zero\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,startTime + increment * 6 - windowSize,startTime + increment * 6 + windowSize)))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "windowStore.put(8,\"eight\")@@@49@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "setCurrentTime(startTime + increment * 2)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "testRolling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + increment * 4 - windowSize,startTime + increment * 4 + windowSize)))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + increment * 3 - windowSize,startTime + increment * 3 + windowSize)))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,startTime + increment * 7 - windowSize,startTime + increment * 7 + windowSize)))@@@47@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + increment * 4 - windowSize,startTime + increment * 4 + windowSize)))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(windowStore.fetch(8,startTime + increment * 8 - windowSize,startTime + increment * 8 + windowSize)))@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
71 [style = filled, label = "assertEquals(Utils.mkList(\"zero\"),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "setCurrentTime(startTime + increment)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "Utils.delete(baseDir)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + increment * 3 - windowSize,startTime + increment * 3 + windowSize)))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,startTime + increment * 6 - windowSize,startTime + increment * 6 + windowSize)))@@@57@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(7,startTime + increment * 7 - windowSize,startTime + increment * 7 + windowSize)))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
79 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final long startTime = segmentInterval * 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "windowStore.put(2,\"two\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(5,startTime + increment * 5 - windowSize,startTime + increment * 5 + windowSize)))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
89 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "windowStore = createWindowStore(context,false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "testRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
94 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + increment * 4 - windowSize,startTime + increment * 4 + windowSize)))@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + increment * 5 - windowSize,startTime + increment * 5 + windowSize)))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
97 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3)),segmentDirs(baseDir))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,startTime + increment * 7 - windowSize,startTime + increment * 7 + windowSize)))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "final long increment = segmentInterval / 2@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "windowStore = createWindowStore(context,false)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@61@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final long startTime = segmentInterval * 2@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "windowStore.put(4,\"four\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(windowStore.fetch(8,startTime + increment * 8 - windowSize,startTime + increment * 8 + windowSize)))@@@59@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "windowStore.close()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,startTime + increment * 6 - windowSize,startTime + increment * 6 + windowSize)))@@@46@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "windowStore.put(8,\"eight\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + increment * 3 - windowSize,startTime + increment * 3 + windowSize)))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
91 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + increment * 3 - windowSize,startTime + increment * 3 + windowSize)))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + increment * 4 - windowSize,startTime + increment * 4 + windowSize)))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,startTime + increment * 7 - windowSize,startTime + increment * 7 + windowSize)))@@@58@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,startTime + increment * 2 - windowSize,startTime + increment * 2 + windowSize)))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + increment * 5 - windowSize,startTime + increment * 5 + windowSize)))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "windowStore.put(6,\"six\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + increment - windowSize,startTime + increment + windowSize)))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
81 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "windowStore.put(7,\"seven\")@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
75 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + increment * 3 - windowSize,startTime + increment * 3 + windowSize)))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "setCurrentTime(startTime)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "windowStore.flush()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "windowStore.put(5,\"five\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "windowStore.put(3,\"three\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + increment - windowSize,startTime + increment + windowSize)))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "windowStore.flush()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(8,startTime + increment * 8 - windowSize,startTime + increment * 8 + windowSize)))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67->86 [style = bold, label=""];
18->29 [style = solid, label="increment"];
18->50 [style = solid, label="increment"];
70->88 [style = bold, label=""];
24->9 [style = solid, label="increment"];
14->101 [style = bold, label=""];
27->38 [style = bold, label=""];
100->84 [style = bold, label=""];
52->64 [style = bold, label=""];
46->60 [style = solid, label="startTime"];
24->89 [style = solid, label="increment"];
84->79 [style = bold, label=""];
65->42 [style = bold, label=""];
46->48 [style = solid, label="startTime"];
23->45 [style = bold, label=""];
18->68 [style = solid, label="startTime"];
74->72 [style = bold, label=""];
85->34 [style = bold, label=""];
24->94 [style = solid, label="increment"];
8->63 [style = bold, label=""];
99->83 [style = bold, label=""];
32->63 [style = dashed, label="0"];
18->44 [style = solid, label="startTime"];
18->53 [style = solid, label="increment"];
49->48 [style = bold, label=""];
18->85 [style = solid, label="startTime"];
33->50 [style = dashed, label="0"];
46->33 [style = solid, label="startTime"];
24->83 [style = solid, label="increment"];
24->30 [style = solid, label="increment"];
18->99 [style = solid, label="startTime"];
24->76 [style = solid, label="increment"];
95->78 [style = bold, label=""];
24->69 [style = solid, label="increment"];
36->20 [style = bold, label=""];
18->49 [style = solid, label="increment"];
92->87 [style = bold, label=""];
18->55 [style = solid, label="increment"];
18->96 [style = solid, label="startTime"];
50->65 [style = bold, label=""];
24->93 [style = solid, label="increment"];
88->3 [style = bold, label=""];
18->4 [style = solid, label="increment"];
71->67 [style = bold, label=""];
46->41 [style = solid, label="startTime"];
45->6 [style = bold, label=""];
24->21 [style = bold, label=""];
35->37 [style = bold, label=""];
18->58 [style = solid, label="increment"];
30->66 [style = dashed, label="0"];
46->57 [style = solid, label="startTime"];
2->15 [style = bold, label=""];
43->8 [style = bold, label=""];
47->51 [style = bold, label=""];
18->86 [style = solid, label="startTime"];
18->7 [style = solid, label="startTime"];
18->14 [style = solid, label="increment"];
24->98 [style = solid, label="increment"];
24->70 [style = solid, label="increment"];
54->53 [style = bold, label=""];
13->46 [style = bold, label=""];
46->63 [style = solid, label="startTime"];
18->52 [style = solid, label="increment"];
0->40 [style = bold, label=""];
18->98 [style = solid, label="startTime"];
32->4 [style = bold, label=""];
73->66 [style = bold, label=""];
24->2 [style = solid, label="increment"];
77->96 [style = bold, label=""];
18->27 [style = solid, label="increment"];
18->71 [style = solid, label="startTime"];
18->64 [style = solid, label="increment"];
24->67 [style = solid, label="increment"];
28->30 [style = dashed, label="0"];
46->29 [style = solid, label="startTime"];
18->37 [style = solid, label="increment"];
46->32 [style = solid, label="startTime"];
18->78 [style = solid, label="startTime"];
24->4 [style = solid, label="increment"];
30->41 [style = bold, label=""];
24->19 [style = bold, label=""];
38->48 [style = dashed, label="0"];
46->16 [style = solid, label="startTime"];
18->94 [style = solid, label="startTime"];
18->30 [style = solid, label="startTime"];
18->82 [style = solid, label="startTime"];
18->84 [style = solid, label="startTime"];
16->29 [style = bold, label=""];
97->89 [style = bold, label=""];
18->4 [style = solid, label="startTime"];
15->81 [style = bold, label=""];
28->58 [style = dashed, label="0"];
48->50 [style = bold, label=""];
35->56 [style = dashed, label="0"];
26->43 [style = bold, label=""];
1->35 [style = bold, label=""];
24->82 [style = solid, label="increment"];
18->66 [style = solid, label="startTime"];
46->14 [style = solid, label="startTime"];
46->4 [style = solid, label="startTime"];
41->51 [style = dashed, label="0"];
7->54 [style = dashed, label="0"];
22->7 [style = bold, label=""];
18->39 [style = solid, label="increment"];
24->68 [style = solid, label="increment"];
3->0 [style = bold, label=""];
46->47 [style = solid, label="startTime"];
89->45 [style = bold, label=""];
18->21 [style = solid, label="startTime"];
46->55 [style = solid, label="startTime"];
24->91 [style = solid, label="increment"];
46->64 [style = solid, label="startTime"];
18->9 [style = solid, label="startTime"];
18->95 [style = solid, label="startTime"];
46->62 [style = solid, label="startTime"];
18->89 [style = solid, label="startTime"];
18->2 [style = solid, label="startTime"];
29->4 [style = dashed, label="0"];
18->100 [style = solid, label="startTime"];
18->33 [style = solid, label="increment"];
15->9 [style = bold, label=""];
24->79 [style = solid, label="increment"];
46->51 [style = solid, label="startTime"];
46->56 [style = solid, label="startTime"];
46->49 [style = solid, label="startTime"];
18->67 [style = solid, label="startTime"];
46->36 [style = solid, label="startTime"];
1->56 [style = bold, label=""];
46->65 [style = solid, label="startTime"];
82->4 [style = bold, label=""];
38->33 [style = bold, label=""];
24->75 [style = solid, label="increment"];
46->15 [style = solid, label="startTime"];
98->76 [style = bold, label=""];
7->44 [style = bold, label=""];
59->46 [style = bold, label=""];
94->69 [style = bold, label=""];
46->6 [style = solid, label="startTime"];
18->16 [style = solid, label="increment"];
24->88 [style = solid, label="increment"];
4->57 [style = dashed, label="0"];
101->2 [style = bold, label=""];
18->24 [style = bold, label=""];
18->15 [style = solid, label="increment"];
16->52 [style = dashed, label="0"];
18->38 [style = solid, label="increment"];
18->7 [style = solid, label="increment"];
18->6 [style = solid, label="increment"];
51->62 [style = bold, label=""];
81->9 [style = bold, label=""];
18->23 [style = solid, label="increment"];
18->91 [style = solid, label="startTime"];
18->88 [style = solid, label="startTime"];
44->53 [style = dashed, label="0"];
46->61 [style = solid, label="startTime"];
46->35 [style = solid, label="startTime"];
56->60 [style = bold, label=""];
24->78 [style = solid, label="increment"];
46->10 [style = solid, label="startTime"];
18->48 [style = solid, label="increment"];
0->74 [style = bold, label=""];
63->57 [style = bold, label=""];
96->94 [style = bold, label=""];
5->26 [style = bold, label=""];
69->22 [style = bold, label=""];
46->38 [style = solid, label="startTime"];
18->51 [style = solid, label="increment"];
46->12 [style = solid, label="startTime"];
18->22 [style = solid, label="increment"];
18->73 [style = solid, label="startTime"];
68->99 [style = bold, label=""];
18->54 [style = solid, label="increment"];
24->100 [style = solid, label="increment"];
18->10 [style = solid, label="increment"];
46->18 [style = bold, label=""];
24->72 [style = solid, label="increment"];
17->38 [style = dashed, label="0"];
30->47 [style = dashed, label="0"];
46->52 [style = solid, label="startTime"];
18->62 [style = solid, label="increment"];
34->93 [style = dashed, label="0"];
83->100 [style = bold, label=""];
46->19 [style = solid, label="startTime"];
37->22 [style = bold, label=""];
46->28 [style = solid, label="startTime"];
30->85 [style = bold, label=""];
46->53 [style = solid, label="startTime"];
24->66 [style = solid, label="increment"];
24->44 [style = solid, label="increment"];
60->61 [style = bold, label=""];
18->34 [style = solid, label="increment"];
40->36 [style = bold, label=""];
24->77 [style = solid, label="increment"];
46->11 [style = solid, label="startTime"];
34->16 [style = bold, label=""];
18->30 [style = solid, label="increment"];
46->54 [style = solid, label="startTime"];
24->73 [style = solid, label="increment"];
18->57 [style = solid, label="increment"];
18->41 [style = solid, label="increment"];
76->70 [style = bold, label=""];
18->12 [style = solid, label="increment"];
18->22 [style = solid, label="startTime"];
87->18 [style = bold, label=""];
18->65 [style = solid, label="increment"];
18->79 [style = solid, label="startTime"];
86->98 [style = bold, label=""];
14->2 [style = bold, label=""];
9->12 [style = bold, label=""];
31->39 [style = bold, label=""];
61->54 [style = bold, label=""];
46->34 [style = solid, label="startTime"];
18->77 [style = solid, label="startTime"];
57->47 [style = bold, label=""];
46->30 [style = solid, label="startTime"];
64->58 [style = bold, label=""];
46->22 [style = solid, label="startTime"];
11->55 [style = dashed, label="0"];
41->34 [style = bold, label=""];
46->39 [style = solid, label="startTime"];
37->60 [style = dashed, label="0"];
22->61 [style = dashed, label="0"];
21->14 [style = bold, label=""];
93->82 [style = bold, label=""];
19->21 [style = bold, label=""];
12->97 [style = bold, label=""];
91->93 [style = bold, label=""];
27->49 [style = dashed, label="0"];
8->32 [style = bold, label=""];
46->44 [style = solid, label="startTime"];
18->61 [style = solid, label="increment"];
24->99 [style = solid, label="increment"];
11->1 [style = bold, label=""];
39->71 [style = bold, label=""];
25->23 [style = bold, label=""];
18->72 [style = solid, label="startTime"];
62->52 [style = bold, label=""];
90->95 [style = bold, label=""];
46->58 [style = solid, label="startTime"];
18->76 [style = solid, label="startTime"];
28->11 [style = bold, label=""];
42->17 [style = bold, label=""];
39->3 [style = bold, label=""];
24->86 [style = solid, label="increment"];
46->50 [style = solid, label="startTime"];
16->82 [style = dashed, label="0"];
33->10 [style = bold, label=""];
18->36 [style = solid, label="increment"];
58->55 [style = bold, label=""];
24->85 [style = solid, label="increment"];
80->73 [style = bold, label=""];
24->84 [style = solid, label="increment"];
18->74 [style = solid, label="startTime"];
46->0 [style = solid, label="startTime"];
18->60 [style = solid, label="increment"];
36->80 [style = bold, label=""];
10->65 [style = dashed, label="0"];
20->5 [style = bold, label=""];
29->28 [style = bold, label=""];
53->49 [style = bold, label=""];
78->77 [style = bold, label=""];
46->37 [style = solid, label="startTime"];
18->83 [style = solid, label="startTime"];
18->80 [style = solid, label="startTime"];
18->93 [style = solid, label="startTime"];
24->7 [style = solid, label="increment"];
46->27 [style = solid, label="startTime"];
6->31 [style = bold, label=""];
18->69 [style = solid, label="startTime"];
4->30 [style = bold, label=""];
10->42 [style = bold, label=""];
12->25 [style = bold, label=""];
18->44 [style = solid, label="increment"];
55->1 [style = bold, label=""];
46->7 [style = solid, label="startTime"];
24->22 [style = solid, label="increment"];
18->28 [style = solid, label="increment"];
18->11 [style = solid, label="increment"];
34->62 [style = dashed, label="0"];
75->31 [style = bold, label=""];
24->96 [style = solid, label="increment"];
46->23 [style = solid, label="startTime"];
18->0 [style = solid, label="increment"];
6->75 [style = bold, label=""];
66->91 [style = bold, label=""];
44->27 [style = bold, label=""];
18->75 [style = solid, label="startTime"];
72->68 [style = bold, label=""];
18->47 [style = solid, label="increment"];
18->70 [style = solid, label="startTime"];
29->64 [style = dashed, label="0"];
79->40 [style = bold, label=""];
34->90 [style = bold, label=""];
}
