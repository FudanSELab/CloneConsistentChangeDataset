digraph {
10 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testDeleteConsumerGroupOffsetsRetriableErrors['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNull(errorResult1.partitionResult(tp1).get())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final DeleteConsumerGroupOffsetsResult result = env.adminClient().deleteConsumerGroupOffsets(GROUP_ID,Stream.of(tp1).collect(Collectors.toSet()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertNull(result.partitionResult(tp1).get())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "env.kafkaClient().prepareResponse(prepareOffsetDeleteResponse(Errors.COORDINATOR_LOAD_IN_PROGRESS))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.COORDINATOR_LOAD_IN_PROGRESS,Node.noNode()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertNull(result.all().get())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "env.kafkaClient().prepareResponse(prepareOffsetDeleteResponse(Errors.COORDINATOR_NOT_AVAILABLE))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "env.kafkaClient().prepareResponse(prepareOffsetDeleteResponse(\"foo\",0,Errors.NONE))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testDeleteConsumerGroupOffsetsFindCoordinatorRetriableErrors['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "env.kafkaClient().prepareResponse(prepareOffsetDeleteResponse(Errors.NOT_COORDINATOR))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "env.kafkaClient().prepareResponse(prepareOffsetDeleteResponse(Errors.COORDINATOR_NOT_AVAILABLE))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final TopicPartition tp1 = new TopicPartition(\"foo\",0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "env.kafkaClient().setNodeApiVersions(NodeApiVersions.create())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testDeleteConsumerGroupOffsetsRetriableErrors['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertNull(errorResult1.all().get())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final DeleteConsumerGroupOffsetsResult errorResult1 = env.adminClient().deleteConsumerGroupOffsets(GROUP_ID,Stream.of(tp1).collect(Collectors.toSet()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.COORDINATOR_NOT_AVAILABLE,Node.noNode()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
4->9 [style = bold, label=""];
14->3 [style = bold, label=""];
16->9 [style = bold, label=""];
7->11 [style = bold, label=""];
9->2 [style = bold, label=""];
8->3 [style = bold, label=""];
18->19 [style = bold, label=""];
0->15 [style = dashed, label="0"];
2->18 [style = bold, label=""];
19->10 [style = bold, label=""];
10->3 [style = bold, label=""];
3->15 [style = bold, label=""];
2->10 [style = bold, label=""];
10->7 [style = bold, label=""];
10->6 [style = bold, label=""];
3->0 [style = bold, label=""];
5->20 [style = dashed, label="0"];
15->17 [style = bold, label=""];
1->17 [style = dashed, label="0"];
0->1 [style = bold, label=""];
12->14 [style = bold, label=""];
11->8 [style = bold, label=""];
13->9 [style = bold, label=""];
6->7 [style = bold, label=""];
8->12 [style = bold, label=""];
17->20 [style = bold, label=""];
}
