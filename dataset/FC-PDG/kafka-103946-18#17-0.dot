digraph {
25 [style = filled, label = "expectedBytes += record.sizeInBytes()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "client.prepareResponse(FetchResponse.of(Errors.NONE,0,INVALID_SESSION_ID,new LinkedHashMap<>(partitions)))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "int v = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Map<TopicPartition,FetchResponse.PartitionData<MemoryRecords>> partitions = new HashMap<>()@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "partitions.put(tp1,new FetchResponse.PartitionData<>(Errors.NONE,100,FetchResponse.INVALID_LAST_STABLE_OFFSET,0L,null,MemoryRecords.withRecords(CompressionType.NONE,new SimpleRecord(\"val\".getBytes()))))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "partitions.put(tp0,new FetchResponse.PartitionData<>(Errors.NONE,100,FetchResponse.INVALID_LAST_STABLE_OFFSET,0L,null,records))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "fetchRecords(tp0,records,Errors.NONE,100L,0)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(3,(Double)recordsCountAverage.metricValue(),EPSILON)@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "buildFetcher()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(expectedBytes,(Double)fetchSizeAverage.metricValue(),EPSILON)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(1,fetcher.sendFetches())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int expectedBytes = 0@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "MemoryRecords records = builder.build()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "KafkaMetric fetchSizeAverage = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchSizeAvg))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "partitions.put(tp0,new FetchResponseData.PartitionData().setPartitionIndex(tp0.partition()).setHighWatermark(100).setLogStartOffset(0).setRecords(records))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "subscriptions.seek(tp1,5)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "record.offset() >= 1@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(expectedBytes,(Double)fetchSizeAverage.metricValue(),EPSILON)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "subscriptions.seek(tp0,0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "assertEquals(2,(Double)recordsCountAverage.metricValue(),EPSILON)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assignFromUser(Utils.mkSet(tp0,tp1))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testFetchResponseMetricsPartialResponse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "consumerClient.poll(time.timer(0))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assignFromUser(singleton(tp0))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "fetcher.fetchedRecords()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.prepareResponse(new FetchResponse<>(Errors.NONE,new LinkedHashMap<>(partitions),0,INVALID_SESSION_ID))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Map<TopicPartition,FetchResponseData.PartitionData> partitions = new HashMap<>()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "partitions.put(tp1,new FetchResponseData.PartitionData().setPartitionIndex(tp1.partition()).setHighWatermark(100).setLogStartOffset(0).setRecords(MemoryRecords.withRecords(CompressionType.NONE,new SimpleRecord(\"val\".getBytes()))))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "int expectedBytes = 0@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "subscriptions.seek(tp1,0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "v < 3@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "KafkaMetric recordsCountAverage = allMetrics.get(metrics.metricInstance(metricsRegistry.recordsPerRequestAvg))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "subscriptions.seek(tp0,1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "expectedBytes += record.sizeInBytes()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testFetchResponseMetricsWithOnePartitionAtTheWrongOffset['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "v++@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testFetchResponseMetricsWithOnePartitionAtTheWrongOffset['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25->0 [style = bold, label=""];
20->39 [style = solid, label="records"];
25->0 [style = solid, label="expectedBytes"];
17->26 [style = solid, label="v"];
13->16 [style = dotted, label="true"];
3->17 [style = solid, label="v"];
20->13 [style = bold, label=""];
13->32 [style = bold, label=""];
31->22 [style = bold, label=""];
23->5 [style = solid, label="partitions"];
7->27 [style = solid, label="records"];
29->30 [style = bold, label=""];
7->35 [style = solid, label="expectedBytes"];
2->6 [style = bold, label=""];
15->25 [style = bold, label=""];
6->21 [style = bold, label=""];
22->37 [style = bold, label=""];
32->13 [style = solid, label="v"];
13->26 [style = dotted, label="true"];
13->20 [style = dotted, label="true"];
1->34 [style = dashed, label="0"];
8->3 [style = bold, label=""];
23->28 [style = dashed, label="0"];
14->22 [style = bold, label=""];
23->4 [style = bold, label=""];
4->27 [style = dashed, label="0"];
19->11 [style = bold, label=""];
4->18 [style = bold, label=""];
24->40 [style = dashed, label="0"];
34->41 [style = bold, label=""];
41->6 [style = bold, label=""];
20->13 [style = solid, label="v"];
17->13 [style = solid, label="v"];
12->9 [style = bold, label=""];
9->8 [style = bold, label=""];
38->39 [style = bold, label=""];
17->20 [style = solid, label="v"];
17->32 [style = dotted, label="true"];
13->16 [style = bold, label=""];
20->26 [style = solid, label="v"];
11->15 [style = bold, label=""];
20->16 [style = solid, label="v"];
21->12 [style = bold, label=""];
7->4 [style = solid, label="records"];
5->19 [style = bold, label=""];
7->33 [style = bold, label=""];
30->19 [style = bold, label=""];
35->40 [style = bold, label=""];
3->13 [style = solid, label="v"];
17->16 [style = solid, label="v"];
32->17 [style = solid, label="v"];
33->39 [style = bold, label=""];
7->28 [style = bold, label=""];
38->35 [style = solid, label="expectedBytes"];
13->26 [style = bold, label=""];
13->7 [style = bold, label=""];
18->5 [style = bold, label=""];
0->24 [style = bold, label=""];
7->23 [style = bold, label=""];
37->34 [style = bold, label=""];
39->35 [style = bold, label=""];
22->10 [style = bold, label=""];
10->37 [style = dashed, label="0"];
3->17 [style = bold, label=""];
33->38 [style = bold, label=""];
1->2 [style = bold, label=""];
17->13 [style = bold, label=""];
12->3 [style = bold, label=""];
28->27 [style = bold, label=""];
33->38 [style = dotted, label="true"];
27->29 [style = bold, label=""];
20->7 [style = bold, label=""];
38->33 [style = bold, label=""];
10->1 [style = bold, label=""];
16->20 [style = bold, label=""];
3->32 [style = solid, label="v"];
17->13 [style = dotted, label="true"];
28->30 [style = solid, label="partitions"];
32->17 [style = bold, label=""];
26->20 [style = bold, label=""];
5->30 [style = dashed, label="0"];
17->20 [style = bold, label=""];
18->29 [style = dashed, label="0"];
36->22 [style = bold, label=""];
}
