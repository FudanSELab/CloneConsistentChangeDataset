digraph {
7 [style = filled, label = "double hsinX = Math.sin(diffX * 0.5)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "dist['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "final double lonCenterRad = this.lonCenter * DEGREES_TO_RADIANS@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "lastDistDoc = doc@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return result@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Map context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "lastDist = result@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "double hsinY = Math.sin(diffY * 0.5)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final FunctionValues lonVals = lonSource.getValues(context,readerContext)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final double latCenterRad_cos = this.latCenterRad_cos@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "double diffX = latCenterRad - latRad@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "dist['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "double latRad = lat * HaversineConstFunction.DEGREES_TO_RADIANS@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "double diffY = lonCenterRad - lonRad@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "double h = hsinX * hsinX + (latCenterRad_cos * Math.cos(latRad) * hsinY * hsinY)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "AtomicReaderContext readerContext@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final double latCenterRad = this.latCenter * DEGREES_TO_RADIANS@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "double lon@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "double result = (planetRadius * 2 * Math.atan2(Math.sqrt(h),Math.sqrt(1 - h)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "double latRad = lat * DistanceUtils.DEGREES_TO_RADIANS@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "double lat@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "double lat@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "double lonRad = lon * HaversineConstFunction.DEGREES_TO_RADIANS@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "double lonRad = lon * DistanceUtils.DEGREES_TO_RADIANS@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "getValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final FunctionValues latVals = latSource.getValues(context,readerContext)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return new DoubleDocValues(this){@Override public double doubleVal(int doc){double latRad = latVals.doubleVal(doc) * DEGREES_TO_RADIANSdouble lonRad = lonVals.doubleVal(doc) * DEGREES_TO_RADIANSdouble diffX = latCenterRad - latRaddouble diffY = lonCenterRad - lonRaddouble hsinX = Math.sin(diffX * 0.5)double hsinY = Math.sin(diffY * 0.5)double h = hsinX * hsinX + (latCenterRad_cos * Math.cos(latRad) * hsinY * hsinY)return (EARTH_MEAN_DIAMETER * Math.atan2(Math.sqrt(h),Math.sqrt(1 - h)))}@Override public String toString(int doc){return name() + '(' + latVals.toString(doc) + ',' + lonVals.toString(doc) + ',' + latCenter + ',' + lonCenter + ')'}}@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
14->16 [style = bold, label=""];
5->10 [style = bold, label=""];
16->13 [style = bold, label=""];
5->14 [style = dashed, label="0"];
22->19 [style = dotted, label="true"];
9->0 [style = bold, label=""];
7->12 [style = bold, label=""];
15->16 [style = solid, label="lon"];
20->23 [style = solid, label="context"];
12->11 [style = bold, label=""];
9->2 [style = solid, label="result"];
10->6 [style = solid, label="lonRad"];
14->13 [style = solid, label="latRad"];
26->25 [style = solid, label="latCenterRad"];
1->4 [style = dotted, label="true"];
16->6 [style = solid, label="lonRad"];
11->9 [style = bold, label=""];
22->23 [style = bold, label=""];
21->18 [style = bold, label=""];
26->21 [style = bold, label=""];
7->11 [style = solid, label="hsinX"];
24->26 [style = bold, label=""];
17->8 [style = dotted, label="true"];
23->24 [style = bold, label=""];
17->15 [style = dotted, label="true"];
5->13 [style = solid, label="latRad"];
22->20 [style = dotted, label="true"];
8->14 [style = solid, label="lat"];
3->2 [style = bold, label=""];
8->10 [style = solid, label="lon"];
10->13 [style = bold, label=""];
17->14 [style = bold, label=""];
19->24 [style = solid, label="readerContext"];
20->24 [style = solid, label="context"];
4->5 [style = solid, label="lat"];
1->8 [style = dotted, label="true"];
18->25 [style = bold, label=""];
18->25 [style = solid, label="latCenterRad_cos"];
11->9 [style = solid, label="h"];
13->7 [style = solid, label="diffX"];
10->16 [style = dashed, label="0"];
13->6 [style = bold, label=""];
5->11 [style = solid, label="latRad"];
21->25 [style = solid, label="lonCenterRad"];
12->11 [style = solid, label="hsinY"];
9->3 [style = solid, label="result"];
6->7 [style = bold, label=""];
6->12 [style = solid, label="diffY"];
19->23 [style = solid, label="readerContext"];
14->11 [style = solid, label="latRad"];
}
