digraph {
20 [style = filled, label = "a2Schema.setCacheEnabled(true)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(a2CalciteSchema.getTable(\"table1\",false),notNullValue())@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Util.discard(function)@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "aSchema.add(\"b\",new AbstractSchema())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(1))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "testSchemaCaching['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertThat(aSchema.getSubSchema(name),notNullValue())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(a2Schema.getTableNames().size(),equalTo(4))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertThat(aSchema.getSubSchema(name),notNullValue())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(2))@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "a2Schema.add(\"table1\",table)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "aSchema.setCacheEnabled(false)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertThat(a2CalciteSchema.getTable(\"taBle1\",false),notNullValue())@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testSimpleCalciteSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(a2CalciteSchema.getTable(\"table1\",true),notNullValue())@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "aSchema.setCacheEnabled(true)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertThat(a2CalciteSchema.getTable(\"taBle1\",true),nullValue())@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final TableMacro function = ViewTable.viewMacro(a2Schema,\"values 1\",null,null,null)@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(aSchema.getSubSchema(\"c\"),notNullValue())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(0))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "a2SubSchemaMap.put(\"b4\",new AbstractSchema())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(3))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "a2Schema.setCacheEnabled(false)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final SchemaPlus aSchema = rootSchema.add(\"a\",new AbstractSchema(){@Override protected Map<String,Schema> getSubSchemaMap(){return aSubSchemaMap}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(0))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "aSubSchemaMap.put(\"b\",new AbstractSchema())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "aSchema.add(\"b3\",new AbstractSchema())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "final CalciteConnection calciteConnection = connection.unwrap()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final TableInRootSchemaTest.SimpleTable table = new TableInRootSchemaTest.SimpleTable()@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(2))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(2))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "final Connection connection = CalciteAssert.that(CalciteAssert.Config.JDBC_FOODMART).connect()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "connection.close()@@@67@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "aSubSchemaMap.put(\"b4\",new AbstractSchema())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testSimpleCalciteSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "final SchemaPlus aSchema = rootSchema.add(\"a\",new AbstractSchema(){@Override protected Map<String,Schema> getSubSchemaMap(){return aSubSchemaMap}})@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(4))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "aSubSchemaMap.put(\"b1\",new AbstractSchema())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(aSchema.getSubSchema(\"b\"),notNullValue())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "aSubSchemaMap.put(\"c\",new AbstractSchema())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final SchemaPlus a2Schema = rootSchema.add(\"a\",new AbstractSchema(){@Override protected Map<String,Schema> getSubSchemaMap(){return a2SubSchemaMap}})@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(0))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "a2Schema.add(\"tabLe2\",table)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final Map<String,Schema> a2SubSchemaMap = new HashMap<>()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "aSchema.setCacheEnabled(true)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "aSubSchemaMap.put(\"b2\",new AbstractSchema())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "aSchema.setCacheEnabled(false)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(0))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(2))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final SchemaPlus rootSchema = calciteConnection.getRootSchema()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "a2Schema.add(\"tabLe1\",table)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(1))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "Thread.sleep(1)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final SchemaPlus rootSchema = CalciteSchema.createRootSchema(false,false).plus()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final CalciteSchema a2CalciteSchema = CalciteSchema.from(a2Schema)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final Map<String,Schema> aSubSchemaMap = new HashMap<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertThat(aSchema.getSubSchema(\"b1\"),notNullValue())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(0))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "a2SubSchemaMap.put(\"b3\",new AbstractSchema())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "a2Schema.add(\"TABLE1\",table)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertThat(aSchema.getSubSchema(\"b1\"),nullValue())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final Map<String,Schema> aSubSchemaMap = new HashMap<>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(0))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
27->13 [style = bold, label=""];
42->23 [style = bold, label=""];
32->61 [style = bold, label=""];
15->38 [style = bold, label=""];
53->25 [style = bold, label=""];
25->28 [style = bold, label=""];
39->57 [style = solid, label="aSubSchemaMap"];
1->8 [style = bold, label=""];
49->16 [style = bold, label=""];
44->62 [style = bold, label=""];
33->31 [style = solid, label="table"];
28->34 [style = bold, label=""];
35->55 [style = bold, label=""];
40->56 [style = bold, label=""];
4->6 [style = bold, label=""];
51->54 [style = bold, label=""];
26->36 [style = solid, label="a2Schema"];
31->24 [style = bold, label=""];
9->4 [style = bold, label=""];
0->23 [style = dashed, label="0"];
17->58 [style = bold, label=""];
23->15 [style = bold, label=""];
16->26 [style = bold, label=""];
57->29 [style = bold, label=""];
21->48 [style = bold, label=""];
36->32 [style = bold, label=""];
54->41 [style = bold, label=""];
11->46 [style = bold, label=""];
56->17 [style = bold, label=""];
9->4 [style = solid, label="aSubSchemaMap"];
20->22 [style = bold, label=""];
58->44 [style = bold, label=""];
6->2 [style = bold, label=""];
60->49 [style = bold, label=""];
13->60 [style = bold, label=""];
39->57 [style = bold, label=""];
26->53 [style = solid, label="a2Schema"];
30->11 [style = bold, label=""];
52->43 [style = bold, label=""];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
34->59 [style = bold, label=""];
6->29 [style = dashed, label="0"];
16->26 [style = solid, label="a2SubSchemaMap"];
10->8 [style = bold, label=""];
18->39 [style = bold, label=""];
3->7 [style = bold, label=""];
22->12 [style = bold, label=""];
29->42 [style = bold, label=""];
33->52 [style = solid, label="table"];
46->27 [style = bold, label=""];
50->40 [style = bold, label=""];
33->43 [style = solid, label="table"];
12->14 [style = bold, label=""];
8->9 [style = bold, label=""];
45->47 [style = bold, label=""];
48->19 [style = bold, label=""];
14->50 [style = bold, label=""];
59->36 [style = bold, label=""];
37->52 [style = bold, label=""];
47->21 [style = bold, label=""];
62->33 [style = bold, label=""];
36->32 [style = solid, label="function"];
33->37 [style = solid, label="table"];
38->35 [style = bold, label=""];
33->37 [style = bold, label=""];
24->53 [style = bold, label=""];
41->18 [style = bold, label=""];
55->45 [style = bold, label=""];
26->20 [style = bold, label=""];
43->31 [style = bold, label=""];
19->30 [style = bold, label=""];
}
