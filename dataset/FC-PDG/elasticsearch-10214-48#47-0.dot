digraph {
1 [style = filled, label = "mappers.put(type.typeName(),type.parser())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "throw new IllegalArgumentException(\"Mapper (\" + entry.getKey() + \"( is already registered\")@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "mappers.put(entry.getKey(),entry.getValue()) != null@@@27@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "mappers.put(type.typeName(),type.parser())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "mappers.put(BinaryFieldMapper.CONTENT_TYPE,BinaryFieldMapper.PARSER)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "mappers.put(TextFieldMapper.CONTENT_TYPE,TextFieldMapper.PARSER)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "mappers.put(FieldAliasMapper.CONTENT_TYPE,new FieldAliasMapper.TypeParser())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "mappers.put(IpFieldMapper.CONTENT_TYPE,IpFieldMapper.PARSER)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "mappers.put(SearchAsYouTypeFieldMapper.CONTENT_TYPE,SearchAsYouTypeFieldMapper.PARSER)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "mappers.put(FieldAliasMapper.CONTENT_TYPE,new FieldAliasMapper.TypeParser())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "mappers.put(CompletionFieldMapper.CONTENT_TYPE,CompletionFieldMapper.PARSER)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "mappers.put(KeywordFieldMapper.CONTENT_TYPE,KeywordFieldMapper.PARSER)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "mappers.put(nanoseconds.type(),DateFieldMapper.NANOS_PARSER)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "mappers.put(CompletionFieldMapper.CONTENT_TYPE,CompletionFieldMapper.PARSER)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "mappers.put(GeoPointFieldMapper.CONTENT_TYPE,GeoPointFieldMapper.PARSER)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "mappers.put(ObjectMapper.NESTED_CONTENT_TYPE,new ObjectMapper.TypeParser())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "getMappers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "getMappers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "mappers.put(RankFeaturesFieldMapper.CONTENT_TYPE,RankFeaturesFieldMapper.PARSER)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return Collections.unmodifiableMap(mappers)@@@32@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "mappers.put(entry.getKey(),entry.getValue()) != null@@@26@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "mappers.put(GeoPointFieldMapper.CONTENT_TYPE,GeoPointFieldMapper.PARSER)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "mappers.put(TokenCountFieldMapper.CONTENT_TYPE,TokenCountFieldMapper.PARSER)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "return Collections.unmodifiableMap(mappers)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "getMappers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "mappers.put(milliseconds.type(),DateFieldMapper.MILLIS_PARSER)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "mappers.put(RankFeatureFieldMapper.CONTENT_TYPE,RankFeatureFieldMapper.PARSER)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "mappers.put(ObjectMapper.CONTENT_TYPE,new ObjectMapper.TypeParser())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return Collections.unmodifiableMap(mappers)@@@31@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "mappers.put(TextFieldMapper.CONTENT_TYPE,TextFieldMapper.PARSER)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "mappers.put(BooleanFieldMapper.CONTENT_TYPE,BooleanFieldMapper.PARSER)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<String,Mapper.TypeParser> mappers = new LinkedHashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<MapperPlugin> mapperPlugins@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "DateFieldMapper.Resolution nanoseconds = DateFieldMapper.Resolution.NANOSECONDS@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "mappers.put(ScaledFloatFieldMapper.CONTENT_TYPE,ScaledFloatFieldMapper.PARSER)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "mappers.put(FlattenedFieldMapper.CONTENT_TYPE,FlattenedFieldMapper.PARSER)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "DateFieldMapper.Resolution milliseconds = DateFieldMapper.Resolution.MILLISECONDS@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "throw new IllegalArgumentException(\"Mapper (\" + entry.getKey() + \"( is already registered\")@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14->24 [style = dashed, label="0"];
0->16 [style = bold, label=""];
15->10 [style = bold, label=""];
20->13 [style = bold, label=""];
7->17 [style = bold, label=""];
0->26 [style = bold, label=""];
28->15 [style = bold, label=""];
32->37 [style = bold, label=""];
3->1 [style = bold, label=""];
33->3 [style = bold, label=""];
3->23 [style = solid, label="mappers"];
1->35 [style = dashed, label="0"];
4->6 [style = bold, label=""];
25->23 [style = bold, label=""];
3->31 [style = bold, label=""];
8->2 [style = dotted, label="true"];
11->6 [style = bold, label=""];
11->4 [style = bold, label=""];
8->3 [style = bold, label=""];
27->3 [style = bold, label=""];
12->20 [style = bold, label=""];
4->11 [style = dotted, label="true"];
29->25 [style = bold, label=""];
36->32 [style = bold, label=""];
14->19 [style = bold, label=""];
3->6 [style = solid, label="mappers"];
27->2 [style = dotted, label="true"];
29->23 [style = bold, label=""];
25->29 [style = bold, label=""];
25->29 [style = dotted, label="true"];
15->18 [style = bold, label=""];
10->7 [style = bold, label=""];
22->30 [style = bold, label=""];
1->9 [style = bold, label=""];
9->37 [style = dashed, label="0"];
26->16 [style = bold, label=""];
17->24 [style = bold, label=""];
3->34 [style = solid, label="mappers"];
30->28 [style = bold, label=""];
31->35 [style = bold, label=""];
18->10 [style = bold, label=""];
5->0 [style = bold, label=""];
17->14 [style = bold, label=""];
24->25 [style = bold, label=""];
37->34 [style = bold, label=""];
9->5 [style = bold, label=""];
13->15 [style = bold, label=""];
13->22 [style = bold, label=""];
35->36 [style = bold, label=""];
4->11 [style = bold, label=""];
16->12 [style = bold, label=""];
21->4 [style = bold, label=""];
19->21 [style = bold, label=""];
}
