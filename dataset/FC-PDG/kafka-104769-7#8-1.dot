digraph {
1 [style = filled, label = "retryWithToleranceOperator.metrics(errorHandlingMetrics)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Schema valSchema = SchemaBuilder.struct().field(\"val\",Schema.INT32_SCHEMA).build()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "EasyMock.expect(workerSourceTask.isStopping()).andReturn(false)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertSourceMetricValue(\"source-record-write-total\",0.0)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "reportProps.put(ConnectorConfig.ERRORS_LOG_INCLUDE_MESSAGES_CONFIG,\"true\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "PowerMock.replayAll()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "workerSourceTask.execute()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testErrorHandlingInSourceTasks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "PowerMock.verifyAll()@@@37@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testErrorHandlingInSourceTasks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "workerSourceTask.initialize(TASK_CONFIG)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertErrorHandlingMetricValue(\"total-record-failures\",8.0)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "SourceRecord record2 = new SourceRecord(emptyMap(),emptyMap(),TOPIC,PARTITION1,valSchema,struct2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertErrorHandlingMetricValue(\"total-records-skipped\",0.0)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "EasyMock.expect(producer.send(EasyMock.anyObject(),EasyMock.anyObject())).andReturn(null).times(2)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertErrorHandlingMetricValue(\"total-record-errors\",0.0)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "EasyMock.expectLastCall().times(2)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "offsetWriter.offset(EasyMock.anyObject(),EasyMock.anyObject())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "createSourceTask(initialState,retryWithToleranceOperator,badConverter())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "LogReporter reporter = new LogReporter(taskId,connConfig(reportProps),errorHandlingMetrics)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "createSourceTask(initialState,retryWithToleranceOperator)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertErrorHandlingMetricValue(\"total-record-failures\",4.0)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "EasyMock.expect(workerSourceTask.isStopping()).andReturn(true)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "reportProps.put(ConnectorConfig.ERRORS_LOG_ENABLE_CONFIG,\"true\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Map<String,String> reportProps = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SourceRecord record1 = new SourceRecord(emptyMap(),emptyMap(),TOPIC,PARTITION1,valSchema,struct1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "EasyMock.expect(sourceTask.poll()).andReturn(singletonList(record1))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "retryWithToleranceOperator.reporters(singletonList(reporter))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testErrorHandlingInSourceTasksWthBadConverter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertSourceMetricValue(\"source-record-poll-total\",2.0)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Struct struct2 = new Struct(valSchema).put(\"val\",6789)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.expectLastCall()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "expectTopicCreation(TOPIC)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "EasyMock.expect(sourceTask.poll()).andReturn(singletonList(record2))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "EasyMock.expect(workerSourceTask.isStopping()).andReturn(false)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Struct struct1 = new Struct(valSchema).put(\"val\",1234)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "EasyMock.expectLastCall()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sourceTask.start(EasyMock.anyObject())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "RetryWithToleranceOperator retryWithToleranceOperator = operator()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "sourceTask.initialize(EasyMock.anyObject())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "EasyMock.expect(workerSourceTask.commitOffsets()).andReturn(true)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->16 [style = bold, label=""];
19->34 [style = bold, label=""];
0->16 [style = solid, label="struct1"];
11->17 [style = solid, label="struct2"];
16->11 [style = bold, label=""];
23->27 [style = bold, label=""];
27->7 [style = solid, label="reporter"];
39->34 [style = bold, label=""];
31->24 [style = bold, label=""];
27->28 [style = bold, label=""];
33->4 [style = bold, label=""];
12->15 [style = bold, label=""];
35->32 [style = bold, label=""];
32->14 [style = bold, label=""];
10->3 [style = bold, label=""];
3->6 [style = bold, label=""];
36->32 [style = bold, label=""];
17->24 [style = solid, label="record2"];
28->1 [style = bold, label=""];
34->16 [style = solid, label="valSchema"];
28->39 [style = solid, label="retryWithToleranceOperator"];
30->18 [style = bold, label=""];
1->7 [style = bold, label=""];
16->31 [style = solid, label="record1"];
34->0 [style = bold, label=""];
20->33 [style = bold, label=""];
8->22 [style = bold, label=""];
15->26 [style = bold, label=""];
21->2 [style = bold, label=""];
37->9 [style = bold, label=""];
38->32 [style = bold, label=""];
32->27 [style = solid, label="reportProps"];
26->31 [style = bold, label=""];
10->40 [style = dashed, label="0"];
14->23 [style = bold, label=""];
34->17 [style = solid, label="valSchema"];
19->39 [style = dashed, label="0"];
25->12 [style = bold, label=""];
7->39 [style = bold, label=""];
40->3 [style = bold, label=""];
24->37 [style = bold, label=""];
28->19 [style = solid, label="retryWithToleranceOperator"];
22->10 [style = bold, label=""];
18->25 [style = bold, label=""];
11->17 [style = bold, label=""];
5->30 [style = bold, label=""];
13->21 [style = bold, label=""];
9->29 [style = bold, label=""];
7->19 [style = bold, label=""];
4->5 [style = bold, label=""];
24->9 [style = bold, label=""];
2->8 [style = bold, label=""];
22->40 [style = bold, label=""];
17->20 [style = bold, label=""];
29->13 [style = bold, label=""];
}
