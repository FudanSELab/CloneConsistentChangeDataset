digraph {
44 [style = filled, label = "supplier = new MockProcessorSupplier<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "driver.flushState()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "table2 = builder.table(topic2,consumed)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(streamTopic,tableTopic)),copartitionGroups.iterator().next())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "i++@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,\"X2+null\"),kv(3,\"X3+null\"))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int i = 1@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ba2d91@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "i++@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "getter.init(driver.context())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "driver.flushState()@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "i < 2@@@61@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "driver.flushState()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "i < 2@@@34@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "table1 = builder.table(topic1,consumed)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "i++@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "driver.flushState()@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "i < 2@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "joined = table1.outerJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "driver.process(topic1,expectedKeys(i(,null)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < 3@@@75@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,null),kv(2,\"null+YY2\"),kv(3,\"XX3+YY3\"))@@@81@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "joined.toStream().process(supplier)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int i = 0@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "driver.flushState()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "driver.flushState()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final KTable<Integer,String> table1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "driver.flushState()@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "int i = 0@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "driver.setUp(builder,stateDir)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final KTable<Integer,String> table2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "final KTable<Integer,String> joined@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "driver.flushState()@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "i++@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "processor.checkAndClearProcessResult(\"1:null\",\"2:null+YY2\")@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "shouldRequireCopartitionedStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int i = 0@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42->41 [style = bold, label=""];
70->69 [style = bold, label=""];
15->54 [style = bold, label=""];
63->1 [style = dotted, label="true"];
24->34 [style = bold, label=""];
50->2 [style = bold, label=""];
37->15 [style = bold, label=""];
62->55 [style = bold, label=""];
48->61 [style = bold, label=""];
33->14 [style = dotted, label="true"];
54->61 [style = dotted, label="true"];
57->1 [style = solid, label="i"];
60->24 [style = bold, label=""];
50->4 [style = solid, label="getter"];
22->4 [style = bold, label=""];
59->33 [style = solid, label="i"];
57->63 [style = bold, label=""];
39->64 [style = bold, label=""];
19->53 [style = solid, label="i"];
2->59 [style = bold, label=""];
19->8 [style = solid, label="i"];
25->66 [style = dashed, label="0"];
27->33 [style = bold, label=""];
28->3 [style = bold, label=""];
47->60 [style = bold, label=""];
41->58 [style = bold, label=""];
33->27 [style = dotted, label="true"];
23->44 [style = bold, label=""];
6->1 [style = solid, label="i"];
50->40 [style = solid, label="getter"];
63->1 [style = bold, label=""];
33->28 [style = bold, label=""];
68->70 [style = bold, label=""];
11->18 [style = bold, label=""];
0->62 [style = bold, label=""];
36->30 [style = bold, label=""];
44->18 [style = solid, label="supplier"];
52->0 [style = bold, label=""];
61->48 [style = solid, label="i"];
71->68 [style = bold, label=""];
56->13 [style = bold, label=""];
18->25 [style = bold, label=""];
29->38 [style = bold, label=""];
31->47 [style = bold, label=""];
63->16 [style = bold, label=""];
16->20 [style = bold, label=""];
38->17 [style = bold, label=""];
65->29 [style = bold, label=""];
65->48 [style = solid, label="expectedKeys"];
6->57 [style = solid, label="i"];
18->66 [style = bold, label=""];
50->49 [style = solid, label="getter"];
54->7 [style = bold, label=""];
65->1 [style = solid, label="expectedKeys"];
49->35 [style = bold, label=""];
26->53 [style = bold, label=""];
35->9 [style = bold, label=""];
61->54 [style = solid, label="i"];
9->31 [style = bold, label=""];
43->36 [style = bold, label=""];
54->48 [style = dotted, label="true"];
52->69 [style = dashed, label="0"];
40->19 [style = bold, label=""];
13->25 [style = solid, label="builder"];
27->33 [style = solid, label="i"];
15->61 [style = solid, label="i"];
65->26 [style = solid, label="expectedKeys"];
53->26 [style = solid, label="i"];
50->47 [style = solid, label="getter"];
17->23 [style = bold, label=""];
66->12 [style = bold, label=""];
51->37 [style = bold, label=""];
1->57 [style = bold, label=""];
53->8 [style = bold, label=""];
21->49 [style = bold, label=""];
55->50 [style = bold, label=""];
14->27 [style = bold, label=""];
59->33 [style = bold, label=""];
61->54 [style = bold, label=""];
6->63 [style = bold, label=""];
5->40 [style = bold, label=""];
34->43 [style = bold, label=""];
64->32 [style = bold, label=""];
46->11 [style = solid, label="table2"];
50->39 [style = solid, label="getter"];
45->39 [style = bold, label=""];
50->43 [style = solid, label="getter"];
13->65 [style = bold, label=""];
15->54 [style = solid, label="i"];
50->58 [style = solid, label="getter"];
32->5 [style = bold, label=""];
8->26 [style = dotted, label="true"];
33->14 [style = bold, label=""];
50->37 [style = solid, label="getter"];
67->13 [style = bold, label=""];
6->63 [style = solid, label="i"];
4->6 [style = bold, label=""];
10->46 [style = bold, label=""];
44->10 [style = bold, label=""];
54->48 [style = bold, label=""];
3->22 [style = bold, label=""];
19->26 [style = solid, label="i"];
53->8 [style = solid, label="i"];
19->8 [style = bold, label=""];
27->14 [style = solid, label="i"];
46->11 [style = bold, label=""];
65->14 [style = solid, label="expectedKeys"];
7->45 [style = bold, label=""];
20->21 [style = bold, label=""];
30->51 [style = bold, label=""];
8->42 [style = bold, label=""];
57->63 [style = solid, label="i"];
25->12 [style = bold, label=""];
15->48 [style = solid, label="i"];
13->62 [style = solid, label="builder"];
12->52 [style = bold, label=""];
59->14 [style = solid, label="i"];
8->53 [style = dotted, label="true"];
63->57 [style = dotted, label="true"];
59->27 [style = solid, label="i"];
8->26 [style = bold, label=""];
}
