digraph {
7 [style = filled, label = "_localctx.exception = re@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "enterRule(_localctx,68,RULE_arguments)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "{exitRule()}@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "RecognitionException re@@@44@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RecognitionException re@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return _localctx@@@52@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int _la@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "enterOuterAlt(_localctx,1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "arguments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "arguments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "SourceContext _localctx = new SourceContext(_ctx,getState())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "{exitRule()}@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return _localctx@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "source['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "_errHandler.reportError(this,re)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "_localctx.exception = re@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int _alt@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "_errHandler.reportError(this,re)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "enterRule(_localctx,0,RULE_source)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ArgumentsContext _localctx = new ArgumentsContext(_ctx,getState())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "{setState(71)_errHandler.sync(this)_alt = getInterpreter().adaptivePredict(_input,0,_ctx)while (_alt != 2 && _alt != org.antlr.v4.runtime.atn.ATN.INVALID_ALT_NUMBER) {if (_alt == 1) {{{setState(68)function()}}}setState(73)_errHandler.sync(this)_alt = getInterpreter().adaptivePredict(_input,0,_ctx)}setState(77)_errHandler.sync(this)_la = _input.LA(1)while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << LBRACE) | (1L << LP) | (1L << IF) | (1L << WHILE) | (1L << DO) | (1L << FOR) | (1L << CONTINUE) | (1L << BREAK) | (1L << RETURN) | (1L << NEW) | (1L << TRY) | (1L << THROW) | (1L << BOOLNOT) | (1L << BWNOT) | (1L << ADD) | (1L << SUB) | (1L << INCR) | (1L << DECR))) != 0) || ((((_la - 72)) & ~0x3f) == 0 && ((1L << (_la - 72)) & ((1L << (OCTAL - 72)) | (1L << (HEX - 72)) | (1L << (INTEGER - 72)) | (1L << (DECIMAL - 72)) | (1L << (STRING - 72)) | (1L << (REGEX - 72)) | (1L << (TRUE - 72)) | (1L << (FALSE - 72)) | (1L << (NULL - 72)) | (1L << (TYPE - 72)) | (1L << (ID - 72)))) != 0)) {{{setState(74)statement()}}setState(79)_errHandler.sync(this)_la = _input.LA(1)}setState(80)match(EOF)}@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "_errHandler.recover(this,re)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "enterRule(_localctx,58,RULE_arguments)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17->5 [style = solid, label="_localctx"];
17->21 [style = solid, label="_localctx"];
7->11 [style = bold, label=""];
4->6 [style = bold, label=""];
22->16 [style = bold, label=""];
2->6 [style = bold, label=""];
8->12 [style = solid, label="_localctx"];
8->5 [style = solid, label="_localctx"];
11->4 [style = bold, label=""];
0->4 [style = dotted, label="true"];
1->19 [style = dashed, label="0"];
1->3 [style = bold, label=""];
20->14 [style = bold, label=""];
9->8 [style = bold, label=""];
8->10 [style = solid, label="_localctx"];
17->19 [style = bold, label=""];
0->7 [style = bold, label=""];
3->18 [style = bold, label=""];
18->2 [style = solid, label="_alt"];
8->1 [style = bold, label=""];
1->12 [style = dashed, label="0"];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
15->17 [style = bold, label=""];
22->20 [style = dotted, label="true"];
18->5 [style = bold, label=""];
6->10 [style = bold, label=""];
17->19 [style = solid, label="_localctx"];
2->14 [style = bold, label=""];
22->16 [style = dotted, label="true"];
8->1 [style = solid, label="_localctx"];
4->20 [style = bold, label=""];
8->17 [style = dashed, label="0"];
12->3 [style = bold, label=""];
14->21 [style = bold, label=""];
0->7 [style = dotted, label="true"];
13->8 [style = bold, label=""];
16->4 [style = bold, label=""];
22->4 [style = dotted, label="true"];
0->11 [style = dotted, label="true"];
19->3 [style = bold, label=""];
8->12 [style = bold, label=""];
3->2 [style = solid, label="_la"];
}
