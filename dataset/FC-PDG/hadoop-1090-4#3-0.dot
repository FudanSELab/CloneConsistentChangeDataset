digraph {
2 [style = filled, label = "RMApp app = rm.submitApp(1024)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "conf.setInt(MRJobConfig.MAX_TASK_FAILURES_PER_TRACKER,1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "MyResourceManager rm = new MyResourceManager(conf)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "MyContainerAllocator allocator = new MyContainerAllocator(rm,conf,appAttemptId,mockJob)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "LOG.info(\"Running testResource\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "nodeManager3.nodeHeartbeat(true)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "rm.drainEvents()@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "JobId jobId = MRBuilderUtils.newJobId(appAttemptId.getApplicationId(),0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "rm.drainEvents()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Configuration conf = new Configuration()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ApplicationAttemptId appAttemptId = app.getCurrentAppAttempt().getAppAttemptId()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ContainerRequestEvent event2 = createReq(jobId,2,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ecce1)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "ContainerRequestEvent event1 = createReq(jobId,1,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ed030)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "checkAssignments(new ContainerRequestEvent((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ed080,assigned,false)@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "Assert.assertTrue(\"No of assignments must be 3\",assigned.size() == 3)@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertBlacklistAdditionsAndRemovals(2,0,rm)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "rm.drainEvents()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assigned = allocator.schedule()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "allocator.sendFailure(f2)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(mockJob.getReport()).thenReturn(MRBuilderUtils.newJobReport(jobId,\"job\",\"user\",JobState.RUNNING,0,0,0,0,0,0,0,\"jobfile\",null,false,\"\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "rm.drainEvents()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Job mockJob = mock()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "allocator.sendRequest(event2)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "allocator.sendFailure(f1)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assigned = allocator.schedule()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "LOG.info(\"Running testBlackListedNodes\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(\"Assigned container host not correct\",\"h3\".equals(assig.getContainer().getNodeId().getHost()))@@@67@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assigned = allocator.schedule()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "ContainerRequestEvent event2 = createReq(jobId,2,2048,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ed042)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "ContainerFailedEvent f1 = createFailEvent(jobId,1,\"h1\",false)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "allocator.sendRequest(event1)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "ContainerRequestEvent event1 = ContainerRequestCreator.createRequest(jobId,1,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ece8a)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "ContainerRequestEvent event3 = ContainerRequestCreator.createRequest(jobId,3,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4eceb8)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "rm.drainEvents()@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "ContainerRequestEvent event2 = ContainerRequestCreator.createRequest(jobId,2,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ecea1)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "rm.drainEvents()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertBlacklistAdditionsAndRemovals(0,0,rm)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "conf.setInt(MRJobConfig.MR_AM_IGNORE_BLACKLISTING_BLACKLISTED_NODE_PERECENT,-1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "nodeManager2.nodeHeartbeat(false)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "nodeManager1.nodeHeartbeat(false)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MockNM nodeManager1 = rm.registerNode(\"h1:1234\",10240)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "rm.drainEvents()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "testResource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "rm.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "rm.drainEvents()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testBlackListedNodes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"amNM:1234\",2048)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testBlackListedNodes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "nodeManager1.nodeHeartbeat(true)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "MockNM nodeManager3 = rm.registerNode(\"h3:1234\",10240)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "rm.drainEvents()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<TaskAttemptContainerAssignedEvent> assigned = allocator.schedule()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "MockNM nodeManager2 = rm.registerNode(\"h2:1234\",10240)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertBlacklistAdditionsAndRemovals(0,0,rm)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "rm.sendAMLaunched(appAttemptId)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "rm.drainEvents()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ContainerFailedEvent f2 = createFailEvent(jobId,1,\"h2\",false)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "allocator.sendRequest(event3)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "conf.setBoolean(MRJobConfig.MR_AM_JOB_NODE_BLACKLISTING_ENABLE,true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "rm.drainEvents()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ContainerRequestEvent event3 = createReq(jobId,3,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4eccf3)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "nodeManager2.nodeHeartbeat(true)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
47->9 [style = bold, label=""];
6->57 [style = bold, label=""];
26->10 [style = bold, label=""];
19->53 [style = solid, label="jobId"];
17->44 [style = solid, label="conf"];
50->2 [style = bold, label=""];
13->34 [style = solid, label="appAttemptId"];
41->26 [style = solid, label="rm"];
40->1 [style = solid, label="event1"];
19->37 [style = solid, label="jobId"];
8->0 [style = bold, label=""];
39->60 [style = bold, label=""];
41->27 [style = solid, label="rm"];
23->22 [style = bold, label=""];
3->7 [style = solid, label="f2"];
20->48 [style = bold, label=""];
16->14 [style = bold, label=""];
49->56 [style = bold, label=""];
23->12 [style = bold, label=""];
56->53 [style = bold, label=""];
43->58 [style = bold, label=""];
60->1 [style = bold, label=""];
37->59 [style = dashed, label="0"];
10->11 [style = bold, label=""];
37->66 [style = dashed, label="0"];
13->34 [style = bold, label=""];
48->63 [style = dashed, label="0"];
19->66 [style = solid, label="jobId"];
61->29 [style = solid, label="event3"];
23->61 [style = bold, label=""];
17->41 [style = bold, label=""];
30->26 [style = bold, label=""];
66->23 [style = solid, label="event2"];
19->61 [style = solid, label="jobId"];
42->31 [style = bold, label=""];
55->38 [style = bold, label=""];
11->43 [style = bold, label=""];
48->17 [style = bold, label=""];
18->28 [style = bold, label=""];
40->60 [style = dashed, label="0"];
0->36 [style = bold, label=""];
22->49 [style = bold, label=""];
19->14 [style = solid, label="jobId"];
12->29 [style = solid, label="event3"];
7->24 [style = bold, label=""];
12->29 [style = bold, label=""];
21->65 [style = bold, label=""];
44->4 [style = bold, label=""];
3->7 [style = bold, label=""];
17->41 [style = solid, label="conf"];
38->47 [style = bold, label=""];
1->59 [style = bold, label=""];
62->48 [style = bold, label=""];
13->44 [style = solid, label="appAttemptId"];
61->29 [style = bold, label=""];
41->50 [style = bold, label=""];
19->40 [style = solid, label="jobId"];
17->46 [style = bold, label=""];
19->60 [style = solid, label="jobId"];
31->32 [style = bold, label=""];
41->6 [style = solid, label="rm"];
35->39 [style = bold, label=""];
58->65 [style = solid, label="assigned"];
32->27 [style = bold, label=""];
37->23 [style = solid, label="event2"];
56->24 [style = bold, label=""];
4->33 [style = bold, label=""];
46->18 [style = bold, label=""];
28->41 [style = bold, label=""];
66->65 [style = solid, label="event2"];
19->16 [style = bold, label=""];
54->42 [style = bold, label=""];
41->44 [style = solid, label="rm"];
34->51 [style = bold, label=""];
16->44 [style = solid, label="mockJob"];
27->55 [style = bold, label=""];
19->12 [style = solid, label="jobId"];
63->17 [style = bold, label=""];
39->40 [style = bold, label=""];
57->15 [style = bold, label=""];
19->3 [style = solid, label="jobId"];
25->54 [style = bold, label=""];
1->37 [style = bold, label=""];
40->65 [style = solid, label="event1"];
1->66 [style = bold, label=""];
52->11 [style = bold, label=""];
66->23 [style = bold, label=""];
33->35 [style = bold, label=""];
59->23 [style = solid, label="event2"];
21->6 [style = bold, label=""];
53->5 [style = bold, label=""];
59->23 [style = bold, label=""];
60->1 [style = solid, label="event1"];
64->63 [style = bold, label=""];
9->30 [style = bold, label=""];
45->13 [style = bold, label=""];
37->23 [style = bold, label=""];
14->44 [style = bold, label=""];
19->59 [style = solid, label="jobId"];
40->1 [style = bold, label=""];
52->25 [style = bold, label=""];
12->61 [style = dashed, label="0"];
58->21 [style = bold, label=""];
24->52 [style = bold, label=""];
29->22 [style = bold, label=""];
36->45 [style = bold, label=""];
53->5 [style = solid, label="f1"];
51->19 [style = bold, label=""];
2->8 [style = bold, label=""];
}
