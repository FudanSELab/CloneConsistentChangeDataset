digraph {
31 [style = filled, label = "when(projectMapper.queryByName(projectName)).thenReturn(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Project project = getProject(projectName)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorEmptyRes.get(Constants.STATUS))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "when(usersService.getUserIdByName(loginUser.getUserName())).thenReturn(-1)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "List<ProcessInstance> processInstanceList = new ArrayList<>()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String projectName = \"project_test1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Map<String,Object> executorNullRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"test_user\",\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "when(usersService.getUserIdByName(loginUser.getUserName())).thenReturn(loginUser.getId())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Map<String,Object> executorNullDateRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",null,null,\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Map<String,Object> result = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getCode()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),any(),any())).thenReturn(pageReturn)@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getId()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),any(),any())).thenReturn(pageReturn)@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "when(processInstanceMapper.queryProcessInstanceListPaging(Mockito.any(),eq(project.getId()),eq(1),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),eq(start),eq(end))).thenReturn(pageReturn)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorExistRes.get(Constants.STATUS))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Date start = DateUtils.getScheduleDate(\"2020-01-01 00:00:00\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorNullRes.get(Constants.STATUS))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getCode()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),any(),any())).thenReturn(pageReturn)@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "when(processService.findProcessInstanceDetailById(taskInstance.getProcessInstanceId())).thenReturn(processInstance)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getCode()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),eq(start),eq(end))).thenReturn(pageReturn)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "Map<String,Object> proejctAuthFailRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,46,\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",\"test_user\",ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR,dataParameterRes.get(Constants.STATUS))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "TaskInstance taskInstance = getTaskInstance()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "putMsg(result,Status.SUCCESS,projectName)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Date end = DateUtils.getScheduleDate(\"2020-01-02 00:00:00\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Map<String,Object> successRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"test_user\",\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Map<String,Object> executorExistRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,1,\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",\"admin\",ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "when(usersService.queryUser(loginUser.getId())).thenReturn(null)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "Map<String,Object> executorEmptyRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,1,\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",\"\",ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "User loginUser = getAdminUser()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "pageReturn.setRecords(processInstanceList)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "when(processInstanceMapper.queryProcessInstanceListPaging(Mockito.any(),eq(project.getId()),eq(1),eq(\"\"),eq(-1),Mockito.any(),eq(\"192.168.xx.xx\"),eq(start),eq(end))).thenReturn(pageReturn)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(projectMapper.queryByName(Mockito.anyString())).thenReturn(project)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,successRes.get(Constants.STATUS))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "queryTaskListPaging['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorNullDateRes.get(Constants.STATUS))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "when(projectMapper.queryByName(projectName)).thenReturn(project)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Map<String,Object> dataParameterRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,1,\"20200101 00:00:00\",\"20200102 00:00:00\",\"\",loginUser.getUserName(),ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Map<String,Object> successRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,1,\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",loginUser.getUserName(),ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getId()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),eq(start),eq(end))).thenReturn(pageReturn)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "pageReturn.setRecords(taskInstanceList)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "when(usersService.queryUser(loginUser.getId())).thenReturn(loginUser)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "when(usersService.queryUser(processInstance.getExecutorId())).thenReturn(loginUser)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getId()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),eq(start),eq(end))).thenReturn(pageReturn)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "taskInstanceList.add(taskInstance)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR,executorErrorEndDateRes.get(Constants.STATUS))@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "successRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,1,\"\",\"\",\"\",loginUser.getUserName(),ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "when(projectService.checkProjectAndAuth(loginUser,project,projectName)).thenReturn(result)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "processInstanceList.add(processInstance)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Page<ProcessInstance> pageReturn = new Page<>(1,10)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "when(projectMapper.queryByName(projectName)).thenReturn(project)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,successRes.get(Constants.STATUS))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Map<String,Object> proejctAuthFailRes = taskInstanceService.queryTaskListPaging(loginUser,\"project_test1\",0,\"\",\"\",\"test_user\",\"2019-02-26 19:48:00\",\"2019-02-26 19:48:22\",\"\",null,\"\",1,20)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "when(processInstanceMapper.queryProcessInstanceListPaging(Mockito.any(),eq(project.getId()),eq(1),eq(\"\"),eq(-1),Mockito.any(),eq(\"192.168.xx.xx\"),eq(null),eq(null))).thenReturn(pageReturn)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Map<String,Object> executorErrorEndDateRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",null,\"error date\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorEmptyRes.get(Constants.STATUS))@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(Status.PROJECT_NOT_FOUNT,proejctAuthFailRes.get(Constants.STATUS))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<String,Object> executorErrorStartDateRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",\"error date\",null,\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testQueryProcessInstanceList['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "List<TaskInstance> taskInstanceList = new ArrayList<>()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Page<TaskInstance> pageReturn = new Page<>(1,10)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR,executorErrorStartDateRes.get(Constants.STATUS))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Map<String,Object> executorEmptyRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getId()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),any(),any())).thenReturn(pageReturn)@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "Map<String,Object> dataParameterRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"test_user\",\"20200101 00:00:00\",\"2020-01-02 00:00:00\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "queryTaskListPaging['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "ProcessInstance processInstance = getProcessInstance()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(projectService.checkProjectAndAuth(loginUser,null,projectName)).thenReturn(result)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(projectService.checkProjectAndAuth(loginUser,project,projectName)).thenReturn(result)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getCode()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),eq(start),eq(end))).thenReturn(pageReturn)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "when(projectMapper.queryByName(Mockito.anyString())).thenReturn(project)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "putMsg(result,Status.SUCCESS,projectName)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "putMsg(result,Status.PROJECT_NOT_FOUNT,projectName)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->40 [style = solid, label="projectName"];
11->22 [style = solid, label="pageReturn"];
15->69 [style = solid, label="projectName"];
4->51 [style = dashed, label="0"];
25->1 [style = bold, label=""];
6->70 [style = bold, label=""];
71->55 [style = solid, label="processInstanceList"];
11->25 [style = solid, label="pageReturn"];
15->26 [style = solid, label="projectName"];
57->8 [style = bold, label=""];
38->12 [style = bold, label=""];
53->65 [style = solid, label="pageReturn"];
12->5 [style = solid, label="result"];
1->30 [style = bold, label=""];
22->52 [style = dashed, label="0"];
7->49 [style = bold, label=""];
63->66 [style = bold, label=""];
15->41 [style = solid, label="projectName"];
9->67 [style = dashed, label="0"];
40->16 [style = bold, label=""];
38->20 [style = solid, label="loginUser"];
11->51 [style = solid, label="pageReturn"];
15->42 [style = solid, label="projectName"];
0->55 [style = dashed, label="0"];
29->63 [style = bold, label=""];
65->69 [style = bold, label=""];
9->5 [style = bold, label=""];
38->41 [style = solid, label="loginUser"];
24->2 [style = solid, label="processInstance"];
38->14 [style = solid, label="loginUser"];
36->17 [style = bold, label=""];
19->15 [style = bold, label=""];
55->64 [style = bold, label=""];
15->3 [style = solid, label="projectName"];
5->36 [style = bold, label=""];
64->60 [style = bold, label=""];
29->51 [style = bold, label=""];
38->29 [style = solid, label="loginUser"];
14->37 [style = bold, label=""];
38->44 [style = solid, label="loginUser"];
15->38 [style = bold, label=""];
12->34 [style = solid, label="result"];
15->57 [style = solid, label="projectName"];
37->26 [style = bold, label=""];
22->43 [style = dashed, label="0"];
11->49 [style = solid, label="pageReturn"];
54->17 [style = bold, label=""];
15->6 [style = solid, label="projectName"];
53->59 [style = solid, label="pageReturn"];
34->31 [style = bold, label=""];
33->41 [style = bold, label=""];
45->67 [style = solid, label="project"];
35->21 [style = bold, label=""];
15->13 [style = solid, label="projectName"];
6->2 [style = bold, label=""];
45->64 [style = solid, label="project"];
11->52 [style = solid, label="pageReturn"];
18->20 [style = bold, label=""];
20->8 [style = bold, label=""];
51->14 [style = bold, label=""];
70->59 [style = bold, label=""];
38->42 [style = solid, label="loginUser"];
49->1 [style = bold, label=""];
12->18 [style = solid, label="result"];
21->11 [style = bold, label=""];
20->57 [style = dashed, label="0"];
43->22 [style = bold, label=""];
53->68 [style = bold, label=""];
38->54 [style = solid, label="loginUser"];
45->9 [style = solid, label="project"];
42->7 [style = bold, label=""];
38->1 [style = solid, label="loginUser"];
4->59 [style = dashed, label="0"];
33->65 [style = bold, label=""];
15->54 [style = solid, label="projectName"];
32->42 [style = bold, label=""];
35->0 [style = solid, label="taskInstance"];
30->44 [style = bold, label=""];
22->6 [style = bold, label=""];
46->43 [style = bold, label=""];
38->13 [style = solid, label="loginUser"];
12->28 [style = solid, label="result"];
56->6 [style = bold, label=""];
4->14 [style = bold, label=""];
24->71 [style = bold, label=""];
53->43 [style = solid, label="pageReturn"];
41->26 [style = dashed, label="0"];
3->45 [style = bold, label=""];
15->14 [style = solid, label="projectName"];
8->3 [style = bold, label=""];
17->40 [style = bold, label=""];
45->39 [style = solid, label="project"];
16->23 [style = bold, label=""];
25->49 [style = dashed, label="0"];
38->6 [style = solid, label="loginUser"];
71->53 [style = bold, label=""];
47->50 [style = bold, label=""];
38->46 [style = solid, label="loginUser"];
66->58 [style = bold, label=""];
11->50 [style = solid, label="pageReturn"];
27->39 [style = bold, label=""];
47->32 [style = bold, label=""];
50->42 [style = bold, label=""];
32->50 [style = dashed, label="0"];
18->57 [style = bold, label=""];
60->28 [style = bold, label=""];
52->6 [style = bold, label=""];
12->3 [style = solid, label="result"];
41->47 [style = bold, label=""];
58->26 [style = bold, label=""];
62->15 [style = bold, label=""];
45->9 [style = bold, label=""];
7->61 [style = dashed, label="0"];
15->36 [style = solid, label="projectName"];
5->54 [style = bold, label=""];
11->32 [style = solid, label="pageReturn"];
24->68 [style = solid, label="processInstance"];
29->4 [style = bold, label=""];
12->40 [style = solid, label="result"];
38->69 [style = solid, label="loginUser"];
38->28 [style = solid, label="loginUser"];
24->35 [style = bold, label=""];
0->27 [style = bold, label=""];
21->27 [style = solid, label="taskInstanceList"];
44->10 [style = bold, label=""];
38->56 [style = solid, label="loginUser"];
15->45 [style = solid, label="projectName"];
47->33 [style = dashed, label="0"];
31->18 [style = bold, label=""];
12->34 [style = bold, label=""];
45->67 [style = bold, label=""];
43->52 [style = bold, label=""];
32->65 [style = dashed, label="0"];
37->63 [style = dashed, label="0"];
39->28 [style = bold, label=""];
69->61 [style = bold, label=""];
2->13 [style = bold, label=""];
13->29 [style = bold, label=""];
23->24 [style = bold, label=""];
11->0 [style = bold, label=""];
28->46 [style = bold, label=""];
59->29 [style = bold, label=""];
38->57 [style = solid, label="loginUser"];
38->36 [style = solid, label="loginUser"];
68->55 [style = bold, label=""];
48->15 [style = bold, label=""];
67->5 [style = bold, label=""];
15->34 [style = solid, label="projectName"];
38->26 [style = solid, label="loginUser"];
7->25 [style = bold, label=""];
15->1 [style = solid, label="projectName"];
12->60 [style = solid, label="result"];
26->33 [style = bold, label=""];
15->44 [style = solid, label="projectName"];
43->56 [style = bold, label=""];
11->4 [style = solid, label="pageReturn"];
15->29 [style = solid, label="projectName"];
}
