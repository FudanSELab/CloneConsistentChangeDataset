digraph {
15 [style = filled, label = "SparkSession spark = SparkSession.builder().appName(\"JavaWord2VecExample\").getOrCreate()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "StructType schema = new StructType(new StructField((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a71348)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Dataset<Row> documentDF = sqlContext.createDataFrame(jrdd,schema)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(polyFeatures.length,3)@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Dataset<Row> result = model.transform(documentDF)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SQLContext sqlContext = new SQLContext(jsc)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "testJavaWord2Vec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "jsc.stop()@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Word2Vec word2Vec = new Word2Vec().setInputCol(\"text\").setOutputCol(\"result\").setVectorSize(3).setMinCount(0)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "StructType schema = new StructType(new StructField((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a713a4)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "JavaRDD<Row> jrdd = jsc.parallelize(Arrays.asList(RowFactory.create(Arrays.asList(\"Hi I heard about Spark\".split(\" \"))),RowFactory.create(Arrays.asList(\"I wish Java could use case classes\".split(\" \"))),RowFactory.create(Arrays.asList(\"Logistic regression models are neat\".split(\" \")))))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "spark.stop()@@@15@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "SparkConf conf = new SparkConf().setAppName(\"JavaWord2VecExample\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "List<Row> data = Arrays.asList(RowFactory.create(Arrays.asList(\"Hi I heard about Spark\".split(\" \"))),RowFactory.create(Arrays.asList(\"I wish Java could use case classes\".split(\" \"))),RowFactory.create(Arrays.asList(\"Logistic regression models are neat\".split(\" \"))))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "Word2VecModel model = word2Vec.fit(documentDF)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "String(( args@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "JavaSparkContext jsc = new JavaSparkContext(conf)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "System.out.println(r)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Word2Vec word2Vec = new Word2Vec().setInputCol(\"text\").setOutputCol(\"result\").setVectorSize(3).setMinCount(0)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "double(( polyFeatures = ((Vector)r.get(0)).toArray()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Dataset<Row> documentDF = spark.createDataFrame(data,schema)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Word2VecModel model = word2Vec.fit(documentDF)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Dataset<Row> documentDF = sqlContext.createDataFrame(Arrays.asList(RowFactory.create(Arrays.asList(\"Hi I heard about Spark\".split(\" \"))),RowFactory.create(Arrays.asList(\"I wish Java could use case classes\".split(\" \"))),RowFactory.create(Arrays.asList(\"Logistic regression models are neat\".split(\" \")))),schema)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12->10 [style = dashed, label="0"];
5->10 [style = bold, label=""];
16->13 [style = bold, label=""];
9->0 [style = bold, label=""];
8->7 [style = solid, label="conf"];
9->1 [style = solid, label="jrdd"];
13->11 [style = solid, label="documentDF"];
11->6 [style = bold, label=""];
18->11 [style = bold, label=""];
8->15 [style = dashed, label="0"];
19->13 [style = solid, label="data"];
21->22 [style = solid, label="schema"];
16->13 [style = solid, label="schema"];
22->20 [style = solid, label="documentDF"];
2->9 [style = bold, label=""];
15->19 [style = bold, label=""];
7->2 [style = solid, label="jsc"];
17->3 [style = dotted, label="true"];
8->7 [style = bold, label=""];
1->11 [style = bold, label=""];
19->16 [style = bold, label=""];
1->22 [style = dashed, label="0"];
0->1 [style = solid, label="schema"];
24->20 [style = bold, label=""];
1->13 [style = dashed, label="0"];
6->5 [style = bold, label=""];
13->18 [style = solid, label="documentDF"];
11->5 [style = bold, label=""];
22->24 [style = solid, label="documentDF"];
4->3 [style = dotted, label="true"];
22->0 [style = bold, label=""];
23->21 [style = bold, label=""];
21->22 [style = bold, label=""];
10->12 [style = bold, label=""];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
0->24 [style = bold, label=""];
6->11 [style = bold, label=""];
17->15 [style = bold, label=""];
4->8 [style = bold, label=""];
1->6 [style = solid, label="documentDF"];
14->18 [style = bold, label=""];
1->5 [style = solid, label="documentDF"];
13->14 [style = bold, label=""];
20->11 [style = bold, label=""];
}
