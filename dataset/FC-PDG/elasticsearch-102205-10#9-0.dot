digraph {
25 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@63@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(1))@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == STARTED@@@60@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(UNASSIGNED))@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "i++@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "clusterState = resultingState@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == RELOCATING@@@85@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "testRebalanceWithIgnoredUnassignedShards['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "int numRelocating = 0@@@77@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "numStarted++@@@83@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Metadata metadata = Metadata.builder().put(IndexMetadata.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(2).numberOfReplicas(0)).put(IndexMetadata.builder(\"test1\").settings(settings(Version.CURRENT).put(IndexMetadata.INDEX_ROUTING_EXCLUDE_GROUP_SETTING.getKey() + \"_id\",\"node1,node2\")).numberOfShards(2).numberOfReplicas(0)).build()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(numStarted,1)@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertThat(resultingState,not(equalTo(clusterState)))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@27@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "logger.debug(\"now, start 1 more node, check that rebalancing will not happen since we unassigned shards\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "int numStarted = 0@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@71@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "i++@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(1))@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "allocateTest1.set(true)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "logger.info(\"start two nodes\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "logger.debug(\"now set allocateTest1 to true and reroute we should see the (test1( index initializing\")@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "int i = 0@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "Metadata metadata = Metadata.builder().put(IndexMetadata.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(2).numberOfReplicas(0)).put(IndexMetadata.builder(\"test1\").settings(settings(Version.CURRENT)).numberOfShards(2).numberOfReplicas(0)).build()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "logger.debug(\"now start initializing shards and expect exactly one rebalance\" + \" from node1 to node 2 since index (test( is all on node1\")@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "int i = 0@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "i++@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "i++@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == STARTED@@@82@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "logger.debug(\"start all the primary shards for test\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metadata(metadata).routingTable(initialRoutingTable).build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertThat(resultingState,equalTo(clusterState))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "i++@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "final AtomicBoolean allocateTest1 = new AtomicBoolean(false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "clusterState = resultState@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@79@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "RoutingTable initialRoutingTable = RoutingTable.builder().addAsNew(metadata.index(\"test\")).addAsNew(metadata.index(\"test1\")).build()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RoutingTable initialRoutingTable = RoutingTable.builder().addAsNew(metadata.index(\"test\")).addAsNew(metadata.index(\"test1\")).build()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testRebalanceWhileShardFetching['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\"))).build()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "int i = 0@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertThat(resultState,equalTo(clusterState))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\"))).build()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(1))@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "int i = 0@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metadata(metadata).routingTable(initialRoutingTable).build()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testRebalanceWhileShardFetching['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == RELOCATING@@@63@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "i++@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@52@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "logger.debug(\"reroute and check that nothing has changed\")@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(UNASSIGNED))@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "int i = 0@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "i++@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "clusterState = startInitializingShardsAndReroute(strategy,clusterState,\"test1\")@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "ClusterState resultingState = strategy.reroute(clusterState,\"reroute\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@35@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@57@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int numRelocating = 0@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final AtomicBoolean hasFetches = new AtomicBoolean(true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(1))@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "numStarted++@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertEquals(numRelocating,1)@@@90@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int i = 0@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@46@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "resultingState = strategy.reroute(clusterState,\"reroute\")@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "int i = 0@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@68@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "int i = 0@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "i++@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "int numStarted = 0@@@76@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "AllocationService strategy = createAllocationService(Settings.EMPTY,new TestGatewayAllocator(){@Override public void allocateUnassigned(RoutingAllocation allocation){if (allocateTest1.get() == false) {RoutingNodes.UnassignedShards unassigned = allocation.routingNodes().unassigned()RoutingNodes.UnassignedShards.UnassignedIterator iterator = unassigned.iterator()while (iterator.hasNext()) {ShardRouting next = iterator.next()if (\"test1\".equals(next.index().getName())) {iterator.removeAndIgnore(UnassignedInfo.AllocationStatus.NO_ATTEMPT,allocation.changes())}}}super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13e21a8allocation}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "int i = 0@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "numRelocating++@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "logger.info(\"start two nodes\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "int i = 0@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "AllocationService strategy = createAllocationService(Settings.builder().put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString()).build(),new TestGatewayAllocator(){@Override public void beforeAllocation(RoutingAllocation allocation){if (hasFetches.get()) {allocation.setHasPendingAsyncFetch()}}})@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "clusterState = startInitializingShardsAndReroute(strategy,clusterState,\"test\")@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i++@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i++@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(UNASSIGNED))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "numRelocating++@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node2\"))).build()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37->7 [style = bold, label=""];
23->9 [style = bold, label=""];
51->50 [style = dotted, label="true"];
68->72 [style = bold, label=""];
24->32 [style = bold, label=""];
53->56 [style = solid, label="resultState"];
92->19 [style = solid, label="i"];
50->54 [style = dotted, label="true"];
96->88 [style = bold, label=""];
32->2 [style = solid, label="i"];
2->32 [style = dotted, label="true"];
59->91 [style = bold, label=""];
89->94 [style = solid, label="i"];
44->88 [style = solid, label="clusterState"];
18->55 [style = dotted, label="true"];
94->90 [style = dotted, label="true"];
55->18 [style = bold, label=""];
51->52 [style = bold, label=""];
1->6 [style = solid, label="clusterState"];
5->47 [style = solid, label="numRelocating"];
51->6 [style = bold, label=""];
94->90 [style = bold, label=""];
44->28 [style = bold, label=""];
44->21 [style = dotted, label="true"];
3->1 [style = bold, label=""];
49->96 [style = dashed, label="0"];
53->43 [style = bold, label=""];
20->38 [style = solid, label="i"];
21->25 [style = bold, label=""];
6->51 [style = bold, label=""];
74->71 [style = bold, label=""];
79->44 [style = bold, label=""];
25->28 [style = bold, label=""];
85->73 [style = solid, label="i"];
20->30 [style = bold, label=""];
40->13 [style = bold, label=""];
83->51 [style = bold, label=""];
27->55 [style = bold, label=""];
44->25 [style = dotted, label="true"];
3->1 [style = solid, label="clusterState"];
6->45 [style = bold, label=""];
19->49 [style = bold, label=""];
26->33 [style = solid, label="i"];
30->4 [style = bold, label=""];
9->14 [style = bold, label=""];
59->91 [style = dotted, label="true"];
30->20 [style = solid, label="i"];
39->47 [style = bold, label=""];
33->26 [style = dotted, label="true"];
36->24 [style = bold, label=""];
89->94 [style = bold, label=""];
14->13 [style = solid, label="i"];
92->49 [style = solid, label="i"];
73->78 [style = bold, label=""];
59->76 [style = dotted, label="true"];
80->84 [style = bold, label=""];
37->93 [style = dashed, label="0"];
90->62 [style = bold, label=""];
17->16 [style = bold, label=""];
46->2 [style = bold, label=""];
44->28 [style = dotted, label="true"];
33->29 [style = bold, label=""];
71->59 [style = solid, label="i"];
59->70 [style = dotted, label="true"];
31->23 [style = bold, label=""];
22->57 [style = solid, label="numStarted"];
44->63 [style = solid, label="clusterState"];
88->74 [style = solid, label="resultingState"];
28->66 [style = bold, label=""];
58->10 [style = bold, label=""];
39->14 [style = bold, label=""];
60->12 [style = solid, label="strategy"];
67->84 [style = bold, label=""];
19->43 [style = dotted, label="true"];
73->72 [style = dotted, label="true"];
34->95 [style = solid, label="numRelocating"];
61->55 [style = solid, label="i"];
33->51 [style = bold, label=""];
43->56 [style = bold, label=""];
5->34 [style = solid, label="numRelocating"];
46->32 [style = solid, label="i"];
38->4 [style = bold, label=""];
55->37 [style = solid, label="clusterState"];
66->93 [style = solid, label="resultingState"];
39->47 [style = dotted, label="true"];
11->26 [style = bold, label=""];
56->22 [style = bold, label=""];
45->54 [style = solid, label="i"];
27->66 [style = dashed, label="0"];
49->53 [style = bold, label=""];
14->13 [style = bold, label=""];
41->6 [style = solid, label="strategy"];
44->66 [style = solid, label="clusterState"];
30->38 [style = dotted, label="true"];
70->59 [style = bold, label=""];
13->31 [style = bold, label=""];
61->18 [style = bold, label=""];
20->38 [style = dotted, label="true"];
44->93 [style = solid, label="clusterState"];
89->69 [style = solid, label="i"];
94->57 [style = bold, label=""];
72->80 [style = dotted, label="false"];
55->18 [style = solid, label="i"];
8->3 [style = bold, label=""];
75->96 [style = bold, label=""];
65->84 [style = bold, label=""];
82->60 [style = bold, label=""];
47->34 [style = solid, label="numRelocating"];
2->36 [style = bold, label=""];
18->79 [style = bold, label=""];
55->43 [style = solid, label="clusterState"];
73->84 [style = dotted, label="true"];
19->75 [style = bold, label=""];
7->44 [style = bold, label=""];
32->2 [style = bold, label=""];
23->39 [style = dotted, label="false"];
64->20 [style = solid, label="i"];
71->70 [style = solid, label="i"];
20->30 [style = dotted, label="true"];
72->80 [style = bold, label=""];
63->74 [style = bold, label=""];
13->46 [style = bold, label=""];
81->89 [style = bold, label=""];
18->79 [style = dashed, label="0"];
12->54 [style = bold, label=""];
51->45 [style = dotted, label="true"];
0->33 [style = solid, label="i"];
59->86 [style = bold, label=""];
54->50 [style = bold, label=""];
52->12 [style = bold, label=""];
13->14 [style = dotted, label="true"];
28->44 [style = solid, label="i"];
1->0 [style = bold, label=""];
86->81 [style = bold, label=""];
18->15 [style = bold, label=""];
50->52 [style = dotted, label="true"];
2->24 [style = dotted, label="true"];
60->81 [style = solid, label="strategy"];
64->30 [style = solid, label="i"];
72->65 [style = bold, label=""];
43->49 [style = bold, label=""];
73->68 [style = bold, label=""];
54->50 [style = solid, label="i"];
22->9 [style = solid, label="numStarted"];
51->45 [style = bold, label=""];
17->77 [style = dashed, label="0"];
4->35 [style = bold, label=""];
57->78 [style = solid, label="numStarted"];
40->13 [style = solid, label="i"];
26->33 [style = bold, label=""];
28->44 [style = bold, label=""];
27->37 [style = bold, label=""];
9->57 [style = solid, label="numStarted"];
64->20 [style = bold, label=""];
53->43 [style = solid, label="resultState"];
65->78 [style = solid, label="numStarted"];
16->42 [style = bold, label=""];
44->20 [style = bold, label=""];
23->9 [style = dotted, label="true"];
51->6 [style = dotted, label="true"];
10->41 [style = bold, label=""];
41->60 [style = dashed, label="0"];
53->88 [style = dashed, label="0"];
19->53 [style = bold, label=""];
30->4 [style = dotted, label="true"];
13->23 [style = dotted, label="true"];
11->12 [style = solid, label="clusterState"];
50->6 [style = bold, label=""];
30->20 [style = bold, label=""];
87->82 [style = bold, label=""];
55->15 [style = bold, label=""];
49->19 [style = bold, label=""];
19->49 [style = dotted, label="true"];
7->28 [style = solid, label="i"];
50->18 [style = bold, label=""];
88->63 [style = bold, label=""];
33->29 [style = dotted, label="true"];
38->30 [style = solid, label="i"];
84->73 [style = solid, label="i"];
34->67 [style = solid, label="numRelocating"];
44->21 [style = bold, label=""];
45->50 [style = bold, label=""];
7->44 [style = solid, label="i"];
85->73 [style = bold, label=""];
5->40 [style = bold, label=""];
41->17 [style = bold, label=""];
12->61 [style = bold, label=""];
18->55 [style = bold, label=""];
26->29 [style = bold, label=""];
80->67 [style = bold, label=""];
40->14 [style = solid, label="i"];
60->77 [style = bold, label=""];
85->84 [style = solid, label="i"];
2->57 [style = bold, label=""];
48->10 [style = bold, label=""];
22->5 [style = bold, label=""];
18->15 [style = dotted, label="true"];
0->33 [style = bold, label=""];
72->65 [style = dotted, label="true"];
57->34 [style = bold, label=""];
13->31 [style = dotted, label="true"];
92->19 [style = bold, label=""];
84->73 [style = bold, label=""];
74->81 [style = solid, label="clusterState"];
69->94 [style = solid, label="i"];
80->67 [style = dotted, label="true"];
11->83 [style = bold, label=""];
62->69 [style = bold, label=""];
27->37 [style = solid, label="resultState"];
69->94 [style = bold, label=""];
91->76 [style = bold, label=""];
20->30 [style = solid, label="i"];
46->2 [style = solid, label="i"];
23->39 [style = bold, label=""];
61->18 [style = solid, label="i"];
88->63 [style = solid, label="resultingState"];
57->65 [style = solid, label="numStarted"];
67->95 [style = solid, label="numRelocating"];
2->36 [style = dotted, label="true"];
77->0 [style = bold, label=""];
76->70 [style = bold, label=""];
94->62 [style = dotted, label="true"];
33->11 [style = dotted, label="true"];
19->75 [style = dashed, label="0"];
30->35 [style = dotted, label="true"];
6->51 [style = solid, label="i"];
34->85 [style = bold, label=""];
71->59 [style = bold, label=""];
94->69 [style = dotted, label="true"];
38->30 [style = bold, label=""];
70->59 [style = solid, label="i"];
50->12 [style = dotted, label="true"];
15->27 [style = bold, label=""];
55->27 [style = solid, label="clusterState"];
29->11 [style = solid, label="clusterState"];
18->27 [style = dotted, label="true"];
66->93 [style = bold, label=""];
93->64 [style = bold, label=""];
78->95 [style = bold, label=""];
55->53 [style = solid, label="clusterState"];
20->4 [style = dotted, label="true"];
56->74 [style = dashed, label="0"];
35->38 [style = bold, label=""];
43->63 [style = dashed, label="0"];
49->19 [style = solid, label="i"];
10->82 [style = dashed, label="0"];
20->38 [style = bold, label=""];
42->8 [style = bold, label=""];
50->52 [style = bold, label=""];
19->53 [style = dotted, label="true"];
20->92 [style = bold, label=""];
83->51 [style = solid, label="i"];
47->14 [style = bold, label=""];
45->50 [style = solid, label="i"];
83->6 [style = solid, label="i"];
4->30 [style = bold, label=""];
30->19 [style = bold, label=""];
73->68 [style = dotted, label="true"];
33->26 [style = bold, label=""];
29->11 [style = bold, label=""];
0->26 [style = solid, label="i"];
}
