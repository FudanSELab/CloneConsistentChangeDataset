digraph {
10 [style = filled, label = "assertThat(((RowNumberDecoratorMergedResult)actual).getMergedResult(),instanceOf())@@@29@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "final ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"Oracle\"))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertThat(((RowNumberDecoratorMergedResult)actual).getMergedResult(),instanceOf())@@@7@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "selectStatement.setFrom(subqueryTableSegment)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "when(binaryOperationExpression.getOperator()).thenReturn(\">=\")@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(Collections.singletonMap(DefaultSchema.LOGIC_NAME,metaData),null,selectStatement,DefaultSchema.LOGIC_NAME)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "when(subSelectStatement.getProjections()).thenReturn(subProjectionsSegment)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertBuildGroupByStreamMergedResultWithOracleLimit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "selectStatement.setOrderBy(new OrderBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC))))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "WhereSegment whereSegment = mock()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "when(binaryOperationExpression.getRight()).thenReturn(new LiteralExpressionSegment(0,0,1))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertBuildOrderByStreamMergedResultWithOracleLimit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "SelectStatement subSelectStatement = mock()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "OracleSelectStatement selectStatement = (OracleSelectStatement)buildSelectStatement(new OracleSelectStatement())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "ProjectionsSegment subProjectionsSegment = mock()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "MergedResult actual = resultMerger.merge(createQueryResults(),selectStatementContext,buildSchema())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "when(binaryOperationExpression.getLeft()).thenReturn(new ColumnSegment(0,0,new IdentifierValue(\"row_id\")))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertThat(actual,instanceOf())@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(buildSelectStatement(new OracleSelectStatement()),new GroupByContext(Collections.singletonList(new OrderByItem(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC)))),new OrderByContext(Collections.singletonList(new OrderByItem(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC))),false),new ProjectionsContext(0,0,false,Collections.emptyList()),new PaginationContext(new NumberLiteralRowNumberValueSegment(0,0,1,true),null,Collections.emptyList()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "when(whereSegment.getExpr()).thenReturn(binaryOperationExpression)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "selectStatement.setProjections(new ProjectionsSegment(0,0))@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(actual,instanceOf())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "SubqueryTableSegment subqueryTableSegment = mock()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "when(subquerySegment.getSelect()).thenReturn(subSelectStatement)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"Oracle\"))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "MergedResult actual = resultMerger.merge(createQueryResults(),selectStatementContext,buildSchema())@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "selectStatement.setWhere(whereSegment)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "BinaryOperationExpression binaryOperationExpression = mock()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(buildSelectStatement(new OracleSelectStatement()),new GroupByContext(Collections.emptyList()),new OrderByContext(Collections.singletonList(new OrderByItem(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC))),false),new ProjectionsContext(0,0,false,Collections.emptyList()),new PaginationContext(new NumberLiteralRowNumberValueSegment(0,0,1,true),null,Collections.emptyList()))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(((RowNumberDecoratorMergedResult)actual).getMergedResult(),instanceOf())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "when(topProjectionSegment.getAlias()).thenReturn(\"row_id\")@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "when(subqueryTableSegment.getSubquery()).thenReturn(subquerySegment)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "TopProjectionSegment topProjectionSegment = mock()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "when(subProjectionsSegment.getProjections()).thenReturn(Collections.singletonList(topProjectionSegment))@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "final ShardingSphereMetaData metaData = mock()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "SubquerySegment subquerySegment = mock()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertBuildOrderByStreamMergedResultWithOracleLimit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->0 [style = solid, label="selectStatementContext"];
11->25 [style = bold, label=""];
28->31 [style = bold, label=""];
29->9 [style = bold, label=""];
15->30 [style = bold, label=""];
13->26 [style = bold, label=""];
12->28 [style = bold, label=""];
21->14 [style = bold, label=""];
11->19 [style = solid, label="subSelectStatement"];
27->33 [style = bold, label=""];
14->16 [style = bold, label=""];
17->9 [style = solid, label="metaData"];
23->24 [style = bold, label=""];
16->18 [style = bold, label=""];
2->5 [style = bold, label=""];
4->35 [style = bold, label=""];
20->32 [style = bold, label=""];
9->13 [style = bold, label=""];
24->11 [style = bold, label=""];
9->13 [style = solid, label="selectStatementContext"];
26->10 [style = bold, label=""];
7->22 [style = bold, label=""];
4->32 [style = dashed, label="0"];
6->8 [style = bold, label=""];
4->1 [style = bold, label=""];
0->2 [style = solid, label="actual"];
35->0 [style = bold, label=""];
2->36 [style = bold, label=""];
34->4 [style = bold, label=""];
23->33 [style = solid, label="subqueryTableSegment"];
32->17 [style = bold, label=""];
28->9 [style = solid, label="selectStatement"];
22->18 [style = solid, label="binaryOperationExpression"];
7->29 [style = solid, label="whereSegment"];
35->0 [style = solid, label="selectStatementContext"];
13->26 [style = solid, label="actual"];
25->30 [style = solid, label="subProjectionsSegment"];
22->21 [style = bold, label=""];
5->36 [style = dashed, label="0"];
1->35 [style = dashed, label="0"];
0->2 [style = bold, label=""];
17->7 [style = bold, label=""];
24->12 [style = solid, label="subquerySegment"];
19->12 [style = bold, label=""];
25->6 [style = bold, label=""];
30->19 [style = bold, label=""];
31->27 [style = bold, label=""];
3->4 [style = bold, label=""];
33->29 [style = bold, label=""];
8->15 [style = bold, label=""];
6->15 [style = solid, label="topProjectionSegment"];
18->23 [style = bold, label=""];
1->0 [style = bold, label=""];
}
