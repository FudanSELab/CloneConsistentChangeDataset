digraph {
14 [style = filled, label = "final TaskToolbox taskToolbox = makeToolbox(task,mdc,tempFolder.newFolder())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(new SegmentDescriptor(publishedSegment.getInterval(),publishedSegment.getVersion(),publishedSegment.getShardSpec().getPartitionNum()),entry.getKey())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Thread.sleep(50)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(3,sumMetric(task,null,\"met1\").longValue())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(2,task.getMetrics().processed())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final TestIndexerMetadataStorageCoordinator mdc = new TestIndexerMetadataStorageCoordinator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(TaskState.SUCCESS,taskStatus.getStatusCode())@@@30@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(3,task.getMetrics().processed())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testNoReportParseExceptions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final RealtimeIndexTask task = makeRealtimeTask(null,false)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "publishedSegment = Iterables.getOnlyElement(mdc.getPublished())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(1,task.getMetrics().thrownAway())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(2,task.getMetrics().unparseable())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final DataSegment publishedSegment@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final ListenableFuture<TaskStatus> statusFuture = runTask(task,taskToolbox)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final TestFirehose firehose = (TestFirehose)task.getFirehose()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "firehose.close()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final RealtimeIndexTask task = makeRealtimeTask(null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final TaskStatus taskStatus = statusFuture.get()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testBasics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final Pair<Executor,Runnable> executorRunnablePair = entry.getValue()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(0,task.getMetrics().unparseable())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "task.getFirehose() == null@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "firehose.addRows(Arrays.asList(ImmutableMap.of(\"t\",now.getMillis(),\"dim1\",\"foo\",\"met1\",\"1\"),null,ImmutableMap.of(\"t\",now.getMillis(),\"dim1\",\"foo\",\"met1\",\"foo\"),ImmutableMap.of(\"dim1\",\"foo\",\"met1\",2.0,TestFirehose.FAIL_DIM,\"x\"),ImmutableMap.of(\"t\",now.minus(Period.days(1)).getMillis(),\"dim1\",\"foo\",\"met1\",2.0),ImmutableMap.of(\"t\",now.getMillis(),\"dim2\",\"bar\",\"met1\",2.0)))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "firehose.addRows(Arrays.asList(ImmutableMap.of(\"t\",now.getMillis(),\"dim1\",\"foo\",\"met1\",\"1\"),null,ImmutableMap.of(\"t\",now.getMillis(),\"dim1\",\"foo\",\"met1\",\"foo\"),ImmutableMap.of(\"dim1\",\"foo\",\"met1\",2.0,FAIL_DIM,\"x\"),ImmutableMap.of(\"t\",now.minus(Period.days(1)).getMillis(),\"dim1\",\"foo\",\"met1\",2.0),ImmutableMap.of(\"t\",now.getMillis(),\"dim2\",\"bar\",\"met1\",2.0)))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(3,sumMetric(task,null,\"rows\").longValue())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "firehose.addRows(ImmutableList.of(ImmutableMap.of(\"t\",now.getMillis(),\"dim1\",\"foo\",\"met1\",\"1\"),ImmutableMap.of(\"t\",now.minus(new Period(\"P1D\")).getMillis(),\"dim1\",\"foo\",\"met1\",2.0),ImmutableMap.of(\"t\",now.getMillis(),\"dim2\",\"bar\",\"met1\",2.0)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertEquals(2,sumMetric(task,null,\"rows\").longValue())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "executorRunnablePair.lhs.execute(executorRunnablePair.rhs)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testNoReportParseExceptions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "mdc.getPublished().isEmpty()@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "handOffCallbacks.clear()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Thread.sleep(50)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->24 [style = bold, label=""];
5->10 [style = bold, label=""];
18->31 [style = bold, label=""];
8->14 [style = solid, label="task"];
7->2 [style = dotted, label="true"];
15->13 [style = bold, label=""];
29->4 [style = bold, label=""];
7->1 [style = bold, label=""];
27->14 [style = bold, label=""];
25->22 [style = bold, label=""];
20->9 [style = bold, label=""];
31->32 [style = bold, label=""];
11->6 [style = bold, label=""];
12->15 [style = bold, label=""];
18->12 [style = bold, label=""];
12->31 [style = dashed, label="0"];
8->14 [style = bold, label=""];
15->32 [style = dashed, label="0"];
22->14 [style = solid, label="mdc"];
11->19 [style = bold, label=""];
1->26 [style = bold, label=""];
17->29 [style = dashed, label="0"];
26->4 [style = bold, label=""];
30->18 [style = bold, label=""];
9->16 [style = bold, label=""];
1->17 [style = bold, label=""];
22->8 [style = bold, label=""];
8->24 [style = solid, label="task"];
22->27 [style = bold, label=""];
3->7 [style = bold, label=""];
21->22 [style = bold, label=""];
7->2 [style = bold, label=""];
14->24 [style = solid, label="taskToolbox"];
19->23 [style = bold, label=""];
6->11 [style = bold, label=""];
19->30 [style = bold, label=""];
10->0 [style = bold, label=""];
11->6 [style = dotted, label="true"];
23->30 [style = dashed, label="0"];
16->5 [style = bold, label=""];
8->27 [style = dashed, label="0"];
17->26 [style = dashed, label="0"];
2->7 [style = bold, label=""];
1->29 [style = bold, label=""];
32->13 [style = bold, label=""];
4->11 [style = bold, label=""];
27->14 [style = solid, label="task"];
16->20 [style = bold, label=""];
27->24 [style = solid, label="task"];
24->3 [style = bold, label=""];
23->18 [style = bold, label=""];
17->4 [style = bold, label=""];
28->22 [style = bold, label=""];
13->20 [style = bold, label=""];
}
