digraph {
5 [style = filled, label = "long durationms = (end - start) / 1000000L@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "dserTree.deserialize(ia,\"test\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "LOG.info(\"Serialized \" + count + \" nodes in \" + durationms + \" ms (\" + pernodeus + \"us/node), depth=\" + depth + \" width=\" + width + \" datalen=\" + len)@@@13@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "System.gc()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "serializeTree['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int depth@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "int len@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "int width@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int len@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "long end = System.nanoTime()@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "long pernodeus = ((end - start) / 1000L) / count@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "serializeTree['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "ms['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "BinaryInputArchive ia@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "{DataTree tree = new DataTree()SerializationPerfTest.createNodes(tree,\"/\",depth,width,tree.getNode(\"/\").stat.getCversion(),new byte(((()count = tree.getNodeCount()ByteArrayOutputStream baos = new ByteArrayOutputStream()BinaryOutputArchive oa = BinaryOutputArchive.getArchive(baos)tree.serialize(oa,\"test\")baos.flush()ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())ia = BinaryInputArchive.getArchive(bais)}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "long durationms = (end - start) / 1000000L@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "long start = System.nanoTime()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "DataTree tree = new DataTree()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "long end = System.nanoTime()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "BinaryOutputArchive oa = BinaryOutputArchive.getArchive(new NullOutputStream())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "LOG.info(\"Deserialized \" + count + \" nodes in \" + durationms + \" ms (\" + pernodeus + \"us/node), depth=\" + depth + \" width=\" + width + \" datalen=\" + len)@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int depth@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int width@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "int count@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "tree.serialize(oa,\"test\")@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "long start = System.nanoTime()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int count = tree.getNodeCount()@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "long pernodeus = ((end - start) / 1000L) / count@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int width@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "deserializeTree['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "DataTree dserTree = new DataTree()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "createNodes(tree,\"/\",depth,width,tree.getNode(\"/\").stat.getCversion(),new byte(((()@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(count,dserTree.getNodeCount())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "System.gc()@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int len@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3->11 [style = dotted, label="true"];
13->10 [style = bold, label=""];
33->26 [style = solid, label="end"];
32->21 [style = dotted, label="true"];
12->23 [style = dashed, label="0"];
32->34 [style = dotted, label="true"];
17->18 [style = dotted, label="true"];
14->34 [style = dashed, label="0"];
22->30 [style = solid, label="count"];
25->30 [style = bold, label=""];
0->12 [style = bold, label=""];
26->25 [style = bold, label=""];
4->13 [style = bold, label=""];
24->30 [style = solid, label="durationms"];
1->2 [style = solid, label="len"];
22->31 [style = bold, label=""];
28->26 [style = solid, label="start"];
13->6 [style = solid, label="count"];
9->6 [style = solid, label="end"];
29->30 [style = solid, label="len"];
7->4 [style = bold, label=""];
12->9 [style = bold, label=""];
6->2 [style = solid, label="pernodeus"];
27->22 [style = bold, label=""];
21->22 [style = solid, label="depth"];
3->14 [style = dotted, label="true"];
14->2 [style = solid, label="width"];
20->27 [style = bold, label=""];
6->2 [style = bold, label=""];
33->24 [style = solid, label="end"];
11->4 [style = solid, label="depth"];
11->2 [style = solid, label="depth"];
8->0 [style = bold, label=""];
21->30 [style = solid, label="depth"];
24->26 [style = bold, label=""];
17->16 [style = dotted, label="true"];
13->2 [style = solid, label="count"];
23->33 [style = bold, label=""];
17->15 [style = dotted, label="true"];
26->30 [style = solid, label="pernodeus"];
5->6 [style = bold, label=""];
28->24 [style = solid, label="start"];
10->8 [style = bold, label=""];
3->7 [style = bold, label=""];
28->23 [style = bold, label=""];
33->24 [style = bold, label=""];
5->2 [style = solid, label="durationms"];
22->23 [style = solid, label="ia"];
22->26 [style = solid, label="count"];
9->5 [style = bold, label=""];
34->30 [style = solid, label="width"];
32->29 [style = dotted, label="true"];
19->28 [style = bold, label=""];
22->25 [style = solid, label="count"];
10->12 [style = solid, label="oa"];
32->20 [style = bold, label=""];
7->4 [style = solid, label="tree"];
0->5 [style = solid, label="start"];
0->6 [style = solid, label="start"];
34->22 [style = solid, label="width"];
31->19 [style = bold, label=""];
3->1 [style = dotted, label="true"];
9->5 [style = solid, label="end"];
14->4 [style = solid, label="width"];
}
