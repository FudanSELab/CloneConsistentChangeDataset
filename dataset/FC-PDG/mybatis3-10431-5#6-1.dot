digraph {
0 [style = filled, label = "shouldRespectFullAutoMappingBehavior_InlineNestedResultMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assertions.assertEquals(Integer.valueOf(2),user.getId())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assertions.assertEquals(\"Chien\",user.getPets().get(0).getPetName())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(\"User2\",user.getName())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "User user = mapper.getUserWithPets_Inline(2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assertions.assertEquals(\"User2\",user.getName())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "User user = mapper.getUserWithPets_External(2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assertions.assertEquals(\"John\",user.getPets().get(0).getBreeder().getBreederName())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(Integer.valueOf(2),user.getId())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"John\",user.getPets().get(0).getBreeder().getBreederName())@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "sqlSessionFactory.getConfiguration().setAutoMappingBehavior(AutoMappingBehavior.FULL)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldRespectFullAutoMappingBehavior_ExternalNestedResultMap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(\"Chien\",user.getPets().get(0).getPetName())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldRespectFullAutoMappingBehavior_InlineNestedResultMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9->5 [style = bold, label=""];
7->10 [style = dashed, label="0"];
5->1 [style = bold, label=""];
7->3 [style = bold, label=""];
1->14 [style = bold, label=""];
14->2 [style = bold, label=""];
1->6 [style = bold, label=""];
4->11 [style = dashed, label="0"];
3->12 [style = dashed, label="0"];
6->14 [style = dashed, label="0"];
8->11 [style = bold, label=""];
2->4 [style = bold, label=""];
11->10 [style = bold, label=""];
10->12 [style = bold, label=""];
2->8 [style = dashed, label="0"];
4->7 [style = bold, label=""];
6->8 [style = bold, label=""];
0->5 [style = bold, label=""];
6->2 [style = bold, label=""];
13->5 [style = bold, label=""];
}
