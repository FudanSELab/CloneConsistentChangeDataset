digraph {
28 [style = filled, label = "execution = GfshScript.of(\"connect --locator=localhost(10334(\",\"create region --name=region6 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\").expectFailure().execute(gfsh)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(execution.getOutputText()).containsPattern(\"region2\").containsPattern(\"eviction-action\s+| overflow-to-disk\").containsPattern(\"eviction-maximum-value\s+ | 1000\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(execution.getOutputText()).contains(\"Region \"\" + SEPARATOR + \"region4\" created on \"server\"\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "GfshExecution execution = GfshScript.of(\"start locator --name=locator\",\"start server --name=server --server-port=0\",\"create region --name=region1 --eviction-action=local-destroy --eviction-max-memory=1000 --type=REPLICATE\",\"create region --name=region2 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE\",\"create region --name=region3 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=REPLICATE_PERSISTENT\",\"create region --name=region4 --eviction-action=local-destroy --eviction-max-memory=1000 --type=LOCAL\",\"create region --name=region5 --eviction-action=overflow-to-disk --eviction-max-memory=1000 --type=LOCAL\").execute(gfsh)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(execution.getOutputText()).contains(\"An Eviction Controller with local destroy eviction action is incompatible with\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(execution.getOutputText()).containsPattern(\"region5\").containsPattern(\"eviction-action\s+| overflow-to-disk\").containsPattern(\"eviction-max-memory\s+ | 1000\")@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(execution.getOutputText()).containsPattern(\"region2\").containsPattern(\"eviction-action\s+| overflow-to-disk\").containsPattern(\"eviction-max-memory\s+ | 1000\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(execution.getOutputText()).containsPattern(\"region3\").containsPattern(\"eviction-action\s+| overflow-to-disk\").containsPattern(\"eviction-maximum-value\s+ | 1000\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(execution.getOutputText()).containsPattern(\"region5\").containsPattern(\"eviction-action\s+| overflow-to-disk\").containsPattern(\"eviction-maximum-value\s+ | 1000\")@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(execution.getOutputText()).contains(\"Region \"/region3\" created on \"server\"\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "execution = GfshScript.of(\"connect --locator=localhost(10334(\",\"create region --name=region6 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\").expectFailure().execute(gfsh)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(execution.getOutputText()).contains(\"Region \"/region5\" created on \"server\"\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(execution.getOutputText()).containsPattern(\"region1\").containsPattern(\"eviction-action\s+| local-destroy\").containsPattern(\"eviction-max-memory\s+ | 1000\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "execution = GfshScript.of(\"connect --locator=localhost(10334(\",\"describe region --name=region1\").execute(gfsh)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(execution.getOutputText()).containsPattern(\"region1\").containsPattern(\"eviction-action\s+| local-destroy\").containsPattern(\"eviction-maximum-value\s+ | 1000\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "GfshExecution execution = GfshScript.of(\"start locator --name=locator\",\"start server --name=server --server-port=0\",\"create region --name=region1 --eviction-action=local-destroy --eviction-entry-count=1000 --type=REPLICATE\",\"create region --name=region2 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE\",\"create region --name=region3 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=REPLICATE_PERSISTENT\",\"create region --name=region4 --eviction-action=local-destroy --eviction-entry-count=1000 --type=LOCAL\",\"create region --name=region5 --eviction-action=overflow-to-disk --eviction-entry-count=1000 --type=LOCAL\").execute(gfsh)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "configureEvictionByMaxMemory['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(execution.getOutputText()).containsPattern(\"region4\").containsPattern(\"eviction-action\s+| local-destroy\").containsPattern(\"eviction-max-memory\s+ | 1000\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "execution = GfshScript.of(\"connect --locator=localhost(10334(\",\"describe region --name=region2\").execute(gfsh)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(execution.getOutputText()).contains(\"Region \"/region2\" created on \"server\"\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(execution.getOutputText()).contains(\"Region \"\" + SEPARATOR + \"region3\" created on \"server\"\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertThat(execution.getOutputText()).containsPattern(\"region4\").containsPattern(\"eviction-action\s+| local-destroy\").containsPattern(\"eviction-maximum-value\s+ | 1000\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(execution.getOutputText()).contains(\"Region \"\" + SEPARATOR + \"region5\" created on \"server\"\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertThat(execution.getOutputText()).containsPattern(\"region3\").containsPattern(\"eviction-action\s+| overflow-to-disk\").containsPattern(\"eviction-max-memory\s+ | 1000\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(execution.getOutputText()).contains(\"Region \"/region4\" created on \"server\"\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "execution = GfshScript.of(\"connect --locator=localhost(10334(\",\"describe region --name=region3\").execute(gfsh)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "execution = GfshScript.of(\"connect --locator=localhost(10334(\",\"describe region --name=region5\").execute(gfsh)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "configureEvictionByEntryCount['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertThat(execution.getOutputText()).contains(\"Region \"\" + SEPARATOR + \"region2\" created on \"server\"\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "configureEvictionByEntryCount['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(execution.getOutputText()).contains(\"Region \"\" + SEPARATOR + \"region1\" created on \"server\"\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(execution.getOutputText()).contains(\"Region \"/region1\" created on \"server\"\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "execution = GfshScript.of(\"connect --locator=localhost(10334(\",\"describe region --name=region4\").execute(gfsh)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
14->16 [style = bold, label=""];
16->15 [style = bold, label=""];
5->8 [style = bold, label=""];
23->20 [style = bold, label=""];
8->31 [style = bold, label=""];
11->14 [style = bold, label=""];
10->24 [style = bold, label=""];
12->32 [style = dashed, label="0"];
2->3 [style = bold, label=""];
14->20 [style = dashed, label="0"];
19->10 [style = bold, label=""];
11->23 [style = dashed, label="0"];
32->7 [style = bold, label=""];
3->12 [style = bold, label=""];
13->25 [style = dashed, label="0"];
1->28 [style = dashed, label="0"];
25->6 [style = bold, label=""];
16->21 [style = dashed, label="0"];
12->7 [style = bold, label=""];
15->22 [style = dashed, label="0"];
6->29 [style = bold, label=""];
1->17 [style = bold, label=""];
2->31 [style = dashed, label="0"];
26->30 [style = bold, label=""];
20->21 [style = bold, label=""];
0->10 [style = bold, label=""];
10->30 [style = dashed, label="0"];
5->27 [style = dashed, label="0"];
9->29 [style = dashed, label="0"];
8->2 [style = bold, label=""];
15->28 [style = bold, label=""];
18->27 [style = bold, label=""];
15->1 [style = bold, label=""];
21->22 [style = bold, label=""];
30->4 [style = bold, label=""];
18->5 [style = bold, label=""];
10->4 [style = bold, label=""];
28->17 [style = bold, label=""];
7->25 [style = bold, label=""];
22->1 [style = bold, label=""];
13->6 [style = bold, label=""];
6->9 [style = bold, label=""];
31->3 [style = bold, label=""];
4->11 [style = bold, label=""];
3->32 [style = bold, label=""];
4->24 [style = dashed, label="0"];
27->8 [style = bold, label=""];
17->18 [style = bold, label=""];
24->23 [style = bold, label=""];
}
