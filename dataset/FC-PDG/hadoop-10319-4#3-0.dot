digraph {
14 [style = filled, label = "commitHandler.start()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "dispatcher.stop()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "JobImpl job = createStubbedJob(conf,dispatcher,2,mockContext)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertJobState(job,JobStateInternal.KILLED)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "AppContext mockContext = mock()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "dispatcher.stop()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "JobId jobId = job.getID()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "job.handle(new JobEvent(jobId,JobEventType.JOB_INIT))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(JobState.RUNNING,job.getState())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testKilledDuringKillAbort['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "conf.set(MRJobConfig.MR_AM_STAGING_DIR,stagingDir)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertJobState(job,JobStateInternal.REBOOT)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "dispatcher.start()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "job.handle(new JobEvent(jobId,JobEventType.JOB_INIT))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertJobState(job,JobStateInternal.INITED)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "commitHandler.stop()@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "job.handle(new JobStartEvent(jobId))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "dispatcher.init(conf)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "commitHandler.init(conf)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "JobId jobId = job.getID()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "job.handle(new JobEvent(jobId,JobEventType.JOB_KILL))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CommitterEventHandler commitHandler = createCommitterEventHandler(dispatcher,committer)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "dispatcher.init(conf)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "commitHandler.stop()@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertJobState(job,JobStateInternal.SETUP)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "when(mockContext.isLastAMRetry()).thenReturn(false)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testRebootedDuringSetup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "OutputCommitter committer = new StubbedOutputCommitter(){@Override public synchronized void setupJob(JobContext jobContext){while (!Thread.interrupted()) {try {wait()}catch (InterruptedException e) }}}@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_AM_REBOOT))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Configuration conf = new Configuration()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JobImpl job = createStubbedJob(conf,dispatcher,2,null)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "AsyncDispatcher dispatcher = new AsyncDispatcher()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testKilledDuringKillAbort['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10->16 [style = bold, label=""];
6->11 [style = solid, label="job"];
4->20 [style = solid, label="conf"];
19->7 [style = solid, label="jobId"];
3->14 [style = bold, label=""];
19->10 [style = bold, label=""];
9->11 [style = bold, label=""];
2->8 [style = solid, label="committer"];
4->25 [style = solid, label="conf"];
17->6 [style = solid, label="dispatcher"];
4->3 [style = solid, label="conf"];
23->24 [style = bold, label=""];
13->17 [style = bold, label=""];
6->16 [style = solid, label="job"];
25->1 [style = solid, label="job"];
4->32 [style = solid, label="conf"];
0->9 [style = bold, label=""];
4->6 [style = solid, label="conf"];
19->10 [style = solid, label="jobId"];
0->24 [style = dashed, label="0"];
22->31 [style = bold, label=""];
6->19 [style = bold, label=""];
17->20 [style = bold, label=""];
8->3 [style = bold, label=""];
2->8 [style = bold, label=""];
24->22 [style = bold, label=""];
25->24 [style = solid, label="job"];
0->23 [style = bold, label=""];
14->29 [style = bold, label=""];
16->15 [style = solid, label="jobId"];
17->32 [style = bold, label=""];
26->25 [style = bold, label=""];
16->7 [style = solid, label="jobId"];
15->0 [style = bold, label=""];
25->16 [style = bold, label=""];
19->15 [style = solid, label="jobId"];
32->28 [style = bold, label=""];
29->25 [style = solid, label="mockContext"];
6->1 [style = solid, label="job"];
14->6 [style = bold, label=""];
1->15 [style = bold, label=""];
30->4 [style = bold, label=""];
11->5 [style = bold, label=""];
17->8 [style = solid, label="dispatcher"];
4->13 [style = bold, label=""];
16->7 [style = bold, label=""];
5->12 [style = bold, label=""];
19->9 [style = solid, label="jobId"];
7->1 [style = bold, label=""];
20->2 [style = bold, label=""];
15->23 [style = dashed, label="0"];
21->4 [style = bold, label=""];
6->0 [style = solid, label="job"];
28->2 [style = bold, label=""];
31->27 [style = bold, label=""];
17->25 [style = solid, label="dispatcher"];
25->0 [style = solid, label="job"];
18->4 [style = bold, label=""];
17->2 [style = bold, label=""];
29->26 [style = bold, label=""];
}
