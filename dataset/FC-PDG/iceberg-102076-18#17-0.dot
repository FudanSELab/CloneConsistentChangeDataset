digraph {
13 [style = filled, label = "Assert.assertNull(\"Operation should be null\",snapshot.operation())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(\"Snapshot ID should match\",expected.snapshotId(),snapshot.snapshotId())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Snapshot expected = new BaseSnapshot(ops.io(),id,parentId,System.currentTimeMillis(),DataOperations.REPLACE,ImmutableMap.of(\"files-added\",\"4\",\"files-deleted\",\"100\"),manifests)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(\"Parent ID should match\",expected.parentId(),snapshot.parentId())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(\"Operation should match\",expected.operation(),snapshot.operation())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(\"Sequence number should default to 0 for v1\",0,snapshot.sequenceNumber())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Snapshot snapshot = SnapshotParser.fromJson(ops.io(),json)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(\"Snapshot ID should match\",expected.snapshotId(),snapshot.snapshotId())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(\"Sequence number should default to 0\",expected.sequenceNumber(),snapshot.sequenceNumber())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "long id = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(\"Timestamp should match\",expected.timestampMillis(),snapshot.timestampMillis())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertEquals(\"Files should match\",expected.allManifests(),snapshot.allManifests())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(manifestList.delete())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "long parentId = 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Summary should match\",expected.summary(),snapshot.summary())@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testJsonConversionWithManifestList['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Assert.assertNull(\"Summary should be null\",snapshot.summary())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "manifestList.deleteOnExit()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "writer.addAll(manifests)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(\"Schema ID should match\",expected.schemaId(),snapshot.schemaId())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "testJsonConversionWithOperation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(\"Manifest list should match\",expected.manifestListLocation(),snapshot.manifestListLocation())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Snapshot expected = new BaseSnapshot(ops.io(),id,34,parentId,System.currentTimeMillis(),null,null,4,localInput(manifestList).location())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Snapshot inMemory = new BaseSnapshot(ops.io(),id,parentId,expected.timestampMillis(),null,null,4,manifests)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testJsonConversionWithManifestList['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(\"Manifest list should match\",expected.manifestListLocation(),snapshot.manifestListLocation())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "String json = SnapshotParser.toJson(expected)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<ManifestFile> manifests = ImmutableList.of(new GenericManifestFile(localInput(\"file:/tmp/manifest1.avro\"),0),new GenericManifestFile(localInput(\"file:/tmp/manifest2.avro\"),0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(\"Parent ID should match\",expected.parentId(),snapshot.parentId())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Files should match in memory list\",inMemory.allManifests(),expected.allManifests())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Files should match\",expected.allManifests(),snapshot.allManifests())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(\"Timestamp should match\",expected.timestampMillis(),snapshot.timestampMillis())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "File manifestList = temp.newFile(\"manifests\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Snapshot inMemory = new BaseSnapshot(ops.io(),id,parentId,expected.timestampMillis(),null,null,manifests)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Snapshot expected = new BaseSnapshot(ops.io(),id,34,parentId,System.currentTimeMillis(),null,null,localInput(manifestList).location())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16->15 [style = bold, label=""];
27->32 [style = bold, label=""];
14->28 [style = solid, label="parentId"];
7->17 [style = bold, label=""];
8->23 [style = bold, label=""];
25->34 [style = bold, label=""];
28->30 [style = bold, label=""];
14->3 [style = solid, label="parentId"];
20->9 [style = bold, label=""];
30->31 [style = solid, label="json"];
20->4 [style = solid, label="id"];
14->7 [style = solid, label="parentId"];
14->21 [style = solid, label="parentId"];
20->3 [style = solid, label="id"];
14->4 [style = solid, label="parentId"];
8->15 [style = dashed, label="0"];
22->21 [style = bold, label=""];
9->28 [style = solid, label="manifests"];
12->16 [style = bold, label=""];
3->22 [style = dashed, label="0"];
20->28 [style = solid, label="id"];
32->16 [style = bold, label=""];
4->21 [style = dashed, label="0"];
3->4 [style = bold, label=""];
15->18 [style = bold, label=""];
24->14 [style = bold, label=""];
2->13 [style = bold, label=""];
21->12 [style = bold, label=""];
14->26 [style = solid, label="parentId"];
9->28 [style = bold, label=""];
19->1 [style = bold, label=""];
6->5 [style = bold, label=""];
0->14 [style = bold, label=""];
26->27 [style = bold, label=""];
17->2 [style = bold, label=""];
9->21 [style = solid, label="manifests"];
34->26 [style = bold, label=""];
11->3 [style = bold, label=""];
18->6 [style = bold, label=""];
30->31 [style = bold, label=""];
33->25 [style = bold, label=""];
9->11 [style = solid, label="manifests"];
31->33 [style = bold, label=""];
20->22 [style = solid, label="id"];
22->16 [style = solid, label="expected"];
29->14 [style = bold, label=""];
13->16 [style = dashed, label="0"];
11->22 [style = bold, label=""];
3->16 [style = solid, label="expected"];
9->19 [style = bold, label=""];
4->12 [style = bold, label=""];
5->7 [style = bold, label=""];
16->15 [style = solid, label="json"];
14->22 [style = solid, label="parentId"];
9->4 [style = solid, label="manifests"];
13->8 [style = bold, label=""];
1->10 [style = bold, label=""];
18->33 [style = dashed, label="0"];
14->20 [style = bold, label=""];
28->30 [style = solid, label="expected"];
10->11 [style = bold, label=""];
20->21 [style = solid, label="id"];
}
