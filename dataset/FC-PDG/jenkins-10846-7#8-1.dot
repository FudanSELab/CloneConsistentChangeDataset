digraph {
23 [style = filled, label = "testGetRelativeLinkTo_JobContainedInViewWithinItemGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testGetRelativeLinkTo_JobFromComputer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "when(parent.getShortUrl()).thenReturn(\"parent/\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "StaplerRequest req = createMockRequest(contextPath)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "View view = mock()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String contextPath = \"/jenkins\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(Stapler.getCurrentRequest()).thenReturn(req)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\",\"parent/job/i/\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "TopLevelItemAndItemGroup parent = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ItemGroup parent = j@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(view.getItems()).thenReturn(Collections.singletonList(i))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(\"/jenkins/job/i/\",result)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "createMockAncestors(req,createAncestor(computer,\".\"),createAncestor(j,\"../..\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String contextPath = \"/jenkins\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "createMockAncestors(req,createAncestor(j,\"../../..\"),createAncestor(parent,\"../..\"),createAncestor(view,\".\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Jenkins j = createMockJenkins()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testGetRelativeLinkTo_JobFromComputer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "mockStatic()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(parent.getItemGroup()).thenReturn(parent)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "when(view.getOwner()).thenReturn(parent)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(\"job/i/\",result)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0->2 [style = solid, label="req"];
9->11 [style = bold, label=""];
14->17 [style = solid, label="i"];
3->5 [style = solid, label="i"];
5->6 [style = solid, label="result"];
21->18 [style = solid, label="parent"];
20->0 [style = bold, label=""];
17->19 [style = solid, label="result"];
8->0 [style = solid, label="contextPath"];
7->18 [style = solid, label="j"];
16->18 [style = solid, label="view"];
7->4 [style = bold, label=""];
7->11 [style = solid, label="j"];
2->9 [style = bold, label=""];
21->14 [style = solid, label="parent"];
16->22 [style = bold, label=""];
4->21 [style = dashed, label="0"];
10->7 [style = bold, label=""];
17->19 [style = bold, label=""];
12->7 [style = bold, label=""];
9->16 [style = bold, label=""];
0->1 [style = solid, label="contextPath"];
7->4 [style = solid, label="j"];
8->0 [style = bold, label=""];
15->17 [style = bold, label=""];
3->5 [style = bold, label=""];
21->20 [style = bold, label=""];
5->6 [style = bold, label=""];
1->9 [style = solid, label="req"];
11->3 [style = bold, label=""];
0->1 [style = bold, label=""];
6->19 [style = dashed, label="0"];
21->22 [style = solid, label="parent"];
7->21 [style = bold, label=""];
4->8 [style = bold, label=""];
14->15 [style = bold, label=""];
0->11 [style = solid, label="req"];
9->11 [style = solid, label="computer"];
1->2 [style = bold, label=""];
1->18 [style = solid, label="req"];
14->15 [style = solid, label="i"];
23->7 [style = bold, label=""];
18->14 [style = bold, label=""];
22->13 [style = bold, label=""];
4->3 [style = solid, label="parent"];
13->18 [style = bold, label=""];
21->13 [style = solid, label="parent"];
}
