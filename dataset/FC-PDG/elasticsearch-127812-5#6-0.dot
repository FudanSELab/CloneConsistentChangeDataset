digraph {
3 [style = filled, label = "String name@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String type = (String)fieldNode.remove(\"type\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "throw new MapperParsingException(\"(\" + propName + \"( on runtime field (\" + name + \"( of type (\" + type + \"( must not have a (null( value\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final Object propNode = entry.getValue()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "MappingParserContext parserContext@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "parse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "propNode == null && parameter.canAcceptNull() == false@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "parse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Iterator<Map.Entry<String,Object>> iterator = fieldNode.entrySet().iterator()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "paramsMap.put(param.name,param)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Map<String,Object> fieldNode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "parameter.validate()@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "parameter.parse(name,parserContext,propNode)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "iterator.remove()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "iterator.hasNext()@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final String propName = entry.getKey()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Map.Entry<String,Object> entry = iterator.next()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<String,Object> fieldNode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "throw new MapperParsingException(\"unknown parameter (\" + propName + \"( on runtime field (\" + name + \"( of type (\" + type + \"(\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "MappingParserContext parserContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "parse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Parameter<?> parameter = paramsMap.get(propName)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Map<String,Parameter<?>> paramsMap = new HashMap<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "parameter == null@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String name@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MappingParserContext parserContext@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9->18 [style = bold, label=""];
23->22 [style = bold, label=""];
8->10 [style = solid, label="propName"];
24->18 [style = solid, label="type"];
23->9 [style = bold, label=""];
7->19 [style = dotted, label="true"];
9->19 [style = bold, label=""];
20->7 [style = bold, label=""];
17->19 [style = solid, label="propNode"];
7->17 [style = dotted, label="true"];
10->23 [style = bold, label=""];
1->0 [style = dotted, label="true"];
24->20 [style = bold, label=""];
12->14 [style = bold, label=""];
7->8 [style = dotted, label="true"];
7->10 [style = dotted, label="true"];
17->10 [style = bold, label=""];
19->15 [style = bold, label=""];
3->18 [style = solid, label="name"];
16->13 [style = dotted, label="true"];
14->24 [style = bold, label=""];
8->17 [style = bold, label=""];
15->7 [style = bold, label=""];
7->21 [style = bold, label=""];
7->9 [style = dotted, label="true"];
10->23 [style = solid, label="parameter"];
22->9 [style = bold, label=""];
9->18 [style = dotted, label="true"];
16->12 [style = bold, label=""];
6->5 [style = dotted, label="true"];
6->4 [style = dotted, label="true"];
23->22 [style = dotted, label="true"];
1->3 [style = dotted, label="true"];
3->22 [style = solid, label="name"];
24->22 [style = solid, label="type"];
18->19 [style = bold, label=""];
7->15 [style = dotted, label="true"];
7->25 [style = bold, label=""];
6->3 [style = dotted, label="true"];
16->11 [style = dotted, label="true"];
3->19 [style = solid, label="name"];
1->2 [style = dotted, label="true"];
25->8 [style = bold, label=""];
7->25 [style = dotted, label="true"];
8->18 [style = solid, label="propName"];
13->19 [style = solid, label="parserContext"];
17->9 [style = solid, label="propNode"];
8->22 [style = solid, label="propName"];
7->23 [style = dotted, label="true"];
16->3 [style = dotted, label="true"];
3->14 [style = solid, label="name"];
}
