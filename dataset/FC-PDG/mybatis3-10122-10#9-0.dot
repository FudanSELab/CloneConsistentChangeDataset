digraph {
70 [style = filled, label = "assertThat(config.isCacheEnabled(),is(true))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "InputStream inputStream = Resources.getResourceAsStream(resource)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(config.isAggressiveLazyLoading(),is(false))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertNull(config.getLogImpl())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "props.put(\"prop2\",\"cccc\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertNull(config.getDefaultFetchSize())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertThat(config.isAggressiveLazyLoading(),is(true))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "shouldSuccessfullyLoadXMLConfigFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "XMLConfigBuilder builder = new XMLConfigBuilder(inputStream,null,props)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(config.getDefaultExecutorType(),is(ExecutorType.BATCH))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(config.getVfsImpl().getName(),is(.getName()))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(config.getLogImpl().getName(),is(.getName()))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertNull(config.getConfigurationFactory())@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Properties props = new Properties()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertThat(config.isSafeResultHandlerEnabled(),is(true))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertThat(config.getMapperRegistry().hasMapper(),is(true))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertNull(config.getDefaultStatementTimeout())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertThat(config.isMapUnderscoreToCamelCase(),is(false))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertThat(config.getDefaultScriptingLanuageInstance(),is(instanceOf()))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(config.isUseColumnLabel(),is(false))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(config.getTypeHandlerRegistry().getTypeHandler(),is(instanceOf()))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(plugin.getProperties().size(),is(1))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(config.getMapperRegistry().hasMapper(),is(true))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(config.getJdbcTypeForNull(),is(JdbcType.NULL))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(environment.getId(),is(\"development\"))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(config.getConfigurationFactory().getName(),is(.getName()))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertThat(config.isUseColumnLabel(),is(true))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertThat(config.isMultipleResultSetsEnabled(),is(true))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\"),is(\"100\"))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(config.isCallSettersOnNulls(),is(true))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(config.isSafeRowBoundsEnabled(),is(true))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(config.getMapperRegistry().getMappers().size(),is(4))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertThat(config.getProxyFactory(),is(instanceOf()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(config.getDatabaseId(),is(\"derby\"))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(environment.getDataSource(),is(instanceOf()))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(config.getAutoMappingUnknownColumnBehavior(),is(AutoMappingUnknownColumnBehavior.WARNING))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "shouldSuccessfullyLoadXMLConfigFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
69 [style = filled, label = "assertThat(config.isSafeRowBoundsEnabled(),is(false))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "Configuration config = builder.parse()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "assertThat(config.getDefaultExecutorType(),is(ExecutorType.SIMPLE))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertThat(config.getReflectorFactory(),is(instanceOf()))@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "assertThat(config.getLazyLoadTriggerMethods(),is((Set<String>)new HashSet<String>(Arrays.asList(\"equals\",\"clone\",\"hashCode\",\"toString\"))))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(environment.getTransactionFactory(),is(instanceOf()))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(config.isMultipleResultSetsEnabled(),is(false))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(config.isCacheEnabled(),is(false))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Environment environment = config.getEnvironment()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(config.getMapperRegistry().hasMapper(),is(true))@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertThat(plugin.getProperties().getProperty(\"pluginProperty\"),is(\"100\"))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertThat(config.isLazyLoadingEnabled(),is(true))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(config.getObjectWrapperFactory(),is(instanceOf()))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertThat(config.getJdbcTypeForNull(),is(JdbcType.OTHER))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertThat(config.getDefaultStatementTimeout(),is(10))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(config.isSafeResultHandlerEnabled(),is(false))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(config.isMapUnderscoreToCamelCase(),is(true))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertThat(config.isLazyLoadingEnabled(),is(false))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(config.getLazyLoadTriggerMethods(),is((Set<String>)new HashSet<String>(Arrays.asList(\"equals\",\"clone\",\"hashCode\",\"toString\",\"xxx\"))))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(config.getDefaultFetchSize(),is(100))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertThat(config.getLocalCacheScope(),is(LocalCacheScope.SESSION))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertThat(config.isCallSettersOnNulls(),is(false))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertNotNull(config)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(objectFactory.getProperties().size(),is(1))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(config.isUseGeneratedKeys(),is(true))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(config.getProxyFactory(),is(instanceOf()))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertThat(config.getAutoMappingUnknownColumnBehavior(),is(AutoMappingUnknownColumnBehavior.NONE))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(config.getTypeHandlerRegistry().getTypeHandler(,JdbcType.VARCHAR),is(instanceOf()))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(config.getDefaultScriptingLanuageInstance(),is(instanceOf()))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(config.getAutoMappingBehavior(),is(AutoMappingBehavior.NONE))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertNull(config.getLogPrefix())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertThat(config.getAutoMappingBehavior(),is(AutoMappingBehavior.PARTIAL))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertThat(config.getLocalCacheScope(),is(LocalCacheScope.STATEMENT))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertThat(config.getLogPrefix(),is(\"mybatis_\"))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertThat(config.isUseGeneratedKeys(),is(false))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertThat(config.getMapperRegistry().hasMapper(),is(true))@@@57@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(config.getTypeHandlerRegistry().getTypeHandler(),is(instanceOf()))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(config.getTypeHandlerRegistry().getTypeHandler(),is(instanceOf()))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "XMLConfigBuilder builder = new XMLConfigBuilder(inputStream)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "shouldSuccessfullyLoadMinimalXMLConfigFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
69->63 [style = bold, label=""];
11->46 [style = bold, label=""];
21->22 [style = bold, label=""];
48->30 [style = bold, label=""];
23->10 [style = bold, label=""];
10->39 [style = bold, label=""];
22->81 [style = dashed, label="0"];
80->75 [style = bold, label=""];
68->79 [style = bold, label=""];
70->71 [style = bold, label=""];
47->21 [style = bold, label=""];
45->0 [style = bold, label=""];
51->79 [style = dashed, label="0"];
32->70 [style = dashed, label="0"];
71->58 [style = bold, label=""];
4->24 [style = bold, label=""];
57->65 [style = bold, label=""];
40->56 [style = bold, label=""];
44->41 [style = bold, label=""];
60->69 [style = bold, label=""];
12->46 [style = solid, label="props"];
52->53 [style = bold, label=""];
26->51 [style = bold, label=""];
29->60 [style = dashed, label="0"];
76->74 [style = bold, label=""];
58->81 [style = bold, label=""];
47->71 [style = dashed, label="0"];
48->69 [style = dashed, label="0"];
36->54 [style = bold, label=""];
37->75 [style = dashed, label="0"];
27->33 [style = bold, label=""];
66->62 [style = bold, label=""];
15->9 [style = bold, label=""];
20->16 [style = bold, label=""];
16->25 [style = bold, label=""];
8->32 [style = bold, label=""];
21->58 [style = dashed, label="0"];
9->40 [style = bold, label=""];
42->49 [style = bold, label=""];
72->59 [style = bold, label=""];
65->82 [style = bold, label=""];
13->35 [style = bold, label=""];
18->59 [style = dashed, label="0"];
30->63 [style = dashed, label="0"];
49->14 [style = solid, label="resource"];
29->48 [style = bold, label=""];
37->38 [style = bold, label=""];
77->60 [style = bold, label=""];
31->17 [style = bold, label=""];
2->72 [style = dashed, label="0"];
43->1 [style = bold, label=""];
49->14 [style = bold, label=""];
73->66 [style = bold, label=""];
78->80 [style = bold, label=""];
51->4 [style = bold, label=""];
49->61 [style = dashed, label="0"];
22->2 [style = bold, label=""];
50->64 [style = bold, label=""];
14->46 [style = solid, label="inputStream"];
6->28 [style = bold, label=""];
8->64 [style = dashed, label="0"];
35->31 [style = bold, label=""];
53->26 [style = bold, label=""];
67->50 [style = bold, label=""];
40->43 [style = bold, label=""];
14->76 [style = solid, label="inputStream"];
82->73 [style = bold, label=""];
61->14 [style = solid, label="resource"];
14->12 [style = bold, label=""];
74->67 [style = bold, label=""];
3->27 [style = bold, label=""];
7->3 [style = bold, label=""];
1->45 [style = bold, label=""];
17->36 [style = bold, label=""];
25->52 [style = bold, label=""];
33->15 [style = bold, label=""];
81->72 [style = bold, label=""];
41->8 [style = bold, label=""];
24->6 [style = bold, label=""];
74->67 [style = solid, label="config"];
50->44 [style = bold, label=""];
55->49 [style = bold, label=""];
28->7 [style = bold, label=""];
5->78 [style = dashed, label="0"];
59->78 [style = bold, label=""];
56->43 [style = bold, label=""];
19->20 [style = bold, label=""];
64->70 [style = bold, label=""];
38->29 [style = bold, label=""];
18->5 [style = bold, label=""];
34->80 [style = dashed, label="0"];
5->34 [style = bold, label=""];
0->13 [style = bold, label=""];
20->65 [style = dashed, label="0"];
83->61 [style = bold, label=""];
52->66 [style = dashed, label="0"];
46->50 [style = bold, label=""];
2->18 [style = bold, label=""];
41->50 [style = dashed, label="0"];
54->23 [style = bold, label=""];
63->57 [style = bold, label=""];
12->11 [style = bold, label=""];
14->76 [style = bold, label=""];
32->47 [style = bold, label=""];
25->73 [style = dashed, label="0"];
75->77 [style = bold, label=""];
30->19 [style = bold, label=""];
34->37 [style = bold, label=""];
61->14 [style = bold, label=""];
62->68 [style = bold, label=""];
}
