digraph {
4 [style = filled, label = "Assert.assertEquals(6 * 4.123456789123456,result)@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "values.put(\"c\",4.12345678)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(14.6D,result)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "values.put(\"d\",4.12345678)@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "values.put(\"c\",3)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "values.put(\"a\",4.123456789123456)@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "Assert.assertEquals(14L,result)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Assert.assertEquals(0L,result)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "values.put(\"d\",4.123456789123456)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(14.2D,result)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "addManyFieldsWithManySubAdds['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Assert.assertEquals(6 * 123456789123456789L,result)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "values.put(\"b\",2.1)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "values.clear()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "values.clear()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "values.put(\"c\",3.1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertEquals(14.623456789123456,result)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "values.put(\"d\",4)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "values.put(\"c\",3.1)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "values.put(\"b\",2.1)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "values.put(\"b\",2)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "values.clear()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "values.put(\"a\",1.1)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "values.put(\"a\",1.1)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "values.put(\"b\",4.12345678)@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "values.put(\"b\",123456789123456789L)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertEquals(6 * 4.12345678,result)@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "values.put(\"c\",4.123456789123456)@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "values.put(\"d\",4.123456789123456)@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "subManyFieldsWithSubsubs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"sub(a,b,sub(c,d))\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "values.put(\"a\",1.1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "values.put(\"a\",123456789123456789L)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Assert.assertEquals(0L,result)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "values.clear()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "values.put(\"d\",123456789123456789L)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "values.put(\"d\",4.1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "values.put(\"b\",4.123456789123456)@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "addManyFieldsWithManySubAdds['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "values.clear()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "values.put(\"a\",4.12345678)@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->56 [style = dashed, label="0"];
42->41 [style = bold, label=""];
32->37 [style = bold, label=""];
23->51 [style = dashed, label="0"];
11->29 [style = bold, label=""];
28->9 [style = bold, label=""];
58->60 [style = bold, label=""];
30->36 [style = bold, label=""];
17->19 [style = solid, label="result"];
47->27 [style = bold, label=""];
22->52 [style = dashed, label="0"];
0->44 [style = solid, label="result"];
3->34 [style = bold, label=""];
37->5 [style = bold, label=""];
60->47 [style = bold, label=""];
31->30 [style = bold, label=""];
25->10 [style = bold, label=""];
48->24 [style = bold, label=""];
2->31 [style = bold, label=""];
53->52 [style = bold, label=""];
26->49 [style = bold, label=""];
38->45 [style = bold, label=""];
34->42 [style = bold, label=""];
46->39 [style = bold, label=""];
22->23 [style = bold, label=""];
23->48 [style = bold, label=""];
8->22 [style = bold, label=""];
35->57 [style = bold, label=""];
7->33 [style = bold, label=""];
45->14 [style = bold, label=""];
10->0 [style = bold, label=""];
16->57 [style = dashed, label="0"];
24->4 [style = solid, label="result"];
59->28 [style = bold, label=""];
52->51 [style = bold, label=""];
5->26 [style = solid, label="result"];
27->20 [style = bold, label=""];
31->30 [style = solid, label="result"];
21->60 [style = dashed, label="0"];
28->29 [style = bold, label=""];
21->47 [style = bold, label=""];
1->8 [style = bold, label=""];
50->17 [style = bold, label=""];
41->16 [style = solid, label="result"];
9->46 [style = bold, label=""];
5->26 [style = bold, label=""];
49->28 [style = bold, label=""];
6->44 [style = bold, label=""];
13->50 [style = bold, label=""];
17->12 [style = solid, label="result"];
17->12 [style = bold, label=""];
16->1 [style = bold, label=""];
41->57 [style = solid, label="result"];
39->2 [style = bold, label=""];
33->43 [style = bold, label=""];
41->35 [style = solid, label="result"];
40->32 [style = bold, label=""];
54->21 [style = bold, label=""];
24->56 [style = solid, label="result"];
14->13 [style = bold, label=""];
18->21 [style = bold, label=""];
15->56 [style = bold, label=""];
26->59 [style = bold, label=""];
24->15 [style = bold, label=""];
41->35 [style = bold, label=""];
35->16 [style = bold, label=""];
49->59 [style = dashed, label="0"];
48->55 [style = dashed, label="0"];
0->6 [style = bold, label=""];
29->3 [style = bold, label=""];
55->24 [style = bold, label=""];
8->53 [style = dashed, label="0"];
31->36 [style = solid, label="result"];
24->15 [style = solid, label="result"];
5->59 [style = solid, label="result"];
20->40 [style = bold, label=""];
0->6 [style = solid, label="result"];
51->55 [style = bold, label=""];
15->4 [style = bold, label=""];
44->11 [style = bold, label=""];
36->38 [style = bold, label=""];
12->19 [style = bold, label=""];
43->25 [style = bold, label=""];
19->7 [style = bold, label=""];
1->53 [style = bold, label=""];
5->49 [style = solid, label="result"];
}
