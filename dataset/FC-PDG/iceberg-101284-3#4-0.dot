digraph {
14 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (79 is not > 79)\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\",shouldRead)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testIntegerLt['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "boolean shouldRead = new InclusiveMetricsEvaluator(SCHEMA,greaterThan(\"id\",85)).eval(FILE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,greaterThan(\"id\",79)).eval(FILE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testIntegerGt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,greaterThan(\"id\",78)).eval(FILE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testIntegerLt['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(\"Should read: may possible ids\",shouldRead)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "boolean shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThan(\"id\",5)).eval(FILE)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThan(\"id\",INT_MIN_VALUE + 1)).eval(FILE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThan(\"id\",INT_MAX_VALUE)).eval(FILE)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThan(\"id\",79)).eval(FILE)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "boolean shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThan(\"id\",INT_MIN_VALUE - 25)).eval(FILE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,greaterThan(\"id\",75)).eval(FILE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThan(\"id\",31)).eval(FILE)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThan(\"id\",INT_MIN_VALUE)).eval(FILE)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,lessThan(\"id\",30)).eval(FILE)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(\"Should read: one possible id\",shouldRead)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (30 is not < 30)\",shouldRead)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
6->17 [style = bold, label=""];
5->10 [style = bold, label=""];
2->20 [style = dashed, label="0"];
0->6 [style = solid, label="shouldRead"];
0->6 [style = bold, label=""];
7->14 [style = dashed, label="0"];
19->20 [style = bold, label=""];
16->6 [style = bold, label=""];
17->3 [style = solid, label="shouldRead"];
18->15 [style = bold, label=""];
0->16 [style = dashed, label="0"];
1->3 [style = bold, label=""];
7->0 [style = bold, label=""];
20->14 [style = bold, label=""];
15->19 [style = bold, label=""];
10->7 [style = bold, label=""];
13->11 [style = bold, label=""];
10->7 [style = solid, label="shouldRead"];
2->10 [style = dashed, label="0"];
9->6 [style = bold, label=""];
4->5 [style = solid, label="shouldRead"];
7->9 [style = bold, label=""];
6->1 [style = bold, label=""];
1->12 [style = dashed, label="0"];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
1->17 [style = dashed, label="0"];
20->14 [style = solid, label="shouldRead"];
4->15 [style = dashed, label="0"];
9->6 [style = solid, label="shouldRead"];
17->3 [style = bold, label=""];
2->7 [style = solid, label="shouldRead"];
12->3 [style = bold, label=""];
2->7 [style = bold, label=""];
8->4 [style = bold, label=""];
4->11 [style = dashed, label="0"];
0->9 [style = dashed, label="0"];
12->3 [style = solid, label="shouldRead"];
5->19 [style = dashed, label="0"];
4->5 [style = bold, label=""];
16->6 [style = solid, label="shouldRead"];
1->3 [style = solid, label="shouldRead"];
15->19 [style = solid, label="shouldRead"];
11->5 [style = solid, label="shouldRead"];
6->12 [style = bold, label=""];
}
