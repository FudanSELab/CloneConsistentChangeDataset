digraph {
11 [style = filled, label = "return result@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "AlterDefinitionSegment each@@@6@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "each instanceof ColumnDefinitionSegment@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "each instanceof DropConstraintDefinitionSegment@@@25@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "CollectionValue<CreateDefinitionSegment> createDefinitions = (CollectionValue<CreateDefinitionSegment>)visit(ctx.createDefinitionClause())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "result.setRenameTable(((RenameTableDefinitionSegment)each).getRenameTable())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "null != ctx.alterDefinitionClause()@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "result.getModifyConstraintDefinitions().add((ModifyConstraintDefinitionSegment)each)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "each instanceof AddConstraintDefinitionSegment@@@16@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "visitAlterTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@11@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "CreateDefinitionSegment each@@@7@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "((CollectionValue<AlterDefinitionSegment>)visit(ctx.alterDefinitionClause())).getValue()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "each instanceof ModifyColumnDefinitionSegment@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "each instanceof RenameTableDefinitionSegment@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "visitAlterTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "each instanceof ModifyConstraintDefinitionSegment@@@22@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@16@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "visitCreateTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "result.getColumnDefinitions().add((ColumnDefinitionSegment)each)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableNameClause().tableName()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "result.getAddConstraintDefinitions().add((AddConstraintDefinitionSegment)each)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "result.getDropConstraintDefinitions().add((DropConstraintDefinitionSegment)each)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "OracleCreateTableStatement result = new OracleCreateTableStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "AlterDefinitionSegment each@@@6@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableName()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final AlterTableContext ctx@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "result.getConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "PostgreSQLAlterTableStatement result = new PostgreSQLAlterTableStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "result.getAddColumnDefinitions().add((AddColumnDefinitionSegment)each)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "null != ctx.createDefinitionClause()@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "createDefinitions.getValue()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "return result@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "result.getValidateConstraintDefinitions().add((ValidateConstraintDefinitionSegment)each)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "each instanceof AddColumnDefinitionSegment@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final CreateTableContext ctx@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "result.getDropColumnDefinitions().add((DropColumnDefinitionSegment)each)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "each instanceof ValidateConstraintDefinitionSegment@@@19@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "each instanceof DropColumnDefinitionSegment@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "result.getModifyColumnDefinitions().add((ModifyColumnDefinitionSegment)each)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->11 [style = bold, label=""];
29->30 [style = bold, label=""];
18->24 [style = dotted, label="false"];
32->30 [style = solid, label="result"];
19->11 [style = bold, label=""];
38->31 [style = bold, label=""];
18->20 [style = dotted, label="true"];
3->16 [style = bold, label=""];
19->1 [style = bold, label=""];
38->30 [style = bold, label=""];
17->15 [style = dotted, label="true"];
1->8 [style = dotted, label="false"];
15->11 [style = bold, label=""];
21->1 [style = bold, label=""];
37->32 [style = bold, label=""];
16->38 [style = dotted, label="true"];
2->25 [style = bold, label=""];
25->21 [style = bold, label=""];
25->21 [style = dotted, label="true"];
0->7 [style = dotted, label="true"];
10->11 [style = bold, label=""];
25->18 [style = dotted, label="false"];
24->19 [style = bold, label=""];
28->36 [style = bold, label=""];
26->17 [style = bold, label=""];
28->30 [style = bold, label=""];
24->26 [style = dotted, label="false"];
33->28 [style = bold, label=""];
6->32 [style = dashed, label="0"];
36->31 [style = bold, label=""];
10->31 [style = dashed, label="0"];
31->29 [style = bold, label=""];
28->36 [style = dotted, label="true"];
26->23 [style = dotted, label="true"];
2->9 [style = bold, label=""];
2->25 [style = dotted, label="false"];
0->28 [style = dashed, label="0"];
16->21 [style = dashed, label="0"];
8->2 [style = dotted, label="false"];
5->1 [style = bold, label=""];
18->20 [style = bold, label=""];
21->11 [style = bold, label=""];
6->11 [style = solid, label="result"];
17->15 [style = bold, label=""];
24->19 [style = dotted, label="true"];
5->11 [style = bold, label=""];
9->1 [style = bold, label=""];
14->4 [style = dotted, label="true"];
10->1 [style = bold, label=""];
31->29 [style = dotted, label="true"];
28->34 [style = dotted, label="true"];
14->6 [style = bold, label=""];
4->35 [style = dashed, label="0"];
1->39 [style = dashed, label="0"];
18->24 [style = bold, label=""];
12->33 [style = dashed, label="0"];
1->8 [style = bold, label=""];
1->10 [style = dotted, label="true"];
17->1 [style = bold, label=""];
2->3 [style = bold, label=""];
2->3 [style = dotted, label="false"];
25->18 [style = bold, label=""];
0->11 [style = bold, label=""];
20->1 [style = bold, label=""];
26->17 [style = dotted, label="false"];
27->4 [style = dotted, label="true"];
32->33 [style = bold, label=""];
37->35 [style = dotted, label="true"];
24->26 [style = bold, label=""];
2->9 [style = dotted, label="true"];
8->2 [style = bold, label=""];
16->1 [style = bold, label=""];
0->1 [style = bold, label=""];
16->31 [style = bold, label=""];
16->30 [style = bold, label=""];
3->17 [style = bold, label=""];
23->11 [style = bold, label=""];
0->1 [style = dotted, label="true"];
20->11 [style = bold, label=""];
15->1 [style = bold, label=""];
3->17 [style = dotted, label="false"];
6->12 [style = bold, label=""];
28->31 [style = dotted, label="true"];
16->38 [style = dashed, label="0"];
16->11 [style = bold, label=""];
0->13 [style = dotted, label="true"];
13->36 [style = dashed, label="0"];
31->16 [style = bold, label=""];
31->16 [style = dotted, label="false"];
29->31 [style = bold, label=""];
12->0 [style = bold, label=""];
27->6 [style = bold, label=""];
0->22 [style = dotted, label="true"];
8->5 [style = bold, label=""];
8->5 [style = dotted, label="true"];
26->23 [style = bold, label=""];
23->1 [style = bold, label=""];
28->39 [style = dotted, label="true"];
1->10 [style = bold, label=""];
3->16 [style = dotted, label="true"];
16->38 [style = bold, label=""];
17->11 [style = bold, label=""];
3->25 [style = dashed, label="0"];
}
