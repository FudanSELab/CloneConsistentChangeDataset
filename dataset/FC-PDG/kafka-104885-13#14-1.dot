digraph {
7 [style = filled, label = "workerTask.iteration()@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "sinkTask.put(EasyMock.anyObject())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "expectConsumerPoll(0)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "EasyMock.expectLastCall()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "workerCurrentOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "workerStartingOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"currentOffsets\"))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "committableOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "workerTask.initializeAndStart()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "workerTask.iteration()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "workerStartingOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "workerTask.iteration()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(workerCurrentOffsets,Whitebox.getInternalState(workerTask,\"currentOffsets\"))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "workerTask.initializeAndStart()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "taskOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(committableOffsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "workerCurrentOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final Capture<OffsetCommitCallback> callback = EasyMock.newCapture()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "sinkTask.put(EasyMock.anyObject())@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "expectInitializeTask()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "PowerMock.replayAll()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "sinkTask.put(EasyMock.anyObject())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "testIgnoredCommit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "expectConversionAndTransformation(2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testPreCommit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "consumer.commitAsync(EasyMock.eq(committableOffsets),EasyMock.capture(callback))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "expectConsumerPoll(1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> taskOffsets = new HashMap<>()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.expectLastCall()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "EasyMock.expect(consumer.assignment()).andReturn(workerCurrentOffsets.keySet())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> workerStartingOffsets = new HashMap<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "taskOffsets.put(new TopicPartition(TOPIC,3),new OffsetAndMetadata(FIRST_OFFSET))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "EasyMock.expectLastCall().andReturn(taskOffsets)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "expectTaskGetTopic(true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "sinkTask.put(EasyMock.anyObject())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "taskOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "expectConsumerPoll(2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "workerTask.iteration()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "workerTask.iteration()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"currentOffsets\"))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "expectConversionAndTransformation(1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "committableOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "createTask(initialState)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expectPollInitialAssignment()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "EasyMock.expectLastCall().andReturn(workerStartingOffsets)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> committableOffsets = new HashMap<>()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "sinkTaskContext.getValue().requestCommit()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "PowerMock.verifyAll()@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testPreCommit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "sinkTask.preCommit(workerCurrentOffsets)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "workerTask.iteration()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "EasyMock.expectLastCall().andAnswer(null)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "workerCurrentOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> workerCurrentOffsets = new HashMap<>()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "PowerMock.verifyAll()@@@31@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sinkTaskContext.getValue().requestCommit()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31->14 [style = bold, label=""];
5->3 [style = bold, label=""];
36->6 [style = bold, label=""];
24->28 [style = bold, label=""];
8->34 [style = bold, label=""];
0->30 [style = bold, label=""];
58->50 [style = bold, label=""];
16->13 [style = bold, label=""];
2->26 [style = bold, label=""];
25->1 [style = bold, label=""];
56->52 [style = bold, label=""];
18->36 [style = solid, label="committableOffsets"];
38->50 [style = dashed, label="0"];
41->7 [style = bold, label=""];
50->23 [style = bold, label=""];
21->19 [style = bold, label=""];
5->40 [style = solid, label="taskOffsets"];
29->30 [style = bold, label=""];
47->48 [style = bold, label=""];
12->21 [style = bold, label=""];
30->57 [style = bold, label=""];
45->27 [style = bold, label=""];
21->41 [style = solid, label="workerStartingOffsets"];
28->30 [style = solid, label="workerCurrentOffsets"];
22->31 [style = bold, label=""];
40->15 [style = bold, label=""];
28->54 [style = bold, label=""];
38->23 [style = bold, label=""];
21->37 [style = solid, label="workerStartingOffsets"];
14->58 [style = bold, label=""];
48->53 [style = bold, label=""];
21->46 [style = solid, label="workerStartingOffsets"];
49->34 [style = bold, label=""];
32->2 [style = bold, label=""];
54->0 [style = bold, label=""];
15->35 [style = bold, label=""];
46->41 [style = bold, label=""];
39->33 [style = bold, label=""];
34->22 [style = bold, label=""];
27->42 [style = bold, label=""];
19->24 [style = bold, label=""];
35->36 [style = solid, label="callback"];
57->56 [style = bold, label=""];
23->43 [style = dashed, label="0"];
17->0 [style = bold, label=""];
28->26 [style = solid, label="workerCurrentOffsets"];
55->46 [style = bold, label=""];
18->10 [style = bold, label=""];
33->18 [style = bold, label=""];
10->29 [style = bold, label=""];
43->12 [style = bold, label=""];
42->11 [style = bold, label=""];
40->57 [style = dashed, label="0"];
21->32 [style = solid, label="workerStartingOffsets"];
7->45 [style = dashed, label="0"];
51->47 [style = bold, label=""];
6->41 [style = bold, label=""];
4->20 [style = bold, label=""];
44->34 [style = bold, label=""];
53->55 [style = bold, label=""];
7->27 [style = bold, label=""];
9->58 [style = dashed, label="0"];
28->17 [style = bold, label=""];
1->32 [style = bold, label=""];
3->39 [style = bold, label=""];
30->40 [style = bold, label=""];
14->9 [style = bold, label=""];
23->12 [style = bold, label=""];
26->37 [style = bold, label=""];
41->45 [style = bold, label=""];
18->4 [style = solid, label="committableOffsets"];
35->36 [style = bold, label=""];
52->51 [style = bold, label=""];
21->57 [style = solid, label="workerStartingOffsets"];
9->38 [style = bold, label=""];
37->16 [style = bold, label=""];
38->43 [style = bold, label=""];
11->25 [style = bold, label=""];
17->54 [style = dashed, label="0"];
0->5 [style = bold, label=""];
13->4 [style = bold, label=""];
}
