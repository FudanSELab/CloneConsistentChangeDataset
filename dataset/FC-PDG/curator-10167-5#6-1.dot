digraph {
33 [style = filled, label = "discovery.unregisterService(instance)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ServiceInstance<String> instance = ServiceInstance.builder().payload(\"thing\").name(\"test\").port(10064).build()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ServiceDiscovery<String> discovery = ServiceDiscoveryBuilder.builder().basePath(\"/test\").client(client).thisInstance(instance).serializer(slowSerializer).watchInstances(true).build()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "{Collections.reverse(closeables)for (Closeable c : closeables){CloseableUtils.closeQuietly(c)}}@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "server.stop()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "testUnregisterService['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "discovery.start()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CuratorFramework client = null@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Assert.assertTrue(discovery.queryForInstances(name).isEmpty(),\"Service should have unregistered.\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertFalse(discovery.queryForInstances(name).isEmpty(),\"Service should start registered.\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(discovery.queryForInstances(\"test\"),list)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testNoServerOnStart['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final CountDownLatch restartLatch = new CountDownLatch(1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "InstanceSerializer<String> slowSerializer = new JsonInstanceSerializer<String>(){@Override public byte(( serialize(ServiceInstance<String> instance){if (first) {System.out.println(\"Serializer first registration.\")first = false}{System.out.println(\"Waiting for reconnect to finish.\")restartLatch.await()}return super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@11f5003instance}}@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<Closeable> closeables = Lists.newArrayList()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "list.add(instance)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<ServiceInstance<String>> list = Lists.newArrayList()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final String name = \"name\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "client.start()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "client.start()@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "server.restart()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Assert.assertEquals(discovery.queryForNames(),Collections.singletonList(\"test\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "{CloseableUtils.closeQuietly(discovery)CloseableUtils.closeQuietly(client)}@@@20@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "closeables.add(discovery)@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ServiceDiscovery<String> discovery = null@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "testNoServerOnStart['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "discovery.start()@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "closeables.add(client)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "restartLatch.countDown()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "{Collections.reverse(closeables)for (Closeable c : closeables){CloseableUtils.closeQuietly(c)}}@@@21@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "new Timing().sleepABit()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "server.stop()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "discovery = ServiceDiscoveryBuilder.builder().basePath(\"/test\").client(client).thisInstance(instance).build()@@@11@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "ServiceInstance<String> instance = ServiceInstance.builder().payload(\"thing\").name(name).port(10064).build()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Timing timing = new Timing()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(discovery.queryForInstances(\"test\"),list)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "server.restart()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
13->25 [style = bold, label=""];
0->30 [style = bold, label=""];
29->15 [style = bold, label=""];
16->13 [style = bold, label=""];
32->37 [style = bold, label=""];
7->31 [style = dashed, label="0"];
7->25 [style = solid, label="discovery"];
0->6 [style = bold, label=""];
27->3 [style = bold, label=""];
12->15 [style = bold, label=""];
15->11 [style = solid, label="client"];
18->19 [style = bold, label=""];
6->16 [style = solid, label="instance"];
15->18 [style = dashed, label="0"];
14->10 [style = bold, label=""];
31->2 [style = bold, label=""];
20->3 [style = bold, label=""];
10->21 [style = bold, label=""];
3->33 [style = bold, label=""];
4->13 [style = solid, label="list"];
34->12 [style = bold, label=""];
19->6 [style = bold, label=""];
6->13 [style = solid, label="instance"];
33->26 [style = bold, label=""];
28->32 [style = bold, label=""];
13->32 [style = dashed, label="0"];
24->20 [style = bold, label=""];
23->14 [style = bold, label=""];
17->36 [style = bold, label=""];
16->9 [style = solid, label="list"];
12->37 [style = solid, label="closeables"];
7->24 [style = bold, label=""];
11->0 [style = bold, label=""];
22->18 [style = bold, label=""];
12->29 [style = bold, label=""];
15->11 [style = bold, label=""];
36->27 [style = bold, label=""];
30->33 [style = solid, label="instance"];
21->22 [style = bold, label=""];
10->12 [style = bold, label=""];
7->2 [style = bold, label=""];
30->31 [style = bold, label=""];
3->8 [style = bold, label=""];
7->2 [style = solid, label="discovery"];
17->3 [style = bold, label=""];
9->5 [style = bold, label=""];
12->5 [style = solid, label="closeables"];
18->25 [style = solid, label="client"];
1->14 [style = bold, label=""];
6->30 [style = dashed, label="0"];
13->9 [style = bold, label=""];
26->28 [style = bold, label=""];
8->4 [style = bold, label=""];
6->7 [style = bold, label=""];
35->34 [style = bold, label=""];
38->35 [style = bold, label=""];
4->16 [style = bold, label=""];
31->2 [style = solid, label="discovery"];
}
