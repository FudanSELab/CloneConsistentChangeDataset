digraph {
11 [style = filled, label = "assertFileIsPresent(c)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "buildRule.executeTarget(\"emptydircopy\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(buildRule.getFullLog(),not(containsString(\"dangling\")))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertFileIsNotPresent(c)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(buildRule.getFullLog().contains(\"dangling\"))@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testEmptyCopy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testEmptyDirCopy['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "buildRule.executeTarget(\"emptycopy\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testEmptyCopy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFileIsNotPresent(d)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String c = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String d = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c/d\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->5 [style = solid, label="d"];
9->3 [style = bold, label=""];
0->11 [style = bold, label=""];
1->4 [style = bold, label=""];
3->5 [style = bold, label=""];
10->9 [style = bold, label=""];
0->1 [style = solid, label="c"];
5->0 [style = bold, label=""];
8->2 [style = bold, label=""];
2->9 [style = dashed, label="0"];
4->7 [style = dashed, label="0"];
1->7 [style = bold, label=""];
0->1 [style = bold, label=""];
0->11 [style = solid, label="c"];
1->11 [style = dashed, label="0"];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
6->2 [style = bold, label=""];
}
