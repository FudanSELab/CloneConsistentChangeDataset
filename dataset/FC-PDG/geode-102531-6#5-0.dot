digraph {
15 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(4)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testRemoveOutputStreamWithTwoStreams['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final CompositeOutputStream cos = new CompositeOutputStream()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(cos.isEmpty()).isTrue()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final CompositeOutputStream cos = new CompositeOutputStream(streamOne,streamTwo)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final OutputStream streamTwo = mock(,\"streamTwo\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cos.flush()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@18a3b0,2,3)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(9)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "cos.close()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "verifyNoMoreInteractions(streamTwo)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@18a3c3)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(0)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final OutputStream streamOne = mock(,\"streamOne\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cos.close()@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(3)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(cos.isEmpty()).isFalse()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(cos.isEmpty()).isFalse()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "cos.write(9)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "InOrder inOrderStreams = inOrder(streamOne)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).close()@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "cos.flush()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "cos.removeOutputStream(streamTwo)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testNewCompositeOutputStreamWithNoStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(cos.size()).isEqualTo(1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(1)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(cos.size()).isEqualTo(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(2)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@18a30b,2,3)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verifyZeroInteractions(streamTwo)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "cos.write(9)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(cos.size()).isEqualTo(2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testRemoveOutputStreamWithTwoStreams['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "inOrderStreams.verify(streamOne,times(2)).flush()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->1 [style = bold, label=""];
2->9 [style = solid, label="streamTwo"];
15->7 [style = bold, label=""];
21->0 [style = bold, label=""];
9->24 [style = dashed, label="0"];
20->9 [style = bold, label=""];
19->20 [style = bold, label=""];
16->6 [style = bold, label=""];
27->28 [style = bold, label=""];
2->17 [style = solid, label="streamTwo"];
30->27 [style = bold, label=""];
2->24 [style = solid, label="streamTwo"];
5->15 [style = bold, label=""];
31->29 [style = bold, label=""];
14->19 [style = bold, label=""];
8->18 [style = solid, label="streamOne"];
10->21 [style = bold, label=""];
3->16 [style = bold, label=""];
23->8 [style = bold, label=""];
28->12 [style = bold, label=""];
24->18 [style = bold, label=""];
13->11 [style = bold, label=""];
2->13 [style = bold, label=""];
29->26 [style = bold, label=""];
26->30 [style = bold, label=""];
8->13 [style = solid, label="streamOne"];
9->18 [style = bold, label=""];
18->4 [style = bold, label=""];
8->2 [style = bold, label=""];
12->14 [style = bold, label=""];
17->3 [style = bold, label=""];
11->22 [style = bold, label=""];
22->17 [style = bold, label=""];
33->32 [style = bold, label=""];
25->8 [style = bold, label=""];
2->13 [style = solid, label="streamTwo"];
20->24 [style = bold, label=""];
1->10 [style = bold, label=""];
4->5 [style = bold, label=""];
32->31 [style = bold, label=""];
6->12 [style = bold, label=""];
}
