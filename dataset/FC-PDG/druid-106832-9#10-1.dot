digraph {
22 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.partialNullDimension,\"value\",182))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"health\",93))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.marketDimension,\"total_market\",182))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<SearchHit> expectedHits = new ArrayList<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SearchQuery searchQuery = Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).intervals(QueryRunnerTestHelper.fullOnIntervalSpec).query(\"a\").build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"health\",91))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SearchQuery searchQuery = Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.DATA_SOURCE).granularity(QueryRunnerTestHelper.ALL_GRAN).intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC).query(\"a\").build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension,\"a\",93))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.MARKET_DIMENSION,\"total_market\",186))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "List<SearchHit> expectedHits = new ArrayList<>()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"mezzanine\",273))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension,\"a\",91))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"health\",93))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testSearch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"entertainment\",93))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.PARTIAL_NULL_DIMENSION,\"value\",186))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "checkSearchQuery(searchQuery,mergedRunner,expectedHits)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testSearch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testSearchWithCardinality['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"entertainment\",93))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"mezzanine\",279))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"entertainment\",91))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"automotive\",91))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"travel\",93))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"automotive\",93))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "QueryRunner mergedRunner = toolChest.mergeResults(new QueryRunner<Result<SearchResultValue>>(){@Override public Sequence<Result<SearchResultValue>> run(QueryPlus<Result<SearchResultValue>> queryPlus,ResponseContext responseContext){final QueryPlus<Result<SearchResultValue>> queryPlus1 = queryPlus.withQuerySegmentSpec(new MultipleIntervalSegmentSpec(Collections.singletonList(Intervals.of(\"2011-01-12/2011-02-28\"))))final QueryPlus<Result<SearchResultValue>> queryPlus2 = queryPlus.withQuerySegmentSpec(new MultipleIntervalSegmentSpec(Collections.singletonList(Intervals.of(\"2011-03-01/2011-04-15\"))))return Sequences.concat(runner.run(queryPlus1,responseContext),runner.run(queryPlus2,responseContext))}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.PLACEMENTISH_DIMENSION,\"a\",93))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"travel\",93))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "checkSearchQuery(searchQuery,expectedHits)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"travel\",91))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"mezzanine\",279))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "final SearchQuery searchQuery = Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).intervals(QueryRunnerTestHelper.fullOnIntervalSpec).query(\"a\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.QUALITY_DIMENSION,\"automotive\",93))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.marketDimension,\"total_market\",186))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10->15 [style = dashed, label="0"];
7->11 [style = bold, label=""];
20->13 [style = bold, label=""];
1->8 [style = bold, label=""];
1->14 [style = dashed, label="0"];
11->1 [style = bold, label=""];
27->31 [style = solid, label="mergedRunner"];
28->31 [style = solid, label="searchQuery"];
7->17 [style = dashed, label="0"];
8->20 [style = dashed, label="0"];
1->29 [style = dashed, label="0"];
22->31 [style = bold, label=""];
3->6 [style = bold, label=""];
9->17 [style = bold, label=""];
30->25 [style = bold, label=""];
6->5 [style = solid, label="searchQuery"];
12->5 [style = solid, label="searchQuery"];
11->23 [style = dashed, label="0"];
4->22 [style = dashed, label="0"];
9->7 [style = bold, label=""];
2->10 [style = bold, label=""];
12->9 [style = bold, label=""];
4->33 [style = bold, label=""];
15->18 [style = bold, label=""];
24->22 [style = bold, label=""];
17->19 [style = bold, label=""];
4->21 [style = dashed, label="0"];
2->30 [style = dashed, label="0"];
29->26 [style = bold, label=""];
33->23 [style = bold, label=""];
26->30 [style = bold, label=""];
23->29 [style = bold, label=""];
6->12 [style = dashed, label="0"];
21->5 [style = bold, label=""];
25->24 [style = bold, label=""];
27->4 [style = bold, label=""];
6->28 [style = dashed, label="0"];
19->14 [style = bold, label=""];
9->5 [style = solid, label="expectedHits"];
8->2 [style = bold, label=""];
0->4 [style = bold, label=""];
11->19 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
10->0 [style = bold, label=""];
5->31 [style = dashed, label="0"];
0->24 [style = dashed, label="0"];
0->18 [style = dashed, label="0"];
13->15 [style = bold, label=""];
28->27 [style = bold, label=""];
18->21 [style = bold, label=""];
7->33 [style = dashed, label="0"];
6->9 [style = bold, label=""];
32->28 [style = bold, label=""];
4->5 [style = bold, label=""];
16->12 [style = bold, label=""];
10->25 [style = dashed, label="0"];
14->20 [style = bold, label=""];
4->31 [style = solid, label="expectedHits"];
8->26 [style = dashed, label="0"];
}
