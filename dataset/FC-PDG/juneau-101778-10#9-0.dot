digraph {
14 [style = filled, label = "RestClient x = client().simpleJson().json().xml().html().plainText().msgPack().uon().urlEnc().openApi().build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThrown(null).message().is(\"Content-Type not specified on request. Cannot match correct serializer. Use contentType(String) or mediaType(String) to specify transport language.\")@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "b01_multiLanguages['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/uon\").header(\"Content-Type\",\"text/uon\").header(\"X-Accept\",\"text/uon\").header(\"X-Content-Type\",\"text/uon\").run().assertCode().is(200).getBody().asType().check()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"application/json\").header(\"Content-Type\",\"application/json\").header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType().check()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "x.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType().check()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RestClient x = client().universal().defaultHeaders(Accept.APPLICATION_JSON,ContentType.APPLICATION_JSON).build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"octal/msgpack\").header(\"Content-Type\",\"octal/msgpack\").header(\"X-Accept\",\"octal/msgpack\").header(\"X-Content-Type\",\"octal/msgpack\").run().assertCode().is(200).getBody().asType().check()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/plain\").header(\"Content-Type\",\"text/plain\").header(\"X-Accept\",\"text/plain\").header(\"X-Content-Type\",\"text/plain\").run().assertCode().is(200).getBody().asType().check()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "x.post(\"/a01\",bean).header(\"X-Accept\",\"application/json\").header(\"X-Content-Type\",\"application/json\").run().assertCode().is(200).getBody().asType().check()@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"application/x-www-form-urlencoded\").header(\"Content-Type\",\"application/x-www-form-urlencoded\").header(\"X-Accept\",\"application/x-www-form-urlencoded\").header(\"X-Content-Type\",\"application/x-www-form-urlencoded\").run().assertCode().is(200).getBody().asType().check()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/html\").header(\"Content-Type\",\"text/html\").header(\"X-Accept\",\"text/html\").header(\"X-Content-Type\",\"text/html\").run().assertCode().is(200).getBody().asType().check()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "d01_universal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/xml\").header(\"Content-Type\",\"text/xml\").header(\"X-Accept\",\"text/xml\").header(\"X-Content-Type\",\"text/xml\").run().assertCode().is(200).getBody().asType().check()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RestClient x = client().universal().headersDefault(Accept.APPLICATION_JSON,ContentType.APPLICATION_JSON).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "x.post(\"/a01\",bean).header(\"Accept\",\"text/openapi\").header(\"Content-Type\",\"text/openapi\").header(\"X-Accept\",\"text/openapi\").header(\"X-Content-Type\",\"text/openapi\").run().assertCode().is(200).getBody().asType().check()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "d01_universal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14->16 [style = bold, label=""];
9->3 [style = bold, label=""];
11->8 [style = bold, label=""];
12->13 [style = bold, label=""];
10->2 [style = bold, label=""];
0->10 [style = bold, label=""];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
16->11 [style = bold, label=""];
3->14 [style = dashed, label="0"];
3->1 [style = bold, label=""];
15->14 [style = bold, label=""];
3->13 [style = dashed, label="0"];
4->7 [style = bold, label=""];
5->4 [style = bold, label=""];
13->1 [style = bold, label=""];
1->11 [style = bold, label=""];
2->5 [style = bold, label=""];
}
