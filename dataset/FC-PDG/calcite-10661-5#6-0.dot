digraph {
23 [style = filled, label = "RelNode convert = planner.convert(validate)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i < n@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(toString(transform),containsString(expected))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "RelTraitSet traitSet = planner.getEmptyTraitSet().replace(EnumerableConvention.INSTANCE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "buf.append(\"select *\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "buf.append(i == 0? \"from \": \", \").append(\"\"depts\" as d\").append(i)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Planner planner = getPlanner(null,Programs.heuristicJoinOrder(Programs.RULE_SET,false,0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int n@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "SqlNode parse = planner.parse(sql)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "RelNode convert = planner.convert(validate)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i < n@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "SqlNode parse = planner.parse(buf.toString())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 1@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "buf.append(i == 1? \"where\": \"and\").append(\" d\").append(i).append(\".\"deptno\" = d\").append(i - 1).append(\".\"deptno\"\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkJoinNWay['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(toString(transform),containsString(\"EnumerableJoin(condition=(=($0, $3)(, joinType=(inner()\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "checkHeuristic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Planner planner = getPlanner(null,Programs.heuristicJoinOrder(Programs.RULE_SET,false,6))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int i = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String sql@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "checkJoinNWay['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(toString(transform),containsString(\"EnumerableJoin(condition=(=($0, $5)(, joinType=(inner()\"))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "RelTraitSet traitSet = planner.getEmptyTraitSet().replace(EnumerableConvention.INSTANCE)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final StringBuilder buf = new StringBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i++@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
21->28 [style = solid, label="transform"];
4->10 [style = bold, label=""];
15->14 [style = solid, label="i"];
11->20 [style = dashed, label="0"];
16->17 [style = solid, label="i"];
15->14 [style = bold, label=""];
7->3 [style = solid, label="traitSet"];
0->6 [style = bold, label=""];
25->23 [style = bold, label=""];
1->5 [style = solid, label="i"];
30->27 [style = bold, label=""];
1->14 [style = solid, label="i"];
3->11 [style = bold, label=""];
18->4 [style = solid, label="parse"];
4->10 [style = solid, label="validate"];
12->16 [style = bold, label=""];
16->17 [style = bold, label=""];
30->26 [style = dotted, label="true"];
15->5 [style = solid, label="i"];
8->17 [style = solid, label="n"];
19->6 [style = bold, label=""];
10->7 [style = bold, label=""];
10->3 [style = solid, label="convert"];
29->21 [style = bold, label=""];
7->3 [style = bold, label=""];
19->8 [style = dotted, label="true"];
21->28 [style = bold, label=""];
17->16 [style = dotted, label="true"];
23->29 [style = bold, label=""];
0->8 [style = dotted, label="true"];
11->28 [style = dashed, label="0"];
15->1 [style = solid, label="i"];
5->1 [style = bold, label=""];
3->20 [style = solid, label="transform"];
17->12 [style = bold, label=""];
3->20 [style = bold, label=""];
14->5 [style = dotted, label="true"];
26->28 [style = solid, label="expected"];
18->4 [style = bold, label=""];
17->12 [style = dotted, label="true"];
29->21 [style = solid, label="traitSet"];
9->15 [style = bold, label=""];
24->25 [style = bold, label=""];
3->11 [style = solid, label="transform"];
25->23 [style = solid, label="validate"];
24->25 [style = solid, label="parse"];
22->24 [style = solid, label="sql"];
1->14 [style = bold, label=""];
14->2 [style = bold, label=""];
17->13 [style = bold, label=""];
8->14 [style = solid, label="n"];
27->24 [style = bold, label=""];
23->21 [style = solid, label="convert"];
14->1 [style = dotted, label="true"];
2->17 [style = solid, label="i"];
6->9 [style = bold, label=""];
30->22 [style = dotted, label="true"];
2->16 [style = solid, label="i"];
13->18 [style = bold, label=""];
14->5 [style = bold, label=""];
8->26 [style = dashed, label="0"];
}
