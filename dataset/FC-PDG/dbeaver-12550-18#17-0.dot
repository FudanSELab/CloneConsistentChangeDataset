digraph {
9 [style = filled, label = "this.temporary = false@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "!CommonUtils.isEmpty(parentId)@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "this.icon = DBIcon.TREE_PACKAGE@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "IConfigurationElement config@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "this.icon == null@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "DataSourceAuthModelDescriptor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "CommonUtils.isEmpty(dialectId)@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "IConfigurationElement config@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "String dialectId = config.getAttribute(RegistryConstants.ATTR_DIALECT)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "DataSourceProviderDescriptor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "{if (parentProvider != null) {driverProperties.addAll(parentProvider.driverProperties)}for (IConfigurationElement propsElement : config.getChildren(RegistryConstants.TAG_DRIVER_PROPERTIES)){for (IConfigurationElement prop : propsElement.getChildren(PropertyDescriptor.TAG_PROPERTY_GROUP)){driverProperties.addAll(PropertyDescriptor.extractProperties(prop))}}}@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "log.debug(\"No SQL dialect specified for data source provider '\" + this.id + \"'. Use default.\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "super(config)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "DataSourceProviderRegistry registry@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "this.scriptDialect = SQLDialectRegistry.getInstance().getDialect(dialectId)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "this.parentProvider == null@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "dialectId = BasicSQLDialect.ID@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "this.registry = registry@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "log.error(\"Provider '\" + parentId + \"' not found\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "this.scriptDialect == null@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "{for (IConfigurationElement driversElement : config.getChildren(RegistryConstants.TAG_DRIVERS)){this.driversManagable = driversElement.getAttribute(RegistryConstants.ATTR_MANAGABLE) == null || CommonUtils.getBoolean(driversElement.getAttribute(RegistryConstants.ATTR_MANAGABLE))for (IConfigurationElement driverElement : driversElement.getChildren(RegistryConstants.TAG_DRIVER)){try {this.drivers.add(loadDriver(driverElement))}catch (Exception e) }{for (IConfigurationElement propsElement : driversElement.getChildren(RegistryConstants.TAG_PROVIDER_PROPERTIES)){String driversSpec = propsElement.getAttribute(\"drivers\")List<DBPPropertyDescriptor> providerProperties = new ArrayList<>()for (IConfigurationElement prop : propsElement.getChildren(PropertyDescriptor.TAG_PROPERTY_GROUP)){providerProperties.addAll(PropertyDescriptor.extractProperties(prop))}List<DriverDescriptor> appDriversif (CommonUtils.isEmpty(driversSpec) || driversSpec.equals(\"*\")) {appDrivers = drivers}{String(( driverIds = driversSpec.split(\",\")appDrivers = drivers.stream().filter(null).collect(Collectors.toList())}appDrivers.forEach(null)}}}}@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "this.description = config.getAttribute(RegistryConstants.ATTR_DESCRIPTION)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String parentId = config.getAttribute(RegistryConstants.ATTR_PARENT)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "this.icon = DBIcon.DATABASE_DEFAULT@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "this.scriptDialect = SQLDialectRegistry.getInstance().getDialect(BasicSQLDialect.ID)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this.icon = iconToImage(config.getAttribute(RegistryConstants.ATTR_ICON))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "log.debug(\"Script dialect '\" + dialectId + \"' not found in registry (for data source provider \" + id + \"). Use default.\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "{IConfigurationElement(( trees = config.getChildren(RegistryConstants.TAG_TREE)if (!ArrayUtils.isEmpty(trees)) {this.treeDescriptor = this.loadTreeInfo(trees(0()}if (parentProvider != null) {this.treeDescriptor = new DBXTreeItem(this,null,parentProvider.treeDescriptor)}IConfigurationElement(( injections = config.getChildren(RegistryConstants.TAG_TREE_INJECTION)if (!ArrayUtils.isEmpty(injections)) {for (IConfigurationElement treeInject : injections){this.injectTreeNodes(treeInject)}}}@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "this.implType = new ObjectType(config.getAttribute(RegistryConstants.ATTR_CLASS))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "this.replaces.add(dsConfig.getAttribute(\"model\"))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "this.name = config.getAttribute(RegistryConstants.ATTR_LABEL)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DataSourceProviderDescriptor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "{for (IConfigurationElement nativeClientsElement : config.getChildren(\"nativeClients\")){for (IConfigurationElement clientElement : nativeClientsElement.getChildren(\"client\")){this.nativeClients.add(new NativeClientDescriptor(clientElement))}}}@@@87@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "this.parentProvider = registry.getDataSourceProvider(parentId)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "this.id = config.getAttribute(RegistryConstants.ATTR_ID)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "IConfigurationElement config@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22->29 [style = bold, label=""];
33->5 [style = bold, label=""];
27->1 [style = solid, label="dialectId"];
21->8 [style = solid, label="scriptDialect"];
26->21 [style = bold, label=""];
10->13 [style = dotted, label="true"];
28->16 [style = bold, label=""];
8->12 [style = dotted, label="true"];
4->25 [style = dotted, label="true"];
18->22 [style = bold, label=""];
20->6 [style = solid, label="parentId"];
17->18 [style = bold, label=""];
1->12 [style = bold, label=""];
4->7 [style = dotted, label="true"];
9->20 [style = bold, label=""];
12->2 [style = bold, label=""];
16->19 [style = bold, label=""];
4->5 [style = bold, label=""];
18->1 [style = solid, label="id"];
27->23 [style = bold, label=""];
31->5 [style = solid, label="config"];
3->32 [style = dashed, label="0"];
11->9 [style = bold, label=""];
21->8 [style = bold, label=""];
23->14 [style = dotted, label="true"];
6->2 [style = solid, label="parentProvider"];
24->0 [style = bold, label=""];
18->14 [style = solid, label="id"];
23->26 [style = dotted, label="true"];
14->26 [style = bold, label=""];
3->27 [style = bold, label=""];
26->1 [style = solid, label="dialectId"];
13->18 [style = bold, label=""];
2->28 [style = bold, label=""];
15->32 [style = dotted, label="true"];
10->18 [style = bold, label=""];
25->11 [style = solid, label="registry"];
6->10 [style = bold, label=""];
23->21 [style = bold, label=""];
8->1 [style = bold, label=""];
15->27 [style = bold, label=""];
8->2 [style = bold, label=""];
0->15 [style = bold, label=""];
27->21 [style = solid, label="dialectId"];
6->10 [style = solid, label="parentProvider"];
7->5 [style = solid, label="config"];
0->15 [style = solid, label="icon"];
17->6 [style = bold, label=""];
5->11 [style = bold, label=""];
10->13 [style = bold, label=""];
15->35 [style = bold, label=""];
32->35 [style = bold, label=""];
17->10 [style = dotted, label="true"];
30->31 [style = dotted, label="true"];
30->5 [style = bold, label=""];
30->25 [style = dotted, label="true"];
33->34 [style = dotted, label="true"];
5->18 [style = bold, label=""];
17->6 [style = dotted, label="true"];
15->3 [style = bold, label=""];
23->14 [style = bold, label=""];
20->17 [style = bold, label=""];
34->5 [style = solid, label="config"];
29->24 [style = bold, label=""];
15->32 [style = bold, label=""];
6->28 [style = solid, label="parentProvider"];
8->1 [style = dotted, label="true"];
25->34 [style = dashed, label="0"];
26->21 [style = solid, label="dialectId"];
27->23 [style = solid, label="dialectId"];
15->3 [style = dotted, label="true"];
20->13 [style = solid, label="parentId"];
}
