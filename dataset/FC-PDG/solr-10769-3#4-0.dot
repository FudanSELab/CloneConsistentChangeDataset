digraph {
5 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(1D,result)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "values.put(\"a\",6.5)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(-2D,result)@@@16@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(6L,result)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "multOneField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "values.put(\"a\",6)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "values.clear()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "values.clear()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(1L,result)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(-2L,result)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(6.5D,result)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "values.put(\"a\",-1.1)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "floorOneField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(1L,result)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "values.clear()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "floorOneField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"floor(a)\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
16->15 [style = bold, label=""];
13->21 [style = solid, label="result"];
13->7 [style = solid, label="result"];
7->21 [style = dashed, label="0"];
0->26 [style = bold, label=""];
3->11 [style = solid, label="result"];
15->28 [style = dashed, label="0"];
15->14 [style = bold, label=""];
7->10 [style = bold, label=""];
25->23 [style = bold, label=""];
9->4 [style = bold, label=""];
3->27 [style = dashed, label="0"];
1->27 [style = bold, label=""];
1->3 [style = bold, label=""];
3->11 [style = bold, label=""];
11->29 [style = bold, label=""];
5->9 [style = dashed, label="0"];
20->1 [style = bold, label=""];
4->17 [style = solid, label="result"];
19->6 [style = bold, label=""];
5->17 [style = bold, label=""];
12->6 [style = bold, label=""];
26->13 [style = bold, label=""];
14->9 [style = solid, label="result"];
6->2 [style = bold, label=""];
29->28 [style = bold, label=""];
13->10 [style = solid, label="result"];
16->11 [style = dashed, label="0"];
7->24 [style = bold, label=""];
2->0 [style = bold, label=""];
22->18 [style = bold, label=""];
21->20 [style = bold, label=""];
11->15 [style = solid, label="result"];
27->11 [style = bold, label=""];
4->5 [style = solid, label="result"];
11->16 [style = solid, label="result"];
13->7 [style = bold, label=""];
0->8 [style = bold, label=""];
11->22 [style = bold, label=""];
16->29 [style = dashed, label="0"];
14->9 [style = bold, label=""];
13->24 [style = solid, label="result"];
11->28 [style = solid, label="result"];
23->2 [style = bold, label=""];
24->1 [style = bold, label=""];
10->1 [style = bold, label=""];
13->21 [style = bold, label=""];
4->5 [style = bold, label=""];
18->14 [style = bold, label=""];
11->29 [style = solid, label="result"];
10->24 [style = dashed, label="0"];
6->23 [style = dashed, label="0"];
8->13 [style = bold, label=""];
8->26 [style = dashed, label="0"];
}
