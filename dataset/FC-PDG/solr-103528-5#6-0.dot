digraph {
11 [style = filled, label = "JettySolrRunner newJetty = cluster.startJettySolrRunner()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(e.getMessage(),e.getMessage().contains(\"Host Unavailable\"))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "{cluster.deleteAllCollections()cluster.deleteAllConfigSets()}@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(CommonParams.OK,new V2Request.Builder(\"/node/health\").build().process(httpSolrClient).getResponse().get(CommonParams.STATUS))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(SolrException.ErrorCode.SERVICE_UNAVAILABLE.code,e.code())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testHealthCheckHandler['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertEquals(CommonParams.OK,res.getResponse().get(CommonParams.STATUS))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(SolrException.ErrorCode.SERVICE_UNAVAILABLE.code,e.code())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "BaseHttpSolrClient.RemoteSolrException e = expectThrows(,null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "{newJetty.stop()}@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "SolrResponse response = req.process(httpSolrClient)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "newJetty.getCoreContainer().getZkController().getZkClient().close()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(CommonParams.OK,req.process(httpSolrClient).getResponse().get(CommonParams.STATUS))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "CollectionAdminResponse collectionAdminResponse = CollectionAdminRequest.createCollection(\"test\",\"_default\",1,1).withProperty(\"solr.directoryFactory\",\"solr.StandardDirectoryFactory\").setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE).process(httpSolrClient)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(\"Exception code should be 404\",404,thrown.code())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(e.getMessage(),e.getMessage().contains(\"Host Unavailable\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(CommonParams.OK,req.process(httpSolrClient).getResponse().get(CommonParams.STATUS))@@@51@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SolrResponse response = req.process(httpSolrClient)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "newJetty.getCoreContainer().getZkController().getZkClient().close()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "{newJetty.stop()}@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(CommonParams.OK,req.process(cluster.getSolrClient()).getResponse().get(CommonParams.STATUS))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "newJetty.getCoreContainer().shutdown()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "BaseHttpSolrClient.RemoteSolrException e = expectThrows(,null)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "V2Response res = new V2Request.Builder(\"/node/health\").build().process(cluster.getSolrClient())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(CommonParams.OK,req.process(httpSolrClient).getResponse().get(CommonParams.STATUS))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testHealthCheckV2Api['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(CommonParams.OK,response.getResponse().get(CommonParams.STATUS))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(\"Should have seen an exception containing the an error\",thrown.getMessage().contains(\"Error processing the request. CoreContainer is either not initialized or shutting down.\"))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "JettySolrRunner newJetty = cluster.startJettySolrRunner()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "CollectionAdminResponse collectionAdminResponse = CollectionAdminRequest.createCollection(\"test\",\"_default\",1,1).withProperty(\"solr.directoryFactory\",\"solr.StandardDirectoryFactory\").process(httpSolrClient)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(0,collectionAdminResponse.getStatus())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "SolrException thrown = expectThrows(,null)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "newJetty = cluster.startJettySolrRunner()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) SolrRequest req = new GenericSolrRequest(SolrRequest.METHOD.GET,HEALTH_CHECK_HANDLER_PATH,new ModifiableSolrParams())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "{newJetty.stop()}@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(0,res.getStatus())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testHealthCheckHandler['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(CommonParams.OK,response.getResponse().get(CommonParams.STATUS))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = bold, label=""];
10->20 [style = bold, label=""];
27->32 [style = bold, label=""];
0->26 [style = bold, label=""];
9->0 [style = bold, label=""];
15->14 [style = bold, label=""];
22->19 [style = bold, label=""];
29->30 [style = bold, label=""];
25->13 [style = bold, label=""];
2->6 [style = bold, label=""];
26->5 [style = bold, label=""];
6->21 [style = bold, label=""];
34->33 [style = bold, label=""];
1->3 [style = bold, label=""];
10->28 [style = dashed, label="0"];
19->17 [style = bold, label=""];
4->26 [style = dashed, label="0"];
20->2 [style = bold, label=""];
33->29 [style = bold, label=""];
5->16 [style = bold, label=""];
35->28 [style = bold, label=""];
7->24 [style = bold, label=""];
17->12 [style = bold, label=""];
30->35 [style = bold, label=""];
37->31 [style = bold, label=""];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
21->22 [style = bold, label=""];
12->18 [style = bold, label=""];
13->23 [style = bold, label=""];
32->36 [style = bold, label=""];
36->37 [style = bold, label=""];
28->27 [style = bold, label=""];
24->1 [style = bold, label=""];
18->7 [style = bold, label=""];
23->9 [style = bold, label=""];
14->11 [style = bold, label=""];
4->5 [style = bold, label=""];
8->13 [style = bold, label=""];
}
