digraph {
2 [style = filled, label = "Person parent = person.getParent()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(\"John\",parent.getFirstName())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assertions.assertEquals(\"Poitras\",person.getLastName())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertNotNull(\"parent must not be null\",parent)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Person person = personMapper.getWithoutComplex(2l)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "PersonMapper personMapper = sqlSession.getMapper()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assertions.assertEquals(\"Christian\",person.getFirstName())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertEquals(\"Christian\",person.getFirstName())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertNotNull(\"person must not be null\",person)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assertions.assertEquals(\"Smith\",parent.getLastName())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testWithParamAttributes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assertions.assertEquals(\"John\",parent.getFirstName())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Assertions.assertNotNull(person,\"person must not be null\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(\"Poitras\",person.getLastName())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testWithoutComplex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(\"Smith\",parent.getLastName())@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testWithoutComplex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Person person = personMapper.getComplexWithParamAttributes(2l)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assertions.assertNotNull(parent,\"parent must not be null\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->16 [style = bold, label=""];
6->17 [style = bold, label=""];
15->10 [style = bold, label=""];
8->16 [style = dashed, label="0"];
16->11 [style = bold, label=""];
7->17 [style = dashed, label="0"];
2->3 [style = bold, label=""];
12->15 [style = bold, label=""];
7->0 [style = bold, label=""];
3->4 [style = bold, label=""];
11->2 [style = bold, label=""];
7->14 [style = solid, label="person"];
2->12 [style = bold, label=""];
9->6 [style = bold, label=""];
7->14 [style = bold, label=""];
0->14 [style = dashed, label="0"];
8->1 [style = bold, label=""];
17->0 [style = bold, label=""];
3->12 [style = dashed, label="0"];
17->0 [style = solid, label="person"];
5->10 [style = dashed, label="0"];
18->6 [style = bold, label=""];
1->11 [style = dashed, label="0"];
4->15 [style = dashed, label="0"];
7->0 [style = solid, label="person"];
0->8 [style = bold, label=""];
2->12 [style = solid, label="parent"];
1->2 [style = bold, label=""];
13->6 [style = bold, label=""];
6->7 [style = bold, label=""];
2->3 [style = solid, label="parent"];
4->5 [style = bold, label=""];
}
