digraph {
8 [style = filled, label = "frequently()@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "attributes.put(\"custom\",randomBoolean()? \"match\": randomAlphaOfLengthBetween(3,5))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return nodesList@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "i < numNodes@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final DiscoveryNode node = newNode(idGenerator.getAndIncrement(),attributes,new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES)))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "nodesList.add(node)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "frequently()@@@12@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final int numNodes@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "randomNodes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final DiscoveryNode node = newNode(idGenerator.getAndIncrement(),attributes,roles)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "final DiscoveryNode node = newNode(i,attributes,new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<DiscoveryNode> nodesList = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return nodesList@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "nodesList.add(node)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Set<DiscoveryNodeRole> roles = new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "randomNodes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Map<String,String> attributes = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "roles.add(new DiscoveryNodeRole(\"custom_role\",\"cr\"){@Override protected Setting<Boolean> roleSetting(){return null}})@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "randomNodes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->10 [style = bold, label=""];
8->16 [style = bold, label=""];
15->10 [style = bold, label=""];
16->18 [style = bold, label=""];
7->1 [style = bold, label=""];
4->16 [style = dashed, label="0"];
1->17 [style = dotted, label="true"];
4->6 [style = bold, label=""];
0->1 [style = solid, label="i"];
8->19 [style = bold, label=""];
15->2 [style = dotted, label="true"];
7->1 [style = solid, label="i"];
9->4 [style = bold, label=""];
10->3 [style = solid, label="nodesList"];
1->11 [style = dotted, label="true"];
1->3 [style = bold, label=""];
18->17 [style = bold, label=""];
7->0 [style = solid, label="i"];
14->17 [style = bold, label=""];
6->0 [style = bold, label=""];
1->4 [style = dotted, label="true"];
17->12 [style = solid, label="node"];
19->6 [style = bold, label=""];
12->0 [style = bold, label=""];
10->7 [style = bold, label=""];
1->13 [style = bold, label=""];
18->14 [style = dotted, label="true"];
9->16 [style = bold, label=""];
1->19 [style = dotted, label="true"];
4->6 [style = solid, label="node"];
7->19 [style = solid, label="i"];
1->11 [style = bold, label=""];
20->10 [style = bold, label=""];
1->18 [style = dotted, label="true"];
17->12 [style = bold, label=""];
11->4 [style = solid, label="attributes"];
0->1 [style = bold, label=""];
1->12 [style = dotted, label="true"];
8->9 [style = bold, label=""];
1->8 [style = dotted, label="true"];
11->17 [style = solid, label="attributes"];
9->19 [style = bold, label=""];
11->8 [style = bold, label=""];
1->6 [style = dotted, label="true"];
20->2 [style = dotted, label="true"];
4->19 [style = dashed, label="0"];
2->1 [style = solid, label="numNodes"];
1->16 [style = dotted, label="true"];
1->0 [style = dotted, label="true"];
8->9 [style = dotted, label="true"];
0->19 [style = solid, label="i"];
10->13 [style = solid, label="nodesList"];
8->4 [style = bold, label=""];
11->19 [style = solid, label="attributes"];
18->14 [style = bold, label=""];
16->17 [style = solid, label="roles"];
5->2 [style = dotted, label="true"];
19->6 [style = solid, label="node"];
}
