digraph {
0 [style = filled, label = "assertEquals(\"CollectionStateWatcher should be retained\",1,client.getZkStateReader().getStateWatchers(\"currentstate\").size())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final CountDownLatch latch2 = new CountDownLatch(1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "client.registerCollectionStateWatcher(\"currentstate\",null)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "CloudSolrClient client = cluster.getSolrClient()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(\"DocCollectionWatcher isn't called on new registration\",latch.await(MAX_WAIT_TIMEOUT,TimeUnit.SECONDS))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testStateWatcherChecksCurrentStateOnRegister['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testStateWatcherChecksCurrentStateOnRegister['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CollectionAdminRequest.createCollection(\"currentstate\",\"config\",1,1).processAndWait(client,MAX_WAIT_TIMEOUT)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(\"CollectionStateWatcher isn't called on new registration\",latch.await(MAX_WAIT_TIMEOUT,TimeUnit.SECONDS))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.registerDocCollectionWatcher(\"currentstate\",null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(\"CollectionStateWatcher isn't called when registering for already-watched collection\",latch.await(MAX_WAIT_TIMEOUT,TimeUnit.SECONDS))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testStateWatcherChecksCurrentStateOnRegister['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "client.registerDocCollectionWatcher(\"currentstate\",null)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "waitFor(\"DocCollectionWatcher should be removed\",MAX_WAIT_TIMEOUT,TimeUnit.SECONDS,null)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "waitFor(\"CollectionStateWatcher should be removed\",MAX_WAIT_TIMEOUT,TimeUnit.SECONDS,null)@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(\"DocCollectionWatcher isn't called when registering for already-watched collection\",latch.await(MAX_WAIT_TIMEOUT,TimeUnit.SECONDS))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(\"DocCollectionWatcher should be retained\",1,client.getZkStateReader().getStateWatchers(\"currentstate\").size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "client.registerCollectionStateWatcher(\"currentstate\",null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CollectionAdminRequest.createCollection(\"currentstate\",\"config\",1,1).setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE).processAndWait(client,MAX_WAIT_TIMEOUT)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0->6 [style = bold, label=""];
9->18 [style = dashed, label="0"];
14->17 [style = bold, label=""];
7->8 [style = bold, label=""];
1->10 [style = bold, label=""];
17->19 [style = bold, label=""];
12->4 [style = bold, label=""];
9->0 [style = bold, label=""];
3->13 [style = dashed, label="0"];
13->18 [style = bold, label=""];
5->4 [style = bold, label=""];
10->12 [style = bold, label=""];
2->19 [style = dashed, label="0"];
0->16 [style = dashed, label="0"];
8->2 [style = bold, label=""];
11->10 [style = bold, label=""];
6->14 [style = bold, label=""];
10->12 [style = solid, label="client"];
3->9 [style = bold, label=""];
18->16 [style = bold, label=""];
16->6 [style = bold, label=""];
5->12 [style = dashed, label="0"];
4->13 [style = bold, label=""];
7->14 [style = dashed, label="0"];
6->7 [style = bold, label=""];
4->3 [style = bold, label=""];
15->10 [style = bold, label=""];
8->17 [style = dashed, label="0"];
10->5 [style = bold, label=""];
10->5 [style = solid, label="client"];
}
