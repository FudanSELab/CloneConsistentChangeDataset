digraph {
7 [style = filled, label = "final String schemaName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "final String schemaName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final AlterShardingTableRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ShardingRuleConfiguration currentRuleConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "checkToBeAlteredRules['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "throw new CurrentRuleNotExistedException(\"Sharding\",schemaName,notExistedShardingTables)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "final ReadwriteSplittingRuleConfiguration currentRuleConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "throw new ShardingTableRuleNotExistedException(schemaName,notExistedShardingTables)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Collection<String> notExistedShardingTables = getToBeAlteredTableNames(sqlStatement).stream().filter(null).collect(Collectors.toList())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final ShardingRuleConfiguration currentRuleConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Collection<String> notExistedRuleNames = getToBeAlteredRuleNames(sqlStatement).stream().filter(null).collect(Collectors.toList())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Collection<String> currentRuleNames = currentRuleConfig.getDataSources().stream().map(null).collect(Collectors.toSet())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "checkToBeAlteredShardingTables['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "!notExistedRuleNames.isEmpty()@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "throw new ReadwriteSplittingRuleNotExistedException(schemaName,notExistedRuleNames)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "!notExistedShardingTables.isEmpty()@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "checkToBeAlteredShardingTables['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final AlterReadwriteSplittingRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final String schemaName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Collection<String> currentShardingTables = getCurrentShardingTables(currentRuleConfig)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final AlterShardingTableRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
5->13 [style = dashed, label="0"];
4->18 [style = dashed, label="0"];
3->7 [style = dotted, label="true"];
15->13 [style = bold, label=""];
6->8 [style = dashed, label="0"];
4->8 [style = solid, label="notExistedShardingTables"];
0->6 [style = bold, label=""];
19->17 [style = dotted, label="true"];
11->10 [style = dotted, label="true"];
0->19 [style = dashed, label="0"];
11->12 [style = dotted, label="true"];
18->19 [style = bold, label=""];
18->17 [style = solid, label="notExistedRuleNames"];
7->20 [style = dashed, label="0"];
15->20 [style = dotted, label="true"];
11->9 [style = dotted, label="true"];
6->17 [style = dashed, label="0"];
19->17 [style = bold, label=""];
4->6 [style = solid, label="notExistedShardingTables"];
2->5 [style = solid, label="currentRuleConfig"];
15->14 [style = dotted, label="true"];
0->6 [style = dotted, label="true"];
15->16 [style = dotted, label="true"];
10->8 [style = solid, label="schemaName"];
4->0 [style = bold, label=""];
0->8 [style = dotted, label="true"];
11->5 [style = bold, label=""];
3->5 [style = bold, label=""];
7->6 [style = solid, label="schemaName"];
9->5 [style = solid, label="currentRuleConfig"];
5->4 [style = bold, label=""];
0->8 [style = bold, label=""];
7->12 [style = dashed, label="0"];
14->17 [style = solid, label="schemaName"];
3->1 [style = dotted, label="true"];
13->18 [style = bold, label=""];
3->2 [style = dotted, label="true"];
}
