digraph {
6 [style = filled, label = "assertSameSlotSharingGroup(source1Vertex,source2Vertex,map2Vertex)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final JobVertex map2Vertex = verticesSorted.get(3)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testSlotSharingOnAllVerticesInSameSlotSharingGroupByDefaultEnabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertDistinctSharingGroups(source1Vertex,source2Vertex,map2Vertex)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final List<JobVertex> verticesSorted = jobGraph.getVerticesSortedTopologicallyFromSources()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final JobVertex source2Vertex = verticesSorted.get(1)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final List<JobVertex> verticesMatched = getExpectedVerticesList(verticesSorted)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "final JobVertex source1Vertex = verticesMatched.get(0)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "final JobVertex source2Vertex = verticesMatched.get(1)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertDistinctSharingGroups(source1Vertex,map1Vertex)@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "final JobVertex map2Vertex = verticesMatched.get(3)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "streamGraph.setAllVerticesInSameSlotSharingGroupByDefault(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testSlotSharingOnAllVerticesInSameSlotSharingGroupByDefaultDisabled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(4,verticesSorted.size())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testSlotSharingOnAllVerticesInSameSlotSharingGroupByDefaultEnabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "streamGraph.getStreamNodes().stream().filter(null).findFirst().get().setSlotSharingGroup(\"testSlotSharingGroup\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final JobVertex map1Vertex = verticesSorted.get(2)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final JobVertex source1Vertex = verticesSorted.get(0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final StreamGraph streamGraph = createStreamGraphForSlotSharingTest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertSameSlotSharingGroup(source1Vertex,map1Vertex)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final JobVertex map1Vertex = verticesMatched.get(2)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "streamGraph.setAllVerticesInSameSlotSharingGroupByDefault(false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final JobGraph jobGraph = StreamingJobGraphGenerator.createJobGraph(streamGraph)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertSameSlotSharingGroup(source1Vertex,source2Vertex,map2Vertex)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->22 [style = bold, label=""];
16->5 [style = solid, label="map2Vertex"];
2->20 [style = bold, label=""];
2->19 [style = dashed, label="0"];
3->6 [style = solid, label="source1Vertex"];
2->6 [style = bold, label=""];
0->6 [style = solid, label="source2Vertex"];
14->5 [style = solid, label="source1Vertex"];
22->21 [style = bold, label=""];
5->15 [style = bold, label=""];
14->17 [style = bold, label=""];
14->15 [style = solid, label="source1Vertex"];
7->4 [style = bold, label=""];
11->9 [style = bold, label=""];
3->13 [style = dashed, label="0"];
12->2 [style = solid, label="source1Vertex"];
10->7 [style = bold, label=""];
17->19 [style = bold, label=""];
3->0 [style = bold, label=""];
2->6 [style = solid, label="map2Vertex"];
5->20 [style = dashed, label="0"];
19->16 [style = bold, label=""];
0->14 [style = dashed, label="0"];
0->2 [style = solid, label="map1Vertex"];
12->13 [style = bold, label=""];
3->20 [style = solid, label="source2Vertex"];
6->5 [style = bold, label=""];
8->5 [style = solid, label="map1Vertex"];
10->11 [style = solid, label="streamGraph"];
18->10 [style = bold, label=""];
8->2 [style = bold, label=""];
21->11 [style = bold, label=""];
19->15 [style = solid, label="map1Vertex"];
0->8 [style = bold, label=""];
23->10 [style = bold, label=""];
16->5 [style = bold, label=""];
12->20 [style = solid, label="source1Vertex"];
8->17 [style = dashed, label="0"];
12->3 [style = bold, label=""];
9->12 [style = bold, label=""];
3->5 [style = solid, label="source1Vertex"];
4->11 [style = bold, label=""];
9->13 [style = solid, label="verticesSorted"];
1->10 [style = bold, label=""];
10->21 [style = solid, label="streamGraph"];
13->14 [style = bold, label=""];
17->5 [style = solid, label="source2Vertex"];
8->20 [style = solid, label="map2Vertex"];
6->2 [style = dashed, label="0"];
}
