digraph {
24 [style = filled, label = "stat = observer.checkExists().usingWatcher(creationTrigger).forPath(path)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Trigger deletionTrigger = Trigger.deletedOrSetData()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertNotNull(stat,\"node should exist: \" + path)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "String path = node.getActualPath()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Trigger deletedTrigger = Trigger.deletedOrSetData()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Trigger creationTrigger = Trigger.created()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "KillSession.kill(curator.getZookeeperClient().getZooKeeper())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "i < 5@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "node.debugCreateNodeLatch.countDown()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertNodeExists(observer,node.getActualPath())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "node.debugCreateNodeLatch = new CountDownLatch(1)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "observer.checkExists().usingWatcher(deletedTrigger).forPath(node.getActualPath())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertNodeExists(observer,path)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Stat stat = observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "node.debugCreateNodeLatch.countDown()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int i = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(deletedTrigger.firedWithin(timing.forSessionSleep().seconds(),TimeUnit.SECONDS))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "KillSession.kill(curator.getZookeeperClient().getZooKeeper())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(timing.multiple(1.5).forSessionSleep().seconds(),TimeUnit.SECONDS))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "node.debugWaitMsForBackgroundBeforeClose.set(timing.forSleepingABit().milliseconds())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "node.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i++@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "node.debugCreateNodeLatch = new CountDownLatch(1)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->20 [style = dotted, label="true"];
17->26 [style = dotted, label="true"];
5->8 [style = bold, label=""];
30->24 [style = bold, label=""];
20->17 [style = bold, label=""];
9->3 [style = solid, label="curator"];
9->11 [style = bold, label=""];
15->7 [style = bold, label=""];
23->27 [style = bold, label=""];
17->18 [style = dotted, label="true"];
25->20 [style = solid, label="i"];
2->6 [style = bold, label=""];
17->1 [style = dotted, label="true"];
17->24 [style = dotted, label="true"];
18->26 [style = bold, label=""];
3->15 [style = bold, label=""];
17->22 [style = bold, label=""];
3->1 [style = solid, label="node"];
12->1 [style = bold, label=""];
25->17 [style = bold, label=""];
23->27 [style = solid, label="path"];
29->18 [style = bold, label=""];
3->22 [style = solid, label="node"];
26->30 [style = bold, label=""];
23->24 [style = solid, label="path"];
20->17 [style = solid, label="i"];
8->0 [style = bold, label=""];
17->16 [style = dotted, label="true"];
2->23 [style = bold, label=""];
17->31 [style = dotted, label="true"];
6->4 [style = bold, label=""];
10->18 [style = dashed, label="0"];
0->10 [style = bold, label=""];
28->21 [style = bold, label=""];
23->21 [style = solid, label="path"];
17->30 [style = dotted, label="true"];
16->28 [style = bold, label=""];
3->7 [style = bold, label=""];
11->3 [style = bold, label=""];
24->31 [style = bold, label=""];
10->12 [style = bold, label=""];
7->2 [style = bold, label=""];
19->9 [style = bold, label=""];
23->28 [style = solid, label="path"];
28->21 [style = solid, label="stat"];
21->1 [style = bold, label=""];
11->6 [style = solid, label="observer"];
17->28 [style = dotted, label="true"];
24->31 [style = solid, label="stat"];
25->17 [style = solid, label="i"];
14->9 [style = bold, label=""];
17->29 [style = dotted, label="true"];
13->9 [style = bold, label=""];
1->29 [style = bold, label=""];
31->20 [style = bold, label=""];
11->27 [style = solid, label="observer"];
17->21 [style = dotted, label="true"];
4->5 [style = bold, label=""];
27->25 [style = bold, label=""];
6->23 [style = dashed, label="0"];
17->16 [style = bold, label=""];
}
