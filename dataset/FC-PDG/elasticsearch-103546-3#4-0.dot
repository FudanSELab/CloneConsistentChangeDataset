digraph {
16 [style = filled, label = "testAddUnderBlock['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(renewedRetentionLease.id(),equalTo(id))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final Settings settings = Settings.builder().put(\"index.number_of_shards\",1).put(\"index.number_of_replicas\",0).put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),true).build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(renewedRetentionLease.retainingSequenceNumber(),equalTo(nextRetainingSequenceNumber == RETAIN_ALL? 0L: nextRetainingSequenceNumber))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "final long timestampUpperBound = threadPool.absoluteTimeInMillis()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "threadPool.absoluteTimeInMillis() <= timestampUpperBound@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(stats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases(),hasSize(2))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(retentionLease.id(),equalTo(id))@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final long retainingSequenceNumber = randomBoolean()? RETAIN_ALL: randomNonNegativeLong()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(renewedRetentionLease.timestamp(),greaterThan(initialRetentionLease.timestamp()))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertNotNull(renewedStats.getShards()(0(.getRetentionLeaseStats())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(retentionLease.retainingSequenceNumber(),equalTo(retainingSequenceNumber == RETAIN_ALL? 0L: retainingSequenceNumber))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final IndicesStatsResponse renewedStats = client().execute(IndicesStatsAction.INSTANCE,new IndicesStatsRequest().indices(\"index\")).actionGet()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String id = randomAlphaOfLength(8)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String source = randomAlphaOfLength(8)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(retentionLease.source(),equalTo(source))@@@27@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertThat(initialStats.getShards(),arrayWithSize(1))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ensureGreen(\"index\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertNotNull(initialStats.getShards())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(renewedStats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases(),hasSize(1))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "final ThreadPool threadPool = getInstanceFromNode()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "end - start < estimatedTimeInterval.nanos()@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(stats.getShards(),arrayWithSize(1))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Thread.sleep(TimeUnit.NANOSECONDS.toMillis(estimatedTimeInterval.nanos() - (end - start)))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final IndicesStatsResponse stats = client().execute(IndicesStatsAction.INSTANCE,new IndicesStatsRequest().indices(\"index\")).actionGet()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testAddUnderBlock['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "final TimeValue estimatedTimeInterval = ThreadPool.ESTIMATED_TIME_INTERVAL_SETTING.get(getInstanceFromNode().settings())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(stats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases(),hasSize(1))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "assertThat(renewedStats.getShards(),arrayWithSize(1))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final long start = System.nanoTime()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "final long nextRetainingSequenceNumber = retainingSequenceNumber == RETAIN_ALL && randomBoolean()? RETAIN_ALL: randomLongBetween(Math.max(retainingSequenceNumber,0L),Long.MAX_VALUE)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final RetentionLease retentionLease = stats.getShards()(0(.getRetentionLeaseStats().retentionLeases().get(id)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "final long end = System.nanoTime()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertNotNull(stats.getShards())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertNotNull(initialStats.getShards()(0(.getRetentionLeaseStats())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final IndicesStatsResponse initialStats = client().execute(IndicesStatsAction.INSTANCE,new IndicesStatsRequest().indices(\"index\")).actionGet()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "runActionUnderBlockTest(indexService,null)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(stats.getShards()(0(.getRetentionLeaseStats().retentionLeases().contains(ReplicationTracker.getPeerRecoveryRetentionLeaseId(stats.getShards()(0(.getShardRouting())))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertThat(initialStats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases(),hasSize(1))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final RetentionLease initialRetentionLease = initialStats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases().iterator().next()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertNotNull(stats.getShards()(0(.getRetentionLeaseStats())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testRenewUnderBlock['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final RetentionLease renewedRetentionLease = renewedStats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases().iterator().next()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertNotNull(renewedStats.getShards())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertThat(renewedRetentionLease.source(),equalTo(source))@@@46@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final RetentionLease retentionLease = stats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases().iterator().next()@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertThat(retentionLease.id(),equalTo(id))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final IndexService indexService = createIndex(\"index\",settings)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "runActionUnderBlockTest(indexService,null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "client().execute(RetentionLeaseActions.Add.INSTANCE,new RetentionLeaseActions.AddRequest(indexService.getShard(0).shardId(),id,retainingSequenceNumber,source)).actionGet()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->36 [style = dashed, label="0"];
35->48 [style = bold, label=""];
11->20 [style = dashed, label="0"];
25->22 [style = bold, label=""];
6->3 [style = solid, label="id"];
12->17 [style = dashed, label="0"];
39->14 [style = bold, label=""];
47->27 [style = bold, label=""];
45->24 [style = bold, label=""];
15->11 [style = bold, label=""];
22->38 [style = dotted, label="true"];
15->20 [style = bold, label=""];
2->37 [style = solid, label="retainingSequenceNumber"];
16->14 [style = bold, label=""];
33->45 [style = bold, label=""];
24->25 [style = solid, label="end"];
6->44 [style = solid, label="id"];
23->44 [style = bold, label=""];
6->19 [style = solid, label="id"];
26->46 [style = bold, label=""];
8->28 [style = bold, label=""];
14->4 [style = solid, label="settings"];
13->29 [style = dashed, label="0"];
2->13 [style = solid, label="retainingSequenceNumber"];
22->41 [style = bold, label=""];
37->29 [style = bold, label=""];
11->12 [style = bold, label=""];
24->38 [style = bold, label=""];
42->31 [style = bold, label=""];
1->0 [style = bold, label=""];
22->24 [style = dotted, label="true"];
0->27 [style = dashed, label="0"];
6->2 [style = bold, label=""];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
8->21 [style = solid, label="source"];
1->47 [style = dashed, label="0"];
8->49 [style = solid, label="source"];
45->37 [style = solid, label="nextRetainingSequenceNumber"];
7->6 [style = bold, label=""];
38->25 [style = bold, label=""];
24->38 [style = solid, label="end"];
44->37 [style = bold, label=""];
34->35 [style = bold, label=""];
43->34 [style = bold, label=""];
36->42 [style = bold, label=""];
14->4 [style = bold, label=""];
46->43 [style = bold, label=""];
8->13 [style = solid, label="source"];
12->23 [style = dashed, label="0"];
2->10 [style = solid, label="retainingSequenceNumber"];
19->10 [style = bold, label=""];
28->26 [style = bold, label=""];
30->32 [style = bold, label=""];
38->25 [style = dotted, label="true"];
29->49 [style = bold, label=""];
4->7 [style = bold, label=""];
34->38 [style = solid, label="start"];
40->33 [style = bold, label=""];
10->13 [style = bold, label=""];
11->31 [style = dashed, label="0"];
32->40 [style = bold, label=""];
12->3 [style = bold, label=""];
41->47 [style = bold, label=""];
48->30 [style = bold, label=""];
6->10 [style = solid, label="id"];
0->9 [style = bold, label=""];
20->17 [style = bold, label=""];
14->28 [style = solid, label="settings"];
27->36 [style = bold, label=""];
31->23 [style = bold, label=""];
3->44 [style = dashed, label="0"];
17->19 [style = bold, label=""];
4->5 [style = solid, label="indexService"];
15->42 [style = dashed, label="0"];
34->25 [style = solid, label="start"];
8->5 [style = bold, label=""];
9->15 [style = bold, label=""];
43->22 [style = solid, label="timestampUpperBound"];
10->37 [style = dashed, label="0"];
2->45 [style = solid, label="retainingSequenceNumber"];
22->24 [style = bold, label=""];
4->41 [style = solid, label="indexService"];
38->22 [style = bold, label=""];
13->21 [style = bold, label=""];
18->14 [style = bold, label=""];
2->8 [style = bold, label=""];
}
