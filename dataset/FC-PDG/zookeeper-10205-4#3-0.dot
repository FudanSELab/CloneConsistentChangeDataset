digraph {
0 [style = filled, label = "clientSocket.getOutputStream().flush()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "handshakeCompletedLock@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "badClientSocket = connectWithoutSSL()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assert.assertArrayEquals(DATA_TO_CLIENT,buf)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testTLSDetectionNonBlockingNonStrictServerIdleClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "handshakeCompletedLock@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "{forceClose(badClientSocket)forceClose(clientSocket)forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(handshakeCompleted)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Assert.assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(handshakeCompleted)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Socket sslSocket = connectWithSSL()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Assert.assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(1))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "clientSocket = connectWithoutSSL()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int bytesRead = clientSocket.getInputStream().read(buf,0,buf.length)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "!handshakeCompleted@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Socket badClientSocket = null@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "int bytesRead = sslSocket.getInputStream().read(buf,0,buf.length)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "sslSocket.getOutputStream().flush()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertTrue(handshakeCompleted)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(1))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Assert.assertArrayEquals(DATA_TO_CLIENT,buf)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "byte(( buf = new byte((((@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "{forceClose(sslSocket)serverThread.shutdown(TIMEOUT)}@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertFalse(handshakeCompleted)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "testConnectWithSSLToNonStrictServer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Socket clientSocket = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "handshakeCompletedLock@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "sslSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "clientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertFalse(handshakeCompleted)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "serverThread.start()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "testTLSDetectionNonBlockingNonStrictServerIdleClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "secureClientSocket = connectWithSSL()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "buf = new byte((((@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Socket secureClientSocket = null@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->2 [style = bold, label=""];
26->12 [style = solid, label="secureClientSocket"];
48->43 [style = solid, label="buf"];
25->22 [style = bold, label=""];
10->38 [style = dashed, label="0"];
45->4 [style = dotted, label="true"];
49->48 [style = bold, label=""];
16->32 [style = solid, label="buf"];
20->21 [style = solid, label="bytesRead"];
6->37 [style = solid, label="buf"];
29->2 [style = bold, label=""];
45->6 [style = bold, label=""];
2->49 [style = bold, label=""];
35->37 [style = bold, label=""];
28->46 [style = dashed, label="0"];
39->23 [style = bold, label=""];
7->35 [style = dashed, label="0"];
34->32 [style = bold, label=""];
48->46 [style = solid, label="buf"];
27->12 [style = solid, label="badClientSocket"];
23->30 [style = bold, label=""];
19->12 [style = bold, label=""];
6->28 [style = solid, label="buf"];
24->0 [style = bold, label=""];
20->34 [style = bold, label=""];
22->9 [style = bold, label=""];
30->26 [style = bold, label=""];
26->14 [style = bold, label=""];
29->33 [style = dashed, label="0"];
23->3 [style = bold, label=""];
42->40 [style = bold, label=""];
43->45 [style = bold, label=""];
46->44 [style = solid, label="bytesRead"];
6->4 [style = bold, label=""];
28->35 [style = bold, label=""];
38->18 [style = bold, label=""];
27->11 [style = bold, label=""];
1->16 [style = bold, label=""];
6->51 [style = dotted, label="true"];
23->3 [style = dotted, label="true"];
47->41 [style = bold, label=""];
2->27 [style = bold, label=""];
28->7 [style = solid, label="bytesRead"];
18->5 [style = dotted, label="true"];
5->8 [style = dotted, label="true"];
16->20 [style = bold, label=""];
15->29 [style = bold, label=""];
28->35 [style = solid, label="bytesRead"];
15->33 [style = bold, label=""];
46->44 [style = bold, label=""];
17->10 [style = bold, label=""];
10->18 [style = bold, label=""];
3->30 [style = dashed, label="0"];
51->4 [style = bold, label=""];
21->34 [style = dashed, label="0"];
8->31 [style = bold, label=""];
4->13 [style = bold, label=""];
6->51 [style = bold, label=""];
18->19 [style = dotted, label="true"];
3->26 [style = bold, label=""];
7->4 [style = bold, label=""];
11->24 [style = bold, label=""];
31->12 [style = bold, label=""];
48->46 [style = bold, label=""];
5->19 [style = bold, label=""];
13->39 [style = dashed, label="0"];
40->50 [style = solid, label="sslSocket"];
4->37 [style = dashed, label="0"];
16->17 [style = solid, label="buf"];
6->4 [style = solid, label="buf"];
4->5 [style = bold, label=""];
33->2 [style = bold, label=""];
37->39 [style = bold, label=""];
45->6 [style = dotted, label="true"];
19->31 [style = dashed, label="0"];
5->8 [style = bold, label=""];
11->12 [style = solid, label="clientSocket"];
16->20 [style = solid, label="buf"];
0->6 [style = bold, label=""];
8->19 [style = bold, label=""];
28->7 [style = bold, label=""];
23->30 [style = dotted, label="true"];
17->32 [style = dashed, label="0"];
14->1 [style = bold, label=""];
44->43 [style = bold, label=""];
20->21 [style = bold, label=""];
32->38 [style = bold, label=""];
5->31 [style = bold, label=""];
9->15 [style = bold, label=""];
18->5 [style = bold, label=""];
20->34 [style = solid, label="bytesRead"];
13->23 [style = bold, label=""];
18->31 [style = dotted, label="true"];
5->50 [style = bold, label=""];
21->17 [style = bold, label=""];
6->28 [style = bold, label=""];
41->42 [style = bold, label=""];
36->22 [style = bold, label=""];
}
