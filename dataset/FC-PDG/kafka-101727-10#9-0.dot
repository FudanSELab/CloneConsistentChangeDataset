digraph {
17 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",0L))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "verify(drainProducerRecords(driver,\"output-suppressed\",STRING_DESERIALIZER,LONG_DESERIALIZER),singletonList(new KeyValueTimestamp<>(\"v1\",1L,2L)))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "verify(drainProducerRecords(driver,\"output-raw\",STRING_DESERIALIZER,LONG_DESERIALIZER),singletonList(new KeyValueTimestamp<>(\"x\",1L,3L)))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "verify(drainProducerRecords(driver,\"output-raw\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"v1\",1L,0L),new KeyValueTimestamp<>(\"v1\",0L,1L),new KeyValueTimestamp<>(\"v2\",1L,1L),new KeyValueTimestamp<>(\"v1\",1L,2L)))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "System.out.println(topology.describe())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final KTable<String,Long> valueCounts = builder.table(\"input\",Consumed.with(STRING_SERDE,STRING_SERDE),Materialized.with(STRING_SERDE,STRING_SERDE).withCachingDisabled().withLoggingDisabled()).groupBy(null,Grouped.with(STRING_SERDE,STRING_SERDE)).count()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final StreamsBuilder builder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return builder.table(input,Consumed.with(STRING_SERDE,STRING_SERDE),Materialized.with(STRING_SERDE,STRING_SERDE).withCachingDisabled().withLoggingDisabled()).groupBy(null,Grouped.with(STRING_SERDE,STRING_SERDE)).count(Materialized.as(\"counts\").withCachingDisabled())@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final ConsumerRecordFactory<String,String> recordFactory = new ConsumerRecordFactory<>(STRING_SERIALIZER,STRING_SERIALIZER)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "verify(drainProducerRecords(driver,\"output-suppressed\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"v1\",0L,1L),new KeyValueTimestamp<>(\"v2\",1L,1L)))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final StreamsBuilder builder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "valueCounts.suppress(untilTimeLimit(Duration.ofMillis(Long.MAX_VALUE),maxBytes(200L).emitEarlyWhenFull())).toStream().to(\"output-suppressed\",Produced.with(STRING_SERDE,Serdes.Long()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"x\",\"x\",3L))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final String input@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "shouldSuppressIntermediateEventsWithBytesLimit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k2\",\"v1\",2L))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final String input@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "buildCountsTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "final Topology topology = builder.build()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "buildCountsTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v2\",1L))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "valueCounts.toStream().to(\"output-raw\",Produced.with(STRING_SERDE,Serdes.Long()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22->9 [style = bold, label=""];
21->8 [style = bold, label=""];
5->6 [style = dotted, label="true"];
10->7 [style = bold, label=""];
3->0 [style = bold, label=""];
5->4 [style = dotted, label="true"];
15->22 [style = bold, label=""];
8->17 [style = bold, label=""];
20->16 [style = bold, label=""];
5->0 [style = bold, label=""];
11->10 [style = bold, label=""];
12->14 [style = bold, label=""];
2->6 [style = dashed, label="0"];
14->13 [style = bold, label=""];
18->21 [style = bold, label=""];
19->15 [style = bold, label=""];
7->19 [style = bold, label=""];
3->1 [style = dotted, label="true"];
16->12 [style = bold, label=""];
13->18 [style = bold, label=""];
3->2 [style = dotted, label="true"];
17->11 [style = bold, label=""];
}
