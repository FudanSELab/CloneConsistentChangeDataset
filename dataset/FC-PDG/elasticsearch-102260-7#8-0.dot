digraph {
9 [style = filled, label = "nodesList.add(node)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final DiscoveryNode node = newNode(idGenerator.getAndIncrement(),attributes,roles)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return nodesList@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final int numNodes@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "frequently()@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<DiscoveryNode> nodesList = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "roles.add(new DiscoveryNodeRole(\"custom_role\",\"cr\"){@Override public Setting<Boolean> legacySetting(){return null}})@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Set<DiscoveryNodeRole> roles = new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < numNodes@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "nodesList.add(node)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "randomNodes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "randomNodes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "frequently()@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "attributes.put(\"custom\",randomBoolean()? \"match\": randomAlphaOfLengthBetween(3,5))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "randomNodes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "return nodesList@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final DiscoveryNode node = newNode(i,attributes,new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<String,String> attributes = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->9 [style = solid, label="node"];
14->5 [style = bold, label=""];
19->3 [style = bold, label=""];
8->10 [style = dotted, label="true"];
2->18 [style = solid, label="attributes"];
7->18 [style = dashed, label="0"];
10->18 [style = solid, label="i"];
13->7 [style = bold, label=""];
8->16 [style = dotted, label="true"];
8->4 [style = bold, label=""];
14->5 [style = dotted, label="true"];
12->8 [style = solid, label="i"];
2->13 [style = bold, label=""];
3->4 [style = solid, label="nodesList"];
15->1 [style = dotted, label="true"];
0->9 [style = bold, label=""];
13->11 [style = dotted, label="true"];
10->8 [style = bold, label=""];
6->1 [style = dotted, label="true"];
7->0 [style = solid, label="roles"];
2->0 [style = solid, label="attributes"];
14->0 [style = bold, label=""];
11->18 [style = bold, label=""];
8->2 [style = dotted, label="true"];
8->17 [style = bold, label=""];
8->7 [style = dotted, label="true"];
16->10 [style = bold, label=""];
13->18 [style = bold, label=""];
18->16 [style = solid, label="node"];
11->7 [style = bold, label=""];
7->14 [style = bold, label=""];
13->11 [style = bold, label=""];
8->2 [style = bold, label=""];
5->0 [style = bold, label=""];
3->12 [style = bold, label=""];
6->3 [style = bold, label=""];
18->16 [style = bold, label=""];
15->3 [style = bold, label=""];
3->17 [style = solid, label="nodesList"];
19->1 [style = dotted, label="true"];
10->8 [style = solid, label="i"];
8->14 [style = dotted, label="true"];
8->18 [style = dotted, label="true"];
12->18 [style = solid, label="i"];
12->8 [style = bold, label=""];
12->10 [style = solid, label="i"];
1->8 [style = solid, label="numNodes"];
8->0 [style = dotted, label="true"];
9->10 [style = bold, label=""];
8->13 [style = dotted, label="true"];
8->9 [style = dotted, label="true"];
}
