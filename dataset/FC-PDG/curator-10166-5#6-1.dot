digraph {
14 [style = filled, label = "client.start()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "{Collections.reverse(closeables)for (Closeable c : closeables){CloseableUtils.closeQuietly(c)}}@@@17@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "List<Closeable> closeables = Lists.newArrayList()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "CuratorFramework client = null@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "ServiceInstance<String> instance = ServiceInstance.builder().payload(\"thing\").name(\"test\").port(10064).build()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "discovery.start()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "testCleaning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "{Collections.reverse(closeables)for (Closeable c : closeables){CloseableUtils.closeQuietly(c)}}@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "{CloseableUtils.closeQuietly(discovery)CloseableUtils.closeQuietly(client)}@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "testBasic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "discovery.unregisterService(instance)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "client.start()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "closeables.add(client)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "closeables.add(discovery)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "discovery.start()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ServiceDiscovery<String> discovery = ServiceDiscoveryBuilder.builder().basePath(\"/test\").client(client).thisInstance(instance).build()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<ServiceInstance<String>> list = Lists.newArrayList()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ServiceDiscovery<String> discovery = null@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assert.assertEquals(((ServiceDiscoveryImpl)discovery).debugServicesQty(),0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(discovery.queryForInstances(\"test\"),list)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(discovery.queryForInstances(\"test\"),list)@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testBasic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "list.add(instance)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(discovery.queryForNames(),Collections.singletonList(\"test\"))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7->13 [style = bold, label=""];
5->3 [style = bold, label=""];
11->16 [style = bold, label=""];
9->22 [style = bold, label=""];
22->25 [style = bold, label=""];
10->1 [style = solid, label="discovery"];
10->20 [style = bold, label=""];
0->6 [style = bold, label=""];
15->21 [style = bold, label=""];
25->23 [style = bold, label=""];
6->22 [style = solid, label="instance"];
11->12 [style = bold, label=""];
24->13 [style = bold, label=""];
19->17 [style = bold, label=""];
9->8 [style = bold, label=""];
21->16 [style = solid, label="client"];
1->9 [style = bold, label=""];
3->0 [style = bold, label=""];
20->18 [style = bold, label=""];
10->16 [style = solid, label="discovery"];
8->2 [style = bold, label=""];
12->4 [style = bold, label=""];
6->2 [style = solid, label="instance"];
6->10 [style = bold, label=""];
17->15 [style = bold, label=""];
5->3 [style = solid, label="client"];
13->5 [style = bold, label=""];
13->23 [style = solid, label="closeables"];
5->21 [style = dashed, label="0"];
2->12 [style = solid, label="list"];
18->8 [style = bold, label=""];
6->11 [style = solid, label="instance"];
8->11 [style = solid, label="list"];
10->1 [style = bold, label=""];
13->4 [style = solid, label="closeables"];
2->11 [style = bold, label=""];
14->6 [style = bold, label=""];
21->14 [style = bold, label=""];
}
