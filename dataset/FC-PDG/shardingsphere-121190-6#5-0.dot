digraph {
13 [style = filled, label = "executionContext = createExecutionContext(sql)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "returnGeneratedKeys = true@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Collection<InputGroup<StatementExecuteUnit>> inputGroups = getInputGroups(schemaContexts.getProperties().getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "return rawSQLExecutor.execute(getRawInputGroups(),new RawSQLExecuteExecutorCallback())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "clearPrevious()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "execute['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String sql@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "reply()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "cacheStatements(inputGroups)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "cacheStatements(inputGroups)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return preparedStatementExecutor.execute(inputGroups,executionContext.getSqlStatementContext())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RETURN_GENERATED_KEYS == autoGeneratedKeys@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "executionContext = createExecutionContext()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Collection<InputGroup<StatementExecuteUnit>> inputGroups = executeGroupEngine.generate(executionContext.getExecutionUnits(),connection,statementOption)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "{clearBatch()}@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ExecutorConstant.MANAGED_RESOURCE@@@6@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Collection<InputGroup<StatementExecuteUnit>> inputGroups = getInputGroups()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "PreparedStatementExecuteGroupEngine executeGroupEngine = new PreparedStatementExecuteGroupEngine(schemaContexts.getProperties().getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY),schemaContexts.getDefaultSchemaContext().getSchema().getRules())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "execute['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final int autoGeneratedKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return statementExecutor.executeUpdate(inputGroups,executionContext.getSqlStatementContext(),autoGeneratedKeys)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "{currentResultSet = null}@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "executeUpdate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
9->3 [style = solid, label="inputGroups"];
16->13 [style = bold, label=""];
10->6 [style = dotted, label="true"];
20->13 [style = bold, label=""];
1->8 [style = bold, label=""];
17->14 [style = solid, label="autoGeneratedKeys"];
0->6 [style = bold, label=""];
19->17 [style = dotted, label="true"];
9->6 [style = solid, label="inputGroups"];
8->3 [style = bold, label=""];
10->3 [style = dotted, label="true"];
16->20 [style = dotted, label="true"];
7->4 [style = bold, label=""];
19->15 [style = dotted, label="true"];
10->9 [style = dotted, label="true"];
12->7 [style = bold, label=""];
3->0 [style = bold, label=""];
19->16 [style = bold, label=""];
8->9 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
6->5 [style = bold, label=""];
11->5 [style = bold, label=""];
17->16 [style = solid, label="autoGeneratedKeys"];
10->11 [style = dotted, label="false"];
21->14 [style = solid, label="inputGroups"];
21->22 [style = bold, label=""];
15->13 [style = solid, label="sql"];
9->3 [style = bold, label=""];
10->0 [style = dotted, label="true"];
14->18 [style = bold, label=""];
4->1 [style = bold, label=""];
10->9 [style = bold, label=""];
2->7 [style = bold, label=""];
22->14 [style = bold, label=""];
8->3 [style = solid, label="inputGroups"];
13->21 [style = bold, label=""];
16->20 [style = bold, label=""];
21->22 [style = solid, label="inputGroups"];
10->11 [style = bold, label=""];
8->6 [style = solid, label="inputGroups"];
}
