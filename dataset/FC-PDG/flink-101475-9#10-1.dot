digraph {
12 [style = filled, label = "int j = 0@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.fail(\"Wrong watermark.\")@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "env.setParallelism(1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testTimestampExtractorWithCustomWatermarkEmit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testTimestampExtractorWithCustomWatermarkEmit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "source1.assignTimestampsAndWatermarks(new AssignerWithPunctuatedWatermarks<Integer>(){@Override public long extractTimestamp(Integer element,long previousTimestamp){return element}@Override public Watermark checkAndGetNextWatermark(Integer element,long extractedTimestamp){return new Watermark(extractedTimestamp - 1)}}).transform(\"Watermark Check\",BasicTypeInfo.INT_TYPE_INFO,new CustomOperator(true)).transform(\"Timestamp Check\",BasicTypeInfo.INT_TYPE_INFO,new TimestampCheckingOperator())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "env.getConfig().setAutoWatermarkInterval(10)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "env.getConfig().setAutoWatermarkInterval(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final int numElements = 10@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testTimestampExtractorWithDecreasingCustomWatermarkEmit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "DataStream<Integer> source1 = env.addSource(new SourceFunction<Integer>(){@Override public void run(SourceContext<Integer> ctx){int index = 1while (index <= numElements) {ctx.collect(index)Thread.sleep(100)ctx.collect(index - 1)latch.await()index++}}@Override public void cancel(){}})@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Watermark.MAX_WATERMARK,CustomOperator.finalWatermarks(0(.get(CustomOperator.finalWatermarks(0(.size() - 1))@@@40@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "env.execute()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "!CustomOperator.finalWatermarks(0(.get(j).equals(new Watermark(j))@@@36@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "j++@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "j < numElements@@@34@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->6 [style = dotted, label="true"];
11->16 [style = bold, label=""];
6->3 [style = bold, label=""];
17->8 [style = bold, label=""];
9->0 [style = bold, label=""];
8->9 [style = solid, label="numElements"];
4->6 [style = bold, label=""];
4->13 [style = bold, label=""];
16->7 [style = bold, label=""];
1->3 [style = bold, label=""];
8->4 [style = solid, label="numElements"];
6->1 [style = dotted, label="true"];
8->14 [style = bold, label=""];
12->4 [style = solid, label="j"];
3->4 [style = bold, label=""];
5->16 [style = dashed, label="0"];
7->9 [style = bold, label=""];
6->1 [style = bold, label=""];
11->5 [style = bold, label=""];
0->10 [style = bold, label=""];
4->3 [style = dotted, label="true"];
12->3 [style = solid, label="j"];
12->4 [style = bold, label=""];
10->12 [style = bold, label=""];
5->7 [style = bold, label=""];
3->4 [style = solid, label="j"];
14->11 [style = bold, label=""];
15->8 [style = bold, label=""];
2->8 [style = bold, label=""];
14->5 [style = bold, label=""];
}
