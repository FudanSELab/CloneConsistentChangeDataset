digraph {
23 [style = filled, label = "final long fetchSize = max + 1@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "int recordCount = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "jdbcInputFormat.close()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "!jdbcInputFormat.reachedEnd()@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "jdbcInputFormat = JdbcInputFormat.buildJdbcInputFormat().setDrivername(DERBY_EBOOKSHOP_DB.getDriverClass()).setDBUrl(DERBY_EBOOKSHOP_DB.getUrl()).setQuery(SELECT_ALL_BOOKS_SPLIT_BY_ID).setRowTypeInfo(ROW_TYPE_INFO).setParametersProvider(pramProvider).setResultSetType(ResultSet.TYPE_SCROLL_INSENSITIVE).finish()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "final long min = TEST_DATA(0(.id@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(TEST_DATA.length,recordCount)@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final int fetchSize = 1@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int recordCount = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final long max = TEST_DATA(TEST_DATA.length - 1(.id@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "jdbcInputFormat = JdbcInputFormat.buildJdbcInputFormat().setDrivername(DERBY_EBOOKSHOP_DB.getDriverClass()).setDBUrl(DERBY_EBOOKSHOP_DB.getUrl()).setQuery(SELECT_ALL_BOOKS_SPLIT_BY_ID).setRowTypeInfo(ROW_TYPE_INFO).setParametersProvider(pramProvider).setResultSetType(ResultSet.TYPE_SCROLL_INSENSITIVE).setRowConverter(JdbcDialects.get(DERBY_EBOOKSHOP_DB.getUrl()).get().getRowConverter(ROW_TYPE)).finish()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "JdbcParameterValuesProvider pramProvider = new JdbcNumericBetweenParametersProvider(min,max).ofBatchSize(fetchSize)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "recordCount++@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(1,splits.length)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Row row = new Row(5)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "InputSplit(( splits = jdbcInputFormat.createInputSplits(1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testJdbcInputFormatWithoutParallelismAndNumericColumnSplitting['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testJdbcInputFormatWithParallelismAndNumericColumnSplitting['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "jdbcInputFormat.closeInputFormat()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Row next = jdbcInputFormat.nextRecord(row)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "JdbcParameterValuesProvider pramProvider = new JdbcNumericBetweenParametersProvider(min,max).ofBatchSize(fetchSize)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "jdbcInputFormat.openInputFormat()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "jdbcInputFormat.open(split)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testJdbcInputFormatWithParallelismAndNumericColumnSplitting['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final long max = TEST_DATA(TEST_DATA.length - fetchSize(.id@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(TEST_DATA(recordCount(,next)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
6->17 [style = bold, label=""];
21->10 [style = bold, label=""];
23->25 [style = bold, label=""];
16->18 [style = bold, label=""];
14->17 [style = solid, label="recordCount"];
7->10 [style = bold, label=""];
22->16 [style = bold, label=""];
8->18 [style = bold, label=""];
23->25 [style = solid, label="fetchSize"];
14->13 [style = solid, label="recordCount"];
11->12 [style = bold, label=""];
8->6 [style = bold, label=""];
19->2 [style = bold, label=""];
5->14 [style = solid, label="recordCount"];
11->19 [style = bold, label=""];
9->8 [style = bold, label=""];
7->4 [style = solid, label="fetchSize"];
22->14 [style = solid, label="recordCount"];
10->23 [style = solid, label="max"];
9->14 [style = dotted, label="true"];
22->17 [style = solid, label="recordCount"];
0->7 [style = bold, label=""];
1->22 [style = bold, label=""];
5->16 [style = bold, label=""];
5->13 [style = solid, label="recordCount"];
16->3 [style = solid, label="row"];
12->2 [style = bold, label=""];
12->19 [style = dashed, label="0"];
24->21 [style = bold, label=""];
25->12 [style = bold, label=""];
10->23 [style = bold, label=""];
22->13 [style = solid, label="recordCount"];
5->17 [style = solid, label="recordCount"];
9->13 [style = dotted, label="true"];
2->15 [style = bold, label=""];
18->9 [style = bold, label=""];
10->4 [style = bold, label=""];
3->13 [style = bold, label=""];
9->3 [style = bold, label=""];
14->9 [style = bold, label=""];
7->11 [style = solid, label="fetchSize"];
20->7 [style = bold, label=""];
4->10 [style = dashed, label="0"];
4->11 [style = bold, label=""];
13->14 [style = bold, label=""];
9->3 [style = dotted, label="true"];
3->13 [style = solid, label="next"];
15->1 [style = bold, label=""];
}
