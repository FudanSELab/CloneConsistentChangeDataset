digraph {
24 [style = filled, label = "verify(observer,times(1)).onNext(\"one\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "InterruptedException e@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final AtomicReference<Throwable> capturedException = new AtomicReference<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "verify(observer,times(1)).onComplete()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "resumeNext['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final AtomicReference<Throwable> capturedException = new AtomicReference<Throwable>()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Observable<String> w = Observable.unsafeCreate(f)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "resumeNext['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Subscriber<String> subscriber = TestHelper.mockSubscriber()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Flowable<String> w = Flowable.unsafeCreate(f)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "resumeNext['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "fail(e.getMessage())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "flowable.subscribe(subscriber)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(subscriber,times(1)).onComplete()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TestFlowable f = new TestFlowable(\"one\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "f.t.join()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "verify(observer,Mockito.never()).onError(any())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "observable.subscribe(observer)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "verify(observer,times(1)).onNext(\"failure\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertNotNull(capturedException.get())@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Flowable<String> flowable = w.onErrorReturn(new Function<Throwable,String>(){@Override public String apply(Throwable e){capturedException.set(e)return \"failure\"}})@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "verify(subscriber,times(1)).onNext(\"one\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(subscriber,Mockito.never()).onError(any())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "verify(subscriber,times(1)).onNext(\"failure\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Observer<String> observer = TestHelper.mockObserver()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Observable<String> observable = w.onErrorReturn(new Function<Throwable,String>(){@Override public String apply(Throwable e){capturedException.set(e)return \"failure\"}})@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "TestObservable f = new TestObservable(\"one\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->23 [style = dashed, label="0"];
16->3 [style = bold, label=""];
1->4 [style = bold, label=""];
19->18 [style = bold, label=""];
7->11 [style = bold, label=""];
18->24 [style = bold, label=""];
2->13 [style = solid, label="subscriber"];
3->25 [style = dashed, label="0"];
26->17 [style = bold, label=""];
4->17 [style = dashed, label="0"];
10->14 [style = bold, label=""];
12->16 [style = dashed, label="0"];
1->26 [style = dashed, label="0"];
25->23 [style = bold, label=""];
8->19 [style = bold, label=""];
14->20 [style = dashed, label="0"];
20->6 [style = bold, label=""];
23->22 [style = solid, label="observer"];
8->7 [style = bold, label=""];
2->13 [style = bold, label=""];
24->20 [style = bold, label=""];
22->8 [style = bold, label=""];
5->19 [style = bold, label=""];
21->26 [style = bold, label=""];
17->12 [style = bold, label=""];
23->22 [style = bold, label=""];
3->2 [style = bold, label=""];
7->19 [style = dashed, label="0"];
26->17 [style = solid, label="f"];
11->10 [style = bold, label=""];
0->1 [style = bold, label=""];
12->25 [style = bold, label=""];
11->18 [style = dashed, label="0"];
9->5 [style = bold, label=""];
4->12 [style = bold, label=""];
5->7 [style = bold, label=""];
12->3 [style = bold, label=""];
13->8 [style = bold, label=""];
13->22 [style = dashed, label="0"];
10->24 [style = dashed, label="0"];
1->4 [style = solid, label="f"];
14->6 [style = bold, label=""];
4->16 [style = bold, label=""];
15->1 [style = bold, label=""];
9->5 [style = dotted, label="true"];
}
