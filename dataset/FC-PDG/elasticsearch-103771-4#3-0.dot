digraph {
3 [style = filled, label = "assertTokenStreamContents(analyzers.get(\"lucene_version\").tokenStream(\"\",\"test\"),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13eb6b9)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"test\" + (luceneVersionSupportsMultiTerm? version.luceneVersion.toString(): \"\"),analyzers.get(\"lucene_version\").normalize(\"\",\"test\").utf8ToString())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTokenStreamContents(analyzers.get(\"no_version\").tokenStream(\"\",\"test\"),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13eb6aa)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTokenStreamContents(analyzers.get(\"elasticsearch_version\").tokenStream(\"\",\"test\"),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13eb6cd)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "boolean noVersionSupportsMultiTerm = randomBoolean()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Version version = VersionUtils.randomVersion(random())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testPluginPreConfiguredTokenFilters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"test\" + (elasticsearchVersionSupportsMultiTerm? version.toString(): \"\"),analyzers.get(\"elasticsearch_version\").normalize(\"\",\"test\").utf8ToString())@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "IndexAnalyzers analyzers = getIndexAnalyzers(registry,Settings.builder().put(\"index.analysis.analyzer.no_version.tokenizer\",\"keyword\").put(\"index.analysis.analyzer.no_version.filter\",\"no_version\").put(\"index.analysis.analyzer.lucene_version.tokenizer\",\"keyword\").put(\"index.analysis.analyzer.lucene_version.filter\",\"lucene_version\").put(\"index.analysis.analyzer.elasticsearch_version.tokenizer\",\"keyword\").put(\"index.analysis.analyzer.elasticsearch_version.filter\",\"elasticsearch_version\").put(IndexMetaData.SETTING_VERSION_CREATED,version).build())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "testPluginPreConfiguredTokenFilters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertEquals(\"test\" + (noVersionSupportsMultiTerm? \"no_version\": \"\"),analyzers.get(\"no_version\").normalize(\"\",\"test\").utf8ToString())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "AnalysisRegistry registry = new AnalysisModule(TestEnvironment.newEnvironment(emptyNodeSettings),singletonList(new AnalysisPlugin(){@Override public List<PreConfiguredCharFilter> getPreConfiguredCharFilters(){return Arrays.asList(PreConfiguredCharFilter.singleton(\"no_version\",noVersionSupportsMultiTerm,null),PreConfiguredCharFilter.luceneVersion(\"lucene_version\",luceneVersionSupportsMultiTerm,null),PreConfiguredCharFilter.elasticsearchVersion(\"elasticsearch_version\",elasticsearchVersionSupportsMultiTerm,null))}})).getAnalysisRegistry()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "IndexAnalyzers analyzers = getIndexAnalyzers(registry,Settings.builder().put(\"index.analysis.analyzer.no_version.tokenizer\",\"standard\").put(\"index.analysis.analyzer.no_version.filter\",\"no_version\").put(\"index.analysis.analyzer.lucene_version.tokenizer\",\"standard\").put(\"index.analysis.analyzer.lucene_version.filter\",\"lucene_version\").put(\"index.analysis.analyzer.elasticsearch_version.tokenizer\",\"standard\").put(\"index.analysis.analyzer.elasticsearch_version.filter\",\"elasticsearch_version\").put(IndexMetaData.SETTING_VERSION_CREATED,version).build())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "boolean luceneVersionSupportsMultiTerm = randomBoolean()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testPluginPreConfiguredCharFilters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "boolean elasticsearchVersionSupportsMultiTerm = randomBoolean()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "IndexAnalyzers analyzers = getIndexAnalyzers(registry,Settings.builder().put(\"index.analysis.analyzer.no_version.tokenizer\",\"keyword\").put(\"index.analysis.analyzer.no_version.char_filter\",\"no_version\").put(\"index.analysis.analyzer.lucene_version.tokenizer\",\"keyword\").put(\"index.analysis.analyzer.lucene_version.char_filter\",\"lucene_version\").put(\"index.analysis.analyzer.elasticsearch_version.tokenizer\",\"keyword\").put(\"index.analysis.analyzer.elasticsearch_version.char_filter\",\"elasticsearch_version\").put(IndexMetaData.SETTING_VERSION_CREATED,version).build())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->15 [style = dashed, label="0"];
4->9 [style = bold, label=""];
8->15 [style = solid, label="registry"];
4->0 [style = solid, label="noVersionSupportsMultiTerm"];
12->5 [style = bold, label=""];
8->10 [style = solid, label="registry"];
3->1 [style = bold, label=""];
8->13 [style = solid, label="registry"];
0->12 [style = bold, label=""];
9->12 [style = solid, label="luceneVersionSupportsMultiTerm"];
1->0 [style = bold, label=""];
10->13 [style = dashed, label="0"];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
2->10 [style = bold, label=""];
13->11 [style = bold, label=""];
2->13 [style = bold, label=""];
6->4 [style = bold, label=""];
2->1 [style = solid, label="version"];
15->11 [style = bold, label=""];
8->2 [style = bold, label=""];
11->3 [style = bold, label=""];
7->5 [style = solid, label="elasticsearchVersionSupportsMultiTerm"];
2->15 [style = bold, label=""];
16->4 [style = bold, label=""];
14->4 [style = bold, label=""];
10->11 [style = bold, label=""];
}
