digraph {
12 [style = filled, label = "request.setGlobalToolchainsSource(new StringSource(\"\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "userResult.addToolchain(toolchain)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "ToolchainsBuildingResult result = toolchainBuilder.build(request)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "userToolchain.setType(\"TYPE\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "userToolchain.addProvide(\"key\",\"user_value\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"TYPE\",result.getEffectiveToolchains().getToolchains().get(1).getType())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(\"user_value\",result.getEffectiveToolchains().getToolchains().get(0).getProvides().getProperty(\"key\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testBuildRequestWithUserToolchains['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "doReturn(globalResult).doReturn(userResult).when(toolchainsReader).read(any(),ArgumentMatchers.anyMap())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "globalResult.addToolchain(globalToolchain)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "PersistedToolchains globalResult = new PersistedToolchains()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"TYPE\",result.getEffectiveToolchains().getToolchains().get(0).getType())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "toolchain.addProvide(\"key\",\"user_value\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "userResult.addToolchain(userToolchain)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNotNull(result.getProblems())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"global_value\",result.getEffectiveToolchains().getToolchains().get(1).getProvides().getProperty(\"key\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"TYPE\",result.getEffectiveToolchains().getToolchains().get(0).getType())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(0,result.getProblems().size())@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testBuildRequestWithBothToolchains['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "when(toolchainsReader.read(any(),ArgumentMatchers.anyMap())).thenReturn(userResult)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(1,result.getEffectiveToolchains().getToolchains().size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testBuildRequestWithBothToolchains['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "PersistedToolchains userResult = new PersistedToolchains()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "globalToolchain.setType(\"TYPE\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(0,result.getProblems().size())@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertNotNull(result.getEffectiveToolchains())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(\"user_value\",result.getEffectiveToolchains().getToolchains().get(0).getProvides().getProperty(\"key\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertNotNull(result.getProblems())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(2,result.getEffectiveToolchains().getToolchains().size())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(toolchainsReader.read(any(),ArgumentMatchers.anyMap())).thenReturn(globalResult).thenReturn(userResult)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "ToolchainModel userToolchain = new ToolchainModel()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "globalToolchain.addProvide(\"key\",\"global_value\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ToolchainModel globalToolchain = new ToolchainModel()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "request.setUserToolchainsSource(new StringSource(\"\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ToolchainsBuildingRequest request = new DefaultToolchainsBuildingRequest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "toolchain.setType(\"TYPE\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "ToolchainModel toolchain = new ToolchainModel()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->5 [style = bold, label=""];
14->5 [style = solid, label="userToolchain"];
4->17 [style = bold, label=""];
0->13 [style = bold, label=""];
21->19 [style = bold, label=""];
28->34 [style = bold, label=""];
20->17 [style = solid, label="request"];
5->26 [style = dashed, label="0"];
35->20 [style = bold, label=""];
36->29 [style = bold, label=""];
6->18 [style = bold, label=""];
31->32 [style = bold, label=""];
27->30 [style = bold, label=""];
20->0 [style = bold, label=""];
13->27 [style = solid, label="userResult"];
5->15 [style = bold, label=""];
23->3 [style = bold, label=""];
9->10 [style = bold, label=""];
16->22 [style = bold, label=""];
15->16 [style = bold, label=""];
14->33 [style = dashed, label="0"];
12->0 [style = bold, label=""];
25->17 [style = bold, label=""];
17->23 [style = bold, label=""];
14->1 [style = bold, label=""];
29->26 [style = bold, label=""];
24->20 [style = bold, label=""];
4->25 [style = dashed, label="0"];
33->26 [style = solid, label="toolchain"];
26->27 [style = bold, label=""];
1->36 [style = dashed, label="0"];
8->20 [style = bold, label=""];
18->4 [style = bold, label=""];
20->30 [style = solid, label="request"];
3->7 [style = bold, label=""];
19->9 [style = bold, label=""];
13->4 [style = solid, label="userResult"];
30->31 [style = bold, label=""];
2->29 [style = dashed, label="0"];
33->36 [style = bold, label=""];
34->17 [style = bold, label=""];
20->12 [style = bold, label=""];
18->25 [style = bold, label=""];
7->21 [style = bold, label=""];
1->2 [style = bold, label=""];
3->32 [style = dashed, label="0"];
16->18 [style = solid, label="globalToolchain"];
13->33 [style = bold, label=""];
32->28 [style = bold, label=""];
13->14 [style = bold, label=""];
22->6 [style = bold, label=""];
10->11 [style = bold, label=""];
}
