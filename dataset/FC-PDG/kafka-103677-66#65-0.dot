digraph {
11 [style = filled, label = "time.sleep(client.throttleDelayMs(node,time.milliseconds()))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Sensor throttleTimeSensor = Sender.throttleTimeSensor(this.senderMetricsRegistry)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "ByteBuffer buffer = ApiVersionsResponse.createApiVersionsResponse(400,RecordBatch.CURRENT_MAGIC_VALUE).serialize(apiVersionsResponseVersion,new ResponseHeader(0))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i <= 3@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "FetchResponse response = fullFetchResponse(tp0,nextRecords,Errors.NONE,i,throttleTimeMs)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "buffer = response.serialize(ApiKeys.FETCH.latestVersion(),new ResponseHeader(request.correlationId()))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "int throttleTimeMs = 100 * i@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Sensor throttleTimeSensor = Fetcher.throttleTimeSensor(metrics,metricsRegistry)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true,null)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "ProduceResponse response = produceResponse(tp0,i,Errors.NONE,throttleTimeMs)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "selector.delayedReceive(new DelayedReceive(node.idString(),new NetworkReceive(node.idString(),buffer)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "MockSelector selector = new MockSelector(time)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "buffer = response.serialize(ApiKeys.PRODUCE.latestVersion(),new ResponseHeader(request.correlationId()))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "selector.clear()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 1@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "FetchRequest.Builder builder = FetchRequest.Builder.forConsumer(100,100,new LinkedHashMap<TopicPartition,PartitionData>())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "selector.clear()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "client.close()@@@36@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "client.poll(1,time.milliseconds())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Node node = cluster.nodes().get(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,time,true,new ApiVersions(),throttleTimeSensor,logContext)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(400,maxMetric.value(),EPSILON)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(400,maxMetric.value(),EPS)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Cluster cluster = TestUtils.singletonCluster(\"test\",1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "client.send(request,time.milliseconds())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(this.senderMetricsRegistry.produceThrottleTimeAvg)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeAvg))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "short apiVersionsResponseVersion = ApiKeys.API_VERSIONS.latestVersion()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "FetchRequest.Builder builder = FetchRequest.Builder.forConsumer(100,100,new LinkedHashMap<>())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "ProduceRequest.Builder builder = ProduceRequest.Builder.forCurrentMagic((short)1,1000,Collections.emptyMap())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "selector.completeReceive(new NetworkReceive(node.idString(),buffer))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(250,avgMetric.value(),EPS)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeMax))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,time,true,new ApiVersions(),throttleTimeSensor,new LogContext())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(this.senderMetricsRegistry.produceThrottleTimeMax)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "time.sleep(client.throttleDelayMs(node,time.milliseconds()))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(250,avgMetric.value(),EPSILON)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "!client.ready(node,time.milliseconds())@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i++@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "client.poll(1,time.milliseconds())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "client.poll(1,time.milliseconds())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
32->21 [style = solid, label="builder"];
36->40 [style = solid, label="throttleTimeSensor"];
0->13 [style = bold, label=""];
6->32 [style = dotted, label="true"];
14->28 [style = bold, label=""];
26->43 [style = dashed, label="0"];
13->1 [style = bold, label=""];
21->2 [style = bold, label=""];
6->38 [style = dotted, label="true"];
18->39 [style = dashed, label="0"];
44->23 [style = bold, label=""];
23->30 [style = solid, label="selector"];
15->38 [style = solid, label="throttleTimeMs"];
22->38 [style = dashed, label="0"];
23->36 [style = bold, label=""];
35->33 [style = solid, label="builder"];
6->11 [style = dotted, label="true"];
42->21 [style = bold, label=""];
19->3 [style = bold, label=""];
6->15 [style = dotted, label="true"];
14->28 [style = solid, label="buffer"];
4->38 [style = bold, label=""];
10->31 [style = bold, label=""];
8->23 [style = bold, label=""];
13->3 [style = dotted, label="true"];
32->35 [style = dashed, label="0"];
27->30 [style = solid, label="throttleTimeSensor"];
13->19 [style = dotted, label="true"];
38->45 [style = bold, label=""];
33->2 [style = solid, label="request"];
16->17 [style = bold, label=""];
27->16 [style = bold, label=""];
26->24 [style = bold, label=""];
2->4 [style = bold, label=""];
24->18 [style = bold, label=""];
15->35 [style = bold, label=""];
25->41 [style = dashed, label="0"];
42->21 [style = solid, label="builder"];
18->20 [style = bold, label=""];
6->14 [style = dotted, label="true"];
5->6 [style = bold, label=""];
6->29 [style = dotted, label="true"];
25->26 [style = bold, label=""];
30->10 [style = bold, label=""];
6->7 [style = dotted, label="true"];
36->16 [style = bold, label=""];
6->42 [style = dotted, label="true"];
6->12 [style = dotted, label="true"];
22->14 [style = bold, label=""];
39->20 [style = bold, label=""];
6->33 [style = dotted, label="true"];
41->43 [style = bold, label=""];
4->22 [style = bold, label=""];
29->11 [style = bold, label=""];
31->0 [style = solid, label="buffer"];
28->29 [style = bold, label=""];
15->22 [style = solid, label="throttleTimeMs"];
31->0 [style = bold, label=""];
12->15 [style = solid, label="i"];
17->40 [style = bold, label=""];
6->22 [style = dotted, label="true"];
27->36 [style = dashed, label="0"];
6->15 [style = bold, label=""];
12->6 [style = solid, label="i"];
13->19 [style = bold, label=""];
24->37 [style = dashed, label="0"];
6->2 [style = dotted, label="true"];
14->45 [style = dashed, label="0"];
10->31 [style = solid, label="apiVersionsResponseVersion"];
34->23 [style = bold, label=""];
6->21 [style = dotted, label="true"];
5->12 [style = solid, label="i"];
33->2 [style = bold, label=""];
37->39 [style = bold, label=""];
45->28 [style = solid, label="buffer"];
40->10 [style = bold, label=""];
30->40 [style = dashed, label="0"];
32->21 [style = bold, label=""];
23->27 [style = bold, label=""];
7->12 [style = bold, label=""];
23->40 [style = solid, label="selector"];
12->22 [style = solid, label="i"];
35->33 [style = bold, label=""];
5->38 [style = solid, label="i"];
17->30 [style = bold, label=""];
43->37 [style = bold, label=""];
45->28 [style = bold, label=""];
12->6 [style = bold, label=""];
6->28 [style = dotted, label="true"];
9->41 [style = bold, label=""];
17->3 [style = solid, label="node"];
5->22 [style = solid, label="i"];
6->4 [style = dotted, label="true"];
15->42 [style = bold, label=""];
21->33 [style = dashed, label="0"];
5->15 [style = solid, label="i"];
9->25 [style = bold, label=""];
3->13 [style = bold, label=""];
21->2 [style = solid, label="request"];
6->35 [style = dotted, label="true"];
6->45 [style = dotted, label="true"];
17->11 [style = solid, label="node"];
6->9 [style = bold, label=""];
15->32 [style = bold, label=""];
5->6 [style = solid, label="i"];
11->7 [style = bold, label=""];
12->38 [style = solid, label="i"];
}
