digraph {
23 [style = filled, label = "final String expectation@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertThat(continuationResponse.status(),is(HttpResponseStatus.OK))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "runExpectHeaderTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "expectedStatus.equals(HttpResponseStatus.CONTINUE)@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "runExpectHeaderTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "final Settings settings@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "final String expectation@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "HttpUtil.setContentLength(request,contentLength)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final FullHttpRequest continuationRequest = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.POST,\"/\",Unpooled.EMPTY_BUFFER)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final TransportAddress remoteAddress = randomFrom(transport.boundAddress().boundAddresses())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "{continuationResponse.release()}@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "{response.release()}@@@34@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "request.headers().set(HttpHeaderNames.EXPECT,expectation)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final FullHttpResponse continuationResponse = client.post(remoteAddress.address(),continuationRequest)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "runExpectHeaderTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final int contentLength@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final FullHttpResponse response = client.post(remoteAddress.address(),request)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Settings settings@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(new String(ByteBufUtil.getBytes(continuationResponse.content()),StandardCharsets.UTF_8),is(\"done\"))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final Settings settings@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final int contentLength@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final String expectation@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "transport.start()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final HttpResponseStatus expectedStatus@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final FullHttpRequest request = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,HttpMethod.POST,\"/\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(response.status(),equalTo(expectedStatus))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final HttpServerTransport.Dispatcher dispatcher = new HttpServerTransport.Dispatcher(){@Override public void dispatchRequest(RestRequest request,RestChannel channel,ThreadContext threadContext){channel.sendResponse(new BytesRestResponse(OK,BytesRestResponse.TEXT_CONTENT_TYPE,new BytesArray(\"done\")))}@Override public void dispatchBadRequest(RestRequest request,RestChannel channel,ThreadContext threadContext,Throwable cause){throw new AssertionError()}}@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final HttpResponseStatus expectedStatus@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9->18 [style = bold, label=""];
10->4 [style = solid, label="expectation"];
26->12 [style = solid, label="contentLength"];
22->23 [style = dotted, label="true"];
1->8 [style = dotted, label="true"];
13->4 [style = bold, label=""];
9->5 [style = dotted, label="true"];
22->16 [style = dotted, label="true"];
25->16 [style = dotted, label="true"];
6->0 [style = bold, label=""];
22->20 [style = dotted, label="true"];
5->0 [style = solid, label="expectedStatus"];
16->0 [style = solid, label="expectedStatus"];
23->4 [style = solid, label="expectation"];
25->26 [style = dotted, label="true"];
7->11 [style = bold, label=""];
25->18 [style = bold, label=""];
0->1 [style = bold, label=""];
13->6 [style = solid, label="request"];
8->3 [style = bold, label=""];
9->10 [style = dotted, label="true"];
25->27 [style = dotted, label="true"];
3->17 [style = bold, label=""];
1->3 [style = dotted, label="true"];
13->12 [style = solid, label="request"];
24->4 [style = solid, label="expectation"];
25->24 [style = dotted, label="true"];
14->8 [style = bold, label=""];
11->13 [style = bold, label=""];
4->12 [style = bold, label=""];
22->18 [style = bold, label=""];
1->19 [style = bold, label=""];
1->19 [style = dotted, label="true"];
9->16 [style = dotted, label="true"];
17->2 [style = bold, label=""];
1->14 [style = dotted, label="true"];
9->15 [style = dotted, label="true"];
19->14 [style = bold, label=""];
16->12 [style = solid, label="contentLength"];
1->2 [style = bold, label=""];
12->6 [style = bold, label=""];
21->12 [style = solid, label="contentLength"];
19->14 [style = solid, label="continuationRequest"];
22->21 [style = dotted, label="true"];
18->7 [style = bold, label=""];
}
