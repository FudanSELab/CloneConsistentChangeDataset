digraph {
11 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "c.get().header(contentDisposition(null)).run().assertBody().isEmpty()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "c.get().header(connection((Supplier<?>)null)).run().assertBody().is(\"Keep-Alive\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "c.get().header(contentDisposition((String)null)).run().assertBody().isEmpty()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "c.get().header(contentDisposition((Supplier<StringRanges>)null)).run().assertBody().isEmpty()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "c.get().header(connection((Object)null)).run().assertBody().is(\"Keep-Alive\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "c.get().header(contentDisposition(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "c.get().header(contentDisposition((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "c.get().header(connection((String)null)).run().assertBody().is(\"Keep-Alive\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "c.get().header(contentDisposition(VALUE)).run().assertBody().is(VALUE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "c.get().header(connection(null)).run().assertBody().is(\"Keep-Alive\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "c.get().header(connection(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "c.get().header(connection(VALUE)).run().assertBody().is(VALUE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "c.get().header(contentDisposition(VALUE)).run().assertBody().is(VALUE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "c.get().header(new ContentDisposition(VALUE)).run().assertBody().is(VALUE)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "RestClient c = client().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "c.get().header(contentDisposition(null)).run().assertBody().is(VALUE)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "c.get().header(contentDisposition((Object)null)).run().assertBody().isEmpty()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "c.get().header(contentDisposition((String)null)).run().assertBody().isEmpty()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "c.get().header(connection(VALUE)).run().assertBody().is(VALUE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "c.get().header(connection(null)).run().assertBody().is(VALUE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "c.get().header(contentDisposition(PARSED)).run().assertBody().is(VALUE)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "c.get().header(contentDisposition(null)).run().assertBody().is(VALUE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "c.get().header(contentDisposition(null)).run().assertBody().isEmpty()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "c.get().header(new Connection(VALUE)).run().assertBody().is(VALUE)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
4->10 [style = bold, label=""];
8->19 [style = dashed, label="0"];
5->12 [style = dashed, label="0"];
1->8 [style = bold, label=""];
5->9 [style = bold, label=""];
15->14 [style = bold, label=""];
11->1 [style = bold, label=""];
20->26 [style = bold, label=""];
4->13 [style = bold, label=""];
3->24 [style = dashed, label="0"];
12->15 [style = bold, label=""];
1->0 [style = bold, label=""];
10->13 [style = dashed, label="0"];
17->22 [style = bold, label=""];
0->17 [style = dashed, label="0"];
7->3 [style = bold, label=""];
1->17 [style = bold, label=""];
5->20 [style = dashed, label="0"];
0->7 [style = bold, label=""];
6->1 [style = bold, label=""];
18->20 [style = bold, label=""];
13->12 [style = bold, label=""];
10->5 [style = bold, label=""];
3->2 [style = bold, label=""];
24->25 [style = bold, label=""];
19->23 [style = bold, label=""];
21->1 [style = bold, label=""];
9->26 [style = dashed, label="0"];
25->19 [style = bold, label=""];
2->25 [style = dashed, label="0"];
22->24 [style = bold, label=""];
8->4 [style = bold, label=""];
4->23 [style = dashed, label="0"];
7->22 [style = dashed, label="0"];
23->18 [style = bold, label=""];
10->18 [style = dashed, label="0"];
2->8 [style = bold, label=""];
9->15 [style = dashed, label="0"];
}
