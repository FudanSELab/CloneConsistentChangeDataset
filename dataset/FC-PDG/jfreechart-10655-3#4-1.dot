digraph {
12 [style = filled, label = "table.addValue(1.0,\"R0\",\"C0\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(2.0,DataUtils.calculateColumnTotal(table,1),EPSILON)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(4.0,DataUtils.calculateColumnTotal(table,0),EPSILON)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "table.addValue(new Double(2.0),\"R0\",\"C1\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "table.addValue(3.0,\"R1\",\"C0\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(4.0,DataUtils.calculateColumnTotal(table,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1f80cc),EPSILON)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(2.0,DataUtils.calculateColumnTotal(table,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1f80be),EPSILON)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "table.addValue(4.0,\"R1\",\"C1\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testCalculateColumnTotal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(3.0,DataUtils.calculateColumnTotal(table,0,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1f8094),EPSILON)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "table.addValue(new Double(4.0),\"R1\",\"C1\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "table.addValue(new Double(3.0),\"R1\",\"C0\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCalculateColumnTotal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertEquals(0.0,DataUtils.calculateColumnTotal(table,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1f80f0),EPSILON)@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(2.0,DataUtils.calculateColumnTotal(table,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1f80e1),EPSILON)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(6.0,DataUtils.calculateColumnTotal(table,1),EPSILON)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(1.0,DataUtils.calculateColumnTotal(table,0,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1f8086),EPSILON)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DefaultKeyedValues2D table = new DefaultKeyedValues2D()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "table.addValue(new Double(1.0),\"R0\",\"C0\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(6.0,DataUtils.calculateColumnTotal(table,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1f80af),EPSILON)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "table.addValue(2.0,\"R0\",\"C1\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(4.0,DataUtils.calculateColumnTotal(table,0,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1f8077),EPSILON)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(0.0,DataUtils.calculateColumnTotal(table,0,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1f80a2),EPSILON)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "table.setValue(null,\"R1\",\"C1\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testCalculateColumnTotal2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "table.setValue(null,\"R1\",\"C1\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
16->15 [style = bold, label=""];
19->18 [style = bold, label=""];
5->12 [style = dashed, label="0"];
7->1 [style = bold, label=""];
1->21 [style = solid, label="table"];
25->23 [style = bold, label=""];
6->11 [style = dashed, label="0"];
1->19 [style = solid, label="table"];
1->15 [style = solid, label="table"];
3->6 [style = bold, label=""];
20->1 [style = bold, label=""];
15->19 [style = bold, label=""];
1->25 [style = solid, label="table"];
11->2 [style = bold, label=""];
1->16 [style = solid, label="table"];
1->22 [style = solid, label="table"];
6->2 [style = bold, label=""];
12->13 [style = bold, label=""];
17->24 [style = bold, label=""];
5->0 [style = bold, label=""];
24->21 [style = bold, label=""];
1->2 [style = solid, label="table"];
21->22 [style = bold, label=""];
6->16 [style = bold, label=""];
9->21 [style = dashed, label="0"];
1->17 [style = solid, label="table"];
2->16 [style = dashed, label="0"];
0->13 [style = dashed, label="0"];
18->25 [style = bold, label=""];
1->12 [style = bold, label=""];
1->23 [style = solid, label="table"];
1->8 [style = solid, label="table"];
23->17 [style = bold, label=""];
8->4 [style = bold, label=""];
1->18 [style = solid, label="table"];
3->14 [style = dashed, label="0"];
1->9 [style = solid, label="table"];
10->1 [style = bold, label=""];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
2->8 [style = bold, label=""];
}
