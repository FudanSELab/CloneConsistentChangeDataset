digraph {
17 [style = filled, label = "assertThat(ev.getOf(),is(CollectionDomainEvent.Of.REMOVE_FROM))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertSame(ev.getValue(),other)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "collectionAddedToDefaultEventType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "defaultEventType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final SomeDomainObject sdo = new SomeDomainObject()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final SomeReferencedObject other = new SomeReferencedObject()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Identifier identifier = Identifier.propertyOrCollectionIdentifier(,\"references\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "SomeReferencedObject other = new SomeReferencedObject()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(ev.getIdentifier(),is(identifier))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(ev.getSource(),is((Object)sdo))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "SomeDomainObject sdo = new SomeDomainObject()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final CollectionDomainEvent<Object,Object> ev = new DomainEventHelper(null).newCollectionDomainEvent(,AbstractDomainEvent.Phase.EXECUTED,identifier,sdo,CollectionDomainEvent.Of.ADD_TO,other)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(ev.getValue(),is((Object)other))@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertSame(ev.getSource(),sdo)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final CollectionDomainEvent<Object,Object> ev = new DomainEventHelper(null).newCollectionDomainEvent(,AbstractDomainEvent.Phase.EXECUTED,identifier,sdo,CollectionDomainEvent.Of.ADD_TO,other)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "final CollectionDomainEvent<Object,Object> ev = new DomainEventHelper(null).newCollectionDomainEvent(,AbstractDomainEvent.Phase.EXECUTED,identifier,sdo,CollectionDomainEvent.Of.REMOVE_FROM,other)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "collectionAddedToDefaultEventType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final Identifier identifier = Identifier.propertyOrCollectionIdentifier(,\"references\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(ev.getOf(),is(CollectionDomainEvent.Of.ADD_TO))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->7 [style = solid, label="identifier"];
16->15 [style = bold, label=""];
7->17 [style = bold, label=""];
5->9 [style = bold, label=""];
1->10 [style = solid, label="other"];
2->3 [style = bold, label=""];
6->9 [style = dashed, label="0"];
8->12 [style = solid, label="sdo"];
1->6 [style = solid, label="other"];
6->0 [style = bold, label=""];
1->18 [style = dashed, label="0"];
1->9 [style = solid, label="other"];
8->9 [style = solid, label="sdo"];
0->12 [style = dashed, label="0"];
2->10 [style = bold, label=""];
2->17 [style = dashed, label="0"];
12->7 [style = bold, label=""];
8->13 [style = dashed, label="0"];
0->7 [style = bold, label=""];
5->16 [style = dashed, label="0"];
8->1 [style = bold, label=""];
13->15 [style = solid, label="sdo"];
18->3 [style = solid, label="other"];
16->7 [style = solid, label="identifier"];
5->6 [style = bold, label=""];
5->6 [style = solid, label="identifier"];
6->15 [style = dashed, label="0"];
7->2 [style = bold, label=""];
15->0 [style = bold, label=""];
5->9 [style = solid, label="identifier"];
8->0 [style = solid, label="sdo"];
1->3 [style = solid, label="other"];
17->3 [style = bold, label=""];
4->8 [style = bold, label=""];
11->8 [style = bold, label=""];
8->6 [style = solid, label="sdo"];
13->0 [style = solid, label="sdo"];
18->15 [style = solid, label="other"];
16->15 [style = solid, label="identifier"];
9->12 [style = bold, label=""];
3->10 [style = dashed, label="0"];
14->13 [style = bold, label=""];
13->18 [style = bold, label=""];
18->16 [style = bold, label=""];
}
