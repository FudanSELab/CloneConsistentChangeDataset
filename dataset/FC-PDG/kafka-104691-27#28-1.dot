digraph {
51 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(1))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "expectedTaskProps.put(SinkTask.TOPICS_CONFIG,\"foo,bar\")@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "{}@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "connProps.put(ConnectorConfig.TASKS_MAX_CONFIG,\"2\")@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "fail(\"Should have thrown exception when trying to add connector with same name.\")@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "EasyMock.expect(plugins.newConnector(.getName())).andReturn(connector)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "expectConverters()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(2)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "props.put(SinkConnectorConfig.TOPICS_CONFIG,\"foo,bar\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertStatistics(worker,0,0)@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "EasyMock.expectLastCall()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "props.put(ConnectorConfig.NAME_CONFIG,CONNECTOR_ID)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertStatistics(worker,0,0)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "props.put(ConnectorConfig.TASKS_MAX_CONFIG,\"1\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "EasyMock.expect(connector.version()).andReturn(\"1.0\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "expectFileConfigProvider()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "Map<String,String> connProps = new HashMap<>(props)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "worker.start()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "EasyMock.expect(connector.taskClass()).andReturn()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "EasyMock.expect(connector.taskConfigs(2)).andReturn(Arrays.asList(taskProps,taskProps))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "connector.start(props)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EasyMock.expect(connector.version()).andReturn(\"1.0\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertStatistics(worker,1,0)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testAddConnectorByAlias['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testAddConnectorByAlias['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "EasyMock.expect(plugins.newConnector(\"WorkerTestConnector\")).andReturn(connector)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "worker.stopConnector(CONNECTOR_ID)@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Map<String,String> taskProps = new HashMap<>()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "PowerMock.replayAll()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(2,taskConfigs.size())@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(connector)).andReturn(delegatingLoader).times(2)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.expectLastCall()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "connector.initialize(anyObject())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore,noneConnectorClientConfigOverridePolicy)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "EasyMock.expectLastCall()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "connector.stop()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "props.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,\"WorkerTestConnector\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "EasyMock.expectLastCall()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "expectedTaskProps.put(\"foo\",\"bar\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertStatistics(worker,0,0)@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(connector)).andReturn(delegatingLoader).times(3)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "expectedTaskProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "List<Map<String,String>> taskConfigs = worker.connectorTaskConfigs(CONNECTOR_ID,connConfig)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "PowerMock.verifyAll()@@@65@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "expectStartStorage()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(3)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "worker.herder = herder@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "ConnectException e@@@44@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(CONNECTOR_ID)),worker.connectorNames())@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(0))@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Map<String,String> expectedTaskProps = new HashMap<>()@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "testReconfigureConnectorTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertStatistics(worker,1,0)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "EasyMock.expectLastCall()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "worker.stop()@@@63@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Map<String,String> props = new HashMap<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "ConnectorConfig connConfig = new SinkConnectorConfig(plugins,connProps)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(3)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "props.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,.getName())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "expectStopStorage()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "taskProps.put(\"foo\",\"bar\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41->0 [style = bold, label=""];
44->8 [style = bold, label=""];
45->65 [style = bold, label=""];
37->3 [style = solid, label="worker"];
39->24 [style = bold, label=""];
5->45 [style = bold, label=""];
26->70 [style = solid, label="props"];
38->15 [style = bold, label=""];
33->63 [style = bold, label=""];
61->10 [style = bold, label=""];
43->4 [style = bold, label=""];
5->34 [style = bold, label=""];
25->31 [style = bold, label=""];
12->40 [style = bold, label=""];
2->59 [style = bold, label=""];
70->55 [style = solid, label="connProps"];
28->63 [style = dashed, label="0"];
40->26 [style = bold, label=""];
70->57 [style = bold, label=""];
62->40 [style = bold, label=""];
27->2 [style = bold, label=""];
67->52 [style = bold, label=""];
21->13 [style = bold, label=""];
9->59 [style = dashed, label="0"];
57->55 [style = bold, label=""];
33->28 [style = bold, label=""];
68->34 [style = bold, label=""];
18->19 [style = bold, label=""];
37->29 [style = bold, label=""];
14->10 [style = bold, label=""];
37->25 [style = solid, label="worker"];
42->31 [style = bold, label=""];
2->9 [style = bold, label=""];
20->38 [style = bold, label=""];
8->46 [style = dashed, label="0"];
17->42 [style = bold, label=""];
15->35 [style = bold, label=""];
26->14 [style = solid, label="props"];
66->54 [style = bold, label=""];
26->58 [style = solid, label="props"];
19->41 [style = bold, label=""];
1->16 [style = bold, label=""];
47->2 [style = bold, label=""];
56->51 [style = solid, label="expectedTaskProps"];
65->68 [style = solid, label="taskProps"];
22->17 [style = bold, label=""];
56->48 [style = bold, label=""];
14->61 [style = bold, label=""];
26->24 [style = solid, label="props"];
52->51 [style = bold, label=""];
27->47 [style = dashed, label="0"];
37->42 [style = solid, label="worker"];
63->11 [style = bold, label=""];
32->46 [style = bold, label=""];
49->68 [style = bold, label=""];
16->27 [style = bold, label=""];
35->3 [style = bold, label=""];
55->69 [style = bold, label=""];
42->25 [style = bold, label=""];
7->4 [style = bold, label=""];
51->20 [style = bold, label=""];
36->39 [style = bold, label=""];
29->21 [style = bold, label=""];
12->62 [style = dashed, label="0"];
24->33 [style = bold, label=""];
69->56 [style = bold, label=""];
11->5 [style = bold, label=""];
32->8 [style = bold, label=""];
54->67 [style = bold, label=""];
55->69 [style = solid, label="connConfig"];
32->44 [style = bold, label=""];
37->38 [style = solid, label="worker"];
34->23 [style = bold, label=""];
37->20 [style = solid, label="worker"];
13->6 [style = bold, label=""];
37->35 [style = solid, label="worker"];
23->18 [style = bold, label=""];
8->12 [style = bold, label=""];
48->66 [style = bold, label=""];
60->4 [style = bold, label=""];
58->64 [style = bold, label=""];
9->36 [style = bold, label=""];
37->13 [style = solid, label="worker"];
10->20 [style = bold, label=""];
30->1 [style = bold, label=""];
0->37 [style = bold, label=""];
16->47 [style = bold, label=""];
28->11 [style = bold, label=""];
3->22 [style = bold, label=""];
37->61 [style = solid, label="worker"];
26->30 [style = bold, label=""];
6->14 [style = bold, label=""];
53->70 [style = bold, label=""];
59->36 [style = bold, label=""];
46->62 [style = bold, label=""];
10->58 [style = bold, label=""];
65->49 [style = bold, label=""];
56->52 [style = solid, label="expectedTaskProps"];
50->53 [style = bold, label=""];
4->32 [style = bold, label=""];
64->70 [style = bold, label=""];
}
