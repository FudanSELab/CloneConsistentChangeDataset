digraph {
1 [style = filled, label = "String renderedName = new SparkBeamMetric().renderName(metricResult)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testRenderName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "MetricResult<Object> metricResult = MetricResult.create(MetricKey.create(\"myStep.one.two(three)\",MetricName.named(\"myNameSpace//\",\"myName()\")),123,456)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testRenderName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(\"Metric name was not rendered correctly\",renderedName,equalTo(\"myStep_one_two_three.myNameSpace__.myName__\"))@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testRenderName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "String renderedName = SparkBeamMetric.renderName(metricResult)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
1->4 [style = dashed, label="0"];
4->2 [style = bold, label=""];
0->3 [style = bold, label=""];
4->2 [style = solid, label="renderedName"];
3->1 [style = solid, label="metricResult"];
1->2 [style = solid, label="renderedName"];
1->2 [style = bold, label=""];
3->4 [style = bold, label=""];
6->3 [style = bold, label=""];
3->1 [style = bold, label=""];
3->4 [style = solid, label="metricResult"];
}
