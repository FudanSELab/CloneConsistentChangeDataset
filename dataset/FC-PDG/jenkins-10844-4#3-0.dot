digraph {
9 [style = filled, label = "createMockAncestors(req,createAncestor(view,\".\"),createAncestor(j,\"../..\"))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(view.getOwnerItemGroup()).thenReturn(parent)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "mockStatic()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(parent.getShortUrl()).thenReturn(\"parent/\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TopLevelItemAndItemGroup parent = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Jenkins j = createMockJenkins()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"job/i/\",result)@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"job/i/\",result)@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "View view = mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testGetRelativeLinkTo_JobContainedInViewWithinItemGroup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "createMockAncestors(req,createAncestor(j,\"../../..\"),createAncestor(parent,\"../..\"),createAncestor(view,\".\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(parent.getItemGroup()).thenReturn(parent)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "ItemGroup parent = j@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "when(view.getItems()).thenReturn(Arrays.asList(i))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "createMockAncestors(req,createAncestor(j,\"../../..\"),createAncestor(parent,\"../..\"),createAncestor(view,\".\"))@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(view.getOwner()).thenReturn(parent)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "String contextPath = \"/jenkins\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testGetRelativeLinkTo_JobContainedInView['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "StaplerRequest req = createMockRequest(contextPath)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(Stapler.getCurrentRequest()).thenReturn(req)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testGetRelativeLinkTo_JobContainedInViewWithinItemGroup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9->22 [style = bold, label=""];
9->18 [style = dashed, label="0"];
8->9 [style = solid, label="j"];
8->12 [style = solid, label="j"];
2->22 [style = dashed, label="0"];
11->12 [style = solid, label="view"];
3->12 [style = solid, label="req"];
3->2 [style = solid, label="req"];
3->7 [style = solid, label="req"];
14->16 [style = bold, label=""];
20->10 [style = bold, label=""];
8->0 [style = bold, label=""];
0->21 [style = dashed, label="0"];
23->1 [style = bold, label=""];
23->1 [style = solid, label="contextPath"];
12->2 [style = bold, label=""];
5->1 [style = bold, label=""];
19->8 [style = bold, label=""];
10->4 [style = solid, label="i"];
14->16 [style = solid, label="result"];
21->11 [style = solid, label="parent"];
8->2 [style = solid, label="j"];
11->9 [style = bold, label=""];
11->18 [style = bold, label=""];
2->10 [style = bold, label=""];
22->20 [style = bold, label=""];
2->10 [style = solid, label="i"];
7->11 [style = bold, label=""];
21->22 [style = solid, label="parent"];
12->9 [style = dashed, label="0"];
8->21 [style = bold, label=""];
15->2 [style = bold, label=""];
3->6 [style = bold, label=""];
22->20 [style = solid, label="i"];
22->10 [style = solid, label="i"];
0->18 [style = solid, label="parent"];
4->14 [style = solid, label="result"];
1->3 [style = bold, label=""];
1->9 [style = solid, label="req"];
10->4 [style = bold, label=""];
2->4 [style = solid, label="i"];
0->10 [style = solid, label="parent"];
7->9 [style = solid, label="view"];
10->14 [style = solid, label="i"];
17->8 [style = bold, label=""];
4->14 [style = bold, label=""];
0->12 [style = solid, label="parent"];
13->8 [style = bold, label=""];
0->5 [style = bold, label=""];
6->7 [style = bold, label=""];
0->2 [style = solid, label="parent"];
21->23 [style = bold, label=""];
1->3 [style = solid, label="contextPath"];
8->21 [style = solid, label="j"];
0->15 [style = solid, label="parent"];
11->2 [style = solid, label="view"];
0->9 [style = solid, label="parent"];
1->6 [style = solid, label="req"];
9->12 [style = bold, label=""];
10->4 [style = solid, label="result"];
18->15 [style = bold, label=""];
}
