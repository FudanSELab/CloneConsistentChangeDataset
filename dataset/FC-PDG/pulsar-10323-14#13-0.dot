digraph {
3 [style = filled, label = "String inputTopicName = TEST_NAME + \"-input-topic\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(functions,times(1)).updateFunction(any(),anyString())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testUpdateFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "cmd.run(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1882a5a)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "cmd.run(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1882ab6)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "verify(functions,times(1)).updateFunction(any(),anyString(),eq(new UpdateOptions()))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(inputTopicName,updater.getInputs())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testUpdateFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "CreateFunction creater = cmd.getCreater()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertNull(creater.getFunctionConfig().getOutput())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testCreateWithoutOutputTopic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(fnName,updater.getFunctionName())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "consoleOutputCapturer.start()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String fnName = TEST_NAME + \"-function\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "UpdateFunction updater = cmd.getUpdater()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "consoleOutputCapturer.stop()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(outputTopicName,updater.getOutput())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(consoleOutputCapturer.getStdout().contains(\"Created successfully\"))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ConsoleOutputCapturer consoleOutputCapturer = new ConsoleOutputCapturer()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String inputTopicName = TEST_NAME + \"-input-topic\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->19 [style = dashed, label="0"];
1->4 [style = bold, label=""];
16->18 [style = bold, label=""];
2->1 [style = bold, label=""];
3->14 [style = bold, label=""];
0->2 [style = bold, label=""];
9->7 [style = solid, label="inputTopicName"];
14->19 [style = bold, label=""];
3->1 [style = solid, label="outputTopicName"];
9->2 [style = solid, label="inputTopicName"];
7->8 [style = bold, label=""];
10->6 [style = bold, label=""];
13->16 [style = bold, label=""];
6->0 [style = solid, label="fnName"];
6->7 [style = solid, label="fnName"];
1->11 [style = bold, label=""];
3->7 [style = solid, label="outputTopicName"];
8->0 [style = bold, label=""];
3->14 [style = solid, label="inputTopicName"];
5->6 [style = bold, label=""];
19->13 [style = bold, label=""];
3->7 [style = bold, label=""];
17->15 [style = bold, label=""];
9->3 [style = bold, label=""];
15->12 [style = bold, label=""];
12->3 [style = bold, label=""];
4->11 [style = dashed, label="0"];
6->9 [style = bold, label=""];
}
