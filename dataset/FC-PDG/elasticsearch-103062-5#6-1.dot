digraph {
3 [style = filled, label = "docMapper.parse(SourceToParse.source(\"test\",\"type\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field(\"_id\",\"1\").endObject()),XContentType.JSON))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "docMapper.parse(SourceToParse.source(\"test\",\"type\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field(\"_routing\",\"foo\").endObject()),XContentType.JSON))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type\",new CompressedXContent(mapping))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "fail(\"Expected failure to parse metadata field\")@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testIncludeInObjectNotAllowed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testIncludeInObjectNotAllowed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "docMapper.parse(new SourceToParse(\"test\",\"type\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field(\"_id\",\"1\").endObject()),XContentType.JSON))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testIncludeInObjectNotAllowed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
8->0 [style = bold, label=""];
3->8 [style = dashed, label="0"];
4->1 [style = bold, label=""];
5->4 [style = bold, label=""];
1->6 [style = bold, label=""];
6->0 [style = bold, label=""];
1->8 [style = bold, label=""];
7->4 [style = bold, label=""];
3->6 [style = dashed, label="0"];
4->1 [style = solid, label="mapping"];
2->4 [style = bold, label=""];
3->0 [style = bold, label=""];
}
