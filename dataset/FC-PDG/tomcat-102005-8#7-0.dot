digraph {
5 [style = filled, label = "Map<String,List<String>> respHeaders1 = new HashMap<String,List<String>>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "int rc = getUrl(HTTP_PREFIX + getPort() + uri,bc,reqHeaders,respHeaders)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "boolean expectedReject2@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertNull(bc.toString())@@@9@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "byte(( credentialsBytes = ByteChunk.convertToBytes(credentials)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String base64auth = Base64.encode(credentialsBytes)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ByteChunk bc = new ByteChunk()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String credentials = user + \":\" + pwd@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(expectedRC1,rc)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(200,rc)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "doTestBasic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "bc.reset()@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "Map<String,List<String>> reqHeaders = new HashMap<String,List<String>>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Map<String,List<String>> respHeaders = new HashMap<String,List<String>>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "rc = getUrl(HTTP_PREFIX + getPort() + uri,bc,reqHeaders2,respHeaders2)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "String pwd@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "String pwd@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "boolean expectedReject@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "int expectedRC@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Map<String,List<String>> respHeaders2 = new HashMap<String,List<String>>()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expectedReject2@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "bc.recycle()@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "return@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertNull(bc.toString())@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "String uri@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int expectedRC1@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertEquals(\"OK\",bc.toString())@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "expectedReject@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "String uri@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "boolean expectedReject2@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(200,rc)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "boolean expectedReject1@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "boolean expectedReject1@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "int expectedRC2@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "assertTrue(bc.getLength() > 0)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertEquals(\"OK\",bc.toString())@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int expectedRC1@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "doTestBasic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "List<String> auth = new ArrayList<String>()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String user@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(expectedRC,rc)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "String user@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Map<String,List<String>> reqHeaders2 = new HashMap<String,List<String>>()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(bc.getLength() > 0)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(expectedRC2,rc)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "auth.add(authLine)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectedReject1@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int rc = getUrl(HTTP_PREFIX + getPort() + uri,bc,reqHeaders1,respHeaders1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Map<String,List<String>> reqHeaders1 = new HashMap<String,List<String>>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "doTestNonLogin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "reqHeaders2.put(CLIENT_AUTH_HEADER,auth)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "String uri@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String authLine = \"Basic \" + base64auth@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->9 [style = dotted, label="true"];
11->27 [style = solid, label="uri"];
50->52 [style = dotted, label="true"];
32->12 [style = bold, label=""];
1->27 [style = bold, label=""];
44->51 [style = solid, label="rc"];
10->0 [style = solid, label="reqHeaders2"];
49->51 [style = bold, label=""];
15->20 [style = dotted, label="true"];
15->32 [style = dotted, label="false"];
29->23 [style = dotted, label="true"];
31->41 [style = dashed, label="0"];
29->26 [style = dotted, label="true"];
27->15 [style = bold, label=""];
46->44 [style = solid, label="uri"];
8->0 [style = bold, label=""];
15->30 [style = dotted, label="true"];
5->27 [style = solid, label="respHeaders1"];
15->25 [style = dotted, label="false"];
15->20 [style = bold, label=""];
28->27 [style = solid, label="uri"];
50->48 [style = dotted, label="true"];
50->45 [style = bold, label=""];
15->19 [style = dotted, label="false"];
44->19 [style = solid, label="rc"];
43->0 [style = bold, label=""];
0->2 [style = solid, label="rc"];
35->16 [style = solid, label="expectedReject2"];
36->15 [style = solid, label="expectedReject1"];
47->44 [style = solid, label="respHeaders"];
34->37 [style = dotted, label="true"];
16->41 [style = dotted, label="true"];
28->52 [style = dashed, label="0"];
27->20 [style = solid, label="rc"];
28->2 [style = solid, label="expectedRC2"];
2->31 [style = bold, label=""];
34->28 [style = dotted, label="true"];
1->44 [style = bold, label=""];
23->12 [style = solid, label="user"];
49->30 [style = dotted, label="true"];
51->30 [style = bold, label=""];
44->49 [style = bold, label=""];
9->15 [style = solid, label="expectedReject1"];
22->5 [style = bold, label=""];
14->43 [style = bold, label=""];
8->43 [style = dashed, label="0"];
19->25 [style = bold, label=""];
34->38 [style = dotted, label="true"];
7->4 [style = solid, label="authLine"];
49->51 [style = dotted, label="true"];
18->6 [style = solid, label="auth"];
5->1 [style = bold, label=""];
18->4 [style = bold, label=""];
16->33 [style = bold, label=""];
16->33 [style = dotted, label="false"];
39->12 [style = bold, label=""];
20->39 [style = bold, label=""];
21->7 [style = bold, label=""];
26->20 [style = solid, label="expectedRC1"];
14->8 [style = bold, label=""];
14->0 [style = solid, label="respHeaders2"];
40->2 [style = solid, label="expectedRC2"];
47->1 [style = bold, label=""];
4->10 [style = bold, label=""];
2->41 [style = bold, label=""];
16->24 [style = dotted, label="false"];
0->16 [style = bold, label=""];
29->17 [style = dotted, label="true"];
49->19 [style = dotted, label="false"];
42->12 [style = solid, label="pwd"];
22->45 [style = dashed, label="0"];
34->36 [style = dotted, label="true"];
1->44 [style = solid, label="bc"];
21->7 [style = solid, label="base64auth"];
15->19 [style = bold, label=""];
10->6 [style = bold, label=""];
12->13 [style = bold, label=""];
17->12 [style = solid, label="pwd"];
30->12 [style = bold, label=""];
50->46 [style = dotted, label="true"];
29->28 [style = dotted, label="true"];
34->35 [style = dotted, label="true"];
33->24 [style = bold, label=""];
49->19 [style = bold, label=""];
7->18 [style = bold, label=""];
27->44 [style = dashed, label="0"];
16->31 [style = dotted, label="true"];
29->3 [style = dotted, label="true"];
0->33 [style = solid, label="rc"];
34->40 [style = dotted, label="true"];
29->11 [style = dotted, label="true"];
28->0 [style = solid, label="uri"];
49->25 [style = dotted, label="false"];
16->2 [style = dotted, label="true"];
30->39 [style = dashed, label="0"];
13->21 [style = solid, label="credentialsBytes"];
15->39 [style = dotted, label="true"];
20->51 [style = dashed, label="0"];
5->47 [style = dashed, label="0"];
22->27 [style = solid, label="reqHeaders1"];
48->51 [style = solid, label="expectedRC"];
25->32 [style = bold, label=""];
16->2 [style = bold, label=""];
11->0 [style = solid, label="uri"];
45->44 [style = solid, label="reqHeaders"];
34->22 [style = bold, label=""];
6->14 [style = bold, label=""];
38->12 [style = solid, label="user"];
37->20 [style = solid, label="expectedRC1"];
34->42 [style = dotted, label="true"];
15->49 [style = dashed, label="0"];
1->0 [style = solid, label="bc"];
12->13 [style = solid, label="credentials"];
45->47 [style = bold, label=""];
52->49 [style = solid, label="expectedReject"];
29->22 [style = bold, label=""];
27->19 [style = solid, label="rc"];
1->27 [style = solid, label="bc"];
20->30 [style = bold, label=""];
13->21 [style = bold, label=""];
3->16 [style = solid, label="expectedReject2"];
}
