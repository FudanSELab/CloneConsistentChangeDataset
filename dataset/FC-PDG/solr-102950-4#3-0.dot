digraph {
43 [style = filled, label = "testAdd['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertQ(req(\"q\",\"cat:bbb\",\"indent\",\"true\"),\"//result(@numFound = '1'(\")@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertU(adoc(doc))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "doc.setField(\"cat\",ImmutableMap.of(\"add-distinct\",Arrays.asList(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@fddcb2)))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "doc.setField(\"cat\",new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@fdde56)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "doc.setField(\"atomic_is\",ImmutableMap.of(\"add-distinct\",10))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertQ(req(\"q\",\"cat:*\",\"indent\",\"true\"),\"//result(@numFound = '2'(\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "doc.setField(\"atomic_is\",ImmutableMap.of(\"add-distinct\",Arrays.asList(10,34)))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertQ(req(\"q\",\"cat:bbb\",\"indent\",\"true\"),\"//doc/arr(@name='cat'((count(str)=3(\",\"//doc/arr(@name='atomic_is'((count(int)=2(\")@@@36@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "doc = new SolrInputDocument()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertQ(req(\"q\",\"cat:bbb\",\"indent\",\"true\"),\"//result(@numFound = '2'(\")@@@42@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertU(adoc(doc))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertQ(req(\"q\",\"cat:*\",\"indent\",\"true\"),\"//result(@numFound = '3'(\")@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "doc = new SolrInputDocument()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "doc.setField(\"id\",\"5\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "doc.setField(\"id\",\"3\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertQ(req(\"q\",\"cat:bbb\",\"indent\",\"true\"),\"//doc/arr(@name='cat'((count(str)=3(\")@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "doc.setField(\"id\",\"3\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "doc = new SolrInputDocument()@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertU(commit())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "doc.setField(\"id\",\"3\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "doc.setField(\"cat\",new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@fdde72)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testAddDistinct['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "doc = new SolrInputDocument()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "doc.setField(\"cat\",ImmutableMap.of(\"add-distinct\",\"bbb\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertQ(req(\"q\",\"cat:bbb\",\"indent\",\"true\"),\"//doc/arr(@name='cat'((count(str)=3(\",\"//doc/arr(@name='atomic_is'((count(int)=1(\")@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "doc.setField(\"cat\",ImmutableMap.of(\"add-distinct\",Arrays.asList(\"bbb\",\"bbb\")))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertU(adoc(doc))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertU(adoc(doc))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertQ(req(\"q\",\"cat:*\",\"indent\",\"true\"),\"//result(@numFound = '2'(\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertU(commit())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertQ(req(\"q\",\"cat:bbb\",\"indent\",\"true\"),\"//result(@numFound = '0'(\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertQ(req(\"q\",\"cat:bbb\",\"indent\",\"true\"),\"//result(@numFound = '1'(\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertU(adoc(doc))@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertU(commit())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "doc.setField(\"id\",\"4\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "doc.setField(\"cat\",ImmutableMap.of(\"add\",\"bbb\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "doc.setField(\"atomic_is\",10)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "doc.setField(\"cat\",ImmutableMap.of(\"add-distinct\",\"bbb\"))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertQ(req(\"q\",\"cat:bbb\",\"indent\",\"true\"),\"//doc/arr(@name='cat'((count(str)=3(\")@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "SolrInputDocument doc = new SolrInputDocument()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertU(commit())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testAddDistinct['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertQ(req(\"q\",\"cat:*\",\"indent\",\"true\"),\"//result(@numFound = '2'(\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertQ(req(\"q\",\"cat:bbb\",\"indent\",\"true\"),\"//result(@numFound = '2'(\")@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40->2 [style = bold, label=""];
8->34 [style = bold, label=""];
7->17 [style = bold, label=""];
37->24 [style = bold, label=""];
16->37 [style = dashed, label="0"];
2->29 [style = solid, label="doc"];
16->24 [style = bold, label=""];
17->41 [style = bold, label=""];
41->29 [style = bold, label=""];
42->39 [style = bold, label=""];
24->35 [style = solid, label="doc"];
5->26 [style = bold, label=""];
3->44 [style = dashed, label="0"];
43->2 [style = bold, label=""];
20->3 [style = bold, label=""];
15->18 [style = solid, label="doc"];
3->38 [style = bold, label=""];
11->9 [style = bold, label=""];
22->23 [style = bold, label=""];
13->16 [style = bold, label=""];
26->13 [style = bold, label=""];
19->25 [style = bold, label=""];
28->14 [style = bold, label=""];
14->1 [style = bold, label=""];
4->0 [style = bold, label=""];
20->44 [style = bold, label=""];
3->18 [style = bold, label=""];
29->28 [style = bold, label=""];
9->27 [style = bold, label=""];
28->6 [style = solid, label="doc"];
13->37 [style = bold, label=""];
30->11 [style = bold, label=""];
31->42 [style = bold, label=""];
38->18 [style = bold, label=""];
1->6 [style = bold, label=""];
30->42 [style = dashed, label="0"];
21->36 [style = bold, label=""];
36->23 [style = bold, label=""];
24->31 [style = bold, label=""];
21->22 [style = bold, label=""];
15->20 [style = bold, label=""];
18->5 [style = bold, label=""];
39->35 [style = bold, label=""];
31->30 [style = bold, label=""];
0->8 [style = bold, label=""];
22->21 [style = dashed, label="0"];
23->10 [style = bold, label=""];
25->15 [style = bold, label=""];
10->4 [style = bold, label=""];
24->11 [style = solid, label="doc"];
34->32 [style = bold, label=""];
44->18 [style = bold, label=""];
2->7 [style = bold, label=""];
36->4 [style = solid, label="doc"];
12->19 [style = bold, label=""];
17->29 [style = bold, label=""];
27->21 [style = bold, label=""];
33->2 [style = bold, label=""];
23->0 [style = solid, label="doc"];
35->11 [style = bold, label=""];
6->12 [style = bold, label=""];
}
