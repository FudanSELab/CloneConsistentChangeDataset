digraph {
5 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "count = 0@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Git git = new Git(repository)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "status = new Git(repository).status().call()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Repository repository = getTestRepository()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(count,2)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "repository.close()@@@57@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Exchange ex1 = added.getExchanges().get(0)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "git.commit().setMessage(commitMessage).call()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "logs = new Git(repository).log().call()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Thread.sleep(1 * 5000)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(commitMessage,ex2.getOut().getBody().getShortMessage())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertTrue(status.getAdded().contains(filenameBranchToAdd))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameBranchToAdd)}})@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "template.requestBodyAndHeader(\"direct:commit\",\"\",GitConstants.GIT_COMMIT_MESSAGE,commitMessage)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getOut().getBody().getShortMessage())@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "int count = 0@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "git.add().addFilepattern(filenameToAdd).call()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Git git = getGitTestRepository()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "commitConsumerTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Status status = new Git(repository).status().call()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Status status = git.status().call()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "git.close()@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "count++@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "count++@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "Iterable<RevCommit> logs = new Git(repository).log().call()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessage)}})@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "count++@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "fileToAdd.createNewFile()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "fileToAdd.createNewFile()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,\"Test test Commit\")}})@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "MockEndpoint added = getMockEndpoint(\"mock:result-commit\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(count,1)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(count,2)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int count = 0@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Exchange ex2 = added.getExchanges().get(1)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "commitTestEmpty['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "fileToAdd1.createNewFile()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Iterable<RevCommit> logs = git.log().call()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "commitTestEmpty['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->28 [style = bold, label=""];
18->19 [style = solid, label="count"];
36->40 [style = bold, label=""];
35->29 [style = bold, label=""];
24->42 [style = bold, label=""];
34->38 [style = solid, label="count"];
25->33 [style = bold, label=""];
19->12 [style = bold, label=""];
11->16 [style = dashed, label="0"];
2->6 [style = bold, label=""];
43->34 [style = solid, label="count"];
11->4 [style = bold, label=""];
30->26 [style = bold, label=""];
10->17 [style = bold, label=""];
21->24 [style = bold, label=""];
29->23 [style = bold, label=""];
20->1 [style = bold, label=""];
42->36 [style = bold, label=""];
15->16 [style = bold, label=""];
39->11 [style = bold, label=""];
1->7 [style = bold, label=""];
35->23 [style = solid, label="count"];
28->32 [style = bold, label=""];
23->21 [style = solid, label="count"];
23->29 [style = bold, label=""];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
13->19 [style = bold, label=""];
27->46 [style = bold, label=""];
11->0 [style = solid, label="repository"];
19->12 [style = solid, label="count"];
19->13 [style = bold, label=""];
38->49 [style = bold, label=""];
5->0 [style = bold, label=""];
23->21 [style = bold, label=""];
22->27 [style = bold, label=""];
48->43 [style = bold, label=""];
49->31 [style = bold, label=""];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
12->14 [style = bold, label=""];
18->13 [style = bold, label=""];
31->41 [style = bold, label=""];
9->3 [style = bold, label=""];
47->44 [style = bold, label=""];
44->25 [style = bold, label=""];
33->45 [style = bold, label=""];
40->30 [style = bold, label=""];
41->22 [style = bold, label=""];
34->38 [style = bold, label=""];
6->9 [style = bold, label=""];
16->4 [style = bold, label=""];
26->48 [style = bold, label=""];
8->11 [style = bold, label=""];
45->35 [style = bold, label=""];
4->5 [style = bold, label=""];
32->20 [style = bold, label=""];
43->34 [style = bold, label=""];
17->18 [style = bold, label=""];
1->37 [style = bold, label=""];
37->47 [style = bold, label=""];
}
