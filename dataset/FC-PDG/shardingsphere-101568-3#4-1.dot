digraph {
13 [style = filled, label = "return new SubquerySegment(startIndex,stopIndex,(OracleSelectStatement)visit(ctx.subquery()))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "return visit(ctx.columnName())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int startIndex = ctx.getStart().getStartIndex()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "return visit(ctx.parameterMarker())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final SimpleExprContext ctx@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return new ParameterMarkerExpressionSegment(startIndex,stopIndex,((ParameterMarkerValue)visit(ctx.parameterMarker())).getValue())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "null != ctx.literals()@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return new SubquerySegment(ctx.getStart().getStartIndex(),ctx.getStop().getStopIndex(),(SQL92SelectStatement)visit(ctx.subquery()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return new SubquerySegment(ctx.getStart().getStartIndex(),ctx.getStop().getStopIndex(),(OracleSelectStatement)visit(ctx.subquery()))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "return new CommonExpressionSegment(ctx.getStart().getStartIndex(),ctx.getStop().getStopIndex(),ctx.getText())@@@18@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "null != ctx.subquery()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "visitSimpleExpr['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "visitSimpleExpr['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return visit(ctx.functionCall())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "null != ctx.columnName()@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "null != ctx.parameterMarker()@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int stopIndex = ctx.getStop().getStopIndex()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "return SQLUtil.createLiteralExpression(visit(ctx.literals()),startIndex,stopIndex,ctx.literals().start.getInputStream().getText(new Interval(startIndex,stopIndex)))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "null != ctx.functionCall()@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return new CommonExpressionSegment(startIndex,stopIndex,ctx.getText())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "visitSimpleExpr['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return visit(ctx.literals())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
8->10 [style = bold, label=""];
5->8 [style = bold, label=""];
0->9 [style = bold, label=""];
10->21 [style = dashed, label="0"];
19->18 [style = solid, label="startIndex"];
7->18 [style = dashed, label="0"];
19->16 [style = solid, label="startIndex"];
8->21 [style = dotted, label="true"];
11->1 [style = bold, label=""];
1->15 [style = bold, label=""];
9->4 [style = bold, label=""];
11->6 [style = bold, label=""];
1->3 [style = bold, label=""];
4->18 [style = bold, label=""];
1->0 [style = bold, label=""];
10->13 [style = dashed, label="0"];
8->10 [style = dotted, label="true"];
14->18 [style = solid, label="stopIndex"];
19->15 [style = solid, label="startIndex"];
13->11 [style = bold, label=""];
17->19 [style = bold, label=""];
12->7 [style = bold, label=""];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
1->3 [style = dotted, label="true"];
6->1 [style = bold, label=""];
14->16 [style = solid, label="stopIndex"];
20->8 [style = bold, label=""];
6->16 [style = dashed, label="0"];
19->14 [style = bold, label=""];
16->1 [style = bold, label=""];
21->11 [style = bold, label=""];
0->4 [style = bold, label=""];
11->6 [style = dotted, label="true"];
1->15 [style = dotted, label="true"];
15->0 [style = bold, label=""];
14->15 [style = solid, label="stopIndex"];
12->18 [style = bold, label=""];
11->16 [style = dotted, label="true"];
4->12 [style = bold, label=""];
20->2 [style = dotted, label="true"];
8->21 [style = bold, label=""];
3->15 [style = dashed, label="0"];
17->2 [style = dotted, label="true"];
8->13 [style = dotted, label="true"];
14->8 [style = bold, label=""];
4->12 [style = dotted, label="true"];
8->11 [style = bold, label=""];
0->9 [style = dotted, label="true"];
14->13 [style = solid, label="stopIndex"];
8->13 [style = bold, label=""];
5->2 [style = dotted, label="true"];
10->11 [style = bold, label=""];
19->13 [style = solid, label="startIndex"];
}
