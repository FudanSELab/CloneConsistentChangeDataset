digraph {
13 [style = filled, label = "testSuccessfulCompactionBasedOnNumAndTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertEquals(5,metaClient.getActiveTimeline().getCommitsAndCompactionTimeline().countInstants())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(3,metaClient.getActiveTimeline().getWriteTimeline().countInstants())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "metaClient = HoodieTableMetaClient.builder().setConf(hadoopConf).setBasePath(cfg.getBasePath()).build()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "metaClient = HoodieTableMetaClient.builder().setConf(hadoopConf).setBasePath(cfg.getBasePath()).build()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "HoodieWriteConfig cfg = getConfigForInlineCompaction(5,10,CompactionTriggerStrategy.TIME_ELAPSED)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testSuccessfulCompactionBasedOnTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "metaClient = HoodieTableMetaClient.builder().setConf(hadoopConf).setBasePath(cfg.getBasePath()).build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(5,metaClient.getActiveTimeline().getWriteTimeline().countInstants())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "HoodieReadClient readClient = getHoodieReadClient(cfg.getBasePath())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "createNextDeltaCommit(finalInstant,dataGen.generateUpdates(finalInstant,100),writeClient,metaClient,cfg,false)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<HoodieRecord> records = dataGen.generateInserts(HoodieActiveTimeline.createNewInstantTime(),10)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "HoodieWriteConfig cfg = getConfigForInlineCompaction(3,20,CompactionTriggerStrategy.NUM_AND_TIME)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(3,metaClient.getActiveTimeline().getCommitsAndCompactionTimeline().countInstants())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testSuccessfulCompactionBasedOnNumAndTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HoodieTableMetaClient metaClient = HoodieTableMetaClient.builder().setConf(hadoopConf).setBasePath(cfg.getBasePath()).build()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String instantTime = HoodieActiveTimeline.createNewInstantTime()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "HoodieTableMetaClient metaClient = HoodieTableMetaClient.builder().setConf(hadoopConf).setBasePath(cfg.getBasePath()).build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "createNextDeltaCommit(finalInstant,dataGen.generateUpdates(finalInstant,10),writeClient,metaClient,cfg,false)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<HoodieRecord> records = dataGen.generateInserts(instantTime,10)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "HoodieReadClient readClient = getHoodieReadClient(cfg.getBasePath())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "runNextDeltaCommits(writeClient,readClient,Arrays.asList(instantTime),records,cfg,true,new ArrayList<>())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(HoodieTimeline.COMMIT_ACTION,metaClient.getActiveTimeline().lastInstant().get().getAction())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "runNextDeltaCommits(writeClient,readClient,instants,records,cfg,true,new ArrayList<>())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String finalInstant = HoodieActiveTimeline.createNewInstantTime(10000)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
13->10 [style = bold, label=""];
8->10 [style = bold, label=""];
10->7 [style = solid, label="cfg"];
20->19 [style = solid, label="finalInstant"];
17->22 [style = solid, label="instantTime"];
4->7 [style = solid, label="readClient"];
1->15 [style = bold, label=""];
22->18 [style = solid, label="records"];
2->7 [style = solid, label="records"];
11->7 [style = solid, label="instants"];
6->19 [style = solid, label="metaClient"];
6->19 [style = bold, label=""];
16->17 [style = bold, label=""];
20->6 [style = bold, label=""];
6->14 [style = dashed, label="0"];
17->22 [style = bold, label=""];
2->17 [style = dashed, label="0"];
2->4 [style = bold, label=""];
11->18 [style = solid, label="readClient"];
11->18 [style = bold, label=""];
3->0 [style = bold, label=""];
9->6 [style = bold, label=""];
7->9 [style = bold, label=""];
24->16 [style = bold, label=""];
6->5 [style = bold, label=""];
18->20 [style = bold, label=""];
3->23 [style = bold, label=""];
16->18 [style = solid, label="cfg"];
5->0 [style = solid, label="metaClient"];
17->18 [style = solid, label="instantTime"];
23->21 [style = bold, label=""];
0->1 [style = bold, label=""];
9->14 [style = bold, label=""];
1->12 [style = bold, label=""];
12->15 [style = dashed, label="0"];
10->0 [style = solid, label="cfg"];
10->2 [style = bold, label=""];
16->19 [style = solid, label="cfg"];
10->16 [style = dashed, label="0"];
4->11 [style = bold, label=""];
3->0 [style = solid, label="finalInstant"];
19->3 [style = bold, label=""];
22->11 [style = bold, label=""];
11->7 [style = bold, label=""];
14->5 [style = bold, label=""];
}
