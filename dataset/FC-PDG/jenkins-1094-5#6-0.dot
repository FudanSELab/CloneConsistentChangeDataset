digraph {
6 [style = filled, label = "assertTrue(downstreamProjects.contains(downstream))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents,singleFiles)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<AbstractProject> upstreamProjects2 = downstream2.getUpstreamProjects()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "multipleDownstreamDependencies['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Jenkins.getInstance().rebuildDependencyGraph()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "multipleDownstreamDependencies['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(doubleContents,doubleFiles)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(0,downstreamProjects.size())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(upstreamProjects.contains(upstream))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "upstreamBuild.delete()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents,singleFiles)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(1,upstreamProjects.size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "FreeStyleProject downstream2 = createFreeStyleProjectWithFingerprints(singleContents2,singleFiles2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "j.jenkins.rebuildDependencyGraph()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertTrue(downstreamProjects.contains(downstream2))@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(0,upstreamProjects.size())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(1,upstreamProjects2.size())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(2,downstreamProjects.size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "j.assertBuildStatusSuccess(downstream2.scheduleBuild2(0).get())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "FreeStyleBuild upstreamBuild = j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "dependencyExclusion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(upstreamProjects2.contains(upstream))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->18 [style = bold, label=""];
26->22 [style = bold, label=""];
5->14 [style = bold, label=""];
13->7 [style = bold, label=""];
11->12 [style = bold, label=""];
10->24 [style = bold, label=""];
13->14 [style = solid, label="upstream"];
4->16 [style = bold, label=""];
24->20 [style = bold, label=""];
4->25 [style = bold, label=""];
10->9 [style = bold, label=""];
25->19 [style = bold, label=""];
20->4 [style = bold, label=""];
15->4 [style = bold, label=""];
11->25 [style = dashed, label="0"];
9->15 [style = bold, label=""];
7->26 [style = bold, label=""];
0->8 [style = bold, label=""];
1->6 [style = bold, label=""];
3->13 [style = bold, label=""];
6->2 [style = bold, label=""];
14->1 [style = bold, label=""];
13->23 [style = dashed, label="0"];
12->5 [style = bold, label=""];
16->4 [style = dashed, label="0"];
0->2 [style = solid, label="downstream2"];
12->19 [style = dashed, label="0"];
17->13 [style = bold, label=""];
7->0 [style = bold, label=""];
13->1 [style = solid, label="upstream"];
23->7 [style = bold, label=""];
7->6 [style = solid, label="downstream"];
21->23 [style = bold, label=""];
16->11 [style = bold, label=""];
22->10 [style = bold, label=""];
8->10 [style = bold, label=""];
18->15 [style = bold, label=""];
}
