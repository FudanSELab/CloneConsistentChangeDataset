digraph {
12 [style = filled, label = "logger.info(\"- restarting data node, which should cause primary shards to be failed\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "logger.info(\"- wait for shard snapshots to show as failed\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "IndexRequestBuilder(( builders = new IndexRequestBuilder((((@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "internalCluster().restartNode(dataNodes.get(0),InternalTestCluster.EMPTY_CALLBACK)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "disruption.startDisrupting()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertAcked(client().admin().cluster().preparePutRepository(\"test-repo\").setType(\"mock\").setSettings(Settings.builder().put(\"location\",repoPath).put(\"compress\",randomBoolean()).put(\"chunk_size\",randomIntBetween(100,1000),ByteSizeUnit.BYTES)))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertAcked(prepareCreate(\"test-idx\",0,Settings.builder().put(\"number_of_shards\",2).put(\"number_of_replicas\",0)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "i < builders.length@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testDataNodeRestartWithBusyMasterDuringSnapshot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "logger.info(\"- snapshot\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testDataNodeRestartWithBusyMasterDuringSnapshot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertBusy(null,60L,TimeUnit.SECONDS)@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "client(internalCluster().getMasterName()).admin().cluster().prepareCreateSnapshot(\"test-repo\",\"test-snap\").setWaitForCompletion(false).setIndices(\"test-idx\").get()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "maybeInitWithOldSnapshotVersion(\"test-repo\",repoPath)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "testDataNodeRestartAfterShardSnapshotFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "flushAndRefresh()@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final Path repoPath = randomRepoPath()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "disruption.stopDisrupting()@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "internalCluster().restartNode(dataNodes.get(1),InternalTestCluster.EMPTY_CALLBACK)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "logger.info(\"- indexing some data\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int i = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "client(internalCluster().getMasterName()).admin().cluster().prepareCreateSnapshot(\"test-repo\",\"test-snap\").setWaitForCompletion(false).setIndices(\"test-idx\").get()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertAcked(prepareCreate(\"test-idx\",0,Settings.builder().put(\"number_of_shards\",5).put(\"number_of_replicas\",0)))@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "logger.info(\"- snapshot\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "internalCluster().startDataOnlyNodes(2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "builders(i( = client().prepareIndex(\"test-idx\").setId(Integer.toString(i)).setSource(\"field1\",\"bar \" + i)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final String dataNode = blockNodeWithIndex(\"test-repo\",\"test-idx\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertAcked(client().admin().cluster().preparePutRepository(\"test-repo\").setType(\"mock\").setSettings(Settings.builder().put(\"location\",randomRepoPath()).put(\"compress\",randomBoolean()).put(\"chunk_size\",randomIntBetween(100,1000),ByteSizeUnit.BYTES)))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertBusy(null,60L,TimeUnit.SECONDS)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "logger.info(\"- restarting second data node, which should cause the primary shard on it to be failed\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "logger.info(\"- wait for shard snapshot of first primary to show as failed\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "logger.info(\"- creating repository\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "logger.info(\"- starting a master node and two data nodes\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final int numdocs = randomIntBetween(50,100)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i++@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "internalCluster().restartNode(dataNode,InternalTestCluster.EMPTY_CALLBACK)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "blockAllDataNodes(\"test-repo\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ensureGreen()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertBusy(null,60L,TimeUnit.SECONDS)@@@34@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "logger.info(\"- restarting first data node, which should cause the primary shard on it to be failed\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "unblockNode(\"test-repo\",dataNode)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "indexRandom(true,builders)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "indexRandom(true,builders)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "setDisruptionScheme(disruption)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertBusy(null,60L,TimeUnit.SECONDS)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "final List<String> dataNodes = internalCluster().startDataOnlyNodes(2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "internalCluster().startMasterOnlyNode()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->4 [style = solid, label="i"];
17->25 [style = bold, label=""];
3->24 [style = bold, label=""];
11->14 [style = bold, label=""];
2->6 [style = bold, label=""];
13->21 [style = solid, label="dataNode"];
1->20 [style = bold, label=""];
23->26 [style = solid, label="dataNode"];
25->43 [style = bold, label=""];
38->41 [style = bold, label=""];
36->33 [style = bold, label=""];
21->2 [style = bold, label=""];
30->11 [style = bold, label=""];
37->38 [style = bold, label=""];
27->45 [style = bold, label=""];
0->8 [style = bold, label=""];
32->28 [style = solid, label="i"];
23->17 [style = bold, label=""];
27->19 [style = bold, label=""];
24->27 [style = bold, label=""];
45->10 [style = bold, label=""];
10->11 [style = bold, label=""];
35->18 [style = bold, label=""];
22->32 [style = bold, label=""];
34->31 [style = bold, label=""];
29->23 [style = bold, label=""];
19->45 [style = dashed, label="0"];
22->13 [style = solid, label="builders"];
23->17 [style = solid, label="disruption"];
15->22 [style = solid, label="builders"];
33->30 [style = bold, label=""];
7->42 [style = bold, label=""];
14->15 [style = bold, label=""];
18->7 [style = bold, label=""];
25->0 [style = bold, label=""];
1->20 [style = solid, label="i"];
4->20 [style = solid, label="i"];
20->13 [style = solid, label="builders"];
16->13 [style = bold, label=""];
6->34 [style = bold, label=""];
47->18 [style = bold, label=""];
22->16 [style = bold, label=""];
22->32 [style = solid, label="i"];
13->9 [style = solid, label="dataNode"];
19->10 [style = bold, label=""];
5->18 [style = bold, label=""];
42->24 [style = bold, label=""];
46->29 [style = bold, label=""];
26->21 [style = bold, label=""];
28->32 [style = dotted, label="true"];
41->40 [style = bold, label=""];
20->4 [style = dotted, label="true"];
4->20 [style = bold, label=""];
28->22 [style = dotted, label="true"];
36->30 [style = solid, label="repoPath"];
9->12 [style = bold, label=""];
1->28 [style = solid, label="i"];
28->22 [style = bold, label=""];
40->44 [style = bold, label=""];
16->46 [style = bold, label=""];
15->1 [style = bold, label=""];
4->22 [style = solid, label="i"];
21->44 [style = dashed, label="0"];
20->28 [style = bold, label=""];
29->25 [style = bold, label=""];
28->13 [style = bold, label=""];
12->26 [style = bold, label=""];
43->37 [style = bold, label=""];
44->39 [style = bold, label=""];
4->28 [style = solid, label="i"];
7->3 [style = bold, label=""];
4->28 [style = bold, label=""];
20->4 [style = bold, label=""];
20->22 [style = bold, label=""];
25->0 [style = solid, label="disruption"];
24->36 [style = bold, label=""];
13->29 [style = bold, label=""];
28->22 [style = solid, label="builders"];
20->28 [style = dotted, label="true"];
32->22 [style = solid, label="i"];
8->9 [style = bold, label=""];
23->6 [style = solid, label="dataNode"];
32->28 [style = bold, label=""];
3->42 [style = dashed, label="0"];
28->4 [style = bold, label=""];
}
