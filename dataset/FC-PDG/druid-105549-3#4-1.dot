digraph {
18 [style = filled, label = "!atomicUpdateGroup.isFull()@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "findLatestNonFullyAvailableAtomicUpdateGroups['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "visibles.add(atomicUpdateGroup)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return Collections.emptyList()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "!rangeOfAug.equals(foundRange)@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final OvershadowableManager<T> manager = new OvershadowableManager<>(overshadowedGroups)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "!manager.standbyGroups.isEmpty()@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final OvershadowableManager<T> manager = new OvershadowableManager<>(groups)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return visibles@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "overshadowedGroups.isEmpty()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final List<AtomicUpdateGroup<T>> visibles = new ArrayList<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "groups.isEmpty()@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<AtomicUpdateGroup<T>> groups@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "throw new ISE(\"This method should be called only when there is no fully available group in the given state.\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final RootPartitionRange foundRange = RootPartitionRange.of(visibles.get(0).getStartRootPartitionId(),visibles.get(visibles.size() - 1).getEndRootPartitionId())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return Collections.emptyList()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "findLatestFullyAvailableOvershadowedAtomicUpdateGroups['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "findLatestNonFullyAvailableAtomicUpdateGroups['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "return Collections.emptyList()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return Collections.emptyList()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "short minorVersion@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final List<AtomicUpdateGroup<T>> overshadowedGroups = findOvershadowedBy(rangeOfAug,minorVersion,State.OVERSHADOWED)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "RootPartitionRange rangeOfAug@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return visibles@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final List<AtomicUpdateGroup<T>> visibles = new ArrayList<>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
14->16 [style = bold, label=""];
6->3 [style = bold, label=""];
7->2 [style = solid, label="visibles"];
9->0 [style = dotted, label="true"];
7->1 [style = bold, label=""];
16->11 [style = bold, label=""];
12->21 [style = bold, label=""];
13->20 [style = dotted, label="true"];
18->1 [style = dotted, label="true"];
23->15 [style = bold, label=""];
18->12 [style = bold, label=""];
4->8 [style = dotted, label="true"];
6->17 [style = dashed, label="0"];
15->19 [style = bold, label=""];
17->19 [style = solid, label="overshadowedGroups"];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
17->23 [style = bold, label=""];
24->18 [style = bold, label=""];
4->7 [style = bold, label=""];
0->22 [style = dashed, label="0"];
8->7 [style = bold, label=""];
9->6 [style = bold, label=""];
22->17 [style = solid, label="rangeOfAug"];
19->24 [style = bold, label=""];
3->19 [style = dashed, label="0"];
14->16 [style = dotted, label="true"];
0->3 [style = solid, label="groups"];
6->5 [style = bold, label=""];
13->17 [style = bold, label=""];
13->22 [style = dotted, label="true"];
18->1 [style = bold, label=""];
23->19 [style = bold, label=""];
20->17 [style = solid, label="minorVersion"];
12->18 [style = bold, label=""];
1->12 [style = bold, label=""];
10->0 [style = dotted, label="true"];
4->8 [style = bold, label=""];
23->15 [style = dotted, label="true"];
1->2 [style = bold, label=""];
14->11 [style = bold, label=""];
24->11 [style = solid, label="visibles"];
6->5 [style = dotted, label="true"];
21->14 [style = bold, label=""];
}
