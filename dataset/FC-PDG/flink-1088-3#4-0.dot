digraph {
10 [style = filled, label = "nameSpaceBytes = namespaceOutputView.getCopyOfBuffer()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String state@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Stream<Tuple2<K,N>> targetStream = StreamSupport.stream(Spliterators.spliteratorUnknownSize(iteratorWrapper,Spliterator.ORDERED),false)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "RocksDBKeySerializationUtils.writeNameSpace(namespace,namespaceSerializer,namespaceOutputView,ambiguousKeyPossible)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "IOException ex@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final TypeSerializer<N> namespaceSerializer = registeredKeyValueStateBackendMetaInfo.getNamespaceSerializer()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "getKeys['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final RocksStateKeysIterator<K> iteratorWrapper = new RocksStateKeysIterator<>(iterator,state,getKeySerializer(),keyGroupPrefixBytes,ambiguousKeyPossible,nameSpaceBytes)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "CompositeKeySerializationUtils.writeNameSpace(namespace,namespaceSerializer,namespaceOutputView,ambiguousKeyPossible)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "getKeys['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final DataOutputSerializer namespaceOutputView = new DataOutputSerializer(8)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "RocksIteratorWrapper iterator = RocksDBOperationUtils.getRocksIterator(db,columnInfo.columnFamilyHandle,readOptions)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "iterator.seekToFirst()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "N namespace@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "boolean ambiguousKeyPossible = RocksDBKeySerializationUtils.isAmbiguousKeyPossible(getKeySerializer(),namespaceSerializer)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "throw new FlinkRuntimeException(\"Failed to get keys from RocksDB state backend.\",ex)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return targetStream.onClose(null)@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final byte(( nameSpaceBytes@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String state@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "RocksDbKvStateInfo columnInfo = kvStateInformation.get(state)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final RocksStateKeysAndNamespaceIterator<K,N> iteratorWrapper = new RocksStateKeysAndNamespaceIterator<>(iterator,state,getKeySerializer(),namespaceSerializer,keyGroupPrefixBytes,ambiguousKeyPossible)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "columnInfo == null || !(columnInfo.metaInfo instanceof RegisteredKeyValueStateBackendMetaInfo)@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "boolean ambiguousKeyPossible = CompositeKeySerializationUtils.isAmbiguousKeyPossible(getKeySerializer(),namespaceSerializer)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "String state@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "RegisteredKeyValueStateBackendMetaInfo<N,?> registeredKeyValueStateBackendMetaInfo = (RegisteredKeyValueStateBackendMetaInfo<N,?>)columnInfo.metaInfo@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return Stream.empty()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "getKeysAndNamespaces['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Stream<K> targetStream = StreamSupport.stream(Spliterators.spliteratorUnknownSize(iteratorWrapper,Spliterator.ORDERED),false)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->20 [style = dashed, label="0"];
8->22 [style = solid, label="namespace"];
17->22 [style = solid, label="namespaceSerializer"];
16->9 [style = bold, label=""];
24->12 [style = bold, label=""];
15->13 [style = solid, label="iterator"];
10->15 [style = bold, label=""];
27->25 [style = dotted, label="true"];
4->13 [style = solid, label="state"];
23->8 [style = dotted, label="true"];
17->9 [style = solid, label="namespaceSerializer"];
17->9 [style = bold, label=""];
23->21 [style = dotted, label="true"];
3->26 [style = bold, label=""];
10->13 [style = solid, label="nameSpaceBytes"];
16->6 [style = solid, label="namespaceOutputView"];
9->13 [style = solid, label="ambiguousKeyPossible"];
17->26 [style = solid, label="namespaceSerializer"];
14->17 [style = bold, label=""];
5->0 [style = dotted, label="true"];
11->4 [style = dotted, label="true"];
20->13 [style = solid, label="ambiguousKeyPossible"];
5->14 [style = bold, label=""];
4->19 [style = solid, label="state"];
11->19 [style = bold, label=""];
15->3 [style = bold, label=""];
26->24 [style = bold, label=""];
1->7 [style = bold, label=""];
21->19 [style = solid, label="state"];
13->26 [style = dashed, label="0"];
6->22 [style = dashed, label="0"];
13->2 [style = solid, label="iteratorWrapper"];
2->12 [style = bold, label=""];
15->26 [style = solid, label="iterator"];
1->7 [style = dotted, label="true"];
20->18 [style = bold, label=""];
16->22 [style = solid, label="namespaceOutputView"];
19->5 [style = bold, label=""];
0->14 [style = bold, label=""];
25->26 [style = solid, label="state"];
18->22 [style = bold, label=""];
17->20 [style = solid, label="namespaceSerializer"];
9->18 [style = bold, label=""];
5->0 [style = bold, label=""];
18->6 [style = bold, label=""];
9->15 [style = bold, label=""];
9->6 [style = solid, label="ambiguousKeyPossible"];
25->19 [style = solid, label="state"];
6->10 [style = bold, label=""];
23->19 [style = bold, label=""];
9->26 [style = solid, label="ambiguousKeyPossible"];
22->10 [style = bold, label=""];
26->24 [style = solid, label="iteratorWrapper"];
20->22 [style = solid, label="ambiguousKeyPossible"];
3->13 [style = bold, label=""];
7->15 [style = bold, label=""];
17->6 [style = solid, label="namespaceSerializer"];
11->8 [style = dotted, label="true"];
8->25 [style = dashed, label="0"];
27->19 [style = bold, label=""];
2->24 [style = dashed, label="0"];
8->6 [style = solid, label="namespace"];
21->13 [style = solid, label="state"];
16->20 [style = bold, label=""];
19->5 [style = solid, label="columnInfo"];
17->16 [style = bold, label=""];
13->2 [style = bold, label=""];
}
