digraph {
3 [style = filled, label = "assertEquals(,meta.getGetterType(\"richType.richProperty\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(,meta.getGetterType(\"richType.richField\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(,meta.getSetterType(\"richField\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ReflectorFactory reflectorFactory = new DefaultReflectorFactory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(,meta.getGetterType(\"richList(0(\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(,meta.getSetterType(\"richType.richProperty\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(,meta.getGetterType(\"richType.richMap\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(,meta.getGetterType(\"richType\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(,meta.getGetterType(\"richType.richList(0(\"))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "shouldCheckTypeForEachGetter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(,meta.getGetterType(\"richField\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(,meta.getSetterType(\"richType.richField\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "shouldCheckTypeForEachSetter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(,meta.getSetterType(\"richType.richList(0(\"))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shouldCheckTypeForEachGetter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(,meta.getSetterType(\"richProperty\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(,meta.getGetterType(\"richList\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(,meta.getSetterType(\"richType\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(,meta.getGetterType(\"richMap\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(,meta.getSetterType(\"richType.richMap\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(,meta.getGetterType(\"richProperty\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(,meta.getGetterType(\"richType.richList\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(,meta.getSetterType(\"richList\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(,meta.getSetterType(\"richMap\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(,meta.getSetterType(\"richList(0(\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "MetaClass meta = MetaClass.forClass(,reflectorFactory)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(,meta.getSetterType(\"richType.richList\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->22 [style = bold, label=""];
4->18 [style = dashed, label="0"];
22->25 [style = bold, label=""];
1->4 [style = bold, label=""];
7->1 [style = bold, label=""];
16->11 [style = bold, label=""];
9->11 [style = bold, label=""];
0->13 [style = bold, label=""];
3->21 [style = dashed, label="0"];
1->26 [style = dashed, label="0"];
15->21 [style = bold, label=""];
0->23 [style = dashed, label="0"];
26->18 [style = bold, label=""];
13->17 [style = dashed, label="0"];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
21->24 [style = bold, label=""];
11->10 [style = solid, label="reflectorFactory"];
5->20 [style = dashed, label="0"];
24->26 [style = bold, label=""];
5->12 [style = bold, label=""];
3->7 [style = bold, label=""];
7->24 [style = dashed, label="0"];
11->10 [style = bold, label=""];
19->23 [style = bold, label=""];
6->19 [style = dashed, label="0"];
25->19 [style = bold, label=""];
13->5 [style = bold, label=""];
12->15 [style = dashed, label="0"];
8->25 [style = dashed, label="0"];
23->17 [style = bold, label=""];
10->2 [style = bold, label=""];
12->3 [style = bold, label=""];
20->15 [style = bold, label=""];
14->11 [style = bold, label=""];
2->22 [style = dashed, label="0"];
2->8 [style = bold, label=""];
17->20 [style = bold, label=""];
}
