digraph {
9 [style = filled, label = "expectThrows(,null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(mockTerminal.getOutput(),allOf(containsString(\"too old\"),containsString(\"data loss\"),containsString(\"You should not use this tool\"),containsString(Version.CURRENT.toString()),containsString(nodeVersion.toString())))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testWarnsIfTooNew['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "mockTerminal.addTextInput(\"n\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(mockTerminal.getOutput(),allOf(containsString(\"data loss\"),containsString(\"You should not use this tool\"),containsString(Version.CURRENT.toString()),containsString(nodeVersion.toString())))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final ElasticsearchException elasticsearchException = expectThrows(,null)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(elasticsearchException.getMessage(),equalTo(\"aborted by user\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final NodeMetadata nodeMetadata = PersistedClusterStateService.nodeMetadata(nodePaths)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Version nodeVersion = NodeMetadataTests.tooOldVersion()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "PersistedClusterStateService.overrideVersion(nodeVersion,nodePath)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final NodeMetadata nodeMetadata = PersistedClusterStateService.nodeMetadata(nodePath)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "final ElasticsearchException elasticsearchException = expectThrows(,null)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final MockTerminal mockTerminal = new MockTerminal()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Version nodeVersion = NodeMetadataTests.tooNewVersion()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testWarnsIfTooOld['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "mockTerminal.addTextInput(randomFrom(\"yy\",\"Yy\",\"n\",\"yes\",\"true\",\"N\",\"no\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "PersistedClusterStateService.overrideVersion(nodeVersion,nodePaths)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testWarnsIfTooOld['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(nodeMetadata.nodeVersion(),equalTo(nodeVersion))@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15->7 [style = bold, label=""];
5->1 [style = solid, label="nodeVersion"];
17->9 [style = bold, label=""];
5->7 [style = solid, label="nodeVersion"];
18->15 [style = bold, label=""];
0->16 [style = dashed, label="0"];
8->6 [style = bold, label=""];
6->17 [style = dashed, label="0"];
9->10 [style = bold, label=""];
10->13 [style = dashed, label="0"];
13->1 [style = bold, label=""];
8->17 [style = bold, label=""];
11->5 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
15->7 [style = solid, label="nodeVersion"];
0->14 [style = bold, label=""];
5->12 [style = solid, label="nodeVersion"];
5->12 [style = bold, label=""];
0->4 [style = bold, label=""];
7->2 [style = bold, label=""];
7->12 [style = dashed, label="0"];
5->7 [style = bold, label=""];
15->1 [style = solid, label="nodeVersion"];
4->8 [style = bold, label=""];
4->14 [style = dashed, label="0"];
14->8 [style = bold, label=""];
6->9 [style = bold, label=""];
16->4 [style = bold, label=""];
10->1 [style = bold, label=""];
5->15 [style = dashed, label="0"];
9->13 [style = bold, label=""];
2->16 [style = bold, label=""];
}
