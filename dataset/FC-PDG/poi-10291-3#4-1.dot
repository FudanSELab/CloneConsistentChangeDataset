digraph {
8 [style = filled, label = "assertNotNull(csFooter)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "hd.setFlag(HeadersFootersAtom.fHasSlideNumber,true)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testNewSlideHeadersFootersContainer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "CString csHeader = record.addHeaderAtom()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "UnsynchronizedByteArrayOutputStream baos = new UnsynchronizedByteArrayOutputStream()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "hd.setFlag(HeadersFootersAtom.fHasTodayDate,false)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "csFooter.setText(\"Note Footer\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertNull(record.getUserDateAtom())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(HeadersFootersContainer.HEADERATOM,csHeader.getOptions() >> 4)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CString csFooter = record.addFooterAtom()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNotNull(record.getHeadersFootersAtom())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "record.writeOut(baos)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "hd.setFlag(HeadersFootersAtom.fHasFooter,true)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "csHeader.setText(\"Note Header\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertNull(record.getHeaderAtom())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "hd.setFlag(HeadersFootersAtom.fHasUserDate,true)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertArrayEquals(notesData,baos.toByteArray())@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertNotNull(csHeader)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "HeadersFootersContainer record = new HeadersFootersContainer(HeadersFootersContainer.SlideHeadersFootersContainer)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "hd.setFlag(HeadersFootersAtom.fHasDate,true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNull(record.getFooterAtom())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNotNull(csFooter)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(HeadersFootersContainer.FOOTERATOM,csFooter.getOptions() >> 4)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testNewNotesHeadersFootersContainer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "HeadersFootersAtom hd = record.getHeadersFootersAtom()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testNewSlideHeadersFootersContainer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "HeadersFootersContainer record = new HeadersFootersContainer(HeadersFootersContainer.NotesHeadersFootersContainer)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "hd.setFlag(HeadersFootersAtom.fHasTodayDate,true)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "hd.setFlag(HeadersFootersAtom.fHasHeader,true)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "hd.setFlag(HeadersFootersAtom.fHasFooter,true)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CString csFooter = record.addFooterAtom()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertArrayEquals(slideData,baos.toByteArray())@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
16->15 [style = bold, label=""];
22->25 [style = bold, label=""];
1->4 [style = bold, label=""];
22->25 [style = solid, label="baos"];
9->0 [style = bold, label=""];
23->30 [style = bold, label=""];
3->1 [style = bold, label=""];
10->14 [style = bold, label=""];
0->6 [style = bold, label=""];
7->12 [style = bold, label=""];
20->29 [style = bold, label=""];
32->12 [style = bold, label=""];
21->27 [style = bold, label=""];
9->28 [style = dashed, label="0"];
28->26 [style = bold, label=""];
14->19 [style = bold, label=""];
7->31 [style = bold, label=""];
15->3 [style = bold, label=""];
4->28 [style = bold, label=""];
12->10 [style = solid, label="csFooter"];
8->7 [style = bold, label=""];
10->18 [style = dashed, label="0"];
2->13 [style = bold, label=""];
5->16 [style = bold, label=""];
25->24 [style = bold, label=""];
10->14 [style = solid, label="baos"];
12->10 [style = bold, label=""];
6->8 [style = solid, label="csFooter"];
13->27 [style = dashed, label="0"];
12->19 [style = dashed, label="0"];
30->7 [style = bold, label=""];
29->32 [style = bold, label=""];
26->23 [style = bold, label=""];
6->8 [style = bold, label=""];
11->24 [style = dashed, label="0"];
12->18 [style = bold, label=""];
13->5 [style = bold, label=""];
17->13 [style = bold, label=""];
27->5 [style = bold, label=""];
31->20 [style = bold, label=""];
14->11 [style = bold, label=""];
19->22 [style = bold, label=""];
18->14 [style = bold, label=""];
31->20 [style = solid, label="csHeader"];
18->14 [style = solid, label="baos"];
}
