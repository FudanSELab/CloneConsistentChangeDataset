digraph {
41 [style = filled, label = "int i = bufferSize / 2@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "System.out.println(\"first get size : \" + entrys1.getEvents().size())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(lastest,CanalEventUtils.createPosition(entrys.get(entrys.size() - 1)))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(result)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i < bufferSize@@@26@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Events<Event> entrys3 = eventStore.tryGet(entrys1.getPositionRange().getEnd(),bufferSize)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Events<Event> entrys2 = eventStore.tryGet(entrys1.getPositionRange().getEnd(),bufferSize)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Position lastest = eventStore.getLatestPosition()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "List<Event> entrys = new ArrayList<Event>(entrys2.getEvents())@@@39@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(lastest,entrys2.getPositionRange().getEnd())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "List<Event> entrys = new ArrayList<>(entrys2.getEvents())@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "eventStore.setBatchMode(BatchMode.MEMSIZE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(first,CanalEventUtils.createPosition(buildEvent(\"1\",1L,1L)))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "entrys2 = eventStore.tryGet(entrys1.getPositionRange().getEnd(),bufferSize)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "eventStore.setBufferSize(bufferSize)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "eventStore.rollback()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(result)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "boolean result = eventStore.tryPut(buildEvent(\"1\",1L,1L + i))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(0,entrys3.getEvents().size())@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "lastest = eventStore.getLatestPosition()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "eventStore.cleanUntil(entrys2.getPositionRange().getEnd())@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "sleep(100L)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "first = eventStore.getFirstPosition()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "eventStore.stop()@@@46@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testAck['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "MemoryEventStoreWithBuffer eventStore = new MemoryEventStoreWithBuffer()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "sleep(50L)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "i < bufferSize / 2@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testAck['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "Assert.assertEquals(lastest,CanalEventUtils.createPosition(buildEvent(\"1\",1L,1L + bufferSize / 2 - 1)))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "System.out.println(\"start get\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "eventStore.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "System.out.println(\"second get size : \" + entrys2.getEvents().size())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sleep(50L)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "sleep(100L)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Events<Event> entrys1 = eventStore.tryGet(first,bufferSize)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testAck['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "eventStore.cleanUntil(entrys1.getPositionRange().getEnd())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "System.out.println(\"third get size : \" + entrys3.getEvents().size())@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "boolean result = eventStore.tryPut(buildEvent(\"1\",1L,1L + i))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int bufferSize = 16@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "System.out.println(\"after rollback get size : \" + entrys2.getEvents().size())@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "i++@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Position first = eventStore.getFirstPosition()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->36 [style = bold, label=""];
38->5 [style = bold, label=""];
8->30 [style = solid, label="bufferSize"];
8->34 [style = solid, label="bufferSize"];
34->25 [style = bold, label=""];
21->42 [style = bold, label=""];
44->8 [style = bold, label=""];
0->26 [style = bold, label=""];
24->15 [style = solid, label="i"];
41->22 [style = solid, label="i"];
33->6 [style = dotted, label="true"];
8->31 [style = bold, label=""];
33->15 [style = bold, label=""];
0->45 [style = bold, label=""];
27->22 [style = solid, label="i"];
31->0 [style = bold, label=""];
20->34 [style = bold, label=""];
8->33 [style = solid, label="bufferSize"];
21->11 [style = solid, label="lastest"];
8->0 [style = solid, label="bufferSize"];
35->42 [style = dashed, label="0"];
41->27 [style = solid, label="i"];
28->7 [style = bold, label=""];
11->29 [style = bold, label=""];
32->9 [style = solid, label="first"];
32->14 [style = bold, label=""];
40->21 [style = bold, label=""];
6->24 [style = bold, label=""];
12->30 [style = bold, label=""];
22->28 [style = bold, label=""];
16->15 [style = solid, label="i"];
2->9 [style = bold, label=""];
32->12 [style = solid, label="first"];
17->22 [style = bold, label=""];
14->30 [style = solid, label="lastest"];
8->41 [style = solid, label="bufferSize"];
15->18 [style = bold, label=""];
4->41 [style = bold, label=""];
27->17 [style = solid, label="i"];
17->7 [style = dotted, label="true"];
9->23 [style = bold, label=""];
24->33 [style = bold, label=""];
26->16 [style = bold, label=""];
5->1 [style = bold, label=""];
41->17 [style = bold, label=""];
19->32 [style = bold, label=""];
21->29 [style = solid, label="lastest"];
15->6 [style = solid, label="result"];
8->37 [style = solid, label="bufferSize"];
33->15 [style = dotted, label="true"];
18->6 [style = bold, label=""];
16->33 [style = bold, label=""];
42->11 [style = bold, label=""];
37->38 [style = bold, label=""];
8->3 [style = solid, label="bufferSize"];
14->12 [style = bold, label=""];
43->8 [style = bold, label=""];
17->28 [style = dotted, label="true"];
27->17 [style = bold, label=""];
33->18 [style = dotted, label="true"];
10->4 [style = bold, label=""];
23->10 [style = bold, label=""];
17->3 [style = bold, label=""];
7->27 [style = bold, label=""];
3->39 [style = bold, label=""];
8->9 [style = solid, label="bufferSize"];
33->24 [style = dotted, label="true"];
24->33 [style = solid, label="i"];
45->26 [style = bold, label=""];
16->24 [style = solid, label="i"];
36->37 [style = bold, label=""];
22->7 [style = solid, label="result"];
17->22 [style = dotted, label="true"];
33->19 [style = bold, label=""];
30->2 [style = bold, label=""];
21->35 [style = bold, label=""];
13->8 [style = bold, label=""];
39->20 [style = bold, label=""];
16->33 [style = solid, label="i"];
17->27 [style = dotted, label="true"];
25->40 [style = bold, label=""];
41->17 [style = solid, label="i"];
8->17 [style = solid, label="bufferSize"];
35->11 [style = bold, label=""];
}
