digraph {
7 [style = filled, label = "assertThat(store().getDependencies(endTs(trace),DAY).execute()).containsOnly(DependencyLink.newBuilder().parent(frontend.serviceName()).child(backend.serviceName()).callCount(1).build())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "List<Span> trace = asList(Span.newBuilder().traceId(\"10\").id(\"10\").timestamp((TODAY + 50) * 1000).kind(Kind.CLIENT).localEndpoint(FRONTEND).build(),Span.newBuilder().traceId(\"10\").id(\"10\").shared(true).timestamp((TODAY + 100) * 1000).kind(Kind.SERVER).localEndpoint(BACKEND).build())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "annotationNamedErrorIsntError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String testSuffix = testSuffix(testInfo)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertThat(store().getDependencies(TRACE_ENDTS,TRACE_DURATION).execute()).containsOnly(DependencyLink.newBuilder().parent(\"frontend\").child(\"backend\").callCount(1).build())@@@5@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestInfo testInfo@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "oneway['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "processDependencies(trace)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String traceId = newTraceId()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Endpoint frontend = suffixServiceName(TestObjects.FRONTEND,testSuffix)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Endpoint backend = suffixServiceName(TestObjects.BACKEND,testSuffix)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "oneway['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "List<Span> trace = asList(Span.newBuilder().traceId(traceId).id(\"10\").timestamp((TODAY + 50) * 1000).kind(Kind.CLIENT).localEndpoint(frontend).build(),Span.newBuilder().traceId(traceId).id(\"10\").shared(true).timestamp((TODAY + 100) * 1000).kind(Kind.SERVER).localEndpoint(backend).build())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "processDependencies(trace)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "List<Span> trace = asList(Span.newBuilder().traceId(\"10\").id(\"10\").timestamp((TODAY + 50) * 1000).kind(Kind.CLIENT).localEndpoint(FRONTEND).build(),Span.newBuilder().traceId(\"10\").id(\"10\").shared(true).timestamp((TODAY + 100) * 1000).kind(Kind.SERVER).localEndpoint(BACKEND).addAnnotation((TODAY + 72) * 1000,\"error\").build())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
13->0 [style = solid, label="trace"];
10->12 [style = solid, label="trace"];
12->7 [style = bold, label=""];
9->4 [style = solid, label="testSuffix"];
6->4 [style = bold, label=""];
2->0 [style = bold, label=""];
11->9 [style = solid, label="testInfo"];
2->0 [style = solid, label="trace"];
3->2 [style = bold, label=""];
5->6 [style = bold, label=""];
10->12 [style = bold, label=""];
2->13 [style = dashed, label="0"];
0->1 [style = bold, label=""];
8->9 [style = bold, label=""];
9->5 [style = bold, label=""];
8->11 [style = dotted, label="true"];
9->6 [style = solid, label="testSuffix"];
14->13 [style = bold, label=""];
1->7 [style = dashed, label="0"];
13->0 [style = bold, label=""];
}
