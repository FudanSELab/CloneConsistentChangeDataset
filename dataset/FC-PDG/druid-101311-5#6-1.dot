digraph {
2 [style = filled, label = "testUpdateSegmentListIfDatasourcePathSpecWithMatchingUserSegments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "HadoopDruidIndexerConfig config = testRunUpdateSegmentListIfDatasourcePathSpecIsUsed(pathSpec,testDatasourceInterval)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "HadoopDruidIndexerConfig config = testRunUpdateSegmentListIfDatasourcePathSpecIsUsed(pathSpec,TEST_DATA_SOURCE_INTERVAL)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testUpdateSegmentListIfDatasourcePathSpecWithMatchingUserSegments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testUpdateSegmentListThrowsExceptionWithUserSegmentsMismatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "PathSpec pathSpec = new DatasourcePathSpec(null,new DatasourceIngestionSpec(testDatasource,testDatasourceInterval,null,ImmutableList.of(SEGMENT),null,null,null,false,null),null,false)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(ImmutableList.of(WindowedDataSegment.of(SEGMENT)),((DatasourcePathSpec)config.getPathSpec()).getSegments())@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testRunUpdateSegmentListIfDatasourcePathSpecIsUsed(pathSpec,testDatasourceInterval)@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "PathSpec pathSpec = new DatasourcePathSpec(null,new DatasourceIngestionSpec(testDatasource,testDatasourceInterval,null,ImmutableList.of(SEGMENT.withVersion(\"v2\")),null,null,null,false,null),null,false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "PathSpec pathSpec = new DatasourcePathSpec(null,new DatasourceIngestionSpec(TEST_DATA_SOURCE,TEST_DATA_SOURCE_INTERVAL,null,ImmutableList.of(SEGMENT),null,null,null,false,null),null,false)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
1->0 [style = solid, label="pathSpec"];
6->3 [style = bold, label=""];
1->4 [style = dashed, label="0"];
1->9 [style = dashed, label="0"];
1->0 [style = bold, label=""];
9->7 [style = bold, label=""];
0->7 [style = dashed, label="0"];
4->6 [style = bold, label=""];
2->1 [style = bold, label=""];
9->7 [style = solid, label="pathSpec"];
5->4 [style = bold, label=""];
4->6 [style = solid, label="pathSpec"];
0->6 [style = dashed, label="0"];
8->9 [style = bold, label=""];
}
