digraph {
1 [style = filled, label = "funcWrapper.getCoordinator().handleEventFromOperator(0,nextEvent)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "funcWrapper.openFunction()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testInsert['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testInsert['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testUpsert['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "funcWrapper.checkpointComplete(2)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "funcWrapper.invoke(rowData)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNotNull(funcWrapper.getEventBuffer()(0(,\"The coordinator missed the event\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "OperatorEvent nextEvent = funcWrapper.getNextEvent()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "checkWrittenData(tempFile,EXPECTED1)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String instant = funcWrapper.getWriteClient().getLastPendingInstant(getTableType())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "funcWrapper.checkpointComplete(1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "funcWrapper.checkpointFunction(2)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "checkInstantState(funcWrapper.getWriteClient(),HoodieInstant.State.REQUESTED,instant)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(\"The operator expect to send an event\",nextEvent,instanceOf())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "checkWrittenData(tempFile,EXPECTED1)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(\"The operator expect to send an event\",nextEvent,instanceOf())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertNotNull(funcWrapper.getEventBuffer()(0(,\"The coordinator missed the event\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "funcWrapper.checkpointComplete(1)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "funcWrapper.getCoordinator().handleEventFromOperator(0,nextEvent)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(\"The operator expect to send an event\",nextEvent,instanceOf())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "checkWrittenData(tempFile,EXPECTED2)@@@27@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "checkInstantState(funcWrapper.getWriteClient(),HoodieInstant.State.COMPLETED,instant)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "funcWrapper.checkpointFunction(1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String instant = funcWrapper.getWriteClient().getLastPendingInstant(getTableType())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "checkInstantState(funcWrapper.getWriteClient(),HoodieInstant.State.REQUESTED,instant)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final OperatorEvent nextEvent = funcWrapper.getNextEvent()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "funcWrapper.invoke(rowData)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEmptyDataFiles()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "nextEvent = funcWrapper.getNextEvent()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20->23 [style = bold, label=""];
21->14 [style = bold, label=""];
3->14 [style = bold, label=""];
6->18 [style = dashed, label="0"];
27->25 [style = bold, label=""];
8->12 [style = bold, label=""];
10->17 [style = bold, label=""];
17->19 [style = bold, label=""];
6->11 [style = bold, label=""];
25->24 [style = bold, label=""];
15->4 [style = bold, label=""];
29->28 [style = bold, label=""];
13->6 [style = bold, label=""];
11->1 [style = solid, label="nextEvent"];
11->4 [style = solid, label="nextEvent"];
11->15 [style = solid, label="nextEvent"];
19->22 [style = bold, label=""];
11->1 [style = bold, label=""];
2->10 [style = bold, label=""];
11->15 [style = bold, label=""];
22->20 [style = bold, label=""];
18->26 [style = bold, label=""];
13->18 [style = bold, label=""];
0->5 [style = dashed, label="0"];
9->7 [style = bold, label=""];
12->13 [style = bold, label=""];
5->0 [style = bold, label=""];
19->20 [style = solid, label="nextEvent"];
4->9 [style = bold, label=""];
16->14 [style = bold, label=""];
26->1 [style = bold, label=""];
14->8 [style = bold, label=""];
1->4 [style = bold, label=""];
17->24 [style = solid, label="instant"];
1->15 [style = dashed, label="0"];
9->29 [style = bold, label=""];
28->10 [style = bold, label=""];
6->7 [style = solid, label="instant"];
17->27 [style = solid, label="instant"];
6->5 [style = solid, label="instant"];
24->5 [style = bold, label=""];
19->22 [style = solid, label="nextEvent"];
18->26 [style = solid, label="nextEvent"];
10->5 [style = bold, label=""];
18->1 [style = solid, label="nextEvent"];
23->27 [style = bold, label=""];
7->2 [style = bold, label=""];
}
