digraph {
19 [style = filled, label = "assertOpType(Leader.DIFF,getZxid(2,0),getZxid(2,0))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "reset()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "db.txnLog.add(createProposal(getZxid(1,1)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertOpType(Leader.DIFF,getZxid(1,2),getZxid(1,2))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "queuedPacketMatches(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@3dbef2)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "peerZxid = getZxid(1,0)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testNewEpochZxid['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "reset()@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "db.txnLog.add(createProposal(getZxid(0,1)))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testDuplicatedTxn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertTrue(learnerHandler.syncFollower(peerZxid,leader))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,leader))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "db.committedLog.add(createProposal(getZxid(1,1)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(0,learnerHandler.getQueuedPackets().size())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "db.txnLog.add(createProposal(getZxid(1,2)))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "db.committedLog.add(createProposal(getZxid(1,2)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "peerZxid = getZxid(0,0)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,db,leader))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "long peerZxid@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "db.committedLog.add(createProposal(getZxid(1,1)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(5,learnerHandler.getQueuedPackets().size())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "queuedPacketMatches(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@3dbfd3)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "db.lastProcessedZxid = getZxid(2,0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "peerZxid = getZxid(2,0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "reset()@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(learnerHandler.syncFollower(peerZxid,db,leader))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,leader))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "db.txnLog.add(createProposal(getZxid(1,1)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "reset()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "db.committedLog.add(createProposal(getZxid(1,2)))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "db.txnLog.add(createProposal(getZxid(1,2)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testNewEpochZxid['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,db,leader))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(5,learnerHandler.getQueuedPackets().size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(1,learnerHandler.getQueuedPackets().size())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->20 [style = bold, label=""];
17->26 [style = bold, label=""];
12->28 [style = bold, label=""];
16->8 [style = bold, label=""];
12->21 [style = bold, label=""];
15->25 [style = bold, label=""];
28->31 [style = bold, label=""];
25->3 [style = bold, label=""];
4->19 [style = bold, label=""];
1->3 [style = bold, label=""];
11->29 [style = bold, label=""];
5->15 [style = bold, label=""];
31->21 [style = bold, label=""];
17->26 [style = solid, label="peerZxid"];
17->29 [style = dashed, label="0"];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
22->5 [style = bold, label=""];
34->30 [style = bold, label=""];
32->6 [style = bold, label=""];
17->18 [style = solid, label="peerZxid"];
3->0 [style = bold, label=""];
26->22 [style = bold, label=""];
9->6 [style = bold, label=""];
19->16 [style = bold, label=""];
0->7 [style = bold, label=""];
7->14 [style = bold, label=""];
3->27 [style = bold, label=""];
2->23 [style = bold, label=""];
15->25 [style = solid, label="peerZxid"];
29->33 [style = bold, label=""];
18->22 [style = bold, label=""];
34->30 [style = solid, label="peerZxid"];
6->10 [style = bold, label=""];
23->19 [style = bold, label=""];
20->12 [style = bold, label=""];
2->23 [style = solid, label="peerZxid"];
11->17 [style = bold, label=""];
14->2 [style = bold, label=""];
15->1 [style = solid, label="peerZxid"];
1->25 [style = dashed, label="0"];
24->6 [style = bold, label=""];
4->23 [style = dashed, label="0"];
33->34 [style = bold, label=""];
2->4 [style = solid, label="peerZxid"];
17->18 [style = bold, label=""];
18->26 [style = dashed, label="0"];
30->15 [style = bold, label=""];
21->13 [style = bold, label=""];
15->1 [style = bold, label=""];
}
