digraph {
6 [style = filled, label = "int i = 0@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "int i = 0@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@52@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,null))@@@63@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
87 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+null\")@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "@SuppressWarnings(\"unchecked\") final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final KTable<Integer,String> table1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "int i = 1@@@76@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
112 [style = filled, label = "testJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@66@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@46@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "i++@@@62@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
83 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+Y0\")@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "table2 = builder.table(topic2,consumed)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "driver.flushState()@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@46@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "driver.flushState()@@@48@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "int i = 0@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "i++@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "driver.flushState()@@@79@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
103 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@37@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@70@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+YY0\")@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+YY3\")@@@58@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,\"X2+null\"),kv(3,\"X3+null\"))@@@44@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "i < 2@@@58@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "assertOutputKeyValue(driver,2,\"XX2+YY2\")@@@73@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "driver.flushState()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "driver.flushState()@@@62@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i < 2@@@31@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertNull(driver.readOutput(output))@@@83@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
79 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+Y1\")@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@73@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "supplier = new MockProcessorSupplier<>()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
78 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+null\")@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@50@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "assertOutputKeyValue(driver,0,\"XX0+null\")@@@71@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+YY3\")@@@50@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
92 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+null\")@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
106 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,null))@@@79@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "driver.process(topic1,expectedKeys(i(,null)@@@77@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
108 [style = filled, label = "assertNull(driver.readOutput(output))@@@75@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
73 [style = filled, label = "assertOutputKeyValue(driver,2,\"null+YY2\")@@@82@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
128 [style = filled, label = "final KTable<Integer,String> table1 = builder.table(topic1,consumed)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@56@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i++@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+Y1\")@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@60@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "final KTable<Integer,String> joined = table1.leftJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "int i = 0@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@66@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+null\")@@@66@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "driver.flushState()@@@54@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "final KTable<Integer,String> joined@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "i++@@@78@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "driver.flushState()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b17c14@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "driver.setTime(0L)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@69@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
115 [style = filled, label = "final KTable<Integer,String> table2 = builder.table(topic2,consumed)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "assertNull(driver.readOutput(output))@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
125 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
120 [style = filled, label = "joined.toStream().process(supplier)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "driver.flushState()@@@71@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
126 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertOutputKeyValue(driver,3,\"XX3+YY3\")@@@74@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
114 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+YY2\")@@@49@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "i < 2@@@28@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
123 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int i = 0@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,null),kv(2,\"null+YY2\"),kv(3,\"XX3+YY3\"))@@@81@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "int i = 0@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
72 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+YY1\")@@@48@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
67 [style = filled, label = "assertNull(driver.readOutput(output))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
100 [style = filled, label = "assertNull(driver.readOutput(output))@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
96 [style = filled, label = "i < 2@@@19@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
69 [style = filled, label = "i < 3@@@77@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "assertOutputKeyValue(driver,1,null)@@@81@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "i < 2@@@22@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertOutputKeyValue(driver,1,\"XX1+null\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "assertNull(driver.readOutput(output))@@@67@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
77 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+YY2\")@@@57@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "driver.flushState()@@@68@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "i < 2@@@61@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "getter.init(driver.context())@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "joined.toStream().to(output)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
82 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "joined = table1.outerJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "int i = 0@@@60@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
75 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@72@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "driver.setUp(builder,stateDir)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "assertNull(driver.readOutput(output))@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "table1 = builder.table(topic1,consumed)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@64@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+YY0\")@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
76 [style = filled, label = "assertNull(driver.readOutput(output))@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
81 [style = filled, label = "i++@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
97 [style = filled, label = "i++@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "final KTable<Integer,String> table2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "i < 3@@@75@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int i = 0@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
116 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "processor.checkAndClearProcessResult(\"1:null\",\"2:null+YY2\")@@@80@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@63@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
82->97 [style = bold, label=""];
12->44 [style = bold, label=""];
102->15 [style = bold, label=""];
68->69 [style = bold, label=""];
7->30 [style = bold, label=""];
55->47 [style = bold, label=""];
91->69 [style = bold, label=""];
11->116 [style = bold, label=""];
61->56 [style = bold, label=""];
116->48 [style = bold, label=""];
18->11 [style = solid, label="getter"];
15->54 [style = bold, label=""];
96->74 [style = dotted, label="true"];
12->70 [style = dashed, label="0"];
60->124 [style = dashed, label="0"];
34->18 [style = bold, label=""];
51->108 [style = bold, label=""];
59->31 [style = bold, label=""];
43->51 [style = dotted, label="true"];
39->54 [style = bold, label=""];
59->127 [style = solid, label="getter"];
64->75 [style = dashed, label="0"];
16->66 [style = bold, label=""];
40->38 [style = bold, label=""];
95->16 [style = bold, label=""];
26->56 [style = bold, label=""];
62->27 [style = bold, label=""];
9->16 [style = bold, label=""];
68->69 [style = solid, label="i"];
96->81 [style = dotted, label="true"];
95->101 [style = dotted, label="true"];
57->38 [style = dotted, label="true"];
89->74 [style = solid, label="i"];
79->110 [style = bold, label=""];
6->54 [style = solid, label="i"];
30->11 [style = bold, label=""];
17->53 [style = bold, label=""];
73->80 [style = bold, label=""];
94->102 [style = bold, label=""];
119->26 [style = solid, label="i"];
101->95 [style = bold, label=""];
23->104 [style = dashed, label="0"];
36->111 [style = dashed, label="0"];
25->58 [style = bold, label=""];
22->51 [style = solid, label="i"];
89->81 [style = solid, label="i"];
59->114 [style = solid, label="getter"];
97->102 [style = solid, label="i"];
59->48 [style = solid, label="getter"];
9->5 [style = bold, label=""];
57->38 [style = bold, label=""];
26->61 [style = bold, label=""];
56->26 [style = bold, label=""];
124->125 [style = bold, label=""];
2->32 [style = bold, label=""];
26->56 [style = solid, label="i"];
4->64 [style = bold, label=""];
32->20 [style = bold, label=""];
27->25 [style = bold, label=""];
13->82 [style = solid, label="expectedKeys"];
89->96 [style = solid, label="i"];
18->14 [style = solid, label="getter"];
83->86 [style = bold, label=""];
21->3 [style = bold, label=""];
0->38 [style = solid, label="i"];
90->51 [style = bold, label=""];
13->14 [style = solid, label="expectedKeys"];
13->88 [style = solid, label="expectedKeys"];
7->11 [style = bold, label=""];
61->26 [style = bold, label=""];
18->49 [style = solid, label="getter"];
95->88 [style = bold, label=""];
38->57 [style = solid, label="i"];
123->121 [style = bold, label=""];
29->60 [style = bold, label=""];
57->40 [style = bold, label=""];
10->14 [style = bold, label=""];
11->48 [style = bold, label=""];
63->51 [style = bold, label=""];
18->4 [style = solid, label="getter"];
51->43 [style = solid, label="i"];
34->18 [style = dotted, label="true"];
122->45 [style = bold, label=""];
62->125 [style = dashed, label="0"];
89->96 [style = bold, label=""];
22->43 [style = bold, label=""];
97->102 [style = bold, label=""];
67->103 [style = bold, label=""];
60->62 [style = bold, label=""];
4->113 [style = bold, label=""];
34->42 [style = dotted, label="true"];
3->38 [style = dashed, label="0"];
14->10 [style = bold, label=""];
31->118 [style = bold, label=""];
39->54 [style = solid, label="i"];
41->49 [style = bold, label=""];
58->1 [style = solid, label="table2"];
34->42 [style = bold, label=""];
46->83 [style = dashed, label="0"];
86->78 [style = bold, label=""];
23->8 [style = bold, label=""];
49->122 [style = bold, label=""];
119->61 [style = bold, label=""];
76->98 [style = bold, label=""];
40->127 [style = bold, label=""];
127->21 [style = bold, label=""];
109->111 [style = bold, label=""];
121->117 [style = bold, label=""];
46->41 [style = bold, label=""];
6->39 [style = solid, label="i"];
38->57 [style = bold, label=""];
50->88 [style = dashed, label="0"];
33->29 [style = bold, label=""];
3->10 [style = bold, label=""];
81->96 [style = bold, label=""];
91->69 [style = solid, label="i"];
27->2 [style = solid, label="supplier"];
59->36 [style = solid, label="getter"];
104->22 [style = bold, label=""];
98->95 [style = solid, label="i"];
44->4 [style = bold, label=""];
33->128 [style = dashed, label="0"];
44->100 [style = bold, label=""];
57->21 [style = bold, label=""];
118->18 [style = solid, label="i"];
1->85 [style = bold, label=""];
57->40 [style = dotted, label="true"];
103->70 [style = bold, label=""];
21->57 [style = dashed, label="0"];
29->115 [style = dashed, label="0"];
54->114 [style = bold, label=""];
45->103 [style = dashed, label="0"];
39->79 [style = bold, label=""];
21->10 [style = solid, label="i"];
6->15 [style = solid, label="i"];
47->31 [style = solid, label="builder"];
13->54 [style = solid, label="expectedKeys"];
94->82 [style = solid, label="i"];
7->39 [style = dashed, label="0"];
10->14 [style = solid, label="i"];
93->35 [style = bold, label=""];
14->6 [style = bold, label=""];
65->89 [style = bold, label=""];
8->24 [style = bold, label=""];
34->57 [style = bold, label=""];
39->15 [style = solid, label="i"];
59->64 [style = solid, label="getter"];
0->57 [style = bold, label=""];
49->45 [style = bold, label=""];
16->36 [style = bold, label=""];
98->101 [style = solid, label="i"];
118->34 [style = bold, label=""];
9->16 [style = dashed, label="0"];
112->47 [style = bold, label=""];
13->106 [style = solid, label="expectedKeys"];
18->52 [style = solid, label="getter"];
97->82 [style = solid, label="i"];
15->54 [style = dotted, label="true"];
13->128 [style = bold, label=""];
18->34 [style = bold, label=""];
61->56 [style = dotted, label="true"];
50->17 [style = bold, label=""];
78->87 [style = bold, label=""];
3->10 [style = dotted, label="true"];
35->53 [style = solid, label="i"];
69->68 [style = dotted, label="true"];
28->15 [style = dashed, label="0"];
102->82 [style = bold, label=""];
53->50 [style = dotted, label="true"];
88->101 [style = bold, label=""];
100->75 [style = bold, label=""];
101->88 [style = solid, label="i"];
96->74 [style = bold, label=""];
48->77 [style = dashed, label="0"];
47->13 [style = bold, label=""];
13->40 [style = solid, label="expectedKeys"];
42->0 [style = bold, label=""];
31->34 [style = bold, label=""];
60->25 [style = bold, label=""];
6->15 [style = bold, label=""];
56->35 [style = bold, label=""];
48->46 [style = bold, label=""];
53->50 [style = bold, label=""];
5->16 [style = bold, label=""];
107->44 [style = bold, label=""];
54->39 [style = bold, label=""];
13->50 [style = solid, label="expectedKeys"];
58->1 [style = bold, label=""];
72->107 [style = bold, label=""];
110->77 [style = bold, label=""];
106->68 [style = bold, label=""];
71->73 [style = bold, label=""];
17->50 [style = bold, label=""];
18->56 [style = solid, label="getter"];
101->95 [style = solid, label="i"];
111->104 [style = bold, label=""];
35->76 [style = bold, label=""];
16->126 [style = bold, label=""];
47->32 [style = solid, label="builder"];
15->28 [style = bold, label=""];
120->123 [style = bold, label=""];
64->119 [style = bold, label=""];
13->56 [style = solid, label="expectedKeys"];
21->14 [style = solid, label="i"];
118->34 [style = solid, label="i"];
20->65 [style = bold, label=""];
87->67 [style = bold, label=""];
0->57 [style = solid, label="i"];
69->106 [style = dotted, label="true"];
77->83 [style = bold, label=""];
59->50 [style = solid, label="getter"];
43->63 [style = bold, label=""];
54->82 [style = dashed, label="0"];
51->43 [style = bold, label=""];
64->61 [style = bold, label=""];
1->2 [style = bold, label=""];
115->124 [style = bold, label=""];
70->72 [style = bold, label=""];
61->26 [style = dotted, label="true"];
84->26 [style = bold, label=""];
13->63 [style = solid, label="expectedKeys"];
35->50 [style = solid, label="i"];
53->9 [style = bold, label=""];
38->40 [style = bold, label=""];
119->61 [style = solid, label="i"];
95->88 [style = dotted, label="true"];
18->42 [style = solid, label="i"];
37->71 [style = dashed, label="0"];
13->42 [style = solid, label="expectedKeys"];
38->92 [style = bold, label=""];
35->53 [style = bold, label=""];
114->7 [style = bold, label=""];
113->64 [style = bold, label=""];
22->63 [style = solid, label="i"];
98->88 [style = solid, label="i"];
13->74 [style = solid, label="expectedKeys"];
91->68 [style = solid, label="i"];
119->56 [style = solid, label="i"];
102->97 [style = dotted, label="true"];
68->106 [style = solid, label="i"];
61->84 [style = dashed, label="0"];
98->95 [style = bold, label=""];
42->18 [style = bold, label=""];
39->15 [style = bold, label=""];
18->24 [style = solid, label="getter"];
92->105 [style = bold, label=""];
50->9 [style = bold, label=""];
51->63 [style = solid, label="i"];
15->39 [style = dotted, label="true"];
102->82 [style = dotted, label="true"];
75->84 [style = bold, label=""];
46->49 [style = bold, label=""];
3->14 [style = bold, label=""];
0->40 [style = solid, label="i"];
28->7 [style = bold, label=""];
53->17 [style = dotted, label="true"];
17->50 [style = solid, label="i"];
40->74 [style = dashed, label="0"];
91->106 [style = solid, label="i"];
10->3 [style = bold, label=""];
81->74 [style = solid, label="i"];
26->93 [style = bold, label=""];
3->15 [style = bold, label=""];
43->37 [style = bold, label=""];
38->40 [style = solid, label="i"];
22->90 [style = bold, label=""];
22->43 [style = solid, label="i"];
24->22 [style = bold, label=""];
81->96 [style = solid, label="i"];
108->91 [style = bold, label=""];
125->120 [style = bold, label=""];
18->34 [style = solid, label="i"];
45->12 [style = bold, label=""];
74->81 [style = bold, label=""];
59->45 [style = solid, label="getter"];
26->61 [style = solid, label="i"];
61->53 [style = bold, label=""];
35->17 [style = solid, label="i"];
118->42 [style = solid, label="i"];
43->63 [style = dotted, label="true"];
69->71 [style = bold, label=""];
36->23 [style = bold, label=""];
125->120 [style = solid, label="supplier"];
12->4 [style = bold, label=""];
94->102 [style = solid, label="i"];
18->16 [style = solid, label="getter"];
99->47 [style = bold, label=""];
105->94 [style = bold, label=""];
117->2 [style = bold, label=""];
128->115 [style = bold, label=""];
66->109 [style = bold, label=""];
15->39 [style = bold, label=""];
126->36 [style = bold, label=""];
53->17 [style = bold, label=""];
3->14 [style = dotted, label="true"];
65->59 [style = bold, label=""];
96->57 [style = bold, label=""];
17->53 [style = solid, label="i"];
37->19 [style = bold, label=""];
63->106 [style = dashed, label="0"];
94->97 [style = solid, label="i"];
13->33 [style = bold, label=""];
85->32 [style = bold, label=""];
115->124 [style = solid, label="table2"];
21->3 [style = solid, label="i"];
69->106 [style = bold, label=""];
10->3 [style = solid, label="i"];
19->52 [style = bold, label=""];
18->42 [style = bold, label=""];
2->85 [style = dashed, label="0"];
}
