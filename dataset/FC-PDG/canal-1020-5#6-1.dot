digraph {
26 [style = filled, label = "Assert.assertEquals(position,entrys.getPositionRange().getStart())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int batchSize = 10@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(entrys.getEvents().size() == batchSize)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "InterruptedException e@@@23@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "{}@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.fail(e.getMessage())@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < batchSize@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testBlockPutOneGet['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "eventStore.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "InterruptedException e@@@43@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "eventStore.setBufferSize(16)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(position,entrys.getPositionRange().getEnd())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "executor.submit(null)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "CanalStoreException|InterruptedException e@@@19@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "{}@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "{}@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CanalStoreException e@@@19@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "CanalStoreException e@@@21@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Position position = eventStore.getFirstPosition()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "eventStore.setBatchMode(BatchMode.MEMSIZE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Thread.sleep(1000L)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "InterruptedException e@@@50@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "{}@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertTrue(result)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ExecutorService executor = Executors.newFixedThreadPool(1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "executor.shutdownNow()@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "eventStore.stop()@@@53@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Thread.sleep(1000L)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Events<Event> entrys = eventStore.get(position,batchSize)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "boolean result = eventStore.tryPut(buildEvent(\"1\",1L,1L))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testBlockPutOneGet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Assert.fail(e.getMessage())@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testBlockPutOneGet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final MemoryEventStoreWithBuffer eventStore = new MemoryEventStoreWithBuffer()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
19->33 [style = bold, label=""];
17->8 [style = bold, label=""];
28->29 [style = bold, label=""];
24->12 [style = bold, label=""];
7->11 [style = bold, label=""];
32->21 [style = bold, label=""];
1->10 [style = dotted, label="true"];
15->7 [style = bold, label=""];
12->21 [style = bold, label=""];
8->6 [style = solid, label="batchSize"];
0->1 [style = solid, label="i"];
21->15 [style = bold, label=""];
1->27 [style = bold, label=""];
35->19 [style = bold, label=""];
27->10 [style = solid, label="result"];
4->26 [style = bold, label=""];
14->19 [style = bold, label=""];
8->4 [style = solid, label="batchSize"];
16->32 [style = bold, label=""];
31->21 [style = bold, label=""];
19->17 [style = bold, label=""];
5->18 [style = solid, label="position"];
22->1 [style = solid, label="i"];
13->11 [style = bold, label=""];
22->0 [style = solid, label="i"];
9->16 [style = bold, label=""];
29->21 [style = bold, label=""];
8->22 [style = bold, label=""];
2->13 [style = bold, label=""];
6->4 [style = bold, label=""];
30->19 [style = bold, label=""];
3->23 [style = bold, label=""];
25->20 [style = bold, label=""];
8->1 [style = solid, label="batchSize"];
5->6 [style = solid, label="position"];
5->6 [style = bold, label=""];
20->23 [style = bold, label=""];
24->31 [style = bold, label=""];
11->3 [style = bold, label=""];
0->1 [style = bold, label=""];
16->21 [style = bold, label=""];
27->10 [style = bold, label=""];
10->0 [style = bold, label=""];
34->17 [style = bold, label=""];
25->20 [style = dotted, label="true"];
16->29 [style = dashed, label="0"];
1->0 [style = dotted, label="true"];
22->1 [style = bold, label=""];
18->21 [style = bold, label=""];
5->26 [style = solid, label="position"];
33->34 [style = bold, label=""];
2->13 [style = dotted, label="true"];
1->27 [style = dotted, label="true"];
26->18 [style = bold, label=""];
}
