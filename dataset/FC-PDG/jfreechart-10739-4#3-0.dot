digraph {
0 [style = filled, label = "u1.addValue(2.0,\"R1\",\"C2\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "SlidingCategoryDataset d2@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(d1,d2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SlidingCategoryDataset d2 = (SlidingCategoryDataset)TestUtilities.serialised(d1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "SlidingCategoryDataset d1 = new SlidingCategoryDataset(u1,0,5)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SlidingCategoryDataset d2 = (SlidingCategoryDataset)TestUtils.serialised(d1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertTrue(d1 != d2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "u2.addValue(3.0,\"R1\",\"C3\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "u1.addValue(3.0,\"R1\",\"C3\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertFalse(d1.equals(d2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "d2 = (SlidingCategoryDataset)d1.clone()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertFalse(d1.equals(d2))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "u1.addValue(1.0,\"R1\",\"C1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(d1.equals(d2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "DefaultCategoryDataset u2 = (DefaultCategoryDataset)d2.getUnderlyingDataset()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DefaultCategoryDataset u2 = (DefaultCategoryDataset)d2.getUnderlyingDataset()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "u1.addValue(3.0,\"R1\",\"C3\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DefaultCategoryDataset u1 = new DefaultCategoryDataset()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(d1.equals(d2))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
21->17 [style = solid, label="d2"];
3->12 [style = solid, label="d1"];
12->9 [style = solid, label="d2"];
22->15 [style = bold, label=""];
1->8 [style = bold, label=""];
3->2 [style = solid, label="d1"];
4->16 [style = dashed, label="0"];
11->14 [style = bold, label=""];
7->10 [style = bold, label=""];
2->6 [style = bold, label=""];
4->9 [style = solid, label="d2"];
14->22 [style = bold, label=""];
18->19 [style = bold, label=""];
12->2 [style = solid, label="d2"];
21->11 [style = solid, label="d2"];
19->10 [style = bold, label=""];
12->11 [style = solid, label="d2"];
4->2 [style = bold, label=""];
3->12 [style = bold, label=""];
3->16 [style = bold, label=""];
20->1 [style = bold, label=""];
9->7 [style = bold, label=""];
4->11 [style = solid, label="d2"];
3->4 [style = bold, label=""];
21->19 [style = solid, label="d2"];
13->1 [style = bold, label=""];
4->2 [style = solid, label="d2"];
3->4 [style = solid, label="d1"];
4->12 [style = dashed, label="0"];
8->0 [style = bold, label=""];
5->1 [style = bold, label=""];
12->2 [style = bold, label=""];
16->21 [style = bold, label=""];
21->15 [style = solid, label="d2"];
1->3 [style = solid, label="u1"];
6->9 [style = bold, label=""];
21->17 [style = bold, label=""];
3->17 [style = solid, label="d1"];
17->18 [style = bold, label=""];
10->11 [style = bold, label=""];
}
