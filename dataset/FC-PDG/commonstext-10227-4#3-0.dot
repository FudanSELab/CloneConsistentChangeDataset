digraph {
3 [style = filled, label = "testConstructor_charArray_char['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"b\",tok.next())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFalse(tok.hasNext())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1,tok.getDelimiterMatcher().isMatch(\" \",0,0,1))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testConstructor_charArray_char['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertFalse(tok.hasNext())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "StringTokenizer tok = new StringTokenizer(\"a b\".toCharArray(),' ')@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"a\",tok.next())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tok = new StrTokenizer(new char((((,' ')@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testConstructor_charArray_char['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tok = new StringTokenizer(new char((((,' ')@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(tok.hasNext())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "tok = new StrTokenizer((char(()null,' ')@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "StrTokenizer tok = new StrTokenizer(\"a b\".toCharArray(),' ')@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(1,tok.getDelimiterMatcher().isMatch(\" \".toCharArray(),0,0,1))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tok = new StringTokenizer((char(()null,' ')@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
11->4 [style = bold, label=""];
12->14 [style = bold, label=""];
6->13 [style = dashed, label="0"];
8->6 [style = bold, label=""];
2->15 [style = dashed, label="0"];
3->7 [style = bold, label=""];
2->8 [style = bold, label=""];
1->11 [style = bold, label=""];
14->1 [style = bold, label=""];
6->9 [style = bold, label=""];
10->7 [style = bold, label=""];
8->13 [style = bold, label=""];
1->4 [style = bold, label=""];
7->14 [style = dashed, label="0"];
7->1 [style = bold, label=""];
13->9 [style = bold, label=""];
0->5 [style = bold, label=""];
15->8 [style = bold, label=""];
4->0 [style = bold, label=""];
5->15 [style = bold, label=""];
}
