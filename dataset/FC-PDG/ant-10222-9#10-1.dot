digraph {
26 [style = filled, label = "f.setPrefix(\"/examples\")@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "f.setRefid(new Reference(getProject(),\"test\"))@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "f.setDir(new File(\"examples\"))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "f.setFullpath(\"/doc/manual/index.html\")@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "TarFileSet f = (TarFileSet)getInstance()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(\"file mode attribute copied by copy constructor\",f.getFileMode(getProject()),zid.getFileMode(getProject()))@@@60@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "zid.setRefid(new Reference(getProject(),\"test\"))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "assertEquals(\"src attribute copied by copy constructor\",zfs.getSrc(getProject()),zid.getSrc(getProject()))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "getProject().addReference(\"test\",zfs)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "assertEquals(\"Cannot set both dir and src attributes\",be.getMessage())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(\"file mode attribute copied by copy constructor\",zfs.getFileMode(getProject()),zid.getFileMode(getProject()))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "BuildException be@@@38@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fail(\"can add dir to \" + f.getDataTypeName() + \" when a src is already present\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "f = (ZipFileSet)getInstance()@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "f = (ZipFileSet)getInstance()@@@50@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"prefix attribute copied by copy constructor\",f.getPrefix(getProject()),zid.getPrefix(getProject()))@@@59@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "f = (TarFileSet)getInstance()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "BuildException be@@@28@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "f = (ZipFileSet)getInstance()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "testAttributes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(\"dir mode attribute copied by copy constructor\",zfs.getDirMode(getProject()),zid.getDirMode(getProject()))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "fail(\"Can add prefix to \" + f.getDataTypeName() + \" when a fullpath is already present\")@@@36@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "f.setDirMode(\"530\")@@@54@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "fail(\"Can add fullpath to \" + f.getDataTypeName() + \" when a prefix is already present\")@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "f = (ZipFileSet)getInstance()@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"You must not specify more than one \" + \"attribute when using refid\",be.getMessage())@@@48@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "zfs.setFileMode(\"600\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "testAttributes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "zfs.setSrc(new File(\"example.zip\"))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "BuildException be@@@9@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "f.setFullpath(\"/doc/manual/index.html\")@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "zfs.setPrefix(\"/examples\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "f = (ZipFileSet)getInstance()@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "f = (TarFileSet)getInstance()@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(\"Cannot set both dir and src attributes\",be.getMessage())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "assertEquals(\"prefix attribute copied by copy constructor\",zfs.getPrefix(getProject()),zid.getPrefix(getProject()))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "testAttributes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"Cannot set both dir and src attributes\",be.getMessage())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "f.setPrefix(\"/examples\")@@@52@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "f.setFileMode(\"600\")@@@53@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "f.setSrc(new File(\"example.tar\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "getProject().addReference(\"test\",f)@@@55@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(\"Cannot set both dir and src attributes\",be.getMessage())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(\"src attribute copied by copy constructor\",zid.getSrc(getProject()),f.getSrc(getProject()))@@@58@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "ZipFileSet f = (ZipFileSet)getInstance()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "f = (TarFileSet)getInstance()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "f = (TarFileSet)getInstance()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(\"Cannot set both fullpath and prefix attributes\",be.getMessage())@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"Cannot set both fullpath and prefix attributes\",be.getMessage())@@@39@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "BuildException be@@@18@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "ZipFileSet zid = (ZipFileSet)getInstance()@@@56@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "zid.setRefid(new Reference(getProject(),\"test\"))@@@57@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "f.setSrc(new File(\"example.zip\"))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "zfs.setDirMode(\"530\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "fail(\"can add src to \" + f.getDataTypeName() + \" when a dir is already present\")@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "fail(\"Can add src to \" + f.getDataTypeName() + \" when a refid is already present\")@@@45@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(\"dir mode attribute copied by copy constructor\",f.getDirMode(getProject()),zid.getDirMode(getProject()))@@@61@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "TarFileSet zid = (TarFileSet)getInstance()@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "f = (TarFileSet)getInstance()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "f.setDir(new File(\"examples\"))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "f.setPrefix(\"/examples\")@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "ZipFileSet zid = (ZipFileSet)getInstance()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "BuildException be@@@47@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15->58 [style = dashed, label="0"];
40->66 [style = bold, label=""];
69->60 [style = bold, label=""];
18->61 [style = dashed, label="0"];
31->21 [style = bold, label=""];
32->34 [style = bold, label=""];
61->10 [style = bold, label=""];
8->72 [style = dashed, label="0"];
56->54 [style = bold, label=""];
49->55 [style = bold, label=""];
39->68 [style = dashed, label="0"];
38->72 [style = bold, label=""];
17->36 [style = bold, label=""];
30->52 [style = dashed, label="0"];
48->51 [style = bold, label=""];
23->13 [style = bold, label=""];
62->65 [style = bold, label=""];
40->22 [style = bold, label=""];
14->9 [style = bold, label=""];
5->30 [style = bold, label=""];
46->50 [style = bold, label=""];
33->71 [style = bold, label=""];
8->27 [style = bold, label=""];
43->58 [style = bold, label=""];
16->67 [style = bold, label=""];
25->40 [style = bold, label=""];
53->48 [style = bold, label=""];
72->27 [style = bold, label=""];
2->3 [style = dotted, label="true"];
5->49 [style = dashed, label="0"];
47->53 [style = bold, label=""];
15->38 [style = bold, label=""];
54->49 [style = bold, label=""];
27->0 [style = bold, label=""];
33->32 [style = dotted, label="true"];
19->20 [style = bold, label=""];
41->63 [style = dashed, label="0"];
7->64 [style = dashed, label="0"];
4->18 [style = bold, label=""];
11->12 [style = bold, label=""];
34->42 [style = bold, label=""];
13->16 [style = bold, label=""];
35->28 [style = bold, label=""];
10->34 [style = bold, label=""];
32->71 [style = dashed, label="0"];
3->7 [style = bold, label=""];
62->16 [style = solid, label="f"];
5->59 [style = dashed, label="0"];
0->31 [style = bold, label=""];
36->45 [style = dashed, label="0"];
21->23 [style = bold, label=""];
39->37 [style = bold, label=""];
6->17 [style = bold, label=""];
52->46 [style = bold, label=""];
63->59 [style = bold, label=""];
3->57 [style = dashed, label="0"];
27->62 [style = bold, label=""];
2->3 [style = bold, label=""];
6->48 [style = dashed, label="0"];
2->57 [style = dotted, label="true"];
67->12 [style = bold, label=""];
7->4 [style = bold, label=""];
12->24 [style = bold, label=""];
33->71 [style = dotted, label="true"];
26->19 [style = bold, label=""];
1->7 [style = bold, label=""];
65->21 [style = bold, label=""];
17->51 [style = dashed, label="0"];
58->38 [style = bold, label=""];
2->57 [style = bold, label=""];
0->62 [style = dashed, label="0"];
18->10 [style = bold, label=""];
51->45 [style = bold, label=""];
42->60 [style = dashed, label="0"];
37->44 [style = bold, label=""];
22->39 [style = bold, label=""];
33->32 [style = bold, label=""];
20->66 [style = bold, label=""];
38->8 [style = bold, label=""];
55->52 [style = bold, label=""];
64->4 [style = bold, label=""];
28->58 [style = bold, label=""];
42->26 [style = bold, label=""];
28->15 [style = bold, label=""];
16->11 [style = bold, label=""];
30->1 [style = bold, label=""];
9->0 [style = bold, label=""];
57->64 [style = bold, label=""];
34->69 [style = dashed, label="0"];
60->26 [style = bold, label=""];
29->41 [style = bold, label=""];
66->68 [style = bold, label=""];
70->63 [style = bold, label=""];
68->37 [style = bold, label=""];
9->62 [style = bold, label=""];
4->61 [style = bold, label=""];
44->43 [style = bold, label=""];
71->69 [style = bold, label=""];
0->16 [style = solid, label="f"];
20->22 [style = bold, label=""];
24->53 [style = dashed, label="0"];
22->66 [style = dashed, label="0"];
25->40 [style = dotted, label="true"];
11->67 [style = dashed, label="0"];
43->15 [style = bold, label=""];
50->47 [style = bold, label=""];
31->65 [style = dashed, label="0"];
10->69 [style = bold, label=""];
59->30 [style = bold, label=""];
35->28 [style = dotted, label="true"];
14->9 [style = dotted, label="true"];
24->6 [style = bold, label=""];
1->64 [style = bold, label=""];
41->5 [style = bold, label=""];
}
