digraph {
0 [style = filled, label = "this.thrown.expectCause(instanceOf())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EndpointMBean bean = new EndpointMBean(this.responseMapper,null,endpoint)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "bean.invoke(\"testOperation\",NO_PARAMS,NO_SIGNATURE)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "invokeWhenOperationFailedShouldTranslateException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "this.thrown.expect()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "this.thrown.expectMessage(\"test failure\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "this.thrown.expectCause(instanceOf())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "invokeWhenOperationFailedShouldTranslateException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestExposableJmxEndpoint endpoint = new TestExposableJmxEndpoint(new TestJmxOperation(null))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "EndpointMBean bean = new EndpointMBean(this.responseMapper,endpoint)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "invokeWhenOperationFailedWithJdkExceptionShouldReuseException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
5->8 [style = dashed, label="0"];
3->6 [style = bold, label=""];
5->2 [style = bold, label=""];
1->4 [style = bold, label=""];
2->0 [style = bold, label=""];
4->5 [style = solid, label="endpoint"];
0->9 [style = dashed, label="0"];
7->4 [style = bold, label=""];
2->9 [style = bold, label=""];
8->2 [style = bold, label=""];
4->5 [style = bold, label=""];
4->8 [style = solid, label="endpoint"];
10->4 [style = bold, label=""];
}
