digraph {
10 [style = filled, label = "final Interval queryInterval = Intervals.of(\"2016-01-01T14:00:00/2016-01-02T14:00:00\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final Object etag1 = responseContext.get(ResponseContext.Key.ETAG)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder().dataSource(DATA_SOURCE).intervals(new MultipleIntervalSegmentSpec(ImmutableList.of(queryInterval))).context(ImmutableMap.of(\"If-None-Match\",\"aVJV29CJY93rszVW/QBy0arWZo0=\")).build()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Object etag1 = responseContext.get(\"ETag\")@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "getDefaultQueryRunner().run(QueryPlus.wrap(query),responseContext)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "getDefaultQueryRunner().run(QueryPlus.wrap(query),responseContext)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final Object etag2 = responseContext.get(\"ETag\")@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "final Interval interval = Intervals.of(\"2016-01-01/2016-01-02\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final TimeBoundaryQuery query2 = Druids.newTimeBoundaryQueryBuilder().dataSource(DATA_SOURCE).intervals(new MultipleIntervalSegmentSpec(ImmutableList.of(queryInterval2))).context(ImmutableMap.of(\"If-None-Match\",\"aVJV29CJY93rszVW/QBy0arWZo0=\")).build()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final Object etag2 = responseContext.get(ResponseContext.Key.ETAG)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "ResponseContext responseContext = ResponseContext.createEmpty()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final ResponseContext responseContext = ResponseContext.createEmpty()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final DataSegment dataSegment = new DataSegment(\"dataSource\",interval,\"ver\",ImmutableMap.of(\"type\",\"hdfs\",\"path\",\"/tmp\"),ImmutableList.of(\"product\"),ImmutableList.of(\"visited_sum\"),NoneShardSpec.instance(),9,12334)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "getDefaultQueryRunner().run(QueryPlus.wrap(query2),responseContext)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "selector.addServerAndUpdateSegment(new QueryableDruidServer(servers(0(,null),dataSegment)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final ServerSelector selector = new ServerSelector(dataSegment,new HighestPriorityTierSelectorStrategy(new RandomServerSelectorStrategy()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testEtagforDifferentQueryInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "Interval interval = Intervals.of(\"2016/2017\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testEtagforDifferentQueryInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "timeline.add(interval,\"ver\",new SingleElementPartitionChunk<>(selector))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(\"MDs2yIUvYLVzaG6zmwTH1plqaYE=\",responseContext.get(ResponseContext.CTX_ETAG))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testIfNoneMatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertNotEquals(etag1,etag2)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final Interval queryInterval2 = Intervals.of(\"2016-01-01T18:00:00/2016-01-02T18:00:00\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TimeBoundaryQuery query = Druids.newTimeBoundaryQueryBuilder().dataSource(DATA_SOURCE).intervals(new MultipleIntervalSegmentSpec(ImmutableList.of(interval))).context(ImmutableMap.of(\"If-None-Match\",\"aVJV29CJY93rszVW/QBy0arWZo0=\")).build()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
0->3 [style = bold, label=""];
17->8 [style = bold, label=""];
23->20 [style = bold, label=""];
7->11 [style = bold, label=""];
15->7 [style = bold, label=""];
5->2 [style = solid, label="query2"];
11->14 [style = bold, label=""];
14->23 [style = solid, label="responseContext"];
4->17 [style = dashed, label="0"];
21->15 [style = bold, label=""];
18->8 [style = solid, label="etag1"];
3->18 [style = dashed, label="0"];
12->15 [style = bold, label=""];
7->14 [style = solid, label="selector"];
4->8 [style = solid, label="etag2"];
6->0 [style = bold, label=""];
22->7 [style = solid, label="interval"];
18->2 [style = bold, label=""];
15->7 [style = solid, label="dataSegment"];
2->4 [style = bold, label=""];
21->7 [style = solid, label="selector"];
1->22 [style = dashed, label="0"];
24->21 [style = solid, label="dataSegment"];
22->24 [style = solid, label="interval"];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
14->23 [style = bold, label=""];
16->1 [style = bold, label=""];
24->21 [style = bold, label=""];
6->0 [style = solid, label="responseContext"];
10->12 [style = bold, label=""];
1->15 [style = solid, label="interval"];
24->15 [style = solid, label="dataSegment"];
3->20 [style = dashed, label="0"];
13->5 [style = bold, label=""];
17->8 [style = solid, label="etag2"];
4->8 [style = bold, label=""];
0->18 [style = bold, label=""];
13->0 [style = solid, label="query"];
6->2 [style = solid, label="responseContext"];
3->8 [style = solid, label="etag1"];
11->23 [style = solid, label="query"];
14->13 [style = bold, label=""];
22->24 [style = bold, label=""];
1->14 [style = solid, label="interval"];
9->1 [style = bold, label=""];
15->11 [style = solid, label="dataSegment"];
1->10 [style = bold, label=""];
19->22 [style = bold, label=""];
13->11 [style = dashed, label="0"];
}
