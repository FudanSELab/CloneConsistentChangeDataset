digraph {
7 [style = filled, label = "ConfigData configData2 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TestResource resource1 = new TestResource(\"r1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(loaded).containsExactly(configData2,configData1)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location2,this.profiles)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location2,resource2,false)))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location1,this.profiles)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location1,resource1,false)))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Collection<ConfigData> loaded1and2 = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,this.loaderContext,locations1and2).values()@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertThat(loaded2and3).containsExactly(configData3)@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ConfigDataImporter importer = new ConfigDataImporter(this.logFactory,ConfigDataNotFoundAction.FAIL,this.resolvers,this.loaders)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location1,this.profiles,true)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location1,resource1,false)))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "ConfigDataLocation location1 = ConfigDataLocation.of(\"test1\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "given(this.loaders.load(this.loaderContext,resource3)).willReturn(configData3)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "loadImportsWhenAlreadyImportedLocationSkipsLoad['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "given(this.loaders.load(this.loaderContext,resource2)).willReturn(configData2)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ConfigDataLocation location3 = ConfigDataLocation.of(\"test3\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<ConfigDataLocation> locations1and2 = Arrays.asList(location1,location2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Collection<ConfigData> loaded2and3 = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,this.loaderContext,locations2and3,true).values()@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "TestResource resource3 = new TestResource(\"r3\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location2,this.profiles,true)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location2,resource2,false)))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "loadImportsWhenAlreadyImportedLocationSkipsLoad['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Collection<ConfigData> loaded2and3 = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,this.loaderContext,locations2and3).values()@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "ConfigDataLocation location2 = ConfigDataLocation.of(\"test2\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "loadImportsResolvesAndLoadsLocations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "ConfigData configData1 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ConfigData configData3 = new ConfigData(Collections.singleton(new MockPropertySource()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Collection<ConfigData> loaded1and2 = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,this.loaderContext,locations1and2,true).values()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "TestResource resource2 = new TestResource(\"r2\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location3,this.profiles)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location3,resource3,false)))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "Collection<ConfigData> loaded = importer.resolveAndLoad(this.activationContext,this.locationResolverContext,this.loaderContext,Arrays.asList(location1,location2)).values()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "given(this.loaders.load(this.loaderContext,resource1)).willReturn(configData1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(loaded1and2).containsExactly(configData2,configData1)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "given(this.resolvers.resolve(this.locationResolverContext,location3,this.profiles,true)).willReturn(Collections.singletonList(new ConfigDataResolutionResult(location3,resource3,false)))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "List<ConfigDataLocation> locations2and3 = Arrays.asList(location2,location3)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->3 [style = solid, label="configData3"];
6->27 [style = solid, label="resource2"];
13->10 [style = bold, label=""];
17->10 [style = bold, label=""];
16->0 [style = bold, label=""];
15->23 [style = dashed, label="0"];
12->5 [style = bold, label=""];
28->10 [style = bold, label=""];
24->2 [style = bold, label=""];
18->8 [style = solid, label="location2"];
11->14 [style = bold, label=""];
7->12 [style = bold, label=""];
19->5 [style = solid, label="resource1"];
4->13 [style = solid, label="resource3"];
8->19 [style = bold, label=""];
6->21 [style = bold, label=""];
6->17 [style = solid, label="resource2"];
12->9 [style = solid, label="configData3"];
2->3 [style = bold, label=""];
27->28 [style = bold, label=""];
29->31 [style = bold, label=""];
18->17 [style = solid, label="location2"];
22->28 [style = solid, label="location3"];
18->27 [style = solid, label="location2"];
18->19 [style = bold, label=""];
4->21 [style = bold, label=""];
4->28 [style = solid, label="resource3"];
21->2 [style = solid, label="configData1"];
5->25 [style = dashed, label="0"];
7->11 [style = solid, label="configData2"];
15->29 [style = dashed, label="0"];
19->25 [style = solid, label="resource1"];
21->10 [style = solid, label="configData1"];
19->6 [style = bold, label=""];
5->17 [style = bold, label=""];
11->9 [style = bold, label=""];
7->2 [style = solid, label="configData2"];
22->8 [style = solid, label="location3"];
13->28 [style = dashed, label="0"];
25->27 [style = bold, label=""];
6->4 [style = bold, label=""];
26->0 [style = bold, label=""];
20->8 [style = bold, label=""];
23->24 [style = bold, label=""];
18->22 [style = bold, label=""];
10->11 [style = bold, label=""];
7->5 [style = bold, label=""];
0->20 [style = solid, label="location1"];
14->23 [style = bold, label=""];
22->20 [style = bold, label=""];
18->20 [style = solid, label="location2"];
1->24 [style = dashed, label="0"];
12->25 [style = bold, label=""];
9->14 [style = bold, label=""];
14->29 [style = bold, label=""];
21->7 [style = bold, label=""];
0->18 [style = bold, label=""];
14->15 [style = bold, label=""];
17->13 [style = bold, label=""];
1->2 [style = bold, label=""];
30->0 [style = bold, label=""];
7->31 [style = solid, label="configData2"];
22->13 [style = solid, label="location3"];
0->5 [style = solid, label="location1"];
21->31 [style = solid, label="configData1"];
0->25 [style = solid, label="location1"];
15->1 [style = bold, label=""];
17->27 [style = dashed, label="0"];
}
