digraph {
20 [style = filled, label = "assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "givenEmptyWorkingDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(locatorState.getLogFile()).isNull()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(serverState.getClasspath()).isNull()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(serverState.getUptime().intValue()).isEqualTo(0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(locatorState.getMemberName()).isNull()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(serverState.getLogFile()).isNull()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(serverState.getStatus()).isEqualTo(NOT_RESPONDING)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(serverState.getPid()).isNull()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(locatorState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(serverState.getMemberName()).isNull()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(locatorState.getStatus()).isEqualTo(NOT_RESPONDING)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(locatorState.getClasspath()).isNull()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(locatorState.getPid()).isNull()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(locatorState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "statusWithEmptyWorkingDirectoryReturnsNotRespondingWithDetails['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "statusWithEmptyWorkingDirectoryReturnsNotRespondingWithDetails['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(locatorState.getUptime().intValue()).isEqualTo(0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "LocatorState locatorState = new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "statusWithEmptyWorkingDirectoryReturnsNotRespondingWithDetails['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "ServerState serverState = new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->21 [style = bold, label=""];
25->23 [style = bold, label=""];
26->22 [style = bold, label=""];
1->9 [style = bold, label=""];
8->5 [style = bold, label=""];
8->18 [style = dashed, label="0"];
3->22 [style = dashed, label="0"];
7->10 [style = bold, label=""];
2->7 [style = bold, label=""];
13->0 [style = bold, label=""];
1->20 [style = dashed, label="0"];
19->20 [style = bold, label=""];
4->11 [style = bold, label=""];
20->15 [style = bold, label=""];
17->19 [style = bold, label=""];
9->2 [style = bold, label=""];
16->0 [style = bold, label=""];
12->1 [style = bold, label=""];
14->0 [style = bold, label=""];
0->8 [style = bold, label=""];
15->24 [style = bold, label=""];
11->6 [style = bold, label=""];
11->23 [style = dashed, label="0"];
4->25 [style = dashed, label="0"];
10->3 [style = bold, label=""];
2->24 [style = dashed, label="0"];
21->26 [style = bold, label=""];
22->25 [style = bold, label=""];
12->19 [style = dashed, label="0"];
9->15 [style = dashed, label="0"];
10->26 [style = dashed, label="0"];
18->17 [style = bold, label=""];
5->12 [style = bold, label=""];
5->17 [style = dashed, label="0"];
0->18 [style = bold, label=""];
3->4 [style = bold, label=""];
}
