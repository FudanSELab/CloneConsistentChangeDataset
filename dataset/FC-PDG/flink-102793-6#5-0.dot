digraph {
40 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(1),null,null)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(1,timeAdaptor.numTimers(testHarness))@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Integer,Void> testHarness = createWindowOperator(mockAssigner,mockTrigger,0L,mockWindowFunction)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,17)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testTimerFiring['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "WindowAssigner<Integer,TimeWindow> mockAssigner = mockTimeWindowAssigner()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "InternalWindowFunction<Iterable<Integer>,Void,Integer,TimeWindow> mockWindowFunction = mockWindowFunction()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(2,timeAdaptor.numTimers(testHarness))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "timeAdaptor.setIsEventTime(mockAssigner)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(1),2L,new TimeWindow(0,100))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "TimeDomainAdaptor timeAdaptor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "when(mockAssigner.assignWindows(anyInt(),anyLong(),anyAssignerContext())).thenReturn(Arrays.asList(new TimeWindow(0,100)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,42)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testDeletedTimerDoesNotFire['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TimeDomainAdaptor timeAdaptor@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "testHarness.open()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "timeAdaptor.advanceTime(testHarness,42)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,atLeastOnce(),1L,new TimeWindow(0,100))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(3,timeAdaptor.numTimers(testHarness))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Trigger<Integer,TimeWindow> mockTrigger = mockTrigger()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "timeAdaptor.advanceTime(testHarness,15)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(3),null,null)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(1,timeAdaptor.numTimers(testHarness))@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "TimeDomainAdaptor timeAdaptor@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,2)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "timeAdaptor.advanceTime(testHarness,1)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(1,timeAdaptor.numTimers(testHarness))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(1),null,null)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testDeletedTimerDoesNotFire['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,atLeastOnce(),17L,new TimeWindow(0,100))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(0),1L,null)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "timeAdaptor.shouldDeleteTimerOnElement(mockTrigger,1)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "timeAdaptor.advanceTime(testHarness,50L)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(4,timeAdaptor.numTimers(testHarness))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(2,timeAdaptor.numTimers(testHarness))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(0,timeAdaptor.numTimers(testHarness))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,atLeastOnce(),42L,new TimeWindow(0,100))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->17 [style = bold, label=""];
5->10 [style = bold, label=""];
3->10 [style = solid, label="testHarness"];
6->23 [style = solid, label="mockTrigger"];
6->4 [style = solid, label="mockTrigger"];
6->29 [style = solid, label="mockTrigger"];
6->35 [style = solid, label="mockTrigger"];
16->13 [style = bold, label=""];
10->18 [style = bold, label=""];
6->26 [style = solid, label="mockTrigger"];
32->5 [style = bold, label=""];
9->0 [style = bold, label=""];
7->31 [style = dashed, label="0"];
28->30 [style = bold, label=""];
19->12 [style = bold, label=""];
37->27 [style = bold, label=""];
3->21 [style = solid, label="testHarness"];
3->20 [style = solid, label="testHarness"];
12->21 [style = bold, label=""];
6->5 [style = solid, label="mockTrigger"];
3->27 [style = solid, label="testHarness"];
6->2 [style = solid, label="mockTrigger"];
21->19 [style = dashed, label="0"];
6->3 [style = solid, label="mockTrigger"];
22->9 [style = bold, label=""];
6->0 [style = solid, label="mockTrigger"];
3->11 [style = bold, label=""];
18->19 [style = bold, label=""];
22->29 [style = bold, label=""];
3->36 [style = solid, label="testHarness"];
6->37 [style = solid, label="mockTrigger"];
38->36 [style = bold, label=""];
25->24 [style = dotted, label="true"];
26->40 [style = bold, label=""];
15->7 [style = dotted, label="true"];
15->16 [style = bold, label=""];
25->16 [style = bold, label=""];
5->38 [style = bold, label=""];
39->33 [style = bold, label=""];
20->4 [style = bold, label=""];
14->26 [style = dashed, label="0"];
6->18 [style = solid, label="mockTrigger"];
33->23 [style = bold, label=""];
23->28 [style = bold, label=""];
2->23 [style = bold, label=""];
34->31 [style = dotted, label="true"];
8->20 [style = bold, label=""];
40->39 [style = bold, label=""];
3->19 [style = solid, label="testHarness"];
16->3 [style = solid, label="mockAssigner"];
30->35 [style = bold, label=""];
9->29 [style = dashed, label="0"];
35->37 [style = bold, label=""];
7->24 [style = dashed, label="0"];
12->36 [style = dashed, label="0"];
19->26 [style = bold, label=""];
29->32 [style = bold, label=""];
34->16 [style = bold, label=""];
17->3 [style = solid, label="mockWindowFunction"];
3->12 [style = solid, label="testHarness"];
21->14 [style = bold, label=""];
17->3 [style = bold, label=""];
23->1 [style = bold, label=""];
3->9 [style = solid, label="testHarness"];
6->30 [style = solid, label="mockTrigger"];
11->8 [style = bold, label=""];
6->40 [style = solid, label="mockTrigger"];
14->2 [style = bold, label=""];
10->5 [style = dashed, label="0"];
16->13 [style = solid, label="mockAssigner"];
6->14 [style = solid, label="mockTrigger"];
13->6 [style = bold, label=""];
3->28 [style = solid, label="testHarness"];
36->19 [style = bold, label=""];
4->22 [style = bold, label=""];
3->33 [style = solid, label="testHarness"];
3->39 [style = solid, label="testHarness"];
0->5 [style = bold, label=""];
3->1 [style = solid, label="testHarness"];
}
