digraph {
5 [style = filled, label = "Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expected.remove()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "getIdFetchersReturnsAllFetcherDerivingFromIdFetcher['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(expected,getClasses(idFetchers))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Set<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "ClassInfoList controlClasses = scanResult.getClassesImplementing(.getCanonicalName())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "expected.remove()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ClassInfoList controlClasses = scanResult.getClassesImplementing(.getCanonicalName())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(expected,getClasses(searchBasedFetchers))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "expected.remove()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Set<IdFetcher<?>> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "getIdFetchersReturnsAllFetcherDerivingFromIdFetcher['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7->1 [style = bold, label=""];
14->11 [style = solid, label="searchBasedFetchers"];
6->0 [style = solid, label="idFetchers"];
14->10 [style = bold, label=""];
8->6 [style = bold, label=""];
1->0 [style = bold, label=""];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
4->7 [style = bold, label=""];
7->0 [style = solid, label="expected"];
12->13 [style = bold, label=""];
5->1 [style = bold, label=""];
6->4 [style = bold, label=""];
1->12 [style = dashed, label="0"];
10->5 [style = bold, label=""];
2->14 [style = dashed, label="0"];
3->2 [style = bold, label=""];
5->12 [style = bold, label=""];
9->14 [style = bold, label=""];
2->6 [style = dashed, label="0"];
2->0 [style = solid, label="idFetchers"];
5->11 [style = solid, label="expected"];
5->7 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
5->0 [style = solid, label="expected"];
4->5 [style = bold, label=""];
}
