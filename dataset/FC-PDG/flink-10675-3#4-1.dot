digraph {
11 [style = filled, label = "createDynamicTableSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this,context)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "validateConsumerProperties(tableOptions.get(KinesisOptions.STREAM),properties)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return new KinesisDynamicSource(physicalDataType,tableOptions.get(KinesisOptions.STREAM),properties,decodingFormat)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "createDynamicTableSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "EncodingFormat<SerializationSchema<RowData>> encodingFormat = helper.discoverEncodingFormat(,FactoryUtil.FORMAT)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Properties properties = KinesisOptions.getConsumerProperties(catalogTable.getOptions())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ResolvedCatalogTable catalogTable = context.getCatalogTable()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Context context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "CatalogTable catalogTable = context.getCatalogTable()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ReadableConfig tableOptions = helper.getOptions()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "helper.validateExcept(KinesisOptions.NON_VALIDATED_PREFIXES)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Properties properties = KinesisOptions.getProducerProperties(catalogTable.getOptions())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "validateProducerProperties(properties)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return new KinesisDynamicSource(catalogTable.getSchema().toPhysicalRowDataType(),tableOptions.get(KinesisOptions.STREAM),properties,decodingFormat)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Context context@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DataType physicalDataType = catalogTable.getResolvedSchema().toPhysicalRowDataType()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "DecodingFormat<DeserializationSchema<RowData>> decodingFormat = helper.discoverDecodingFormat(,FactoryUtil.FORMAT)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "createDynamicTableSink['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return new KinesisDynamicSink(catalogTable.getSchema().toPhysicalRowDataType(),tableOptions.get(KinesisOptions.STREAM),properties,encodingFormat,KinesisOptions.getKinesisPartitioner(tableOptions,catalogTable,context.getClassLoader()))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "validateKinesisPartitioner(tableOptions,catalogTable)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
4->10 [style = bold, label=""];
0->19 [style = solid, label="catalogTable"];
18->3 [style = bold, label=""];
9->10 [style = dashed, label="0"];
17->16 [style = solid, label="properties"];
7->18 [style = dashed, label="0"];
2->4 [style = solid, label="properties"];
17->19 [style = solid, label="properties"];
11->1 [style = bold, label=""];
0->17 [style = bold, label=""];
0->2 [style = bold, label=""];
6->12 [style = bold, label=""];
8->1 [style = solid, label="context"];
14->1 [style = solid, label="context"];
6->20 [style = solid, label="tableOptions"];
6->0 [style = bold, label=""];
18->19 [style = solid, label="encodingFormat"];
0->12 [style = dashed, label="0"];
7->13 [style = solid, label="decodingFormat"];
15->14 [style = dotted, label="true"];
16->19 [style = bold, label=""];
6->19 [style = solid, label="tableOptions"];
8->14 [style = dashed, label="0"];
2->17 [style = dashed, label="0"];
3->4 [style = bold, label=""];
7->3 [style = bold, label=""];
5->1 [style = bold, label=""];
7->9 [style = solid, label="decodingFormat"];
12->2 [style = bold, label=""];
3->20 [style = bold, label=""];
1->6 [style = bold, label=""];
20->16 [style = bold, label=""];
10->13 [style = bold, label=""];
11->8 [style = dotted, label="true"];
10->13 [style = solid, label="physicalDataType"];
2->7 [style = bold, label=""];
5->8 [style = dotted, label="true"];
2->13 [style = solid, label="properties"];
17->18 [style = bold, label=""];
2->9 [style = solid, label="properties"];
15->1 [style = bold, label=""];
0->20 [style = solid, label="catalogTable"];
}
