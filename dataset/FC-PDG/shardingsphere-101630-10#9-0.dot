digraph {
5 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@16@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "each instanceof ValidateConstraintDefinitionSegment@@@19@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "result.getAddConstraintDefinitions().add((AddConstraintDefinitionSegment)each)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "each instanceof ColumnDefinitionSegment@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "null != ctx.alterDefinitionClause()@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "visitCreateTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "result.getValidateConstraintDefinitions().add((ValidateConstraintDefinitionSegment)each)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "((CollectionValue<AlterDefinitionSegment>)visit(ctx.alterDefinitionClause())).getValue()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "MySQLCreateTableStatement result = new MySQLCreateTableStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "each instanceof AddConstraintDefinitionSegment@@@16@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "result.setRenameTable(((RenameTableDefinitionSegment)each).getRenameTable())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "result.getColumnDefinitions().add((ColumnDefinitionSegment)each)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "each instanceof ModifyColumnDefinitionSegment@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "result.getDropConstraintDefinitions().add((DropConstraintDefinitionSegment)each)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "result.getAddColumnDefinitions().add((AddColumnDefinitionSegment)each)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final AlterTableContext ctx@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "null != ctx.createDefinitionClause()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "result.getConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "((CollectionValue<AlterDefinitionSegment>)visit(ctx.alterDefinitionClause())).getValue()@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "each instanceof DropConstraintDefinitionSegment@@@25@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "each instanceof RenameTableDefinitionSegment@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "CreateDefinitionSegment each@@@8@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return result@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final CreateTableContext ctx@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableName()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "each instanceof ModifyConstraintDefinitionSegment@@@22@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "result.getAddConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "result.getDropColumnDefinitions().add((DropColumnDefinitionSegment)each)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "result.getModifyColumnDefinitions().add((ModifyColumnDefinitionSegment)each)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableNameClause().tableName()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "each instanceof DropColumnDefinitionSegment@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "CollectionValue<CreateDefinitionSegment> createDefinitions = (CollectionValue<CreateDefinitionSegment>)visit(ctx.createDefinitionClause())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "each instanceof AddColumnDefinitionSegment@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "PostgreSQLAlterTableStatement result = new PostgreSQLAlterTableStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "result.getModifyConstraintDefinitions().add((ModifyConstraintDefinitionSegment)each)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "AlterDefinitionSegment each@@@6@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "result.setContainsNotExistClause(null != ctx.notExistClause())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "visitAlterTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "createDefinitions.getValue()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "visitAlterTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "return result@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
12->5 [style = bold, label=""];
19->26 [style = dotted, label="false"];
11->14 [style = bold, label=""];
28->38 [style = bold, label=""];
5->11 [style = dotted, label="false"];
6->38 [style = dashed, label="0"];
25->14 [style = bold, label=""];
32->34 [style = bold, label=""];
33->39 [style = dotted, label="false"];
20->27 [style = bold, label=""];
7->14 [style = bold, label=""];
12->10 [style = bold, label=""];
38->30 [style = bold, label=""];
2->14 [style = bold, label=""];
11->13 [style = bold, label=""];
9->14 [style = bold, label=""];
35->37 [style = dotted, label="true"];
16->28 [style = dashed, label="0"];
27->18 [style = dotted, label="true"];
22->13 [style = bold, label=""];
21->13 [style = bold, label=""];
13->8 [style = dotted, label="false"];
10->14 [style = bold, label=""];
31->40 [style = dotted, label="true"];
13->29 [style = dashed, label="0"];
39->34 [style = bold, label=""];
16->6 [style = bold, label=""];
7->13 [style = dotted, label="true"];
31->29 [style = bold, label=""];
33->41 [style = bold, label=""];
3->22 [style = dashed, label="0"];
5->3 [style = dotted, label="true"];
31->33 [style = dotted, label="true"];
28->34 [style = solid, label="result"];
35->28 [style = bold, label=""];
7->23 [style = dotted, label="true"];
27->11 [style = bold, label=""];
12->10 [style = dotted, label="true"];
1->16 [style = bold, label=""];
19->26 [style = bold, label=""];
1->15 [style = dotted, label="true"];
19->22 [style = dotted, label="true"];
5->11 [style = bold, label=""];
3->32 [style = dashed, label="0"];
6->7 [style = bold, label=""];
22->14 [style = bold, label=""];
7->17 [style = dotted, label="true"];
31->29 [style = dotted, label="true"];
19->22 [style = bold, label=""];
26->20 [style = bold, label=""];
16->14 [style = solid, label="result"];
27->18 [style = bold, label=""];
26->20 [style = dotted, label="false"];
4->14 [style = bold, label=""];
11->4 [style = bold, label=""];
4->13 [style = bold, label=""];
11->4 [style = dotted, label="true"];
7->0 [style = dotted, label="true"];
32->33 [style = bold, label=""];
31->34 [style = bold, label=""];
39->33 [style = bold, label=""];
20->27 [style = dotted, label="false"];
13->2 [style = dotted, label="true"];
10->13 [style = bold, label=""];
30->31 [style = bold, label=""];
39->32 [style = bold, label=""];
27->11 [style = dotted, label="false"];
33->41 [style = dotted, label="true"];
41->33 [style = bold, label=""];
8->9 [style = dotted, label="true"];
5->19 [style = dashed, label="0"];
41->34 [style = bold, label=""];
8->12 [style = bold, label=""];
13->2 [style = bold, label=""];
21->14 [style = bold, label=""];
12->19 [style = dotted, label="false"];
7->13 [style = bold, label=""];
8->12 [style = dotted, label="false"];
25->13 [style = bold, label=""];
26->25 [style = dotted, label="true"];
15->37 [style = dashed, label="0"];
26->25 [style = bold, label=""];
3->14 [style = bold, label=""];
20->21 [style = dotted, label="true"];
12->5 [style = dotted, label="false"];
2->13 [style = bold, label=""];
20->21 [style = bold, label=""];
24->16 [style = bold, label=""];
29->33 [style = bold, label=""];
33->39 [style = bold, label=""];
39->32 [style = dotted, label="true"];
7->30 [style = dashed, label="0"];
24->15 [style = dotted, label="true"];
8->9 [style = bold, label=""];
18->13 [style = bold, label=""];
3->13 [style = bold, label=""];
2->40 [style = dashed, label="0"];
13->8 [style = bold, label=""];
12->19 [style = bold, label=""];
18->14 [style = bold, label=""];
31->36 [style = dotted, label="true"];
9->13 [style = bold, label=""];
}
