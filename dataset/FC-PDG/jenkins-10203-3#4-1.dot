digraph {
22 [style = filled, label = "assertThat(result.stdout(),containsString(\"Builds: 1,2\" + System.lineSeparator()))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(result.stdout(),containsString(\"Builds: 1,2,4\" + System.lineSeparator()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(result,succeeded())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(result,succeeded())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(result.stdout(),containsString(\"Builds: 1,2\" + System.lineSeparator()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(result,succeeded())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,1\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(result,succeeded())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(result.stdout(),containsString(\"Builds: 1,2\" + System.lineSeparator()))@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(result.stdout(),containsString(\"Builds: \" + System.lineSeparator()))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"0\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(result.stdout(),containsString(\"Builds: 1,2\" + System.lineSeparator()))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(result.stdout(),containsString(\"Builds: \" + System.lineSeparator()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,2,0\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "dummyRangeNumberSingleShouldSuccessIfBuildNumberIsZero['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "dummyRangeNumberSingleShouldSuccessIfBuildNumberIsZero['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(result,succeeded())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(result,succeeded())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"+0\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "dummyRangeNumberMultiShouldSuccess['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,0,2\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(result.stdout(),containsString(\"Builds: 1,1\" + System.lineSeparator()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"0,1,2\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,+2,4\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,2\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
21->24 [style = solid, label="result"];
15->23 [style = bold, label=""];
1->4 [style = bold, label=""];
23->16 [style = bold, label=""];
7->1 [style = bold, label=""];
24->19 [style = bold, label=""];
9->11 [style = bold, label=""];
10->14 [style = bold, label=""];
8->18 [style = bold, label=""];
0->17 [style = bold, label=""];
3->18 [style = dashed, label="0"];
17->9 [style = bold, label=""];
0->2 [style = bold, label=""];
14->22 [style = bold, label=""];
22->21 [style = bold, label=""];
11->12 [style = bold, label=""];
21->24 [style = bold, label=""];
1->4 [style = solid, label="result"];
20->4 [style = solid, label="result"];
2->17 [style = dashed, label="0"];
3->0 [style = bold, label=""];
20->4 [style = bold, label=""];
18->0 [style = solid, label="result"];
1->20 [style = dashed, label="0"];
6->1 [style = bold, label=""];
9->11 [style = solid, label="result"];
12->10 [style = bold, label=""];
3->0 [style = solid, label="result"];
10->14 [style = solid, label="result"];
15->23 [style = solid, label="result"];
5->8 [style = dashed, label="0"];
4->8 [style = bold, label=""];
19->15 [style = bold, label=""];
4->5 [style = bold, label=""];
18->0 [style = bold, label=""];
13->20 [style = bold, label=""];
}
