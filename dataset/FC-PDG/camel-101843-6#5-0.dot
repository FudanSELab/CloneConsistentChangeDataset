digraph {
53 [style = filled, label = "assertTrue(status.getAdded().contains(filenameBranchToAdd))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "branchCreated = true@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "boolean tagCreated = false@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "tagCreated = true@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(added.getExchanges().size(),1)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Git git = new Git(repository)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(tagCreated,true)@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "repository.close()@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "git.add().addFilepattern(filenameToAdd).call()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "boolean tagCreated = false@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Git git = getGitTestRepository()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "MockEndpoint added = getMockEndpoint(\"mock:result-tag\")@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(\"refs/tags/\" + tagTest,exchange.getOut().getBody().getName())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "repository.close()@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "status = template.requestBody(\"direct:status-branch\",\"\",)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "template.sendBody(\"direct:create-tag\",\"\")@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "mockResultTag.expectedMessageCount(1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(tagCreated,true)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "refInternal.getName().equals(\"refs/tags/\" + tagTest)@@@18@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "git.tag().setName(tagTest).call()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "git.commit().setMessage(commitMessage).call()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "assertEquals(branchCreated,true)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "MockEndpoint mockResultTag = getMockEndpoint(\"mock:result-tag\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "refInternal.getName().equals(\"refs/heads/\" + branchTest)@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "refInternal.getName().equals(\"refs/tags/\" + tagTest)@@@27@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "File fileToAddDifferent = new File(gitLocalRepo,filenameBranchToAdd)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<Ref> ref = git.tagList().call()@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "mockResultTag.assertIsSatisfied()@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "template.sendBody(\"direct:create-branch\",\"\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "boolean branchCreated = false@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "List<Ref> ref = git.branchList().call()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "fileToAddDifferent.createNewFile()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "tagConsumerTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "fileToAdd.createNewFile()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "statusBranchTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "fileToAdd.createNewFile()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "template.send(\"direct:add-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameBranchToAdd)}})@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Status status = template.requestBody(\"direct:status\",\"\",)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "git.close()@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "Exchange exchange = mockResultTag.getExchanges().get(0)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "tagConsumerTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Status status = git.status().call()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Repository repository = getTestRepository()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Thread.sleep(1 * 5000)@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessage)}})@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "tagCreated = true@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2->17 [style = bold, label=""];
23->31 [style = bold, label=""];
45->41 [style = bold, label=""];
20->6 [style = solid, label="tagCreated"];
30->24 [style = bold, label=""];
15->10 [style = bold, label=""];
16->13 [style = bold, label=""];
12->5 [style = bold, label=""];
12->28 [style = bold, label=""];
27->12 [style = bold, label=""];
4->25 [style = bold, label=""];
20->9 [style = bold, label=""];
29->39 [style = bold, label=""];
46->43 [style = bold, label=""];
20->51 [style = dashed, label="0"];
6->18 [style = bold, label=""];
26->36 [style = bold, label=""];
28->38 [style = bold, label=""];
4->19 [style = bold, label=""];
53->42 [style = bold, label=""];
37->21 [style = bold, label=""];
44->7 [style = bold, label=""];
48->50 [style = bold, label=""];
50->51 [style = dotted, label="true"];
10->3 [style = bold, label=""];
9->20 [style = bold, label=""];
11->12 [style = bold, label=""];
0->26 [style = dashed, label="0"];
0->47 [style = dashed, label="0"];
1->0 [style = bold, label=""];
20->6 [style = bold, label=""];
6->40 [style = dashed, label="0"];
8->24 [style = dashed, label="0"];
7->52 [style = bold, label=""];
36->33 [style = bold, label=""];
51->40 [style = solid, label="branchCreated"];
31->34 [style = bold, label=""];
9->6 [style = bold, label=""];
32->29 [style = bold, label=""];
33->0 [style = bold, label=""];
3->9 [style = bold, label=""];
39->30 [style = bold, label=""];
19->44 [style = bold, label=""];
5->1 [style = bold, label=""];
51->40 [style = bold, label=""];
25->32 [style = solid, label="tagCreated"];
21->37 [style = bold, label=""];
37->32 [style = solid, label="tagCreated"];
1->47 [style = bold, label=""];
51->50 [style = bold, label=""];
0->4 [style = bold, label=""];
50->51 [style = bold, label=""];
52->48 [style = bold, label=""];
50->40 [style = bold, label=""];
21->32 [style = bold, label=""];
43->53 [style = bold, label=""];
9->20 [style = dotted, label="true"];
9->50 [style = dashed, label="0"];
37->32 [style = bold, label=""];
49->2 [style = bold, label=""];
7->15 [style = bold, label=""];
41->46 [style = bold, label=""];
21->37 [style = dotted, label="true"];
14->2 [style = bold, label=""];
40->45 [style = bold, label=""];
13->8 [style = bold, label=""];
38->22 [style = bold, label=""];
22->35 [style = bold, label=""];
19->7 [style = bold, label=""];
35->26 [style = bold, label=""];
47->4 [style = bold, label=""];
2->7 [style = solid, label="repository"];
3->6 [style = solid, label="tagCreated"];
48->40 [style = solid, label="branchCreated"];
25->21 [style = bold, label=""];
13->30 [style = dashed, label="0"];
34->27 [style = bold, label=""];
17->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
