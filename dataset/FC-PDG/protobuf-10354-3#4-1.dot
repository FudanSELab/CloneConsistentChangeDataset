digraph {
2 [style = filled, label = "assertTrue(input.isAtEnd())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long ret = input.readInt64()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "readMapIntegerKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "return ret@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "readMapLongKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "input.skipField(input.readTag())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(WireFormat.makeTag(1,WireFormat.WIRETYPE_VARINT),tag)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int ret = input.readInt32()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CodedInputStream input@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "CodedInputStream input@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(input.isAtEnd()).isTrue()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(tag).isEqualTo(WireFormat.makeTag(1,WireFormat.WIRETYPE_VARINT))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "readMapIntegerKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int tag = input.readTag()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
12->5 [style = bold, label=""];
7->10 [style = bold, label=""];
12->0 [style = solid, label="ret"];
3->6 [style = bold, label=""];
1->4 [style = dotted, label="true"];
3->12 [style = bold, label=""];
9->7 [style = bold, label=""];
2->8 [style = dashed, label="0"];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
7->3 [style = bold, label=""];
6->12 [style = dashed, label="0"];
8->0 [style = bold, label=""];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
6->0 [style = solid, label="ret"];
13->7 [style = bold, label=""];
7->3 [style = solid, label="tag"];
9->4 [style = dotted, label="true"];
13->11 [style = dotted, label="true"];
3->10 [style = dashed, label="0"];
4->11 [style = dashed, label="0"];
}
