digraph {
7 [style = filled, label = "!fragmentIdToSeqToAddressMap.containsKey(scanNode.getFragmentId())@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "BucketSeqToScanRange bucketSeqToScanRange = fragmentIdBucketSeqToScanRangeMap.get(scanNode.getFragmentId())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "computeScanRangeAssignmentByColocate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "fragmentIdToSeqToAddressMap.put(scanNode.getFragmentId(),new HashedMap())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<TScanRangeParams> scanRangeParamsList = findOrInsert(scanRanges,scanNode.getId().asInt(),new ArrayList<TScanRangeParams>())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final OlapScanNode scanNode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<Integer,List<TScanRangeParams>> scanRanges = findOrInsert(bucketSeqToScanRange,bucketSeq,new HashMap<Integer,List<TScanRangeParams>>())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "scanRangeParamsList.add(scanRangeParams)@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Map<TNetworkAddress,Long> addressToBackendID@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "FragmentScanRangeAssignment assignment@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "scanRangeParams.scan_range = location.scan_range@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TScanRangeParams scanRangeParams = new TScanRangeParams()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "fragmentIdBucketSeqToScanRangeMap.put(scanNode.getFragmentId(),new BucketSeqToScanRange())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<TScanRangeLocations> locations = scanNode.bucketSeq2locations.get(bucketSeq)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final OlapScanNode scanNode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "!bucketSeqToAddress.containsKey(bucketSeq)@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ImmutableMap<Long,Backend> idToBackend@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "getExecHostPortForFragmentIDAndBucketSeq(locations.get(0),scanNode.getFragmentId(),bucketSeq,idToBackend,addressToBackendID)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "fragmentIdToBuckendIdBucketCountMap.put(scanNode.getFragmentId(),new HashMap<>())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "fragmentIdToBucketNumMap.put(scanNode.getFragmentId(),scanNode.getOlapTable().getDefaultDistributionInfo().getBucketNum())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Map<Integer,TNetworkAddress> bucketSeqToAddress = fragmentIdToSeqToAddressMap.get(scanNode.getFragmentId())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final OlapScanNode scanNode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "computeScanRangeAssignmentByColocate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "computeScanRangeAssignmentByBucket['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "getExecHostPortForFragmentIDAndBucketSeq(locations.get(0),scanNode.getFragmentId(),bucketSeq)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
2->0 [style = dotted, label="true"];
24->19 [style = bold, label=""];
9->11 [style = bold, label=""];
18->17 [style = solid, label="idToBackend"];
7->12 [style = bold, label=""];
7->19 [style = dotted, label="true"];
5->10 [style = dotted, label="true"];
2->3 [style = bold, label=""];
2->17 [style = dotted, label="true"];
9->8 [style = solid, label="scanRangeParams"];
8->3 [style = bold, label=""];
16->7 [style = bold, label=""];
3->4 [style = solid, label="scanRanges"];
12->24 [style = bold, label=""];
16->22 [style = dotted, label="true"];
20->1 [style = bold, label=""];
19->6 [style = bold, label=""];
12->6 [style = bold, label=""];
0->17 [style = dashed, label="0"];
7->24 [style = dotted, label="true"];
3->4 [style = bold, label=""];
21->17 [style = solid, label="addressToBackendID"];
13->15 [style = dashed, label="0"];
7->12 [style = dotted, label="true"];
14->7 [style = bold, label=""];
6->20 [style = bold, label=""];
8->1 [style = bold, label=""];
6->1 [style = bold, label=""];
14->15 [style = dotted, label="true"];
5->13 [style = dotted, label="true"];
2->0 [style = bold, label=""];
7->23 [style = dotted, label="true"];
7->23 [style = bold, label=""];
20->3 [style = solid, label="bucketSeqToScanRange"];
7->6 [style = bold, label=""];
17->3 [style = bold, label=""];
16->21 [style = dotted, label="true"];
11->8 [style = bold, label=""];
5->7 [style = bold, label=""];
23->12 [style = bold, label=""];
1->2 [style = bold, label=""];
13->22 [style = dashed, label="0"];
16->18 [style = dotted, label="true"];
}
