digraph {
21 [style = filled, label = "assertThat(watermarksForSource2.getLowWatermark(),equalTo(instant.plus(Duration.millis(3))))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "GlobalWatermarkHolder.add(1,new SparkWatermarks(instant.plus(Duration.millis(5)),instant.plus(Duration.millis(10)),instant))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "GlobalWatermarkHolder.advance()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "GlobalWatermarkHolder.add(2,new SparkWatermarks(instant.plus(Duration.millis(3)),instant.plus(Duration.millis(6)),instant))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "GlobalWatermarkHolder.add(1,new SparkWatermarks(instant.plus(Duration.millis(5)),instant.plus(Duration.millis(5)),instant))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "GlobalWatermarkHolder.advance(jsc)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "SparkWatermarks currentWatermarks = GlobalWatermarkHolder.get(0L).get(1)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Instant instant = new Instant(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SparkWatermarks currentWatermarks = GlobalWatermarkHolder.get().getValue().get(1)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "thrown.expect()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(watermarksForSource1.getLowWatermark(),equalTo(instant.plus(Duration.millis(5))))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(currentWatermarks.getSynchronizedProcessingTime(),equalTo(instant.plus(Duration.millis(100))))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(watermarksForSource2.getHighWatermark(),equalTo(instant.plus(Duration.millis(6))))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "GlobalWatermarkHolder.advance(jsc)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "GlobalWatermarkHolder.advance(jsc)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "GlobalWatermarkHolder.advance(jsc)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "GlobalWatermarkHolder.advance()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(currentWatermarks.getHighWatermark(),equalTo(instant.plus(Duration.millis(15))))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testMultiSource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "thrown.expectMessage(RegexMatcher.matches(\"Low watermark \" + INSTANT_PATTERN + \" cannot be later then high watermark \" + INSTANT_PATTERN))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "SparkWatermarks watermarksForSource1 = GlobalWatermarkHolder.get().getValue().get(1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testLowHighWatermarksAdvance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "JavaSparkContext jsc = SparkContextFactory.getSparkContext(options)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(watermarksForSource1.getHighWatermark(),equalTo(instant.plus(Duration.millis(10))))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(currentWatermarks.getLowWatermark(),equalTo(instant.plus(Duration.millis(10))))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "SparkWatermarks watermarksForSource2 = GlobalWatermarkHolder.get().getValue().get(2)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testLowHighWatermarksAdvance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "GlobalWatermarkHolder.advance()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "GlobalWatermarkHolder.add(1,new SparkWatermarks(instant.plus(Duration.millis(25)),instant.plus(Duration.millis(20)),instant.plus(Duration.millis(200))))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->25 [style = bold, label=""];
18->3 [style = bold, label=""];
15->13 [style = bold, label=""];
7->23 [style = dashed, label="0"];
12->5 [style = bold, label=""];
6->20 [style = dashed, label="0"];
20->26 [style = bold, label=""];
0->19 [style = dashed, label="0"];
3->14 [style = bold, label=""];
3->6 [style = solid, label="jsc"];
3->11 [style = solid, label="jsc"];
10->3 [style = bold, label=""];
28->13 [style = bold, label=""];
6->0 [style = bold, label=""];
3->9 [style = solid, label="jsc"];
14->28 [style = solid, label="instant"];
11->17 [style = dashed, label="0"];
4->22 [style = dashed, label="0"];
16->19 [style = bold, label=""];
5->17 [style = bold, label=""];
2->4 [style = bold, label=""];
13->16 [style = bold, label=""];
14->7 [style = bold, label=""];
23->28 [style = bold, label=""];
7->9 [style = bold, label=""];
19->1 [style = bold, label=""];
25->20 [style = bold, label=""];
26->27 [style = bold, label=""];
6->16 [style = dashed, label="0"];
14->23 [style = bold, label=""];
3->13 [style = solid, label="jsc"];
2->21 [style = dashed, label="0"];
21->22 [style = bold, label=""];
0->1 [style = bold, label=""];
14->7 [style = solid, label="instant"];
4->8 [style = bold, label=""];
7->15 [style = bold, label=""];
1->2 [style = bold, label=""];
5->11 [style = bold, label=""];
13->6 [style = bold, label=""];
27->21 [style = bold, label=""];
14->23 [style = solid, label="instant"];
24->3 [style = bold, label=""];
8->12 [style = bold, label=""];
9->15 [style = dashed, label="0"];
9->13 [style = bold, label=""];
}
