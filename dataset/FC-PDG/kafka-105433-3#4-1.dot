digraph {
8 [style = filled, label = "SourceRecord transformed = xformValue.apply(new SourceRecord(null,null,\"topic\",0,Schema.INT32_SCHEMA,42))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertEquals((short)42,transformed.value())@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SourceRecord transformed = xform.apply(new SourceRecord(null,null,\"topic\",0,Schema.INT32_SCHEMA,42))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "xform.configure(Collections.singletonMap(Cast.SPEC_CONFIG,\"int16\"))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "xformValue.configure(Collections.singletonMap(Cast.SPEC_CONFIG,\"int16\"))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "castWholeRecordValueWithSchemaInt16['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final Cast<SourceRecord> xform = new Cast.Value<>()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SourceRecord transformed = xform.apply(new SourceRecord(null,null,\"topic\",0,null,42))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "castWholeRecordValueWithSchemaInt16['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(Schema.Type.INT16,transformed.valueSchema().type())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "castWholeRecordValueSchemalessInt16['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertNull(transformed.valueSchema())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals((short)42,transformed.value())@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
5->10 [style = bold, label=""];
3->5 [style = bold, label=""];
12->3 [style = bold, label=""];
7->6 [style = bold, label=""];
0->11 [style = dashed, label="0"];
9->0 [style = bold, label=""];
4->10 [style = dashed, label="0"];
11->2 [style = bold, label=""];
5->4 [style = bold, label=""];
6->8 [style = bold, label=""];
4->0 [style = bold, label=""];
0->2 [style = bold, label=""];
8->9 [style = bold, label=""];
10->11 [style = bold, label=""];
}
