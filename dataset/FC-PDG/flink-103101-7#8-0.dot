digraph {
3 [style = filled, label = "printSink.invoke(\"hello world!\",SinkContextUtil.forTimestamp(0))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "printSink.setTargetToStandardErr()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"hello world!\" + line,arrayErrorStream.toString())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "printSink.setRuntimeContext(new MockStreamingRuntimeContext(false,2,1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testPrintSinkStdErr['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "printSink.setTargetToStandardOut()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(\"Print to System.out\",printSink.toString())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testPrintSinkWithPrefix['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "printSink.open(new Configuration())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "printSink.setRuntimeContext(new MockStreamingRuntimeContext(false,1,0))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "printSink.close()@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"2> hello world!\" + line,arrayOutputStream.toString())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "PrintSinkFunction<String> printSink = new PrintSinkFunction<>(true)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(\"Print to System.err\",printSink.toString())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testPrintSinkStdErr['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "PrintSinkFunction<String> printSink = new PrintSinkFunction<>()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->13 [style = dashed, label="0"];
4->3 [style = bold, label=""];
5->8 [style = bold, label=""];
3->1 [style = bold, label=""];
11->4 [style = bold, label=""];
6->11 [style = dashed, label="0"];
7->4 [style = bold, label=""];
3->12 [style = bold, label=""];
9->7 [style = bold, label=""];
0->15 [style = bold, label=""];
0->7 [style = bold, label=""];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
1->12 [style = dashed, label="0"];
2->0 [style = bold, label=""];
15->11 [style = bold, label=""];
14->0 [style = bold, label=""];
7->6 [style = bold, label=""];
7->15 [style = dashed, label="0"];
10->9 [style = bold, label=""];
0->9 [style = dashed, label="0"];
13->8 [style = bold, label=""];
}
