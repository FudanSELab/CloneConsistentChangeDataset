digraph {
16 [style = filled, label = "AsyncCallback asyncCallback2 = new MockAsyncCallback()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "TestBlockingSendReceive['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "AssertJUnit.assertEquals(asyncCallback.getMessageReplied().size(),1)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "AssertJUnit.assertTrue(asyncCallback2.isTimedOut())@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "AssertJUnit.assertTrue(asyncCallback.getMessageReplied().get(0).getRecord().getMapField(Message.Attributes.MESSAGE_RESULT.toString()).get(\"ReplyMessage\").equals(\"TestReplyMessage\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "cr.setSessionSpecific(false)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "msg.setMsgId(msgId)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "_participants(0(.getMessagingService().registerMessageHandlerFactory(factory.getMessageTypes(),factory)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "_participants(0(.getMessagingService().send(cr,msg,callback,60000)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Thread.sleep(2000)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Criteria cr = new Criteria()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "cr.setInstanceName(hostDest)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "msg.getRecord().setSimpleField(\"TestMessagingPara\",para)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "cr = new Criteria()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "TestAsyncCallback callback = new TestAsyncCallback(60000)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Thread.sleep(3000)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "AssertJUnit.assertEquals(asyncCallback.getMessageReplied().get(0).getRecord().getMapField(Message.Attributes.MESSAGE_RESULT.toString()).get(\"ReplyMessage\"),\"TestReplyMessage\")@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "_participants(1(.getMessagingService().registerMessageHandlerFactory(factory.getMessageTypes(),factory)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "callback2 = new TestAsyncCallback(500)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "cr.setRecipientInstanceType(InstanceType.PARTICIPANT)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Message msg = new Message(factory.getMessageTypes().get(0),msgId)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String msgId = new UUID(123,456).toString()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Thread.sleep(3000)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Thread.sleep(2000)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String hostDest = \"localhost_\" + (START_PORT + 1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "AssertJUnit.assertTrue(TestAsyncCallback._replyedMessageContents.contains(\"TestReplyMessage\"))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "AssertJUnit.assertTrue(callback2.isTimedOut())@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "TestMessagingHandlerFactory factory = new TestMessagingHandlerFactory()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "TestAsyncCallback callback2 = new TestAsyncCallback(500)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "_participants(0(.getMessagingService().send(cr,msg,callback2,500)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "TestBlockingSendReceive['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cr.setSessionSpecific(false)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String hostDest = \"localhost_\" + (START_PORT + 1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String msgId = new UUID(123,456).toString()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "cr.setInstanceName(hostDest)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "_participants(0(.getMessagingService().send(cr,msg,callback,60000)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "msg.setTgtSessionId(\"*\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "callback = new TestAsyncCallback(60000)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "String para = \"Testing messaging para\"@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "msg.setMsgState(MessageState.NEW)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "AssertJUnit.assertTrue(callback.getMessageReplied().size() == 1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Message msg = new Message(factory.getMessageTypes().get(0),msgId)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "_participants(0(.getMessagingService().send(cr,msg,callback2,500)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "int messagesSent = _adminController.getMessagingService().sendAndWait(cr,msg,asyncCallback,60000)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "AssertJUnit.assertTrue(callback.getMessageReplied().size() == 1)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "String hostSrc = \"localhost_\" + START_PORT@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "cr.setRecipientInstanceType(InstanceType.PARTICIPANT)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "msg.setMsgState(MessageState.NEW)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "AssertJUnit.assertTrue(callback2.isTimedOut())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "msg.setSrcName(hostSrc)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "AssertJUnit.assertTrue(asyncCallback.getMessageReplied().size() == 1)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "messagesSent = _adminController.getMessagingService().sendAndWait(cr,msg,asyncCallback2,500)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "cr.setDataSource(DataSource.IDEALSTATES)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "AssertJUnit.assertTrue(TestAsyncCallback._replyedMessageContents.contains(\"TestReplyMessage\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "TestMessageSimpleSendReceiveAsync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "_participants(1(.getMessagingService().registerMessageHandlerFactory(factory.getMessageTypes(),factory)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->52 [style = solid, label="cr"];
13->9 [style = solid, label="msgId"];
31->9 [style = bold, label=""];
21->15 [style = bold, label=""];
1->29 [style = solid, label="cr"];
5->25 [style = dashed, label="0"];
52->55 [style = bold, label=""];
5->28 [style = bold, label=""];
38->50 [style = bold, label=""];
19->1 [style = bold, label=""];
18->6 [style = solid, label="para"];
5->28 [style = dashed, label="0"];
20->16 [style = bold, label=""];
21->36 [style = bold, label=""];
23->14 [style = solid, label="cr"];
0->25 [style = bold, label=""];
3->14 [style = solid, label="msg"];
33->46 [style = bold, label=""];
36->18 [style = bold, label=""];
46->30 [style = solid, label="callback"];
29->44 [style = bold, label=""];
16->14 [style = bold, label=""];
20->32 [style = dashed, label="0"];
47->0 [style = bold, label=""];
54->51 [style = solid, label="callback2"];
39->51 [style = solid, label="cr"];
23->22 [style = solid, label="cr"];
17->20 [style = bold, label=""];
23->19 [style = solid, label="para"];
5->31 [style = solid, label="factory"];
40->52 [style = bold, label=""];
12->21 [style = bold, label=""];
30->42 [style = bold, label=""];
47->36 [style = solid, label="hostSrc"];
13->3 [style = solid, label="msgId"];
4->19 [style = solid, label="hostDest"];
27->16 [style = bold, label=""];
45->29 [style = bold, label=""];
4->0 [style = bold, label=""];
5->28 [style = solid, label="factory"];
26->27 [style = bold, label=""];
43->47 [style = bold, label=""];
7->2 [style = bold, label=""];
10->45 [style = bold, label=""];
45->29 [style = solid, label="callback"];
48->32 [style = bold, label=""];
22->17 [style = bold, label=""];
12->52 [style = solid, label="msg"];
39->41 [style = bold, label=""];
41->38 [style = bold, label=""];
14->8 [style = bold, label=""];
55->35 [style = bold, label=""];
16->40 [style = dashed, label="0"];
22->26 [style = bold, label=""];
0->7 [style = solid, label="hostDest"];
6->23 [style = bold, label=""];
28->31 [style = bold, label=""];
11->4 [style = bold, label=""];
35->39 [style = bold, label=""];
40->52 [style = solid, label="callback2"];
12->51 [style = solid, label="msg"];
16->14 [style = solid, label="asyncCallback2"];
12->30 [style = solid, label="msg"];
2->10 [style = bold, label=""];
1->7 [style = bold, label=""];
14->52 [style = dashed, label="0"];
3->9 [style = bold, label=""];
3->22 [style = solid, label="msg"];
46->30 [style = bold, label=""];
18->6 [style = bold, label=""];
5->13 [style = bold, label=""];
23->19 [style = bold, label=""];
32->40 [style = bold, label=""];
9->21 [style = solid, label="msgId"];
50->33 [style = bold, label=""];
9->12 [style = bold, label=""];
0->25 [style = solid, label="factory"];
12->29 [style = solid, label="msg"];
0->5 [style = bold, label=""];
54->51 [style = bold, label=""];
10->22 [style = bold, label=""];
42->34 [style = bold, label=""];
25->13 [style = bold, label=""];
20->27 [style = dashed, label="0"];
0->5 [style = solid, label="factory"];
0->41 [style = solid, label="hostDest"];
51->49 [style = bold, label=""];
15->18 [style = bold, label=""];
10->22 [style = solid, label="asyncCallback"];
37->54 [style = bold, label=""];
49->53 [style = bold, label=""];
24->4 [style = bold, label=""];
13->3 [style = bold, label=""];
34->37 [style = bold, label=""];
12->36 [style = dashed, label="0"];
44->48 [style = bold, label=""];
39->30 [style = solid, label="cr"];
17->26 [style = dashed, label="0"];
9->12 [style = solid, label="msgId"];
}
