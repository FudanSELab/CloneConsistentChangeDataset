digraph {
73 [style = filled, label = "i++@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(result,\"Controller should have 8 + 5*n zk-watchers.\")@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "int controllerHandlerNb = controller.getHandlers().size()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "MockParticipantManager(( participants = new MockParticipantManager((((@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "System.out.println(\"Expiring controller session...\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "testCbHandlerLeakOnParticipantSessionExpiry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "result = ClusterStateVerifier.verifyByPolling(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry\")@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "System.out.println(\"Expried participant session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String oldSessionId = participantManagerToExpire.getSessionId()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "participants(i(.syncStop()@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "boolean result = ClusterStateVerifier.verifyByZkCallback(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "controller.syncStop()@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "participants(i(.syncStart()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "String oldSessionId = controller.getSessionId()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())return watchPaths.size() == (8 + 5 * n)}},500)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "final int n = 2@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(result)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "testCbHandlerLeakOnControllerSessionExpiry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "controller.syncStart()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "int controllerHandlerNb = controller.getHandlers().size()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",r,32,n,2,\"MasterSlave\",true)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "int particHandlerNb = participantManager.getHandlers().size()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "System.out.println(\"Expired controller session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "String newSessionId = controller.getSessionId()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "i++@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@70@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testCbHandlerLeakOnParticipantSessionExpiry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "handlerNb = participantManager.getHandlers().size()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String instanceName = \"localhost_\" + (12918 + i)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ZkTestHelper.expireSession(participantManagerToExpire.getZkClient())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertTrue(result,\"Controller has incorrect number of zk-watchers.\")@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "result = ClusterStateVerifier.verifyByPolling(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(particHandlerNb,1,\"HelixParticipant should have 1 (msgHelixTaskExecutor) callback handlers\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 1 zk-watcher. MESSAGESHelixTaskExecutor\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Assert.assertTrue(result,\"Controller has incorrect number of zk-watchers after session expiry.\")@@@60@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,32,n,2,\"MasterSlave\",true)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 1 zk-watcher after session expiry.\")@@@59@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "i < n@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int handlerNb = controller.getHandlers().size()@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "HelixClusterVerifier verifier = new BestPossibleExternalViewVerifier.Builder(clusterName).setZkAddr(ZK_ADDR).build()@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "String newSessionId = participantManagerToExpire.getSessionId()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "i < n@@@66@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final MockParticipantManager participantManagerToExpire = participants(1(@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "System.out.println(\"Expiring participant session...\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "final MockParticipantManager participantManager = participants(0(@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){int controllerHandlerNb = controller.getHandlers().size()int particHandlerNb = participantManager.getHandlers().size()if (controllerHandlerNb == 10 && particHandlerNb == 2) return truereturn false}},1000)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertTrue(result)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry, but was \" + printHandlers(participantManager))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@80@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Assert.assertTrue(verifier.verify())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "final int r = 2@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())return watchPaths.size() == (8 + 5 * n)}},500)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i < n@@@76@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "ZkTestHelper.expireSession(controller.getZkClient())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "controller.syncStop()@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "Assert.assertEquals(particHandlerNb,1,\"HelixParticipant should have 1 (msgHelixTaskExecutor) callback handler, but was \" + particHandlerNb + \", \" + printHandlers(participantManager))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,11,\"HelixController should have 10 (6+2n) callback handlers for 2 participant, but was \" + controllerHandlerNb + \", \" + printHandlers(controller))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller_0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "participants(i( = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "int i = 0@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "handlerNb = participantManagerToExpire.getHandlers().size()@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(result,\"Controller should have 8 + 5*n zk-watchers after session expiry.\")@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "boolean result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())return watchPaths.size() == (7 + r + (4 + r) * n)}},2000)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "Assert.assertEquals(handlerNb,controllerHandlerNb,\"controller callback handlers should not increase after participant session expiry, but was \" + printHandlers(controller))@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManager.getSessionId())return watchPaths.size() == 1}},500)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "participants(i(.syncStop()@@@68@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManagerToExpire.getSessionId())return watchPaths.size() == 1}},2000)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,11,\"HelixController should have 10 (5+2n) callback handlers for 2 (n) participant\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int handlerNb = controller.getHandlers().size()@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->26 [style = solid, label="oldSessionId"];
42->20 [style = solid, label="methodName"];
13->37 [style = solid, label="n"];
68->31 [style = bold, label=""];
7->30 [style = bold, label=""];
13->55 [style = bold, label=""];
68->43 [style = bold, label=""];
55->28 [style = solid, label="r"];
5->32 [style = dotted, label="true"];
7->49 [style = dashed, label="0"];
71->62 [style = bold, label=""];
52->49 [style = solid, label="result"];
1->29 [style = solid, label="instanceName"];
13->58 [style = solid, label="n"];
37->1 [style = dotted, label="true"];
29->34 [style = bold, label=""];
25->48 [style = bold, label=""];
20->18 [style = solid, label="clusterName"];
68->31 [style = dotted, label="true"];
12->7 [style = bold, label=""];
37->3 [style = bold, label=""];
62->67 [style = bold, label=""];
47->20 [style = solid, label="className"];
6->66 [style = bold, label=""];
0->69 [style = dashed, label="0"];
18->22 [style = bold, label=""];
36->0 [style = bold, label=""];
45->6 [style = bold, label=""];
11->74 [style = dashed, label="0"];
15->52 [style = bold, label=""];
24->11 [style = bold, label=""];
51->47 [style = bold, label=""];
32->5 [style = solid, label="i"];
55->52 [style = solid, label="r"];
54->6 [style = bold, label=""];
35->38 [style = bold, label=""];
70->74 [style = bold, label=""];
36->59 [style = dashed, label="0"];
20->25 [style = solid, label="clusterName"];
59->69 [style = solid, label="handlerNb"];
44->47 [style = bold, label=""];
30->9 [style = solid, label="result"];
27->2 [style = bold, label=""];
11->26 [style = solid, label="newSessionId"];
72->73 [style = solid, label="i"];
28->45 [style = bold, label=""];
45->54 [style = dashed, label="0"];
13->18 [style = solid, label="n"];
9->40 [style = bold, label=""];
13->25 [style = bold, label=""];
22->33 [style = bold, label=""];
40->38 [style = solid, label="controllerHandlerNb"];
10->61 [style = dashed, label="0"];
58->16 [style = bold, label=""];
75->66 [style = solid, label="controllerHandlerNb"];
12->7 [style = solid, label="result"];
12->60 [style = dashed, label="0"];
37->1 [style = bold, label=""];
28->54 [style = bold, label=""];
76->47 [style = bold, label=""];
29->8 [style = solid, label="i"];
0->21 [style = bold, label=""];
65->35 [style = solid, label="result"];
34->8 [style = bold, label=""];
14->56 [style = bold, label=""];
20->22 [style = solid, label="clusterName"];
27->15 [style = solid, label="participants"];
5->17 [style = bold, label=""];
33->27 [style = bold, label=""];
67->61 [style = bold, label=""];
29->56 [style = solid, label="participants"];
2->37 [style = solid, label="i"];
20->17 [style = solid, label="clusterName"];
13->28 [style = solid, label="n"];
37->8 [style = dotted, label="true"];
55->25 [style = bold, label=""];
13->12 [style = solid, label="n"];
2->1 [style = solid, label="i"];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
4->32 [style = solid, label="i"];
61->63 [style = bold, label=""];
75->62 [style = solid, label="controllerHandlerNb"];
11->26 [style = bold, label=""];
21->4 [style = bold, label=""];
56->67 [style = solid, label="participantManager"];
20->13 [style = bold, label=""];
40->35 [style = bold, label=""];
6->31 [style = solid, label="result"];
28->54 [style = solid, label="result"];
47->42 [style = bold, label=""];
56->60 [style = bold, label=""];
20->65 [style = solid, label="clusterName"];
41->16 [style = solid, label="result"];
43->36 [style = bold, label=""];
25->18 [style = bold, label=""];
29->15 [style = solid, label="participants"];
65->35 [style = bold, label=""];
3->14 [style = solid, label="result"];
63->70 [style = bold, label=""];
35->19 [style = solid, label="particHandlerNb"];
19->10 [style = bold, label=""];
55->48 [style = solid, label="r"];
30->9 [style = bold, label=""];
71->67 [style = solid, label="particHandlerNb"];
27->56 [style = solid, label="participants"];
18->48 [style = dashed, label="0"];
4->5 [style = solid, label="i"];
38->19 [style = bold, label=""];
23->63 [style = dashed, label="0"];
13->48 [style = solid, label="n"];
13->68 [style = solid, label="n"];
26->41 [style = bold, label=""];
68->73 [style = dotted, label="true"];
35->0 [style = solid, label="particHandlerNb"];
38->62 [style = dashed, label="0"];
20->41 [style = solid, label="clusterName"];
26->64 [style = dashed, label="0"];
28->45 [style = solid, label="result"];
49->30 [style = bold, label=""];
10->23 [style = bold, label=""];
64->65 [style = bold, label=""];
13->5 [style = solid, label="n"];
56->69 [style = solid, label="participantManager"];
5->46 [style = dotted, label="true"];
35->58 [style = bold, label=""];
41->16 [style = bold, label=""];
74->64 [style = solid, label="newSessionId"];
8->37 [style = bold, label=""];
31->39 [style = bold, label=""];
59->69 [style = bold, label=""];
37->34 [style = dotted, label="true"];
43->66 [style = dashed, label="0"];
1->29 [style = bold, label=""];
46->32 [style = bold, label=""];
22->66 [style = solid, label="controller"];
4->5 [style = bold, label=""];
12->52 [style = dashed, label="0"];
32->5 [style = bold, label=""];
14->53 [style = dashed, label="0"];
52->49 [style = bold, label=""];
36->0 [style = solid, label="handlerNb"];
3->14 [style = bold, label=""];
42->20 [style = bold, label=""];
39->43 [style = bold, label=""];
69->57 [style = bold, label=""];
13->52 [style = solid, label="n"];
74->64 [style = bold, label=""];
19->67 [style = dashed, label="0"];
24->70 [style = dashed, label="0"];
20->43 [style = solid, label="clusterName"];
48->22 [style = bold, label=""];
37->29 [style = dotted, label="true"];
73->68 [style = solid, label="i"];
58->16 [style = solid, label="result"];
57->72 [style = bold, label=""];
63->64 [style = solid, label="oldSessionId"];
15->56 [style = dashed, label="0"];
22->62 [style = solid, label="controller"];
71->69 [style = solid, label="particHandlerNb"];
72->68 [style = solid, label="i"];
20->3 [style = solid, label="clusterName"];
23->24 [style = bold, label=""];
39->43 [style = solid, label="handlerNb"];
6->31 [style = bold, label=""];
16->28 [style = bold, label=""];
8->1 [style = solid, label="i"];
40->43 [style = solid, label="controllerHandlerNb"];
75->71 [style = bold, label=""];
20->48 [style = solid, label="clusterName"];
53->15 [style = bold, label=""];
73->68 [style = bold, label=""];
2->37 [style = bold, label=""];
60->75 [style = bold, label=""];
6->66 [style = solid, label="handlerNb"];
35->71 [style = dashed, label="0"];
72->68 [style = bold, label=""];
5->46 [style = bold, label=""];
66->59 [style = bold, label=""];
31->73 [style = bold, label=""];
50->53 [style = bold, label=""];
20->29 [style = solid, label="clusterName"];
8->37 [style = solid, label="i"];
37->50 [style = bold, label=""];
}
