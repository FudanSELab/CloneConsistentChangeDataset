digraph {
38 [style = filled, label = "final ConsumerRecord<byte((,byte((> consumerRecord1 = source1Factory.create(source1Key,source1Value)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final ConsumerRecord<byte((,byte((> consumerRecord1 = source1Factory.create(source1Key,source1Value)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final Long source1Key = 42L@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final Integer source2Key = 73@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final Double source2Value = 3.14@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testDriver = new TopologyTestDriver(topology,config)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Integer source2Key = 73@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final ConsumerRecord<byte((,byte((> consumerRecord2 = source2Factory.create(source2Key,source2Value)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "shouldUseSourceSpecificDeserializers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "shouldUseSinkSpecificSerializers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_2,Serdes.Integer().deserializer(),Serdes.Double().deserializer()),source2Key,source2Value)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final ConsumerRecord<byte((,byte((> consumerRecord2 = source2Factory.create(source2Key,source2Value)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testDriver = new TopologyTestDriver(topology,config)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final Double source2Value = 3.14@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final ConsumerRecordFactory<Long,String> source1Factory = new ConsumerRecordFactory<>(SOURCE_TOPIC_1,Serdes.Long().serializer(),Serdes.String().serializer())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "topology.addSource(sourceName2,Serdes.Integer().deserializer(),Serdes.Double().deserializer(),SOURCE_TOPIC_2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final ConsumerRecordFactory<Long,String> source1Factory = new ConsumerRecordFactory<>(SOURCE_TOPIC_1,Serdes.Long().serializer(),Serdes.String().serializer())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final Long source1Key = 42L@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_1,Serdes.Integer().deserializer(),Serdes.Double().deserializer()),source2Key,source2Value)@@@47@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testDriver.pipeInput(consumerRecord2)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String sourceName1 = \"source-1\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String source1Value = \"anyString\"@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final String source1Value = \"anyString\"@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testDriver.pipeInput(consumerRecord1)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testDriver.pipeInput(consumerRecord1)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final Topology topology = new Topology()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "topology.addSink(\"sink-2\",SINK_TOPIC_2,Serdes.Integer().serializer(),Serdes.Double().serializer(),sourceName2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testDriver.pipeInput(consumerRecord2)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final String sourceName2 = \"source-2\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_1,Serdes.Long().deserializer(),Serdes.String().deserializer()),source1Key,source1Value)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final ConsumerRecordFactory<Integer,Double> source2Factory = new ConsumerRecordFactory<>(SOURCE_TOPIC_2,Serdes.Integer().serializer(),Serdes.Double().serializer())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "topology.addSink(\"sink-1\",SINK_TOPIC_1,Serdes.Long().serializer(),Serdes.String().serializer(),sourceName1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "topology.addSink(\"sink\",SINK_TOPIC_1,new Serializer<Object>(){@Override public byte(( serialize(final String topic,final Object data){if (data instanceof Long) {return Serdes.Long().serializer().serialize(topic,(Long)data)}return Serdes.Integer().serializer().serialize(topic,(Integer)data)}@Override public void close(){}@Override public void configure(final Map configs,final boolean isKey){}},new Serializer<Object>(){@Override public byte(( serialize(final String topic,final Object data){if (data instanceof String) {return Serdes.String().serializer().serialize(topic,(String)data)}return Serdes.Double().serializer().serialize(topic,(Double)data)}@Override public void close(){}@Override public void configure(final Map configs,final boolean isKey){}},processor)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "topology.addSource(sourceName1,Serdes.Long().deserializer(),Serdes.String().deserializer(),SOURCE_TOPIC_1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final ConsumerRecordFactory<Integer,Double> source2Factory = new ConsumerRecordFactory<>(SOURCE_TOPIC_2,Serdes.Integer().serializer(),Serdes.Double().serializer())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "OutputVerifier.compareKeyValue(testDriver.readOutput(SINK_TOPIC_1,Serdes.Long().deserializer(),Serdes.String().deserializer()),source1Key,source1Value)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "topology.addSink(\"sink\",SINK_TOPIC_1,new Serializer(){@Override public byte(( serialize(final String topic,final Object data){if (data instanceof Long) {return Serdes.Long().serializer().serialize(topic,(Long)data)}return Serdes.Integer().serializer().serialize(topic,(Integer)data)}@Override public void close(){}@Override public void configure(final Map configs,final boolean isKey){}},new Serializer(){@Override public byte(( serialize(final String topic,final Object data){if (data instanceof String) {return Serdes.String().serializer().serialize(topic,(String)data)}return Serdes.Double().serializer().serialize(topic,(Double)data)}@Override public void close(){}@Override public void configure(final Map configs,final boolean isKey){}},processor)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "shouldUseSourceSpecificDeserializers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final String processor = \"processor\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "topology.addProcessor(processor,new MockProcessorSupplier(),sourceName1,sourceName2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->9 [style = solid, label="sourceName2"];
16->15 [style = bold, label=""];
0->9 [style = bold, label=""];
15->10 [style = bold, label=""];
2->19 [style = bold, label=""];
26->27 [style = solid, label="source2Key"];
23->5 [style = bold, label=""];
17->1 [style = bold, label=""];
21->0 [style = bold, label=""];
28->30 [style = bold, label=""];
30->33 [style = bold, label=""];
39->33 [style = solid, label="consumerRecord2"];
7->12 [style = bold, label=""];
35->38 [style = solid, label="source1Value"];
6->21 [style = bold, label=""];
19->20 [style = bold, label=""];
3->27 [style = dashed, label="0"];
6->0 [style = solid, label="sourceName1"];
21->8 [style = bold, label=""];
19->4 [style = solid, label="consumerRecord1"];
18->17 [style = bold, label=""];
8->13 [style = solid, label="processor"];
14->22 [style = dashed, label="0"];
2->20 [style = solid, label="source2Value"];
20->12 [style = solid, label="consumerRecord2"];
21->32 [style = solid, label="sourceName2"];
31->38 [style = bold, label=""];
8->14 [style = solid, label="processor"];
32->34 [style = bold, label=""];
6->29 [style = solid, label="sourceName1"];
37->38 [style = solid, label="source1Key"];
31->39 [style = solid, label="source2Value"];
35->30 [style = solid, label="source1Value"];
38->39 [style = bold, label=""];
33->27 [style = bold, label=""];
39->28 [style = bold, label=""];
4->7 [style = bold, label=""];
38->28 [style = solid, label="consumerRecord1"];
20->4 [style = bold, label=""];
10->20 [style = solid, label="source2Key"];
8->0 [style = bold, label=""];
26->39 [style = solid, label="source2Key"];
11->5 [style = bold, label=""];
26->31 [style = bold, label=""];
22->18 [style = bold, label=""];
14->32 [style = dashed, label="0"];
34->24 [style = bold, label=""];
6->13 [style = solid, label="sourceName1"];
5->6 [style = bold, label=""];
25->37 [style = bold, label=""];
1->16 [style = bold, label=""];
2->3 [style = solid, label="source2Value"];
24->25 [style = bold, label=""];
29->32 [style = bold, label=""];
21->13 [style = solid, label="sourceName2"];
8->22 [style = solid, label="processor"];
15->7 [style = solid, label="source1Value"];
14->18 [style = bold, label=""];
10->2 [style = bold, label=""];
36->5 [style = bold, label=""];
12->3 [style = bold, label=""];
13->22 [style = bold, label=""];
5->18 [style = solid, label="topology"];
37->35 [style = bold, label=""];
37->30 [style = solid, label="source1Key"];
31->27 [style = solid, label="source2Value"];
5->34 [style = solid, label="topology"];
16->19 [style = solid, label="source1Key"];
9->29 [style = bold, label=""];
15->19 [style = solid, label="source1Value"];
13->14 [style = bold, label=""];
35->26 [style = bold, label=""];
10->3 [style = solid, label="source2Key"];
9->13 [style = bold, label=""];
16->7 [style = solid, label="source1Key"];
}
