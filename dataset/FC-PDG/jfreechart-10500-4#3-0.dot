digraph {
5 [style = filled, label = "fail(e.toString())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "fail(e.toString())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Rectangle2D bounds1 = new Rectangle2D.Double(1.0,2.0,3.0,4.0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "bounds1.setFrame(2.0,4.0,6.0,8.0)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CloneNotSupportedException e@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "b2.setBounds(new Rectangle2D.Double(2.0,4.0,6.0,8.0))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ColorBlock b2 = null@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(b1.getClass() == b2.getClass())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "GradientPaint gp = new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.BLUE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertTrue(b1.equals(b2))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "GradientPaint gp = new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.blue)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "b1.setBounds(bounds1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "b2 = (EmptyBlock)b1.clone()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "EmptyBlock b2 = null@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(b1 != b2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Rectangle2D bounds1 = new Rectangle2D.Double(10.0,20.0,30.0,40.0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "bounds1.setRect(1.0,2.0,3.0,4.0)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "EmptyBlock b1 = new EmptyBlock(1.0,2.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "b2.setBounds(new Rectangle2D.Double(1.0,2.0,3.0,4.0))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ColorBlock b1 = new ColorBlock(gp,1.0,2.0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "b2 = (ColorBlock)b1.clone()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertFalse(b1.equals(b2))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(b1.equals(b2))@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(b1.equals(b2))@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
4->10 [style = bold, label=""];
15->5 [style = dotted, label="true"];
8->23 [style = bold, label=""];
26->24 [style = solid, label="bounds1"];
21->15 [style = dotted, label="true"];
22->19 [style = bold, label=""];
24->0 [style = bold, label=""];
21->15 [style = bold, label=""];
18->26 [style = bold, label=""];
2->10 [style = solid, label="gp"];
4->0 [style = solid, label="bounds1"];
22->25 [style = solid, label="b2"];
7->6 [style = solid, label="b2"];
4->26 [style = dashed, label="0"];
16->17 [style = bold, label=""];
15->19 [style = bold, label=""];
26->24 [style = bold, label=""];
19->6 [style = bold, label=""];
2->4 [style = bold, label=""];
7->8 [style = solid, label="b2"];
2->17 [style = dashed, label="0"];
9->8 [style = dashed, label="0"];
13->1 [style = bold, label=""];
15->5 [style = bold, label=""];
1->11 [style = bold, label=""];
7->14 [style = solid, label="b2"];
20->18 [style = bold, label=""];
22->23 [style = solid, label="b2"];
17->10 [style = solid, label="gp"];
12->2 [style = bold, label=""];
11->1 [style = dashed, label="0"];
5->6 [style = bold, label=""];
3->7 [style = bold, label=""];
22->13 [style = solid, label="b2"];
7->1 [style = solid, label="b2"];
0->22 [style = bold, label=""];
6->13 [style = bold, label=""];
10->0 [style = bold, label=""];
7->6 [style = bold, label=""];
22->19 [style = solid, label="b2"];
8->9 [style = bold, label=""];
9->14 [style = bold, label=""];
11->8 [style = bold, label=""];
25->8 [style = bold, label=""];
18->19 [style = solid, label="b1"];
3->0 [style = dashed, label="0"];
1->25 [style = bold, label=""];
7->22 [style = dashed, label="0"];
17->4 [style = bold, label=""];
10->6 [style = solid, label="b1"];
}
