digraph {
22 [style = filled, label = "Assert.assertEquals(record0.timestampType(),expected0.getTimestampType())@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testConsume['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(record0.timestampType() == TimestampType.LOG_APPEND_TIME,expected0.isTimestampLogAppend())@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "consumer.addRecord(record0)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(record0.timestamp(),expected0.getTimestamp())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "ConsumerRecord<String,String> record0 = new ConsumerRecord<>(\"test_topic\",0,0L,\"key\",\"value0\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "consumer.assign(Arrays.asList(new TopicPartition(\"test_topic\",0)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(consumedRecords,expected)@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Config testConfig = ConfigFactory.parseMap(ImmutableMap.of(ConfigurationKeys.KAFKA_BROKERS,\"test\"))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ConsumerRecord<String,String> record1 = new ConsumerRecord<>(\"test_topic\",0,1L,11L,TimestampType.LOG_APPEND_TIME,1L,3,6,\"key\",\"value1\")@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "consumer.updateBeginningOffsets(beginningOffsets)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "consumer.addRecord(record1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testConsume['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "HashMap<TopicPartition,Long> beginningOffsets = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ConsumerRecord<String,String> record1 = new ConsumerRecord<>(\"test_topic\",0,1L,\"key\",\"value1\")@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Set<KafkaConsumerRecord> consumedRecords = Sets.newHashSet(kafka09Client.consume(new KafkaPartition.Builder().withId(0).withTopicName(\"test_topic\").build(),0l,100l))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Set<KafkaConsumerRecord> consumedRecords = Sets.newHashSet(kafka1Client.consume(new KafkaPartition.Builder().withId(0).withTopicName(\"test_topic\").build(),0l,100l))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ConsumerRecord<String,String> record0 = new ConsumerRecord<>(\"test_topic\",0,0L,10L,TimestampType.CREATE_TIME,0L,3,6,\"key\",\"value0\")@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "beginningOffsets.put(new TopicPartition(\"test_topic\",0),0L)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "consumer.addRecord(record2)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "MockConsumer<String,String> consumer = new MockConsumer<String,String>(OffsetResetStrategy.NONE)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ConsumerRecord<String,String> record2 = new ConsumerRecord<>(\"test_topic\",0,2L,12L,TimestampType.LOG_APPEND_TIME,2L,3,6,\"key\",\"value2\")@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Kafka1ConsumerClient.Kafka1ConsumerRecord expected0 = expected.iterator().next()@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "testConsume['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Set<Kafka09ConsumerRecord<String,String>> expected = ImmutableSet.of(new Kafka09ConsumerRecord<>(record0),new Kafka09ConsumerRecord<>(record1),new Kafka09ConsumerRecord<>(record2))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Set<Kafka1ConsumerClient.Kafka1ConsumerRecord<String,String>> expected = ImmutableSet.of(new Kafka1ConsumerClient.Kafka1ConsumerRecord<>(record0),new Kafka1ConsumerClient.Kafka1ConsumerRecord<>(record1),new Kafka1ConsumerClient.Kafka1ConsumerRecord<>(record2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ConsumerRecord<String,String> record2 = new ConsumerRecord<>(\"test_topic\",0,2L,\"key\",\"value2\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
4->8 [style = solid, label="record1"];
8->14 [style = bold, label=""];
1->24 [style = dashed, label="0"];
4->23 [style = dashed, label="0"];
18->20 [style = bold, label=""];
0->26 [style = solid, label="record2"];
14->18 [style = bold, label=""];
0->13 [style = solid, label="record2"];
26->14 [style = solid, label="expected"];
23->3 [style = solid, label="record1"];
25->2 [style = bold, label=""];
10->8 [style = solid, label="record0"];
0->21 [style = dashed, label="0"];
0->7 [style = bold, label=""];
12->15 [style = bold, label=""];
9->16 [style = bold, label=""];
6->11 [style = bold, label=""];
4->3 [style = solid, label="record1"];
1->8 [style = bold, label=""];
16->8 [style = solid, label="record0"];
11->9 [style = bold, label=""];
13->24 [style = bold, label=""];
1->14 [style = solid, label="consumedRecords"];
3->13 [style = bold, label=""];
26->14 [style = bold, label=""];
15->6 [style = bold, label=""];
6->9 [style = solid, label="beginningOffsets"];
10->7 [style = solid, label="record0"];
23->21 [style = bold, label=""];
7->3 [style = bold, label=""];
4->26 [style = solid, label="record1"];
10->16 [style = dashed, label="0"];
21->13 [style = solid, label="record2"];
16->23 [style = bold, label=""];
2->12 [style = bold, label=""];
10->4 [style = bold, label=""];
8->26 [style = dashed, label="0"];
8->14 [style = solid, label="expected"];
21->8 [style = solid, label="record2"];
0->8 [style = solid, label="record2"];
21->7 [style = bold, label=""];
13->1 [style = bold, label=""];
20->17 [style = bold, label=""];
17->22 [style = bold, label=""];
19->2 [style = bold, label=""];
16->7 [style = solid, label="record0"];
24->14 [style = solid, label="consumedRecords"];
24->26 [style = bold, label=""];
23->8 [style = solid, label="record1"];
4->0 [style = bold, label=""];
9->10 [style = bold, label=""];
10->26 [style = solid, label="record0"];
}
