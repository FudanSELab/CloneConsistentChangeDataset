digraph {
38 [style = filled, label = "testCreateConnectorAlreadyExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "herder.tick()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCreateConnector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "herder.putConnectorConfig(CONN1,CONN1_CONFIG,false,putConnectorCallback)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "EasyMock.expect(plugins.newConnector(EasyMock.anyString())).andReturn(connectorMock)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EasyMock.expect(connectorMock.config()).andReturn(new ConfigDef())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ConnectorInfo info = new ConnectorInfo(CONN2,CONN2_CONFIG,Collections.emptyList(),ConnectorType.SOURCE)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "EasyMock.expect(plugins.newConnector(EasyMock.anyString())).andReturn(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "time.sleep(1000L)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectPostRebalanceCatchup(SNAPSHOT)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "member.wakeup()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testCreateConnector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "PowerMock.verifyAll()@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertStatistics(3,1,100,1000L)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "configBackingStore.putConnectorConfig(CONN2,CONN2_CONFIG)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "time.sleep(1000L)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "PowerMock.replayAll()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "EasyMock.expect(member.memberId()).andStubReturn(\"leader\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "herder.putConnectorConfig(CONN2,CONN2_CONFIG,false,putConnectorCallback)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertStatistics(3,1,100,1000L)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final Capture<Map<String,String>> configCapture = EasyMock.newCapture()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "herder.tick()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Connector connectorMock = PowerMock.createMock()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "PowerMock.expectLastCall()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(worker.getPlugins()).andReturn(plugins).times(3)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "EasyMock.expect(transformer.transform(EasyMock.capture(configCapture))).andAnswer(null)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "PowerMock.replayAll()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "PowerMock.expectLastCall()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "EasyMock.expect(connectorMock.validate(CONN2_CONFIG)).andReturn(new Config(Collections.emptyList()))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(connectorMock)).andReturn(delegatingLoader)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expectRebalance(1,Collections.emptyList(),Collections.emptyList())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "EasyMock.expect(worker.configTransformer()).andReturn(transformer).times(2)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "PowerMock.expectLastCall()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "PowerMock.expectLastCall()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "member.poll(EasyMock.anyInt())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "putConnectorCallback.onCompletion(null,new Herder.Created<>(true,info))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "PowerMock.expectLastCall()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "putConnectorCallback.onCompletion(EasyMock.anyObject(),EasyMock.isNull())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "EasyMock.expect(worker.getPlugins()).andReturn(plugins)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "PowerMock.verifyAll()@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38->5 [style = bold, label=""];
11->20 [style = bold, label=""];
21->10 [style = bold, label=""];
4->14 [style = bold, label=""];
7->11 [style = bold, label=""];
15->7 [style = bold, label=""];
19->12 [style = bold, label=""];
39->34 [style = bold, label=""];
16->24 [style = bold, label=""];
26->29 [style = bold, label=""];
36->31 [style = bold, label=""];
23->15 [style = bold, label=""];
14->17 [style = bold, label=""];
31->2 [style = bold, label=""];
8->6 [style = bold, label=""];
10->26 [style = bold, label=""];
0->21 [style = bold, label=""];
6->19 [style = bold, label=""];
28->1 [style = bold, label=""];
17->22 [style = bold, label=""];
25->6 [style = bold, label=""];
25->16 [style = bold, label=""];
3->4 [style = bold, label=""];
34->30 [style = bold, label=""];
32->33 [style = bold, label=""];
1->23 [style = bold, label=""];
10->15 [style = solid, label="connectorMock"];
2->13 [style = bold, label=""];
35->25 [style = bold, label=""];
29->28 [style = bold, label=""];
20->18 [style = bold, label=""];
5->2 [style = bold, label=""];
3->34 [style = dashed, label="0"];
33->40 [style = bold, label=""];
30->35 [style = bold, label=""];
21->32 [style = bold, label=""];
18->25 [style = bold, label=""];
9->5 [style = bold, label=""];
12->3 [style = bold, label=""];
27->5 [style = bold, label=""];
24->8 [style = bold, label=""];
16->24 [style = solid, label="info"];
10->1 [style = bold, label=""];
5->36 [style = bold, label=""];
37->39 [style = bold, label=""];
40->37 [style = bold, label=""];
13->0 [style = bold, label=""];
}
