digraph {
4 [style = filled, label = "final long lowerRangeEndTime@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "cacheKeyTo = cacheFunction.cacheKey(segmentUpperRangeFixedSize(keyTo,upperRangeEndTime))@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cacheKeyTo = cacheFunction.cacheKey(keySchema.upperRange(keyTo,latestSessionStartTime),currentSegmentId)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final long upperRangeEndTime@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "cacheFunction.segmentId(lowerRangeEndTime) != cacheFunction.segmentId(upperRangeEndTime)@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "keyFrom == keyTo@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "keyFrom.equals(keyTo)@@@6@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "setCacheKeyRange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "cacheKeyFrom = cacheFunction.cacheKey(keySchema.lowerRange(keyFrom,lowerRangeEndTime),currentSegmentId)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "cacheKeyFrom = cacheFunction.cacheKey(segmentLowerRangeFixedSize(keyFrom,lowerRangeEndTime))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "setCacheKeyRange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "setCacheKeyRange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "cacheKeyTo = cacheFunction.cacheKey(keySchema.upperRange(keyTo,timeTo),currentSegmentId)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final long upperRangeEndTime@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "throw new IllegalStateException(\"Error iterating over segments: segment interval has changed\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final long upperRangeEndTime@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2->3 [style = dotted, label="true"];
1->8 [style = bold, label=""];
0->2 [style = solid, label="upperRangeEndTime"];
2->6 [style = bold, label=""];
11->10 [style = dotted, label="true"];
1->15 [style = bold, label=""];
2->3 [style = bold, label=""];
8->15 [style = dashed, label="0"];
6->15 [style = dotted, label="false"];
0->5 [style = solid, label="upperRangeEndTime"];
4->2 [style = solid, label="lowerRangeEndTime"];
10->5 [style = solid, label="upperRangeEndTime"];
3->6 [style = bold, label=""];
13->5 [style = solid, label="upperRangeEndTime"];
11->4 [style = dotted, label="true"];
4->1 [style = solid, label="lowerRangeEndTime"];
3->12 [style = bold, label=""];
7->0 [style = dotted, label="true"];
12->9 [style = bold, label=""];
12->1 [style = bold, label=""];
4->9 [style = solid, label="lowerRangeEndTime"];
11->2 [style = bold, label=""];
14->13 [style = dotted, label="true"];
2->12 [style = bold, label=""];
6->12 [style = dashed, label="0"];
13->2 [style = solid, label="upperRangeEndTime"];
6->1 [style = bold, label=""];
12->8 [style = dotted, label="false"];
6->8 [style = dotted, label="false"];
6->9 [style = dotted, label="true"];
12->5 [style = dotted, label="true"];
12->1 [style = dotted, label="false"];
7->2 [style = bold, label=""];
7->4 [style = dotted, label="true"];
9->5 [style = bold, label=""];
14->2 [style = bold, label=""];
6->9 [style = bold, label=""];
14->4 [style = dotted, label="true"];
6->1 [style = dotted, label="false"];
10->2 [style = solid, label="upperRangeEndTime"];
6->5 [style = dotted, label="true"];
12->9 [style = dotted, label="true"];
}
