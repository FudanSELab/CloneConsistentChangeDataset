digraph {
14 [style = filled, label = "List<NetworkVO> defaultNetworks = networkDao.listByZoneAndTrafficType(dc.getId(),defaultTrafficType)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "List<NetworkVO> defaultNetworks = _networkDao.listByZoneAndTrafficType(dc.getId(),defaultTrafficType)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "dc.getNetworkType() != NetworkType.Basic@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return defaultNetworks.get(0)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<NetworkVO> networks = networkDao.listByZoneSecurityGroup(dc.getId())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "DataCenter dc@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "CollectionUtils.isEmpty(networks)@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "throw new CloudRuntimeException(String.format(\"Found (%s( networks of type (%s( when expect to find 1.\",networksSize,defaultTrafficType))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "TrafficType defaultTrafficType = TrafficType.Public@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "getDefaultNetworkForBasicZone['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "DataCenter dc@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return defaultNetworks.get(0)@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<NetworkVO> defaultNetworks = _networkDao.listByZoneAndTrafficType(dc.getId(),defaultTrafficType)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "dc.isSecurityGroupEnabled()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "getDefaultNetworkForAdvancedZone['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "getDefaultNetworkForAdvancedZone['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "throw new CloudRuntimeException(\"Can not found security enabled network in SG Zone \" + dc)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return networks.get(0)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "throw new CloudRuntimeException(String.format(\"%s is not basic.\",dc.toString()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int networksSize = defaultNetworks.size()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "networksSize != 1@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "dc.getNetworkType() != NetworkType.Advanced@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<NetworkVO> networks = _networkDao.listByZoneSecurityGroup(dc.getId())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "defaultNetworks.size() != 1@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "throw new CloudRuntimeException(\"Found \" + defaultNetworks.size() + \" networks of type \" + defaultTrafficType + \" when expect to find 1\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "TrafficType defaultTrafficType = TrafficType.Guest@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "throw new CloudRuntimeException(\"Zone \" + dc + \" is not advanced.\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
6->11 [style = dotted, label="false"];
4->3 [style = bold, label=""];
6->5 [style = dotted, label="false"];
16->13 [style = bold, label=""];
9->16 [style = dashed, label="0"];
21->20 [style = dotted, label="true"];
1->8 [style = bold, label=""];
6->3 [style = dotted, label="false"];
0->10 [style = dotted, label="true"];
20->26 [style = bold, label=""];
6->13 [style = dotted, label="true"];
26->25 [style = bold, label=""];
16->13 [style = solid, label="networks"];
14->5 [style = bold, label=""];
12->11 [style = bold, label=""];
25->18 [style = bold, label=""];
8->20 [style = dashed, label="0"];
18->17 [style = bold, label=""];
26->25 [style = solid, label="defaultTrafficType"];
15->10 [style = dotted, label="true"];
10->8 [style = solid, label="dc"];
8->6 [style = bold, label=""];
1->21 [style = dashed, label="0"];
19->24 [style = dotted, label="true"];
17->22 [style = bold, label=""];
5->18 [style = dashed, label="0"];
22->23 [style = bold, label=""];
6->14 [style = dotted, label="false"];
17->23 [style = bold, label=""];
5->4 [style = dotted, label="true"];
18->17 [style = solid, label="networksSize"];
6->12 [style = dotted, label="false"];
13->2 [style = dotted, label="true"];
11->5 [style = bold, label=""];
21->26 [style = bold, label=""];
1->6 [style = bold, label=""];
12->4 [style = solid, label="defaultTrafficType"];
21->20 [style = bold, label=""];
12->14 [style = solid, label="defaultTrafficType"];
26->22 [style = solid, label="defaultTrafficType"];
18->22 [style = solid, label="networksSize"];
6->9 [style = dotted, label="true"];
6->16 [style = bold, label=""];
13->7 [style = bold, label=""];
10->2 [style = solid, label="dc"];
0->1 [style = bold, label=""];
11->14 [style = dashed, label="0"];
5->4 [style = bold, label=""];
12->14 [style = bold, label=""];
1->8 [style = dotted, label="true"];
13->2 [style = bold, label=""];
6->7 [style = dotted, label="true"];
17->22 [style = dotted, label="true"];
12->11 [style = solid, label="defaultTrafficType"];
19->21 [style = bold, label=""];
2->7 [style = bold, label=""];
6->9 [style = bold, label=""];
10->24 [style = dashed, label="0"];
6->16 [style = dotted, label="true"];
9->13 [style = solid, label="networks"];
9->13 [style = bold, label=""];
15->1 [style = bold, label=""];
6->12 [style = bold, label=""];
}
