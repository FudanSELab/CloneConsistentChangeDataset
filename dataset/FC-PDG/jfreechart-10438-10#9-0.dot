digraph {
20 [style = filled, label = "assertNotNull(r.getSeriesPaint(0))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertNull(r.getSeriesPaint(0))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(Color.BLUE,r.lookupSeriesPaint(0))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "CategoryPlot<String,String> plot = new CategoryPlot<>(null,new CategoryAxis(\"Category\"),new NumberAxis(\"Value\"),r)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertNull(r.getSeriesOutlinePaint(0))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "CategoryPlot plot = new CategoryPlot(null,new CategoryAxis(\"Category\"),new NumberAxis(\"Value\"),r)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "r.setAutoPopulateSeriesPaint(false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "r.setAutoPopulateSeriesOutlinePaint(true)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "r.setAutoPopulateSeriesPaint(true)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testOutlinePaintLookup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Color.GRAY,r.getDefaultOutlinePaint())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testPaintLookup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "new CategoryPlot(null,new CategoryAxis(\"Category\"),new NumberAxis(\"Value\"),r)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "r.setAutoPopulateSeriesOutlinePaint(false)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE(0(,r.lookupSeriesOutlinePaint(0))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE(0(,r.lookupSeriesPaint(0))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(Color.GRAY,r.lookupSeriesOutlinePaint(0))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "BarRenderer r = new BarRenderer()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNotNull(r.getSeriesOutlinePaint(0))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testOutlinePaintLookup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertEquals(Color.BLUE,r.getDefaultPaint())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
2->19 [style = dashed, label="0"];
3->17 [style = dashed, label="0"];
9->2 [style = solid, label="r"];
7->14 [style = dashed, label="0"];
12->15 [style = bold, label=""];
0->16 [style = dashed, label="0"];
3->11 [style = bold, label=""];
8->20 [style = dashed, label="0"];
7->4 [style = bold, label=""];
9->19 [style = solid, label="r"];
17->19 [style = bold, label=""];
1->9 [style = bold, label=""];
9->6 [style = bold, label=""];
19->16 [style = bold, label=""];
4->12 [style = dashed, label="0"];
15->17 [style = bold, label=""];
2->0 [style = bold, label=""];
11->0 [style = bold, label=""];
9->11 [style = solid, label="r"];
6->13 [style = dashed, label="0"];
3->2 [style = bold, label=""];
14->12 [style = bold, label=""];
0->8 [style = bold, label=""];
18->9 [style = bold, label=""];
2->11 [style = dashed, label="0"];
10->9 [style = bold, label=""];
6->7 [style = bold, label=""];
5->15 [style = dashed, label="0"];
16->20 [style = bold, label=""];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
9->13 [style = bold, label=""];
}
