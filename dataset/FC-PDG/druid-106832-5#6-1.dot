digraph {
16 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.marketDimension,\"total_market\",182))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testSearch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.marketDimension,\"total_market\",186))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"travel\",91))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final SearchQuery searchQuery = Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).intervals(QueryRunnerTestHelper.fullOnInterval).query(\"a\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "checkSearchQuery(searchQuery,mergedRunner,expectedHits)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"entertainment\",93))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension,\"a\",93))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"health\",91))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testSearch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.placementishDimension,\"a\",91))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "QueryRunner mergedRunner = toolChest.mergeResults(new QueryRunner<Result<SearchResultValue>>(){@Override public Sequence<Result<SearchResultValue>> run(QueryPlus<Result<SearchResultValue>> queryPlus,Map<String,Object> responseContext){final QueryPlus<Result<SearchResultValue>> queryPlus1 = queryPlus.withQuerySegmentSpec(new MultipleIntervalSegmentSpec(Collections.singletonList(Intervals.of(\"2011-01-12/2011-02-28\"))))final QueryPlus<Result<SearchResultValue>> queryPlus2 = queryPlus.withQuerySegmentSpec(new MultipleIntervalSegmentSpec(Collections.singletonList(Intervals.of(\"2011-03-01/2011-04-15\"))))return Sequences.concat(runner.run(queryPlus1,responseContext),runner.run(queryPlus2,responseContext))}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"travel\",93))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"mezzanine\",279))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"automotive\",93))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"mezzanine\",273))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"automotive\",91))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<SearchHit> expectedHits = new ArrayList<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testSearchWithCardinality['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"entertainment\",91))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<SearchHit> expectedHits = new ArrayList<>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.partialNullDimension,\"value\",182))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "SearchQuery searchQuery = Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).intervals(QueryRunnerTestHelper.fullOnInterval).query(\"a\").build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "SearchQuery searchQuery = Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).intervals(QueryRunnerTestHelper.fullOnIntervalSpec).query(\"a\").build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"health\",93))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "checkSearchQuery(searchQuery,expectedHits)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9->20 [style = dashed, label="0"];
11->20 [style = bold, label=""];
10->21 [style = dashed, label="0"];
9->0 [style = bold, label=""];
4->6 [style = bold, label=""];
22->18 [style = solid, label="mergedRunner"];
7->17 [style = dashed, label="0"];
11->15 [style = dashed, label="0"];
0->19 [style = dashed, label="0"];
3->16 [style = dashed, label="0"];
14->22 [style = bold, label=""];
16->25 [style = bold, label=""];
12->8 [style = solid, label="searchQuery"];
5->25 [style = dashed, label="0"];
2->9 [style = bold, label=""];
6->14 [style = dashed, label="0"];
10->7 [style = bold, label=""];
15->18 [style = bold, label=""];
7->3 [style = bold, label=""];
11->18 [style = solid, label="expectedHits"];
24->14 [style = bold, label=""];
2->8 [style = solid, label="expectedHits"];
6->2 [style = bold, label=""];
6->12 [style = dashed, label="0"];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
13->12 [style = bold, label=""];
23->21 [style = bold, label=""];
14->18 [style = solid, label="searchQuery"];
0->1 [style = bold, label=""];
19->23 [style = bold, label=""];
25->15 [style = bold, label=""];
11->8 [style = bold, label=""];
8->18 [style = dashed, label="0"];
5->11 [style = bold, label=""];
20->19 [style = bold, label=""];
1->10 [style = bold, label=""];
1->23 [style = dashed, label="0"];
21->17 [style = bold, label=""];
22->11 [style = bold, label=""];
6->8 [style = solid, label="searchQuery"];
17->16 [style = bold, label=""];
}
