digraph {
29 [style = filled, label = "assertTrue(\"wrong replica type in group one\",(rp.getReplicaType() == Replica.ReplicaType.NRT) || rp.getReplicaType() == Replica.ReplicaType.TLOG)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "PlacementPlan pp = plugin.computePlacement(cluster,placementRequest,attributeFetcher,placementPlanFactory)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "fail(\"missing group sysprop for node \" + rp.getNode())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "nodeBuilder.setFreeDiskGB(1L)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "smallNode = nodeBuilder.build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Map<Replica.ReplicaType,Map<String,Map<String,AtomicInteger>>> replicas = new HashMap<>()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "nodeBuilder.setFreeDiskGB(100L)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "AttributeFetcher attributeFetcher = clusterBuilder.buildAttributeFetcher()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "replicas.computeIfAbsent(rp.getReplicaType(),null).computeIfAbsent(rp.getShardName(),null).computeIfAbsent(group,null).incrementAndGet()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i < NUM_NODES@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "nodeBuilder.setCoreCount(0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testFreeDiskConstraints['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.REPLICA_TYPE_SYSPROP,\"Pull,foobar\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Builders.NodeBuilder nodeBuilder = clusterBuilder.getLiveNodeBuilders().get(i)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Node smallNode = null@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testReplicaType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "replicas.forEach(null)@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(\"wrong replica type in group two\",Replica.ReplicaType.PULL,rp.getReplicaType())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "nodeBuilder.setFreeDiskGB(1.0)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "Optional<String> groupOptional = attributeValues.getSystemProperty(rp.getNode(),\"group\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int NUM_NODES = 3@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String collectionName = \"freeDiskCollection\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "AttributeFetcher attributeFetcher = clusterBuilder.buildAttributeFetcher()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "PlacementPlanFactory placementPlanFactory = new PlacementPlanFactoryImpl()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.REPLICA_TYPE_SYSPROP,\"Nrt, TlOg\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "AttributeValues attributeValues = attributeFetcher.fetchAttributes()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "group.equals(\"one\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Builders.CollectionBuilder collectionBuilder = Builders.newCollectionBuilder(collectionName)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "PlacementRequestImpl placementRequest = new PlacementRequestImpl(solrCollection,StreamSupport.stream(solrCollection.shards().spliterator(),false).map(null).collect(Collectors.toSet()),cluster.getLiveNodes(),2,2,2)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Cluster cluster = clusterBuilder.build()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFalse(\"should not put any replicas on \" + smallNode,rp.getNode().equals(smallNode))@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int NUM_NODES = 6@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "!groupOptional.isPresent()@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "nodeBuilder.setFreeDiskGB(100L)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "SolrCollection solrCollection = cluster.getCollection(collectionName)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "collectionBuilder.initializeShardsReplicas(2,0,0,0,clusterBuilder.getLiveNodeBuilders())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "nodeBuilder.setFreeDiskGB(100.0)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "clusterBuilder.addCollection(collectionBuilder)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i == 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String collectionName = \"replicaTypeCollection\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(12,pp.getReplicaPlacements().size())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "i < NUM_NODES / 3 * 2@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Builders.ClusterBuilder clusterBuilder = Builders.newClusterBuilder().initializeLiveNodes(NUM_NODES)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "nodeBuilder.setSysprop(\"group\",\"two\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "nodeBuilder.setSysprop(\"group\",\"one\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "String group = groupOptional.get()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testFreeDiskConstraints['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "Builders.CollectionBuilder collectionBuilder = Builders.newCollectionBuilder(collectionName)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "collectionBuilder.initializeShardsReplicas(2,0,0,0,clusterBuilder.getLiveNodeBuilders())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50->32 [style = bold, label=""];
14->24 [style = bold, label=""];
49->16 [style = bold, label=""];
12->5 [style = bold, label=""];
11->14 [style = bold, label=""];
11->12 [style = dotted, label="true"];
48->44 [style = dotted, label="true"];
22->48 [style = solid, label="i"];
8->6 [style = bold, label=""];
4->39 [style = dashed, label="0"];
2->16 [style = solid, label="attributeFetcher"];
5->28 [style = bold, label=""];
40->37 [style = dotted, label="true"];
47->43 [style = dotted, label="false"];
18->48 [style = solid, label="i"];
0->19 [style = solid, label="smallNode"];
15->0 [style = bold, label=""];
11->28 [style = dotted, label="true"];
22->11 [style = solid, label="i"];
8->30 [style = solid, label="cluster"];
37->33 [style = bold, label=""];
22->21 [style = solid, label="i"];
49->30 [style = solid, label="placementRequest"];
40->37 [style = bold, label=""];
39->50 [style = bold, label=""];
48->46 [style = dotted, label="false"];
2->16 [style = bold, label=""];
46->38 [style = bold, label=""];
26->17 [style = bold, label=""];
23->20 [style = solid, label="collectionBuilder"];
3->31 [style = dashed, label="0"];
18->11 [style = bold, label=""];
4->19 [style = bold, label=""];
34->31 [style = bold, label=""];
6->49 [style = bold, label=""];
11->12 [style = bold, label=""];
47->43 [style = bold, label=""];
11->5 [style = dotted, label="true"];
48->44 [style = bold, label=""];
20->8 [style = solid, label="solrCollection"];
21->25 [style = bold, label=""];
22->18 [style = solid, label="i"];
21->7 [style = dotted, label="false"];
3->11 [style = solid, label="NUM_NODES"];
1->17 [style = bold, label=""];
16->30 [style = solid, label="placementPlanFactory"];
6->2 [style = bold, label=""];
13->44 [style = dashed, label="0"];
5->21 [style = bold, label=""];
20->8 [style = bold, label=""];
21->9 [style = bold, label=""];
38->18 [style = bold, label=""];
21->9 [style = dotted, label="true"];
33->47 [style = bold, label=""];
23->10 [style = bold, label=""];
21->7 [style = bold, label=""];
32->36 [style = bold, label=""];
6->49 [style = solid, label="solrCollection"];
21->13 [style = dotted, label="true"];
8->16 [style = solid, label="placementRequest"];
44->45 [style = bold, label=""];
10->16 [style = solid, label="cluster"];
22->11 [style = bold, label=""];
17->14 [style = solid, label="collectionName"];
13->18 [style = bold, label=""];
48->38 [style = dotted, label="false"];
27->18 [style = bold, label=""];
36->40 [style = bold, label=""];
4->30 [style = solid, label="attributeFetcher"];
21->27 [style = bold, label=""];
21->27 [style = dotted, label="false"];
13->19 [style = solid, label="smallNode"];
48->45 [style = dotted, label="true"];
15->22 [style = bold, label=""];
48->46 [style = bold, label=""];
21->25 [style = dotted, label="true"];
47->29 [style = bold, label=""];
40->33 [style = bold, label=""];
3->15 [style = solid, label="NUM_NODES"];
41->36 [style = bold, label=""];
14->23 [style = solid, label="collectionBuilder"];
31->15 [style = solid, label="NUM_NODES"];
7->46 [style = dashed, label="0"];
47->29 [style = dotted, label="true"];
34->6 [style = solid, label="collectionName"];
9->25 [style = dashed, label="0"];
18->11 [style = solid, label="i"];
17->3 [style = bold, label=""];
7->18 [style = bold, label=""];
43->41 [style = bold, label=""];
16->4 [style = bold, label=""];
6->16 [style = solid, label="placementPlanFactory"];
45->18 [style = bold, label=""];
17->20 [style = solid, label="collectionName"];
41->35 [style = bold, label=""];
24->23 [style = bold, label=""];
18->12 [style = solid, label="i"];
42->34 [style = bold, label=""];
10->20 [style = bold, label=""];
34->23 [style = solid, label="collectionName"];
17->34 [style = dashed, label="0"];
22->12 [style = solid, label="i"];
25->13 [style = bold, label=""];
29->41 [style = bold, label=""];
11->48 [style = dotted, label="true"];
3->15 [style = bold, label=""];
11->18 [style = dotted, label="true"];
31->48 [style = solid, label="NUM_NODES"];
31->15 [style = bold, label=""];
7->27 [style = dashed, label="0"];
4->30 [style = bold, label=""];
31->11 [style = solid, label="NUM_NODES"];
0->22 [style = bold, label=""];
18->21 [style = solid, label="i"];
28->48 [style = bold, label=""];
30->39 [style = bold, label=""];
11->21 [style = dotted, label="true"];
11->23 [style = bold, label=""];
8->49 [style = dashed, label="0"];
9->13 [style = bold, label=""];
}
