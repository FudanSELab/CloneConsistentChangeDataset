digraph {
1 [style = filled, label = "testGroupByNothingWithImpossibleTimeFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testFilterOnTimeFloorMisaligned['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testQuery(\"SELECT COUNT(*) FROM druid.foo\" + \"WHERE FLOOR(__time TO DAY) = TIMESTAMP '2000-01-02 01:00:00'\" + \"OR FLOOR(__time TO DAY) = TIMESTAMP '2000-01-02 02:00:00'\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec()).granularity(Granularities.ALL).aggregators(aggregators(new CountAggregatorFactory(\"a0\"))).context(TIMESERIES_CONTEXT_DEFAULT).build()),ImmutableList.of())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testQuery(\"SELECT COUNT(*) FROM druid.foo\" + \"WHERE FLOOR(__time TO DAY) = TIMESTAMP '2000-01-02 01:00:00'\" + \"OR FLOOR(__time TO DAY) = TIMESTAMP '2000-01-02 02:00:00'\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec()).granularity(Granularities.ALL).aggregators(aggregators(new CountAggregatorFactory(\"a0\"))).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@928d49))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testQuery(\"SELECT COUNT(*) FROM druid.foo \" + \"WHERE floor(__time TO month) = TIMESTAMP '2000-01-01 00:00:01'\",ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec()).granularity(Granularities.ALL).aggregators(aggregators(new CountAggregatorFactory(\"a0\"))).context(TIMESERIES_CONTEXT_DEFAULT).build()),ImmutableList.of())@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testGroupByNothingWithImpossibleTimeFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0->2 [style = dashed, label="0"];
1->0 [style = bold, label=""];
3->2 [style = bold, label=""];
0->5 [style = dashed, label="0"];
4->5 [style = bold, label=""];
}
