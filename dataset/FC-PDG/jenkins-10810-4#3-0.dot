digraph {
15 [style = filled, label = "assertThat(thing.removeAction(a1),is(false))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(thing.removeActions(),is(false))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "thing.addAction(a1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Arrays.asList(a2),thing.getActions())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(thing.removeActions(),is(true))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Collections.singletonList(a2),thing.getActions())@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertThat(thing.removeAction(a1),is(true))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(thing.removeAction(null),is(false))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "CauseAction a1 = new CauseAction()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "removeActions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ParametersAction a2 = new ParametersAction()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "thing.addAction(a2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Arrays.asList(a1,a2),thing.getActions())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "removeActions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertEquals(Collections.singletonList(a2),thing.getActions())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "removeAction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(Arrays.asList(a2),thing.getActions())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(Arrays.asList(a2),thing.getActions())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->14 [style = bold, label=""];
4->8 [style = solid, label="a2"];
4->7 [style = bold, label=""];
8->9 [style = bold, label=""];
4->0 [style = solid, label="a2"];
1->14 [style = solid, label="a1"];
11->1 [style = bold, label=""];
14->0 [style = bold, label=""];
9->0 [style = bold, label=""];
4->13 [style = solid, label="a2"];
16->13 [style = bold, label=""];
5->10 [style = bold, label=""];
15->6 [style = bold, label=""];
4->6 [style = solid, label="a2"];
7->3 [style = bold, label=""];
6->16 [style = bold, label=""];
12->5 [style = bold, label=""];
9->14 [style = dashed, label="0"];
0->15 [style = bold, label=""];
1->15 [style = solid, label="a1"];
9->12 [style = bold, label=""];
2->1 [style = bold, label=""];
3->8 [style = bold, label=""];
4->3 [style = solid, label="a2"];
4->10 [style = solid, label="a2"];
1->4 [style = bold, label=""];
4->12 [style = solid, label="a2"];
0->5 [style = bold, label=""];
1->8 [style = solid, label="a1"];
6->10 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
5->6 [style = bold, label=""];
1->7 [style = solid, label="a1"];
17->1 [style = bold, label=""];
0->12 [style = dashed, label="0"];
}
