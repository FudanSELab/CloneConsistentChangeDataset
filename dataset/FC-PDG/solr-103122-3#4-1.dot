digraph {
5 [style = filled, label = "SolrQueryRequest req = req()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final Semaphore logReplay = new Semaphore(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testCleanShutdown['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "{DirectUpdateHandler2.commitOnClose = trueUpdateLog.testing_logReplayHook = nullUpdateLog.testing_logReplayFinishHook = nullreq().close()}@@@37@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "SolrQueryRequest req = req()@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "DirectUpdateHandler2.commitOnClose = true@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertU(commit())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "h.close()@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertU(adoc(\"id\",\"E1\",\"val_i\",\"1\"))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "UpdateLog.testing_logReplayFinishHook = null@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "h.close()@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "logReplay.release(10)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\")@@@34@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "clearIndex()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertU(commit())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "UpdateHandler uhandler = req.getCore().getUpdateHandler()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testCleanShutdown['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "createCore()@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "clearIndex()@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "UpdateLog.testing_logReplayHook = new Runnable(){@Override public void run(){try {assertTrue(logReplay.tryAcquire(timeout,TimeUnit.SECONDS))}catch (Exception e) }}@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "UpdateLog.testing_logReplayHook = null@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "UpdateHandler uhandler = req.getCore().getUpdateHandler()@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "final Semaphore logReplayFinish = new Semaphore(0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testCleanShutdown['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "UpdateLog.testing_logReplayFinishHook = new Runnable(){@Override public void run(){logReplayFinish.release()}}@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "UpdateLog ulog = uhandler.getUpdateLog()@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertU(adoc(\"id\",\"E2\",\"val_i\",\"1\"))@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "UpdateLog ulog = uhandler.getUpdateLog()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(10,logReplay.availablePermits())@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
18->24 [style = bold, label=""];
28->6 [style = bold, label=""];
3->1 [style = bold, label=""];
15->14 [style = bold, label=""];
1->15 [style = bold, label=""];
9->27 [style = dashed, label="0"];
0->11 [style = bold, label=""];
8->24 [style = dashed, label="0"];
2->10 [style = bold, label=""];
3->22 [style = bold, label=""];
12->0 [style = bold, label=""];
19->6 [style = bold, label=""];
11->2 [style = bold, label=""];
5->2 [style = solid, label="req"];
21->5 [style = bold, label=""];
20->23 [style = bold, label=""];
13->3 [style = bold, label=""];
10->16 [style = bold, label=""];
23->21 [style = bold, label=""];
25->15 [style = solid, label="req"];
5->13 [style = bold, label=""];
14->12 [style = bold, label=""];
7->6 [style = bold, label=""];
25->26 [style = bold, label=""];
8->9 [style = bold, label=""];
9->5 [style = bold, label=""];
4->12 [style = bold, label=""];
18->8 [style = bold, label=""];
22->1 [style = bold, label=""];
24->27 [style = bold, label=""];
27->25 [style = bold, label=""];
17->18 [style = bold, label=""];
26->20 [style = bold, label=""];
14->4 [style = bold, label=""];
}
