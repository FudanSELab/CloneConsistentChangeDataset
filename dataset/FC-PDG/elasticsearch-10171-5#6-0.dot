digraph {
7 [style = filled, label = "MappedFieldType ft = new KeywordFieldType(\"field\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testRangeQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MappedFieldType ft = new TextFieldType(\"field\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "testRangeQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(\"(range( queries on (text( or (keyword( fields cannot be executed when \" + \"'search.allow_expensive_queries' is set to false.\",ee.getMessage())@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testRangeQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "ElasticsearchException ee = expectThrows(,null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "MappedFieldType ft = createFieldType()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(new TermRangeQuery(\"field\",BytesRefs.toBytesRef(\"foo\"),BytesRefs.toBytesRef(\"bar\"),true,false),ft.rangeQuery(\"foo\",\"bar\",true,false,null,null,null,MOCK_QSC))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->5 [style = dashed, label="0"];
5->1 [style = bold, label=""];
4->3 [style = bold, label=""];
6->5 [style = bold, label=""];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
7->1 [style = bold, label=""];
3->1 [style = bold, label=""];
3->7 [style = dashed, label="0"];
8->7 [style = bold, label=""];
}
