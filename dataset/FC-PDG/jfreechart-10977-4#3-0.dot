digraph {
3 [style = filled, label = "d1.add(1.0,1.1,\"Series 1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CategoryTableXYDataset d1 = new CategoryTableXYDataset()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(d1.equals(d2))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(d1.equals(d2))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "d1.add(3.0,3.3,\"Series 1\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(d1 != d2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "CategoryTableXYDataset d2 = (CategoryTableXYDataset)d1.clone()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(d1.equals(d2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "d2.setIntervalPositionFactor(0.33)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(d1.equals(d2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "d1.setIntervalPositionFactor(0.33)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertFalse(d1.equals(d2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CategoryTableXYDataset d2 = (CategoryTableXYDataset)TestUtilities.serialised(d1)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(d1,d2)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "d1.add(2.0,2.2,\"Series 1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "d2.add(3.0,3.3,\"Series 1\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CategoryTableXYDataset d2 = (CategoryTableXYDataset)TestUtils.serialised(d1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
16->19 [style = solid, label="d2"];
16->17 [style = solid, label="d2"];
16->20 [style = solid, label="d2"];
5->19 [style = solid, label="d1"];
3->1 [style = bold, label=""];
11->14 [style = bold, label=""];
12->17 [style = bold, label=""];
18->15 [style = bold, label=""];
19->10 [style = bold, label=""];
16->19 [style = bold, label=""];
2->4 [style = bold, label=""];
5->2 [style = solid, label="d1"];
2->4 [style = solid, label="d2"];
6->4 [style = solid, label="d2"];
6->4 [style = bold, label=""];
16->13 [style = solid, label="d2"];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
8->20 [style = bold, label=""];
5->4 [style = solid, label="d1"];
16->11 [style = solid, label="d2"];
1->16 [style = bold, label=""];
2->16 [style = dashed, label="0"];
20->12 [style = bold, label=""];
2->6 [style = dashed, label="0"];
9->5 [style = bold, label=""];
5->6 [style = solid, label="d1"];
4->19 [style = dashed, label="0"];
1->2 [style = bold, label=""];
14->13 [style = bold, label=""];
13->8 [style = bold, label=""];
16->15 [style = solid, label="d2"];
17->18 [style = bold, label=""];
0->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
