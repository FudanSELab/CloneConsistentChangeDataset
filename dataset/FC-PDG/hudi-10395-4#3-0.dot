digraph {
3 [style = filled, label = "assertThat(actual1,is(expected1))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "TestData.writeData(TestData.DATA_SET_UPDATE_DELETE,conf)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "TestData.writeData(TestData.DATA_SET_INSERT,conf)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED,true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testReadBaseAndLogFilesWithDisorderUpdateDelete['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final String actual1 = TestData.rowDataToString(result1,true)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final String expected2 = \"(+U(id1, Danny, 22, 1970-01-01T00:00:00.004, par1((\"@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "TestData.writeData(TestData.DATA_SET_SINGLE_INSERT,conf)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final String expected2 = \"(\" + \"+I(id1,Danny,24,1970-01-01T00:00:00.001,par1), \" + \"+I(id2,Stephen,34,1970-01-01T00:00:00.002,par1), \" + \"-D(id3,Julian,53,1970-01-01T00:00:00.003,par2), \" + \"+I(id4,Fabian,31,1970-01-01T00:00:00.004,par2), \" + \"-D(id5,Sophia,18,1970-01-01T00:00:00.005,par3), \" + \"+I(id6,Emma,20,1970-01-01T00:00:00.006,par3), \" + \"+I(id7,Bob,44,1970-01-01T00:00:00.007,par4), \" + \"+I(id8,Han,56,1970-01-01T00:00:00.008,par4), \" + \"-D(id9,Jane,19,1970-01-01T00:00:00.006,par3)(\"@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS,1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<RowData> result2 = readData(inputFormat)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(inputFormat,instanceOf())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "InputFormat<RowData,?> inputFormat = this.tableSource.getInputFormat()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final String actual1 = TestData.rowDataToString(result1)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "this.tableSource.reset()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String actual2 = TestData.rowDataToString(result2,true)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(actual2,is(expected2))@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "options.put(FlinkOptions.CHANGELOG_ENABLED.key(),\"true\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Map<String,String> options = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final String expected1 = \"(\" + \"+I(id1,Danny,24,1970-01-01T00:00:00.001,par1), \" + \"+I(id2,Stephen,34,1970-01-01T00:00:00.002,par1), \" + \"+I(id4,Fabian,31,1970-01-01T00:00:00.004,par2), \" + \"+I(id6,Emma,20,1970-01-01T00:00:00.006,par3), \" + \"+I(id7,Bob,44,1970-01-01T00:00:00.007,par4), \" + \"+I(id8,Han,56,1970-01-01T00:00:00.008,par4)(\"@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<RowData> result1 = readData(inputFormat)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final String actual2 = TestData.rowDataToString(result2)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "beforeEach(HoodieTableType.MERGE_ON_READ,options)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testReadBaseAndLogFilesWithDeletes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final String expected1 = \"(+U(id1,Danny,22,1970-01-01T00:00:00.004,par1)(\"@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final String expected2 = \"(+U(id1,Danny,22,1970-01-01T00:00:00.004,par1)(\"@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "final String expected1 = \"(+U(id1, Danny, 22, 1970-01-01T00:00:00.004, par1((\"@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "((MergeOnReadInputFormat)inputFormat).isEmitDelete(true)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "inputFormat = this.tableSource.getInputFormat()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testReadBaseAndLogFilesWithDisorderUpdateDelete['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED,false)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TestData.writeData(TestData.DATA_SET_DISORDER_UPDATE_DELETE,conf)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
15->8 [style = solid, label="result2"];
8->28 [style = bold, label=""];
4->10 [style = solid, label="expected2"];
28->10 [style = bold, label=""];
24->10 [style = solid, label="actual2"];
15->24 [style = solid, label="result2"];
26->10 [style = bold, label=""];
0->6 [style = bold, label=""];
23->3 [style = solid, label="expected1"];
25->23 [style = bold, label=""];
31->5 [style = bold, label=""];
18->27 [style = dashed, label="0"];
1->29 [style = dashed, label="0"];
1->20 [style = bold, label=""];
11->23 [style = dashed, label="0"];
19->11 [style = bold, label=""];
23->3 [style = bold, label=""];
25->3 [style = solid, label="actual1"];
4->26 [style = dashed, label="0"];
8->24 [style = dashed, label="0"];
5->17 [style = bold, label=""];
12->0 [style = bold, label=""];
22->5 [style = bold, label=""];
30->3 [style = solid, label="expected1"];
6->29 [style = bold, label=""];
9->19 [style = solid, label="result1"];
4->28 [style = dashed, label="0"];
20->27 [style = bold, label=""];
20->18 [style = bold, label=""];
6->1 [style = bold, label=""];
24->26 [style = bold, label=""];
29->20 [style = bold, label=""];
9->25 [style = solid, label="result1"];
17->12 [style = bold, label=""];
21->9 [style = bold, label=""];
30->3 [style = bold, label=""];
11->3 [style = bold, label=""];
7->9 [style = solid, label="inputFormat"];
9->25 [style = bold, label=""];
15->24 [style = bold, label=""];
27->7 [style = bold, label=""];
2->15 [style = bold, label=""];
7->21 [style = solid, label="inputFormat"];
14->15 [style = solid, label="inputFormat"];
3->13 [style = bold, label=""];
7->21 [style = bold, label=""];
9->19 [style = bold, label=""];
16->5 [style = bold, label=""];
14->2 [style = bold, label=""];
11->3 [style = solid, label="expected1"];
19->3 [style = solid, label="actual1"];
8->10 [style = solid, label="actual2"];
8->4 [style = bold, label=""];
19->25 [style = dashed, label="0"];
11->30 [style = dashed, label="0"];
18->7 [style = bold, label=""];
5->12 [style = solid, label="options"];
28->10 [style = solid, label="expected2"];
13->14 [style = bold, label=""];
15->8 [style = bold, label=""];
26->10 [style = solid, label="expected2"];
19->30 [style = bold, label=""];
}
