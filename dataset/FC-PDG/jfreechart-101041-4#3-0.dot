digraph {
19 [style = filled, label = "ko1 = new KeyedObject(\"Test\",obj1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(ko1,ko2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ko2 = (KeyedObject)ko1.clone()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "KeyedObjects ko2 = (KeyedObjects)TestUtilities.serialised(ko1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertTrue(ko2.getObject() == obj1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ko1.addObject(\"Key 2\",null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(ko1 != ko2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "KeyedObjects ko2 = (KeyedObjects)TestUtils.serialised(ko1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testCloning2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "KeyedObjects ko1 = new KeyedObjects()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ko1.addObject(\"Key 1\",\"Object 1\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "KeyedObject ko2 = (KeyedObject)ko1.clone()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(ko1 != ko2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "KeyedObject ko1 = new KeyedObject(\"Test\",obj1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(ko2.getObject() != obj1)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ko1.addObject(\"Key 3\",\"Object 2\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Object obj1 = new ArrayList()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "obj1 = new DefaultPieDataset()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
13->18 [style = solid, label="obj1"];
15->19 [style = solid, label="obj1"];
6->3 [style = bold, label=""];
12->23 [style = solid, label="ko2"];
10->20 [style = bold, label=""];
5->14 [style = dashed, label="0"];
11->14 [style = bold, label=""];
4->6 [style = bold, label=""];
19->9 [style = solid, label="ko1"];
21->15 [style = bold, label=""];
18->12 [style = bold, label=""];
13->21 [style = solid, label="obj1"];
9->10 [style = bold, label=""];
15->22 [style = solid, label="obj1"];
15->19 [style = bold, label=""];
4->5 [style = solid, label="ko1"];
4->7 [style = solid, label="ko1"];
2->4 [style = bold, label=""];
7->5 [style = solid, label="ko2"];
3->0 [style = bold, label=""];
19->16 [style = bold, label=""];
0->7 [style = bold, label=""];
20->22 [style = bold, label=""];
4->1 [style = solid, label="ko1"];
6->18 [style = dashed, label="0"];
16->9 [style = solid, label="ko2"];
16->20 [style = solid, label="ko2"];
7->5 [style = bold, label=""];
12->14 [style = solid, label="ko2"];
3->12 [style = dashed, label="0"];
1->5 [style = solid, label="ko2"];
0->1 [style = bold, label=""];
12->23 [style = bold, label=""];
17->13 [style = bold, label=""];
8->4 [style = bold, label=""];
14->21 [style = bold, label=""];
23->11 [style = bold, label=""];
1->7 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
18->23 [style = solid, label="ko1"];
16->9 [style = bold, label=""];
13->18 [style = bold, label=""];
}
