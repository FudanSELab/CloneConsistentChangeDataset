digraph {
73 [style = filled, label = "doTestJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+Y0\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+Y1\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "processor.checkAndClearProcessResult()@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertOutputKeyValue(driver,1,\"XX1+YY1\")@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+YY0\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "int i = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertNull(driver.readOutput(output))@@@60@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertNull(driver.readOutput(output))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+c0 (ts: 0)\",\"0:B0+c0 (ts: 0)\",\"0:C0+c0 (ts: 0)\",\"1:A1+c1 (ts: 0)\",\"1:B1+c1 (ts: 0)\",\"1:C1+c1 (ts: 0)\")@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertOutputKeyValue(driver,0,\"XX0+Y0\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertOutputKeyValue(driver,2,\"XX2+YY2\")@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "i < 2@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,null,\"SomeVal\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertNull(driver.readOutput(output))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "joined.process(supplier)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertNull(driver.readOutput(output))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+b0 (ts: 0)\",\"0:B0+b0 (ts: 0)\",\"1:A1+b1 (ts: 0)\",\"1:B1+b1 (ts: 0)\",\"2:B2+b2 (ts: 0)\",\"3:B3+b3 (ts: 0)\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "int i = 0@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertOutputKeyValue(driver,0,null)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"C\" + expectedKey))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertOutputKeyValue(driver,3,\"XX3+YY3\")@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "i++@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"B\" + expectedKey))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,null,\"AnotherVal\"))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final StreamsBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "int i = 0@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertNull(driver.readOutput(output))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertOutputKeyValue(driver,3,\"XX3+YY3\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int i = 0@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertNull(driver.readOutput(output))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "i < 2@@@45@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+YY2\")@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "final int(( expectedKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "i++@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"b\" + expectedKey))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertNull(driver.readOutput(output))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "i++@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"A\" + expectedKeys(i())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"c\" + expectedKeys(i())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i++@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "i < 2@@@46@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertOutputKeyValue(driver,0,\"XX0+YY0\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c3d4f7@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "processor.checkAndClearProcessResult(\"0:C0+a0 (ts: 0)\",\"0:C0+b0 (ts: 0)\",\"1:C1+a1 (ts: 0)\",\"1:C1+b1 (ts: 0)\",\"2:C2+b2 (ts: 0)\",\"3:C3+b3 (ts: 0)\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertNull(driver.readOutput(output))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,null))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,null,\"XX\" + 1))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "i < 2@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "processor.checkAndClearProcessResult(\"0:B0+a0 (ts: 0)\",\"1:B1+a1 (ts: 0)\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertOutputKeyValue(driver,1,\"XX1+Y1\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertOutputKeyValue(driver,1,null)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertOutputKeyValue(driver,2,\"XX2+YY2\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+YY1\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+YY3\")@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65->34 [style = solid, label="expectedKeys"];
29->15 [style = bold, label=""];
0->12 [style = dotted, label="true"];
55->72 [style = bold, label=""];
68->69 [style = bold, label=""];
49->33 [style = solid, label="i"];
2->6 [style = bold, label=""];
26->34 [style = bold, label=""];
71->67 [style = solid, label="i"];
26->34 [style = solid, label="i"];
12->25 [style = solid, label="i"];
4->75 [style = dashed, label="0"];
7->15 [style = solid, label="i"];
57->59 [style = bold, label=""];
9->7 [style = bold, label=""];
0->25 [style = dotted, label="true"];
33->26 [style = dotted, label="true"];
7->4 [style = solid, label="i"];
73->51 [style = dotted, label="true"];
19->24 [style = bold, label=""];
75->42 [style = bold, label=""];
71->67 [style = bold, label=""];
19->24 [style = solid, label="i"];
42->44 [style = bold, label=""];
60->47 [style = bold, label=""];
10->8 [style = bold, label=""];
24->21 [style = bold, label=""];
34->26 [style = bold, label=""];
0->25 [style = bold, label=""];
28->36 [style = dashed, label="0"];
15->29 [style = dotted, label="true"];
34->17 [style = bold, label=""];
11->13 [style = bold, label=""];
49->26 [style = solid, label="i"];
37->32 [style = bold, label=""];
5->19 [style = solid, label="i"];
69->42 [style = solid, label="i"];
67->71 [style = dotted, label="true"];
28->3 [style = bold, label=""];
70->74 [style = bold, label=""];
31->20 [style = bold, label=""];
53->60 [style = bold, label=""];
71->38 [style = solid, label="i"];
24->21 [style = dotted, label="true"];
67->38 [style = bold, label=""];
35->31 [style = bold, label=""];
24->28 [style = bold, label=""];
66->46 [style = bold, label=""];
17->5 [style = bold, label=""];
22->33 [style = bold, label=""];
65->75 [style = solid, label="expectedKeys"];
63->38 [style = solid, label="i"];
24->19 [style = bold, label=""];
25->34 [style = dashed, label="0"];
21->19 [style = bold, label=""];
44->75 [style = dotted, label="true"];
1->35 [style = bold, label=""];
1->22 [style = solid, label="supplier"];
7->29 [style = solid, label="i"];
58->54 [style = bold, label=""];
3->0 [style = bold, label=""];
23->14 [style = bold, label=""];
64->45 [style = bold, label=""];
19->57 [style = bold, label=""];
62->43 [style = bold, label=""];
0->23 [style = bold, label=""];
43->66 [style = bold, label=""];
7->68 [style = bold, label=""];
18->1 [style = bold, label=""];
44->42 [style = dotted, label="true"];
47->41 [style = bold, label=""];
5->24 [style = solid, label="i"];
24->19 [style = dotted, label="true"];
69->75 [style = solid, label="i"];
16->21 [style = solid, label="expectedKeys"];
26->33 [style = solid, label="i"];
54->61 [style = bold, label=""];
49->34 [style = solid, label="i"];
13->18 [style = bold, label=""];
23->58 [style = bold, label=""];
0->12 [style = bold, label=""];
73->65 [style = dotted, label="true"];
30->32 [style = bold, label=""];
4->29 [style = bold, label=""];
21->38 [style = dashed, label="0"];
65->38 [style = solid, label="expectedKeys"];
32->16 [style = bold, label=""];
33->5 [style = bold, label=""];
73->70 [style = bold, label=""];
33->26 [style = bold, label=""];
3->12 [style = solid, label="i"];
44->75 [style = bold, label=""];
63->67 [style = solid, label="i"];
39->40 [style = bold, label=""];
5->24 [style = bold, label=""];
6->10 [style = bold, label=""];
63->67 [style = bold, label=""];
29->15 [style = solid, label="i"];
67->38 [style = dotted, label="true"];
7->15 [style = bold, label=""];
52->50 [style = bold, label=""];
14->59 [style = dashed, label="0"];
14->2 [style = bold, label=""];
56->63 [style = bold, label=""];
61->62 [style = bold, label=""];
16->4 [style = solid, label="expectedKeys"];
3->25 [style = solid, label="i"];
69->44 [style = solid, label="i"];
16->11 [style = bold, label=""];
12->0 [style = solid, label="i"];
72->49 [style = bold, label=""];
25->23 [style = bold, label=""];
33->34 [style = dotted, label="true"];
16->25 [style = solid, label="expectedKeys"];
31->20 [style = solid, label="stream2"];
5->21 [style = solid, label="i"];
40->64 [style = bold, label=""];
8->66 [style = dashed, label="0"];
50->7 [style = bold, label=""];
48->53 [style = bold, label=""];
46->52 [style = bold, label=""];
12->0 [style = bold, label=""];
69->44 [style = bold, label=""];
15->4 [style = dotted, label="true"];
20->22 [style = bold, label=""];
42->75 [style = solid, label="i"];
3->0 [style = solid, label="i"];
42->44 [style = solid, label="i"];
29->4 [style = solid, label="i"];
24->36 [style = bold, label=""];
67->55 [style = bold, label=""];
19->21 [style = solid, label="i"];
25->12 [style = bold, label=""];
63->71 [style = solid, label="i"];
44->48 [style = bold, label=""];
12->25 [style = bold, label=""];
49->33 [style = bold, label=""];
15->4 [style = bold, label=""];
8->9 [style = bold, label=""];
59->0 [style = bold, label=""];
41->39 [style = bold, label=""];
15->27 [style = bold, label=""];
26->33 [style = bold, label=""];
33->34 [style = bold, label=""];
6->23 [style = dashed, label="0"];
74->56 [style = bold, label=""];
38->71 [style = bold, label=""];
36->3 [style = bold, label=""];
}
