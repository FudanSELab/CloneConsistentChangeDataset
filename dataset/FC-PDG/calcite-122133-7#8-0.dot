digraph {
7 [style = filled, label = "final RelNode input@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "return new EnumerableFilter(cluster,traitSet,input,condition)@@@16@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final RelTraitSet traitSet = cluster.traitSetOf(EnumerableConvention.INSTANCE).replaceIfs(RelCollationTraitDef.INSTANCE,new Supplier<List<RelCollation>>(){public List<RelCollation> get(){return RelMdCollation.filter(mq,input)}}).replaceIf(RelDistributionTraitDef.INSTANCE,new Supplier<RelDistribution>(){public RelDistribution get(){return RelMdDistribution.filter(mq,input)}})@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "return new EnumerableFilter(cluster,traitSet,input,condition)@@@6@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "RexNode condition@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RexNode condition@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "create['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final RelNode input@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final RelOptCluster cluster = input.getCluster()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RexNode condition@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return new BindableFilter(cluster,traitSet,input,condition)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final RelTraitSet traitSet = cluster.traitSetOf(EnumerableConvention.INSTANCE).replaceIfs(RelCollationTraitDef.INSTANCE,null).replaceIf(RelDistributionTraitDef.INSTANCE,null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final RelMetadataQuery mq = cluster.getMetadataQuery()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "create['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "create['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final RelTraitSet traitSet = cluster.traitSetOf(BindableConvention.INSTANCE).replaceIfs(RelCollationTraitDef.INSTANCE,new Supplier<List<RelCollation>>(){public List<RelCollation> get(){return RelMdCollation.filter(mq,input)}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
13->14 [style = solid, label="condition"];
7->8 [style = solid, label="input"];
12->14 [style = solid, label="input"];
11->14 [style = bold, label=""];
1->14 [style = dashed, label="0"];
4->1 [style = solid, label="condition"];
12->11 [style = solid, label="input"];
3->8 [style = solid, label="cluster"];
5->6 [style = dotted, label="true"];
0->11 [style = dashed, label="0"];
10->8 [style = solid, label="traitSet"];
2->10 [style = bold, label=""];
15->3 [style = bold, label=""];
2->11 [style = solid, label="mq"];
9->6 [style = dotted, label="true"];
0->10 [style = dashed, label="0"];
5->4 [style = dotted, label="true"];
15->13 [style = dotted, label="true"];
2->0 [style = bold, label=""];
6->13 [style = dashed, label="0"];
3->1 [style = solid, label="cluster"];
3->2 [style = bold, label=""];
10->8 [style = bold, label=""];
6->1 [style = solid, label="input"];
0->1 [style = bold, label=""];
15->12 [style = dotted, label="true"];
9->3 [style = bold, label=""];
9->7 [style = dotted, label="true"];
11->14 [style = solid, label="traitSet"];
2->0 [style = solid, label="mq"];
0->1 [style = solid, label="traitSet"];
2->11 [style = bold, label=""];
6->0 [style = solid, label="input"];
3->14 [style = solid, label="cluster"];
6->8 [style = solid, label="condition"];
}
