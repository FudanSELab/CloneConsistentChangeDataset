digraph {
2 [style = filled, label = "builder.addRuleClass()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "sql(sql).withPre(preProgram).with(hepPlanner).checkUnchanged()@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "sql(sql).with(hepPlanner).checkUnchanged()@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testReduceNullableCase['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "checkPlanning(tester,preProgram,hepPlanner,sql,true)@@@9@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final String sql = \"SELECT CASE WHEN 1=2 \" + \"THEN cast((values(1)) as integer) \" + \"ELSE 2 end from (values(1))\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "HepPlanner hepPlanner = new HepPlanner(builder.build())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String sql = \"select *\" + \"from (select (case when sal > 1000 then null else false end) as caseCol from emp)\" + \"where NOT(caseCol)\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testReduceNot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "HepProgram preProgram = new HepProgramBuilder().build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "HepProgramBuilder builder = new HepProgramBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testReduceNot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "hepPlanner.addRule(ReduceExpressionsRule.FILTER_INSTANCE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->1 [style = bold, label=""];
7->6 [style = bold, label=""];
13->12 [style = bold, label=""];
5->3 [style = bold, label=""];
0->2 [style = bold, label=""];
10->11 [style = bold, label=""];
9->0 [style = bold, label=""];
0->1 [style = solid, label="preProgram"];
3->1 [style = solid, label="sql"];
6->1 [style = solid, label="hepPlanner"];
5->6 [style = dashed, label="0"];
3->8 [style = bold, label=""];
2->7 [style = bold, label=""];
4->0 [style = bold, label=""];
6->5 [style = bold, label=""];
6->10 [style = bold, label=""];
12->2 [style = bold, label=""];
}
