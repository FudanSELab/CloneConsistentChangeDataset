digraph {
16 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "lookupReferencesManager.start()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "lookupReferencesManager.get(\"test\") != null@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "FullResponseHolder responseHolder = new FullResponseHolder(HttpResponseStatus.OK,EasyMock.createNiceMock(),new StringBuilder().append(strResult))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "lookupReferencesManager.remove(\"test\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createMock()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "replay(config)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "LookupReferencesManager lookupReferencesManager = new LookupReferencesManager(new LookupConfig(temporaryFolder.newFolder().getAbsolutePath()),mapper,druidLeaderClient,config)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "EasyMock.expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "lookupReferencesManager.add(\"test\",testContainer)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "lookupMap.put(\"testMockForRealModeWithMainThread\",container)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "replay(druidLeaderClient)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "!testContainer.equals(lookupReferencesManager.get(\"test\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "EasyMock.replay(druidLeaderClient)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Thread.sleep(100)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.destroy()).andReturn(true).once()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testGetNotThere['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testRealModeWithMainThread['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "LookupExtractorFactoryContainer testContainer = new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"test\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "lookupReferencesManager.stop()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Thread.sleep(100)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testGetNotThere['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "EasyMock.expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.start()).andReturn(true).once()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertFalse(lookupReferencesManager.mainThread.isAlive())@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Request request = new Request(HttpMethod.GET,new URL(\"http://localhost:1234/xx\"))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertTrue(lookupReferencesManager.mainThread.isAlive())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "EasyMock.replay(config)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->10 [style = bold, label=""];
1->7 [style = solid, label="responseHolder"];
5->18 [style = solid, label="request"];
27->12 [style = bold, label=""];
28->30 [style = bold, label=""];
34->19 [style = bold, label=""];
8->9 [style = solid, label="lookupMap"];
7->17 [style = dashed, label="0"];
1->15 [style = dashed, label="0"];
20->34 [style = bold, label=""];
3->18 [style = dashed, label="0"];
2->3 [style = bold, label=""];
5->3 [style = solid, label="request"];
17->4 [style = bold, label=""];
29->31 [style = solid, label="lookupExtractorFactory"];
10->32 [style = bold, label=""];
0->15 [style = solid, label="responseHolder"];
7->4 [style = bold, label=""];
12->24 [style = bold, label=""];
12->9 [style = bold, label=""];
1->7 [style = bold, label=""];
33->21 [style = solid, label="testContainer"];
36->20 [style = bold, label=""];
0->15 [style = bold, label=""];
3->0 [style = bold, label=""];
24->5 [style = bold, label=""];
34->22 [style = bold, label=""];
9->0 [style = solid, label="strResult"];
29->33 [style = solid, label="lookupExtractorFactory"];
6->2 [style = bold, label=""];
32->29 [style = bold, label=""];
5->16 [style = bold, label=""];
29->28 [style = bold, label=""];
25->27 [style = bold, label=""];
12->5 [style = solid, label="lookupMap"];
31->26 [style = bold, label=""];
15->17 [style = bold, label=""];
34->22 [style = dotted, label="true"];
6->16 [style = dashed, label="0"];
21->36 [style = bold, label=""];
5->6 [style = bold, label=""];
36->23 [style = bold, label=""];
2->14 [style = dashed, label="0"];
10->32 [style = dashed, label="0"];
30->31 [style = bold, label=""];
0->1 [style = bold, label=""];
19->35 [style = bold, label=""];
22->34 [style = bold, label=""];
12->24 [style = dashed, label="0"];
5->1 [style = solid, label="strResult"];
9->5 [style = bold, label=""];
11->8 [style = bold, label=""];
16->14 [style = bold, label=""];
14->18 [style = bold, label=""];
23->36 [style = bold, label=""];
6->0 [style = solid, label="request"];
13->8 [style = bold, label=""];
33->21 [style = bold, label=""];
36->23 [style = dotted, label="true"];
26->33 [style = bold, label=""];
0->1 [style = solid, label="responseHolder"];
18->0 [style = bold, label=""];
8->12 [style = bold, label=""];
}
