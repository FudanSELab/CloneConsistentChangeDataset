digraph {
43 [style = filled, label = "DataSourceOrigin origin@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "DataSourceProviderDescriptor provider = DataSourceProviderRegistry.getInstance().getDataSourceProvider(dsProviderID)@@@87@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "!passwordReadCanceled@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "log.warn(\"Empty datasource provider for datasource '\" + id + \"'\")@@@84@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "Map<String,Object> profileMap = vmMap.getValue()@@@67@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "dataSource = new DataSourceDescriptor(registry,origin,id,driver,new DBPConnectionConfiguration())@@@106@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "String credJson = loadConfigFile(credFile,true)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
141 [style = filled, label = "curNetworkHandler.setPassword(creds(1()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "String color = JSONUtils.getObjectProperty(ctConfig,RegistryConstants.ATTR_COLOR)@@@48@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "String configJson = loadConfigFile(configFile,decryptProject)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
137 [style = filled, label = "@NotNull Map.Entry<String,Map<String,Object>> handlerObject@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "IFolder mdFolder = registry.getProject().getMetadataFolder(false)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "DBWNetworkProfile profile = new DBWNetworkProfile()@@@68@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "DBSObjectFilter filter = readObjectFiler(filterCfg)@@@200@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "String id = conMap.getKey()@@@81@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "log.warn(\"Can't find network handler '\" + handlerId + \"'\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "DataSourceDescriptor dataSource = registry.getDataSource(id)@@@103@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "dataSource.setName(JSONUtils.getString(conObject,RegistryConstants.ATTR_NAME))@@@113@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "log.error(\"Error reading secure credentials file\",e)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "final String folderPath = JSONUtils.getString(conObject,RegistryConstants.ATTR_FOLDER)@@@118@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "IFile configFile@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
95 [style = filled, label = "profile.updateConfiguration(configuration)@@@74@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "DBPConnectionType ct = DBWorkbench.getPlatform().getDataSourceProviderRegistry().getConnectionType(id,null)@@@52@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "dataSource.setLockPasswordHash(CommonUtils.toString(conObject.get(RegistryConstants.ATTR_LOCK_PASSWORD)))@@@122@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ByteArrayOutputStream credBuffer = new ByteArrayOutputStream()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "String id = vmMap.getKey()@@@61@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DBSObjectFilter filter = readObjectFiler(ctMap)@@@219@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "NetworkHandlerDescriptor handlerDescriptor = NetworkHandlerRegistry.getInstance().getDescriptor(handlerId)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
133 [style = filled, label = "Map<String,Object> handlerCfg = handlerObject.getValue()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "{deserializeModifyPermissions(conObject,dataSource)}@@@193@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "folder = new DataSourceFolder(registry,parent,name,description)@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "folder == null@@@35@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "String credJson = encrypter.decrypt(credBuffer.toByteArray())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "driver = provider.createDriver(driverId)@@@96@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "log.warn(\"Can't find datasource provider \" + dsProviderID + \" for datasource '\" + id + \"'\")@@@89@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Boolean autoCommit = JSONUtils.getObjectProperty(ctConfig,\"auto-commit\")@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "registry.addDataSourceFolder(folder)@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "dataSource.clearFilters()@@@111@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "Map<String,Object> jsonMap = JSONUtils.parseMap(CONFIG_GSON,configReader)@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "folderPath != null@@@119@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "secureProperties.putAll(res)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DBVModel model = new DBVModel(id,vmMap.getValue())@@@62@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Boolean confirmExecute = JSONUtils.getObjectProperty(ctConfig,\"confirm-execute\")@@@50@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "registry.addDataSourceToList(dataSource)@@@211@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
136 [style = filled, label = "final String(( creds = readSecuredCredentials(handlerCfg,dataSource,profile,\"network/\" + handlerId)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "DriverDescriptor driver = provider.getDriver(driverId)@@@93@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "DataSourceRegistry.ParseResults parseResults@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "registry.addSavedFilter(filter)@@@220@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "curNetworkHandler.setProperties(properties)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "String profileName = vmMap.getKey()@@@66@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "!CommonUtils.isEmpty(typeName)@@@199@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "driver.setName(driverId)@@@97@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "properties != null@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "provider = (DataSourceProviderDescriptor)DataSourceProviderRegistry.getInstance().makeFakeProvider(dsProviderID)@@@90@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "!CommonUtils.isEmpty(userName)@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "deserializeModifyPermissions(ctConfig,ct)@@@57@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "InputStream is@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "registry.updateNetworkProfile(profile)@@@77@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "DataSourceOrigin origin@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "driver.setDescription(\"Missing driver \" + driverId)@@@98@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Map<String,Object> conObject = conMap.getValue()@@@80@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "provider == null@@@88@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "curNetworkHandler.setSavePassword(JSONUtils.getBoolean(handlerCfg,RegistryConstants.ATTR_SAVE_PASSWORD))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "newDataSource@@@105@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "dataSource.setFolder(registry.findFolderByPath(folderPath,true))@@@120@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "parseNetworkHandlerConfig['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "IFile credFile = mdFolder.getFile(DBPDataSourceRegistry.CREDENTIALS_CONFIG_FILE_PREFIX + origin.getConfigSuffix() + DBPDataSourceRegistry.CREDENTIALS_CONFIG_FILE_EXT)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "return curNetworkHandler@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "newDataSource@@@210@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "String id = ctMap.getKey()@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "credFile.exists()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "curNetworkHandler.setUserName(creds(0()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
130 [style = filled, label = "handlerDescriptor == null@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "String description = JSONUtils.getObjectProperty(ctConfig,RegistryConstants.ATTR_DESCRIPTION)@@@47@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "parseResults.updatedDataSources.add(dataSource)@@@215@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "dataSource.setVirtualModel(dbvModel)@@@208@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "parseDataSources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
138 [style = filled, label = "curNetworkHandler.isSavePassword()@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "ct = new DBPConnectionType(id,name,color,description,CommonUtils.toBoolean(autoCommit),CommonUtils.toBoolean(confirmExecute),CommonUtils.toBoolean(confirmDataChange))@@@54@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "boolean decryptProject = CommonUtils.toBoolean(registry.getProject().getProjectProperty(DBPProject.PROP_SECURE_PROJECT))@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "driver.setDriverClassName(\"java.sql.Driver\")@@@99@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "DataSourceFolder folder = parent == null? registry.findFolderByPath(name,true): parent.getChild(name)@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "DBWHandlerConfiguration curNetworkHandler = new DBWHandlerConfiguration(handlerDescriptor,dataSource == null? null: dataSource.getDriver())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "ct == null@@@53@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "{Map<String,Object> jsonMap = JSONUtils.parseMap(CONFIG_GSON,new StringReader(configJson))for (Map.Entry<String,Map<String,Object>> folderMap : JSONUtils.getNestedObjects(jsonMap,\"folders\")){String name = folderMap.getKey()String description = JSONUtils.getObjectProperty(folderMap.getValue(),RegistryConstants.ATTR_DESCRIPTION)String parentFolder = JSONUtils.getObjectProperty(folderMap.getValue(),RegistryConstants.ATTR_PARENT)DataSourceFolder parent = parentFolder == null? null: registry.findFolderByPath(parentFolder,true)DataSourceFolder folder = parent == null? registry.findFolderByPath(name,true): parent.getChild(name)if (folder == null) {folder = new DataSourceFolder(registry,parent,name,description)registry.addDataSourceFolder(folder)}{folder.setDescription(description)}}for (Map.Entry<String,Map<String,Object>> ctMap : JSONUtils.getNestedObjects(jsonMap,\"connection-types\")){String id = ctMap.getKey()Map<String,Object> ctConfig = ctMap.getValue()String name = JSONUtils.getObjectProperty(ctConfig,RegistryConstants.ATTR_NAME)String description = JSONUtils.getObjectProperty(ctConfig,RegistryConstants.ATTR_DESCRIPTION)String color = JSONUtils.getObjectProperty(ctConfig,RegistryConstants.ATTR_COLOR)Boolean autoCommit = JSONUtils.getObjectProperty(ctConfig,\"auto-commit\")Boolean confirmExecute = JSONUtils.getObjectProperty(ctConfig,\"confirm-execute\")Boolean confirmDataChange = JSONUtils.getObjectProperty(ctConfig,\"confirm-data-change\")DBPConnectionType ct = DBWorkbench.getPlatform().getDataSourceProviderRegistry().getConnectionType(id,null)if (ct == null) {ct = new DBPConnectionType(id,name,color,description,CommonUtils.toBoolean(autoCommit),CommonUtils.toBoolean(confirmExecute),CommonUtils.toBoolean(confirmDataChange))DBWorkbench.getPlatform().getDataSourceProviderRegistry().addConnectionType(ct)}deserializeModifyPermissions(ctConfig,ct)}Map<String,DBVModel> modelMap = new LinkedHashMap<>()for (Map.Entry<String,Map<String,Object>> vmMap : JSONUtils.getNestedObjects(jsonMap,\"virtual-models\")){String id = vmMap.getKey()DBVModel model = new DBVModel(id,vmMap.getValue())modelMap.put(id,model)}for (Map.Entry<String,Map<String,Object>> vmMap : JSONUtils.getNestedObjects(jsonMap,\"network-profiles\")){String profileName = vmMap.getKey()Map<String,Object> profileMap = vmMap.getValue()DBWNetworkProfile profile = new DBWNetworkProfile()profile.setProfileName(profileName)profile.setProperties(JSONUtils.deserializeStringMap(profileMap,\"properties\"))for (Map.Entry<String,Map<String,Object>> handlerMap : JSONUtils.getNestedObjects(profileMap,\"handlers\")){DBWHandlerConfiguration configuration = parseNetworkHandlerConfig(null,profile,handlerMap)if (configuration != null) {profile.updateConfiguration(configuration)}}registry.updateNetworkProfile(profile)}for (Map.Entry<String,Map<String,Object>> conMap : JSONUtils.getNestedObjects(jsonMap,\"connections\")){Map<String,Object> conObject = conMap.getValue()String id = conMap.getKey()String dsProviderID = CommonUtils.toString(conObject.get(RegistryConstants.ATTR_PROVIDER))if (CommonUtils.isEmpty(dsProviderID)) {log.warn(\"Empty datasource provider for datasource '\" + id + \"'\")continue}DataSourceProviderDescriptor provider = DataSourceProviderRegistry.getInstance().getDataSourceProvider(dsProviderID)if (provider == null) {log.warn(\"Can't find datasource provider \" + dsProviderID + \" for datasource '\" + id + \"'\")provider = (DataSourceProviderDescriptor)DataSourceProviderRegistry.getInstance().makeFakeProvider(dsProviderID)}String driverId = CommonUtils.toString(conObject.get(RegistryConstants.ATTR_DRIVER))DriverDescriptor driver = provider.getDriver(driverId)if (driver == null) {log.warn(\"Can't find driver \" + driverId + \" in datasource provider \" + provider.getId() + \" for datasource '\" + id + \"'. Create new driver\")driver = provider.createDriver(driverId)driver.setName(driverId)driver.setDescription(\"Missing driver \" + driverId)driver.setDriverClassName(\"java.sql.Driver\")driver.setTemporary(true)provider.addDriver(driver)}DataSourceDescriptor dataSource = registry.getDataSource(id)boolean newDataSource = (dataSource == null)if (newDataSource) {dataSource = new DataSourceDescriptor(registry,origin,id,driver,new DBPConnectionConfiguration())}{dataSource.getConnectionConfiguration().setProperties(Collections.emptyMap())dataSource.getConnectionConfiguration().setHandlers(Collections.emptyList())dataSource.clearFilters()}dataSource.setName(JSONUtils.getString(conObject,RegistryConstants.ATTR_NAME))dataSource.setSavePassword(JSONUtils.getBoolean(conObject,RegistryConstants.ATTR_SAVE_PASSWORD))dataSource.setShowSystemObjects(JSONUtils.getBoolean(conObject,RegistryConstants.ATTR_SHOW_SYSTEM_OBJECTS))dataSource.setShowUtilityObjects(JSONUtils.getBoolean(conObject,RegistryConstants.ATTR_SHOW_UTIL_OBJECTS))dataSource.setConnectionReadOnly(JSONUtils.getBoolean(conObject,RegistryConstants.ATTR_READ_ONLY))final String folderPath = JSONUtils.getString(conObject,RegistryConstants.ATTR_FOLDER)if (folderPath != null) {dataSource.setFolder(registry.findFolderByPath(folderPath,true))}dataSource.setLockPasswordHash(CommonUtils.toString(conObject.get(RegistryConstants.ATTR_LOCK_PASSWORD))){Map<String,Object> cfgObject = JSONUtils.getObject(conObject,\"configuration\")DBPConnectionConfiguration config = dataSource.getConnectionConfiguration()config.setHostName(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_HOST))config.setHostPort(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_PORT))config.setServerName(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_SERVER))config.setDatabaseName(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_DATABASE))config.setUrl(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_URL))if (!passwordReadCanceled) {final String(( creds = readSecuredCredentials(cfgObject,dataSource,null,null)config.setUserName(creds(0()if (dataSource.isSavePassword()) {config.setUserPassword(creds(1()}}{String userName = JSONUtils.getString(cfgObject,RegistryConstants.ATTR_USER)if (!CommonUtils.isEmpty(userName)) config.setUserName(userName)String userPassword = JSONUtils.getString(cfgObject,RegistryConstants.ATTR_PASSWORD)if (!CommonUtils.isEmpty(userPassword)) config.setUserPassword(userPassword)}config.setClientHomeId(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_HOME))config.setConfigProfileName(JSONUtils.getString(cfgObject,\"config-profile\"))config.setUserProfileName(JSONUtils.getString(cfgObject,\"user-profile\"))config.setConnectionType(DataSourceProviderRegistry.getInstance().getConnectionType(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_TYPE),DBPConnectionType.DEFAULT_TYPE))String colorValue = JSONUtils.getString(cfgObject,RegistryConstants.ATTR_COLOR)if (!CommonUtils.isEmpty(colorValue)) {config.setConnectionColor(colorValue)}int keepAlive = JSONUtils.getInteger(cfgObject,RegistryConstants.ATTR_KEEP_ALIVE)if (keepAlive > 0) {config.setKeepAliveInterval(keepAlive)}config.setProperties(JSONUtils.deserializeStringMap(cfgObject,RegistryConstants.TAG_PROPERTIES))config.setProviderProperties(JSONUtils.deserializeStringMap(cfgObject,RegistryConstants.TAG_PROVIDER_PROPERTIES))for (Map.Entry<String,Map<String,Object>> eventObject : JSONUtils.getNestedObjects(cfgObject,RegistryConstants.TAG_EVENTS)){DBPConnectionEventType eventType = CommonUtils.valueOf(,eventObject.getKey(),DBPConnectionEventType.BEFORE_CONNECT)Map<String,Object> eventCfg = eventObject.getValue()DBRShellCommand command = new DBRShellCommand(\"\")command.setEnabled(JSONUtils.getBoolean(eventCfg,RegistryConstants.ATTR_ENABLED))command.setShowProcessPanel(JSONUtils.getBoolean(eventCfg,RegistryConstants.ATTR_SHOW_PANEL))command.setWaitProcessFinish(JSONUtils.getBoolean(eventCfg,RegistryConstants.ATTR_WAIT_PROCESS))if (command.isWaitProcessFinish()) {command.setWaitProcessTimeoutMs(JSONUtils.getInteger(eventCfg,RegistryConstants.ATTR_WAIT_PROCESS_TIMEOUT))}command.setTerminateAtDisconnect(JSONUtils.getBoolean(eventCfg,RegistryConstants.ATTR_TERMINATE_AT_DISCONNECT))command.setPauseAfterExecute(JSONUtils.getInteger(eventCfg,RegistryConstants.ATTR_PAUSE_AFTER_EXECUTE))command.setWorkingDirectory(JSONUtils.getString(eventCfg,RegistryConstants.ATTR_WORKING_DIRECTORY))command.setCommand(JSONUtils.getString(eventCfg,RegistryConstants.ATTR_COMMAND))config.setEvent(eventType,command)}for (Map.Entry<String,Map<String,Object>> handlerObject : JSONUtils.getNestedObjects(cfgObject,RegistryConstants.TAG_HANDLERS)){DBWHandlerConfiguration configuration = parseNetworkHandlerConfig(dataSource,null,handlerObject)if (configuration != null) {dataSource.getConnectionConfiguration().updateHandler(configuration)}}Map<String,Object> bootstrapCfg = JSONUtils.getObject(cfgObject,RegistryConstants.TAG_BOOTSTRAP)if (bootstrapCfg.containsKey(RegistryConstants.ATTR_AUTOCOMMIT)) {config.getBootstrap().setDefaultAutoCommit(JSONUtils.getBoolean(bootstrapCfg,RegistryConstants.ATTR_AUTOCOMMIT))}if (bootstrapCfg.containsKey(RegistryConstants.ATTR_TXN_ISOLATION)) {config.getBootstrap().setDefaultTransactionIsolation(JSONUtils.getInteger(bootstrapCfg,RegistryConstants.ATTR_TXN_ISOLATION))}config.getBootstrap().setDefaultObjectName(JSONUtils.getString(bootstrapCfg,RegistryConstants.ATTR_DEFAULT_OBJECT))if (bootstrapCfg.containsKey(RegistryConstants.ATTR_IGNORE_ERRORS)) {config.getBootstrap().setIgnoreErrors(JSONUtils.getBoolean(bootstrapCfg,RegistryConstants.ATTR_IGNORE_ERRORS))}config.getBootstrap().setInitQueries(JSONUtils.deserializeStringList(bootstrapCfg,RegistryConstants.TAG_QUERY))}{deserializeModifyPermissions(conObject,dataSource)}for (Map<String,Object> filterCfg : JSONUtils.getObjectList(conObject,RegistryConstants.TAG_FILTERS)){String typeName = JSONUtils.getString(filterCfg,RegistryConstants.ATTR_TYPE)String objectID = JSONUtils.getString(filterCfg,RegistryConstants.ATTR_ID)if (!CommonUtils.isEmpty(typeName)) {DBSObjectFilter filter = readObjectFiler(filterCfg)dataSource.updateObjectFilter(typeName,objectID,filter)}}dataSource.getPreferenceStore().getProperties().putAll(JSONUtils.deserializeStringMap(conObject,RegistryConstants.TAG_CUSTOM_PROPERTIES))String vmID = CommonUtils.toString(conObject.get(\"virtual-model-id\"),id)DBVModel dbvModel = modelMap.get(vmID)if (dbvModel != null) {dataSource.setVirtualModel(dbvModel)}if (newDataSource) {registry.addDataSourceToList(dataSource)parseResults.addedDataSources.add(dataSource)}{parseResults.updatedDataSources.add(dataSource)}}for (Map<String,Object> ctMap : JSONUtils.getObjectList(jsonMap,\"saved-filters\")){DBSObjectFilter filter = readObjectFiler(ctMap)registry.addSavedFilter(filter)}}@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
73 [style = filled, label = "String vmID = CommonUtils.toString(conObject.get(\"virtual-model-id\"),id)@@@205@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String parentFolder = JSONUtils.getObjectProperty(folderMap.getValue(),RegistryConstants.ATTR_PARENT)@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "modelMap.put(id,model)@@@63@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "dataSource.getPreferenceStore().getProperties().putAll(JSONUtils.deserializeStringMap(conObject,RegistryConstants.TAG_CUSTOM_PROPERTIES))@@@204@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Map<String,Object> ctConfig = ctMap.getValue()@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DBWorkbench.getPlatform().getDataSourceProviderRegistry().addConnectionType(ct)@@@55@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "dataSource.setShowSystemObjects(JSONUtils.getBoolean(conObject,RegistryConstants.ATTR_SHOW_SYSTEM_OBJECTS))@@@115@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "driver.setTemporary(true)@@@100@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "profile.setProfileName(profileName)@@@69@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "dataSource.updateObjectFilter(typeName,objectID,filter)@@@201@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "Map<String,DBVModel> modelMap = new LinkedHashMap<>()@@@59@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "driver == null@@@94@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "Map<String,Object> properties = JSONUtils.deserializeProperties(handlerCfg,RegistryConstants.TAG_PROPERTIES)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "dataSource.setConnectionReadOnly(JSONUtils.getBoolean(conObject,RegistryConstants.ATTR_READ_ONLY))@@@117@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "boolean refresh@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "parseDataSources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Exception e@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "mdFolder.exists()@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Boolean confirmDataChange = JSONUtils.getObjectProperty(ctConfig,\"confirm-data-change\")@@@51@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "boolean refresh@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
123 [style = filled, label = "@Nullable DBWNetworkProfile profile@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "String dsProviderID = CommonUtils.toString(conObject.get(RegistryConstants.ATTR_PROVIDER))@@@82@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String name = JSONUtils.getObjectProperty(ctConfig,RegistryConstants.ATTR_NAME)@@@46@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
139 [style = filled, label = "!CommonUtils.isEmpty(userPassword)@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "{Map<String,Object> cfgObject = JSONUtils.getObject(conObject,\"configuration\")DBPConnectionConfiguration config = dataSource.getConnectionConfiguration()config.setHostName(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_HOST))config.setHostPort(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_PORT))config.setServerName(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_SERVER))config.setDatabaseName(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_DATABASE))config.setUrl(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_URL))if (!passwordReadCanceled) {final String(( creds = readSecuredCredentials(cfgObject,dataSource,null,null)config.setUserName(creds(0()if (dataSource.isSavePassword()) {config.setUserPassword(creds(1()}}{String userName = JSONUtils.getString(cfgObject,RegistryConstants.ATTR_USER)if (!CommonUtils.isEmpty(userName)) config.setUserName(userName)String userPassword = JSONUtils.getString(cfgObject,RegistryConstants.ATTR_PASSWORD)if (!CommonUtils.isEmpty(userPassword)) config.setUserPassword(userPassword)}config.setClientHomeId(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_HOME))config.setConfigProfileName(JSONUtils.getString(cfgObject,\"config-profile\"))config.setUserProfileName(JSONUtils.getString(cfgObject,\"user-profile\"))config.setConnectionType(DataSourceProviderRegistry.getInstance().getConnectionType(JSONUtils.getString(cfgObject,RegistryConstants.ATTR_TYPE),DBPConnectionType.DEFAULT_TYPE))String colorValue = JSONUtils.getString(cfgObject,RegistryConstants.ATTR_COLOR)if (!CommonUtils.isEmpty(colorValue)) {config.setConnectionColor(colorValue)}int keepAlive = JSONUtils.getInteger(cfgObject,RegistryConstants.ATTR_KEEP_ALIVE)if (keepAlive > 0) {config.setKeepAliveInterval(keepAlive)}config.setProperties(JSONUtils.deserializeStringMap(cfgObject,RegistryConstants.TAG_PROPERTIES))config.setProviderProperties(JSONUtils.deserializeStringMap(cfgObject,RegistryConstants.TAG_PROVIDER_PROPERTIES))for (Map.Entry<String,Map<String,Object>> eventObject : JSONUtils.getNestedObjects(cfgObject,RegistryConstants.TAG_EVENTS)){DBPConnectionEventType eventType = CommonUtils.valueOf(,eventObject.getKey(),DBPConnectionEventType.BEFORE_CONNECT)Map<String,Object> eventCfg = eventObject.getValue()DBRShellCommand command = new DBRShellCommand(\"\")command.setEnabled(JSONUtils.getBoolean(eventCfg,RegistryConstants.ATTR_ENABLED))command.setShowProcessPanel(JSONUtils.getBoolean(eventCfg,RegistryConstants.ATTR_SHOW_PANEL))command.setWaitProcessFinish(JSONUtils.getBoolean(eventCfg,RegistryConstants.ATTR_WAIT_PROCESS))if (command.isWaitProcessFinish()) {command.setWaitProcessTimeoutMs(JSONUtils.getInteger(eventCfg,RegistryConstants.ATTR_WAIT_PROCESS_TIMEOUT))}command.setTerminateAtDisconnect(JSONUtils.getBoolean(eventCfg,RegistryConstants.ATTR_TERMINATE_AT_DISCONNECT))command.setPauseAfterExecute(JSONUtils.getInteger(eventCfg,RegistryConstants.ATTR_PAUSE_AFTER_EXECUTE))command.setWorkingDirectory(JSONUtils.getString(eventCfg,RegistryConstants.ATTR_WORKING_DIRECTORY))command.setCommand(JSONUtils.getString(eventCfg,RegistryConstants.ATTR_COMMAND))config.setEvent(eventType,command)}for (Map.Entry<String,Map<String,Object>> handlerObject : JSONUtils.getNestedObjects(cfgObject,RegistryConstants.TAG_HANDLERS)){DBWHandlerConfiguration configuration = parseNetworkHandlerConfig(dataSource,null,handlerObject)if (configuration != null) {dataSource.getConnectionConfiguration().updateHandler(configuration)}}Map<String,Object> bootstrapCfg = JSONUtils.getObject(cfgObject,RegistryConstants.TAG_BOOTSTRAP)if (bootstrapCfg.containsKey(RegistryConstants.ATTR_AUTOCOMMIT)) {config.getBootstrap().setDefaultAutoCommit(JSONUtils.getBoolean(bootstrapCfg,RegistryConstants.ATTR_AUTOCOMMIT))}if (bootstrapCfg.containsKey(RegistryConstants.ATTR_TXN_ISOLATION)) {config.getBootstrap().setDefaultTransactionIsolation(JSONUtils.getInteger(bootstrapCfg,RegistryConstants.ATTR_TXN_ISOLATION))}config.getBootstrap().setDefaultObjectName(JSONUtils.getString(bootstrapCfg,RegistryConstants.ATTR_DEFAULT_OBJECT))if (bootstrapCfg.containsKey(RegistryConstants.ATTR_IGNORE_ERRORS)) {config.getBootstrap().setIgnoreErrors(JSONUtils.getBoolean(bootstrapCfg,RegistryConstants.ATTR_IGNORE_ERRORS))}config.getBootstrap().setInitQueries(JSONUtils.deserializeStringList(bootstrapCfg,RegistryConstants.TAG_QUERY))}@@@123@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "boolean newDataSource = (dataSource == null)@@@104@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String driverId = CommonUtils.toString(conObject.get(RegistryConstants.ATTR_DRIVER))@@@92@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "log.warn(\"Can't find driver \" + driverId + \" in datasource provider \" + provider.getId() + \" for datasource '\" + id + \"'. Create new driver\")@@@95@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "dataSource.getConnectionConfiguration().setHandlers(Collections.emptyList())@@@110@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "folder.setDescription(description)@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "IOUtils.copyStream(crdStream,credBuffer)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "provider.addDriver(driver)@@@101@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "parseResults.addedDataSources.add(dataSource)@@@212@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String name = folderMap.getKey()@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "log.error(\"Error decrypting secure credentials\",e)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "return null@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "Exception e@@@11@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
128 [style = filled, label = "String handlerId = handlerObject.getKey()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String description = JSONUtils.getObjectProperty(folderMap.getValue(),RegistryConstants.ATTR_DESCRIPTION)@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "CommonUtils.isEmpty(dsProviderID)@@@83@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "configuration != null@@@73@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "{String userName = JSONUtils.getString(handlerCfg,RegistryConstants.ATTR_USER)if (!CommonUtils.isEmpty(userName)) curNetworkHandler.setUserName(userName)String userPassword = JSONUtils.getString(handlerCfg,RegistryConstants.ATTR_PASSWORD)if (!CommonUtils.isEmpty(userPassword)) curNetworkHandler.setPassword(userPassword)}@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "dataSource.getConnectionConfiguration().setProperties(Collections.emptyMap())@@@109@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Map<String,Map<String,Map<String,String>>> res = CONFIG_GSON.fromJson(credJson,new TypeToken<Map<String,Map<String,Map<String,String>>>>(){}.getType())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "String typeName = JSONUtils.getString(filterCfg,RegistryConstants.ATTR_TYPE)@@@197@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ContentEncrypter encrypter = new ContentEncrypter(registry.getProject().getSecureStorage().getLocalSecretKey())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
89 [style = filled, label = "DataSourceFolder parent = parentFolder == null? null: registry.findFolderByPath(parentFolder,true)@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "dataSource.setShowUtilityObjects(JSONUtils.getBoolean(conObject,RegistryConstants.ATTR_SHOW_UTIL_OBJECTS))@@@116@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "dataSource.setSavePassword(JSONUtils.getBoolean(conObject,RegistryConstants.ATTR_SAVE_PASSWORD))@@@114@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "DataSourceRegistry.ParseResults parseResults@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
87 [style = filled, label = "DBVModel dbvModel = modelMap.get(vmID)@@@206@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "DBWHandlerConfiguration configuration = parseNetworkHandlerConfig(null,profile,handlerMap)@@@72@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
134 [style = filled, label = "curNetworkHandler.setEnabled(JSONUtils.getBoolean(handlerCfg,RegistryConstants.ATTR_ENABLED))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "String objectID = JSONUtils.getString(filterCfg,RegistryConstants.ATTR_ID)@@@198@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "profile.setProperties(JSONUtils.deserializeStringMap(profileMap,\"properties\"))@@@70@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "@Nullable DataSourceDescriptor dataSource@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "dbvModel != null@@@207@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
133->136 [style = solid, label="handlerCfg"];
0->5 [style = dotted, label="true"];
0->54 [style = dotted, label="true"];
15->54 [style = bold, label=""];
129->119 [style = bold, label=""];
5->15 [style = bold, label=""];
25->6 [style = bold, label=""];
86->51 [style = bold, label=""];
88->7 [style = dotted, label="true"];
132->134 [style = bold, label=""];
85->71 [style = bold, label=""];
92->69 [style = solid, label="dataSource"];
9->99 [style = bold, label=""];
93->107 [style = bold, label=""];
39->31 [style = bold, label=""];
29->70 [style = solid, label="folder"];
53->41 [style = bold, label=""];
80->92 [style = solid, label="id"];
9->40 [style = bold, label=""];
10->61 [style = bold, label=""];
40->31 [style = solid, label="id"];
19->132 [style = dashed, label="0"];
75->24 [style = bold, label=""];
2->34 [style = bold, label=""];
72->57 [style = solid, label="profile"];
20->84 [style = dotted, label="true"];
116->111 [style = bold, label=""];
21->28 [style = dotted, label="true"];
34->0 [style = bold, label=""];
88->90 [style = dotted, label="true"];
44->76 [style = bold, label=""];
94->106 [style = solid, label="newDataSource"];
81->56 [style = bold, label=""];
45->86 [style = bold, label=""];
28->78 [style = bold, label=""];
20->84 [style = bold, label=""];
95->55 [style = bold, label=""];
61->80 [style = bold, label=""];
106->93 [style = dotted, label="false"];
91->71 [style = solid, label="color"];
80->81 [style = solid, label="id"];
113->109 [style = dotted, label="true"];
2->34 [style = solid, label="driverId"];
101->10 [style = bold, label=""];
87->79 [style = bold, label=""];
47->35 [style = solid, label="folder"];
86->41 [style = bold, label=""];
4->9 [style = bold, label=""];
65->26 [style = bold, label=""];
59->102 [style = dotted, label="true"];
25->29 [style = solid, label="name"];
106->42 [style = bold, label=""];
88->110 [style = bold, label=""];
41->86 [style = solid, label="typeName"];
43->42 [style = solid, label="origin"];
56->54 [style = solid, label="driver"];
52->41 [style = bold, label=""];
49->7 [style = solid, label="res"];
38->11 [style = solid, label="ctConfig"];
53->45 [style = dotted, label="true"];
56->77 [style = bold, label=""];
104->88 [style = dotted, label="true"];
0->92 [style = bold, label=""];
2->77 [style = solid, label="driverId"];
134->121 [style = bold, label=""];
6->1 [style = bold, label=""];
31->9 [style = solid, label="ct"];
130->124 [style = dotted, label="false"];
38->33 [style = solid, label="ctConfig"];
80->73 [style = solid, label="id"];
72->36 [style = bold, label=""];
129->119 [style = dotted, label="true"];
101->10 [style = dotted, label="true"];
98->95 [style = dotted, label="true"];
19->40 [style = bold, label=""];
46->22 [style = dotted, label="true"];
58->65 [style = bold, label=""];
30->71 [style = solid, label="description"];
140->128 [style = bold, label=""];
56->42 [style = solid, label="driver"];
113->115 [style = dotted, label="true"];
85->4 [style = dotted, label="true"];
6->19 [style = solid, label="description"];
20->82 [style = dotted, label="true"];
1->89 [style = solid, label="parentFolder"];
133->121 [style = solid, label="handlerCfg"];
140->120 [style = dotted, label="true"];
84->82 [style = bold, label=""];
123->136 [style = solid, label="profile"];
0->81 [style = bold, label=""];
20->2 [style = bold, label=""];
55->44 [style = bold, label=""];
60->101 [style = solid, label="dsProviderID"];
68->75 [style = bold, label=""];
71->4 [style = solid, label="ct"];
96->57 [style = bold, label=""];
130->127 [style = dotted, label="false"];
60->101 [style = bold, label=""];
130->132 [style = dotted, label="false"];
75->24 [style = solid, label="folderPath"];
34->42 [style = solid, label="driver"];
48->3 [style = bold, label=""];
76->96 [style = solid, label="profileMap"];
98->55 [style = bold, label=""];
120->136 [style = solid, label="dataSource"];
46->69 [style = dotted, label="true"];
128->117 [style = solid, label="handlerId"];
37->5 [style = bold, label=""];
106->83 [style = dotted, label="false"];
80->42 [style = solid, label="id"];
130->135 [style = dotted, label="false"];
126->127 [style = bold, label=""];
138->141 [style = bold, label=""];
23->17 [style = bold, label=""];
50->63 [style = solid, label="id"];
30->91 [style = bold, label=""];
130->118 [style = dotted, label="true"];
0->56 [style = dotted, label="true"];
112->49 [style = solid, label="credJson"];
11->71 [style = solid, label="name"];
108->116 [style = solid, label="configFile"];
39->71 [style = solid, label="confirmDataChange"];
31->85 [style = bold, label=""];
133->127 [style = solid, label="handlerCfg"];
61->68 [style = solid, label="conObject"];
18->88 [style = bold, label=""];
7->78 [style = bold, label=""];
35->19 [style = dotted, label="false"];
113->108 [style = dotted, label="true"];
60->64 [style = solid, label="dsProviderID"];
64->20 [style = bold, label=""];
45->86 [style = solid, label="filter"];
2->81 [style = solid, label="driverId"];
128->133 [style = bold, label=""];
132->124 [style = solid, label="curNetworkHandler"];
51->73 [style = bold, label=""];
70->40 [style = bold, label=""];
94->106 [style = bold, label=""];
24->58 [style = dotted, label="true"];
121->135 [style = bold, label=""];
92->22 [style = solid, label="dataSource"];
92->94 [style = solid, label="dataSource"];
130->139 [style = dotted, label="true"];
35->29 [style = dotted, label="true"];
27->103 [style = bold, label=""];
131->138 [style = bold, label=""];
85->9 [style = bold, label=""];
35->70 [style = dotted, label="true"];
38->91 [style = solid, label="ctConfig"];
44->36 [style = solid, label="profileName"];
42->22 [style = solid, label="dataSource"];
100->104 [style = bold, label=""];
33->71 [style = solid, label="confirmExecute"];
59->100 [style = bold, label=""];
88->8 [style = bold, label=""];
14->63 [style = bold, label=""];
135->138 [style = dotted, label="true"];
26->52 [style = bold, label=""];
130->117 [style = dotted, label="true"];
38->9 [style = solid, label="ctConfig"];
125->130 [style = solid, label="handlerDescriptor"];
38->39 [style = solid, label="ctConfig"];
62->83 [style = bold, label=""];
17->23 [style = solid, label="filter"];
88->130 [style = dashed, label="0"];
94->46 [style = solid, label="newDataSource"];
61->107 [style = solid, label="conObject"];
57->98 [style = bold, label=""];
46->97 [style = dotted, label="false"];
0->15 [style = dotted, label="true"];
35->19 [style = bold, label=""];
42->97 [style = solid, label="dataSource"];
73->87 [style = bold, label=""];
71->9 [style = solid, label="ct"];
130->117 [style = bold, label=""];
138->126 [style = bold, label=""];
59->12 [style = dotted, label="true"];
69->61 [style = bold, label=""];
90->112 [style = dashed, label="0"];
3->90 [style = bold, label=""];
103->74 [style = bold, label=""];
136->131 [style = solid, label="creds"];
25->47 [style = solid, label="name"];
104->110 [style = bold, label=""];
116->111 [style = solid, label="configJson"];
64->20 [style = solid, label="provider"];
24->65 [style = bold, label=""];
53->45 [style = bold, label=""];
59->32 [style = dotted, label="true"];
36->96 [style = bold, label=""];
2->56 [style = solid, label="driverId"];
24->58 [style = bold, label=""];
10->17 [style = bold, label=""];
38->30 [style = solid, label="ctConfig"];
40->38 [style = bold, label=""];
60->84 [style = solid, label="dsProviderID"];
66->86 [style = solid, label="objectID"];
21->28 [style = bold, label=""];
57->98 [style = solid, label="configuration"];
127->129 [style = bold, label=""];
120->132 [style = solid, label="dataSource"];
119->124 [style = bold, label=""];
104->18 [style = bold, label=""];
80->60 [style = bold, label=""];
117->122 [style = bold, label=""];
28->110 [style = bold, label=""];
77->37 [style = bold, label=""];
60->82 [style = solid, label="dsProviderID"];
6->29 [style = solid, label="description"];
79->46 [style = bold, label=""];
128->136 [style = solid, label="handlerId"];
135->126 [style = bold, label=""];
61->103 [style = solid, label="conObject"];
79->16 [style = dotted, label="true"];
136->131 [style = bold, label=""];
95->57 [style = bold, label=""];
87->16 [style = solid, label="dbvModel"];
89->47 [style = bold, label=""];
31->85 [style = solid, label="ct"];
41->66 [style = bold, label=""];
42->26 [style = solid, label="dataSource"];
130->122 [style = dotted, label="true"];
113->114 [style = dotted, label="true"];
104->78 [style = bold, label=""];
140->123 [style = dotted, label="true"];
92->52 [style = solid, label="dataSource"];
136->141 [style = solid, label="creds"];
113->100 [style = bold, label=""];
101->64 [style = bold, label=""];
42->52 [style = solid, label="dataSource"];
135->136 [style = bold, label=""];
91->13 [style = bold, label=""];
18->112 [style = solid, label="credFile"];
106->42 [style = dotted, label="true"];
78->25 [style = bold, label=""];
106->62 [style = dotted, label="false"];
35->29 [style = bold, label=""];
127->119 [style = solid, label="properties"];
88->112 [style = bold, label=""];
38->13 [style = solid, label="ctConfig"];
112->49 [style = bold, label=""];
34->0 [style = solid, label="driver"];
82->2 [style = bold, label=""];
133->126 [style = solid, label="handlerCfg"];
75->58 [style = solid, label="folderPath"];
46->97 [style = bold, label=""];
74->68 [style = bold, label=""];
135->131 [style = dotted, label="true"];
57->26 [style = solid, label="configuration"];
61->52 [style = solid, label="conObject"];
46->22 [style = bold, label=""];
16->46 [style = bold, label=""];
63->44 [style = bold, label=""];
89->47 [style = solid, label="parent"];
98->95 [style = bold, label=""];
79->16 [style = bold, label=""];
66->53 [style = bold, label=""];
90->49 [style = solid, label="credJson"];
127->129 [style = solid, label="properties"];
130->129 [style = dotted, label="false"];
133->134 [style = solid, label="handlerCfg"];
47->35 [style = bold, label=""];
72->55 [style = solid, label="profile"];
141->126 [style = bold, label=""];
130->134 [style = dotted, label="false"];
107->27 [style = bold, label=""];
22->69 [style = bold, label=""];
40->71 [style = solid, label="id"];
59->43 [style = dotted, label="true"];
88->112 [style = dotted, label="true"];
2->37 [style = solid, label="driverId"];
92->94 [style = bold, label=""];
42->107 [style = bold, label=""];
125->132 [style = solid, label="handlerDescriptor"];
135->136 [style = dotted, label="true"];
70->25 [style = bold, label=""];
29->70 [style = bold, label=""];
129->124 [style = bold, label=""];
67->48 [style = bold, label=""];
140->137 [style = dotted, label="true"];
88->3 [style = dotted, label="true"];
130->121 [style = dotted, label="false"];
54->92 [style = bold, label=""];
106->62 [style = bold, label=""];
83->93 [style = bold, label=""];
8->105 [style = bold, label=""];
61->51 [style = solid, label="conObject"];
63->50 [style = bold, label=""];
61->26 [style = solid, label="conObject"];
90->49 [style = bold, label=""];
128->125 [style = solid, label="handlerId"];
14->63 [style = solid, label="model"];
38->11 [style = bold, label=""];
88->8 [style = dotted, label="true"];
114->111 [style = solid, label="origin"];
50->14 [style = solid, label="id"];
67->48 [style = dotted, label="true"];
8->105 [style = solid, label="credBuffer"];
19->25 [style = bold, label=""];
133->125 [style = bold, label=""];
102->115 [style = dashed, label="0"];
0->37 [style = dotted, label="true"];
99->50 [style = bold, label=""];
11->30 [style = bold, label=""];
57->95 [style = solid, label="configuration"];
92->26 [style = solid, label="dataSource"];
110->116 [style = bold, label=""];
80->84 [style = solid, label="id"];
97->17 [style = bold, label=""];
87->79 [style = solid, label="dbvModel"];
69->17 [style = bold, label=""];
50->14 [style = bold, label=""];
17->23 [style = bold, label=""];
125->130 [style = bold, label=""];
55->61 [style = bold, label=""];
88->105 [style = dotted, label="true"];
61->27 [style = solid, label="conObject"];
88->49 [style = dotted, label="true"];
104->18 [style = dotted, label="true"];
0->77 [style = dotted, label="true"];
110->116 [style = solid, label="decryptProject"];
49->7 [style = bold, label=""];
71->4 [style = bold, label=""];
61->75 [style = solid, label="conObject"];
92->97 [style = solid, label="dataSource"];
88->78 [style = bold, label=""];
13->71 [style = solid, label="autoCommit"];
130->132 [style = bold, label=""];
53->51 [style = bold, label=""];
1->89 [style = bold, label=""];
98->57 [style = bold, label=""];
0->81 [style = dotted, label="true"];
76->72 [style = bold, label=""];
53->86 [style = dotted, label="true"];
33->39 [style = bold, label=""];
89->29 [style = solid, label="parent"];
7->110 [style = bold, label=""];
42->69 [style = solid, label="dataSource"];
85->71 [style = dotted, label="true"];
138->141 [style = dotted, label="true"];
13->33 [style = bold, label=""];
105->3 [style = bold, label=""];
97->61 [style = bold, label=""];
80->10 [style = solid, label="id"];
73->87 [style = solid, label="vmID"];
61->74 [style = solid, label="conObject"];
}
