digraph {
25 [style = filled, label = "DisjunctionMaxQuery expected = new DisjunctionMaxQuery(Arrays.asList(new TermQuery(new Term(STRING_FIELD_NAME,\"hello\")),new BoostQuery(new TermQuery(new Term(STRING_FIELD_NAME_2,\"hello\")),5.0f)),0.0f)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertQueryWithAllFieldsWildcard(query)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testDefaultField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testDefaultField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "context.getIndexSettings().updateIndexMetaData(newIndexMeta(\"index\",context.getIndexSettings().getSettings(),Settings.builder().putList(\"index.query.default_field\",STRING_FIELD_NAME,STRING_FIELD_NAME_2 + \"^5\",INT_FIELD_NAME).build()))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "context.getIndexSettings().updateIndexMetaData(newIndexMeta(\"index\",context.getIndexSettings().getSettings(),Settings.builder().putList(\"index.query.default_field\",STRING_FIELD_NAME,STRING_FIELD_NAME_2 + \"^5\").build()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "context.getIndexSettings().updateIndexMetaData(newIndexMeta(\"index\",context.getIndexSettings().getSettings(),Settings.builder().putList(\"index.query.default_field\",STRING_FIELD_NAME,\"*\",STRING_FIELD_NAME_2).build()))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(expected,query)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Query query = builder.toQuery(context)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "QueryShardContext context = createShardContext()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(exc,instanceOf())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(exc.getMessage(),equalTo(\"For input string: \"hello\"\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "context.getIndexSettings().updateIndexMetadata(newIndexMeta(\"index\",context.getIndexSettings().getSettings(),Settings.builder().putList(\"index.query.default_field\",STRING_FIELD_NAME,\"*\",STRING_FIELD_NAME_2).build()))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(expected,query)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "MultiMatchQueryBuilder qb = new MultiMatchQueryBuilder(\"hello\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "{context.getIndexSettings().updateIndexMetaData(newIndexMeta(\"index\",context.getIndexSettings().getSettings(),Settings.builder().putNull(\"index.query.default_field\").build()))}@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertQueryWithAllFieldsWildcard(query)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "MultiMatchQueryBuilder builder = new MultiMatchQueryBuilder(\"hello\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testDefaultField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "context.getIndexSettings().updateIndexMetaData(newIndexMeta(\"index\",context.getIndexSettings().getSettings(),Settings.builder().putList(\"index.query.default_field\",STRING_FIELD_NAME,\"*\",STRING_FIELD_NAME_2).build()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "IllegalArgumentException exc = expectThrows(,null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "query = new SimpleQueryStringBuilder(\"hello\").toQuery(context)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(expected,query)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expected = new DisjunctionMaxQuery(Arrays.asList(new MatchNoDocsQuery(\"failed (mapped_int( query, caused by number_format_exception:(For input string: \"hello\"(\"),new TermQuery(new Term(STRING_FIELD_NAME,\"hello\")),new BoostQuery(new TermQuery(new Term(STRING_FIELD_NAME_2,\"hello\")),5.0f)),0.0f)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "query = qb.toQuery(context)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "query = qb.toQuery(context)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Query expected = new DisjunctionMaxQuery(Arrays.asList(new TermQuery(new Term(STRING_FIELD_NAME,\"hello\")),new BoostQuery(new TermQuery(new Term(STRING_FIELD_NAME_2,\"hello\")),5.0f)),1.0f)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "qb.lenient(true)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "query = new MultiMatchQueryBuilder(\"hello\").toQuery(context)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "context.getIndexSettings().updateIndexMetadata(newIndexMeta(\"index\",context.getIndexSettings().getSettings(),Settings.builder().putList(\"index.query.default_field\",STRING_FIELD_NAME,STRING_FIELD_NAME_2 + \"^5\").build()))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertQueryWithAllFieldsWildcard(query)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Query query = new SimpleQueryStringBuilder(\"hello\").toQuery(context)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertQueryWithAllFieldsWildcard(query)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->10 [style = bold, label=""];
15->23 [style = bold, label=""];
2->19 [style = bold, label=""];
2->19 [style = dashed, label="0"];
7->17 [style = bold, label=""];
16->22 [style = solid, label="exc"];
7->11 [style = solid, label="context"];
6->18 [style = bold, label=""];
7->8 [style = solid, label="context"];
17->31 [style = bold, label=""];
21->15 [style = bold, label=""];
25->9 [style = bold, label=""];
9->32 [style = bold, label=""];
28->15 [style = solid, label="query"];
18->2 [style = solid, label="query"];
25->9 [style = solid, label="expected"];
31->26 [style = solid, label="query"];
5->14 [style = bold, label=""];
32->16 [style = bold, label=""];
18->2 [style = bold, label=""];
26->6 [style = bold, label=""];
6->1 [style = solid, label="query"];
7->8 [style = bold, label=""];
16->22 [style = bold, label=""];
13->11 [style = bold, label=""];
10->6 [style = bold, label=""];
7->18 [style = solid, label="context"];
0->3 [style = solid, label="expected"];
4->7 [style = bold, label=""];
1->13 [style = bold, label=""];
12->7 [style = bold, label=""];
11->3 [style = solid, label="query"];
7->28 [style = solid, label="context"];
19->24 [style = bold, label=""];
7->27 [style = solid, label="context"];
6->18 [style = dashed, label="0"];
3->9 [style = bold, label=""];
6->1 [style = bold, label=""];
31->26 [style = bold, label=""];
11->0 [style = bold, label=""];
28->21 [style = bold, label=""];
30->28 [style = bold, label=""];
8->5 [style = bold, label=""];
22->20 [style = bold, label=""];
21->15 [style = solid, label="expected"];
8->5 [style = solid, label="query"];
27->9 [style = solid, label="query"];
2->13 [style = dashed, label="0"];
11->24 [style = dashed, label="0"];
29->7 [style = bold, label=""];
8->17 [style = dashed, label="0"];
7->6 [style = solid, label="context"];
1->2 [style = bold, label=""];
20->30 [style = bold, label=""];
7->31 [style = solid, label="context"];
2->11 [style = bold, label=""];
14->6 [style = bold, label=""];
24->27 [style = bold, label=""];
27->25 [style = bold, label=""];
10->14 [style = dashed, label="0"];
}
