digraph {
23 [style = filled, label = "testSimpleLesserCond['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "f.checkNotImplies(node1,node5)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final RexNode node2 = f.lt(f.i,f.literal(30))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "f.checkNotImplies(node2,node5)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "f.checkImplies(node5,node2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final RexNode node1 = f.ge(f.sh,f.shortLiteral((short)10))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "final RexNode node6 = f.ne(f.i,f.literal(10))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testSimpleShort['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "f.checkNotImplies(node3,node1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "f.checkNotImplies(node2,node1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final RexNode node5 = f.eq(f.i,f.literal(10))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "f.checkImplies(xGe11,xGe10)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testSimpleShort['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final RexNode xGe10 = f.ge(f.sh,f.shortLiteral((short)10))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final RexNode node4 = f.le(f.i,f.literal(10))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final RexNode node2 = f.ge(f.sh,f.shortLiteral((short)11))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "f.checkImplies(node2,node1)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "f.checkNotImplies(xGe10,xGe11)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final Fixture f = new Fixture()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final RexNode xGe11 = f.ge(f.sh,f.shortLiteral((short)11))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "f.checkNotImplies(node1,node6)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "f.checkNotImplies(node1,node2)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "f.checkImplies(node1,node2)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "f.checkImplies(node1,node3)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final RexNode node1 = f.lt(f.i,f.literal(10))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final RexNode node3 = f.le(f.i,f.literal(30))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "f.checkNotImplies(node4,node6)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15->24 [style = solid, label="node1"];
4->26 [style = dashed, label="0"];
26->17 [style = bold, label=""];
8->10 [style = solid, label="xGe11"];
26->14 [style = solid, label="node2"];
3->7 [style = dashed, label="0"];
7->10 [style = solid, label="xGe10"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
3->1 [style = solid, label="node1"];
13->20 [style = solid, label="node6"];
14->22 [style = bold, label=""];
26->22 [style = solid, label="node2"];
26->24 [style = solid, label="node2"];
18->22 [style = solid, label="node5"];
5->9 [style = dashed, label="0"];
15->21 [style = solid, label="node1"];
1->10 [style = dashed, label="0"];
9->10 [style = bold, label=""];
8->9 [style = solid, label="xGe11"];
17->21 [style = solid, label="node3"];
17->16 [style = solid, label="node3"];
7->8 [style = bold, label=""];
11->20 [style = solid, label="node4"];
4->5 [style = solid, label="node2"];
3->4 [style = bold, label=""];
11->18 [style = bold, label=""];
15->26 [style = bold, label=""];
19->24 [style = bold, label=""];
6->2 [style = bold, label=""];
15->19 [style = solid, label="node1"];
24->16 [style = bold, label=""];
5->1 [style = bold, label=""];
25->20 [style = bold, label=""];
13->19 [style = bold, label=""];
13->25 [style = solid, label="node6"];
4->1 [style = solid, label="node2"];
15->25 [style = solid, label="node1"];
16->21 [style = bold, label=""];
22->12 [style = bold, label=""];
12->25 [style = bold, label=""];
2->15 [style = bold, label=""];
4->8 [style = dashed, label="0"];
8->9 [style = bold, label=""];
18->13 [style = bold, label=""];
3->15 [style = dashed, label="0"];
7->9 [style = solid, label="xGe10"];
23->2 [style = bold, label=""];
2->7 [style = bold, label=""];
18->12 [style = solid, label="node5"];
4->5 [style = bold, label=""];
15->12 [style = solid, label="node1"];
26->19 [style = solid, label="node2"];
18->14 [style = solid, label="node5"];
3->5 [style = solid, label="node1"];
21->14 [style = bold, label=""];
17->11 [style = bold, label=""];
15->16 [style = solid, label="node1"];
}
