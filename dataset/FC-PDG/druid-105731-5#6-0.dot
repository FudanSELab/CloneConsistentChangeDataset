digraph {
3 [style = filled, label = "getObjectStrategy['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return new ObjectStrategy<VarianceAggregatorCollector>(){@Override public Class<VarianceAggregatorCollector> getClazz(){return }@Override public VarianceAggregatorCollector fromByteBuffer(ByteBuffer buffer,int numBytes){buffer.limit(buffer.position() + numBytes)return VarianceAggregatorCollector.from(buffer)}@Override public byte(( toBytes(VarianceAggregatorCollector collector){return collector == null? new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a4c58c: collector.toByteArray()}@Override public int compare(VarianceAggregatorCollector o1,VarianceAggregatorCollector o2){return COMPARATOR.compare(o1,o2)}}@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "getObjectStrategy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return new ObjectStrategy<HyperLogLogCollector>(){@Override public Class<HyperLogLogCollector> getClazz(){return }@Override public HyperLogLogCollector fromByteBuffer(ByteBuffer buffer,int numBytes){final ByteBuffer readOnlyBuffer = buffer.asReadOnlyBuffer()readOnlyBuffer.limit(readOnlyBuffer.position() + numBytes)return HyperLogLogCollector.makeCollector(readOnlyBuffer)}@Override public byte(( toBytes(HyperLogLogCollector collector){if (collector == null) {return new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a4c5d1}ByteBuffer val = collector.toByteBuffer()byte(( retVal = new byte((((val.asReadOnlyBuffer().get(retVal)return retVal}@Override public int compare(HyperLogLogCollector o1,HyperLogLogCollector o2){return comparator.compare(o1,o2)}}@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "getObjectStrategy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2->0 [style = bold, label=""];
0->4 [style = dashed, label="0"];
1->0 [style = bold, label=""];
3->4 [style = bold, label=""];
}
