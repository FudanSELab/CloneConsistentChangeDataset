digraph {
20 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.FLOAT_POINT_PARSER,true)@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "doc.add(new StoredField(\"bogustermsindex\",\"bogus\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "cache.purgeAllCaches()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(NO_MORE_DOCS,sortedSet.nextDoc())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.DOUBLE_POINT_PARSER)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "doc.add(new StoredField(\"bogusbits\",\"bogus\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "doc.add(new StoredField(\"bogusterms\",\"bogus\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DirectoryReader ir = iw.getReader()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(SortedSetDocValues.NO_MORE_ORDS,sortedSet.nextOrd())@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(bits.get(0))@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(0,longs.get(0))@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(NO_MORE_DOCS,ints.nextDoc())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(0,ints.get(0))@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Bits bits = cache.getDocsWithField(ar,\"bogusbits\",null)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "doc.add(new StoredField(\"bogusdoubles\",\"bogus\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "iw.close()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(NO_MORE_DOCS,binaries.nextDoc())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "SortedSetDocValues sortedSet = cache.getDocTermOrds(ar,\"bogusmultivalued\",null)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "doc.add(new StoredField(\"bogusshorts\",\"bogus\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(0,scratch.length)@@@37@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Bits bits = cache.getDocsWithField(ar,\"bogusbits\",null)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "BinaryDocValues binaries = cache.getTerms(ar,\"bogusterms\")@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(-1,sorted.getOrd(0))@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "doc.add(new StoredField(\"bogusmultivalued\",\"bogus\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Document doc = new Document()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "BytesRef scratch = binaries.get(0)@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.INT_POINT_PARSER,true)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SortedDocValues sorted = cache.getTermsIndex(ar,\"bogustermsindex\")@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "LeafReader ar = getOnlyLeafReader(ir)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testNonexistantFields['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(0,scratch.length)@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LONG_POINT_PARSER,true)@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(NO_MORE_DOCS,floats.nextDoc())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "SortedSetDocValues sortedSet = cache.getDocTermOrds(ar,\"bogusmultivalued\",null)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "testNonIndexedFields['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "ir.close()@@@44@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testNonexistantFields['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "sortedSet.setDocument(0)@@@39@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.FLOAT_POINT_PARSER)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "iw.addDocument(doc)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.DOUBLE_POINT_PARSER,true)@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "scratch = sorted.get(0)@@@36@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "ir.close()@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "assertEquals(NO_MORE_DOCS,longs.nextDoc())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "doc.add(new StoredField(\"bogusbytes\",\"bogus\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.INT_POINT_PARSER)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "doc.add(new StoredField(\"bogusints\",\"bogus\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "doc.add(new StoredField(\"boguslongs\",\"bogus\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(0,floats.get(0))@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "BinaryDocValues binaries = cache.getTerms(ar,\"bogusterms\",true)@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(0,doubles.get(0))@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final FieldCache cache = FieldCache.DEFAULT@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(NO_MORE_DOCS,doubles.nextDoc())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "dir.close()@@@45@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "doc.add(new StoredField(\"bogusfloats\",\"bogus\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "SortedDocValues sorted = cache.getTermsIndex(ar,\"bogustermsindex\")@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LONG_POINT_PARSER)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "RandomIndexWriter iw = new RandomIndexWriter(random(),dir)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->48 [style = solid, label="ar"];
9->11 [style = bold, label=""];
4->25 [style = bold, label=""];
37->49 [style = bold, label=""];
43->42 [style = bold, label=""];
14->13 [style = solid, label="doc"];
59->58 [style = bold, label=""];
3->16 [style = bold, label=""];
5->28 [style = bold, label=""];
46->48 [style = bold, label=""];
8->40 [style = bold, label=""];
15->20 [style = solid, label="ar"];
25->44 [style = bold, label=""];
13->1 [style = bold, label=""];
8->0 [style = bold, label=""];
23->43 [style = dashed, label="0"];
19->5 [style = bold, label=""];
10->18 [style = solid, label="dir"];
12->10 [style = bold, label=""];
21->31 [style = bold, label=""];
45->38 [style = bold, label=""];
25->19 [style = bold, label=""];
22->38 [style = dashed, label="0"];
15->49 [style = solid, label="ar"];
41->45 [style = bold, label=""];
35->10 [style = bold, label=""];
44->47 [style = bold, label=""];
32->20 [style = bold, label=""];
15->19 [style = solid, label="ar"];
27->2 [style = bold, label=""];
15->16 [style = solid, label="ar"];
48->41 [style = bold, label=""];
26->7 [style = bold, label=""];
39->34 [style = bold, label=""];
50->37 [style = bold, label=""];
16->26 [style = bold, label=""];
61->13 [style = bold, label=""];
42->31 [style = bold, label=""];
20->3 [style = bold, label=""];
29->27 [style = bold, label=""];
15->8 [style = solid, label="ar"];
16->48 [style = dashed, label="0"];
20->49 [style = dashed, label="0"];
49->46 [style = bold, label=""];
15->42 [style = solid, label="ar"];
54->59 [style = bold, label=""];
15->31 [style = solid, label="ar"];
11->17 [style = bold, label=""];
24->8 [style = bold, label=""];
15->44 [style = solid, label="ar"];
52->54 [style = bold, label=""];
10->18 [style = bold, label=""];
32->37 [style = dashed, label="0"];
58->57 [style = bold, label=""];
3->46 [style = dashed, label="0"];
51->52 [style = bold, label=""];
47->50 [style = bold, label=""];
6->15 [style = bold, label=""];
26->41 [style = dashed, label="0"];
28->32 [style = bold, label=""];
15->50 [style = solid, label="ar"];
7->22 [style = bold, label=""];
1->6 [style = bold, label=""];
7->45 [style = dashed, label="0"];
15->40 [style = solid, label="ar"];
36->8 [style = bold, label=""];
31->39 [style = bold, label=""];
14->13 [style = bold, label=""];
40->43 [style = bold, label=""];
15->7 [style = solid, label="ar"];
15->28 [style = solid, label="ar"];
53->61 [style = bold, label=""];
15->45 [style = solid, label="ar"];
31->23 [style = bold, label=""];
5->47 [style = dashed, label="0"];
15->11 [style = solid, label="ar"];
15->36 [style = solid, label="ar"];
14->51 [style = bold, label=""];
38->36 [style = bold, label=""];
15->30 [style = bold, label=""];
34->11 [style = bold, label=""];
57->56 [style = bold, label=""];
19->44 [style = dashed, label="0"];
1->15 [style = solid, label="ir"];
0->33 [style = bold, label=""];
30->4 [style = bold, label=""];
55->53 [style = bold, label=""];
60->10 [style = bold, label=""];
0->8 [style = dashed, label="0"];
22->24 [style = bold, label=""];
33->21 [style = bold, label=""];
17->29 [style = bold, label=""];
23->9 [style = bold, label=""];
18->14 [style = bold, label=""];
28->50 [style = dashed, label="0"];
56->55 [style = bold, label=""];
}
