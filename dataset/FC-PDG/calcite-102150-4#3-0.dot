digraph {
40 [style = filled, label = "final int mod = collations.size() == 1? Modifier.FINAL: 0@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "arg0 = Types.castIfNecessary(,arg0)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "JavaRules.BRIDGE_METHODS@@@32@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "BlockBuilder body = new BlockBuilder()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final Expression selector@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "body.add(Expressions.ifThen(Expressions.notEqual(parameterC,Expressions.constant(0)),Expressions.return_(null,descending? Expressions.negate(parameterC): parameterC)))@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "RelFieldCollation collation = collations.get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "JavaRules.BRIDGE_METHODS@@@25@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "BlockBuilder body = new BlockBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ParameterExpression parameterC = Expressions.parameter(,\"c\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "final boolean descending = collation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final Type javaRowClass = Primitive.box(this.javaRowClass)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "selector = Expressions.lambda(,fieldReference(parameter,collation.getFieldIndex()),parameter)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltinMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Expression arg0 = fieldReference(parameterV0,index)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final ParameterExpression parameterV0 = Expressions.parameter(javaRowClass,\"v0\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "arg1 = Types.castIfNecessary(,arg1)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "return Pair.of(selector,Expressions.new_(,Collections.emptyList(),memberDeclarations))@@@39@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final ParameterExpression parameterV1 = Expressions.parameter(javaRowClass,\"v1\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(,fieldNullable(index)? (nullsFirst? \"compareNullsFirst\": \"compareNullsLast\"): \"compare\",arg0,arg1))))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "RelCollation collation@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return Expressions.new_(,Collections.emptyList(),memberDeclarations)@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Expression arg1 = fieldReference(parameterV1,index)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "memberDeclarations.add(JavaRules.EnumUtil.overridingMethodDecl(BuiltinMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "memberDeclarations.add(JavaRules.EnumUtil.overridingMethodDecl(BuiltinMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@25@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "final List<RelFieldCollation> collations@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final boolean descending = fieldCollation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final ParameterExpression parameterV1 = Expressions.parameter(javaRowClass,\"v1\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "collations.size() == 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "final boolean nullsFirst = collation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final boolean nullsFirst = fieldCollation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final ParameterExpression parameterC = Expressions.parameter(,\"c\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "generateComparator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final int index = collation.getFieldIndex()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "return Pair.of(selector,Expressions.call(BuiltinMethod.NULLS_COMPARATOR.method,Expressions.constant(collation.nullDirection == RelFieldCollation.NullDirection.FIRST),Expressions.constant(collation.getDirection() == RelFieldCollation.Direction.DESCENDING)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "generateCollationKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final ParameterExpression parameterV0 = Expressions.parameter(javaRowClass,\"v0\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "arg1 = Types.castIfNecessary(,arg1)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "ParameterExpression parameter = Expressions.parameter(javaRowClass,\"v\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Expression arg0 = fieldReference(parameterV0,index)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "body.add(Expressions.return_(null,Expressions.constant(0)))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "generateComparator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "final int mod = collation.getFieldCollations().size() == 1? Modifier.FINAL: 0@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "selector = Expressions.call(BuiltinMethod.IDENTITY_SELECTOR.method)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->31 [style = solid, label="parameterO1"];
21->12 [style = dotted, label="true"];
34->45 [style = dotted, label="true"];
45->43 [style = solid, label="parameter"];
0->13 [style = bold, label=""];
43->55 [style = bold, label=""];
9->19 [style = solid, label="arg0"];
45->55 [style = solid, label="parameter"];
14->2 [style = solid, label="parameterO1"];
42->23 [style = solid, label="index"];
48->35 [style = bold, label=""];
24->49 [style = solid, label="arg1"];
30->18 [style = bold, label=""];
36->38 [style = dotted, label="true"];
26->11 [style = bold, label=""];
6->35 [style = dashed, label="0"];
29->18 [style = bold, label=""];
8->1 [style = bold, label=""];
18->39 [style = dashed, label="0"];
16->17 [style = solid, label="index"];
46->54 [style = bold, label=""];
29->14 [style = dotted, label="true"];
9->41 [style = solid, label="parameterC"];
31->30 [style = bold, label=""];
34->51 [style = dotted, label="true"];
20->24 [style = solid, label="parameterV0"];
45->51 [style = solid, label="parameter"];
34->32 [style = bold, label=""];
14->30 [style = solid, label="parameterO1"];
28->27 [style = dotted, label="true"];
29->1 [style = bold, label=""];
12->22 [style = bold, label=""];
11->25 [style = bold, label=""];
42->19 [style = bold, label=""];
9->40 [style = bold, label=""];
45->4 [style = solid, label="parameter"];
55->33 [style = solid, label="parameterO1"];
7->49 [style = solid, label="arg0"];
8->18 [style = bold, label=""];
16->19 [style = solid, label="index"];
34->52 [style = bold, label=""];
9->2 [style = solid, label="parameterC"];
51->44 [style = bold, label=""];
4->21 [style = bold, label=""];
1->2 [style = solid, label="parameterO0"];
47->43 [style = bold, label=""];
20->3 [style = bold, label=""];
16->17 [style = bold, label=""];
47->39 [style = bold, label=""];
10->23 [style = solid, label="parameterC"];
21->54 [style = solid, label="parameterV1"];
33->50 [style = bold, label=""];
13->16 [style = bold, label=""];
50->39 [style = bold, label=""];
0->13 [style = solid, label="mod"];
47->43 [style = dotted, label="true"];
3->10 [style = bold, label=""];
7->24 [style = bold, label=""];
21->9 [style = bold, label=""];
21->9 [style = dotted, label="true"];
42->49 [style = solid, label="index"];
15->31 [style = bold, label=""];
25->2 [style = solid, label="javaRowClass"];
16->21 [style = solid, label="index"];
8->14 [style = dotted, label="true"];
10->0 [style = bold, label=""];
45->9 [style = solid, label="parameter"];
24->18 [style = solid, label="memberDeclarations"];
14->15 [style = bold, label=""];
29->31 [style = dotted, label="true"];
23->7 [style = bold, label=""];
36->37 [style = bold, label=""];
4->12 [style = solid, label="arg1"];
42->19 [style = solid, label="index"];
24->8 [style = bold, label=""];
40->41 [style = solid, label="mod"];
42->53 [style = solid, label="index"];
56->33 [style = bold, label=""];
22->6 [style = bold, label=""];
5->30 [style = dashed, label="0"];
43->50 [style = solid, label="parameterO0"];
29->1 [style = dotted, label="true"];
45->51 [style = bold, label=""];
17->9 [style = solid, label="arg0"];
8->2 [style = dotted, label="true"];
26->27 [style = dotted, label="true"];
53->24 [style = dotted, label="true"];
16->42 [style = dashed, label="0"];
10->13 [style = solid, label="parameterC"];
14->5 [style = solid, label="parameterO1"];
8->15 [style = dotted, label="true"];
35->49 [style = bold, label=""];
25->20 [style = solid, label="javaRowClass"];
47->56 [style = dotted, label="true"];
5->18 [style = bold, label=""];
45->21 [style = solid, label="parameter"];
12->19 [style = solid, label="arg1"];
45->33 [style = solid, label="parameter"];
25->20 [style = bold, label=""];
47->33 [style = dotted, label="true"];
52->16 [style = bold, label=""];
9->49 [style = solid, label="parameterC"];
25->3 [style = solid, label="javaRowClass"];
47->50 [style = dotted, label="true"];
10->19 [style = solid, label="parameterC"];
1->5 [style = solid, label="parameterO0"];
49->2 [style = bold, label=""];
43->33 [style = solid, label="parameterO0"];
9->12 [style = bold, label=""];
4->54 [style = solid, label="parameterV0"];
16->4 [style = bold, label=""];
19->7 [style = solid, label="arg0"];
3->4 [style = solid, label="parameterV1"];
8->29 [style = dashed, label="0"];
17->4 [style = bold, label=""];
22->48 [style = dashed, label="0"];
2->5 [style = bold, label=""];
52->39 [style = solid, label="selector"];
34->32 [style = dotted, label="true"];
32->45 [style = bold, label=""];
2->46 [style = bold, label=""];
23->16 [style = bold, label=""];
15->2 [style = bold, label=""];
34->44 [style = dotted, label="true"];
35->2 [style = solid, label="descending"];
28->11 [style = bold, label=""];
6->19 [style = solid, label="descending"];
3->24 [style = solid, label="parameterV1"];
1->30 [style = solid, label="parameterO0"];
54->39 [style = solid, label="memberDeclarations"];
24->29 [style = bold, label=""];
6->19 [style = bold, label=""];
53->7 [style = dotted, label="true"];
29->15 [style = dotted, label="true"];
16->4 [style = solid, label="index"];
47->55 [style = dotted, label="true"];
55->56 [style = bold, label=""];
19->49 [style = dashed, label="0"];
2->31 [style = dashed, label="0"];
25->31 [style = solid, label="javaRowClass"];
8->1 [style = dotted, label="true"];
20->17 [style = solid, label="parameterV0"];
54->47 [style = bold, label=""];
24->54 [style = dashed, label="0"];
53->7 [style = bold, label=""];
23->24 [style = solid, label="arg1"];
55->50 [style = solid, label="parameterO1"];
8->5 [style = dotted, label="true"];
6->23 [style = solid, label="descending"];
19->23 [style = bold, label=""];
37->34 [style = bold, label=""];
44->52 [style = bold, label=""];
40->41 [style = bold, label=""];
29->30 [style = dotted, label="true"];
1->14 [style = bold, label=""];
23->53 [style = bold, label=""];
21->23 [style = solid, label="parameterV1"];
0->40 [style = dashed, label="0"];
51->44 [style = solid, label="selector"];
2->42 [style = bold, label=""];
24->48 [style = bold, label=""];
1->31 [style = solid, label="parameterO0"];
4->19 [style = solid, label="parameterV0"];
41->42 [style = bold, label=""];
}
