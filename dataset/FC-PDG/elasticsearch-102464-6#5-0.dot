digraph {
7 [style = filled, label = "TokenFilterFactory tff_v1_2 = pctf.get(indexSettings,TestEnvironment.newEnvironment(emptyNodeSettings),\"lucene_version\",settings1)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "TokenFilterFactory tff_v1_2 = pctf.get(indexSettings,TestEnvironment.newEnvironment(emptyNodeSettings),\"elasticsearch_version\",settings1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TokenFilterFactory tff_v1_2 = pctf.get(indexSettings1,TestEnvironment.newEnvironment(emptyNodeSettings),\"lucene_version\",Settings.EMPTY)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "TokenFilterFactory tff_v1_1 = pctf.get(indexSettings,TestEnvironment.newEnvironment(emptyNodeSettings),\"lucene_version\",settings1)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "TokenFilterFactory tff_v2 = pctf.get(indexSettings,TestEnvironment.newEnvironment(emptyNodeSettings),\"lucene_version\",settings2)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "IndexSettings indexSettings2 = IndexSettingsModule.newIndexSettings(\"test\",Settings.builder().put(IndexMetadata.SETTING_VERSION_CREATED,version2).build())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "IndexSettings indexSettings1 = IndexSettingsModule.newIndexSettings(\"test\",Settings.builder().put(IndexMetadata.SETTING_VERSION_CREATED,version1).build())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "TokenFilterFactory tff_v2 = pctf.get(indexSettings2,TestEnvironment.newEnvironment(emptyNodeSettings),\"lucene_version\",Settings.EMPTY)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Version version2 = randomValueOtherThan(version1,null)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TokenFilterFactory tff_v2 = pctf.get(indexSettings,TestEnvironment.newEnvironment(emptyNodeSettings),\"elasticsearch_version\",settings2)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "PreConfiguredTokenFilter pctf = PreConfiguredTokenFilter.luceneVersion(\"lucene_version\",randomBoolean(),null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "byte major = VersionUtils.getFirstVersion().major@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertSame(tff_v1_1,tff_v1_2)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertNotSame(tff_v1_1,tff_v2)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Version version1 = Version.CURRENT@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCachingWithLuceneVersion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "TokenFilterFactory tff_v1_1 = pctf.get(indexSettings1,TestEnvironment.newEnvironment(emptyNodeSettings),\"lucene_version\",Settings.EMPTY)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Version version2 = Version.fromString(major - 1 + \".0.0\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNotSame(tff_v1_1,tff_v2)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Version version1 = VersionUtils.randomVersion(random())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "PreConfiguredTokenFilter pctf = PreConfiguredTokenFilter.elasticsearchVersion(\"elasticsearch_version\",randomBoolean(),null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testCachingWithElasticsearchVersion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testCachingWithLuceneVersion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Settings settings2 = Settings.builder().put(IndexMetadata.SETTING_VERSION_CREATED,version2).build()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "TokenFilterFactory tff_v1_1 = pctf.get(indexSettings,TestEnvironment.newEnvironment(emptyNodeSettings),\"elasticsearch_version\",settings1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Settings settings1 = Settings.builder().put(IndexMetadata.SETTING_VERSION_CREATED,version1).build()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "IndexSettings indexSettings = IndexSettingsModule.newIndexSettings(\"test\",Settings.EMPTY)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
17->8 [style = bold, label=""];
6->21 [style = dashed, label="0"];
16->14 [style = solid, label="indexSettings2"];
9->0 [style = bold, label=""];
5->7 [style = solid, label="settings1"];
3->1 [style = bold, label=""];
7->8 [style = solid, label="tff_v1_2"];
5->20 [style = bold, label=""];
0->6 [style = bold, label=""];
7->17 [style = dashed, label="0"];
5->19 [style = solid, label="settings1"];
8->3 [style = bold, label=""];
15->8 [style = solid, label="tff_v1_1"];
13->15 [style = solid, label="indexSettings1"];
0->20 [style = solid, label="indexSettings"];
14->10 [style = bold, label=""];
11->2 [style = dashed, label="0"];
0->21 [style = bold, label=""];
5->4 [style = solid, label="settings1"];
3->22 [style = dashed, label="0"];
20->25 [style = solid, label="tff_v1_1"];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
22->23 [style = bold, label=""];
23->2 [style = solid, label="settings2"];
4->7 [style = bold, label=""];
19->8 [style = bold, label=""];
0->19 [style = solid, label="indexSettings"];
9->6 [style = bold, label=""];
8->22 [style = bold, label=""];
21->5 [style = bold, label=""];
24->26 [style = bold, label=""];
6->5 [style = bold, label=""];
15->17 [style = bold, label=""];
26->0 [style = bold, label=""];
19->8 [style = solid, label="tff_v1_2"];
4->8 [style = solid, label="tff_v1_1"];
20->8 [style = solid, label="tff_v1_1"];
2->25 [style = solid, label="tff_v2"];
7->19 [style = dashed, label="0"];
4->20 [style = dashed, label="0"];
11->10 [style = bold, label=""];
1->16 [style = bold, label=""];
4->15 [style = dashed, label="0"];
2->16 [style = dashed, label="0"];
6->13 [style = bold, label=""];
5->20 [style = solid, label="settings1"];
5->4 [style = bold, label=""];
11->14 [style = dashed, label="0"];
9->26 [style = dashed, label="0"];
3->1 [style = solid, label="major"];
18->9 [style = bold, label=""];
0->2 [style = solid, label="indexSettings"];
2->11 [style = solid, label="settings2"];
16->14 [style = bold, label=""];
15->10 [style = solid, label="tff_v1_1"];
1->2 [style = bold, label=""];
11->10 [style = solid, label="tff_v2"];
13->15 [style = bold, label=""];
23->2 [style = bold, label=""];
14->10 [style = solid, label="tff_v2"];
0->7 [style = solid, label="indexSettings"];
21->22 [style = solid, label="version1"];
20->19 [style = bold, label=""];
2->25 [style = bold, label=""];
0->11 [style = solid, label="indexSettings"];
13->17 [style = solid, label="indexSettings1"];
2->11 [style = bold, label=""];
0->4 [style = solid, label="indexSettings"];
4->10 [style = solid, label="tff_v1_1"];
17->8 [style = solid, label="tff_v1_2"];
}
