digraph {
10 [style = filled, label = "final String maxDescription = \"The maximum number of records polled from consumer within an iteration\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).thenReturn(expectedSensor)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "final Sensor sensor = ThreadMetrics.skipRecordSensor(THREAD_ID,streamsMetrics)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String rateDescription = \"The average per-second number of skipped records\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final String operation = \"skipped-records\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final String avgDescription = \"The average number of records polled from consumer within an iteration\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(,streamsMetrics)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "replay(,streamsMetrics)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final String totalDescription = \"The total number of skipped records\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Sensor sensor = ThreadMetrics.pollRecordsSensor(THREAD_ID,streamsMetrics)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final String operation = \"poll-records\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "shouldGetPollRecordsSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(streamsMetrics.threadLevelTagMap(THREAD_ID)).thenReturn(tagMap)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "shouldGetPollRecordsSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "shouldGetSkipRecordSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StreamsMetricsImpl.addAvgAndMaxToSensor(expectedSensor,THREAD_LEVEL_GROUP,tagMap,operation,avgDescription,maxDescription)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,THREAD_LEVEL_GROUP,tagMap,operation,rateDescription,totalDescription)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->10 [style = bold, label=""];
5->9 [style = solid, label="avgDescription"];
16->17 [style = solid, label="totalDescription"];
14->17 [style = solid, label="rateDescription"];
17->6 [style = bold, label=""];
3->18 [style = dashed, label="0"];
10->9 [style = solid, label="maxDescription"];
10->3 [style = bold, label=""];
7->0 [style = bold, label=""];
1->0 [style = bold, label=""];
15->19 [style = bold, label=""];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
20->0 [style = solid, label="sensor"];
9->6 [style = bold, label=""];
19->16 [style = bold, label=""];
4->9 [style = solid, label="operation"];
8->13 [style = dashed, label="0"];
1->20 [style = dashed, label="0"];
8->17 [style = bold, label=""];
6->20 [style = bold, label=""];
6->1 [style = bold, label=""];
12->4 [style = bold, label=""];
3->8 [style = bold, label=""];
9->17 [style = dashed, label="0"];
11->13 [style = bold, label=""];
8->9 [style = bold, label=""];
16->14 [style = bold, label=""];
4->19 [style = dashed, label="0"];
14->18 [style = bold, label=""];
18->8 [style = bold, label=""];
13->9 [style = bold, label=""];
1->0 [style = solid, label="sensor"];
19->17 [style = solid, label="operation"];
20->7 [style = bold, label=""];
9->1 [style = bold, label=""];
4->5 [style = bold, label=""];
3->11 [style = dashed, label="0"];
10->11 [style = bold, label=""];
}
