digraph {
17 [style = filled, label = "WorkerInstances.INSTANCES.put(testWorkerId,new TestWorker())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "streamObserver.onCompleted()@@@51@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "moduleManager = new ModuleManagerTesting()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "StreamDataClassGetter classGetter = mock()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "MetricCreator metricCreator = mock()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,classGetter)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "callTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "RemoteData.Builder remoteData = RemoteData.newBuilder()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Class<?> dataClass = @@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "RemoteServiceGrpc.RemoteServiceStub remoteServiceStub = RemoteServiceGrpc.newStub(gRPCCleanup.register(InProcessChannelBuilder.forName(serverName).directExecutor().build()))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "moduleManager.put(CoreModule.NAME,moduleDefine)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "gRPCCleanup.register(InProcessServerBuilder.forName(serverName).directExecutor().addService(new RemoteServiceHandler(moduleManager)).build().start())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "streamObserver.onNext(remoteMessage.build())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final int streamDataClassId = 1@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "StreamObserver<RemoteMessage> streamObserver = remoteServiceStub.call(new StreamObserver<Empty>(){@Override public void onNext(Empty empty){}@Override public void onError(Throwable throwable){}@Override public void onCompleted(){}})@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "before['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "ModuleDefineTesting moduleDefine = new ModuleDefineTesting()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "moduleManager.put(CoreModule.NAME,moduleDefine)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final int testWorkerId = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "RemoteMessage.Builder remoteMessage = RemoteMessage.newBuilder()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ModuleManagerTesting moduleManager = new ModuleManagerTesting()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ModuleDefineTesting moduleDefine = new ModuleDefineTesting()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "WorkerInstancesService workerInstancesService = new WorkerInstancesService()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "remoteData.addDataStrings(\"test1\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "when(metricCreator.createHistogramMetric(any(),any(),any(),any(),any())).thenReturn(new HistogramMetric(){@Override public void observe(double value){}})@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "remoteMessage.setRemoteData(remoteData)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "moduleManager.put(TelemetryModule.NAME,telemetryModuleDefine)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "when(metricCreator.createCounter(any(),any(),any(),any())).thenReturn(new CounterMetric(){@Override public void inc(){}@Override public void inc(double value){}})@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TestWorker worker = new TestWorker(nextWorkerId)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "before['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,workerInstancesService)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "remoteData.addDataLongs(10)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "when(classGetter.findClassById(streamDataClassId)).thenReturn((Class<StreamData>)dataClass)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "remoteMessage.setStreamDataId(streamDataClassId)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TestWorker worker = new TestWorker(moduleManager)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "remoteData.addDataLongs(20)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "remoteData.addDataStrings(\"test2\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "ModuleDefineTesting telemetryModuleDefine = new ModuleDefineTesting()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "remoteMessage.setNextWorkerId(testWorkerId)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String serverName = InProcessServerBuilder.generateName()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,workerInstancesService)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "WorkerInstances.INSTANCES.put(nextWorkerId,worker)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "telemetryModuleDefine.provider().registerServiceImplementation(,metricCreator)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->2 [style = solid, label="classGetter"];
13->34 [style = bold, label=""];
30->24 [style = bold, label=""];
1->4 [style = bold, label=""];
29->17 [style = bold, label=""];
3->17 [style = dashed, label="0"];
33->20 [style = bold, label=""];
4->6 [style = bold, label=""];
11->1 [style = bold, label=""];
25->13 [style = bold, label=""];
22->37 [style = bold, label=""];
38->17 [style = solid, label="testWorkerId"];
34->26 [style = solid, label="telemetryModuleDefine"];
2->3 [style = bold, label=""];
21->41 [style = bold, label=""];
20->32 [style = bold, label=""];
38->18 [style = solid, label="testWorkerId"];
15->16 [style = bold, label=""];
24->22 [style = bold, label=""];
37->23 [style = bold, label=""];
3->0 [style = solid, label="worker"];
42->40 [style = bold, label=""];
38->19 [style = bold, label=""];
3->0 [style = bold, label=""];
27->42 [style = bold, label=""];
5->1 [style = bold, label=""];
8->12 [style = solid, label="workerInstancesService"];
12->10 [style = bold, label=""];
36->25 [style = bold, label=""];
28->21 [style = bold, label=""];
31->35 [style = bold, label=""];
34->26 [style = bold, label=""];
18->27 [style = bold, label=""];
17->14 [style = bold, label=""];
7->2 [style = bold, label=""];
35->41 [style = solid, label="streamDataClassId"];
2->15 [style = bold, label=""];
27->22 [style = solid, label="remoteData"];
8->9 [style = bold, label=""];
1->10 [style = solid, label="moduleManager"];
7->15 [style = dashed, label="0"];
8->9 [style = solid, label="workerInstancesService"];
7->2 [style = solid, label="moduleDefine"];
16->39 [style = bold, label=""];
40->30 [style = bold, label=""];
9->12 [style = bold, label=""];
35->38 [style = bold, label=""];
16->39 [style = solid, label="dataClass"];
36->33 [style = solid, label="metricCreator"];
0->9 [style = dashed, label="0"];
6->7 [style = bold, label=""];
26->33 [style = bold, label=""];
32->28 [style = bold, label=""];
19->7 [style = bold, label=""];
41->18 [style = bold, label=""];
4->6 [style = solid, label="moduleDefine"];
15->29 [style = solid, label="classGetter"];
2->8 [style = bold, label=""];
39->29 [style = bold, label=""];
14->36 [style = bold, label=""];
}
