digraph {
0 [style = filled, label = "verify(mock).setRuntimeContext(rCtx)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Configuration config = new Configuration()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "windowFunction.close()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "verify(mock).process(eq(42L),(ProcessWindowFunctionMock.Context)anyObject(),(Iterable<Long>)argThat(IsIterableContainingInOrder.contains(23L)),eq(c))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ProcessWindowFunctionMock mock = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "windowFunction.setRuntimeContext(rCtx)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "TypeInformation<String> stringType = BasicTypeInfo.STRING_TYPE_INFO@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testInternalSingleValueWindowFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "verify(mock).open(config)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testInternalSingleValueWindowFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "execConf.setParallelism(42)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ExecutionConfig execConf = new ExecutionConfig()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RuntimeContext rCtx = mock()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testInternalSingleValueProcessWindowFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "WindowFunctionMock mock = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "InternalSingleValueWindowFunction<Long,String,Long,TimeWindow> windowFunction = new InternalSingleValueWindowFunction<>(mock)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "windowFunction.open(config)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "windowFunction.apply(42L,w,23L,c)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(mock).close()@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "windowFunction.process(42L,w,ctx,23L,c)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "verify(mock).close()@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "InternalWindowFunction.InternalWindowContext ctx = mock()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "InternalSingleValueProcessWindowFunction<Long,String,Long,TimeWindow> windowFunction = new InternalSingleValueProcessWindowFunction<>(mock)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Collector<String> c = (Collector<String>)mock()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "StreamingFunctionUtils.setOutputType(windowFunction,stringType,execConf)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(mock).setOutputType(stringType,execConf)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TimeWindow w = mock()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(mock).apply(eq(42L),eq(w),(Iterable<Long>)argThat(IsIterableContainingInOrder.contains(23L)),eq(c))@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
1->21 [style = solid, label="mock"];
25->10 [style = solid, label="mock"];
19->12 [style = bold, label=""];
26->17 [style = bold, label=""];
25->9 [style = solid, label="mock"];
5->26 [style = dashed, label="0"];
14->3 [style = solid, label="execConf"];
8->19 [style = bold, label=""];
10->23 [style = solid, label="w"];
19->12 [style = solid, label="rCtx"];
15->21 [style = dashed, label="0"];
4->18 [style = bold, label=""];
9->4 [style = solid, label="c"];
1->9 [style = solid, label="mock"];
1->10 [style = solid, label="mock"];
9->15 [style = solid, label="c"];
5->17 [style = bold, label=""];
12->0 [style = bold, label=""];
24->18 [style = bold, label=""];
4->24 [style = dashed, label="0"];
13->1 [style = bold, label=""];
17->3 [style = solid, label="stringType"];
25->26 [style = solid, label="mock"];
0->10 [style = bold, label=""];
9->24 [style = solid, label="c"];
3->7 [style = bold, label=""];
11->3 [style = bold, label=""];
17->14 [style = bold, label=""];
10->15 [style = solid, label="w"];
7->2 [style = bold, label=""];
10->18 [style = solid, label="w"];
9->15 [style = bold, label=""];
5->11 [style = solid, label="windowFunction"];
6->11 [style = bold, label=""];
15->24 [style = bold, label=""];
25->26 [style = bold, label=""];
15->4 [style = bold, label=""];
7->8 [style = solid, label="config"];
9->21 [style = bold, label=""];
14->11 [style = solid, label="execConf"];
21->23 [style = solid, label="ctx"];
17->11 [style = solid, label="stringType"];
10->9 [style = bold, label=""];
22->1 [style = bold, label=""];
1->5 [style = solid, label="mock"];
7->2 [style = solid, label="config"];
9->18 [style = solid, label="c"];
26->11 [style = solid, label="windowFunction"];
1->25 [style = dashed, label="0"];
10->4 [style = solid, label="w"];
1->19 [style = solid, label="mock"];
19->0 [style = solid, label="rCtx"];
25->19 [style = solid, label="mock"];
16->20 [style = bold, label=""];
14->6 [style = bold, label=""];
23->18 [style = bold, label=""];
27->25 [style = bold, label=""];
9->23 [style = solid, label="c"];
2->8 [style = bold, label=""];
21->23 [style = bold, label=""];
18->16 [style = bold, label=""];
}
