digraph {
14 [style = filled, label = "asyncFusedRejected['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "to0.assertFusionMode(QueueFuseable.NONE).assertResult(1,2,3,4,5)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "to0.assertFusionMode(QueueFuseable.ASYNC).assertResult(1,2,3,4,5)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "up.doAfterNext(afterNext).subscribe(to0)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "TestHelper.emit(us,1,2,3,4,5)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "asyncFused['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Observable.range(1,5).doAfterNext(afterNext).subscribe(to0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "us.doAfterNext(afterNext).subscribe(to0)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "UnicastSubject<Integer> up = UnicastSubject.create()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "asyncFused['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "TestHelper.emit(up,1,2,3,4,5)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Arrays.asList(-1,-2,-3,-4,-5),values)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TestObserverEx<Integer> to0 = new TestObserverEx<>(QueueFuseable.ASYNC)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "UnicastSubject<Integer> us = UnicastSubject.create()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(Arrays.asList(-1,-2,-3,-4,-5),values)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
6->3 [style = bold, label=""];
6->3 [style = solid, label="up"];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
6->7 [style = dashed, label="0"];
0->11 [style = bold, label=""];
0->2 [style = solid, label="to0"];
7->8 [style = bold, label=""];
3->13 [style = dashed, label="0"];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
13->12 [style = bold, label=""];
0->11 [style = solid, label="to0"];
3->2 [style = bold, label=""];
14->0 [style = bold, label=""];
2->9 [style = dashed, label="0"];
7->8 [style = solid, label="us"];
11->13 [style = bold, label=""];
10->0 [style = bold, label=""];
8->9 [style = bold, label=""];
3->8 [style = dashed, label="0"];
0->9 [style = solid, label="to0"];
9->1 [style = bold, label=""];
}
