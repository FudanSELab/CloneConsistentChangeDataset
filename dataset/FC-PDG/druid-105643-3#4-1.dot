digraph {
26 [style = filled, label = "i++@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = readAllVectors.getStartOffset()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int i = readAllVectors.getStartOffset()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "VectorValueSelector selector@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "readAllVectors.reset()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertTrue(encounteredNull)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "VectorValueSelector selector@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "NoFilterVectorOffset readAllVectors@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "readAllVectors.advance()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(bitmap.get(readAllVectors.getStartOffset() + i),nullVector(i()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ImmutableBitmap bitmap@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "boolean nullVector@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "readAllVectors.mangleOffset(1)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "ImmutableBitmap bitmap@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "boolean(( nullVector@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "!readAllVectors.isDone()@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(bitmap.get(readAllVectors.getStartOffset() + i),nullVector(i()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "encounteredNull |= nullVector(i(@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "!readAllVectors.isDone()@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "readAllVectors.advance()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "encounteredNull = false@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(encounteredNull)@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i < readAllVectors.getCurrentVectorSize()@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertVectorOffsetCanReset['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "encounteredNull |= nullVector(i(@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "boolean encounteredNull = false@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "NoFilterOffsetThatCanBeMangledToTestOverlapping readAllVectors@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(encounteredNull)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "nullVector = selector.getNullVector()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "VectorValueSelector selector@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "nullVector = selector.getNullVector()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "ImmutableBitmap bitmap@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "encounteredNull |= nullVector(i(@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertVectorChillWhenOffsetsOverlap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "readAllVectors.reset()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "readAllVectors.mangleOffset(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertVectorOffsetCanReset['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "i < readAllVectors.getCurrentVectorSize()@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
14->3 [style = bold, label=""];
9->12 [style = dotted, label="true"];
25->34 [style = bold, label=""];
8->15 [style = solid, label="i"];
28->21 [style = dotted, label="true"];
24->4 [style = solid, label="encounteredNull"];
20->0 [style = dotted, label="true"];
25->6 [style = bold, label=""];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
37->5 [style = bold, label=""];
16->3 [style = solid, label="i"];
28->30 [style = dotted, label="true"];
19->1 [style = bold, label=""];
26->3 [style = solid, label="i"];
3->26 [style = solid, label="i"];
24->17 [style = bold, label=""];
9->15 [style = dotted, label="true"];
32->4 [style = bold, label=""];
3->14 [style = solid, label="i"];
28->27 [style = dotted, label="true"];
11->25 [style = bold, label=""];
17->20 [style = bold, label=""];
16->3 [style = bold, label=""];
5->16 [style = solid, label="i"];
5->3 [style = solid, label="i"];
16->26 [style = bold, label=""];
35->38 [style = dotted, label="true"];
16->32 [style = bold, label=""];
26->23 [style = dotted, label="true"];
35->33 [style = dotted, label="true"];
26->3 [style = dotted, label="true"];
16->26 [style = solid, label="i"];
23->14 [style = bold, label=""];
3->23 [style = solid, label="i"];
26->16 [style = bold, label=""];
29->20 [style = bold, label=""];
3->23 [style = bold, label=""];
1->26 [style = dotted, label="true"];
26->23 [style = solid, label="i"];
18->4 [style = bold, label=""];
14->18 [style = solid, label="encounteredNull"];
23->4 [style = solid, label="encounteredNull"];
26->14 [style = dotted, label="true"];
9->13 [style = dotted, label="true"];
28->24 [style = bold, label=""];
0->20 [style = bold, label=""];
15->12 [style = bold, label=""];
13->15 [style = bold, label=""];
26->16 [style = solid, label="i"];
20->7 [style = bold, label=""];
5->23 [style = solid, label="i"];
22->21 [style = dotted, label="true"];
20->9 [style = dotted, label="true"];
12->15 [style = solid, label="i"];
20->31 [style = dashed, label="0"];
3->26 [style = bold, label=""];
21->38 [style = dashed, label="0"];
15->25 [style = solid, label="encounteredNull"];
20->7 [style = dotted, label="true"];
26->19 [style = bold, label=""];
1->19 [style = dotted, label="true"];
31->7 [style = bold, label=""];
35->24 [style = bold, label=""];
5->16 [style = bold, label=""];
6->1 [style = bold, label=""];
6->18 [style = solid, label="encounteredNull"];
1->16 [style = dotted, label="true"];
8->12 [style = solid, label="i"];
5->26 [style = solid, label="i"];
20->11 [style = bold, label=""];
12->9 [style = solid, label="i"];
22->10 [style = dotted, label="true"];
15->4 [style = solid, label="encounteredNull"];
9->0 [style = bold, label=""];
20->8 [style = dotted, label="true"];
17->31 [style = bold, label=""];
35->36 [style = dotted, label="true"];
23->26 [style = bold, label=""];
1->18 [style = bold, label=""];
24->29 [style = bold, label=""];
16->23 [style = solid, label="i"];
8->9 [style = solid, label="i"];
17->29 [style = dashed, label="0"];
16->23 [style = dotted, label="true"];
16->3 [style = dotted, label="true"];
8->13 [style = solid, label="i"];
22->2 [style = dotted, label="true"];
16->26 [style = dotted, label="true"];
16->14 [style = solid, label="i"];
34->37 [style = bold, label=""];
9->25 [style = bold, label=""];
26->23 [style = bold, label=""];
12->13 [style = solid, label="i"];
8->9 [style = bold, label=""];
22->24 [style = bold, label=""];
24->25 [style = solid, label="encounteredNull"];
1->5 [style = dotted, label="true"];
9->13 [style = bold, label=""];
}
