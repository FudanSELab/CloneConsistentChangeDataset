digraph {
13 [style = filled, label = "ObjectHelper.requireNonNull(mapper,\"mapper is null\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "v == null@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int prefetch@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Function<? super T,? extends ObservableSource<? extends R>> mapper@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return empty()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "return FlowableScalarXMap.scalarXMap(v,mapper)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ObjectHelper.verifyPositive(prefetch,\"prefetch\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ObjectHelper.verifyPositive(maxConcurrency,\"maxConcurrency\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return empty()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Function<? super T,? extends Publisher<? extends R>> mapper@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ObjectHelper.verifyPositive(bufferSize,\"bufferSize\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "@SuppressWarnings(\"unchecked\") T v = ((ScalarSupplier<T>)this).get()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "boolean delayErrors@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Function<? super T,? extends ObservableSource<? extends R>> mapper@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "return RxJavaPlugins.onAssembly(new ObservableFlatMap<T,R>(this,mapper,delayErrors,maxConcurrency,bufferSize))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "this instanceof ScalarSupplier@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return ObservableScalarXMap.scalarXMap(v,mapper)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "flatMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "flatMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int bufferSize@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return RxJavaPlugins.onAssembly(new FlowableConcatMap<T,R>(this,mapper,prefetch,ErrorMode.IMMEDIATE))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "concatMap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "int maxConcurrency@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Objects.requireNonNull(mapper,\"mapper is null\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "boolean delayErrors@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "int maxConcurrency@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8->13 [style = solid, label="mapper"];
6->3 [style = bold, label=""];
7->2 [style = dotted, label="true"];
0->12 [style = dotted, label="true"];
11->1 [style = solid, label="delayErrors"];
19->25 [style = dotted, label="true"];
16->18 [style = bold, label=""];
16->12 [style = dotted, label="true"];
3->7 [style = dotted, label="true"];
0->13 [style = bold, label=""];
7->10 [style = bold, label=""];
3->25 [style = bold, label=""];
19->20 [style = bold, label=""];
16->17 [style = dotted, label="true"];
24->25 [style = solid, label="mapper"];
24->20 [style = solid, label="mapper"];
6->3 [style = solid, label="v"];
21->22 [style = dotted, label="true"];
9->1 [style = solid, label="maxConcurrency"];
3->10 [style = solid, label="v"];
8->10 [style = solid, label="mapper"];
2->10 [style = bold, label=""];
19->6 [style = bold, label=""];
14->4 [style = solid, label="maxConcurrency"];
9->4 [style = solid, label="maxConcurrency"];
1->20 [style = dashed, label="0"];
0->8 [style = dotted, label="true"];
17->10 [style = solid, label="mapper"];
22->20 [style = solid, label="prefetch"];
6->1 [style = bold, label=""];
6->10 [style = dotted, label="true"];
17->1 [style = solid, label="mapper"];
25->20 [style = bold, label=""];
12->5 [style = solid, label="bufferSize"];
12->1 [style = solid, label="bufferSize"];
5->6 [style = bold, label=""];
8->1 [style = solid, label="mapper"];
18->4 [style = bold, label=""];
3->7 [style = bold, label=""];
21->24 [style = dotted, label="true"];
19->3 [style = dotted, label="true"];
15->1 [style = solid, label="delayErrors"];
7->2 [style = bold, label=""];
17->18 [style = solid, label="mapper"];
23->19 [style = bold, label=""];
12->24 [style = dashed, label="0"];
16->14 [style = dotted, label="true"];
6->25 [style = solid, label="v"];
13->23 [style = bold, label=""];
6->7 [style = dotted, label="true"];
14->1 [style = solid, label="maxConcurrency"];
7->25 [style = bold, label=""];
19->6 [style = dotted, label="true"];
22->23 [style = solid, label="prefetch"];
13->18 [style = dashed, label="0"];
6->3 [style = dotted, label="true"];
10->1 [style = bold, label=""];
24->13 [style = solid, label="mapper"];
0->11 [style = dotted, label="true"];
4->5 [style = bold, label=""];
0->9 [style = dotted, label="true"];
4->23 [style = dashed, label="0"];
10->25 [style = dashed, label="0"];
3->7 [style = solid, label="v"];
21->13 [style = bold, label=""];
16->15 [style = dotted, label="true"];
13->4 [style = bold, label=""];
}
