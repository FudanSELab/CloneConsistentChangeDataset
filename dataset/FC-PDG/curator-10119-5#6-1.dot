digraph {
6 [style = filled, label = "newInstances.addAll(newCluster.getInstances())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "newCluster.start()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "newInstances.addAll(newCluster.getInstances())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testAddAsync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertConfig(oldConfig,cluster.getInstances())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertConfig(newConfig,newInstances)@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final CountDownLatch callbackLatch = new CountDownLatch(1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(callbackLatch))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "CountDownLatch latch = setChangeWaiter(client)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances())@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "QuorumVerifier newConfig = toQuorumVerifier(newConfigData)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "QuorumVerifier newConfig = toQuorumVerifier(client.getConfig().forEnsemble())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertConfig(newConfig,newInstances)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "testAdd['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "client.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testAdd['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "byte(( newConfigData = client.getConfig().forEnsemble()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "BackgroundCallback callback = new BackgroundCallback(){@Override public void processResult(CuratorFramework client,CuratorEvent event){if (event.getType() == CuratorEventType.RECONFIG) {callbackLatch.countDown()}}}@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfigData),ensembleProvider.getConnectionString())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
2->12 [style = solid, label="newInstances"];
16->3 [style = bold, label=""];
5->10 [style = bold, label=""];
4->3 [style = bold, label=""];
17->25 [style = bold, label=""];
5->14 [style = dashed, label="0"];
7->1 [style = bold, label=""];
9->11 [style = bold, label=""];
2->6 [style = bold, label=""];
13->12 [style = solid, label="newConfig"];
22->24 [style = solid, label="callbackLatch"];
18->26 [style = bold, label=""];
12->15 [style = bold, label=""];
25->18 [style = bold, label=""];
22->21 [style = bold, label=""];
20->3 [style = bold, label=""];
18->19 [style = solid, label="newInstances"];
26->19 [style = bold, label=""];
8->7 [style = bold, label=""];
8->22 [style = bold, label=""];
25->19 [style = solid, label="newConfig"];
3->9 [style = bold, label=""];
23->24 [style = bold, label=""];
11->0 [style = bold, label=""];
5->6 [style = solid, label="newConfig"];
14->13 [style = solid, label="newConfigData"];
0->17 [style = solid, label="latch"];
14->15 [style = solid, label="newConfigData"];
24->17 [style = bold, label=""];
0->8 [style = bold, label=""];
9->11 [style = solid, label="oldConfig"];
10->2 [style = bold, label=""];
1->14 [style = bold, label=""];
14->13 [style = bold, label=""];
0->1 [style = solid, label="latch"];
10->6 [style = solid, label="newInstances"];
13->2 [style = bold, label=""];
21->23 [style = bold, label=""];
6->12 [style = bold, label=""];
}
