digraph {
5 [style = filled, label = "Assert.assertEquals(100,q.getHighlightFragsize())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "b = q.removeFacetQuery(\"a:b\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "q.addFacetQuery(\"instock:false\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "q.addSortField(\"qty\",SolrQuery.ORDER.desc)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "Assert.assertTrue(q.getSorts().isEmpty())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "q.addSort(SortClause.asc(\"C\"))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Assert.assertEquals(2,q.getSorts().size())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "testSolrQueryMethods['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "Assert.assertEquals(b,false)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "q.removeSort(\"date\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(q.toString(),\"q=dog\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "q.addSort(\"qty\",SolrQuery.ORDER.desc)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "q.removeSort(new SortClause(\"price\",SolrQuery.ORDER.asc))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "q.addHighlightField(\"hl1\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(null,q.getTimeAllowed())@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "q.addSort(SortClause.asc(\"B\"))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "q.setSort(SortClause.asc(\"A\"))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "q.addSort(SortClause.asc(\"C\"))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "q.setSort(SortClause.asc(\"A\"))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "q.removeSort(SortClause.asc(\"C\"))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "q.setFacetLimit(10)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "q.clearSorts()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "b = q.removeFacetField(\"state\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "Assert.assertEquals(\"D asc\",q.get(CommonParams.SORT))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertEquals(b,true)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testSolrQueryMethods['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "Assert.assertTrue(q.getSorts().isEmpty())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "q.addFacetField(\"price\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "q.addSort(\"price\",SolrQuery.ORDER.asc)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(2,q.getSortFields().length)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "q.removeSortField(\"date\",SolrQuery.ORDER.desc)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "q.removeSort(new SortClause(\"date\",SolrQuery.ORDER.desc))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
87 [style = filled, label = "Assert.assertEquals(\"price asc,qty desc\",q.get(CommonParams.SORT))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "b = q.removeFacetQuery(\"instock:false\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "boolean b = false@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "q.setHighlightSnippets(2)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "q.addSort(\"price\",SolrQuery.ORDER.asc)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "Assert.assertEquals(\"1 asc,2 desc,3 asc,4 desc\",q.get(CommonParams.SORT))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertEquals(q.getFacetQuery().length,3)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "q.removeSort(\"A\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "Assert.assertEquals(3,q.getSorts().size())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "Assert.assertEquals(\"price asc,date desc,qty desc\",q.get(CommonParams.SORT))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(null,q.getFacetQuery())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals((Integer)1000,q.getTimeAllowed())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "q.addFacetQuery(\"instock:true\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "q.removeHighlightField(\"hl2\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "q.setTimeAllowed(1000)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "q.removeHighlightField(\"hl1\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "q.addSort(\"1\",SolrQuery.ORDER.asc)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "q.addSort(\"3\",SolrQuery.ORDER.asc)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "q.addSort(\"date\",SolrQuery.ORDER.desc)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "q.removeSortField(\"price\",SolrQuery.ORDER.asc)@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "q.addSort(\"price\",SolrQuery.ORDER.asc)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "q.addOrUpdateSort(SortClause.asc(\"4\"))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(b,true)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(b,false)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "q.addHighlightField(\"hl2\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "q.addSort(new SortClause(\"3\",SolrQuery.ORDER.asc))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "q.setTimeAllowed(null)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(null,q.getFacetFields())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "q.addSortField(\"date\",SolrQuery.ORDER.desc)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "q.addFacetField(\"state\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "q.addSort(new SortClause(\"1\",SolrQuery.ORDER.asc))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "SolrQuery q = new SolrQuery(\"dog\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "b = q.removeFacetField(\"price\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "q.addSort(\"qty\",SolrQuery.ORDER.desc)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "q.addOrUpdateSort(\"4\",SolrQuery.ORDER.desc)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "ObjectOutputStream out = new ObjectOutputStream(new ByteArrayOutputStream())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "q.addSort(\"date\",SolrQuery.ORDER.desc)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "Assert.assertEquals(0,q.getSorts().size())@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
93 [style = filled, label = "Assert.assertEquals(\"A asc,B asc,C asc,D asc\",q.get(CommonParams.SORT))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "q.addSort(\"2\",SolrQuery.ORDER.asc)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "q.removeSort(\"qty\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "Assert.assertEquals(2,q.getSorts().size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(1,q.getHighlightFields().length)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "Assert.assertNull(q.get(CommonParams.SORT))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(q.getFacetFields().length,2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "b = q.removeFacetQuery(\"instock:true\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "q.removeHighlightField(\"hl3\")@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "q.addSort(SortClause.asc(\"B\"))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "q.clearSorts()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "q.addOrUpdateSort(\"2\",SolrQuery.ORDER.desc)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertEquals(b,true)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertEquals(2,q.getHighlightFields().length)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "q.addSort(\"1\",SolrQuery.ORDER.asc)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "out.writeObject(q)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "q.clearSorts()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "q.addSort(SortClause.asc(\"D\"))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "testSort['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "q.addSortField(\"price\",SolrQuery.ORDER.asc)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
102 [style = filled, label = "q.addSort(new SortClause(\"2\",SolrQuery.ORDER.asc))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "q.removeSortField(\"qty\",SolrQuery.ORDER.desc)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
66 [style = filled, label = "Assert.assertNull(q.get(CommonParams.SORT))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(null,q.getSortFields())@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
74 [style = filled, label = "out.close()@@@51@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "q.addSort(SortClause.asc(\"D\"))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "q.removeSort(SortClause.desc(\"B\"))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "q.addOrUpdateSort(SortClause.desc(\"2\"))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "q.addFacetQuery(\"a:b\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "b = q.removeFacetQuery(\"a:c\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(null,q.getHighlightFields())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "Assert.assertEquals(\"1 asc,2 desc,3 asc,4 asc\",q.get(CommonParams.SORT))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Assert.assertEquals(q.getHighlightSnippets(),2)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "b = q.removeFacetField(\"price2\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "q.removeSort(new SortClause(\"qty\",SolrQuery.ORDER.desc))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "q.clearSorts()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "q.removeSort(\"price\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88->86 [style = bold, label=""];
43->32 [style = solid, label="b"];
99->72 [style = bold, label=""];
65->101 [style = bold, label=""];
32->37 [style = bold, label=""];
9->11 [style = bold, label=""];
54->57 [style = bold, label=""];
69->89 [style = bold, label=""];
78->70 [style = bold, label=""];
70->65 [style = bold, label=""];
105->79 [style = bold, label=""];
49->51 [style = bold, label=""];
2->102 [style = dashed, label="0"];
11->46 [style = bold, label=""];
64->77 [style = bold, label=""];
38->42 [style = bold, label=""];
76->17 [style = bold, label=""];
26->75 [style = dashed, label="0"];
28->14 [style = bold, label=""];
61->68 [style = bold, label=""];
45->6 [style = bold, label=""];
104->98 [style = bold, label=""];
16->49 [style = bold, label=""];
6->31 [style = solid, label="b"];
15->20 [style = bold, label=""];
98->61 [style = bold, label=""];
13->51 [style = dashed, label="0"];
7->16 [style = bold, label=""];
24->17 [style = bold, label=""];
84->91 [style = bold, label=""];
10->49 [style = dashed, label="0"];
83->85 [style = bold, label=""];
100->88 [style = bold, label=""];
75->60 [style = bold, label=""];
58->75 [style = bold, label=""];
80->58 [style = bold, label=""];
57->46 [style = bold, label=""];
12->73 [style = dashed, label="0"];
66->63 [style = bold, label=""];
8->28 [style = bold, label=""];
0->77 [style = dashed, label="0"];
4->53 [style = dashed, label="0"];
25->36 [style = bold, label=""];
2->34 [style = bold, label=""];
18->15 [style = bold, label=""];
94->92 [style = bold, label=""];
43->32 [style = bold, label=""];
4->21 [style = bold, label=""];
29->86 [style = dashed, label="0"];
26->43 [style = bold, label=""];
89->66 [style = bold, label=""];
13->67 [style = dashed, label="0"];
71->103 [style = bold, label=""];
35->66 [style = dashed, label="0"];
3->0 [style = bold, label=""];
73->59 [style = bold, label=""];
21->9 [style = bold, label=""];
0->23 [style = bold, label=""];
92->73 [style = bold, label=""];
81->82 [style = bold, label=""];
17->100 [style = bold, label=""];
67->102 [style = bold, label=""];
30->47 [style = bold, label=""];
79->99 [style = bold, label=""];
22->26 [style = bold, label=""];
106->105 [style = bold, label=""];
34->50 [style = dashed, label="0"];
90->106 [style = bold, label=""];
22->58 [style = dashed, label="0"];
59->93 [style = bold, label=""];
37->41 [style = bold, label=""];
14->99 [style = dashed, label="0"];
16->101 [style = dashed, label="0"];
95->90 [style = bold, label=""];
27->40 [style = solid, label="b"];
34->104 [style = dashed, label="0"];
51->52 [style = bold, label=""];
31->7 [style = bold, label=""];
63->84 [style = bold, label=""];
101->96 [style = bold, label=""];
47->29 [style = bold, label=""];
68->94 [style = bold, label=""];
17->103 [style = solid, label="q"];
10->13 [style = bold, label=""];
77->83 [style = bold, label=""];
37->41 [style = solid, label="b"];
52->50 [style = bold, label=""];
12->39 [style = bold, label=""];
44->5 [style = bold, label=""];
33->22 [style = bold, label=""];
86->64 [style = bold, label=""];
36->19 [style = bold, label=""];
11->57 [style = dashed, label="0"];
13->2 [style = bold, label=""];
41->35 [style = bold, label=""];
53->55 [style = bold, label=""];
41->89 [style = dashed, label="0"];
72->62 [style = bold, label=""];
35->27 [style = bold, label=""];
60->97 [style = bold, label=""];
39->44 [style = bold, label=""];
46->12 [style = bold, label=""];
97->69 [style = bold, label=""];
16->10 [style = bold, label=""];
21->55 [style = dashed, label="0"];
29->3 [style = bold, label=""];
22->26 [style = solid, label="b"];
44->93 [style = dashed, label="0"];
42->33 [style = bold, label=""];
1->18 [style = bold, label=""];
17->30 [style = bold, label=""];
2->52 [style = dashed, label="0"];
93->81 [style = bold, label=""];
19->8 [style = bold, label=""];
14->1 [style = bold, label=""];
56->17 [style = bold, label=""];
8->105 [style = dashed, label="0"];
85->87 [style = bold, label=""];
62->71 [style = bold, label=""];
6->31 [style = bold, label=""];
96->67 [style = bold, label=""];
46->92 [style = dashed, label="0"];
23->38 [style = bold, label=""];
103->74 [style = bold, label=""];
48->25 [style = bold, label=""];
5->48 [style = bold, label=""];
87->80 [style = bold, label=""];
34->4 [style = bold, label=""];
27->40 [style = bold, label=""];
40->45 [style = bold, label=""];
102->104 [style = bold, label=""];
55->54 [style = bold, label=""];
91->78 [style = bold, label=""];
9->54 [style = dashed, label="0"];
50->53 [style = bold, label=""];
82->95 [style = bold, label=""];
}
