digraph {
2 [style = filled, label = "convert['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "given(targetType.getAnnotation()).willReturn(unitAnnotation)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Integer source@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ConversionService conversionService@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "TypeDescriptor targetType = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "given(targetType.getType()).willReturn((Class))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "given(targetType.getAnnotation()).willReturn(unitAnnotation)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DataSizeUnit unitAnnotation = AnnotationUtils.synthesizeAnnotation(Collections.singletonMap(\"value\",defaultUnit),,null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Integer source@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "given(targetType.getType()).willReturn((Class))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "convert['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "defaultUnit != null@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "DataUnit defaultUnit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return (Duration)this.conversionService.convert(source,TypeDescriptor.forObject(source),targetType)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "return (DataSize)this.conversionService.convert(source,TypeDescriptor.forObject(source),targetType)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ChronoUnit defaultUnit@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "convert['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "ChronoUnit defaultUnit@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "return (Duration)conversionService.convert(source,TypeDescriptor.forObject(source),targetType)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "DurationUnit unitAnnotation = AnnotationUtils.synthesizeAnnotation(Collections.singletonMap(\"value\",defaultUnit),,null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Integer source@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5->13 [style = dashed, label="0"];
16->18 [style = bold, label=""];
4->1 [style = solid, label="source"];
11->3 [style = solid, label="defaultUnit"];
0->6 [style = bold, label=""];
8->15 [style = dashed, label="0"];
20->14 [style = dotted, label="true"];
3->6 [style = bold, label=""];
3->15 [style = bold, label=""];
1->18 [style = dashed, label="0"];
8->0 [style = solid, label="unitAnnotation"];
11->8 [style = solid, label="defaultUnit"];
3->16 [style = bold, label=""];
7->1 [style = solid, label="targetType"];
9->12 [style = solid, label="source"];
10->9 [style = dotted, label="true"];
10->7 [style = bold, label=""];
0->17 [style = dashed, label="0"];
7->12 [style = solid, label="targetType"];
7->3 [style = bold, label=""];
8->0 [style = bold, label=""];
6->1 [style = bold, label=""];
1->12 [style = dashed, label="0"];
15->17 [style = bold, label=""];
6->16 [style = dashed, label="0"];
15->17 [style = solid, label="unitAnnotation"];
10->13 [style = dotted, label="true"];
10->11 [style = dotted, label="true"];
3->8 [style = bold, label=""];
3->15 [style = dotted, label="true"];
2->4 [style = dotted, label="true"];
3->0 [style = dotted, label="true"];
5->3 [style = solid, label="defaultUnit"];
19->15 [style = solid, label="defaultUnit"];
5->8 [style = solid, label="defaultUnit"];
3->17 [style = dotted, label="true"];
20->19 [style = dotted, label="true"];
2->7 [style = bold, label=""];
20->7 [style = bold, label=""];
2->5 [style = dotted, label="true"];
7->18 [style = solid, label="targetType"];
3->8 [style = dotted, label="true"];
5->19 [style = dashed, label="0"];
14->18 [style = solid, label="source"];
17->16 [style = bold, label=""];
19->3 [style = solid, label="defaultUnit"];
6->12 [style = bold, label=""];
}
