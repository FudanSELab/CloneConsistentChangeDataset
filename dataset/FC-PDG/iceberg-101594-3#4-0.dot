digraph {
15 [style = filled, label = "testTables.loadTable(identifier)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "!Catalogs.hiveCatalog(shell.getHiveConf())@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "shell.executeStatement(\"CREATE EXTERNAL TABLE customers \" + \"STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \" + testTables.locationForCreateTableSQL(identifier) + \"TBLPROPERTIES ('\" + InputFormatConfig.TABLE_SCHEMA + \"'='\" + SchemaParser.toJson(HiveIcebergStorageHandlerTestUtils.CUSTOMER_SCHEMA) + \"', \" + \"'\" + InputFormatConfig.EXTERNAL_TABLE_PURGE + \"'='FALSE')\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "org.apache.hadoop.hive.metastore.api.Table hmsTable = shell.metastore().clientPool().run(null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "org.apache.hadoop.hive.metastore.api.Table hmsTable = shell.metastore().clientPool().run(null)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Catalogs.hiveCatalog(shell.getHiveConf())@@@11@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "org.apache.iceberg.Table icebergTable = testTables.loadTable(identifier)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertNull(hmsParams.get(InputFormatConfig.PARTITION_SPEC))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(1,fs.listStatus(hmsTableLocation).length)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "shell.executeStatement(\"CREATE EXTERNAL TABLE customers \" + \"STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \" + testTables.locationForCreateTableSQL(identifier) + \"TBLPROPERTIES ('\" + InputFormatConfig.TABLE_SCHEMA + \"'='\" + SchemaParser.toJson(HiveIcebergStorageHandlerTestUtils.CUSTOMER_SCHEMA) + \"')\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "shell.executeStatement(\"DROP TABLE customers\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Map<String,String> hmsParams = hmsTable.getParameters()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "AssertHelpers.assertThrows(\"should throw exception\",,\"Table does not exist\",null)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(6,hmsParams.size())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "Path hmsTableLocation = new Path(hmsTable.getSd().getLocation())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "FileSystem fs = Util.getFs(hmsTableLocation,shell.getHiveConf())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(PartitionSpec.unpartitioned(),icebergTable.spec())@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testCreateTableWithoutSpec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shell.executeStatement(\"DROP TABLE customers\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testDeleteBackingTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(1,fs.listStatus(new Path(hmsTableLocation,\"metadata\")).length)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testCreateTableWithoutSpec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "TableIdentifier identifier = TableIdentifier.of(\"default\",\"customers\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "IGNORED_PARAMS.forEach(null)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(5,hmsParams.size())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19->17 [style = solid, label="hmsTableLocation"];
8->7 [style = dotted, label="false"];
4->10 [style = solid, label="identifier"];
19->18 [style = bold, label=""];
4->1 [style = solid, label="identifier"];
13->24 [style = bold, label=""];
24->18 [style = dotted, label="false"];
24->17 [style = dotted, label="false"];
11->6 [style = bold, label=""];
4->13 [style = bold, label=""];
23->15 [style = bold, label=""];
6->0 [style = bold, label=""];
16->19 [style = bold, label=""];
3->4 [style = bold, label=""];
24->20 [style = dotted, label="false"];
4->13 [style = solid, label="identifier"];
8->7 [style = bold, label=""];
20->21 [style = bold, label=""];
1->13 [style = dashed, label="0"];
24->16 [style = bold, label=""];
5->2 [style = bold, label=""];
18->22 [style = bold, label=""];
4->15 [style = solid, label="identifier"];
10->5 [style = bold, label=""];
24->23 [style = dotted, label="true"];
12->4 [style = bold, label=""];
22->20 [style = bold, label=""];
19->21 [style = solid, label="hmsTableLocation"];
24->15 [style = dotted, label="true"];
0->8 [style = bold, label=""];
8->9 [style = bold, label=""];
24->22 [style = dotted, label="false"];
24->19 [style = dotted, label="false"];
4->1 [style = bold, label=""];
8->9 [style = dotted, label="true"];
24->16 [style = dotted, label="false"];
1->10 [style = bold, label=""];
21->17 [style = bold, label=""];
19->20 [style = solid, label="hmsTableLocation"];
2->11 [style = bold, label=""];
24->21 [style = dotted, label="false"];
14->4 [style = bold, label=""];
24->23 [style = bold, label=""];
}
