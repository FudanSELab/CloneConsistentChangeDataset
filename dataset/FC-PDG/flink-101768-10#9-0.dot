digraph {
5 [style = filled, label = "testGetExecutionPlan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String htmlEscaped = dumper2.getOptimizerPlanAsJSON(op)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "PlanJSONDumpGenerator dumper2 = new PlanJSONDumpGenerator()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "config.setString(JobManagerOptions.ADDRESS,mockJmAddress.getHostName())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertNotNull(op)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "InetSocketAddress mockJmAddress = new InetSocketAddress(mockAddress,12345)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "config.setInteger(JobManagerOptions.PORT,mockJmAddress.getPort())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "InetAddress mockAddress = InetAddress.getLocalHost()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "OptimizedPlan op = (OptimizedPlan)ClusterClient.getOptimizedPlan(optimizer,prg,-1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(-1,htmlEscaped.indexOf('\'))@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNotNull(prg.getPreviewPlan())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testGetExecutionPlan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "PackagedProgram prg = new PackagedProgram(,\"/dev/random\",\"/tmp\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Optimizer optimizer = new Optimizer(new DataStatistics(),new DefaultCostEstimator(),config)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNotNull(dumper.getOptimizerPlanAsJSON(op))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testGetExecutionPlan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "PlanJSONDumpGenerator dumper = new PlanJSONDumpGenerator()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "jobManagerSystem.actorOf(Props.create(),JobMaster.JOB_MANAGER_NAME)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "OptimizedPlan op = (OptimizedPlan)ClusterClient.getOptimizedPlan(optimizer,prg,1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Configuration config = new Configuration()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "dumper2.setEncodeForHTML(true)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
7->11 [style = bold, label=""];
6->10 [style = solid, label="optimizer"];
17->9 [style = solid, label="op"];
9->4 [style = bold, label=""];
14->15 [style = solid, label="mockAddress"];
16->19 [style = bold, label=""];
19->6 [style = bold, label=""];
10->9 [style = solid, label="op"];
12->7 [style = bold, label=""];
17->11 [style = solid, label="op"];
5->2 [style = bold, label=""];
0->17 [style = solid, label="prg"];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
17->12 [style = bold, label=""];
6->17 [style = solid, label="optimizer"];
20->16 [style = bold, label=""];
11->3 [style = bold, label=""];
10->12 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
6->10 [style = bold, label=""];
15->20 [style = bold, label=""];
0->10 [style = solid, label="prg"];
8->9 [style = bold, label=""];
10->11 [style = solid, label="op"];
10->17 [style = dashed, label="0"];
17->12 [style = solid, label="op"];
1->14 [style = bold, label=""];
14->15 [style = bold, label=""];
10->12 [style = solid, label="op"];
18->0 [style = bold, label=""];
20->6 [style = solid, label="config"];
13->0 [style = bold, label=""];
}
