digraph {
6 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\",shouldRead)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(greaterThanOrEqual(\"id\",80),SPEC,true).eval(FILE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testIntegerLtEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "boolean shouldRead = ManifestEvaluator.forRowFilter(lessThanOrEqual(\"id\",5),SPEC,true).eval(FILE)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThanOrEqual(\"id\",INT_MIN_VALUE - 1),SPEC,true).eval(FILE)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testIntegerLtEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(\"Should read: one possible id\",shouldRead)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThanOrEqual(\"id\",30),SPEC,true).eval(FILE)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(greaterThanOrEqual(\"id\",79),SPEC,true).eval(FILE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (29 < 30)\",shouldRead)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThanOrEqual(\"id\",79),SPEC,true).eval(FILE)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(\"Should read: many possible ids\",shouldRead)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testIntegerGtEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThanOrEqual(\"id\",INT_MIN_VALUE),SPEC,true).eval(FILE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThanOrEqual(\"id\",INT_MAX_VALUE),SPEC,true).eval(FILE)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (80 > 79)\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(lessThanOrEqual(\"id\",29),SPEC,true).eval(FILE)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(\"Should read: may possible ids\",shouldRead)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "shouldRead = ManifestEvaluator.forRowFilter(greaterThanOrEqual(\"id\",75),SPEC,true).eval(FILE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "boolean shouldRead = ManifestEvaluator.forRowFilter(greaterThanOrEqual(\"id\",85),SPEC,true).eval(FILE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "boolean shouldRead = ManifestEvaluator.forRowFilter(lessThanOrEqual(\"id\",INT_MIN_VALUE - 25),SPEC,true).eval(FILE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->13 [style = dashed, label="0"];
6->3 [style = bold, label=""];
1->4 [style = bold, label=""];
16->18 [style = bold, label=""];
5->14 [style = dashed, label="0"];
2->20 [style = dashed, label="0"];
18->20 [style = solid, label="shouldRead"];
4->17 [style = dashed, label="0"];
0->6 [style = solid, label="shouldRead"];
0->6 [style = bold, label=""];
3->18 [style = dashed, label="0"];
11->6 [style = bold, label=""];
12->11 [style = bold, label=""];
20->14 [style = bold, label=""];
0->11 [style = dashed, label="0"];
9->7 [style = bold, label=""];
3->2 [style = solid, label="shouldRead"];
4->7 [style = bold, label=""];
5->1 [style = solid, label="shouldRead"];
13->1 [style = bold, label=""];
1->9 [style = bold, label=""];
14->1 [style = bold, label=""];
2->13 [style = bold, label=""];
10->2 [style = solid, label="shouldRead"];
1->17 [style = bold, label=""];
8->0 [style = bold, label=""];
13->1 [style = solid, label="shouldRead"];
5->1 [style = bold, label=""];
18->20 [style = bold, label=""];
4->9 [style = dashed, label="0"];
6->16 [style = dashed, label="0"];
14->1 [style = solid, label="shouldRead"];
11->6 [style = solid, label="shouldRead"];
3->2 [style = bold, label=""];
0->21 [style = dashed, label="0"];
6->10 [style = bold, label=""];
9->7 [style = solid, label="shouldRead"];
17->15 [style = bold, label=""];
7->15 [style = dashed, label="0"];
21->16 [style = bold, label=""];
21->16 [style = solid, label="shouldRead"];
10->2 [style = bold, label=""];
3->10 [style = dashed, label="0"];
4->7 [style = solid, label="shouldRead"];
17->15 [style = solid, label="shouldRead"];
2->5 [style = bold, label=""];
19->21 [style = bold, label=""];
}
