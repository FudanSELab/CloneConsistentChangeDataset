digraph {
33 [style = filled, label = "task.setFork(true)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "mockProcLauncher.cmd(i(.equals(\"--add-exports\")@@@40@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "task.createClasspath().add(cp)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertNull(\"No classpath\",resCp)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "\"-classpath\".equals(mockProcLauncher.cmd(i()@@@32@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Path cp = new Path(project)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "resExports.add(mockProcLauncher.cmd(++i()@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertNotNull(mockProcLauncher.cmd)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Set<String> resExports = new TreeSet<>()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "mockProcLauncher.cmd(i(.startsWith(\"-XaddExports:\")@@@40@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "mp.setPath(modulesDir.getName())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "task.addTest(new JUnitTest(\"org.apache.tools.ant.taskdefs.optional.junit.TestTest\"))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "project.setBaseDir(workDir)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final File modulesDir = new File(workDir,\"modules\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "{delete(workDir)}@@@51@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final File workDir = new File(tmp,String.format(\"%s_testJMP%d\",getClass().getName(),System.currentTimeMillis() / 1000))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "resExports.add(mockProcLauncher.cmd(i()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "project.init()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "cp.setPath(junit.getAbsolutePath())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 1@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "resCp = mockProcLauncher.cmd(++i(@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "\"-modulepath\".equals(mockProcLauncher.cmd(i()@@@37@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "JUnitTask task = new JUnitTask()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = ".getName().equals(mockProcLauncher.cmd(i()@@@41@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "task.createModulepath().add(mp)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testJunitOnCpArguments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "mp.add(new Path(project,modulesDir.getName()))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final MockCommandLauncher mockProcLauncher = new MockCommandLauncher()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < mockProcLauncher.cmd.length@@@30@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "modulesDir.mkdirs()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Path mp = new Path(project)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "{delete(workDir)}@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "task.setProject(project)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String resCp = null@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "project.addReference(MagicNames.ANT_VM_LAUNCHER_REF_ID,mockProcLauncher)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final File workDir = new File(tmp,String.format(\"%s_testJCP%d\",getClass().getName(),System.currentTimeMillis() / 1000))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(\"No exports\",resExports.isEmpty())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String resMp = null@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "\"-modulepath\".equals(mockProcLauncher.cmd(i()@@@35@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "task.execute()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final File junit = LoaderUtils.getResourceSource(.getClassLoader(),\"junit/framework/Test.class\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "\"--module-path\".equals(mockProcLauncher.cmd(i()@@@37@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = ".getName().equals(mockProcLauncher.cmd(i()@@@43@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "i++@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testJunitOnCpArguments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "mp.add(new Path(project,junit.getAbsolutePath()))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final Project project = new Project()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testJunitOnMpArguments['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "mockProcLauncher.cmd(i(.startsWith(\"-XaddExports:\")@@@38@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "resMp = mockProcLauncher.cmd(++i(@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "task.createModulepath().add(mp)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(\"No exports\",resExports.isEmpty())@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final File tmp = new File(System.getProperty(\"java.io.tmpdir\"))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(\"Expected modulepath\",mp.toString(),resMp)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "task.setDir(workDir)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(\"Expected modulepath\",mp.toString(),resMp)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "workDir.mkdirs()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->53 [style = bold, label=""];
53->48 [style = solid, label="resMp"];
16->0 [style = bold, label=""];
40->49 [style = bold, label=""];
16->52 [style = bold, label=""];
1->24 [style = solid, label="i"];
42->45 [style = bold, label=""];
47->7 [style = bold, label=""];
15->25 [style = bold, label=""];
12->8 [style = dotted, label="true"];
12->8 [style = solid, label="i"];
42->9 [style = bold, label=""];
4->5 [style = dotted, label="false"];
49->48 [style = bold, label=""];
6->51 [style = dashed, label="0"];
23->49 [style = solid, label="resCp"];
28->47 [style = solid, label="project"];
35->56 [style = solid, label="i"];
8->40 [style = bold, label=""];
8->24 [style = solid, label="i"];
12->35 [style = dotted, label="true"];
21->38 [style = bold, label=""];
5->24 [style = dotted, label="true"];
52->47 [style = bold, label=""];
8->35 [style = solid, label="i"];
45->43 [style = bold, label=""];
24->43 [style = dashed, label="0"];
1->2 [style = solid, label="i"];
51->25 [style = solid, label="workDir"];
43->8 [style = bold, label=""];
41->51 [style = solid, label="tmp"];
27->17 [style = bold, label=""];
1->12 [style = bold, label=""];
35->8 [style = bold, label=""];
14->46 [style = bold, label=""];
14->9 [style = bold, label=""];
9->53 [style = dotted, label="true"];
45->43 [style = dotted, label="true"];
8->4 [style = solid, label="i"];
9->24 [style = bold, label=""];
8->2 [style = solid, label="i"];
28->16 [style = solid, label="project"];
12->35 [style = solid, label="i"];
0->3 [style = bold, label=""];
40->49 [style = dashed, label="0"];
12->11 [style = bold, label=""];
23->18 [style = solid, label="resMp"];
35->14 [style = solid, label="i"];
30->34 [style = bold, label=""];
12->54 [style = solid, label="i"];
41->6 [style = bold, label=""];
12->35 [style = bold, label=""];
9->8 [style = bold, label=""];
22->23 [style = bold, label=""];
39->22 [style = bold, label=""];
53->35 [style = bold, label=""];
5->2 [style = dotted, label="false"];
29->27 [style = bold, label=""];
14->9 [style = dotted, label="false"];
12->14 [style = solid, label="i"];
3->7 [style = bold, label=""];
6->20 [style = solid, label="workDir"];
22->40 [style = solid, label="resCp"];
5->45 [style = dashed, label="0"];
1->12 [style = solid, label="i"];
48->55 [style = bold, label=""];
8->14 [style = dotted, label="true"];
44->41 [style = bold, label=""];
31->41 [style = bold, label=""];
23->10 [style = bold, label=""];
42->45 [style = dotted, label="false"];
45->2 [style = dotted, label="false"];
14->8 [style = bold, label=""];
19->34 [style = solid, label="cp"];
24->8 [style = bold, label=""];
35->8 [style = solid, label="i"];
10->1 [style = bold, label=""];
50->41 [style = bold, label=""];
9->18 [style = solid, label="resMp"];
35->14 [style = dotted, label="true"];
4->9 [style = bold, label=""];
24->54 [style = dotted, label="false"];
24->56 [style = bold, label=""];
54->35 [style = bold, label=""];
54->40 [style = bold, label=""];
20->13 [style = bold, label=""];
16->7 [style = solid, label="mp"];
8->35 [style = dotted, label="true"];
35->42 [style = bold, label=""];
18->26 [style = bold, label=""];
51->20 [style = solid, label="workDir"];
38->16 [style = bold, label=""];
6->25 [style = solid, label="workDir"];
41->6 [style = solid, label="tmp"];
35->42 [style = dotted, label="false"];
8->14 [style = bold, label=""];
1->42 [style = solid, label="i"];
28->21 [style = solid, label="project"];
1->4 [style = solid, label="i"];
51->17 [style = solid, label="workDir"];
45->2 [style = bold, label=""];
35->14 [style = bold, label=""];
1->35 [style = solid, label="i"];
36->39 [style = bold, label=""];
38->19 [style = bold, label=""];
56->35 [style = bold, label=""];
6->37 [style = bold, label=""];
51->37 [style = bold, label=""];
35->54 [style = solid, label="i"];
12->8 [style = bold, label=""];
51->55 [style = solid, label="workDir"];
5->24 [style = bold, label=""];
16->3 [style = solid, label="mp"];
34->16 [style = bold, label=""];
46->35 [style = bold, label=""];
46->49 [style = solid, label="resCp"];
6->26 [style = solid, label="workDir"];
8->12 [style = solid, label="i"];
4->5 [style = bold, label=""];
2->11 [style = bold, label=""];
8->12 [style = bold, label=""];
7->36 [style = bold, label=""];
8->42 [style = solid, label="i"];
28->52 [style = solid, label="project"];
9->24 [style = dotted, label="false"];
12->9 [style = solid, label="i"];
28->19 [style = solid, label="project"];
28->15 [style = bold, label=""];
14->40 [style = solid, label="resCp"];
24->56 [style = dotted, label="true"];
37->20 [style = bold, label=""];
25->32 [style = bold, label=""];
6->17 [style = solid, label="workDir"];
40->18 [style = bold, label=""];
1->8 [style = solid, label="i"];
10->48 [style = solid, label="resMp"];
17->33 [style = bold, label=""];
11->40 [style = bold, label=""];
35->4 [style = bold, label=""];
24->54 [style = bold, label=""];
32->29 [style = bold, label=""];
5->2 [style = bold, label=""];
35->4 [style = dotted, label="false"];
14->46 [style = dotted, label="true"];
41->51 [style = bold, label=""];
42->9 [style = dotted, label="true"];
35->9 [style = solid, label="i"];
4->42 [style = dashed, label="0"];
12->56 [style = solid, label="i"];
4->9 [style = dotted, label="true"];
33->21 [style = bold, label=""];
32->29 [style = solid, label="mockProcLauncher"];
2->8 [style = bold, label=""];
13->28 [style = bold, label=""];
19->30 [style = bold, label=""];
}
