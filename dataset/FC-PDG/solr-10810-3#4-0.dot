digraph {
24 [style = filled, label = "Assert.assertEquals(10L,result)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(10D,result)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Assert.assertEquals(0L,result)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "values.put(\"d\",123456789123456789L)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "values.clear()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "addManyFieldsWithValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Assert.assertEquals(10.1D,result)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(10.4D,result)@@@28@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "values.put(\"d\",4)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "subManyFieldsWithSubsubs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(10.4D,result)@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "values.put(\"c\",3.1)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "values.put(\"b\",2.1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "values.put(\"d\",4.1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "addManyFieldsWithValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "values.clear()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(0L,result)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "values.put(\"b\",2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "values.put(\"a\",1.1)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "values.put(\"a\",123456789123456789L)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "values.put(\"c\",3)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "values.put(\"b\",123456789123456789L)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "values.clear()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(a,b,c,d)\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"sub(a,b,sub(c,d))\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31->37 [style = bold, label=""];
30->38 [style = bold, label=""];
12->34 [style = solid, label="result"];
8->31 [style = bold, label=""];
10->17 [style = solid, label="result"];
9->2 [style = bold, label=""];
6->21 [style = bold, label=""];
37->30 [style = bold, label=""];
3->7 [style = solid, label="result"];
20->31 [style = dashed, label="0"];
33->2 [style = bold, label=""];
7->35 [style = bold, label=""];
5->26 [style = bold, label=""];
38->12 [style = bold, label=""];
28->9 [style = bold, label=""];
12->34 [style = bold, label=""];
10->17 [style = bold, label=""];
12->16 [style = bold, label=""];
1->32 [style = dashed, label="0"];
36->33 [style = bold, label=""];
26->13 [style = bold, label=""];
9->33 [style = dashed, label="0"];
15->38 [style = dashed, label="0"];
20->18 [style = bold, label=""];
16->34 [style = dashed, label="0"];
29->27 [style = bold, label=""];
7->24 [style = bold, label=""];
13->19 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
12->16 [style = solid, label="result"];
8->20 [style = bold, label=""];
17->14 [style = solid, label="result"];
3->7 [style = bold, label=""];
16->1 [style = bold, label=""];
21->22 [style = bold, label=""];
11->10 [style = bold, label=""];
17->14 [style = bold, label=""];
3->24 [style = solid, label="result"];
10->14 [style = solid, label="result"];
25->30 [style = dashed, label="0"];
24->35 [style = dashed, label="0"];
35->8 [style = bold, label=""];
18->25 [style = bold, label=""];
12->1 [style = solid, label="result"];
25->15 [style = bold, label=""];
3->35 [style = solid, label="result"];
17->4 [style = solid, label="result"];
12->32 [style = solid, label="result"];
18->37 [style = dashed, label="0"];
34->32 [style = bold, label=""];
7->29 [style = dashed, label="0"];
15->12 [style = bold, label=""];
24->8 [style = bold, label=""];
23->9 [style = bold, label=""];
3->29 [style = solid, label="result"];
19->3 [style = bold, label=""];
27->8 [style = bold, label=""];
22->11 [style = bold, label=""];
3->29 [style = bold, label=""];
15->12 [style = solid, label="result"];
15->16 [style = solid, label="result"];
0->5 [style = bold, label=""];
14->4 [style = bold, label=""];
}
