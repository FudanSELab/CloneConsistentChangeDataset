digraph {
25 [style = filled, label = "Dataset<Row> df2 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(2,\"b\")),)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Table filesTable = loadTable(tableIdentifier,\"all_data_files\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "table.newDelete().deleteFromRowFilter(Expressions.equal(\"id\",1)).commit()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"entries\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "file.put(0,FileContent.DATA.id())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testAllEntriesTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "i += 1@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(\"Actual results should have two rows\",2,actual.size())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "(Integer)record.get(\"status\") < 2@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertEquals(\"Files table should have two rows\",2,expected.size())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "actual.sort(Comparator.comparing(null))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"all_data_files\")).orderBy(\"file_path\").collectAsList()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "TestHelpers.assertEqualsSafe(filesTable.schema().asStruct(),expected.get(i),actual.get(i))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int i = 0@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "df1.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "df2.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "table.refresh()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "i < expected.size()@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testAllDataFilesTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "i < expected.size()@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"all_entries\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i += 1@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"files_test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int i = 0@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.unpartitioned())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "df1.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"entries_test\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(\"Actual results should have 3 rows\",3,actual.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.builderFor(SCHEMA).identity(\"id\").build())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "GenericData.Record file = (GenericData.Record)record.get(\"data_file\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "expected.add(file)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Dataset<Row> df1 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"a\")),)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Dataset<Row> df1 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"a\")),)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(\"Entries table should have 3 rows\",3,expected.size())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testAllEntriesTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12->38 [style = solid, label="i"];
3->29 [style = bold, label=""];
37->7 [style = bold, label=""];
3->10 [style = bold, label=""];
20->27 [style = bold, label=""];
12->30 [style = solid, label="i"];
6->18 [style = bold, label=""];
39->33 [style = bold, label=""];
27->33 [style = bold, label=""];
15->1 [style = bold, label=""];
28->12 [style = bold, label=""];
34->28 [style = bold, label=""];
39->20 [style = bold, label=""];
23->30 [style = solid, label="i"];
32->5 [style = bold, label=""];
27->39 [style = dotted, label="true"];
3->29 [style = dashed, label="0"];
0->36 [style = dashed, label="0"];
9->16 [style = bold, label=""];
20->5 [style = bold, label=""];
36->22 [style = solid, label="tableIdentifier"];
6->12 [style = solid, label="i"];
38->23 [style = dotted, label="true"];
36->31 [style = solid, label="tableIdentifier"];
39->27 [style = bold, label=""];
31->22 [style = bold, label=""];
36->37 [style = solid, label="tableIdentifier"];
33->34 [style = bold, label=""];
11->18 [style = bold, label=""];
27->24 [style = dotted, label="true"];
36->1 [style = solid, label="tableIdentifier"];
38->30 [style = dotted, label="true"];
0->14 [style = solid, label="tableIdentifier"];
13->31 [style = dashed, label="0"];
0->19 [style = solid, label="tableIdentifier"];
0->13 [style = bold, label=""];
27->26 [style = dotted, label="true"];
27->20 [style = bold, label=""];
12->38 [style = bold, label=""];
18->12 [style = dotted, label="true"];
11->12 [style = solid, label="i"];
24->39 [style = solid, label="file"];
25->1 [style = bold, label=""];
7->25 [style = dashed, label="0"];
2->3 [style = bold, label=""];
38->30 [style = bold, label=""];
6->18 [style = solid, label="i"];
18->6 [style = dotted, label="true"];
27->24 [style = bold, label=""];
29->32 [style = bold, label=""];
36->31 [style = bold, label=""];
0->13 [style = solid, label="tableIdentifier"];
30->23 [style = bold, label=""];
5->20 [style = bold, label=""];
14->8 [style = bold, label=""];
7->25 [style = bold, label=""];
35->36 [style = bold, label=""];
14->22 [style = dashed, label="0"];
11->18 [style = solid, label="i"];
1->19 [style = bold, label=""];
17->11 [style = bold, label=""];
23->38 [style = bold, label=""];
0->15 [style = solid, label="tableIdentifier"];
8->7 [style = bold, label=""];
7->15 [style = bold, label=""];
16->17 [style = bold, label=""];
19->2 [style = bold, label=""];
23->38 [style = solid, label="i"];
36->2 [style = solid, label="tableIdentifier"];
20->9 [style = bold, label=""];
18->12 [style = bold, label=""];
17->34 [style = dashed, label="0"];
13->14 [style = bold, label=""];
21->0 [style = bold, label=""];
24->26 [style = bold, label=""];
10->5 [style = bold, label=""];
4->0 [style = bold, label=""];
12->6 [style = bold, label=""];
26->39 [style = bold, label=""];
22->37 [style = bold, label=""];
12->30 [style = dashed, label="0"];
}
