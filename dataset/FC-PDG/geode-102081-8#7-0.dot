digraph {
10 [style = filled, label = "verify(arm._getOwner(),never()).invokeInvalidateCallbacks(any(),any(),anyBoolean())@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "verify(arm._getOwner(),times(1)).basicInvalidatePart2(any(),any(),anyBoolean(),anyBoolean())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(arm._getOwner(),times(1)).invokeInvalidateCallbacks(any(),any(),anyBoolean())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{AbstractRegionMap.FORCE_INVALIDATE_EVENT = false}@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "verify(arm._getOwner(),times(1)).basicInvalidatePart2(any(),any(),anyBoolean(),anyBoolean())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertFalse(arm.invalidate(event,true,true,false))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "invalidateForceNewEntryOfAlreadyInvalidEntryReturnsFalseWithForce['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "verify(arm._getOwner(),never()).invokeInvalidateCallbacks(any(),any(),anyBoolean())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verify(arm._getOwner(),times(1)).basicInvalidatePart2(any(),any(),anyBoolean(),anyBoolean())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(arm._getOwner().isInitialized()).thenReturn(true)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "invalidateForceNewEntryOfAlreadyInvalidEntryReturnsFalseWithForce['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "invalidateForceNewEntryOfAlreadyInvalidEntryReturnsFalse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "TestableAbstractRegionMap arm = new TestableAbstractRegionMap()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(arm.invalidate(event,true,true,false))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "EntryEventImpl event = createEventForInvalidate(arm._getOwner())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "AbstractRegionMap.FORCE_INVALIDATE_EVENT = true@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(arm._getOwner().isInitialized()).thenReturn(false)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->10 [style = bold, label=""];
6->3 [style = bold, label=""];
1->4 [style = bold, label=""];
9->10 [style = dashed, label="0"];
9->11 [style = bold, label=""];
12->8 [style = solid, label="event"];
5->9 [style = bold, label=""];
7->12 [style = bold, label=""];
15->16 [style = bold, label=""];
14->7 [style = bold, label=""];
14->0 [style = solid, label="event"];
8->0 [style = bold, label=""];
12->2 [style = bold, label=""];
12->10 [style = solid, label="event"];
10->5 [style = bold, label=""];
13->3 [style = bold, label=""];
3->7 [style = bold, label=""];
0->4 [style = bold, label=""];
12->8 [style = bold, label=""];
0->1 [style = bold, label=""];
16->14 [style = bold, label=""];
2->8 [style = bold, label=""];
14->7 [style = solid, label="event"];
}
