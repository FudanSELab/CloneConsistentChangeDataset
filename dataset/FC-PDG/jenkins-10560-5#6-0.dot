digraph {
3 [style = filled, label = "final String displayName = \"displayName\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(projectName,project.getDisplayName())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testRenameJobWithDisplayName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "AbstractProject newProject = Jenkins.getInstance().copy((AbstractProject)project,newProjectName)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(projectName)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(displayName,project.getDisplayName())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(displayName,project.getDisplayName())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "project.renameTo(newProjectName)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "project.setDisplayName(displayName)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(displayName,project.getDisplayName())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(newProjectName,newProject.getName())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(newProjectName,newProject.getDisplayName())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final String newProjectName = \"newProjectName\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testRenameJobWithDisplayName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(displayName,project.getDisplayName())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "final String projectName = \"projectName\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testCopyJobWithNoDisplayName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
5->8 [style = bold, label=""];
5->0 [style = solid, label="newProjectName"];
9->0 [style = bold, label=""];
15->7 [style = bold, label=""];
3->6 [style = solid, label="displayName"];
0->2 [style = bold, label=""];
7->13 [style = solid, label="projectName"];
3->2 [style = solid, label="displayName"];
0->11 [style = bold, label=""];
1->9 [style = dashed, label="0"];
8->6 [style = bold, label=""];
12->16 [style = bold, label=""];
1->0 [style = bold, label=""];
0->12 [style = dashed, label="0"];
10->7 [style = bold, label=""];
4->7 [style = bold, label=""];
6->1 [style = bold, label=""];
7->5 [style = bold, label=""];
3->11 [style = solid, label="displayName"];
6->13 [style = dashed, label="0"];
3->8 [style = bold, label=""];
5->16 [style = solid, label="newProjectName"];
14->12 [style = bold, label=""];
2->16 [style = dashed, label="0"];
3->9 [style = solid, label="displayName"];
2->11 [style = dashed, label="0"];
8->14 [style = solid, label="project"];
6->9 [style = bold, label=""];
3->1 [style = solid, label="displayName"];
5->14 [style = solid, label="newProjectName"];
7->8 [style = solid, label="projectName"];
13->14 [style = bold, label=""];
8->13 [style = bold, label=""];
5->12 [style = solid, label="newProjectName"];
}
