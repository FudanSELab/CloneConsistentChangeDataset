digraph {
18 [style = filled, label = "cdl.await()@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "verify(o).onComplete()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Subscriber<List<Object>> s = new DefaultSubscriber<List<Object>>(){@Override public void onNext(List<Object> t){subscriber.onNext(t)}@Override public void onError(Throwable e){subscriber.onError(e)cdl.countDown()}@Override public void onComplete(){subscriber.onComplete()cdl.countDown()}}@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "List<Object> values = new ArrayList<>()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "List<Flowable<Integer>> sources = new ArrayList<Flowable<Integer>>()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "List<Observable<Integer>> sources = new ArrayList<Observable<Integer>>()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "oneToNSourcesScheduled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "j < i@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Observable<List<Object>> result = Observable.combineLatest(sources,func)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "verify(o).onNext(values)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "oneToNSourcesScheduled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "values.add(j)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<Object> values = new ArrayList<Object>()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Observer<List<Object>> observer = new DefaultObserver<List<Object>>(){@Override public void onNext(List<Object> t){o.onNext(t)}@Override public void onError(Throwable e){o.onError(e)cdl.countDown()}@Override public void onComplete(){o.onComplete()cdl.countDown()}}@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final Subscriber<List<Object>> subscriber = TestHelper.mockSubscriber()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Flowable<List<Object>> result = Flowable.combineLatest(sources,func)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "oneToNSourcesScheduled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "verify(subscriber,never()).onError(any())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int j = 0@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sources.add(Flowable.just(j).subscribeOn(Schedulers.io()))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 1@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "System.out.println(\"test1ToNSourcesScheduled: \" + i + \" sources\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Function<Object((,List<Object>> func = new Function<Object((,List<Object>>(){@Override public List<Object> apply(Object(( args){return Arrays.asList(args)}}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final Observer<List<Object>> o = TestHelper.mockObserver()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<Flowable<Integer>> sources = new ArrayList<>()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "int n = 10@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "verify(o,never()).onError(any())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final CountDownLatch cdl = new CountDownLatch(1)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "j++@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i <= n@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "verify(subscriber).onNext(values)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "sources.add(Observable.just(j).subscribeOn(Schedulers.io()))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "verify(subscriber).onComplete()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "result.subscribe(observer)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "result.subscribe(s)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->27 [style = solid, label="func"];
8->28 [style = dotted, label="true"];
32->22 [style = bold, label=""];
3->22 [style = solid, label="i"];
3->8 [style = solid, label="i"];
8->16 [style = dotted, label="true"];
1->20 [style = bold, label=""];
8->6 [style = bold, label=""];
29->34 [style = bold, label=""];
16->17 [style = solid, label="s"];
13->35 [style = dotted, label="true"];
7->14 [style = bold, label=""];
22->8 [style = bold, label=""];
0->21 [style = solid, label="values"];
0->25 [style = dashed, label="0"];
7->35 [style = dashed, label="0"];
21->1 [style = bold, label=""];
2->15 [style = bold, label=""];
15->33 [style = dashed, label="0"];
8->22 [style = dotted, label="true"];
34->32 [style = bold, label=""];
8->0 [style = dotted, label="true"];
8->20 [style = dotted, label="true"];
20->32 [style = dashed, label="0"];
27->33 [style = bold, label=""];
16->28 [style = dashed, label="0"];
21->29 [style = dashed, label="0"];
10->24 [style = dashed, label="0"];
8->31 [style = dotted, label="true"];
4->3 [style = bold, label=""];
12->28 [style = bold, label=""];
1->34 [style = dashed, label="0"];
8->17 [style = dotted, label="true"];
26->27 [style = solid, label="sources"];
2->27 [style = dashed, label="0"];
13->19 [style = dotted, label="true"];
13->7 [style = dotted, label="true"];
16->17 [style = bold, label=""];
3->13 [style = solid, label="i"];
8->34 [style = dotted, label="true"];
26->0 [style = bold, label=""];
8->12 [style = dotted, label="true"];
19->13 [style = bold, label=""];
8->33 [style = dotted, label="true"];
10->0 [style = bold, label=""];
19->13 [style = solid, label="j"];
9->13 [style = solid, label="j"];
4->2 [style = solid, label="func"];
8->18 [style = dotted, label="true"];
15->12 [style = bold, label=""];
8->29 [style = dotted, label="true"];
28->31 [style = solid, label="observer"];
8->25 [style = dotted, label="true"];
9->14 [style = solid, label="j"];
6->26 [style = bold, label=""];
23->5 [style = bold, label=""];
8->21 [style = dotted, label="true"];
24->2 [style = solid, label="sources"];
8->2 [style = dotted, label="true"];
28->31 [style = bold, label=""];
22->6 [style = solid, label="i"];
25->9 [style = bold, label=""];
19->14 [style = solid, label="j"];
8->15 [style = dotted, label="true"];
14->19 [style = bold, label=""];
6->24 [style = bold, label=""];
0->29 [style = solid, label="values"];
33->12 [style = bold, label=""];
35->14 [style = bold, label=""];
8->24 [style = dotted, label="true"];
3->6 [style = solid, label="i"];
10->2 [style = solid, label="sources"];
11->5 [style = bold, label=""];
13->27 [style = bold, label=""];
8->6 [style = dotted, label="true"];
30->5 [style = bold, label=""];
24->25 [style = bold, label=""];
3->8 [style = bold, label=""];
6->10 [style = bold, label=""];
5->4 [style = bold, label=""];
25->21 [style = solid, label="values"];
8->13 [style = dotted, label="true"];
8->9 [style = dotted, label="true"];
18->21 [style = bold, label=""];
13->14 [style = dotted, label="true"];
13->2 [style = bold, label=""];
8->26 [style = dotted, label="true"];
0->9 [style = bold, label=""];
22->13 [style = solid, label="i"];
31->18 [style = bold, label=""];
12->16 [style = bold, label=""];
8->10 [style = dotted, label="true"];
8->32 [style = dotted, label="true"];
17->31 [style = dashed, label="0"];
20->22 [style = bold, label=""];
8->1 [style = dotted, label="true"];
18->29 [style = bold, label=""];
10->26 [style = dashed, label="0"];
9->19 [style = solid, label="j"];
13->7 [style = bold, label=""];
5->8 [style = solid, label="n"];
8->27 [style = dotted, label="true"];
13->35 [style = bold, label=""];
22->8 [style = solid, label="i"];
17->18 [style = bold, label=""];
9->13 [style = bold, label=""];
}
