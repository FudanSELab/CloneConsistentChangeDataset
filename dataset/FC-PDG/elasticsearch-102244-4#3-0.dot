digraph {
7 [style = filled, label = "allocationService.reroute(clusterState,\"reroute\").routingTable()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "clusterState = ClusterState.builder(clusterState).metaData(MetaData.builder(clusterState.metaData()).put(IndexMetaData.builder(indexMetaData).settings(Settings.builder().put(indexMetaData.getSettings()).put(INDEX_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),randomFrom(EnableAllocationDecider.Allocation.ALL,EnableAllocationDecider.Allocation.NEW_PRIMARIES,EnableAllocationDecider.Allocation.PRIMARIES).name()))).build()).build()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertThat(plugin.rebalanceAttempts,equalTo(0))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(plugin.rebalanceAttempts,greaterThan(0))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RebalanceShortCircuitPlugin plugin = new RebalanceShortCircuitPlugin()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "AllocationService allocationService = createAllocationService(Settings.builder().put(CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),EnableAllocationDecider.Rebalance.NONE.name()),plugin)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testRebalancingAttemptedIfDisabledButOverridenOnSpecificIndices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final IndexMetaData indexMetaData = randomFrom(clusterState.metaData().indices().values().toArray())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "clusterState = ClusterState.builder(clusterState).metaData(MetaData.builder(clusterState.metaData()).put(IndexMetaData.builder(indexMetaData).settings(Settings.builder().put(indexMetaData.getSettings()).put(INDEX_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),EnableAllocationDecider.Rebalance.NONE.name()))).build()).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "clusterState = ClusterState.builder(clusterState).metaData(MetaData.builder(clusterState.metaData()).put(IndexMetaData.builder(indexMetaData).settings(Settings.builder().put(indexMetaData.getSettings()).put(INDEX_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),randomFrom(EnableAllocationDecider.Rebalance.ALL,EnableAllocationDecider.Rebalance.PRIMARIES,EnableAllocationDecider.Rebalance.REPLICAS).name()))).build()).build()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "testRebalancingSkippedIfDisabledIncludingOnSpecificIndices['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testRebalancingAttemptedIfDisabledButOverridenOnSpecificIndices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "ClusterState clusterState = createClusterStateWithAllShardsAssigned()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->1 [style = bold, label=""];
5->7 [style = bold, label=""];
3->6 [style = bold, label=""];
11->6 [style = bold, label=""];
0->8 [style = dashed, label="0"];
2->12 [style = dashed, label="0"];
1->0 [style = bold, label=""];
1->8 [style = bold, label=""];
8->4 [style = bold, label=""];
1->10 [style = bold, label=""];
0->4 [style = bold, label=""];
7->12 [style = bold, label=""];
4->5 [style = bold, label=""];
7->2 [style = bold, label=""];
0->10 [style = dashed, label="0"];
9->6 [style = bold, label=""];
4->5 [style = solid, label="plugin"];
10->4 [style = bold, label=""];
}
