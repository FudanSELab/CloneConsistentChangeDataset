digraph {
15 [style = filled, label = "TopicPartition myTopicPartition0 = new TopicPartition(\"my_topic\",0)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "TopicPartition myTopicPartition2 = new TopicPartition(\"my_topic\",2)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(expectedMemberDescriptions,groupDescription.members())@@@41@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(\"group-0\",groupDescription.groupId())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.NONE,\"\",ConsumerProtocol.PROTOCOL_TYPE,\"\",asList(memberOne,memberTwo),Collections.emptySet()))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.COORDINATOR_NOT_AVAILABLE,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "topicPartitions.add(1,myTopicPartition1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "byte(( memberAssignmentBytes = new byte((((@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final ConsumerGroupDescription groupDescription = result.describedGroups().get(\"group-0\").get()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "env.kafkaClient().setNodeApiVersions(NodeApiVersions.create())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.NOT_COORDINATOR,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testDescribeNonConsumerGroups['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.COORDINATOR_NOT_AVAILABLE,Node.noNode()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final List<TopicPartition> topicPartitions = new ArrayList<>()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TestUtils.assertFutureError(result.describedGroups().get(\"group-0\"),)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "data = new DescribeGroupsResponseData()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "TopicPartition myTopicPartition1 = new TopicPartition(\"my_topic\",1)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "expectedMemberDescriptions.add(convertToMemberDescriptions(memberOne,new MemberAssignment(new HashSet<>(topicPartitions))))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TestUtils.assertFutureError(result.describedGroups().get(GROUP_ID),)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "List<MemberDescription> expectedMemberDescriptions = new ArrayList<>()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testDescribeNonConsumerGroups['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "env.kafkaClient().prepareResponse(new DescribeGroupsResponse(data))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final DescribeConsumerGroupsResult result = env.adminClient().describeConsumerGroups(singletonList(\"group-0\"))@@@36@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "DescribedGroupMember memberOne = DescribeGroupsResponse.groupMember(\"0\",\"instance1\",\"clientId0\",\"clientHost\",memberAssignmentBytes,null)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(1,result.describedGroups().size())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testDescribeConsumerGroups['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "topicPartitions.add(2,myTopicPartition2)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "final ByteBuffer memberAssignment = ConsumerProtocol.serializeAssignment(new ConsumerPartitionAssignor.Assignment(topicPartitions))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DescribeGroupsResponseData data = new DescribeGroupsResponseData()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "DescribedGroupMember memberTwo = DescribeGroupsResponse.groupMember(\"1\",\"instance2\",\"clientId1\",\"clientHost\",memberAssignmentBytes,null)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.COORDINATOR_LOAD_IN_PROGRESS,Node.noNode()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final DescribeConsumerGroupsResult result = env.adminClient().describeConsumerGroups(singletonList(GROUP_ID))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "memberAssignment.get(memberAssignmentBytes)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "data = new DescribeGroupsResponseData()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "data = new DescribeGroupsResponseData()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.NONE,\"\",\"non-consumer\",\"\",asList(),Collections.emptySet()))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertEquals(2,groupDescription.members().size())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "topicPartitions.add(0,myTopicPartition0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(\"group-0\",Errors.COORDINATOR_LOAD_IN_PROGRESS,\"\",\"\",\"\",Collections.emptyList(),Collections.emptySet()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "expectedMemberDescriptions.add(convertToMemberDescriptions(memberTwo,new MemberAssignment(new HashSet<>(topicPartitions))))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "data.groups().add(DescribeGroupsResponse.groupMetadata(GROUP_ID,Errors.NONE,\"\",\"non-consumer\",\"\",asList(),Collections.emptySet()))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30->43 [style = solid, label="myTopicPartition2"];
6->3 [style = bold, label=""];
35->31 [style = bold, label=""];
1->4 [style = bold, label=""];
22->33 [style = bold, label=""];
19->18 [style = solid, label="memberTwo"];
15->45 [style = bold, label=""];
37->24 [style = bold, label=""];
28->40 [style = bold, label=""];
23->5 [style = bold, label=""];
18->23 [style = bold, label=""];
3->1 [style = bold, label=""];
41->19 [style = bold, label=""];
15->36 [style = solid, label="myTopicPartition0"];
40->23 [style = solid, label="data"];
25->36 [style = bold, label=""];
11->6 [style = bold, label=""];
43->42 [style = bold, label=""];
16->26 [style = bold, label=""];
35->21 [style = solid, label="data"];
40->15 [style = bold, label=""];
44->27 [style = solid, label="expectedMemberDescriptions"];
39->3 [style = bold, label=""];
30->25 [style = bold, label=""];
13->39 [style = bold, label=""];
31->21 [style = bold, label=""];
12->16 [style = bold, label=""];
4->2 [style = bold, label=""];
20->6 [style = bold, label=""];
29->14 [style = solid, label="memberAssignmentBytes"];
34->12 [style = bold, label=""];
45->30 [style = bold, label=""];
32->2 [style = bold, label=""];
42->29 [style = bold, label=""];
21->28 [style = bold, label=""];
5->34 [style = bold, label=""];
19->44 [style = bold, label=""];
4->32 [style = dashed, label="0"];
1->2 [style = solid, label="data"];
26->27 [style = bold, label=""];
25->33 [style = solid, label="topicPartitions"];
45->38 [style = solid, label="myTopicPartition1"];
25->22 [style = solid, label="topicPartitions"];
5->0 [style = bold, label=""];
33->18 [style = bold, label=""];
29->41 [style = solid, label="memberAssignmentBytes"];
29->19 [style = solid, label="memberAssignmentBytes"];
6->13 [style = bold, label=""];
7->6 [style = bold, label=""];
24->17 [style = bold, label=""];
29->14 [style = bold, label=""];
8->9 [style = bold, label=""];
25->42 [style = solid, label="topicPartitions"];
41->18 [style = solid, label="memberOne"];
1->32 [style = bold, label=""];
5->8 [style = dashed, label="0"];
0->34 [style = dashed, label="0"];
10->2 [style = bold, label=""];
37->17 [style = solid, label="data"];
44->22 [style = bold, label=""];
41->22 [style = solid, label="memberOne"];
36->38 [style = bold, label=""];
0->9 [style = dashed, label="0"];
2->37 [style = bold, label=""];
4->10 [style = dashed, label="0"];
1->10 [style = bold, label=""];
14->41 [style = bold, label=""];
38->43 [style = bold, label=""];
2->8 [style = bold, label=""];
2->5 [style = bold, label=""];
17->35 [style = bold, label=""];
19->33 [style = solid, label="memberTwo"];
}
