digraph {
15 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertEquals(d1,d2)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "DefaultHeatMapDataset d2 = (DefaultHeatMapDataset)TestUtils.serialised(d1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(d1.equals(d2))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "d1.setZValue(0,1,Double.NEGATIVE_INFINITY)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "d1.setZValue(0,2,Double.POSITIVE_INFINITY)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "d1.setZValue(0,0,10.0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "d1.setZValue(0,0,11.0)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DefaultHeatMapDataset d2 = CloneUtils.clone(d1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertTrue(d1.equals(d2))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DefaultHeatMapDataset d2 = (DefaultHeatMapDataset)d1.clone()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "d2.setZValue(0,0,11.0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "d1.setZValue(1,0,Double.NaN)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2,3,-1.0,4.0,-2.0,5.0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(d1.equals(d2))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(d1 != d2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
4->18 [style = dashed, label="0"];
14->11 [style = solid, label="d2"];
14->1 [style = solid, label="d2"];
17->6 [style = bold, label=""];
11->16 [style = dashed, label="0"];
9->4 [style = bold, label=""];
14->13 [style = solid, label="d2"];
3->6 [style = bold, label=""];
15->6 [style = bold, label=""];
4->13 [style = solid, label="d2"];
6->16 [style = solid, label="d1"];
12->9 [style = bold, label=""];
4->11 [style = solid, label="d2"];
4->10 [style = solid, label="d2"];
6->18 [style = solid, label="d1"];
2->12 [style = bold, label=""];
8->1 [style = bold, label=""];
0->10 [style = bold, label=""];
11->0 [style = bold, label=""];
9->18 [style = bold, label=""];
10->8 [style = bold, label=""];
6->14 [style = solid, label="d1"];
7->2 [style = bold, label=""];
5->13 [style = bold, label=""];
9->14 [style = bold, label=""];
4->14 [style = dashed, label="0"];
6->7 [style = bold, label=""];
4->11 [style = bold, label=""];
4->1 [style = solid, label="d2"];
14->11 [style = bold, label=""];
18->16 [style = solid, label="d2"];
14->10 [style = solid, label="d2"];
6->11 [style = solid, label="d1"];
18->16 [style = bold, label=""];
}
