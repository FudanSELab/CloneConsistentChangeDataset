digraph {
10 [style = filled, label = "j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "upstreamBuild.delete()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Jenkins.getInstance().rebuildDependencyGraph()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(downstreamProjects.contains(downstream))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(0,downstreamProjects.size())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "fingerprintDependencies['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(1,upstreamProjects.size())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "j.jenkins.rebuildDependencyGraph()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(0,upstreamProjects.size())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "dependencyExclusion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents,singleFiles)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fingerprintDependencies['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "FreeStyleBuild upstreamBuild = j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents,singleFiles)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(upstreamProjects.contains(upstream))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->16 [style = bold, label=""];
12->0 [style = bold, label=""];
6->4 [style = bold, label=""];
7->9 [style = bold, label=""];
0->6 [style = solid, label="upstream"];
9->2 [style = bold, label=""];
10->8 [style = bold, label=""];
3->4 [style = solid, label="downstream"];
15->19 [style = bold, label=""];
10->11 [style = bold, label=""];
0->3 [style = bold, label=""];
2->15 [style = dashed, label="0"];
3->18 [style = bold, label=""];
5->10 [style = bold, label=""];
16->13 [style = bold, label=""];
5->18 [style = dashed, label="0"];
3->5 [style = bold, label=""];
9->14 [style = dashed, label="0"];
11->8 [style = bold, label=""];
18->10 [style = bold, label=""];
9->14 [style = bold, label=""];
2->6 [style = bold, label=""];
8->7 [style = bold, label=""];
13->9 [style = bold, label=""];
6->19 [style = dashed, label="0"];
14->15 [style = bold, label=""];
17->0 [style = bold, label=""];
1->0 [style = bold, label=""];
}
