digraph {
1 [style = filled, label = "assertThat(segment2.compareTo(segment1),equalTo(1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final KeyValueSegment segment2 = new KeyValueSegment(\"b\",\"B\",100L,metricsRecorder)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "shouldCompareSegmentIdOnly['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(segment2.compareTo(segment3),equalTo(1))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldCompareSegmentIdOnly['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(segment3.compareTo(segment2),equalTo(-1))@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(segment1.compareTo(segment1),equalTo(0))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(segment1.compareTo(segment3),equalTo(1))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final TimestampedSegment segment2 = new TimestampedSegment(\"b\",\"B\",100L,metricsRecorder)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "segment1.close()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final TimestampedSegment segment1 = new TimestampedSegment(\"a\",\"C\",50L,metricsRecorder)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shouldCompareSegmentIdOnly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(segment3.compareTo(segment1),equalTo(-1))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(segment1.compareTo(segment2),equalTo(-1))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final TimestampedSegment segment3 = new TimestampedSegment(\"c\",\"A\",0L,metricsRecorder)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final KeyValueSegment segment1 = new KeyValueSegment(\"a\",\"C\",50L,metricsRecorder)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "segment3.close()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final KeyValueSegment segment3 = new KeyValueSegment(\"c\",\"A\",0L,metricsRecorder)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "segment2.close()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8->10 [style = bold, label=""];
15->4 [style = solid, label="segment3"];
1->4 [style = bold, label=""];
6->9 [style = solid, label="segment2"];
15->7 [style = bold, label=""];
3->1 [style = bold, label=""];
16->1 [style = solid, label="segment1"];
0->6 [style = bold, label=""];
0->7 [style = solid, label="segment1"];
0->8 [style = solid, label="segment1"];
0->16 [style = dashed, label="0"];
11->12 [style = bold, label=""];
6->17 [style = dashed, label="0"];
16->17 [style = bold, label=""];
2->4 [style = solid, label="segment3"];
15->10 [style = solid, label="segment3"];
17->9 [style = solid, label="segment2"];
13->11 [style = bold, label=""];
7->3 [style = bold, label=""];
6->2 [style = bold, label=""];
2->15 [style = dashed, label="0"];
14->0 [style = bold, label=""];
5->0 [style = bold, label=""];
2->10 [style = solid, label="segment3"];
16->8 [style = solid, label="segment1"];
17->15 [style = bold, label=""];
4->8 [style = bold, label=""];
6->3 [style = solid, label="segment2"];
10->9 [style = bold, label=""];
17->3 [style = solid, label="segment2"];
2->7 [style = bold, label=""];
16->7 [style = solid, label="segment1"];
0->1 [style = solid, label="segment1"];
9->13 [style = bold, label=""];
18->16 [style = bold, label=""];
}
