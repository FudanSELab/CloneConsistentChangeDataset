digraph {
16 [style = filled, label = "Set<ChangePath> cp = lm(0(.getChangedPaths()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "LogMessage lm = collectLogMessages(thisTest.getWCPath(),null,ranges,false,true,false,0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "LogMessage lm = client.logMessages(thisTest.getWCPath(),null,null,false,true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ChangePath changedApath = cp.toArray(new ChangePath(((()(0(@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(\"wrong number of objects\",1,lm.length)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(\"wrong copy source rev\",-1,cp(0(.getCopySrcRevision())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertNull(\"wrong copy source path\",cp(0(.getCopySrcPath())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(\"wrong time with getTimeMillis()\",lm(0(.getTimeMillis(),lm(0(.getDate().getTime())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testBasicLogMessage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(\"wrong date with getTimeMicros()\",lm(0(.getDate(),new java.util.Date(lm(0(.getTimeMicros() / 1000))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "OneTest thisTest = new OneTest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(\"wrong action\",'A',cp(0(.getAction())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<RevisionRange> ranges = new ArrayList<RevisionRange>(1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(\"wrong path\",\"/A\",cp(0(.getPath())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(\"wrong date with getTimeMillis()\",lm(0(.getDate(),new java.util.Date(lm(0(.getTimeMillis()))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"wrong revision\",1,lm(0(.getRevisionNumber())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"wrong number of chang pathes\",20,cp.length)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"wrong copy source rev\",-1,changedApath.getCopySrcRevision())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"wrong user\",\"jrandom\",lm(0(.getAuthor())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNull(\"wrong copy source path\",changedApath.getCopySrcPath())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"wrong date with getTimeMicros()\",lm(0(.getDate(),new java.util.Date(lm(0(.getTimeMicros() / 1000))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testBasicLogMessage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertEquals(\"wrong time with getTimeMicros()\",lm(0(.getTimeMicros() / 1000,lm(0(.getDate().getTime())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "String non_canonical = thisTest.getUrl().toString() + \"/\"@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(\"wrong time with getTimeMillis()\",lm(0(.getTimeMillis(),lm(0(.getDate().getTime())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"wrong action\",ChangePath.Action.add,changedApath.getAction())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"wrong number of chang pathes\",20,cp.size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "LogMessage lm2 = collectLogMessages(non_canonical,null,ranges,false,true,false,0)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "testBasicLogMessage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ranges.add(new RevisionRange(null,null))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNotNull(\"changed paths set\",lm(0(.getChangedPaths())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"wrong message\",\"Log Message\",lm(0(.getMessage())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ChangePath cp = lm(0(.getChangedPaths()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertNotNull(\"wrong path\",changedApath)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(\"wrong date with getTimeMillis()\",lm(0(.getDate(),new java.util.Date(lm(0(.getTimeMillis()))@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
2->17 [style = bold, label=""];
11->16 [style = bold, label=""];
16->15 [style = dashed, label="0"];
4->14 [style = bold, label=""];
34->25 [style = bold, label=""];
14->30 [style = bold, label=""];
25->33 [style = bold, label=""];
0->19 [style = bold, label=""];
27->28 [style = bold, label=""];
28->31 [style = bold, label=""];
26->14 [style = bold, label=""];
24->34 [style = bold, label=""];
19->10 [style = bold, label=""];
30->32 [style = bold, label=""];
18->6 [style = solid, label="changedApath"];
11->24 [style = bold, label=""];
10->7 [style = bold, label=""];
33->27 [style = bold, label=""];
14->1 [style = bold, label=""];
23->14 [style = bold, label=""];
32->29 [style = bold, label=""];
20->18 [style = bold, label=""];
3->9 [style = bold, label=""];
1->22 [style = solid, label="ranges"];
1->0 [style = solid, label="ranges"];
12->25 [style = dashed, label="0"];
15->11 [style = bold, label=""];
29->19 [style = bold, label=""];
5->0 [style = bold, label=""];
8->2 [style = bold, label=""];
18->6 [style = bold, label=""];
21->22 [style = bold, label=""];
21->22 [style = solid, label="non_canonical"];
12->8 [style = bold, label=""];
17->3 [style = bold, label=""];
20->11 [style = dashed, label="0"];
7->15 [style = bold, label=""];
31->17 [style = bold, label=""];
13->21 [style = bold, label=""];
16->20 [style = bold, label=""];
9->13 [style = bold, label=""];
6->12 [style = bold, label=""];
}
