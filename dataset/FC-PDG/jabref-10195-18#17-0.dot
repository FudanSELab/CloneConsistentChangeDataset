digraph {
6 [style = filled, label = "getIdFetchersReturnsAllFetcherDerivingFromIdFetcher['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expected.remove()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Set<IdBasedFetcher> idFetchers = WebFetchers.getIdBasedFetchers(importFormatPreferences)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "expected.remove()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expected.remove()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "expected.remove()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "ClassInfoList controlClasses = scanResult.getClassesImplementing(.getCanonicalName())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expected.remove()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Set<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(expected,getClasses(idFetchers))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "getIdFetchersReturnsAllFetcherDerivingFromIdFetcher['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Set<IdFetcher<?>> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(expected,getClasses(idFetchers))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ClassInfoList controlClasses = scanResult.getClassesImplementing(.getCanonicalName())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "expected.remove()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
7->1 [style = solid, label="expected"];
9->0 [style = bold, label=""];
0->13 [style = bold, label=""];
3->1 [style = bold, label=""];
5->1 [style = solid, label="idFetchers"];
0->17 [style = solid, label="expected"];
12->17 [style = bold, label=""];
3->13 [style = dashed, label="0"];
13->16 [style = bold, label=""];
7->3 [style = bold, label=""];
8->1 [style = solid, label="idFetchers"];
5->2 [style = bold, label=""];
10->17 [style = solid, label="idFetchers"];
2->0 [style = bold, label=""];
8->2 [style = bold, label=""];
5->10 [style = dashed, label="0"];
2->9 [style = dashed, label="0"];
11->10 [style = bold, label=""];
6->8 [style = bold, label=""];
0->1 [style = solid, label="expected"];
5->8 [style = dashed, label="0"];
16->14 [style = bold, label=""];
14->15 [style = bold, label=""];
10->9 [style = bold, label=""];
15->12 [style = bold, label=""];
2->7 [style = bold, label=""];
0->7 [style = dashed, label="0"];
4->5 [style = bold, label=""];
}
