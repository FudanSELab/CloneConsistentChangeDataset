digraph {
4 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertDataSet(actualUpdateCount)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertExecuteUpdate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "int actualUpdateCount@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "\"shadow\".equals(getScenario())@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "actualUpdateCount = SQLExecuteType.Literal == getSqlExecuteType()? executeUpdateForStatement(connection): executeUpdateForPreparedStatement(connection)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "\"encrypt\".equals(getScenario())@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertExecuteUpdate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "\"replica_query\".equals(getScenario())@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertExecute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "actualUpdateCount = SQLExecuteType.Literal == getSqlExecuteType()? executeForStatement(connection): executeForPreparedStatement(connection)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
5->10 [style = bold, label=""];
10->8 [style = dotted, label="true"];
1->4 [style = bold, label=""];
3->1 [style = bold, label=""];
0->6 [style = bold, label=""];
7->2 [style = solid, label="actualUpdateCount"];
7->11 [style = dashed, label="0"];
8->6 [style = bold, label=""];
1->4 [style = dotted, label="true"];
5->0 [style = dotted, label="true"];
11->2 [style = solid, label="actualUpdateCount"];
12->1 [style = bold, label=""];
10->6 [style = bold, label=""];
11->2 [style = bold, label=""];
0->10 [style = bold, label=""];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
5->0 [style = bold, label=""];
7->2 [style = bold, label=""];
6->11 [style = bold, label=""];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
4->5 [style = bold, label=""];
}
