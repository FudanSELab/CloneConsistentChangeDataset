digraph {
0 [style = filled, label = "DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(prefixQuery,instanceOf())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testRegexQueryType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Query prefixQuery = completionFieldMapper.fieldType().regexpQuery(new BytesRef(\"co\"),RegExp87.ALL,Operations.DEFAULT_MAX_DETERMINIZED_STATES)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "CompletionFieldMapper completionFieldMapper = (CompletionFieldMapper)fieldMapper@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(prefixQuery,instanceOf())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"completion\").field(\"type\",\"completion\").endObject().endObject().endObject().endObject())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testRegexQueryType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testPrefixQueryType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Query prefixQuery = completionFieldMapper.fieldType().regexpQuery(new BytesRef(\"co\"),RegExp.ALL,Operations.DEFAULT_MAX_DETERMINIZED_STATES)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Query prefixQuery = completionFieldMapper.fieldType().prefixQuery(new BytesRef(\"co\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
4->3 [style = bold, label=""];
5->0 [style = solid, label="mapping"];
7->1 [style = bold, label=""];
3->1 [style = bold, label=""];
3->7 [style = dashed, label="0"];
9->12 [style = solid, label="prefixQuery"];
0->2 [style = bold, label=""];
0->11 [style = dashed, label="0"];
2->4 [style = bold, label=""];
11->2 [style = bold, label=""];
4->7 [style = bold, label=""];
1->12 [style = dashed, label="0"];
6->5 [style = bold, label=""];
10->5 [style = bold, label=""];
8->5 [style = bold, label=""];
5->0 [style = bold, label=""];
3->9 [style = dashed, label="0"];
2->4 [style = solid, label="fieldMapper"];
5->11 [style = solid, label="mapping"];
5->11 [style = bold, label=""];
9->12 [style = bold, label=""];
7->1 [style = solid, label="prefixQuery"];
3->1 [style = solid, label="prefixQuery"];
}
