digraph {
1 [style = filled, label = "druidMeta = new DruidMeta(new PlannerFactory(druidSchema,systemSchema,CalciteTests.createMockQueryLifecycleFactory(walker,conglomerate),operatorTable,macroTable,plannerConfig,CalciteTests.TEST_AUTHORIZER_MAPPER,CalciteTests.getJsonMapper()),AVATICA_CONFIG,injector)@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Properties propertiesLosAngeles = new Properties()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "server = new Server(new InetSocketAddress(\"127.0.0.1\",port))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testRequestLogger = new TestRequestLogger()@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "properties.put(keyPrefix + \".cacheExecutorFactory\",\"single_thread\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "walker = CalciteTests.createMockWalker(conglomerate,temporaryFolder.newFolder())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "client = DriverManager.getConnection(url,\"regularUser\",\"druid\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider = JsonConfigProvider.of(keyPrefix,)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertEquals(100,config.getSizeInBytes())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final SystemSchema systemSchema = CalciteTests.createMockSystemSchema(druidSchema,walker)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final ExprMacroTable macroTable = CalciteTests.createExprMacroTable()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "propertiesLosAngeles.setProperty(\"user\",\"regularUserLA\")@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "testFromProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertNotNull(config.createExecutor())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final DruidAvaticaHandler handler = new DruidAvaticaHandler(druidMeta,new DruidNode(\"dummy\",\"dummy\",false,1,null,true,false),new AvaticaMonitor())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final PlannerFactory plannerFactory = new PlannerFactory(druidSchema,systemSchema,CalciteTests.createMockQueryLifecycleFactory(walker,conglomerate),operatorTable,macroTable,plannerConfig,CalciteTests.TEST_AUTHORIZER_MAPPER,CalciteTests.getJsonMapper())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "final DruidAvaticaHandler handler = new DruidAvaticaHandler(druidMeta,new DruidNode(\"dummy\",\"dummy\",false,1,null,true,false),new AvaticaMonitor())@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "server.setHandler(handler)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlQueryId\",DUMMY_SQL_QUERY_ID)@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "url = StringUtils.format(\"jdbc:avatica:remote:url=http://127.0.0.1:%d%s\",port,DruidAvaticaHandler.AVATICA_PATH)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "druidMeta = new DruidMeta(new SqlLifecycleFactory(plannerFactory,new NoopServiceEmitter(),testRequestLogger),AVATICA_CONFIG,injector)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "properties.put(keyPrefix + \".sizeInBytes\",\"100\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final Injector injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(null))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "clientLosAngeles = DriverManager.getConnection(url,propertiesLosAngeles)@@@35@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final PlannerConfig plannerConfig = new PlannerConfig()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "properties.put(keyPrefix + \".expireAfter\",\"10\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "server.start()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "caffeineCacheConfigJsonConfigProvider.inject(properties,configurator)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final int port = ThreadLocalRandom.current().nextInt(9999) + 10000@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "superuserClient = DriverManager.getConnection(url,CalciteTests.TEST_SUPERUSER_NAME,\"druid\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(10,config.getExpireAfter())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(new Module(){@Override public void configure(Binder binder){binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"test\")binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0)binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHORIZER_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_ESCALATOR)}}))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final DruidSchema druidSchema = CalciteTests.createMockSchema(conglomerate,walker,plannerConfig)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final JsonConfigurator configurator = injector.getInstance()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final int port = ThreadLocalRandom.current().nextInt(9999) + 10000@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final DruidOperatorTable operatorTable = CalciteTests.createOperatorTable()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final CaffeineCacheConfig config = caffeineCacheConfigJsonConfigProvider.get().get()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final String keyPrefix = \"cache.config.prefix\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlTimeZone\",\"America/Los_Angeles\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final Properties properties = new Properties()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->8 [style = solid, label="handler"];
28->30 [style = bold, label=""];
23->22 [style = bold, label=""];
3->1 [style = solid, label="macroTable"];
17->15 [style = solid, label="url"];
16->25 [style = solid, label="systemSchema"];
0->9 [style = solid, label="walker"];
4->1 [style = solid, label="operatorTable"];
25->27 [style = solid, label="plannerFactory"];
32->38 [style = bold, label=""];
38->36 [style = bold, label=""];
11->25 [style = solid, label="plannerConfig"];
5->8 [style = bold, label=""];
16->4 [style = bold, label=""];
11->9 [style = solid, label="plannerConfig"];
35->41 [style = bold, label=""];
19->1 [style = bold, label=""];
10->17 [style = bold, label=""];
36->29 [style = bold, label=""];
41->33 [style = bold, label=""];
6->17 [style = solid, label="port"];
0->25 [style = solid, label="walker"];
1->14 [style = solid, label="druidMeta"];
19->27 [style = solid, label="injector"];
15->12 [style = bold, label=""];
5->17 [style = solid, label="handler"];
20->18 [style = bold, label=""];
9->16 [style = bold, label=""];
0->1 [style = solid, label="walker"];
3->25 [style = solid, label="macroTable"];
34->36 [style = solid, label="keyPrefix"];
12->20 [style = solid, label="url"];
12->18 [style = solid, label="url"];
18->13 [style = bold, label=""];
11->9 [style = bold, label=""];
4->25 [style = solid, label="operatorTable"];
32->28 [style = solid, label="properties"];
17->12 [style = solid, label="url"];
20->2 [style = solid, label="propertiesLosAngeles"];
24->0 [style = bold, label=""];
40->31 [style = bold, label=""];
8->10 [style = solid, label="port"];
12->22 [style = solid, label="url"];
1->14 [style = bold, label=""];
0->11 [style = bold, label=""];
9->16 [style = solid, label="druidSchema"];
34->29 [style = solid, label="keyPrefix"];
11->1 [style = solid, label="plannerConfig"];
26->25 [style = bold, label=""];
37->34 [style = bold, label=""];
19->1 [style = solid, label="injector"];
17->15 [style = bold, label=""];
29->39 [style = bold, label=""];
9->25 [style = solid, label="druidSchema"];
40->28 [style = solid, label="configurator"];
8->12 [style = solid, label="port"];
27->5 [style = bold, label=""];
7->0 [style = bold, label=""];
3->19 [style = bold, label=""];
19->26 [style = bold, label=""];
12->20 [style = bold, label=""];
6->5 [style = bold, label=""];
14->6 [style = bold, label=""];
34->38 [style = solid, label="keyPrefix"];
13->22 [style = solid, label="propertiesLosAngeles"];
0->16 [style = solid, label="walker"];
39->40 [style = bold, label=""];
26->27 [style = solid, label="testRequestLogger"];
30->35 [style = bold, label=""];
27->5 [style = solid, label="druidMeta"];
9->1 [style = solid, label="druidSchema"];
25->27 [style = bold, label=""];
13->2 [style = bold, label=""];
21->23 [style = bold, label=""];
31->28 [style = bold, label=""];
17->2 [style = solid, label="url"];
4->3 [style = bold, label=""];
8->10 [style = bold, label=""];
2->21 [style = bold, label=""];
6->5 [style = solid, label="port"];
16->1 [style = solid, label="systemSchema"];
34->32 [style = bold, label=""];
34->31 [style = solid, label="keyPrefix"];
}
