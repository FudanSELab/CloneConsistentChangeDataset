digraph {
20 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "validateMinActiveAndTopStateReplica(is,ev,_replica,NUM_NODE)@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "validateNoPartitionMove(is,externalViewsBefore.get(db),ev,_participants.get(0).getInstanceName(),true)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "IdealState is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,db)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "enablePersistBestPossibleAssignment(_gZkClient,CLUSTER_NAME,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testPartitionMovementAfterDelayTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "validateMinActiveAndTopStateReplica(is,ev,_minActiveReplica,NUM_NODE)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Thread.sleep(DEFAULT_REBALANCE_PROCESSING_WAIT_TIME)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "testPartitionMovementAfterDelayTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testPartitionMovementAfterDelayTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "IdealState is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,db)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "setDelayTimeInCluster(_gZkClient,CLUSTER_NAME,delay)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Map<String,ExternalView> externalViewsBefore = createTestDBs(-1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "validateDelayedMovements(externalViewsBefore)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ExternalView ev = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME,db)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "long delay = 10000@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Thread.sleep(delay + 200)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "validateMinActiveAndTopStateReplica(is,ev,_replica,NUM_NODE)@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "IdealState is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,db)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "IdealState is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,db)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Thread.sleep(delay + DEFAULT_REBALANCE_PROCESSING_WAIT_TIME)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "enableInstance(_participants.get(0).getInstanceName(),false)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<String,ExternalView> externalViewsBefore = createTestDBs(delay)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ExternalView ev = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME,db)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Thread.sleep(delay + 500)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "long delay = 4000@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "enableInstance(_participants.get(0).getInstanceName(),false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->15 [style = dashed, label="0"];
3->19 [style = solid, label="ev"];
25->1 [style = bold, label=""];
4->25 [style = bold, label=""];
7->12 [style = bold, label=""];
7->10 [style = bold, label=""];
26->5 [style = bold, label=""];
11->21 [style = solid, label="ev"];
16->24 [style = bold, label=""];
0->15 [style = solid, label="delay"];
11->6 [style = bold, label=""];
0->1 [style = solid, label="delay"];
25->1 [style = solid, label="delay"];
3->11 [style = bold, label=""];
18->17 [style = bold, label=""];
28->26 [style = bold, label=""];
11->12 [style = bold, label=""];
12->9 [style = solid, label="ev"];
20->11 [style = bold, label=""];
9->7 [style = bold, label=""];
9->19 [style = solid, label="is"];
23->21 [style = solid, label="is"];
10->6 [style = bold, label=""];
13->16 [style = bold, label=""];
13->26 [style = dashed, label="0"];
4->0 [style = bold, label=""];
0->10 [style = solid, label="delay"];
2->13 [style = bold, label=""];
22->4 [style = bold, label=""];
3->9 [style = bold, label=""];
27->4 [style = bold, label=""];
1->28 [style = bold, label=""];
6->11 [style = solid, label="ev"];
3->7 [style = solid, label="ev"];
0->18 [style = solid, label="delay"];
0->25 [style = dashed, label="0"];
23->21 [style = bold, label=""];
5->12 [style = bold, label=""];
21->11 [style = bold, label=""];
3->9 [style = solid, label="is"];
0->1 [style = bold, label=""];
15->20 [style = bold, label=""];
6->8 [style = bold, label=""];
8->11 [style = solid, label="is"];
25->26 [style = solid, label="delay"];
3->11 [style = solid, label="is"];
13->16 [style = dashed, label="0"];
13->5 [style = bold, label=""];
0->18 [style = bold, label=""];
1->2 [style = bold, label=""];
12->3 [style = bold, label=""];
17->13 [style = bold, label=""];
1->28 [style = solid, label="externalViewsBefore"];
19->15 [style = bold, label=""];
8->11 [style = bold, label=""];
7->19 [style = bold, label=""];
19->3 [style = bold, label=""];
24->3 [style = bold, label=""];
11->23 [style = bold, label=""];
9->7 [style = solid, label="is"];
12->11 [style = solid, label="ev"];
3->7 [style = solid, label="is"];
12->7 [style = solid, label="ev"];
14->4 [style = bold, label=""];
}
