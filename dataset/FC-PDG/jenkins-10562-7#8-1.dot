digraph {
7 [style = filled, label = "assertEquals(projectName,project.getDisplayName())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final String newProjectName = \"newProjectName\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testCopyJobWithNoDisplayName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String projectName = \"projectName\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(newProjectName,newProject.getName())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCopyJobWithNoDisplayName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testCopyJobWithDisplayName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "project.setDisplayName(oldDisplayName)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "AbstractProject newProject = Jenkins.getInstance().copy((AbstractProject)project,newProjectName)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "AbstractProject newProject = Jenkins.getInstance().copy((AbstractProject)project,newProjectName)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(newProjectName,newProject.getDisplayName())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "AbstractProject newProject = Jenkins.get().copy((AbstractProject)project,newProjectName)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(projectName)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String oldDisplayName = \"oldDisplayName\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(oldDisplayName,project.getDisplayName())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->7 [style = solid, label="projectName"];
1->4 [style = bold, label=""];
2->5 [style = solid, label="project"];
4->10 [style = solid, label="newProjectName"];
11->1 [style = bold, label=""];
7->14 [style = dashed, label="0"];
12->14 [style = solid, label="oldDisplayName"];
4->2 [style = bold, label=""];
7->8 [style = bold, label=""];
4->8 [style = solid, label="newProjectName"];
7->3 [style = bold, label=""];
2->3 [style = solid, label="project"];
12->13 [style = solid, label="oldDisplayName"];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
0->1 [style = bold, label=""];
1->2 [style = solid, label="projectName"];
6->10 [style = bold, label=""];
2->14 [style = bold, label=""];
13->5 [style = bold, label=""];
4->12 [style = bold, label=""];
4->6 [style = solid, label="newProjectName"];
3->8 [style = dashed, label="0"];
2->7 [style = bold, label=""];
14->13 [style = bold, label=""];
9->1 [style = bold, label=""];
4->5 [style = solid, label="newProjectName"];
4->3 [style = solid, label="newProjectName"];
2->8 [style = solid, label="project"];
}
