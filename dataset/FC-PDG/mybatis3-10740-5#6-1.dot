digraph {
14 [style = filled, label = "MappedStatement selectStatement = ExecutorTestHelper.createSelectAuthorWithIDof99MappedStatement(config)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(1 == rows || BatchExecutor.BATCH_UPDATE_RETURN_VALUE == rows)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "{executor.rollback(true)executor.close(false)}@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int rows = executor.update(insertStatement,null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "int rows = executor.update(insertStatement,author)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Author author = new Author(99,\"someone\",\"******\",\"someone@apache.org\",null,null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(author.toString(),authors.get(0).toString())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Author author = new Author(99,\"someone\",\"******\",\"someone@apache.org\",null,Section.NEWS)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "MappedStatement insertStatement = ExecutorTestHelper.prepareInsertAuthorMappedStatement(config)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldInsertNewAuthor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "MappedStatement insertStatement = ExecutorTestHelper.createInsertAuthorWithIDof99MappedStatement(config)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(1,authors.size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "shouldInsertNewAuthorUsingSimpleNonPreparedStatements['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "executor.flushStatements()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<Author> authors = executor.query(selectStatement,99,RowBounds.DEFAULT,Executor.NO_RESULT_HANDLER)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "executor.rollback(true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MappedStatement selectStatement = ExecutorTestHelper.prepareSelectOneAuthorMappedStatement(config)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "shouldInsertNewAuthor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Executor executor = createExecutor(new JdbcTransaction(ds,null,false))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
7->17 [style = bold, label=""];
15->7 [style = bold, label=""];
3->1 [style = bold, label=""];
7->10 [style = bold, label=""];
9->18 [style = dashed, label="0"];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
4->8 [style = solid, label="selectStatement"];
9->8 [style = bold, label=""];
18->2 [style = solid, label="rows"];
10->6 [style = bold, label=""];
10->9 [style = solid, label="author"];
12->7 [style = bold, label=""];
1->11 [style = bold, label=""];
14->8 [style = solid, label="selectStatement"];
6->4 [style = bold, label=""];
11->0 [style = bold, label=""];
6->16 [style = dashed, label="0"];
13->7 [style = bold, label=""];
10->17 [style = dashed, label="0"];
16->14 [style = bold, label=""];
14->18 [style = bold, label=""];
4->14 [style = dashed, label="0"];
18->8 [style = bold, label=""];
9->2 [style = solid, label="rows"];
16->18 [style = solid, label="insertStatement"];
17->16 [style = bold, label=""];
6->9 [style = solid, label="insertStatement"];
2->5 [style = bold, label=""];
}
