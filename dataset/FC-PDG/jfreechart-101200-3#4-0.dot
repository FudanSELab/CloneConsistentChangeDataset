digraph {
5 [style = filled, label = "s1.add(new SimpleTimePeriod(1000L,2000L),1.0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(7000.0,r.getUpperBound(),EPSILON)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testGetDomainBoundsWithoutInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "r = dataset.getDomainBounds(false)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(3000.0,r.getUpperBound(),EPSILON)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(2000.0,r.getUpperBound(),EPSILON)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "r = dataset.getDomainBounds(true)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(1500.0,r.getLowerBound(),EPSILON)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Range r = dataset.getDomainBounds(true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testGetDomainBoundsWithInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "dataset.setDomainIsPointsInTime(false)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "s1.add(new SimpleTimePeriod(6000L,7000L),1.5)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Range r = dataset.getDomainBounds(false)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(1000.0,r.getLowerBound(),EPSILON)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TimePeriodValuesCollection dataset = new TimePeriodValuesCollection()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertNull(r)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(1000.0,r.getLowerBound(),EPSILON)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "r = dataset.getDomainBounds(true)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(7000.0,r.getUpperBound(),EPSILON)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(1000.0,r.getLowerBound(),EPSILON)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "TimePeriodValues s1 = new TimePeriodValues(\"S1\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "dataset.addSeries(s1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(2250.0,r.getUpperBound(),EPSILON)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(1000.0,r.getLowerBound(),EPSILON)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "s1.add(new SimpleTimePeriod(1500L,3000L),2.0)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "s1.add(new SimpleTimePeriod(4000L,5000L),1.4)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testGetDomainBoundsWithoutInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "r = dataset.getDomainBounds(true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "r = dataset.getDomainBounds(true)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(1500.0,r.getUpperBound(),EPSILON)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1500.0,r.getLowerBound(),EPSILON)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "r = dataset.getDomainBounds(false)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->4 [style = bold, label=""];
23->16 [style = bold, label=""];
8->16 [style = dashed, label="0"];
31->25 [style = bold, label=""];
12->5 [style = bold, label=""];
9->11 [style = bold, label=""];
15->14 [style = bold, label=""];
21->19 [style = bold, label=""];
19->12 [style = bold, label=""];
3->7 [style = dashed, label="0"];
21->19 [style = solid, label="r"];
25->30 [style = bold, label=""];
11->6 [style = bold, label=""];
29->31 [style = bold, label=""];
28->7 [style = bold, label=""];
20->14 [style = bold, label=""];
1->21 [style = dashed, label="0"];
24->29 [style = bold, label=""];
2->9 [style = bold, label=""];
16->17 [style = bold, label=""];
30->18 [style = bold, label=""];
7->3 [style = bold, label=""];
14->1 [style = bold, label=""];
9->2 [style = dashed, label="0"];
12->13 [style = solid, label="s1"];
3->10 [style = bold, label=""];
0->14 [style = bold, label=""];
17->24 [style = bold, label=""];
18->22 [style = bold, label=""];
10->8 [style = bold, label=""];
6->26 [style = dashed, label="0"];
5->13 [style = bold, label=""];
7->23 [style = bold, label=""];
13->2 [style = bold, label=""];
4->12 [style = bold, label=""];
2->27 [style = bold, label=""];
4->12 [style = solid, label="r"];
26->28 [style = bold, label=""];
11->27 [style = dashed, label="0"];
6->7 [style = bold, label=""];
10->23 [style = dashed, label="0"];
5->2 [style = solid, label="s1"];
14->21 [style = bold, label=""];
14->4 [style = bold, label=""];
27->26 [style = bold, label=""];
}
