digraph {
0 [style = filled, label = "i++@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(names(i(,charFilterProps.get(i).get(\"name\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(names.length,charFilterProps.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "i < names.length@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i < names.length@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SimpleOrderedMap<Object> analyzerProps@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int i = 0@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "SimpleOrderedMap<Object> analyzerProps@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SimpleOrderedMap<Object> analyzerProps@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String(( names@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "checkCharFilterNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i++@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(names(i(,tokenFilterProps.get(i).get(\"name\"))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertNull(tokenFilterProps.get(i).get(\"class\"))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "String(( names@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(names.length,tokenFilterProps.size())@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<SimpleOrderedMap<Object>> tokenFilterProps = (List<SimpleOrderedMap<Object>>)analyzerProps.get(\"filters\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "List<SimpleOrderedMap<Object>> tokenFilterProps = (List<SimpleOrderedMap<Object>>)analyzerProps.get(\"filters\")@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "checkTokenFilterNames['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertNull(charFilterProps.get(i).get(\"class\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<SimpleOrderedMap<Object>> charFilterProps = (List<SimpleOrderedMap<Object>>)analyzerProps.get(\"charFilters\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "checkTokenFilterNames['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16->19 [style = solid, label="names"];
0->9 [style = solid, label="i"];
0->3 [style = bold, label=""];
14->3 [style = bold, label=""];
7->2 [style = dotted, label="true"];
10->12 [style = dotted, label="true"];
9->0 [style = bold, label=""];
10->14 [style = bold, label=""];
0->6 [style = bold, label=""];
1->9 [style = solid, label="i"];
6->13 [style = dotted, label="true"];
8->20 [style = dashed, label="0"];
1->3 [style = bold, label=""];
18->19 [style = bold, label=""];
3->6 [style = bold, label=""];
1->19 [style = solid, label="i"];
3->9 [style = dotted, label="true"];
3->6 [style = dotted, label="true"];
7->8 [style = bold, label=""];
11->9 [style = bold, label=""];
4->21 [style = dashed, label="0"];
13->11 [style = bold, label=""];
3->0 [style = bold, label=""];
19->0 [style = bold, label=""];
9->6 [style = bold, label=""];
6->18 [style = dashed, label="0"];
3->18 [style = bold, label=""];
9->11 [style = solid, label="i"];
17->16 [style = dotted, label="true"];
9->19 [style = dashed, label="0"];
1->0 [style = solid, label="i"];
5->1 [style = bold, label=""];
3->19 [style = dotted, label="true"];
8->5 [style = bold, label=""];
4->9 [style = solid, label="names"];
9->6 [style = solid, label="i"];
6->9 [style = dotted, label="true"];
6->13 [style = bold, label=""];
3->18 [style = dotted, label="true"];
0->11 [style = solid, label="i"];
0->3 [style = solid, label="i"];
7->4 [style = dotted, label="true"];
3->0 [style = dotted, label="true"];
0->19 [style = solid, label="i"];
6->11 [style = dotted, label="true"];
1->3 [style = solid, label="i"];
6->9 [style = bold, label=""];
10->4 [style = dotted, label="true"];
12->11 [style = solid, label="names"];
17->21 [style = dotted, label="true"];
20->15 [style = bold, label=""];
5->15 [style = dashed, label="0"];
0->6 [style = solid, label="i"];
17->20 [style = bold, label=""];
15->1 [style = bold, label=""];
}
