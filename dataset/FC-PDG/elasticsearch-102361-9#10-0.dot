digraph {
60 [style = filled, label = "joinHelper.sendJoinRequest(node1,randomNonNegativeLong(),optionalJoin1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "CapturedRequest capturedRequest2 = capturedRequests2(0(@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "transportService.start()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "JoinHelper joinHelper = new JoinHelper(Settings.EMPTY,null,null,transportService,null,null,null,null,Collections.emptyList(),null,null)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "transportService.start()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "capturingTransport.handleRemoteError(capturedRequest2.requestId,new CoordinationStateRejectedException(\"dummy\"))@@@53@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertFalse(joinHelper.isJoinPending())@@@56@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "TransportService transportService = capturingTransport.createTransportService(Settings.EMPTY,deterministicTaskQueue.getThreadPool(),TransportService.NOOP_TRANSPORT_INTERCEPTOR,null,null,Collections.emptySet())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertTrue(transportService.nodeConnected(node2))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(node1,capturedRequest1a.node)@@@37@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "DeterministicTaskQueue deterministicTaskQueue = new DeterministicTaskQueue()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "joinHelper.sendJoinRequest(node1,0L,optionalJoin1)@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "assertEquals(node2,capturedRequest2.node)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CapturedRequest capturedRequest1a = capturedRequests1a(0(@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(transportService.nodeConnected(node1))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "CapturedRequest(( capturedRequests2 = capturingTransport.getCapturedRequestsAndClear()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(capturedRequests1.length,equalTo(1))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "joinHelper.onClusterStateApplied()@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "joinHelper.sendJoinRequest(node1,0L,optionalJoin1)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final boolean mightSucceed = randomBoolean()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "Optional<Join> optionalJoin2a = optionalJoin2.isPresent() && randomBoolean()? Optional.empty(): Optional.of(new Join(localNode,node2,randomNonNegativeLong(),randomNonNegativeLong(),randomNonNegativeLong()))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testJoinDeduplication['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "capturingTransport.handleRemoteError(capturedRequest1a.requestId,new CoordinationStateRejectedException(\"dummy\"))@@@54@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "CapturedRequest(( capturedRequests1 = capturingTransport.getCapturedRequestsAndClear()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "CapturedRequest capturedRequest2a = capturedRequests2a(0(@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "completeJoinRequest(capturingTransport,capturedRequest1,mightSucceed)@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertFalse(joinHelper.isJoinPending())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "CapturedRequest(( capturedRequests2 = capturingTransport.getCapturedRequestsAndClear()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertFalse(joinHelper.isJoinPending())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(joinHelper.isJoinPending())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "capturingTransport.handleRemoteError(capturedRequest2a.requestId,new CoordinationStateRejectedException(\"dummy\"))@@@55@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertFalse(joinHelper.isJoinPending())@@@54@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "nodeHealthServiceStatus.getAndSet(new StatusInfo(HEALTHY,\"healthy-info\"))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "AtomicReference<StatusInfo> nodeHealthServiceStatus = new AtomicReference<>(new StatusInfo(UNHEALTHY,\"unhealthy-info\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "capturingTransport.handleResponse(capturedRequest1.requestId,TransportResponse.Empty.INSTANCE)@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "TransportService transportService = new TransportService(Settings.EMPTY,capturingTransport,deterministicTaskQueue.getThreadPool(),TransportService.NOOP_TRANSPORT_INTERCEPTOR,null,null,Collections.emptySet(),new ClusterConnectionManager(Settings.EMPTY,capturingTransport))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "Optional<Join> optionalJoin2 = randomBoolean()? Optional.empty(): Optional.of(new Join(localNode,node2,randomNonNegativeLong(),randomNonNegativeLong(),randomNonNegativeLong()))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "testJoinFailureOnUnhealthyNodes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "joinHelper.sendJoinRequest(node2,0L,optionalJoin2a)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "testJoinDeduplication['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "CapturedRequest(( capturedRequests1a = capturingTransport.getCapturedRequestsAndClear()@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertEquals(node2,capturedRequest2a.node)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "completeJoinRequest(capturingTransport,capturedRequest1a,mightSucceed)@@@52@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "completeJoinRequest(capturingTransport,capturedRequest2a,mightSucceed)@@@53@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "assertThat(capturedRequests1a.length,equalTo(1))@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "assertFalse(joinHelper.isJoinPending())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "joinHelper.sendJoinRequest(node2,randomNonNegativeLong(),optionalJoin2)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "completeJoinRequest(capturingTransport,capturedRequest2,mightSucceed)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "joinHelper.sendJoinRequest(node1,0L,optionalJoin1)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "CapturedRequest capturedRequest1 = capturedRequests1(0(@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "CapturedRequest capturedRequest1a = capturedRequests1a(0(@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertTrue(joinHelper.isJoinPending())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertThat(capturedRequests2.length,equalTo(0))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertFalse(transportService.nodeConnected(node1))@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "joinHelper.sendJoinRequest(node1,0L,optionalJoin1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CapturingTransport capturingTransport = new CapturingTransport()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "randomBoolean()@@@35@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Optional<Join> optionalJoin1 = randomBoolean()? Optional.empty(): Optional.of(new Join(localNode,node1,randomNonNegativeLong(),randomNonNegativeLong(),randomNonNegativeLong()))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(node1,capturedRequest1a.node)@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "assertFalse(transportService.nodeConnected(node2))@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(node1,capturedRequest1.node)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "joinHelper.sendJoinRequest(node2,0L,optionalJoin2)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(capturedRequests1a.length,equalTo(1))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DiscoveryNode localNode = new DiscoveryNode(\"node0\",buildNewFakeTransportAddress(),Version.CURRENT)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertThat(capturedRequests1.length,equalTo(0))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "DiscoveryNode node1 = new DiscoveryNode(\"node1\",buildNewFakeTransportAddress(),Version.CURRENT)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "CapturingTransport capturingTransport = new HandshakingCapturingTransport()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "DiscoveryNode node2 = new DiscoveryNode(\"node2\",buildNewFakeTransportAddress(),Version.CURRENT)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "CapturedRequest(( capturedRequests1a = capturingTransport.getCapturedRequestsAndClear()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "capturingTransport.handleRemoteError(capturedRequest1.requestId,new CoordinationStateRejectedException(\"dummy\"))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "mightSucceed@@@55@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
17->25 [style = bold, label=""];
1->55 [style = dashed, label="0"];
22->15 [style = bold, label=""];
18->36 [style = solid, label="optionalJoin1"];
33->23 [style = solid, label="optionalJoin2"];
60->29 [style = bold, label=""];
61->12 [style = bold, label=""];
49->12 [style = solid, label="transportService"];
48->39 [style = bold, label=""];
55->34 [style = solid, label="capturingTransport"];
39->18 [style = bold, label=""];
55->41 [style = solid, label="capturingTransport"];
48->40 [style = solid, label="mightSucceed"];
51->46 [style = solid, label="capturedRequests1a"];
12->2 [style = bold, label=""];
38->30 [style = bold, label=""];
13->36 [style = solid, label="node1"];
36->24 [style = bold, label=""];
13->54 [style = solid, label="node1"];
65->68 [style = bold, label=""];
51->47 [style = bold, label=""];
8->23 [style = solid, label="node2"];
0->10 [style = solid, label="localNode"];
4->36 [style = bold, label=""];
14->27 [style = dotted, label="false"];
8->39 [style = bold, label=""];
9->38 [style = bold, label=""];
68->33 [style = solid, label="optionalJoin2"];
59->67 [style = bold, label=""];
13->3 [style = solid, label="node1"];
28->55 [style = bold, label=""];
55->52 [style = solid, label="capturingTransport"];
13->57 [style = solid, label="node1"];
18->31 [style = bold, label=""];
70->28 [style = bold, label=""];
49->12 [style = bold, label=""];
8->10 [style = solid, label="node2"];
0->68 [style = solid, label="localNode"];
67->64 [style = bold, label=""];
13->18 [style = solid, label="node1"];
0->33 [style = solid, label="localNode"];
24->3 [style = solid, label="capturedRequests1a"];
10->22 [style = solid, label="optionalJoin2a"];
0->36 [style = solid, label="localNode"];
8->22 [style = solid, label="node2"];
26->14 [style = bold, label=""];
52->45 [style = bold, label=""];
31->29 [style = bold, label=""];
29->66 [style = bold, label=""];
41->6 [style = bold, label=""];
1->0 [style = bold, label=""];
48->34 [style = solid, label="mightSucceed"];
11->69 [style = dashed, label="0"];
58->54 [style = bold, label=""];
15->35 [style = bold, label=""];
8->33 [style = solid, label="node2"];
24->5 [style = bold, label=""];
19->37 [style = bold, label=""];
33->23 [style = bold, label=""];
56->58 [style = bold, label=""];
55->49 [style = solid, label="capturingTransport"];
43->12 [style = bold, label=""];
18->42 [style = solid, label="optionalJoin1"];
43->49 [style = dashed, label="0"];
43->12 [style = solid, label="transportService"];
13->60 [style = solid, label="node1"];
8->24 [style = solid, label="node2"];
35->34 [style = bold, label=""];
14->4 [style = dotted, label="true"];
13->45 [style = solid, label="node1"];
14->4 [style = bold, label=""];
66->65 [style = bold, label=""];
44->54 [style = bold, label=""];
11->59 [style = bold, label=""];
48->41 [style = solid, label="mightSucceed"];
29->17 [style = bold, label=""];
25->52 [style = solid, label="capturedRequest1"];
34->40 [style = bold, label=""];
13->20 [style = solid, label="node1"];
13->67 [style = solid, label="node1"];
46->40 [style = solid, label="capturedRequest1a"];
45->51 [style = bold, label=""];
18->67 [style = solid, label="optionalJoin1"];
0->43 [style = bold, label=""];
68->63 [style = bold, label=""];
18->60 [style = bold, label=""];
69->11 [style = bold, label=""];
43->61 [style = bold, label=""];
48->58 [style = solid, label="mightSucceed"];
26->52 [style = bold, label=""];
48->52 [style = solid, label="mightSucceed"];
7->28 [style = bold, label=""];
0->49 [style = bold, label=""];
5->20 [style = solid, label="capturedRequests2a"];
64->5 [style = solid, label="capturedRequests1a"];
31->60 [style = dashed, label="0"];
18->31 [style = solid, label="optionalJoin1"];
18->60 [style = solid, label="optionalJoin1"];
14->27 [style = bold, label=""];
46->57 [style = bold, label=""];
62->69 [style = bold, label=""];
53->28 [style = bold, label=""];
37->42 [style = bold, label=""];
17->66 [style = dashed, label="0"];
36->24 [style = solid, label="optionalJoin2a"];
13->15 [style = solid, label="node1"];
13->31 [style = solid, label="node1"];
10->22 [style = bold, label=""];
20->41 [style = solid, label="capturedRequest2a"];
42->26 [style = bold, label=""];
18->45 [style = solid, label="optionalJoin1"];
23->16 [style = bold, label=""];
8->36 [style = solid, label="node2"];
32->21 [style = bold, label=""];
27->36 [style = bold, label=""];
16->11 [style = bold, label=""];
33->62 [style = bold, label=""];
63->33 [style = bold, label=""];
8->40 [style = solid, label="node2"];
26->5 [style = bold, label=""];
29->25 [style = solid, label="capturedRequests1"];
8->37 [style = solid, label="node2"];
21->33 [style = bold, label=""];
25->32 [style = bold, label=""];
41->56 [style = bold, label=""];
47->46 [style = bold, label=""];
28->1 [style = bold, label=""];
55->0 [style = bold, label=""];
8->68 [style = solid, label="node2"];
11->19 [style = bold, label=""];
58->44 [style = bold, label=""];
2->13 [style = bold, label=""];
20->10 [style = bold, label=""];
54->50 [style = bold, label=""];
13->32 [style = solid, label="node1"];
8->48 [style = bold, label=""];
64->26 [style = bold, label=""];
16->19 [style = solid, label="capturedRequests2"];
8->50 [style = solid, label="node2"];
19->34 [style = solid, label="capturedRequest2"];
58->44 [style = dotted, label="true"];
3->20 [style = bold, label=""];
0->18 [style = solid, label="localNode"];
40->41 [style = bold, label=""];
57->36 [style = bold, label=""];
8->35 [style = solid, label="node2"];
13->8 [style = bold, label=""];
6->9 [style = bold, label=""];
15->34 [style = solid, label="capturedRequests2a"];
13->42 [style = solid, label="node1"];
55->40 [style = solid, label="capturingTransport"];
}
