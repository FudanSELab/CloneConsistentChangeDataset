digraph {
3 [style = filled, label = "testCreateTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "boolean b = s.execute(\"create table t (i int not null)\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(b,is(false))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testDropType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(r.getInt(1),is(4))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "b = s.execute(\"drop type mytype1\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(x,is(1))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCreateTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "x = s.executeUpdate(\"insert into t values 3\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int x = s.executeUpdate(\"insert into t values 1\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(x,is(1))@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertThat(x,is(1))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(r.next(),is(false))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "b = s.execute(\"create table w (i int not null, j mytype)\")@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertThat(r.next(),is(true))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "b = s.execute(\"create type mytype as (i int)\")@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertThat(b,is(false))@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertThat(b,is(false))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(b,is(false))@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "boolean b = s.execute(\"create type mytype1 as BIGINT\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "x = s.executeUpdate(\"insert into w values (1, NULL)\")@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18->5 [style = solid, label="b"];
10->2 [style = bold, label=""];
6->4 [style = bold, label=""];
3->2 [style = bold, label=""];
7->1 [style = solid, label="x"];
11->15 [style = solid, label="b"];
0->7 [style = bold, label=""];
2->5 [style = bold, label=""];
18->5 [style = bold, label=""];
9->0 [style = solid, label="x"];
9->17 [style = dashed, label="0"];
2->18 [style = dashed, label="0"];
17->20 [style = solid, label="b"];
4->8 [style = bold, label=""];
9->0 [style = bold, label=""];
11->15 [style = bold, label=""];
5->9 [style = bold, label=""];
17->20 [style = bold, label=""];
1->6 [style = bold, label=""];
2->5 [style = solid, label="b"];
0->20 [style = dashed, label="0"];
16->14 [style = solid, label="x"];
5->17 [style = bold, label=""];
13->12 [style = bold, label=""];
13->12 [style = solid, label="b"];
16->14 [style = bold, label=""];
15->16 [style = bold, label=""];
8->13 [style = bold, label=""];
12->11 [style = bold, label=""];
7->1 [style = bold, label=""];
19->18 [style = bold, label=""];
}
