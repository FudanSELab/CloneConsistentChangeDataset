digraph {
29 [style = filled, label = "Assert.assertTrue(result)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testDrop['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "expectStateModelMap.put(\"TestDB0_3\",\"MASTER\")@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "boolean result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName,errStates))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "TestHelper.dropCluster(clusterName,_gZkClient)@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "expectStateModelMap.put(\"TestDB0_3\",\"MASTER\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "boolean result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "HelixStateMachineEngine stateMachine = (HelixStateMachineEngine)participants(0(.getStateMachineEngine()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "controller.syncStop()@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testDrop['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final String instanceName = \"localhost_\" + (12918 + i)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "partitions.add(\"TestDB0_0\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "MockParticipantManager(( participants = new MockParticipantManager((((@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int i = 0@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "expectStateModelMap.put(\"TestDB0_2\",\"SLAVE\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int i = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int n = 2@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,4,n,2,\"MasterSlave\",true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "errTransitionMap.put(\"OFFLINE-SLAVE\",partitions)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "HelixAdmin admin = new ZKHelixAdmin(_gZkClient)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "StateModelFactory<? extends StateModel> fty = stateMachine.getStateModelFactory(\"MasterSlave\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(fty.getPartitionSet(\"TestDB0\").isEmpty(),\"All state-models should be dropped, but was \" + fty.getPartitionSet(\"TestDB0\"))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Map<String,Map<String,String>> errStates = new HashMap<String,Map<String,String>>()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Set<String> partitions = new HashSet<String>()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "expectStateModelMap.put(\"TestDB0_1\",\"MASTER\")@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "participants(0(.setTransition(new ErrTransition(errTransitionMap))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "participants(i( = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "errStates.get(\"TestDB0\").put(\"TestDB0_0\",\"localhost_12918\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "participants(i(.syncStop()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "StateModelFactory<? extends StateModel> fty = stateMachine.getStateModelFactory(\"MasterSlave\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "i < n@@@46@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "errStates.put(\"TestDB0\",new HashMap<String,String>())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "HelixStateMachineEngine stateMachine = (HelixStateMachineEngine)participants(0(.getStateMachineEngine()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "controller.syncStart()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < n@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(result)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "participants(i(.syncStart()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i++@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "expectStateModelMap.put(\"TestDB0_0\",\"ERROR\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Map<String,String> expectStateModelMap = new TreeMap<String,String>()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "checkStateModelMap(fty,expectStateModelMap)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(result)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Map<String,Set<String>> errTransitionMap = new HashMap<String,Set<String>>()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "testDropErrorPartition['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "admin.dropResource(clusterName,\"TestDB0\")@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "i == 0@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
13->24 [style = dotted, label="true"];
7->32 [style = bold, label=""];
37->28 [style = bold, label=""];
3->48 [style = solid, label="clusterName"];
23->45 [style = bold, label=""];
5->16 [style = solid, label="result"];
27->9 [style = bold, label=""];
3->5 [style = solid, label="clusterName"];
3->17 [style = solid, label="clusterName"];
39->47 [style = dotted, label="true"];
47->10 [style = bold, label=""];
38->31 [style = bold, label=""];
23->5 [style = solid, label="expectStateModelMap"];
3->37 [style = solid, label="clusterName"];
46->48 [style = bold, label=""];
13->10 [style = dotted, label="true"];
50->47 [style = solid, label="errTransitionMap"];
21->18 [style = bold, label=""];
41->28 [style = bold, label=""];
13->51 [style = bold, label=""];
44->46 [style = bold, label=""];
29->11 [style = solid, label="i"];
52->47 [style = bold, label=""];
19->24 [style = solid, label="i"];
15->29 [style = solid, label="result"];
43->53 [style = bold, label=""];
24->17 [style = bold, label=""];
25->15 [style = bold, label=""];
2->11 [style = solid, label="n"];
40->31 [style = bold, label=""];
3->22 [style = solid, label="clusterName"];
39->50 [style = bold, label=""];
3->27 [style = solid, label="clusterName"];
13->39 [style = dotted, label="true"];
11->28 [style = bold, label=""];
13->17 [style = dotted, label="true"];
50->43 [style = bold, label=""];
10->14 [style = bold, label=""];
39->53 [style = dotted, label="true"];
53->52 [style = bold, label=""];
26->1 [style = bold, label=""];
18->11 [style = bold, label=""];
34->33 [style = bold, label=""];
51->44 [style = bold, label=""];
33->5 [style = solid, label="fty"];
11->37 [style = bold, label=""];
39->43 [style = dotted, label="true"];
9->8 [style = bold, label=""];
32->26 [style = bold, label=""];
11->18 [style = bold, label=""];
33->23 [style = bold, label=""];
3->4 [style = solid, label="clusterName"];
19->13 [style = bold, label=""];
3->2 [style = bold, label=""];
14->24 [style = solid, label="i"];
49->41 [style = dotted, label="true"];
17->39 [style = bold, label=""];
4->20 [style = solid, label="result"];
49->41 [style = bold, label=""];
2->12 [style = solid, label="n"];
23->7 [style = bold, label=""];
21->28 [style = solid, label="i"];
29->11 [style = bold, label=""];
15->29 [style = bold, label=""];
0->31 [style = bold, label=""];
17->10 [style = bold, label=""];
3->12 [style = solid, label="clusterName"];
13->24 [style = bold, label=""];
6->34 [style = bold, label=""];
39->50 [style = dotted, label="true"];
24->17 [style = solid, label="instanceName"];
11->21 [style = bold, label=""];
28->49 [style = bold, label=""];
2->13 [style = solid, label="n"];
36->3 [style = solid, label="methodName"];
45->32 [style = bold, label=""];
29->18 [style = solid, label="i"];
31->36 [style = bold, label=""];
17->14 [style = solid, label="i"];
34->45 [style = dashed, label="0"];
48->6 [style = bold, label=""];
6->32 [style = solid, label="expectStateModelMap"];
31->3 [style = solid, label="className"];
5->16 [style = bold, label=""];
3->28 [style = solid, label="clusterName"];
49->28 [style = dotted, label="true"];
19->13 [style = solid, label="i"];
30->35 [style = bold, label=""];
4->20 [style = bold, label=""];
18->11 [style = solid, label="i"];
21->49 [style = bold, label=""];
14->13 [style = bold, label=""];
18->21 [style = bold, label=""];
51->48 [style = solid, label="errStates"];
13->14 [style = dotted, label="true"];
12->27 [style = bold, label=""];
21->49 [style = solid, label="i"];
2->49 [style = solid, label="n"];
49->42 [style = bold, label=""];
14->13 [style = solid, label="i"];
39->52 [style = dotted, label="true"];
35->6 [style = bold, label=""];
8->19 [style = bold, label=""];
3->25 [style = solid, label="clusterName"];
16->25 [style = bold, label=""];
3->1 [style = solid, label="clusterName"];
11->18 [style = dotted, label="true"];
48->6 [style = solid, label="result"];
3->15 [style = solid, label="clusterName"];
43->52 [style = solid, label="partitions"];
28->49 [style = solid, label="i"];
35->32 [style = solid, label="fty"];
22->12 [style = bold, label=""];
39->10 [style = bold, label=""];
11->21 [style = dotted, label="true"];
2->22 [style = bold, label=""];
20->30 [style = bold, label=""];
3->42 [style = solid, label="clusterName"];
17->39 [style = solid, label="i"];
13->4 [style = bold, label=""];
36->3 [style = bold, label=""];
}
