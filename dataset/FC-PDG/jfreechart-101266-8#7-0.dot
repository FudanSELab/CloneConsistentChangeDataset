digraph {
17 [style = filled, label = "d1.addSeries(\"S1\",data1)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "double(( y1End = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25eb10@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "double(( x1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25eade@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(d1 != d2)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertFalse(d1.equals(d2))@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "DefaultIntervalXYDataset<String> d1 = new DefaultIntervalXYDataset<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testFindDomainBounds3['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "testCloning2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testFindDomainBounds3['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "double(((( data1 = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25eb1a@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "dataset.addSeries(\"S1\",data1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "double(( y1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25eafc@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "double(( y1Start = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25eb06@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "x1(0( = 111.1@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "double(( x1Start = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25eae8@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Range r = DatasetUtils.findDomainBounds(dataset,false)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DefaultIntervalXYDataset dataset = new DefaultIntervalXYDataset()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(1.0,r.getLowerBound(),EPSILON)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "DefaultIntervalXYDataset<String> dataset = new DefaultIntervalXYDataset<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "double(( x1End = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25eaf2@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "DefaultIntervalXYDataset<String> d2 = CloneUtils.clone(d1)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(3.0,r.getUpperBound(),EPSILON)@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(d1.equals(d2))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->15 [style = bold, label=""];
23->19 [style = solid, label="d2"];
23->16 [style = bold, label=""];
23->16 [style = solid, label="d2"];
3->17 [style = dashed, label="0"];
4->6 [style = bold, label=""];
9->17 [style = solid, label="data1"];
6->9 [style = solid, label="y1Start"];
13->10 [style = solid, label="dataset"];
9->17 [style = bold, label=""];
11->9 [style = solid, label="x1"];
15->19 [style = bold, label=""];
2->10 [style = solid, label="dataset"];
13->11 [style = bold, label=""];
17->23 [style = bold, label=""];
21->16 [style = solid, label="d1"];
3->10 [style = bold, label=""];
12->2 [style = bold, label=""];
7->5 [style = bold, label=""];
5->9 [style = solid, label="x1End"];
8->9 [style = solid, label="y1End"];
22->20 [style = bold, label=""];
21->11 [style = bold, label=""];
2->21 [style = dashed, label="0"];
9->3 [style = solid, label="data1"];
2->13 [style = dashed, label="0"];
0->1 [style = bold, label=""];
10->0 [style = bold, label=""];
5->4 [style = bold, label=""];
6->8 [style = bold, label=""];
4->9 [style = solid, label="y1"];
8->9 [style = bold, label=""];
7->9 [style = solid, label="x1Start"];
9->3 [style = bold, label=""];
21->23 [style = solid, label="d1"];
23->20 [style = solid, label="d2"];
14->13 [style = bold, label=""];
18->21 [style = bold, label=""];
19->22 [style = bold, label=""];
2->11 [style = bold, label=""];
11->7 [style = bold, label=""];
}
