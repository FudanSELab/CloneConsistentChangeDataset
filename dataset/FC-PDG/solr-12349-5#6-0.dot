digraph {
48 [style = filled, label = "List<StreamExpressionParameter> selectAsFieldsExpressions = factory.getOperandsOfType(expression,)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "0 == selectFieldsExpressions.size()@@@12@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - evaluators must be given a name, like 'add(...) as result' but found %d evaluators without names\",expression,evaluatorExpressions.size()))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "value = value.substring(1,value.length() - 1)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "RecordCountStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "SelectStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "handled = true@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "0 == selectAsFieldsExpressions.size()@@@13@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "SelectStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<StreamExpression> operationExpressions = factory.getExpressionOperandsRepresentingTypes(expression,)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "!handled@@@47@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "StreamExpression expression@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "stream = factory.constructStream(streamExpressions.get(0))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "operations = new ArrayList<>()@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "String asName = parts(1(.trim()@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "value.toLowerCase(Locale.ROOT).contains(\" as \")@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "StreamExpressionValue selectField = (StreamExpressionValue)parameter@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "StreamFactory factory@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "selectedFields.put(value,value)@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "factory.doesRepresentTypes(asValueExpression,)@@@39@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "stream = factory.constructStream(streamExpressions.get(0))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "selectedFields.put(asValue,asName)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "boolean handled = false@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least one select field but found %d\",expression,streamExpressions.size()))@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single stream but found %d (must be TupleStream types)\",expression,streamExpressions.size()))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "2 != parts.length@@@30@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "List<StreamExpressionParameter> selectFieldsExpressions = factory.getOperandsOfType(expression,)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "value.length() > 2 && value.startsWith(\"\"\") && value.endsWith(\"\"\")@@@25@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "{}@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "1 != streamExpressions.size()@@@7@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "asValue.contains(\"(\")@@@36@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "Throwable e@@@44@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "selectedEvaluators.put(factory.constructEvaluator(asValueExpression),asName)@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "selectedFields = new HashMap<String,String>()@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting select field of form 'fieldA' or 'fieldA as alias' but found %s\",expression,value))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "operations = new ArrayList<>()@@@55@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression,,)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "operations.add(factory.constructOperation(expr))@@@36@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String value = selectField.getValue().trim()@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "1 != streamExpressions.size()@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String(( parts = value.split(\"(?i) as \")@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StreamExpressionValue selectField = (StreamExpressionValue)parameter@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + selectFieldsExpressions.size() + operationExpressions.size()@@@6@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least one select field but found %d\",expression,streamExpressions.size()))@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "selectedEvaluators = new HashMap<StreamEvaluator,String>()@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "1 != streamExpressions.size()@@@9@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + selectAsFieldsExpressions.size() + operationExpressions.size()@@@7@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "0 != evaluatorExpressions.size()@@@16@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "stream = factory.constructStream(streamExpressions.get(0))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String(( parts = value.split(\"(?i) as \")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "expression.getParameters().size() != streamExpressions.size()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "operations.add(factory.constructOperation(expr))@@@57@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "StreamExpression asValueExpression = StreamExpressionParser.parse(asValue)@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "selectedFields.put(value,value)@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "StreamExpression expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String value = selectField.getValue().trim()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "String asValue = parts(0(.trim()@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "List<StreamExpression> evaluatorExpressions = factory.getExpressionOperandsRepresentingTypes(expression,)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4->51 [style = dashed, label="0"];
7->54 [style = dotted, label="true"];
24->31 [style = solid, label="expression"];
21->15 [style = dotted, label="true"];
15->6 [style = solid, label="expression"];
52->28 [style = dotted, label="true"];
43->35 [style = dotted, label="true"];
7->51 [style = dotted, label="true"];
24->19 [style = solid, label="expression"];
17->14 [style = dotted, label="false"];
24->38 [style = solid, label="expression"];
7->39 [style = dotted, label="true"];
15->1 [style = solid, label="expression"];
11->9 [style = bold, label=""];
45->30 [style = bold, label=""];
36->11 [style = bold, label=""];
49->22 [style = bold, label=""];
9->14 [style = solid, label="value"];
52->28 [style = bold, label=""];
13->59 [style = bold, label=""];
20->44 [style = dashed, label="0"];
21->24 [style = dotted, label="true"];
9->1 [style = solid, label="value"];
17->14 [style = bold, label=""];
43->35 [style = bold, label=""];
54->28 [style = solid, label="asName"];
40->47 [style = bold, label=""];
4->8 [style = bold, label=""];
55->11 [style = bold, label=""];
7->1 [style = dotted, label="true"];
18->13 [style = dotted, label="true"];
33->7 [style = bold, label=""];
50->29 [style = bold, label=""];
16->14 [style = solid, label="value"];
1->4 [style = bold, label=""];
19->18 [style = bold, label=""];
13->59 [style = dotted, label="true"];
7->1 [style = bold, label=""];
9->33 [style = bold, label=""];
51->54 [style = bold, label=""];
7->40 [style = dotted, label="true"];
15->2 [style = solid, label="expression"];
61->13 [style = bold, label=""];
46->36 [style = bold, label=""];
22->32 [style = bold, label=""];
44->50 [style = bold, label=""];
15->19 [style = solid, label="expression"];
9->17 [style = bold, label=""];
20->3 [style = bold, label=""];
12->48 [style = bold, label=""];
49->38 [style = bold, label=""];
44->26 [style = dotted, label="true"];
7->55 [style = bold, label=""];
60->13 [style = bold, label=""];
40->52 [style = dotted, label="true"];
17->23 [style = dotted, label="true"];
4->0 [style = bold, label=""];
15->12 [style = solid, label="expression"];
43->11 [style = bold, label=""];
24->62 [style = dashed, label="0"];
17->4 [style = solid, label="value"];
9->55 [style = solid, label="value"];
37->4 [style = dotted, label="true"];
22->20 [style = bold, label=""];
40->47 [style = dotted, label="true"];
57->12 [style = bold, label=""];
43->27 [style = bold, label=""];
55->27 [style = bold, label=""];
11->17 [style = bold, label=""];
14->8 [style = bold, label=""];
23->7 [style = bold, label=""];
62->61 [style = solid, label="expression"];
16->1 [style = solid, label="value"];
22->32 [style = dotted, label="true"];
59->56 [style = bold, label=""];
62->12 [style = solid, label="expression"];
12->60 [style = bold, label=""];
24->4 [style = solid, label="expression"];
22->44 [style = bold, label=""];
25->0 [style = bold, label=""];
13->10 [style = bold, label=""];
0->16 [style = bold, label=""];
30->43 [style = bold, label=""];
17->4 [style = dotted, label="true"];
2->3 [style = bold, label=""];
53->24 [style = dotted, label="true"];
6->48 [style = dashed, label="0"];
11->9 [style = dotted, label="true"];
24->48 [style = solid, label="expression"];
31->49 [style = bold, label=""];
7->4 [style = bold, label=""];
33->17 [style = dotted, label="true"];
51->47 [style = solid, label="asValue"];
50->29 [style = dotted, label="true"];
15->13 [style = solid, label="expression"];
22->59 [style = dashed, label="0"];
17->23 [style = bold, label=""];
53->42 [style = dotted, label="true"];
21->12 [style = bold, label=""];
54->39 [style = bold, label=""];
57->58 [style = dotted, label="true"];
52->43 [style = bold, label=""];
60->61 [style = bold, label=""];
18->10 [style = bold, label=""];
62->59 [style = solid, label="expression"];
39->40 [style = bold, label=""];
32->44 [style = bold, label=""];
25->46 [style = dashed, label="0"];
24->26 [style = solid, label="expression"];
40->43 [style = bold, label=""];
60->61 [style = dotted, label="true"];
47->52 [style = bold, label=""];
4->51 [style = bold, label=""];
34->43 [style = bold, label=""];
53->12 [style = bold, label=""];
1->37 [style = bold, label=""];
33->17 [style = bold, label=""];
9->4 [style = solid, label="value"];
54->35 [style = solid, label="asName"];
10->22 [style = bold, label=""];
47->28 [style = solid, label="asValueExpression"];
57->62 [style = dotted, label="true"];
35->27 [style = bold, label=""];
10->20 [style = bold, label=""];
16->11 [style = bold, label=""];
28->34 [style = bold, label=""];
37->51 [style = bold, label=""];
19->31 [style = bold, label=""];
3->25 [style = bold, label=""];
52->34 [style = dotted, label="true"];
51->35 [style = solid, label="asValue"];
29->25 [style = bold, label=""];
6->19 [style = bold, label=""];
25->46 [style = bold, label=""];
15->22 [style = solid, label="expression"];
12->6 [style = bold, label=""];
24->12 [style = solid, label="expression"];
37->4 [style = bold, label=""];
7->37 [style = dotted, label="true"];
47->52 [style = solid, label="asValueExpression"];
50->25 [style = bold, label=""];
20->2 [style = bold, label=""];
17->7 [style = bold, label=""];
24->29 [style = solid, label="expression"];
13->56 [style = bold, label=""];
14->0 [style = bold, label=""];
8->5 [style = bold, label=""];
44->26 [style = bold, label=""];
26->50 [style = bold, label=""];
7->55 [style = dotted, label="false"];
27->41 [style = bold, label=""];
18->13 [style = bold, label=""];
48->19 [style = bold, label=""];
10->22 [style = dotted, label="true"];
20->2 [style = dotted, label="true"];
17->7 [style = dotted, label="true"];
17->55 [style = solid, label="value"];
38->22 [style = bold, label=""];
7->43 [style = dotted, label="true"];
49->38 [style = dotted, label="true"];
24->32 [style = solid, label="expression"];
35->11 [style = bold, label=""];
}
