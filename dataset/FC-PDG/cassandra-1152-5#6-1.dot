digraph {
4 [style = filled, label = "final int quantas = Integer.parseInt(params.get(2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "params.size() != 1@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "getFactory['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "throw new IllegalArgumentException(\"Invalid parameter list for uniform distribution: \" + params)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return new QuantizedExtremeFactory(min,max,shape,scale,quantas)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "WeibullDistribution findBounds = new WeibullDistribution(shape,1d)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final double scale = (max - min) / findBounds.inverseCumulativeProbability(1d - Math.sqrt(1d / (max - min)))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new IllegalArgumentException(\"Invalid parameter list for quantized extreme (Weibull) distribution: \" + params)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "getFactory['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "params.size() != 3@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "return new UniformFactory(min,max)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<String> params@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final long max = parseLong(bounds(1()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final long min = parseLong(bounds(0()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final double shape = Double.parseDouble(params.get(1))@@@8@@@['1', '1', '0']", fillcolor = white, shape = Double.parseDouble(params.get(1))@@@8@@@", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String(( bounds = params.get(0).split(\"\.\.+\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "getFactory['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9->2 [style = solid, label="max"];
10->15 [style = dashed, label="0"];
14->3 [style = bold, label=""];
6->3 [style = bold, label=""];
5->10 [style = bold, label=""];
16->15 [style = bold, label=""];
10->6 [style = dotted, label="true"];
9->17 [style = solid, label="max"];
9->11 [style = bold, label=""];
15->14 [style = bold, label=""];
8->17 [style = solid, label="min"];
11->4 [style = bold, label=""];
1->2 [style = solid, label="scale"];
10->3 [style = bold, label=""];
9->17 [style = bold, label=""];
8->1 [style = solid, label="min"];
13->7 [style = dotted, label="true"];
15->14 [style = dotted, label="true"];
3->8 [style = solid, label="bounds"];
11->0 [style = solid, label="shape"];
15->3 [style = bold, label=""];
10->6 [style = bold, label=""];
4->0 [style = bold, label=""];
7->10 [style = solid, label="params"];
7->14 [style = solid, label="params"];
8->2 [style = solid, label="min"];
16->7 [style = dotted, label="true"];
7->6 [style = solid, label="params"];
12->10 [style = bold, label=""];
13->12 [style = bold, label=""];
12->10 [style = dotted, label="true"];
11->2 [style = solid, label="shape"];
5->7 [style = dotted, label="true"];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
8->9 [style = bold, label=""];
1->2 [style = bold, label=""];
12->3 [style = bold, label=""];
9->1 [style = solid, label="max"];
4->2 [style = solid, label="quantas"];
3->9 [style = solid, label="bounds"];
}
