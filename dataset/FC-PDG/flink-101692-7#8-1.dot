digraph {
15 [style = filled, label = "Exception e@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testShowExecutionPlan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "fail(\"Program caused an exception: \" + e.getMessage())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testShowExecutionPlan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "e.printStackTrace()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String(( parameters = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b401ba@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{restoreStdOut()}@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "{restoreStdOut()}@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertTrue(buffer.toString().contains(\"\"parallelism\": \"17\"\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testShowExecutionPlanWithParallelism['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "CliFrontend testFrontend = new CliFrontend(configuration,Collections.singletonList(new DefaultCLI(configuration)))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertTrue(buffer.toString().contains(\"\"parallelism\": \"1\"\"))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Configuration configuration = new Configuration()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "String(( parameters = {\"-p\",\"17\",CliFrontendTestUtils.getTestJarPath()}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "replaceStdOut()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CliFrontend testFrontend = new CliFrontend(new Configuration(),Collections.singletonList(new DefaultCLI()),CliFrontendTestUtils.getConfigDir())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testFrontend.info(parameters)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testFrontend.info(parameters)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
17->5 [style = bold, label=""];
11->10 [style = solid, label="configuration"];
4->16 [style = dashed, label="0"];
0->6 [style = solid, label="parameters"];
15->14 [style = bold, label=""];
9->2 [style = bold, label=""];
0->11 [style = bold, label=""];
17->6 [style = solid, label="parameters"];
15->14 [style = dotted, label="true"];
7->8 [style = bold, label=""];
0->17 [style = dashed, label="0"];
4->7 [style = bold, label=""];
13->1 [style = bold, label=""];
15->13 [style = dotted, label="true"];
6->4 [style = bold, label=""];
12->2 [style = bold, label=""];
2->0 [style = bold, label=""];
0->4 [style = solid, label="parameters"];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
16->1 [style = bold, label=""];
11->10 [style = bold, label=""];
6->16 [style = bold, label=""];
10->4 [style = bold, label=""];
4->1 [style = bold, label=""];
14->13 [style = bold, label=""];
0->5 [style = bold, label=""];
}
