digraph {
20 [style = filled, label = "testConsumerConfigsWithClientOverrides['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "expectedConfigs.put(\"client.id\",\"connector-consumer-test-1\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThrows(,null)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "expectedConfigs.put(\"max.poll.records\",\"5000\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "expectedConfigs.put(\"auto.offset.reset\",\"latest\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "WorkerConfig configWithOverrides = new StandaloneConfig(props)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testConsumerConfigsClientOverridesWithNonePolicy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "connConfig.put(\"max.poll.records\",\"5000\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(expectedConfigs,Worker.consumerConfigs(new ConnectorTaskId(\"test\",1),configWithOverrides,connectorConfig,null,allConnectorClientConfigOverridePolicy,CLUSTER_ID))@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "expectedConfigs.put(\"metrics.context.connect.kafka.cluster.id\",CLUSTER_ID)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "expectedConfigs.put(\"group.id\",\"connect-test\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Worker.consumerConfigs(new ConnectorTaskId(\"test\",1),configWithOverrides,connectorConfig,null,noneConnectorClientConfigOverridePolicy,CLUSTER_ID)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_CONSUMER_OVERRIDES_PREFIX)).andReturn(connConfig)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Map<String,Object> connConfig = new HashMap<String,Object>()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectedConfigs.put(\"max.poll.interval.ms\",\"1000\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "PowerMock.replayAll()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "props.put(\"consumer.auto.offset.reset\",\"latest\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Map<String,String> expectedConfigs = new HashMap<>(defaultConsumerConfigs)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "connConfig.put(\"max.poll.interval.ms\",\"1000\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "props.put(\"consumer.max.poll.records\",\"5000\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,String> props = new HashMap<>(workerProps)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testConsumerConfigsClientOverridesWithNonePolicy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->3 [style = bold, label=""];
15->14 [style = bold, label=""];
0->6 [style = bold, label=""];
7->10 [style = bold, label=""];
9->3 [style = solid, label="configWithOverrides"];
4->13 [style = bold, label=""];
20->0 [style = bold, label=""];
18->19 [style = bold, label=""];
2->9 [style = bold, label=""];
16->17 [style = bold, label=""];
9->8 [style = bold, label=""];
3->13 [style = dashed, label="0"];
12->0 [style = bold, label=""];
1->7 [style = bold, label=""];
0->9 [style = solid, label="props"];
9->13 [style = solid, label="configWithOverrides"];
6->2 [style = bold, label=""];
8->1 [style = bold, label=""];
9->18 [style = bold, label=""];
5->0 [style = bold, label=""];
17->15 [style = bold, label=""];
10->4 [style = bold, label=""];
21->16 [style = bold, label=""];
14->8 [style = bold, label=""];
8->10 [style = solid, label="connConfig"];
4->11 [style = bold, label=""];
18->13 [style = solid, label="expectedConfigs"];
3->11 [style = dashed, label="0"];
19->21 [style = bold, label=""];
}
