digraph {
14 [style = filled, label = "List<Queue.Item> queueItems = newQueueItems(25,26)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<ModelObject> runs = newRuns(1,10)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(10),historyPageFilter.newestOnPage)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "historyPageFilter.add(runs,queueItems)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "test_newerThan_doesntIncludeQueuedItems['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,5L,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(1,historyPageFilter.runs.size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(6),historyPageFilter.oldestOnPage)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(5,historyPageFilter.runs.size())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<Queue.Item> queueItems = newQueueItems(11,12)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,null,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "historyPageFilter.setSearchString(\"23\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(23),historyPageFilter.runs.get(0).getEntryId())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(0,historyPageFilter.queueItems.size())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(historyPageFilter.hasDownPage)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "test_search_runs_by_build_number['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "test_newerThan_doesntIncludeQueuedItems['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Iterable<ModelObject> runs = newRuns(1,10)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "List<ModelObject> runs = newRuns(23,24)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(10),historyPageFilter.runs.get(0).getEntryId())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "historyPageFilter.add(runs,queueItems)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
1->8 [style = bold, label=""];
12->5 [style = bold, label=""];
11->1 [style = bold, label=""];
6->20 [style = dashed, label="0"];
10->19 [style = dashed, label="0"];
10->7 [style = solid, label="runs"];
10->13 [style = dashed, label="0"];
16->19 [style = bold, label=""];
2->4 [style = bold, label=""];
0->7 [style = bold, label=""];
6->2 [style = bold, label=""];
2->15 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
6->20 [style = bold, label=""];
0->14 [style = dashed, label="0"];
3->5 [style = bold, label=""];
19->14 [style = bold, label=""];
18->6 [style = bold, label=""];
19->6 [style = solid, label="runs"];
13->7 [style = solid, label="runs"];
5->13 [style = bold, label=""];
14->6 [style = solid, label="queueItems"];
10->0 [style = bold, label=""];
7->6 [style = bold, label=""];
8->9 [style = bold, label=""];
14->18 [style = bold, label=""];
0->7 [style = solid, label="queueItems"];
4->11 [style = bold, label=""];
20->15 [style = bold, label=""];
17->16 [style = bold, label=""];
13->0 [style = bold, label=""];
}
