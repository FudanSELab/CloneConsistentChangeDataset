digraph {
12 [style = filled, label = "throw new RequiredRuleMissedException(\"Database discovery\",schemaName,notExistedRuleNames)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "final String schemaName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "final DropReadwriteSplittingRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "checkToBeDroppedRuleNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final String schemaName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final DropDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "checkToBeDroppedRuleNames['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final DropDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "checkToBeDroppedRuleNames['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final ReadwriteSplittingRuleConfiguration currentRuleConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "throw new CurrentRuleNotExistedException(\"Database discovery\",schemaName,notExistedRuleNames)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "Collection<String> currentRuleNames = currentRuleConfig.getDataSources().stream().map(null).collect(Collectors.toList())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "throw new CurrentRuleNotExistedException(\"Readwrite splitting\",schemaName,sqlStatement.getRuleNames())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Collection<String> notExistedRuleNames = sqlStatement.getRuleNames().stream().filter(null).collect(Collectors.toList())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "!notExistedRuleNames.isEmpty()@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final DatabaseDiscoveryRuleConfiguration currentRuleConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final String schemaName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Collection<String> currentRuleNames = currentRuleConfig.getDataSources().stream().map(null).collect(Collectors.toList())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final DatabaseDiscoveryRuleConfiguration currentRuleConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
7->6 [style = dotted, label="true"];
7->1 [style = bold, label=""];
3->4 [style = solid, label="notExistedRuleNames"];
4->16 [style = dashed, label="0"];
11->1 [style = bold, label=""];
11->10 [style = dotted, label="true"];
1->3 [style = bold, label=""];
11->9 [style = dotted, label="true"];
7->0 [style = dotted, label="true"];
2->4 [style = bold, label=""];
2->12 [style = bold, label=""];
4->12 [style = dashed, label="0"];
6->10 [style = dashed, label="0"];
7->5 [style = dotted, label="true"];
6->18 [style = dashed, label="0"];
1->13 [style = dashed, label="0"];
14->17 [style = dotted, label="true"];
14->15 [style = dotted, label="true"];
3->2 [style = bold, label=""];
13->3 [style = bold, label=""];
2->4 [style = dotted, label="true"];
3->12 [style = solid, label="notExistedRuleNames"];
2->12 [style = dotted, label="true"];
8->12 [style = solid, label="schemaName"];
11->8 [style = dotted, label="true"];
0->4 [style = solid, label="schemaName"];
14->13 [style = bold, label=""];
18->16 [style = solid, label="schemaName"];
14->18 [style = dotted, label="true"];
2->16 [style = dotted, label="true"];
2->16 [style = bold, label=""];
}
