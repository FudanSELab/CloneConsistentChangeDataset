digraph {
20 [style = filled, label = "DefaultIntervalXYDataset dataset = new DefaultIntervalXYDataset()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "x1(0( = 111.1@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "double(((( data1 = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25e9c4@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(3.0,r.getUpperBound(),EPSILON)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(d1 != d2)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DefaultIntervalXYDataset d1 = new DefaultIntervalXYDataset()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "d1.addSeries(\"S1\",data1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Range r = DatasetUtils.findDomainBounds(dataset,false)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "double(( x1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25e988@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "double(( x1Start = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25e992@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testFindDomainBounds3['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "DefaultIntervalXYDataset d2 = CloneUtils.clone(d1)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "testCloning2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "double(( y1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25e9a6@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "double(( y1Start = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25e9b0@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DefaultIntervalXYDataset<String> d2 = CloneUtils.clone(d1)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertFalse(d1.equals(d2))@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(1.0,r.getLowerBound(),EPSILON)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "double(( x1End = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25e99c@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(d1.equals(d2))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCloning2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "dataset.addSeries(\"S1\",data1)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "DefaultIntervalXYDataset<String> d1 = new DefaultIntervalXYDataset<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "double(( y1End = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@25e9ba@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
12->13 [style = solid, label="y1"];
23->20 [style = bold, label=""];
24->19 [style = bold, label=""];
2->20 [style = dashed, label="0"];
15->7 [style = bold, label=""];
7->16 [style = dashed, label="0"];
17->16 [style = solid, label="d1"];
4->13 [style = bold, label=""];
20->0 [style = bold, label=""];
8->13 [style = solid, label="y1Start"];
5->24 [style = dashed, label="0"];
22->21 [style = bold, label=""];
18->17 [style = bold, label=""];
13->15 [style = solid, label="data1"];
21->24 [style = bold, label=""];
15->16 [style = bold, label=""];
2->17 [style = dashed, label="0"];
17->5 [style = solid, label="d1"];
13->22 [style = solid, label="data1"];
10->6 [style = bold, label=""];
11->2 [style = bold, label=""];
15->22 [style = dashed, label="0"];
0->13 [style = solid, label="x1"];
3->9 [style = bold, label=""];
5->1 [style = bold, label=""];
2->5 [style = solid, label="d1"];
10->13 [style = solid, label="x1Start"];
0->10 [style = bold, label=""];
2->0 [style = bold, label=""];
7->5 [style = bold, label=""];
17->0 [style = bold, label=""];
16->14 [style = solid, label="d2"];
12->8 [style = bold, label=""];
4->13 [style = solid, label="y1End"];
7->9 [style = solid, label="d2"];
7->5 [style = solid, label="d2"];
16->9 [style = solid, label="d2"];
16->5 [style = bold, label=""];
16->5 [style = solid, label="d2"];
1->14 [style = bold, label=""];
13->15 [style = bold, label=""];
13->22 [style = bold, label=""];
8->4 [style = bold, label=""];
20->21 [style = solid, label="dataset"];
7->14 [style = solid, label="d2"];
6->13 [style = solid, label="x1End"];
2->7 [style = solid, label="d1"];
6->12 [style = bold, label=""];
}
