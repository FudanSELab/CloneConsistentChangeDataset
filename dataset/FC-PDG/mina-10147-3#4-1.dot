digraph {
9 [style = filled, label = "final byte(( data@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "int port@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "client.getSessionConfig().setSendBufferSize(64 * 1024)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final CountDownLatch counter@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "start['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final byte(( data@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "client.connect(new InetSocketAddress(port))@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int port@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int port@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "start['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "client.setIoHandler(new IoHandler(){private void sendMessage(IoSession session,byte(( data){ByteBuffer iobuf = ByteBuffer.wrap(data)session.write(iobuf)}public void sessionOpened(IoSession session){sendMessage(session,data)}public void messageReceived(IoSession session,Object message){if (message instanceof ByteBuffer) {ByteBuffer buffer = (ByteBuffer)messagefor (int i = 0 i < buffer.remaining() ++i){counter.countDown()long count = counter.getCount()if (count > 0) {sendMessage(session,data)}}}}public void exceptionCaught(IoSession session,Exception cause){cause.printStackTrace()}@Override public void sessionClosed(IoSession session){}@Override public void sessionIdle(IoSession session,IdleStatus status){}@Override public void messageSent(IoSession session,Object message){}@Override public void serviceActivated(IoService service){}@Override public void serviceInactivated(IoService service){}})@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "IoSession session = future.get()@@@43@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "udpClient.setIoHandler(new IoHandler(){private void sendMessage(IoSession session,byte(( data){ByteBuffer iobuf = ByteBuffer.wrap(data)session.write(iobuf)}public void sessionOpened(IoSession session){sendMessage(session,data)}public void messageReceived(IoSession session,Object message){if (message instanceof ByteBuffer) {ByteBuffer buffer = (ByteBuffer)messagefor (int i = 0 i < buffer.remaining() ++i){counter.countDown()long count = counter.getCount()if (count > 0) {sendMessage(session,data)}}}}public void exceptionCaught(IoSession session,Exception cause){cause.printStackTrace()}@Override public void sessionClosed(IoSession session){}@Override public void sessionIdle(IoSession session,IdleStatus status){}@Override public void messageSent(IoSession session,Object message){}@Override public void serviceActivated(IoService service){}@Override public void serviceInactivated(IoService service){}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "client = new NioTcpClient()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "IoFuture<IoSession> future = udpClient.connect(new InetSocketAddress(port))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final CountDownLatch counter@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "start['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "udpClient = new NioUdpClient()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "client.setIoHandler(new AbstractIoHandler(){private void sendMessage(IoSession session,byte(( data){ByteBuffer iobuf = ByteBuffer.wrap(data)session.write(iobuf)}public void sessionOpened(IoSession session){sendMessage(session,data)}public void messageReceived(IoSession session,Object message){if (message instanceof ByteBuffer) {ByteBuffer buffer = (ByteBuffer)messagefor (int i = 0 i < buffer.remaining() ++i){counter.countDown()long count = counter.getCount()if (count > 0) {sendMessage(session,data)}}}}public void exceptionCaught(IoSession session,Exception cause){cause.printStackTrace()}@Override public void sessionClosed(IoSession session){}@Override public void sessionIdle(IoSession session,IdleStatus status){}@Override public void messageSent(IoSession session,Object message){}@Override public void serviceActivated(IoService service){}@Override public void serviceInactivated(IoService service){}})@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "client.getSessionConfig().setTcpNoDelay(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->16 [style = solid, label="port"];
10->8 [style = solid, label="port"];
12->3 [style = dotted, label="true"];
8->16 [style = dashed, label="0"];
17->18 [style = dotted, label="true"];
6->1 [style = dotted, label="true"];
7->11 [style = dashed, label="0"];
0->8 [style = solid, label="port"];
15->19 [style = bold, label=""];
7->8 [style = bold, label=""];
17->3 [style = dotted, label="true"];
9->11 [style = solid, label="data"];
19->16 [style = bold, label=""];
6->4 [style = bold, label=""];
5->2 [style = bold, label=""];
12->10 [style = dotted, label="true"];
12->4 [style = bold, label=""];
4->15 [style = dashed, label="0"];
17->15 [style = bold, label=""];
13->19 [style = solid, label="data"];
11->8 [style = bold, label=""];
16->14 [style = bold, label=""];
6->0 [style = dotted, label="true"];
3->7 [style = solid, label="data"];
2->7 [style = bold, label=""];
6->3 [style = dotted, label="true"];
17->13 [style = dotted, label="true"];
4->5 [style = bold, label=""];
2->11 [style = bold, label=""];
12->9 [style = dotted, label="true"];
}
