digraph {
3 [style = filled, label = "double(((( data1 = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1dba06@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(d2.equals(d1))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "d.addSeries(\"S2\",data2)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "double(( y2 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1dba20@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "double(( x2 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1dba16@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "createSampleDataset1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "double(( y1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1db9f2@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFalse(d1.equals(d2))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(d1.equals(d2))@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "d.addSeries(\"S1\",data1)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DefaultXYZDataset d2 = new DefaultXYZDataset()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "double(( z1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1db9fc@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "DefaultXYZDataset<String> d1 = new DefaultXYZDataset<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "double(( x1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1db9e8@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "double(( z2 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1dba2a@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DefaultXYZDataset d1 = new DefaultXYZDataset()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "DefaultXYZDataset d = new DefaultXYZDataset()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "DefaultXYZDataset<String> d2 = new DefaultXYZDataset<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "d2.addSeries(\"S1\",data2)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "double(((( data2 = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1dba34@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return d@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(d1.equals(d2))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "d1.addSeries(\"S1\",data1)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->6 [style = solid, label="d1"];
4->3 [style = bold, label=""];
4->3 [style = solid, label="z1"];
23->20 [style = bold, label=""];
19->18 [style = bold, label=""];
16->11 [style = bold, label=""];
12->23 [style = dashed, label="0"];
3->15 [style = solid, label="data1"];
21->0 [style = solid, label="x2"];
1->0 [style = solid, label="y2"];
15->21 [style = bold, label=""];
8->10 [style = solid, label="data2"];
17->5 [style = solid, label="d2"];
11->6 [style = bold, label=""];
1->8 [style = solid, label="x2"];
18->17 [style = bold, label=""];
8->14 [style = bold, label=""];
3->15 [style = bold, label=""];
12->16 [style = bold, label=""];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
22->23 [style = bold, label=""];
1->13 [style = bold, label=""];
2->12 [style = bold, label=""];
20->3 [style = solid, label="x1"];
17->9 [style = solid, label="d2"];
0->8 [style = solid, label="z2"];
7->3 [style = solid, label="y1"];
13->0 [style = solid, label="z2"];
3->15 [style = solid, label="z1"];
7->15 [style = solid, label="x1"];
18->6 [style = solid, label="d1"];
4->15 [style = solid, label="y1"];
10->5 [style = bold, label=""];
16->11 [style = solid, label="d2"];
15->14 [style = solid, label="data1"];
15->1 [style = bold, label=""];
21->1 [style = bold, label=""];
0->8 [style = bold, label=""];
16->9 [style = solid, label="d2"];
23->24 [style = solid, label="d"];
14->8 [style = dashed, label="0"];
16->5 [style = solid, label="d2"];
12->18 [style = dashed, label="0"];
14->9 [style = bold, label=""];
16->17 [style = dashed, label="0"];
20->7 [style = bold, label=""];
6->7 [style = bold, label=""];
17->11 [style = solid, label="d2"];
13->8 [style = solid, label="y2"];
0->8 [style = solid, label="data2"];
13->0 [style = bold, label=""];
17->11 [style = bold, label=""];
8->24 [style = bold, label=""];
}
