digraph {
2 [style = filled, label = "{FreeStyleProject p = r.createFreeStyleProject()p.addProperty(new KeywordProperty(new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD),new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD)))p.save()r.jenkins.setSecurityRealm(r.createDummySecurityRealm())WebClient wc = r.createWebClient()wc.withBasicApiToken(test)WebRequest req = new WebRequest(new URL(wc.getContextPath() + String.format(\"%s/config.xml\",p.getUrl())),HttpMethod.POST)req.setEncodingType(null)req.setRequestBody(String.format(CONFIGURATION_TEMPLATE,AcceptOnlySpecificKeyword.ACCEPT_KEYWORD,\"badvalue\"))try {wc.getPage(req)fail(\"Submitting unacceptable configuration via REST should fail.\")}catch (FailingHttpStatusCodeException e) assertNotEquals(\"badvalue\",p.getProperty().getCriticalField().getKeyword())r.jenkins.reload()p = r.jenkins.getItemByFullName(p.getFullName(),)assertNotEquals(\"badvalue\",p.getProperty().getCriticalField().getKeyword())}@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{FreeStyleProject p = r.createFreeStyleProject()p.addProperty(new KeywordProperty(new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD),new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD)))p.save()r.jenkins.setSecurityRealm(r.createDummySecurityRealm())CLICommandInvoker.Result ret = new CLICommandInvoker(r,\"update-job\").withStdin(new ByteArrayInputStream(String.format(CONFIGURATION_TEMPLATE,\"badvalue\",AcceptOnlySpecificKeyword.ACCEPT_KEYWORD).getBytes())).withArgs(p.getFullName(),\"--username\",\"test\",\"--password\",\"test\").invoke()assertEquals(0,ret.returnCode())assertNull(p.getProperty().getNonCriticalField())assertEquals(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD,p.getProperty().getCriticalField().getKeyword())r.jenkins.reload()p = r.jenkins.getItemByFullName(p.getFullName(),)assertEquals(\"badvalue\",p.getProperty().getNonCriticalField().getKeyword())}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testRestInterfaceFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "{FreeStyleProject p = r.createFreeStyleProject()p.addProperty(new KeywordProperty(new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD),new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD)))p.save()r.jenkins.setSecurityRealm(r.createDummySecurityRealm())CLICommandInvoker.Result ret = new CLICommandInvoker(r,\"update-job\").withStdin(new ByteArrayInputStream(String.format(CONFIGURATION_TEMPLATE,AcceptOnlySpecificKeyword.ACCEPT_KEYWORD,\"badvalue\").getBytes())).withArgs(p.getFullName(),\"--username\",\"test\",\"--password\",\"test\").invoke()assertNotEquals(0,ret.returnCode())assertNotEquals(\"badvalue\",p.getProperty().getCriticalField().getKeyword())r.jenkins.reload()p = r.jenkins.getItemByFullName(p.getFullName(),)assertNotEquals(\"badvalue\",p.getProperty().getCriticalField().getKeyword())}@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testRestInterfaceFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "testCliFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Items.XSTREAM2.addCriticalField(,\"criticalField\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "User test = User.getById(\"test\",true)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1->7 [style = bold, label=""];
5->1 [style = solid, label="test"];
0->3 [style = bold, label=""];
5->2 [style = solid, label="test"];
4->3 [style = bold, label=""];
1->2 [style = bold, label=""];
6->3 [style = bold, label=""];
3->5 [style = bold, label=""];
3->1 [style = bold, label=""];
1->2 [style = solid, label="req"];
5->1 [style = bold, label=""];
}
