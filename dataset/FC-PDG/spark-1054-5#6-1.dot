digraph {
16 [style = filled, label = "!clientChannel.outboundMessages().isEmpty()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testServerToClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Message msg@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(1,clientChannel.inboundMessages().size())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EmbeddedChannel clientChannel = new EmbeddedChannel(new FileRegionEncoder(),MessageEncoder.INSTANCE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(msg,serverChannel.readInbound())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "clientChannel.writeOutbound(msg)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(1,serverChannel.inboundMessages().size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "serverChannel.writeOutbound(msg)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Message msg@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "clientChannel.writeInbound(serverChannel.readOutbound())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "clientChannel.writeOneInbound(serverChannel.readOutbound())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "serverChannel.writeInbound(clientChannel.readOutbound())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "EmbeddedChannel serverChannel = new EmbeddedChannel(NettyUtils.createFrameDecoder(),MessageDecoder.INSTANCE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "EmbeddedChannel clientChannel = new EmbeddedChannel(NettyUtils.createFrameDecoder(),MessageDecoder.INSTANCE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(msg,clientChannel.readInbound())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testClientToServer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "!serverChannel.outboundMessages().isEmpty()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testServerToClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EmbeddedChannel serverChannel = new EmbeddedChannel(new FileRegionEncoder(),MessageEncoder.INSTANCE)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
0->9 [style = bold, label=""];
16->13 [style = bold, label=""];
5->12 [style = dashed, label="0"];
9->0 [style = bold, label=""];
16->13 [style = dotted, label="true"];
1->14 [style = dashed, label="0"];
0->6 [style = bold, label=""];
6->9 [style = dashed, label="0"];
0->16 [style = dashed, label="0"];
18->17 [style = bold, label=""];
10->3 [style = dotted, label="true"];
6->0 [style = bold, label=""];
1->0 [style = bold, label=""];
7->4 [style = bold, label=""];
16->19 [style = bold, label=""];
0->6 [style = dotted, label="true"];
2->17 [style = dashed, label="0"];
13->16 [style = bold, label=""];
8->3 [style = dotted, label="true"];
11->15 [style = solid, label="msg"];
0->7 [style = bold, label=""];
3->5 [style = solid, label="msg"];
5->1 [style = bold, label=""];
18->11 [style = dotted, label="true"];
17->12 [style = bold, label=""];
6->13 [style = dashed, label="0"];
8->2 [style = bold, label=""];
7->19 [style = dashed, label="0"];
4->15 [style = dashed, label="0"];
12->14 [style = bold, label=""];
11->12 [style = solid, label="msg"];
10->2 [style = bold, label=""];
3->4 [style = solid, label="msg"];
19->15 [style = bold, label=""];
0->9 [style = dotted, label="true"];
3->11 [style = dashed, label="0"];
2->5 [style = bold, label=""];
}
