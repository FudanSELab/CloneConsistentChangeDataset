digraph {
27 [style = filled, label = "final String content@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testCopyToSymlinkedSelf['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final File file@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertSizeAndContent(new File(symlinkedTestDir,\"sylmink-file.txt\"),originalFileSize,originalContent)@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertSizeAndContent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final File testDir = new File(buildRule.getProject().getProperty(\"self.copy.test.root.dir\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String originalContent@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testCopyToSymlinkedSelf['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertEquals(\"Unexpected size of file \" + file,expectedSize,file.length())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "buildRule.executeTarget(\"setupSelfCopyTesting\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "buildRule.executeTarget(\"testSelfCopy\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertSizeAndContent(new File(symlinkedTestDir,\"file.txt\"),originalFileSize,originalContent)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assumeTrue(\"Symlinks not supported on this operating system\",Os.isFamily(Os.FAMILY_UNIX))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(testDir + \" was expected to be a directory\",testDir.isDirectory())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final File srcFile = new File(testDir,\"file.txt\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(\"Content missing in file \" + srcFile,originalContent != null && !originalContent.isEmpty())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "final String expectedContent@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(symlinkedTestDir + \" was expected to be a directory\",symlinkedTestDir.isDirectory())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(\"Content missing in file \" + srcFile,originalContent != null && originalContent.length() > 0)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "originalContent = FileUtils.readFully(reader)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final long expectedSize@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final File symlinkedFile = new File(testDir,\"sylmink-file.txt\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final File symlinkedTestDir = new File(buildRule.getProject().getProperty(\"self.copy.test.symlinked.dir\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(\"Unexpected content in file \" + file,expectedContent,content)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertTrue(file + \" was expected to be a file\",file.isFile())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(\"Source file \" + srcFile + \" was expected to be a file\",srcFile.isFile())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertSizeAndContent(symlinkedFile,originalFileSize,originalContent)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final long originalFileSize = srcFile.length()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertSizeAndContent(srcFile,originalFileSize,originalContent)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(symlinkedFile + \" was expected to be a file\",symlinkedFile.isFile())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "content = FileUtils.readFully(reader)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->2 [style = solid, label="symlinkedTestDir"];
17->4 [style = solid, label="symlinkedTestDir"];
10->21 [style = dashed, label="0"];
28->30 [style = bold, label=""];
16->15 [style = solid, label="originalFileSize"];
14->10 [style = solid, label="originalContent"];
23->30 [style = solid, label="file"];
14->15 [style = solid, label="originalContent"];
17->12 [style = solid, label="symlinkedTestDir"];
27->28 [style = bold, label=""];
26->25 [style = bold, label=""];
18->11 [style = bold, label=""];
16->7 [style = bold, label=""];
14->10 [style = bold, label=""];
10->3 [style = bold, label=""];
1->18 [style = bold, label=""];
26->23 [style = dotted, label="true"];
23->25 [style = solid, label="file"];
20->1 [style = bold, label=""];
25->29 [style = bold, label=""];
11->19 [style = bold, label=""];
26->22 [style = dotted, label="true"];
16->12 [style = solid, label="originalFileSize"];
14->8 [style = solid, label="originalContent"];
2->12 [style = bold, label=""];
13->15 [style = solid, label="symlinkedFile"];
23->29 [style = solid, label="file"];
7->14 [style = bold, label=""];
19->5 [style = bold, label=""];
16->4 [style = solid, label="originalFileSize"];
29->27 [style = bold, label=""];
5->21 [style = solid, label="srcFile"];
15->17 [style = bold, label=""];
5->10 [style = solid, label="srcFile"];
14->21 [style = solid, label="originalContent"];
22->30 [style = solid, label="expectedContent"];
5->6 [style = bold, label=""];
17->2 [style = bold, label=""];
12->4 [style = bold, label=""];
14->12 [style = solid, label="originalContent"];
5->8 [style = solid, label="srcFile"];
24->29 [style = solid, label="expectedSize"];
6->16 [style = bold, label=""];
9->15 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
28->30 [style = solid, label="content"];
26->24 [style = dotted, label="true"];
16->8 [style = solid, label="originalFileSize"];
14->4 [style = solid, label="originalContent"];
11->19 [style = solid, label="testDir"];
13->9 [style = bold, label=""];
13->9 [style = solid, label="symlinkedFile"];
11->5 [style = solid, label="testDir"];
14->21 [style = bold, label=""];
8->13 [style = bold, label=""];
5->6 [style = solid, label="srcFile"];
21->3 [style = bold, label=""];
11->13 [style = solid, label="testDir"];
}
