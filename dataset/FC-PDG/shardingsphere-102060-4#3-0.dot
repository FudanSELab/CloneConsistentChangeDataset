digraph {
6 [style = filled, label = "assertNotNull(assertContext.getText(\"Actual dataSource should exist.\"),actual)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(assertContext.getText(String.format(\"`%s`'s datasource segment assertion error: \",actual.getClass().getSimpleName())),actual.getDb(),CoreMatchers.is(expected.getDb()))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final DataSourceSegment actual@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertIs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertIs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final ExpectedDataSource expected@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertNull(assertContext.getText(\"Actual dataSource should not exist.\"),actual)@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(assertContext.getText(String.format(\"`%s`'s datasource segment assertion error: \",actual.getClass().getSimpleName())),actual.getPassword(),CoreMatchers.is(expected.getPassword()))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(assertContext.getText(String.format(\"`%s`'s function segment assertion error: \",actual.getClass().getSimpleName())),actual.getName(),CoreMatchers.is(expected.getName()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(assertContext.getText(String.format(\"`%s`'s datasource segment assertion error: \",actual.getClass().getSimpleName())),actual.getHostName(),CoreMatchers.is(expected.getHostName()))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final ExpectedAlgorithm expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final SQLCaseAssertContext assertContext@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(assertContext.getText(String.format(\"`%s`'s datasource segment assertion error: \",actual.getClass().getSimpleName())),actual.getUrl(),CoreMatchers.is(expected.getUrl()))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "PropertiesAssert.assertIs(assertContext,actual.getProps(),expected.getProps())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final SQLCaseAssertContext assertContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(assertContext.getText(String.format(\"`%s`'s datasource segment assertion error: \",actual.getClass().getSimpleName())),actual.getUser(),CoreMatchers.is(expected.getUser()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(assertContext.getText(String.format(\"`%s`'s datasource segment assertion error: \",actual.getClass().getSimpleName())),actual.getName(),CoreMatchers.is(expected.getName()))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(assertContext.getText(String.format(\"`%s`'s datasource segment assertion error: \",actual.getClass().getSimpleName())),actual.getPort(),CoreMatchers.is(expected.getPort()))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "null == expected@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final SQLCaseAssertContext assertContext@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final AlgorithmSegment actual@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final DataSourceSegment actual@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertIs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8->16 [style = bold, label=""];
2->11 [style = dotted, label="true"];
9->6 [style = solid, label="actual"];
11->12 [style = solid, label="actual"];
18->20 [style = dotted, label="true"];
15->13 [style = dotted, label="true"];
7->1 [style = dotted, label="false"];
2->7 [style = bold, label=""];
2->9 [style = dotted, label="true"];
7->12 [style = dotted, label="true"];
7->6 [style = dotted, label="false"];
21->6 [style = solid, label="actual"];
7->6 [style = bold, label=""];
20->7 [style = solid, label="expected"];
15->11 [style = dotted, label="true"];
21->12 [style = solid, label="actual"];
19->22 [style = bold, label=""];
6->19 [style = bold, label=""];
7->10 [style = dotted, label="false"];
15->7 [style = bold, label=""];
11->6 [style = solid, label="actual"];
6->8 [style = bold, label=""];
11->21 [style = dashed, label="0"];
8->3 [style = bold, label=""];
3->1 [style = bold, label=""];
18->17 [style = dotted, label="true"];
8->19 [style = dashed, label="0"];
18->21 [style = dotted, label="true"];
7->12 [style = bold, label=""];
17->22 [style = solid, label="assertContext"];
7->19 [style = dotted, label="false"];
7->4 [style = dotted, label="false"];
7->16 [style = dotted, label="false"];
16->3 [style = bold, label=""];
1->4 [style = bold, label=""];
7->3 [style = dotted, label="false"];
14->7 [style = solid, label="expected"];
4->10 [style = bold, label=""];
7->8 [style = dotted, label="false"];
11->7 [style = solid, label="expected"];
7->5 [style = dotted, label="false"];
9->12 [style = solid, label="actual"];
2->0 [style = dotted, label="true"];
15->14 [style = dotted, label="true"];
7->22 [style = dotted, label="false"];
10->5 [style = bold, label=""];
18->7 [style = bold, label=""];
}
