digraph {
19 [style = filled, label = "HttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build()@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "verify(sslStoreProvider,atLeastOnce()).getKeyStore()@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "sslWithCustomSslStoreProvider['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "this.webServer.start()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "SSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(new SSLContextBuilder().loadTrustMaterial(null,new TrustSelfSignedStrategy()).loadKeyMaterial(keyStore,\"password\".toCharArray()).build())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "sslWithCustomSslStoreProvider['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "given(sslStoreProvider.getTrustStore()).willReturn(loadStore())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "factory.setSslStoreProvider(sslStoreProvider)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(getResponse(getLocalUrl(\"https\",\"/test.txt\"),requestFactory)).isEqualTo(\"test\")@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "this.webServer = factory.getWebServer()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ssl.setClientAuth(ClientAuth.NEED)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(new SSLContextBuilder().loadTrustMaterial(null,new TrustSelfSignedStrategy()).loadKeyMaterial(keyStore,\"password\".toCharArray(),new PrivateKeyStrategy(){@Override public String chooseAlias(Map<String,PrivateKeyDetails> aliases,Socket socket){return \"spring-boot\"}}).build())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Ssl ssl = new Ssl()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "keyStore.load(new FileInputStream(new File(\"src/test/resources/test.jks\")),\"secret\".toCharArray())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "keyStore.load(new FileInputStream(new File(\"src/test/resources/test.jks\")),\"secret\".toCharArray())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "factory.setSsl(ssl)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "HttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "factory.setSsl(getSsl(ClientAuth.WANT,\"password\",\"classpath:test.jks\",null,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1d0c07a,null))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "HttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ssl.setKeyPassword(\"password\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "verify(sslStoreProvider,atLeastOnce()).getTrustStore()@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "sslWantsClientAuthenticationSucceedsWithClientCertificate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(getResponse(getLocalUrl(\"https\",\"/test.txt\"),requestFactory)).isEqualTo(\"test\")@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "verify(sslStoreProvider,atLeastOnce()).getKeyStore()@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertThat(getResponse(getLocalUrl(\"https\",\"/test.txt\"),requestFactory)).isEqualTo(\"test\")@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "AbstractServletWebServerFactory factory = getFactory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "HttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient)@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "SSLConnectionSocketFactory socketFactory = new SSLConnectionSocketFactory(new SSLContextBuilder().loadTrustMaterial(null,new TrustSelfSignedStrategy()).loadKeyMaterial(keyStore,\"password\".toCharArray(),null).build())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "HttpClient httpClient = HttpClients.custom().setSSLSocketFactory(socketFactory).build()@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "verify(sslStoreProvider,atLeastOnce()).getTrustStore()@@@27@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "addTestTxtFile(factory)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "HttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory(httpClient)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "SslStoreProvider sslStoreProvider = mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "given(sslStoreProvider.getKeyStore()).willReturn(loadStore())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20->15 [style = solid, label="httpClient"];
14->16 [style = bold, label=""];
4->9 [style = bold, label=""];
2->23 [style = dashed, label="0"];
22->25 [style = bold, label=""];
2->19 [style = bold, label=""];
28->30 [style = bold, label=""];
30->20 [style = bold, label=""];
0->12 [style = bold, label=""];
8->14 [style = bold, label=""];
21->22 [style = solid, label="httpClient"];
18->16 [style = solid, label="sslStoreProvider"];
1->18 [style = bold, label=""];
31->29 [style = bold, label=""];
7->4 [style = bold, label=""];
26->24 [style = bold, label=""];
5->17 [style = bold, label=""];
34->10 [style = bold, label=""];
2->30 [style = dashed, label="0"];
19->5 [style = bold, label=""];
3->10 [style = bold, label=""];
12->2 [style = bold, label=""];
7->1 [style = solid, label="ssl"];
23->21 [style = bold, label=""];
21->22 [style = bold, label=""];
29->32 [style = bold, label=""];
15->0 [style = bold, label=""];
27->10 [style = bold, label=""];
19->5 [style = solid, label="httpClient"];
25->26 [style = bold, label=""];
11->33 [style = bold, label=""];
33->31 [style = bold, label=""];
10->11 [style = solid, label="factory"];
18->8 [style = bold, label=""];
17->13 [style = bold, label=""];
12->23 [style = bold, label=""];
7->33 [style = dashed, label="0"];
13->6 [style = bold, label=""];
9->1 [style = bold, label=""];
16->20 [style = bold, label=""];
20->15 [style = bold, label=""];
32->28 [style = bold, label=""];
11->7 [style = bold, label=""];
10->11 [style = bold, label=""];
}
