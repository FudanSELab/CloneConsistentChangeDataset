digraph {
29 [style = filled, label = "String key = ConfigConsts.CONFIG_FILE_CONTENT_KEY@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(someValue,configFile.getContent())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(someNamespace,changeEvent.getNamespace())@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertTrue(changeEvent.getNewValue().contains(String.format(\"%s=%s\",someKey,anotherValue)))@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "XmlConfigFile configFile = new XmlConfigFile(someNamespace,configRepository)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "anotherProperties.setProperty(someKey,anotherValue)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testOnRepositoryChange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "someProperties.setProperty(someKey,someValue)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Properties someProperties = new Properties()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "configFile.onRepositoryChange(someNamespace,anotherProperties)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ConfigFileChangeListener someListener = new ConfigFileChangeListener(){@Override public void onChange(ConfigFileChangeEvent changeEvent){configFileChangeFuture.set(changeEvent)}}@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(anotherValue,configFile.getContent())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(configFile.getContent().contains(String.format(\"%s=%s\",someKey,anotherValue)))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "configFile.addChangeListener(someListener)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertFalse(configFile.getContent().contains(String.format(\"%s=%s\",someKey,someValue)))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String anotherValue = \"anotherValue\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "someProperties.setProperty(key,someValue)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(configFile.getContent().contains(String.format(\"%s=%s\",someKey,someValue)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String someValue = \"someValue\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ConfigFileChangeEvent changeEvent = configFileChangeFuture.get(500,TimeUnit.MILLISECONDS)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(PropertyChangeType.MODIFIED,changeEvent.getChangeType())@@@28@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "PropertiesConfigFile configFile = new PropertiesConfigFile(someNamespace,configRepository)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final SettableFuture<ConfigFileChangeEvent> configFileChangeFuture = SettableFuture.create()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertTrue(changeEvent.getOldValue().contains(String.format(\"%s=%s\",someKey,someValue)))@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "testOnRepositoryChange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String someKey = \"someKey\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "anotherProperties.setProperty(key,anotherValue)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testOnRepositoryChange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Properties anotherProperties = new Properties()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->28 [style = solid, label="someValue"];
14->7 [style = bold, label=""];
3->5 [style = solid, label="someKey"];
13->19 [style = bold, label=""];
2->26 [style = dashed, label="0"];
3->29 [style = dashed, label="0"];
3->11 [style = solid, label="someKey"];
10->9 [style = bold, label=""];
8->22 [style = solid, label="anotherValue"];
12->15 [style = bold, label=""];
25->26 [style = bold, label=""];
4->2 [style = solid, label="someValue"];
13->6 [style = bold, label=""];
9->2 [style = bold, label=""];
8->24 [style = solid, label="anotherValue"];
29->4 [style = bold, label=""];
26->0 [style = bold, label=""];
4->8 [style = bold, label=""];
4->26 [style = solid, label="someValue"];
5->27 [style = dashed, label="0"];
22->20 [style = bold, label=""];
4->11 [style = solid, label="someValue"];
10->25 [style = bold, label=""];
0->13 [style = bold, label=""];
3->2 [style = solid, label="someKey"];
3->17 [style = solid, label="someKey"];
13->24 [style = dashed, label="0"];
8->27 [style = solid, label="anotherValue"];
0->24 [style = bold, label=""];
6->27 [style = bold, label=""];
7->3 [style = bold, label=""];
6->16 [style = bold, label=""];
19->21 [style = bold, label=""];
8->11 [style = bold, label=""];
3->22 [style = solid, label="someKey"];
11->10 [style = bold, label=""];
9->25 [style = dashed, label="0"];
21->18 [style = bold, label=""];
8->28 [style = bold, label=""];
7->29 [style = bold, label=""];
3->12 [style = solid, label="someKey"];
3->13 [style = solid, label="someKey"];
0->6 [style = solid, label="anotherProperties"];
6->5 [style = bold, label=""];
23->7 [style = bold, label=""];
16->5 [style = bold, label=""];
8->12 [style = solid, label="anotherValue"];
5->12 [style = bold, label=""];
2->0 [style = bold, label=""];
17->22 [style = bold, label=""];
28->10 [style = bold, label=""];
29->28 [style = solid, label="key"];
4->5 [style = solid, label="someValue"];
1->7 [style = bold, label=""];
24->6 [style = bold, label=""];
8->13 [style = solid, label="anotherValue"];
29->24 [style = solid, label="key"];
21->18 [style = solid, label="someListener"];
7->10 [style = solid, label="someProperties"];
4->17 [style = solid, label="someValue"];
3->4 [style = bold, label=""];
11->28 [style = dashed, label="0"];
18->6 [style = bold, label=""];
15->17 [style = bold, label=""];
}
