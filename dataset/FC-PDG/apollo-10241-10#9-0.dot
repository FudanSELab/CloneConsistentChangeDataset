digraph {
14 [style = filled, label = "doAnswer(new Answer<HttpResponse<ApolloConfig>>(){@Override public HttpResponse<ApolloConfig> answer(InvocationOnMock invocation){HttpRequest request = invocation.getArgumentAt(0,)Map<String,String> headers = request.getHeaders()assertNotNull(headers)assertTrue(headers.containsKey(Signature.HTTP_HEADER_TIMESTAMP))assertTrue(headers.containsKey(HttpHeaders.AUTHORIZATION))return someResponse}}).when(httpClient).doGet(any(),any())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(someResponse.getStatusCode()).thenReturn(200)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RemoteConfigRepository remoteConfigRepository = new RemoteConfigRepository(someNamespace)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testLoadConfigWithAccessKeySecret['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(ConfigSourceType.REMOTE,remoteConfigRepository.getSourceType())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String someKey = \"someKey\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Properties config = remoteConfigRepository.getConfig()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ApolloConfig someApolloConfig = assembleApolloConfig(configurations)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testLoadConfigWithAccessKeySecret['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "someSecret = \"someSecret\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "configurations.put(someKey,someValue)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Map<String,String> configurations = Maps.newHashMap()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "remoteConfigLongPollService.stopLongPollingRefresh()@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(someResponse.getBody()).thenReturn(someApolloConfig)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testLoadConfig['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "remoteConfigLongPollService.stopLongPollingRefresh()@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(configurations,config)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String someValue = \"someValue\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->10 [style = bold, label=""];
6->8 [style = solid, label="config"];
13->4 [style = bold, label=""];
8->12 [style = bold, label=""];
5->13 [style = solid, label="someValue"];
12->2 [style = bold, label=""];
4->7 [style = solid, label="someApolloConfig"];
0->4 [style = solid, label="configurations"];
7->6 [style = bold, label=""];
10->11 [style = bold, label=""];
0->13 [style = bold, label=""];
6->8 [style = bold, label=""];
5->13 [style = solid, label="configurations"];
4->1 [style = bold, label=""];
7->14 [style = bold, label=""];
13->1 [style = solid, label="someApolloConfig"];
2->9 [style = bold, label=""];
5->8 [style = solid, label="configurations"];
5->0 [style = bold, label=""];
11->13 [style = solid, label="someKey"];
8->12 [style = solid, label="config"];
16->0 [style = solid, label="someKey"];
14->6 [style = bold, label=""];
0->12 [style = solid, label="configurations"];
1->7 [style = bold, label=""];
11->0 [style = solid, label="someValue"];
16->11 [style = bold, label=""];
17->16 [style = bold, label=""];
15->10 [style = bold, label=""];
11->5 [style = bold, label=""];
}
