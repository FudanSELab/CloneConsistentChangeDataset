digraph {
23 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,6L,\"key\".getBytes(),\"value\".getBytes()))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "changelogReader.register(tp,standbyStateManager)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedLimitIndex())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "EasyMock.expect(mockTasks.get(null)).andReturn(mock()).anyTimes()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "final Properties properties = new Properties()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "properties.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG,100L)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "EasyMock.replay(standbyStateManager,storeMetadata,store)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,8L,null,\"value\".getBytes()))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Collections.singleton(tp),consumer.paused())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "changelogReader.restore()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(5L,changelogReader.changelogMetadata(tp).totalRestored())@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "EasyMock.replay(mockTasks,standbyStateManager,storeMetadata,store)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "changelogReader.restore(mockTasks)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(5L,changelogReader.changelogMetadata(tp).totalRestored())@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertNull(changelogReader.changelogMetadata(tp).endOffset())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertTrue(changelogReader.changelogMetadata(tp).bufferedRecords().isEmpty())@@@29@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_END))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "final StreamsConfig config = new StreamsConfig(StreamsTestUtils.getStreamsConfig(\"test-reader\",properties))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(0L,changelogReader.changelogMetadata(tp).totalRestored())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "consumer.updateBeginningOffsets(Collections.singletonMap(tp,5L))@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,9L,\"key\".getBytes(),\"value\".getBytes()))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertNull(changelogReader.changelogMetadata(tp).endOffset())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final Map<TaskId,Task> mockTasks = mock()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "changelogReader.restore(mockTasks)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "final MockConsumer<byte((,byte((> consumer = new MockConsumer<byte((,byte((>(OffsetResetStrategy.EARLIEST){@Override public Map<TopicPartition,OffsetAndMetadata> committed(final Set<TopicPartition> partitions){throw new AssertionError(\"Should not try to fetch committed offsets\")}}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "changelogReader.setMainConsumer(consumer)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "EasyMock.expect(standbyStateManager.changelogAsSource(tp)).andReturn(false).anyTimes()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "shouldNotUpdateLimitForNonSourceStandbyChangelog['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_START))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "shouldOnlyRestoreStandbyChangelogInUpdateStandbyState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertEquals(0L,changelogReader.changelogMetadata(tp).totalRestored())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,11L,\"key\".getBytes(),\"value\".getBytes()))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,adminClient,consumer,callback)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(changelogReader.changelogMetadata(tp).bufferedRecords().isEmpty())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertNull(callback.restoreTopicPartition)@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EasyMock.replay(standbyStateManager,storeMetadata,store)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,5L,\"key\".getBytes(),\"value\".getBytes()))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "shouldOnlyRestoreStandbyChangelogInUpdateStandbyState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_BATCH))@@@41@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,10L,\"key\".getBytes(),\"value\".getBytes()))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNull(changelogReader.changelogMetadata(tp).endOffset())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(6L,changelogReader.changelogMetadata(tp).totalRestored())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,7L,\"key\".getBytes(),\"value\".getBytes()))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "changelogReader.restore(mockTasks)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(0L,changelogReader.changelogMetadata(tp).totalRestored())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "changelogReader.restore()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
16->3 [style = bold, label=""];
5->8 [style = bold, label=""];
21->10 [style = bold, label=""];
17->5 [style = bold, label=""];
4->14 [style = bold, label=""];
52->23 [style = bold, label=""];
48->49 [style = bold, label=""];
42->50 [style = bold, label=""];
26->29 [style = solid, label="mockTasks"];
3->48 [style = dashed, label="0"];
39->44 [style = bold, label=""];
47->48 [style = bold, label=""];
45->51 [style = bold, label=""];
15->25 [style = bold, label=""];
0->17 [style = bold, label=""];
16->47 [style = bold, label=""];
29->9 [style = bold, label=""];
4->31 [style = dashed, label="0"];
43->2 [style = bold, label=""];
32->7 [style = bold, label=""];
37->42 [style = solid, label="consumer"];
6->19 [style = bold, label=""];
20->6 [style = bold, label=""];
46->39 [style = bold, label=""];
41->40 [style = solid, label="config"];
35->43 [style = bold, label=""];
12->9 [style = bold, label=""];
25->7 [style = bold, label=""];
17->37 [style = bold, label=""];
1->13 [style = bold, label=""];
34->30 [style = bold, label=""];
8->35 [style = bold, label=""];
11->18 [style = bold, label=""];
2->12 [style = bold, label=""];
33->26 [style = bold, label=""];
6->46 [style = dashed, label="0"];
45->41 [style = solid, label="properties"];
3->20 [style = bold, label=""];
7->34 [style = bold, label=""];
16->47 [style = dashed, label="0"];
22->0 [style = bold, label=""];
18->4 [style = bold, label=""];
50->5 [style = bold, label=""];
8->2 [style = bold, label=""];
23->21 [style = bold, label=""];
41->40 [style = bold, label=""];
20->49 [style = dashed, label="0"];
49->46 [style = bold, label=""];
26->31 [style = solid, label="mockTasks"];
19->32 [style = dashed, label="0"];
14->31 [style = bold, label=""];
13->23 [style = bold, label=""];
37->45 [style = bold, label=""];
26->28 [style = bold, label=""];
24->1 [style = bold, label=""];
28->27 [style = bold, label=""];
19->15 [style = bold, label=""];
31->3 [style = bold, label=""];
36->38 [style = bold, label=""];
2->29 [style = bold, label=""];
15->32 [style = bold, label=""];
38->17 [style = bold, label=""];
13->52 [style = bold, label=""];
51->41 [style = bold, label=""];
27->8 [style = bold, label=""];
9->24 [style = bold, label=""];
40->42 [style = bold, label=""];
26->27 [style = solid, label="mockTasks"];
8->29 [style = dashed, label="0"];
26->32 [style = solid, label="mockTasks"];
10->11 [style = bold, label=""];
37->40 [style = solid, label="consumer"];
}
