digraph {
4 [style = filled, label = "throw e@@@66@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "List<Tuple> tuples = getTuples(mstream)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "tuples = getTuples(mstream)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING)))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "testUniqueStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "indexr(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "tuples = getTuples(mstream)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING)))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "commit()@@@44@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@59@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "!e.getMessage().equals(\"Invalid UniqueStream - substream comparator (sort) must be a superset of this stream's equalitor.\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertOrder(tuples,0,1,2,3,4)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "ustream = new UniqueStream(stream,new FieldEqualitor(\"a_i\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "throw new Exception(\"Equalitors did not match but no excepion was thrown\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "throw e@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@57@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "testMergeStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "commit()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertOrder(tuples,4,3,2,1,0)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "List<Tuple> tuples = getTuples(ustream)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 2 3)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "throw new Exception(\"Sorts did not match up and Exception was not not thrown.\")@@@62@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "indexr(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
63 [style = filled, label = "del(\"*:*\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assert(tuples.size() == 4)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING)))@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assert(tuples.size() == 5)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertOrder(tuples,2,0,1,3,4)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Map paramsA = mapParams(\"q\",\"id:(4 1)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "!e.getMessage().equals(\"Invalid MergeStream - both substream comparators (sort) must be a superset of this stream's comparator.\")@@@52@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "String zkHost = zkServer.getZkAddress()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(4 1)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "throw new Exception(\"Sorts did not match up and Exception was not not thrown.\")@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "del(\"*:*\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertOrder(tuples,0,1,3,4)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assert(tuples.size() == 5)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "commit()@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "UniqueStream ustream = new UniqueStream(stream,new FieldEqualitor(\"a_f\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "stream = new CloudSolrStream(zkHost,\"collection1\",params)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testMergeStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "throw e@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "params = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "CloudSolrStream streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "streamFactory.withCollectionZkHost(\"collection1\",zkHost)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assert(tuples.size() == 5)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@60@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "indexr(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assert(tuples.size() == 5)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "indexr(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING)))@@@61@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "CloudSolrStream streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Exception e@@@51@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "!e.getMessage().equals(\"Invalid MergeStream - both substream comparators (sort) must be a superset of this stream's comparator.\")@@@65@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "indexr(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "Map paramsB = mapParams(\"q\",\"id:(0 2 3)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "Map params = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "MergeStream mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f desc,a_i desc\")@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "Exception e@@@64@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,\"collection1\",params)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "Exception e@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "tuples = getTuples(mstream)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertOrder(tuples,0,2,1,3,4)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@58@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57->7 [style = solid, label="paramsA"];
7->44 [style = solid, label="streamA"];
19->60 [style = bold, label=""];
35->41 [style = bold, label=""];
27->9 [style = bold, label=""];
39->36 [style = solid, label="paramsB"];
1->20 [style = bold, label=""];
56->15 [style = bold, label=""];
35->41 [style = solid, label="streamB"];
46->31 [style = bold, label=""];
69->70 [style = solid, label="stream"];
23->32 [style = solid, label="streamB"];
47->10 [style = bold, label=""];
66->62 [style = bold, label=""];
30->18 [style = bold, label=""];
43->0 [style = solid, label="streamB"];
58->17 [style = bold, label=""];
67->72 [style = dotted, label="true"];
26->12 [style = bold, label=""];
60->16 [style = solid, label="paramsB"];
3->38 [style = solid, label="streamA"];
56->15 [style = dotted, label="true"];
37->48 [style = bold, label=""];
16->30 [style = solid, label="streamB"];
26->77 [style = bold, label=""];
63->75 [style = bold, label=""];
43->0 [style = bold, label=""];
73->66 [style = bold, label=""];
29->1 [style = bold, label=""];
70->74 [style = bold, label=""];
49->34 [style = solid, label="zkHost"];
18->25 [style = solid, label="tuples"];
14->11 [style = bold, label=""];
42->34 [style = solid, label="paramsA"];
24->27 [style = bold, label=""];
19->65 [style = dashed, label="0"];
25->57 [style = bold, label=""];
17->2 [style = solid, label="paramsA"];
13->25 [style = bold, label=""];
37->48 [style = dotted, label="true"];
12->77 [style = dashed, label="0"];
64->71 [style = bold, label=""];
51->28 [style = bold, label=""];
46->51 [style = solid, label="tuples"];
10->14 [style = bold, label=""];
60->16 [style = bold, label=""];
36->44 [style = bold, label=""];
30->18 [style = solid, label="mstream"];
0->58 [style = bold, label=""];
61->1 [style = bold, label=""];
49->36 [style = solid, label="zkHost"];
74->63 [style = bold, label=""];
32->46 [style = solid, label="mstream"];
49->50 [style = solid, label="zkHost"];
3->33 [style = bold, label=""];
48->17 [style = bold, label=""];
33->50 [style = bold, label=""];
2->41 [style = solid, label="streamA"];
34->59 [style = bold, label=""];
36->44 [style = solid, label="streamB"];
54->35 [style = solid, label="paramsB"];
31->51 [style = bold, label=""];
68->67 [style = dotted, label="true"];
17->2 [style = bold, label=""];
57->7 [style = bold, label=""];
44->6 [style = solid, label="mstream"];
51->27 [style = bold, label=""];
77->65 [style = bold, label=""];
49->19 [style = solid, label="zkHost"];
49->35 [style = solid, label="zkHost"];
77->65 [style = solid, label="params"];
54->35 [style = bold, label=""];
32->46 [style = bold, label=""];
62->69 [style = solid, label="params"];
12->19 [style = solid, label="paramsA"];
28->40 [style = solid, label="paramsA"];
65->64 [style = solid, label="stream"];
23->32 [style = bold, label=""];
49->26 [style = solid, label="zkHost"];
67->72 [style = bold, label=""];
50->38 [style = solid, label="streamB"];
21->5 [style = bold, label=""];
71->73 [style = bold, label=""];
40->69 [style = dashed, label="0"];
72->63 [style = bold, label=""];
37->67 [style = dashed, label="0"];
67->63 [style = bold, label=""];
49->23 [style = solid, label="zkHost"];
7->39 [style = bold, label=""];
16->30 [style = bold, label=""];
38->22 [style = solid, label="mstream"];
40->0 [style = solid, label="streamA"];
33->50 [style = solid, label="paramsB"];
2->54 [style = bold, label=""];
55->3 [style = solid, label="paramsA"];
62->69 [style = bold, label=""];
11->49 [style = bold, label=""];
49->40 [style = solid, label="zkHost"];
53->55 [style = bold, label=""];
42->34 [style = bold, label=""];
71->66 [style = solid, label="tuples"];
44->6 [style = bold, label=""];
28->40 [style = bold, label=""];
76->1 [style = bold, label=""];
52->53 [style = bold, label=""];
49->3 [style = solid, label="zkHost"];
68->67 [style = bold, label=""];
41->24 [style = bold, label=""];
49->43 [style = solid, label="zkHost"];
59->23 [style = solid, label="paramsB"];
8->43 [style = solid, label="paramsB"];
59->23 [style = bold, label=""];
65->64 [style = bold, label=""];
45->37 [style = dotted, label="true"];
37->17 [style = bold, label=""];
22->21 [style = bold, label=""];
19->30 [style = solid, label="streamA"];
8->43 [style = bold, label=""];
55->3 [style = bold, label=""];
20->47 [style = bold, label=""];
6->52 [style = bold, label=""];
15->4 [style = dotted, label="true"];
34->32 [style = solid, label="streamA"];
49->7 [style = solid, label="zkHost"];
49->2 [style = solid, label="zkHost"];
50->38 [style = bold, label=""];
64->71 [style = solid, label="ustream"];
22->5 [style = solid, label="tuples"];
4->27 [style = bold, label=""];
15->4 [style = bold, label=""];
18->13 [style = bold, label=""];
49->16 [style = solid, label="zkHost"];
28->62 [style = dashed, label="0"];
45->37 [style = bold, label=""];
69->70 [style = bold, label=""];
49->26 [style = bold, label=""];
5->42 [style = bold, label=""];
12->19 [style = bold, label=""];
38->22 [style = bold, label=""];
49->69 [style = solid, label="zkHost"];
15->27 [style = bold, label=""];
39->36 [style = bold, label=""];
49->65 [style = solid, label="zkHost"];
6->53 [style = solid, label="tuples"];
40->8 [style = bold, label=""];
}
