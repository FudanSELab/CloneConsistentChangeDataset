digraph {
105 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),0.0,0.001)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "solrStream.setStreamContext(context)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(!(labels1.contains(\"doc4\") && labels2.contains(\"doc4\")))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),0.0,0.0)@@@51@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testKmeans['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),0.0,0.001)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "List<List<Number>> membership = (List<List<Number>>)tuples.get(0).get(\"l\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<List<Number>> cluster1 = (List<List<Number>>)tuples.get(0).get(\"g\")@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),0.0,0.0)@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),1.0,0.0)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "String cexpr = \"let(echo=true,\" + \" a=array(1,1,1,0,0,0),\" + \" b=array(1,1,1,0,0,0),\" + \" c=array(0,0,0,1,1,1),\" + \" d=array(0,0,0,1,1,1),\" + \" e=setRowLabels(matrix(a,b,c,d), \" + \" array(\"doc1\", \"doc2\", \"doc3\", \"doc4\")),\" + \" f=fuzzyKmeans(e, 2),\" + \" g=getCluster(f, 0),\" + \" h=getCluster(f, 1),\" + \" i=getCentroids(f),\" + \" j=getRowLabels(g),\" + \" k=getRowLabels(h),\" + \" l=getMembershipMatrix(f))\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "paramsLoc.set(\"qt\",\"/stream\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertEquals(membership.get(3).get(0).doubleValue(),1.0,0.001)@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),1.0,0.0)@@@58@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertTrue(!(labels1.contains(\"doc1\") && labels2.contains(\"doc1\")))@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertEquals(membership.get(3).get(0).doubleValue(),0.0,0.001)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),0.0,0.001)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),0.0,0.0)@@@54@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),0.0,0.0)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),0.0,0.0)@@@62@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
93 [style = filled, label = "assertEquals(membership.get(3).get(1).doubleValue(),1.0,0.001)@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(cluster1.size(),2)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "List<String> labels2 = (List<String>)tuples.get(0).get(\"k\")@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),1.0,0.001)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<List<Number>> cluster2 = (List<List<Number>>)tuples.get(0).get(\"h\")@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
89 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),0.0,0.001)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),1.0,0.0)@@@55@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
108 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),1.0,0.001)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),0.0,0.0)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),0.0,0.001)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<String> labels1 = (List<String>)tuples.get(0).get(\"j\")@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),1.0,0.0)@@@50@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(!(labels1.contains(\"doc2\") && labels2.contains(\"doc2\")))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(!(labels1.contains(\"doc4\") && labels2.contains(\"doc4\")))@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),0.0,0.0)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(membership.get(0).get(0).doubleValue(),1.0,0.001)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(membership.get(2).get(1).doubleValue(),1.0,0.001)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "assertEquals(membership.get(0).get(0).doubleValue(),0.0,0.001)@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),0.0,0.0)@@@63@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
84 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),1.0,0.001)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertTrue((labels2.contains(\"doc1\") && labels2.contains(\"doc2\")) || ((labels2.contains(\"doc3\") && labels2.contains(\"doc4\"))))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),1.0,0.001)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ModifiableSolrParams paramsLoc = new ModifiableSolrParams()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),1.0,0.001)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<String> labels1 = (List<String>)tuples.get(0).get(\"j\")@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),1.0,0.0)@@@57@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "assertTrue(tuples.size() == 1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),0.0,0.001)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),1.0,0.001)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "testKmeans['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
76 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),0.0,0.001)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),0.0,0.001)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),1.0,0.001)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(cluster2.size(),2)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),0.0,0.001)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(centroids.size(),2)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "assertEquals(membership.get(3).get(1).doubleValue(),0.0,0.001)@@@70@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "assertEquals(membership.get(2).get(1).doubleValue(),0.0,0.001)@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(cluster1.size(),2)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),0.0,0.0)@@@61@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),0.0,0.0)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertEquals(membership.get(2).get(0).doubleValue(),0.0,0.001)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "paramsLoc.set(\"expr\",cexpr)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TupleStream solrStream = new SolrStream(url,paramsLoc)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertTrue((labels1.contains(\"doc1\") && labels1.contains(\"doc2\")) || ((labels1.contains(\"doc3\") && labels1.contains(\"doc4\"))))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<List<Number>> cluster2 = (List<List<Number>>)tuples.get(0).get(\"h\")@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "assertEquals(membership.get(1).get(1).doubleValue(),1.0,0.001)@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),1.0,0.0)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "labels1.contains(\"doc1\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "assertEquals(membership.get(1).get(0).doubleValue(),1.0,0.001)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),1.0,0.0)@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
69 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),1.0,0.001)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),0.0,0.001)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),0.0,0.001)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "assertEquals(membership.get(1).get(1).doubleValue(),0.0,0.001)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<String> labels2 = (List<String>)tuples.get(0).get(\"k\")@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
99 [style = filled, label = "assertEquals(membership.get(1).get(0).doubleValue(),0.0,0.001)@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),1.0,0.0)@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),0.0,0.0)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),1.0,0.001)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<List<Number>> cluster1 = (List<List<Number>>)tuples.get(0).get(\"g\")@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),0.0,0.0)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<List<Number>> centroids = (List<List<Number>>)tuples.get(0).get(\"i\")@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue((labels1.contains(\"doc1\") && labels1.contains(\"doc2\")) || ((labels1.contains(\"doc3\") && labels1.contains(\"doc4\"))))@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),1.0,0.001)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertTrue(!(labels1.contains(\"doc3\") && labels2.contains(\"doc3\")))@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "assertEquals(membership.get(0).get(1).doubleValue(),0.0,0.001)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),1.0,0.0)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),1.0,0.001)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "assertEquals(membership.get(0).get(1).doubleValue(),1.0,0.001)@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "StreamContext context = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),0.0,0.001)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<List<Number>> centroids = (List<List<Number>>)tuples.get(0).get(\"i\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),1.0,0.0)@@@56@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),1.0,0.0)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),1.0,0.0)@@@60@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
78 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),1.0,0.001)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(!(labels1.contains(\"doc1\") && labels2.contains(\"doc1\")))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<Tuple> tuples = getTuples(solrStream)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(centroids.size(),2)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "String cexpr = \"let(echo=true,\" + \" a=array(1,1,1,0,0,0),\" + \" b=array(1,1,1,0,0,0),\" + \" c=array(0,0,0,1,1,1),\" + \" d=array(0,0,0,1,1,1),\" + \" e=setRowLabels(matrix(a,b,c,d), \" + \" array(\"doc1\", \"doc2\", \"doc3\", \"doc4\")),\" + \" f=kmeans(e, 2),\" + \" g=getCluster(f, 0),\" + \" h=getCluster(f, 1),\" + \" i=getCentroids(f),\" + \" j=getRowLabels(g),\" + \" k=getRowLabels(h))\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue((labels2.contains(\"doc1\") && labels2.contains(\"doc2\")) || ((labels2.contains(\"doc3\") && labels2.contains(\"doc4\"))))@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "labels1.contains(\"doc1\")@@@28@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(membership.get(2).get(0).doubleValue(),1.0,0.001)@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(!(labels1.contains(\"doc2\") && labels2.contains(\"doc2\")))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(!(labels1.contains(\"doc3\") && labels2.contains(\"doc3\")))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "testFuzzyKmeans['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),1.0,0.0)@@@59@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertEquals(cluster2.size(),2)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),0.0,0.0)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44->108 [style = dashed, label="0"];
6->3 [style = bold, label=""];
22->99 [style = dotted, label="false"];
105->74 [style = bold, label=""];
22->82 [style = dotted, label="true"];
22->110 [style = dotted, label="false"];
41->15 [style = bold, label=""];
0->13 [style = bold, label=""];
86->73 [style = bold, label=""];
45->1 [style = solid, label="url"];
73->100 [style = bold, label=""];
22->107 [style = dotted, label="false"];
110->71 [style = bold, label=""];
20->36 [style = dotted, label="true"];
25->43 [style = bold, label=""];
22->21 [style = dotted, label="false"];
32->34 [style = bold, label=""];
57->58 [style = bold, label=""];
47->27 [style = bold, label=""];
46->73 [style = dashed, label="0"];
26->22 [style = bold, label=""];
62->67 [style = bold, label=""];
47->105 [style = dashed, label="0"];
22->98 [style = dotted, label="true"];
81->92 [style = bold, label=""];
20->56 [style = dotted, label="false"];
52->60 [style = bold, label=""];
22->74 [style = dotted, label="true"];
99->110 [style = bold, label=""];
40->16 [style = bold, label=""];
94->102 [style = bold, label=""];
20->30 [style = dotted, label="true"];
22->42 [style = dotted, label="true"];
20->31 [style = dotted, label="true"];
20->49 [style = dotted, label="true"];
106->83 [style = bold, label=""];
20->63 [style = dotted, label="false"];
60->65 [style = bold, label=""];
71->85 [style = bold, label=""];
22->81 [style = dotted, label="false"];
90->98 [style = bold, label=""];
63->50 [style = bold, label=""];
22->101 [style = dotted, label="false"];
22->44 [style = dotted, label="true"];
22->96 [style = dotted, label="true"];
22->85 [style = dotted, label="false"];
20->34 [style = dotted, label="true"];
67->52 [style = bold, label=""];
30->69 [style = dashed, label="0"];
11->1 [style = solid, label="paramsLoc"];
22->29 [style = dotted, label="true"];
48->49 [style = bold, label=""];
28->37 [style = bold, label=""];
108->70 [style = bold, label=""];
27->74 [style = dashed, label="0"];
22->23 [style = dotted, label="true"];
34->48 [style = bold, label=""];
74->78 [style = bold, label=""];
35->68 [style = dashed, label="0"];
38->11 [style = bold, label=""];
24->0 [style = bold, label=""];
8->18 [style = bold, label=""];
22->36 [style = dotted, label="false"];
24->0 [style = solid, label="context"];
55->38 [style = bold, label=""];
22->88 [style = dotted, label="false"];
20->59 [style = dotted, label="false"];
46->39 [style = bold, label=""];
22->84 [style = dotted, label="true"];
22->70 [style = dotted, label="true"];
87->95 [style = bold, label=""];
22->39 [style = dotted, label="false"];
31->76 [style = dashed, label="0"];
45->1 [style = bold, label=""];
22->46 [style = dotted, label="false"];
22->20 [style = dotted, label="true"];
76->89 [style = bold, label=""];
88->107 [style = bold, label=""];
22->95 [style = dotted, label="true"];
96->90 [style = bold, label=""];
22->76 [style = bold, label=""];
7->101 [style = dashed, label="0"];
85->88 [style = bold, label=""];
20->78 [style = dashed, label="0"];
68->86 [style = bold, label=""];
32->77 [style = dashed, label="0"];
95->103 [style = bold, label=""];
89->101 [style = bold, label=""];
98->79 [style = bold, label=""];
82->105 [style = bold, label=""];
20->48 [style = dotted, label="true"];
20->46 [style = dotted, label="false"];
22->9 [style = dotted, label="true"];
22->4 [style = dotted, label="true"];
22->79 [style = dotted, label="true"];
66->57 [style = bold, label=""];
27->20 [style = bold, label=""];
20->39 [style = dotted, label="false"];
22->91 [style = dotted, label="true"];
4->23 [style = bold, label=""];
30->44 [style = bold, label=""];
22->87 [style = dotted, label="true"];
22->69 [style = dotted, label="true"];
22->35 [style = dotted, label="false"];
20->64 [style = dotted, label="false"];
44->54 [style = bold, label=""];
23->95 [style = dashed, label="0"];
92->68 [style = bold, label=""];
22->100 [style = dotted, label="false"];
22->49 [style = dotted, label="false"];
49->35 [style = bold, label=""];
20->51 [style = dotted, label="true"];
29->84 [style = dashed, label="0"];
18->40 [style = bold, label=""];
22->73 [style = dotted, label="false"];
2->86 [style = dashed, label="0"];
35->2 [style = bold, label=""];
22->92 [style = dotted, label="false"];
102->99 [style = bold, label=""];
22->29 [style = bold, label=""];
5->26 [style = bold, label=""];
42->47 [style = bold, label=""];
97->19 [style = solid, label="cexpr"];
31->36 [style = bold, label=""];
22->37 [style = dotted, label="true"];
22->83 [style = dotted, label="true"];
22->78 [style = dotted, label="true"];
22->108 [style = dotted, label="true"];
20->7 [style = dotted, label="true"];
69->108 [style = bold, label=""];
22->103 [style = dotted, label="true"];
80->18 [style = bold, label=""];
9->28 [style = bold, label=""];
9->103 [style = dashed, label="0"];
100->94 [style = bold, label=""];
22->90 [style = dotted, label="true"];
20->54 [style = dotted, label="true"];
17->12 [style = bold, label=""];
64->62 [style = bold, label=""];
20->44 [style = dotted, label="true"];
19->14 [style = bold, label=""];
72->81 [style = bold, label=""];
20->67 [style = dotted, label="false"];
1->13 [style = solid, label="solrStream"];
12->8 [style = bold, label=""];
22->76 [style = dotted, label="false"];
3->41 [style = bold, label=""];
22->27 [style = dotted, label="true"];
22->109 [style = dotted, label="false"];
79->75 [style = bold, label=""];
50->64 [style = bold, label=""];
20->52 [style = dotted, label="false"];
20->60 [style = dotted, label="false"];
37->83 [style = dashed, label="0"];
49->92 [style = dashed, label="0"];
42->82 [style = dashed, label="0"];
56->63 [style = bold, label=""];
70->96 [style = bold, label=""];
20->62 [style = dotted, label="false"];
22->34 [style = dotted, label="false"];
22->48 [style = dotted, label="false"];
22->72 [style = dotted, label="false"];
37->42 [style = bold, label=""];
8->80 [style = bold, label=""];
10->38 [style = bold, label=""];
33->17 [style = bold, label=""];
22->84 [style = bold, label=""];
109->77 [style = bold, label=""];
22->31 [style = dotted, label="false"];
54->51 [style = bold, label=""];
22->75 [style = dotted, label="true"];
22->86 [style = dotted, label="false"];
33->61 [style = bold, label=""];
2->46 [style = bold, label=""];
22->94 [style = dotted, label="false"];
29->4 [style = bold, label=""];
20->65 [style = dotted, label="false"];
22->32 [style = dotted, label="false"];
22->71 [style = dotted, label="false"];
38->97 [style = dashed, label="0"];
91->93 [style = bold, label=""];
39->100 [style = dashed, label="0"];
20->46 [style = bold, label=""];
22->47 [style = dotted, label="true"];
22->31 [style = bold, label=""];
22->28 [style = dotted, label="true"];
38->19 [style = solid, label="cexpr"];
22->106 [style = dotted, label="true"];
16->25 [style = bold, label=""];
28->106 [style = dashed, label="0"];
20->21 [style = dotted, label="true"];
77->72 [style = bold, label=""];
22->2 [style = dotted, label="false"];
14->45 [style = bold, label=""];
11->19 [style = bold, label=""];
43->6 [style = bold, label=""];
15->5 [style = bold, label=""];
22->105 [style = dotted, label="true"];
83->82 [style = bold, label=""];
22->77 [style = dotted, label="false"];
48->81 [style = dashed, label="0"];
4->87 [style = dashed, label="0"];
36->89 [style = dashed, label="0"];
22->93 [style = dotted, label="true"];
61->53 [style = bold, label=""];
22->89 [style = dotted, label="false"];
75->91 [style = bold, label=""];
21->109 [style = dashed, label="0"];
84->87 [style = bold, label=""];
58->29 [style = bold, label=""];
101->109 [style = bold, label=""];
20->50 [style = dotted, label="false"];
36->7 [style = bold, label=""];
1->24 [style = bold, label=""];
22->102 [style = dotted, label="false"];
53->66 [style = bold, label=""];
39->56 [style = bold, label=""];
21->32 [style = bold, label=""];
78->69 [style = bold, label=""];
22->7 [style = dotted, label="false"];
65->59 [style = bold, label=""];
7->21 [style = bold, label=""];
22->68 [style = dotted, label="false"];
51->31 [style = bold, label=""];
103->106 [style = bold, label=""];
22->30 [style = dotted, label="true"];
97->11 [style = bold, label=""];
13->33 [style = bold, label=""];
20->30 [style = bold, label=""];
23->9 [style = bold, label=""];
20->32 [style = dotted, label="true"];
104->97 [style = bold, label=""];
34->72 [style = dashed, label="0"];
}
