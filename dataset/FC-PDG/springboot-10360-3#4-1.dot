digraph {
2 [style = filled, label = "setCookieHeaderCanBeIncluded['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "setCookieHeaderCanBeIncluded['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "mixedCaseSetCookieHeaderCanBeIncluded['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(trace.getResponse().getHeaders()).containsOnlyKeys(HttpHeaders.SET_COOKIE)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(trace.getResponse().getHeaders()).containsOnlyKeys(mixedCase(HttpHeaders.SET_COOKIE))@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "new HttpExchangeTracer(EnumSet.of(Include.RESPONSE_HEADERS,Include.COOKIE_HEADERS)).sendingResponse(trace,createResponse(Collections.singletonMap(mixedCase(HttpHeaders.SET_COOKIE),Arrays.asList(\"test=test\"))),null,null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "HttpTrace trace = new HttpTrace(createRequest())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "new HttpExchangeTracer(EnumSet.of(Include.RESPONSE_HEADERS,Include.COOKIE_HEADERS)).sendingResponse(trace,createResponse(Collections.singletonMap(HttpHeaders.SET_COOKIE,Arrays.asList(\"test=test\"))),null,null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
3->6 [style = bold, label=""];
6->5 [style = bold, label=""];
3->1 [style = solid, label="trace"];
1->0 [style = bold, label=""];
3->1 [style = bold, label=""];
0->5 [style = dashed, label="0"];
1->6 [style = dashed, label="0"];
7->3 [style = bold, label=""];
2->3 [style = bold, label=""];
3->6 [style = solid, label="trace"];
}
