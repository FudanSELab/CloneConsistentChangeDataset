digraph {
33 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(c3partitions0,Optional.of(2)))))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic),serializeTopicPartitionAssignmentToOldSchema(c2partitions0)))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "TopicPartition tp2 = new TopicPartition(topic,2)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<TopicPartition> c2partitions0 = partitions(tp1)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "subscriptions.put(consumer2,buildSubscriptionWithOldSchema(topics(topic),c2partitions0))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "String consumer2 = \"consumer2\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "TopicPartition tp4 = new TopicPartition(topic,4)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Map<String,Integer> partitionsPerTopic = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<TopicPartition> c1partitions = assignment.get(consumer1)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<TopicPartition> c3partitions0 = partitions(tp3,tp4,tp5)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "TopicPartition tp3 = new TopicPartition(topic,3)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(c1partitions0,Optional.of(1)))))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(c2partitions0.containsAll(c2partitions))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<TopicPartition> c3partitions = assignment.get(consumer3)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testAssignmentWithConflictingPreviousGenerations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "subscriptions.put(consumer1,buildSubscriptionWithGeneration(topics(topic),c1partitions0,1))@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "partitionsPerTopic.put(topic,3)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(assignor.isSticky())@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "String consumer1 = \"consumer1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(c2partitions0,Optional.of(1)))))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertTrue(c1partitions.size() == 2 && c2partitions.size() == 2 && c3partitions.size() == 2)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "List<TopicPartition> c2partitions0 = partitions(tp0,tp2,tp3)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<TopicPartition> c1partitions = assignment.get(consumer1)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment,partitionsPerTopic)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "List<TopicPartition> c1partitions0 = partitions(tp0,tp2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "partitionsPerTopic.put(topic,6)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String consumer3 = \"consumer3\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "TopicPartition tp5 = new TopicPartition(topic,5)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testSchemaBackwardCompatibility['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TopicPartition tp1 = new TopicPartition(topic,1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<TopicPartition> c2partitions = assignment.get(consumer2)@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Map<String,List<TopicPartition>> assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(c1partitions0,Optional.of(1)))))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testSchemaBackwardCompatibility['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Map<String,List<TopicPartition>> assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTrue(c3partitions0.containsAll(c3partitions))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<TopicPartition> c3partitions = assignment.get(consumer3)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(c1partitions0.containsAll(c1partitions))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(c1partitions.size() == 1 && c2partitions.size() == 1 && c3partitions.size() == 1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(assignor.isSticky())@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "TopicPartition tp0 = new TopicPartition(topic,0)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "List<TopicPartition> c1partitions0 = partitions(tp0,tp1,tp4)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22->29 [style = solid, label="c1partitions0"];
18->1 [style = solid, label="assignment"];
3->31 [style = solid, label="assignment"];
10->35 [style = bold, label=""];
5->15 [style = bold, label=""];
45->31 [style = bold, label=""];
4->33 [style = solid, label="consumer3"];
43->38 [style = solid, label="c2partitions0"];
11->8 [style = solid, label="c2partitions"];
8->1 [style = bold, label=""];
19->30 [style = dashed, label="0"];
14->9 [style = bold, label=""];
41->45 [style = bold, label=""];
10->3 [style = solid, label="partitionsPerTopic"];
35->7 [style = bold, label=""];
13->25 [style = bold, label=""];
39->34 [style = solid, label="tp5"];
8->28 [style = bold, label=""];
33->3 [style = bold, label=""];
4->5 [style = solid, label="consumer3"];
24->22 [style = solid, label="tp0"];
1->37 [style = solid, label="c2partitions"];
21->25 [style = solid, label="consumer2"];
46->34 [style = solid, label="tp3"];
24->43 [style = solid, label="tp0"];
0->7 [style = bold, label=""];
29->26 [style = bold, label=""];
2->3 [style = solid, label="c1partitions"];
19->13 [style = bold, label=""];
1->16 [style = bold, label=""];
10->0 [style = bold, label=""];
20->29 [style = solid, label="consumer1"];
14->19 [style = solid, label="tp1"];
36->37 [style = bold, label=""];
40->11 [style = solid, label="c1partitions0"];
0->35 [style = dashed, label="0"];
38->33 [style = bold, label=""];
16->41 [style = solid, label="c3partitions"];
43->34 [style = bold, label=""];
27->20 [style = bold, label=""];
21->4 [style = bold, label=""];
9->22 [style = bold, label=""];
4->10 [style = bold, label=""];
3->45 [style = solid, label="assignment"];
10->18 [style = solid, label="partitionsPerTopic"];
7->17 [style = bold, label=""];
20->8 [style = solid, label="consumer1"];
22->19 [style = bold, label=""];
25->26 [style = dashed, label="0"];
19->29 [style = bold, label=""];
31->32 [style = bold, label=""];
37->41 [style = bold, label=""];
25->18 [style = bold, label=""];
9->46 [style = bold, label=""];
18->28 [style = solid, label="assignment"];
1->28 [style = dashed, label="0"];
15->3 [style = bold, label=""];
17->23 [style = bold, label=""];
20->13 [style = solid, label="consumer1"];
24->40 [style = solid, label="tp0"];
8->36 [style = solid, label="c1partitions"];
21->38 [style = solid, label="consumer2"];
18->16 [style = solid, label="assignment"];
6->20 [style = bold, label=""];
11->5 [style = bold, label=""];
46->30 [style = bold, label=""];
25->38 [style = dashed, label="0"];
16->44 [style = bold, label=""];
39->40 [style = bold, label=""];
3->8 [style = bold, label=""];
9->43 [style = solid, label="tp2"];
22->13 [style = solid, label="c1partitions0"];
40->43 [style = bold, label=""];
2->11 [style = bold, label=""];
34->33 [style = solid, label="c3partitions0"];
11->38 [style = bold, label=""];
44->36 [style = bold, label=""];
19->25 [style = solid, label="c2partitions0"];
30->34 [style = solid, label="tp4"];
42->20 [style = bold, label=""];
22->46 [style = dashed, label="0"];
21->11 [style = solid, label="consumer2"];
46->43 [style = solid, label="tp3"];
15->44 [style = dashed, label="0"];
19->26 [style = solid, label="c2partitions0"];
20->2 [style = solid, label="consumer1"];
21->26 [style = solid, label="consumer2"];
18->2 [style = bold, label=""];
20->11 [style = solid, label="consumer1"];
28->16 [style = bold, label=""];
34->11 [style = bold, label=""];
21->17 [style = solid, label="consumer2"];
24->14 [style = bold, label=""];
20->21 [style = bold, label=""];
4->16 [style = solid, label="consumer3"];
21->1 [style = solid, label="consumer2"];
23->24 [style = bold, label=""];
9->22 [style = solid, label="tp2"];
4->23 [style = solid, label="consumer3"];
30->39 [style = bold, label=""];
10->28 [style = solid, label="partitionsPerTopic"];
14->40 [style = solid, label="tp1"];
20->7 [style = solid, label="consumer1"];
16->12 [style = bold, label=""];
30->40 [style = solid, label="tp4"];
26->18 [style = bold, label=""];
}
