digraph {
10 [style = filled, label = "c.get().header(of((String)null)).run().assertBody().is(\"Keep-Alive\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "c.get().header(of(null)).run().assertBody().is(VALUE)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "c.get().header(connection(VALUE)).run().assertBody().is(VALUE)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "c.get().header(of((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "c.get().header(of(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "c.get().header(connection(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "c.get().header(connection((String)null)).run().assertBody().is(\"Keep-Alive\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "c.get().header(new IfMatch(VALUE)).run().assertBody().is(VALUE)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "c.get().header(connection(VALUE)).run().assertBody().is(VALUE)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "c.get().header(of((String)null)).run().assertBody().isEmpty()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "RestClient c = client().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "c.get().header(connection(null)).run().assertBody().is(VALUE)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "c.get().header(connection(null)).run().assertBody().is(\"Keep-Alive\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "c.get().header(of(null)).run().assertBody().isEmpty()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "c.get().header(of(null)).run().assertBody().is(\"Keep-Alive\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "c.get().header(connection((Supplier<?>)null)).run().assertBody().is(\"Keep-Alive\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "c.get().header(new Connection(VALUE)).run().assertBody().is(VALUE)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "c.get().header(connection((Object)null)).run().assertBody().is(\"Keep-Alive\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "c.get().header(of((Object)null)).run().assertBody().is(\"Keep-Alive\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "c.get().header(of((Object)null)).run().assertBody().isEmpty()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "c.get().header(of((Supplier<?>)null)).run().assertBody().is(\"Keep-Alive\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
10->15 [style = dashed, label="0"];
9->20 [style = dashed, label="0"];
8->10 [style = bold, label=""];
15->13 [style = bold, label=""];
8->15 [style = bold, label=""];
9->0 [style = bold, label=""];
19->12 [style = bold, label=""];
7->14 [style = dashed, label="0"];
3->24 [style = dashed, label="0"];
12->17 [style = bold, label=""];
21->24 [style = bold, label=""];
10->22 [style = dashed, label="0"];
23->8 [style = bold, label=""];
16->19 [style = bold, label=""];
1->7 [style = bold, label=""];
24->5 [style = bold, label=""];
8->22 [style = bold, label=""];
6->12 [style = dashed, label="0"];
20->21 [style = bold, label=""];
6->1 [style = bold, label=""];
3->5 [style = bold, label=""];
1->17 [style = dashed, label="0"];
5->6 [style = bold, label=""];
22->20 [style = bold, label=""];
17->14 [style = bold, label=""];
0->21 [style = dashed, label="0"];
7->2 [style = bold, label=""];
9->13 [style = dashed, label="0"];
2->25 [style = dashed, label="0"];
0->18 [style = dashed, label="0"];
4->8 [style = bold, label=""];
11->8 [style = bold, label=""];
10->9 [style = bold, label=""];
14->2 [style = bold, label=""];
7->25 [style = bold, label=""];
5->19 [style = dashed, label="0"];
3->16 [style = dashed, label="0"];
13->18 [style = bold, label=""];
18->16 [style = bold, label=""];
}
