digraph {
27 [style = filled, label = "count == 1@@@51@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Git git = getGitTestRepository()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "removeFileBranchTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "git.checkout().setCreateBranch(false).setName(branchTest).call()@@@64@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Status status = new Git(repository).status().call()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(count,1)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "count = 0@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "count++@@@46@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "template.send(\"direct:commit-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessageBranch)}})@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "fileToAdd1.createNewFile()@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "git.commit().setMessage(commitMessageAll).call()@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "git.commit().setMessage(commitMessage).call()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "repository.close()@@@67@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
59 [style = filled, label = "git.checkout().setCreateBranch(false).setName(branchTest).call()@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Repository repository = getTestRepository()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "fileToAdd.createNewFile()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(count,2)@@@48@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageBranch)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "count == 0@@@48@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "count++@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "count = 0@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "count++@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "git.add().addFilepattern(filenameBranchToAdd).call()@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "git.close()@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "logs = git.log().call()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int count = 0@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "count++@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "git.add().addFilepattern(filenameToAdd).call()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Iterable<RevCommit> logs = new Git(repository).log().call()@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "status = git.status().call()@@@65@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "status = git.status().call()@@@43@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessage)}})@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "fileToAdd.createNewFile()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageAll)@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "template.send(\"direct:commit-all-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessageAll)}})@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "count == 0@@@40@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "commitBranchTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "template.send(\"direct:remove-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "template.send(\"direct:add-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameBranchToAdd)}})@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "repository.close()@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "template.send(\"direct:remove-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@57@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Git git = new Git(repository)@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Status status = git.status().call()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "count == 1@@@43@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(count,2)@@@56@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(count,1)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "fileToAdd1.createNewFile()@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "count == 0@@@27@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "removeFileBranchTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertFalse(status.getAdded().contains(filenameToAdd))@@@66@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "logs = git.log().call()@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "git = new Git(repository)@@@63@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "assertFalse(status.getAdded().contains(filenameToAdd))@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "logs = git.log().call()@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "assertEquals(count,2)@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30->5 [style = dotted, label="true"];
27->14 [style = dotted, label="true"];
22->15 [style = bold, label=""];
70->64 [style = bold, label=""];
58->32 [style = bold, label=""];
8->63 [style = bold, label=""];
42->9 [style = bold, label=""];
43->42 [style = bold, label=""];
64->8 [style = bold, label=""];
51->53 [style = bold, label=""];
19->11 [style = bold, label=""];
65->14 [style = bold, label=""];
43->30 [style = solid, label="count"];
29->9 [style = solid, label="count"];
3->18 [style = bold, label=""];
9->26 [style = bold, label=""];
44->46 [style = bold, label=""];
52->60 [style = bold, label=""];
48->51 [style = bold, label=""];
64->67 [style = solid, label="count"];
14->67 [style = solid, label="count"];
54->35 [style = solid, label="count"];
34->17 [style = bold, label=""];
41->45 [style = bold, label=""];
53->30 [style = solid, label="count"];
53->42 [style = solid, label="count"];
29->1 [style = bold, label=""];
2->24 [style = bold, label=""];
43->44 [style = bold, label=""];
24->27 [style = bold, label=""];
27->2 [style = bold, label=""];
46->59 [style = bold, label=""];
21->13 [style = bold, label=""];
64->14 [style = solid, label="count"];
15->34 [style = bold, label=""];
8->24 [style = solid, label="count"];
0->19 [style = bold, label=""];
8->27 [style = solid, label="count"];
12->1 [style = bold, label=""];
33->23 [style = bold, label=""];
61->48 [style = bold, label=""];
56->58 [style = bold, label=""];
35->40 [style = bold, label=""];
18->20 [style = bold, label=""];
53->43 [style = solid, label="count"];
33->47 [style = bold, label=""];
47->54 [style = bold, label=""];
8->67 [style = bold, label=""];
8->2 [style = solid, label="count"];
49->41 [style = bold, label=""];
59->55 [style = bold, label=""];
2->27 [style = solid, label="count"];
14->8 [style = bold, label=""];
19->26 [style = solid, label="repository"];
43->42 [style = solid, label="count"];
8->24 [style = bold, label=""];
43->44 [style = solid, label="count"];
23->31 [style = bold, label=""];
67->65 [style = dotted, label="true"];
54->35 [style = bold, label=""];
66->70 [style = bold, label=""];
16->27 [style = bold, label=""];
27->14 [style = bold, label=""];
30->43 [style = bold, label=""];
6->21 [style = bold, label=""];
2->3 [style = bold, label=""];
53->42 [style = bold, label=""];
28->12 [style = bold, label=""];
17->38 [style = dashed, label="0"];
24->16 [style = dotted, label="true"];
32->33 [style = bold, label=""];
60->49 [style = bold, label=""];
8->63 [style = dotted, label="true"];
19->20 [style = solid, label="repository"];
30->5 [style = bold, label=""];
31->10 [style = bold, label=""];
16->63 [style = dashed, label="0"];
5->4 [style = bold, label=""];
63->67 [style = bold, label=""];
37->52 [style = bold, label=""];
14->2 [style = bold, label=""];
55->50 [style = bold, label=""];
1->29 [style = bold, label=""];
45->39 [style = bold, label=""];
10->28 [style = bold, label=""];
4->6 [style = bold, label=""];
30->66 [style = bold, label=""];
29->9 [style = bold, label=""];
25->32 [style = bold, label=""];
9->30 [style = bold, label=""];
2->3 [style = solid, label="count"];
67->65 [style = bold, label=""];
2->24 [style = solid, label="count"];
40->57 [style = bold, label=""];
12->29 [style = solid, label="count"];
20->22 [style = bold, label=""];
26->30 [style = bold, label=""];
5->43 [style = bold, label=""];
24->16 [style = bold, label=""];
54->47 [style = bold, label=""];
64->8 [style = solid, label="count"];
14->2 [style = solid, label="count"];
50->38 [style = bold, label=""];
62->37 [style = bold, label=""];
42->30 [style = bold, label=""];
42->9 [style = dotted, label="true"];
39->56 [style = bold, label=""];
57->36 [style = bold, label=""];
36->61 [style = bold, label=""];
33->54 [style = solid, label="count"];
7->25 [style = bold, label=""];
14->8 [style = solid, label="count"];
13->8 [style = bold, label=""];
2->68 [style = bold, label=""];
67->14 [style = bold, label=""];
19->37 [style = dashed, label="0"];
11->7 [style = bold, label=""];
69->19 [style = bold, label=""];
}
