digraph {
10 [style = filled, label = "XYShapeRenderer r2 = new XYShapeRenderer()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "r1.setUseFillPaint(true)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(r1.equals(r2))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "r2.setUseFillPaint(true)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "VectorRenderer r2 = new VectorRenderer()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "r1.setPaintScale(new LookupPaintScale(1.0,2.0,Color.red))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "r2.setGuideLinesVisible(true)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(r1.equals(r2))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "r1.setUseOutlinePaint(false)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(r1.equals(r2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(r1.equals(r2))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "r1.setGuideLinePaint(Color.red)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "VectorRenderer r1 = new VectorRenderer()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "r1.setSeriesFillPaint(0,Color.green)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "r1.setGuideLinePaint(Color.RED)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertFalse(r1.equals(r2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(r2.equals(r1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertFalse(r1.equals(r2))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(r1.equals(r2))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "r2.setPaintScale(new LookupPaintScale(1.0,2.0,Color.WHITE))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertTrue(r1.equals(r2))@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "r2.setGuideLinePaint(Color.red)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "r1.setGuideLinesVisible(true)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "r2.setGuideLinePaint(Color.RED)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "XYShapeRenderer r1 = new XYShapeRenderer()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "r1.setPaintScale(new LookupPaintScale(1.0,2.0,Color.WHITE))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "r2.setUseOutlinePaint(false)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(r1.equals(r2))@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "r2.setDrawOutlines(true)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "r2.setPaintScale(new LookupPaintScale(1.0,2.0,Color.red))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertTrue(r1.equals(r2))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(r1.equals(r2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "r1.setDrawOutlines(true)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertFalse(r1.equals(r2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "r2.setSeriesFillPaint(0,Color.green)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertFalse(r1.equals(r2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
32->22 [style = bold, label=""];
10->21 [style = solid, label="r2"];
10->28 [style = bold, label=""];
10->26 [style = solid, label="r2"];
26->7 [style = bold, label=""];
0->13 [style = bold, label=""];
25->33 [style = bold, label=""];
33->3 [style = bold, label=""];
3->24 [style = bold, label=""];
11->1 [style = bold, label=""];
38->28 [style = bold, label=""];
10->14 [style = solid, label="r2"];
22->19 [style = solid, label="r1"];
6->18 [style = bold, label=""];
19->29 [style = bold, label=""];
35->19 [style = solid, label="r1"];
10->23 [style = solid, label="r2"];
10->38 [style = dashed, label="0"];
10->28 [style = solid, label="r2"];
5->26 [style = bold, label=""];
29->25 [style = bold, label=""];
10->25 [style = solid, label="r2"];
12->30 [style = bold, label=""];
19->36 [style = bold, label=""];
20->3 [style = bold, label=""];
12->16 [style = bold, label=""];
10->3 [style = solid, label="r2"];
18->2 [style = bold, label=""];
13->11 [style = bold, label=""];
31->12 [style = bold, label=""];
19->8 [style = bold, label=""];
37->3 [style = bold, label=""];
38->25 [style = solid, label="r2"];
38->28 [style = solid, label="r2"];
25->20 [style = bold, label=""];
30->21 [style = bold, label=""];
36->25 [style = bold, label=""];
10->6 [style = solid, label="r2"];
17->0 [style = bold, label=""];
16->30 [style = dashed, label="0"];
25->37 [style = bold, label=""];
16->21 [style = bold, label=""];
10->2 [style = solid, label="r2"];
7->6 [style = bold, label=""];
24->17 [style = bold, label=""];
14->31 [style = bold, label=""];
22->10 [style = bold, label=""];
28->19 [style = bold, label=""];
9->14 [style = bold, label=""];
15->31 [style = dashed, label="0"];
2->27 [style = bold, label=""];
22->35 [style = dashed, label="0"];
27->23 [style = bold, label=""];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
35->38 [style = bold, label=""];
34->35 [style = bold, label=""];
20->33 [style = dashed, label="0"];
10->13 [style = solid, label="r2"];
38->3 [style = solid, label="r2"];
10->17 [style = solid, label="r2"];
23->9 [style = bold, label=""];
8->25 [style = bold, label=""];
4->22 [style = bold, label=""];
10->1 [style = solid, label="r2"];
8->29 [style = dashed, label="0"];
10->12 [style = solid, label="r2"];
}
