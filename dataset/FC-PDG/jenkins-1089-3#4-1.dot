digraph {
3 [style = filled, label = "assertTrue(upstreamProjects.contains(upstream))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "j.assertBuildStatusSuccess(downstream.scheduleBuild2(0).get())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(singleContents,singleFiles)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(downstreamProjects.contains(downstream))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "j.assertBuildStatusSuccess(upstream.scheduleBuild2(0).get())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "j.assertBuildStatusSuccess(upstream2.scheduleBuild2(0).get())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "j.jenkins.rebuildDependencyGraph()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(1,downstreamProjects.size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "fingerprintDependencies['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "FreeStyleProject downstream = createFreeStyleProjectWithFingerprints(doubleContents,doubleFiles)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(2,upstreamProjects.size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(1,downstreamProjects2.size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(downstreamProjects.contains(downstream))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<AbstractProject> downstreamProjects2 = upstream2.getDownstreamProjects()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<AbstractProject> downstreamProjects = upstream.getDownstreamProjects()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "FreeStyleProject upstream2 = createFreeStyleProjectWithFingerprints(singleContents2,singleFiles2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "FreeStyleProject upstream = createFreeStyleProjectWithFingerprints(singleContents,singleFiles)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(upstreamProjects.contains(upstream))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(upstreamProjects.contains(upstream2))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "fingerprintDependencies['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "multipleUpstreamDependencies['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<AbstractProject> upstreamProjects = downstream.getUpstreamProjects()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->22 [style = bold, label=""];
9->15 [style = solid, label="upstream"];
9->3 [style = solid, label="upstream"];
5->9 [style = bold, label=""];
21->0 [style = bold, label=""];
0->6 [style = bold, label=""];
17->9 [style = bold, label=""];
1->3 [style = bold, label=""];
4->21 [style = bold, label=""];
7->2 [style = solid, label="downstream"];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
11->9 [style = bold, label=""];
12->0 [style = bold, label=""];
15->19 [style = bold, label=""];
18->13 [style = solid, label="downstream"];
4->0 [style = bold, label=""];
20->10 [style = bold, label=""];
6->20 [style = bold, label=""];
22->18 [style = bold, label=""];
18->4 [style = bold, label=""];
3->2 [style = bold, label=""];
19->13 [style = bold, label=""];
1->16 [style = bold, label=""];
1->16 [style = dashed, label="0"];
6->10 [style = bold, label=""];
4->12 [style = bold, label=""];
16->14 [style = bold, label=""];
14->15 [style = bold, label=""];
8->4 [style = bold, label=""];
10->1 [style = bold, label=""];
7->22 [style = dashed, label="0"];
22->19 [style = solid, label="upstream2"];
}
