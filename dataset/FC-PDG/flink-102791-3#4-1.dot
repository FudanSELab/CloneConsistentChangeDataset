digraph {
30 [style = filled, label = "timeAdaptor.advanceTime(testHarness,1)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "TimeDomainAdaptor timeAdaptor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "timeAdaptor.setIsEventTime(mockAssigner)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,atLeastOnce(),17L,new TimeWindow(0,100))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "when(mockAssigner.assignWindows(anyInt(),anyLong(),anyAssignerContext())).thenReturn(Arrays.asList(new TimeWindow(0,2)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(1,timeAdaptor.numTimers(testHarness))@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(1),null,null)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testTimerCreationAndDeletion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "timeAdaptor.advanceTime(testHarness,15)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(1,timeAdaptor.numTimers(testHarness))@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "timeAdaptor.shouldDeleteTimerOnElement(mockTrigger,42)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testHarness.open()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testTimerFiring['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(2,timeAdaptor.numTimers(testHarness))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(3,timeAdaptor.numTimers(testHarness))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "timeAdaptor.shouldDeleteTimerOnElement(mockTrigger,17)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(1),null,null)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "when(mockAssigner.assignWindows(anyInt(),anyLong(),anyAssignerContext())).thenReturn(Arrays.asList(new TimeWindow(0,100)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,42)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,17)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(0,timeAdaptor.numTimers(testHarness))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Trigger<Integer,TimeWindow> mockTrigger = mockTrigger()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(4,timeAdaptor.numTimers(testHarness))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "InternalWindowFunction<Iterable<Integer>,Void,Integer,TimeWindow> mockWindowFunction = mockWindowFunction()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Integer,Void> testHarness = createWindowOperator(mockAssigner,mockTrigger,0L,intListDescriptor,mockWindowFunction)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TimeDomainAdaptor timeAdaptor@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,atLeastOnce(),42L,new TimeWindow(0,100))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,atLeastOnce(),1L,new TimeWindow(0,100))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testTimerCreationAndDeletion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "timeAdaptor.advanceTime(testHarness,42)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(3),null,null)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Integer,Void> testHarness = createWindowOperator(mockAssigner,mockTrigger,0L,mockWindowFunction)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "WindowAssigner<Integer,TimeWindow> mockAssigner = mockTimeWindowAssigner()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
15->8 [style = solid, label="testHarness"];
5->3 [style = bold, label=""];
14->31 [style = dashed, label="0"];
0->15 [style = solid, label="mockTrigger"];
21->16 [style = solid, label="testHarness"];
16->36 [style = bold, label=""];
4->18 [style = dotted, label="true"];
27->38 [style = bold, label=""];
0->23 [style = solid, label="mockTrigger"];
31->23 [style = bold, label=""];
1->8 [style = bold, label=""];
13->24 [style = bold, label=""];
22->18 [style = dotted, label="true"];
15->7 [style = bold, label=""];
15->16 [style = solid, label="testHarness"];
17->24 [style = dashed, label="0"];
0->20 [style = solid, label="mockTrigger"];
19->21 [style = solid, label="mockWindowFunction"];
0->19 [style = bold, label=""];
7->12 [style = bold, label=""];
15->38 [style = solid, label="testHarness"];
17->9 [style = bold, label=""];
11->6 [style = bold, label=""];
28->11 [style = bold, label=""];
34->13 [style = bold, label=""];
28->25 [style = dotted, label="true"];
11->21 [style = solid, label="mockAssigner"];
37->20 [style = bold, label=""];
14->10 [style = bold, label=""];
15->21 [style = dashed, label="0"];
0->35 [style = solid, label="mockTrigger"];
15->24 [style = solid, label="testHarness"];
6->0 [style = bold, label=""];
12->16 [style = bold, label=""];
0->21 [style = solid, label="mockTrigger"];
20->1 [style = bold, label=""];
15->2 [style = solid, label="testHarness"];
21->2 [style = solid, label="testHarness"];
32->30 [style = bold, label=""];
15->31 [style = solid, label="testHarness"];
0->33 [style = solid, label="mockTrigger"];
7->26 [style = bold, label=""];
23->29 [style = bold, label=""];
12->26 [style = dashed, label="0"];
24->33 [style = bold, label=""];
19->15 [style = solid, label="mockWindowFunction"];
26->16 [style = bold, label=""];
13->17 [style = bold, label=""];
29->27 [style = bold, label=""];
15->13 [style = solid, label="testHarness"];
30->35 [style = bold, label=""];
8->5 [style = bold, label=""];
0->14 [style = solid, label="mockTrigger"];
0->36 [style = solid, label="mockTrigger"];
0->17 [style = solid, label="mockTrigger"];
0->34 [style = solid, label="mockTrigger"];
21->8 [style = solid, label="testHarness"];
9->14 [style = bold, label=""];
3->13 [style = bold, label=""];
33->31 [style = bold, label=""];
21->7 [style = bold, label=""];
0->29 [style = solid, label="mockTrigger"];
0->27 [style = solid, label="mockTrigger"];
15->30 [style = solid, label="testHarness"];
10->2 [style = bold, label=""];
19->21 [style = bold, label=""];
36->37 [style = bold, label=""];
19->15 [style = bold, label=""];
35->34 [style = bold, label=""];
11->6 [style = solid, label="mockAssigner"];
4->11 [style = bold, label=""];
16->20 [style = bold, label=""];
3->32 [style = bold, label=""];
11->15 [style = solid, label="mockAssigner"];
22->11 [style = bold, label=""];
21->13 [style = solid, label="testHarness"];
18->25 [style = dashed, label="0"];
15->32 [style = solid, label="testHarness"];
0->5 [style = solid, label="mockTrigger"];
}
