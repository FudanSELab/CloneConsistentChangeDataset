digraph {
8 [style = filled, label = "ModifiableSolrParams paramsLoc = new ModifiableSolrParams()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(out.get(1).doubleValue(),-64.0,0.01)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(out.get(4).doubleValue(),-90.0,0.01)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(out.size() == 3)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testTimeDifferencingDefinedLag['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(out.get(3).doubleValue(),144.0,0.01)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(out.get(0).doubleValue(),6.0,.0)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "paramsLoc.set(\"expr\",cexpr)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "solrStream.setStreamContext(context)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\")@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(out.get(2).doubleValue(),-82.0,0.01)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(out.get(2).doubleValue(),10.0,.0)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<Tuple> tuples = getTuples(solrStream)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(out.get(0).doubleValue(),-94.0,0.01)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\")@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String cexpr = \"diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0), 12)\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "TupleStream solrStream = new SolrStream(url,paramsLoc)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testTimeDifferencingDefinedLag['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "String cexpr = \"movingMedian(array(1,2,6,9,10,12,15), 5)\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(out.get(7).doubleValue(),-16.0,0.01)@@@24@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertTrue(out.size() == 8)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StreamContext context = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testMovingMedian['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "paramsLoc.set(\"qt\",\"/stream\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(out.get(5).doubleValue(),-239.0,0.01)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(out.get(0).doubleValue(),-94.0,0.01)@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(tuples.size() == 1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(out.get(1).doubleValue(),9.0,.0)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(out.get(6).doubleValue(),-37.0,0.01)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertTrue(out.size() == 8)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
1->4 [style = bold, label=""];
2->20 [style = bold, label=""];
19->12 [style = bold, label=""];
14->28 [style = dashed, label="0"];
11->1 [style = bold, label=""];
8->19 [style = bold, label=""];
13->16 [style = solid, label="url"];
26->29 [style = bold, label=""];
9->5 [style = solid, label="context"];
30->27 [style = bold, label=""];
3->11 [style = bold, label=""];
29->25 [style = bold, label=""];
28->26 [style = bold, label=""];
0->26 [style = dashed, label="0"];
20->3 [style = bold, label=""];
10->29 [style = dashed, label="0"];
8->16 [style = solid, label="paramsLoc"];
15->18 [style = bold, label=""];
13->16 [style = bold, label=""];
17->23 [style = bold, label=""];
21->18 [style = bold, label=""];
7->14 [style = bold, label=""];
17->7 [style = bold, label=""];
12->13 [style = bold, label=""];
16->6 [style = solid, label="solrStream"];
0->10 [style = bold, label=""];
5->6 [style = bold, label=""];
14->0 [style = bold, label=""];
7->28 [style = bold, label=""];
2->25 [style = dashed, label="0"];
23->10 [style = bold, label=""];
9->5 [style = bold, label=""];
10->2 [style = bold, label=""];
18->8 [style = bold, label=""];
18->19 [style = solid, label="cexpr"];
22->24 [style = bold, label=""];
4->22 [style = bold, label=""];
27->8 [style = bold, label=""];
16->9 [style = bold, label=""];
27->19 [style = solid, label="cexpr"];
}
