digraph {
3 [style = filled, label = "testNestedCalls['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "client.start()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "client.close()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(latch.await(10,TimeUnit.SECONDS))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "client.start()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Timing timing = new Timing()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final BlockingQueue<ConnectionState> states = Queues.newLinkedBlockingQueue()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "i < 2@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "++i@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "client = CuratorFrameworkFactory.builder().connectString(cluster.getConnectString()).sessionTimeoutMs(timing.session()).connectionTimeoutMs(timing.connection()).retryPolicy(new RetryNTimes(3,timing.milliseconds())).canBeReadOnly(true).build()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "client = CuratorFrameworkFactory.newClient(cluster.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(100))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "client.checkExists().forPath(\"/\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testConnectionStateNewClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "TestingCluster cluster = createAndStartCluster(3)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "client.checkExists().forPath(\"/\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "client.getCuratorListenable().addListener(new CuratorListener(){@Override public void eventReceived(CuratorFramework client,CuratorEvent event){if (event.getType() == CuratorEventType.EXISTS) {Stat stat = client.checkExists().forPath(\"/yo/yo/yo\")assertNull(stat)client.create().inBackground(event.getContext()).forPath(\"/what\")}if (event.getType() == CuratorEventType.CREATE) {((CountDownLatch)event.getContext()).countDown()}}})@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "cluster.killServer(iterator.next())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "ConnectionState state = states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int i = 0@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "CuratorFramework client = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "client.getConnectionStateListenable().addListener(new ConnectionStateListener(){@Override public void stateChanged(CuratorFramework client,ConnectionState newState){states.add(newState)}})@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testNestedCalls['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "Iterator<InstanceSpec> iterator = cluster.getInstances().iterator()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertTrue(latch.await(10,TimeUnit.SECONDS))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(state,ConnectionState.READ_ONLY)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "client.start()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "client = null@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "{CloseableUtils.closeQuietly(client)CloseableUtils.closeQuietly(cluster)}@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "client.checkExists().inBackground(latch).forPath(\"/hey\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
17->25 [style = bold, label=""];
27->18 [style = bold, label=""];
1->4 [style = bold, label=""];
23->20 [style = bold, label=""];
7->2 [style = solid, label="client"];
30->17 [style = bold, label=""];
13->24 [style = bold, label=""];
24->14 [style = dotted, label="true"];
9->2 [style = bold, label=""];
15->21 [style = bold, label=""];
16->29 [style = bold, label=""];
18->30 [style = bold, label=""];
5->9 [style = dashed, label="0"];
6->0 [style = bold, label=""];
31->19 [style = solid, label="client"];
6->22 [style = dashed, label="0"];
8->7 [style = bold, label=""];
24->14 [style = bold, label=""];
29->28 [style = bold, label=""];
31->26 [style = bold, label=""];
5->2 [style = bold, label=""];
22->27 [style = bold, label=""];
3->7 [style = bold, label=""];
24->31 [style = bold, label=""];
25->11 [style = bold, label=""];
10->12 [style = bold, label=""];
0->1 [style = bold, label=""];
7->6 [style = bold, label=""];
26->15 [style = bold, label=""];
29->28 [style = solid, label="state"];
28->19 [style = bold, label=""];
21->16 [style = bold, label=""];
14->13 [style = bold, label=""];
27->19 [style = solid, label="cluster"];
20->24 [style = bold, label=""];
20->24 [style = solid, label="i"];
11->23 [style = bold, label=""];
4->5 [style = bold, label=""];
12->22 [style = bold, label=""];
24->13 [style = dotted, label="true"];
}
