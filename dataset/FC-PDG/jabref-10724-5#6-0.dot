digraph {
0 [style = filled, label = "Files.createFile(file)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "writeMultipleEntriesInASingleFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "entryTuring.setField(StandardField.AUTHOR,\"Alan Turing\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "String expected = \" <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\" + \" <rdf:Description xmlns:dc=\"http://purl.org/dc/elements/1.1/\" rdf:about=\"\">\" + \" <dc:creator>\" + \" <rdf:Seq>\" + \" <rdf:li>Alan Turing</rdf:li>\" + \" </rdf:Seq>\" + \" </dc:creator>\" + \" <dc:format>application/pdf</dc:format>\" + \" <dc:type>\" + \" <rdf:Bag>\" + \" <rdf:li>Misc</rdf:li>\" + \" </rdf:Bag>\" + \" </dc:type>\" + \" </rdf:Description>\" + \" <rdf:Description xmlns:dc=\"http://purl.org/dc/elements/1.1/\" rdf:about=\"\">\" + \" <dc:creator>\" + \" <rdf:Seq>\" + \" <rdf:li>Michael Armbrust</rdf:li>\" + \" </rdf:Seq>\" + \" </dc:creator>\" + \" <dc:relation>\" + \" <rdf:Bag>\" + \" <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\" + \" </rdf:Bag>\" + \" </dc:relation>\" + \" <dc:format>application/pdf</dc:format>\" + \" <dc:type>\" + \" <rdf:Bag>\" + \" <rdf:li>Misc</rdf:li>\" + \" </rdf:Bag>\" + \" </dc:type>\" + \" </rdf:Description>\" + \" </rdf:RDF>\"@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(xmpPreferences.getXmpPrivacyFilter()).thenReturn(Arrays.asList(\"author\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "entryArmbrust.setField(StandardField.AUTHOR,\"Michael Armbrust\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(expected,actual)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String expected = \" <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\" + \" <rdf:Description xmlns:dc=\"http://purl.org/dc/elements/1.1/\" rdf:about=\"\">\" + \" <dc:format>application/pdf</dc:format>\" + \" <dc:type>\" + \" <rdf:Bag>\" + \" <rdf:li>Misc</rdf:li>\" + \" </rdf:Bag>\" + \" </dc:type>\" + \" </rdf:Description>\" + \" </rdf:RDF>\"@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "entryArmbrust.setField(\"author\",\"Michael Armbrust\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "String actual = String.join(\"\",Files.readAllLines(file))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "exportSingleEntryWithPrivacyFilter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "@TempDir Path testFolder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "@TempDir Path testFolder@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "entry.setField(\"author\",\"Alan Turing\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "writeMultipleEntriesInASingleFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "exporter.export(databaseContext,file,encoding,Collections.singletonList(entry))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "entryArmbrust.setCiteKey(\"Armbrust2010\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "exporter.export(databaseContext,file,encoding,Arrays.asList(entryTuring,entryArmbrust))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(expected,actual)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "when(xmpPreferences.isUseXMPPrivacyFilter()).thenReturn(true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "BibEntry entry = new BibEntry()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "BibEntry entryArmbrust = new BibEntry()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Files.createFile(file)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->16 [style = solid, label="file"];
4->3 [style = bold, label=""];
15->2 [style = bold, label=""];
19->21 [style = solid, label="entry"];
16->11 [style = bold, label=""];
18->23 [style = bold, label=""];
26->17 [style = bold, label=""];
0->6 [style = bold, label=""];
0->19 [style = bold, label=""];
26->25 [style = dotted, label="true"];
19->20 [style = bold, label=""];
2->4 [style = solid, label="file"];
5->0 [style = solid, label="file"];
3->16 [style = dashed, label="0"];
3->11 [style = bold, label=""];
7->4 [style = bold, label=""];
5->14 [style = bold, label=""];
2->10 [style = bold, label=""];
11->9 [style = bold, label=""];
0->20 [style = dashed, label="0"];
12->7 [style = bold, label=""];
24->5 [style = bold, label=""];
20->21 [style = bold, label=""];
11->9 [style = solid, label="expected"];
0->14 [style = dashed, label="0"];
16->9 [style = solid, label="actual"];
17->24 [style = bold, label=""];
6->4 [style = solid, label="entryArmbrust"];
22->18 [style = bold, label=""];
3->9 [style = solid, label="actual"];
10->5 [style = bold, label=""];
15->8 [style = dotted, label="true"];
5->0 [style = bold, label=""];
21->22 [style = bold, label=""];
13->7 [style = bold, label=""];
18->23 [style = solid, label="expected"];
11->18 [style = dashed, label="0"];
6->13 [style = bold, label=""];
5->21 [style = solid, label="file"];
1->8 [style = dotted, label="true"];
2->10 [style = solid, label="file"];
8->25 [style = dashed, label="0"];
1->2 [style = bold, label=""];
12->13 [style = dashed, label="0"];
5->19 [style = dashed, label="0"];
22->23 [style = solid, label="actual"];
14->6 [style = bold, label=""];
4->16 [style = bold, label=""];
5->4 [style = solid, label="entryTuring"];
6->12 [style = bold, label=""];
}
