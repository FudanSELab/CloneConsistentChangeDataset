digraph {
28 [style = filled, label = "finish.signal()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "cancelQuietDownShouldSuccessOnQuietDownedJenkins['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertThat(((FreeStyleProject)j.jenkins.getItem(\"aProject\")).getBuilds(),hasSize(1))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(((FreeStyleProject)j.jenkins.getItem(\"aProject\")).getBuilds(),hasSize(2))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "QuietDownCommandTest.assertJenkinsInQuietMode(j)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(((FreeStyleProject)j.jenkins.getItem(\"aProject\")).getBuilds(),hasSize(2))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "finish.signal()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(project.isBuilding(),equalTo(false))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "QuietDownCommandTest.assertJenkinsNotInQuietMode(j)@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "cancelQuietDownShouldSuccessOnQuietDownedJenkins['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "cancelQuietDownShouldSuccessOnQuietDownedJenkinsAndRunningExecutor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(project.isBuilding(),equalTo(true))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(result,succeededSilently())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "build.get()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Future<FreeStyleBuild> build = OnlineNodeCommandTest.startBlockingAndFinishingBuild(project,finish)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "j.jenkins.getActiveInstance().doQuietDown()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "QuietDownCommandTest.assertJenkinsNotInQuietMode(j)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Jenkins.ADMINISTER).invoke()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(project.isBuilding(),equalTo(true))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "build.get()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "QuietDownCommandTest.assertJenkinsInQuietMode(j)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final OneShotEvent finish = new OneShotEvent()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(project.isBuilding(),equalTo(false))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "build = OnlineNodeCommandTest.startBlockingAndFinishingBuild(project,finish)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Jenkins.ADMINISTER).invoke()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final FreeStyleProject project = j.createFreeStyleProject(\"aProject\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "QuietDownCommandTest.assertJenkinsNotInQuietMode(j)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "j.assertBuildStatusSuccess(build)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "j.assertBuildStatusSuccess(build)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "j.jenkins.doQuietDown()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "QuietDownCommandTest.assertJenkinsNotInQuietMode(j)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(result,succeededSilently())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(((FreeStyleProject)j.jenkins.getItem(\"aProject\")).getBuilds(),hasSize(1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "j.jenkins.getActiveInstance().doQuietDown()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->18 [style = solid, label="finish"];
8->31 [style = bold, label=""];
33->15 [style = bold, label=""];
20->26 [style = bold, label=""];
31->13 [style = bold, label=""];
1->3 [style = solid, label="result"];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
14->17 [style = bold, label=""];
9->20 [style = bold, label=""];
30->9 [style = bold, label=""];
24->29 [style = bold, label=""];
17->32 [style = bold, label=""];
18->20 [style = solid, label="build"];
23->17 [style = solid, label="build"];
12->23 [style = solid, label="project"];
5->1 [style = bold, label=""];
25->24 [style = bold, label=""];
7->5 [style = bold, label=""];
28->21 [style = bold, label=""];
8->31 [style = solid, label="result"];
23->33 [style = bold, label=""];
29->19 [style = bold, label=""];
3->2 [style = bold, label=""];
10->8 [style = bold, label=""];
0->4 [style = bold, label=""];
21->22 [style = bold, label=""];
4->7 [style = dashed, label="0"];
27->10 [style = bold, label=""];
18->25 [style = bold, label=""];
12->18 [style = solid, label="project"];
32->18 [style = bold, label=""];
6->7 [style = bold, label=""];
22->14 [style = bold, label=""];
15->27 [style = bold, label=""];
11->23 [style = bold, label=""];
4->5 [style = bold, label=""];
16->12 [style = bold, label=""];
11->23 [style = solid, label="finish"];
13->28 [style = bold, label=""];
19->30 [style = bold, label=""];
}
