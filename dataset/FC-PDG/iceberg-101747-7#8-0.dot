digraph {
17 [style = filled, label = "final ManifestEntry.Status expectedStatus = expectedStatuses.next()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "DataFile expected = expectedFiles.next()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Iterator<Long> seqs@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "Iterator<Long> ids@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Iterator<DataFile> expectedFiles@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "DataFile file = entry.file()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(\"Entry status should match expected ID\",expectedStatus,entry.status())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "validateManifest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "V2Assert.assertEquals(\"Sequence number should match expected\",seqs.next(),entry.sequenceNumber())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Iterator<ManifestEntry.Status> expectedStatuses@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "validateManifestEntries['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ManifestFile manifest@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertFalse(\"Should find all files in the manifest\",expectedFiles.hasNext())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Iterator<Long> ids@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Iterator<DataFile> expectedFiles@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "ManifestFile manifest@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(\"Snapshot ID should match expected ID\",ids.next(),entry.snapshotId())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ManifestFile manifest@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "validateManifest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Iterator<Long> ids@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Path should match expected\",expected.path().toString(),file.path().toString())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "seqs != null@@@6@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "V1Assert.assertEquals(\"Sequence number should default to 0\",0,entry.sequenceNumber().longValue())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Iterator<DataFile> expectedFiles@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5->8 [style = bold, label=""];
8->10 [style = bold, label=""];
10->12 [style = dotted, label="true"];
2->0 [style = dotted, label="true"];
7->23 [style = dashed, label="0"];
14->10 [style = solid, label="seqs"];
7->16 [style = dashed, label="0"];
8->3 [style = bold, label=""];
4->19 [style = bold, label=""];
10->3 [style = bold, label=""];
20->21 [style = dotted, label="true"];
15->14 [style = dotted, label="true"];
15->16 [style = dotted, label="true"];
3->4 [style = bold, label=""];
15->5 [style = bold, label=""];
15->9 [style = dotted, label="true"];
20->5 [style = bold, label=""];
8->17 [style = bold, label=""];
19->5 [style = bold, label=""];
12->13 [style = bold, label=""];
19->1 [style = bold, label=""];
13->3 [style = bold, label=""];
17->19 [style = solid, label="expectedStatus"];
10->13 [style = dotted, label="true"];
2->6 [style = dotted, label="true"];
10->12 [style = bold, label=""];
2->7 [style = dotted, label="true"];
20->23 [style = dotted, label="true"];
15->11 [style = dotted, label="true"];
17->3 [style = bold, label=""];
20->18 [style = dotted, label="true"];
4->1 [style = bold, label=""];
20->22 [style = dotted, label="true"];
4->5 [style = bold, label=""];
2->5 [style = bold, label=""];
}
