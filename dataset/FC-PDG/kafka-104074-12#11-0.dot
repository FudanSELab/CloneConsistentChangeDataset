digraph {
6 [style = filled, label = "AtomicBoolean heartbeatReceived = prepareFirstHeartbeat()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "consumerClient.poll(mockTime.timer(0))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(1,coordinator.onJoinPrepareInvokes)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testWakeupAfterJoinGroupSentExternalCompletion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "coordinator.ensureActiveGroup()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{}@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "mockClient.prepareResponse(groupCoordinatorResponse(node,Errors.NONE))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "awaitFirstHeartbeat(heartbeatReceived)@@@30@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "{}@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "setupCoordinator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "fail(\"Should have woken up from ensureActiveGroup()\")@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "mockClient.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){invocations++boolean isJoinGroupRequest = body instanceof JoinGroupRequestif (isJoinGroupRequest && invocations == 1) throw new WakeupException()return isJoinGroupRequest}},joinGroupFollowerResponse(1,\"memberId\",\"leaderId\",Errors.NONE))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(1,coordinator.onJoinCompleteInvokes)@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "mockClient.prepareResponse(syncGroupResponse(Errors.NONE))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "mockClient.prepareResponse(null,joinGroupFollowerResponse(1,memberId,leaderId,Errors.NONE))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testWakeupAfterJoinGroupReceivedExternalCompletion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testWakeupAfterJoinGroupReceivedExternalCompletion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "WakeupException e@@@17@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "AtomicBoolean heartbeatReceived = prepareFirstHeartbeat()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "fail(\"Should have woken up from ensureActiveGroup()\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(heartbeatReceived.get())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(0,coordinator.onJoinCompleteInvokes)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "mockClient.prepareResponse(syncGroupResponse(Errors.NONE))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(0,coordinator.onJoinCompleteInvokes)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(1,coordinator.onJoinPrepareInvokes)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "WakeupException e@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "coordinator.ensureActiveGroup()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->2 [style = bold, label=""];
11->3 [style = bold, label=""];
4->6 [style = bold, label=""];
11->20 [style = bold, label=""];
26->2 [style = bold, label=""];
24->1 [style = solid, label="heartbeatReceived"];
7->10 [style = bold, label=""];
13->0 [style = bold, label=""];
2->5 [style = bold, label=""];
11->0 [style = bold, label=""];
12->4 [style = bold, label=""];
23->11 [style = bold, label=""];
19->24 [style = bold, label=""];
6->8 [style = bold, label=""];
25->11 [style = bold, label=""];
12->18 [style = dashed, label="0"];
13->11 [style = bold, label=""];
18->19 [style = bold, label=""];
3->0 [style = bold, label=""];
21->13 [style = bold, label=""];
15->16 [style = bold, label=""];
8->13 [style = bold, label=""];
5->18 [style = bold, label=""];
6->10 [style = solid, label="heartbeatReceived"];
5->12 [style = bold, label=""];
1->7 [style = bold, label=""];
24->6 [style = bold, label=""];
20->0 [style = bold, label=""];
0->14 [style = bold, label=""];
6->23 [style = bold, label=""];
14->15 [style = bold, label=""];
9->1 [style = bold, label=""];
17->2 [style = bold, label=""];
16->9 [style = bold, label=""];
}
