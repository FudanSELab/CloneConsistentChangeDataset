digraph {
12 [style = filled, label = "a1.addSubCategory(\"SubCategoryA\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertTrue(a1.hasListener(l1))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DialTextAnnotation a2 = CloneUtils.clone(a1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(a1 != a2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(a1.equals(a2))@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "SubCategoryAxis a2 = CloneUtils.clone(a1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "SubCategoryAxis a1 = new SubCategoryAxis(\"Test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(a1.getClass() == a2.getClass())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DialTextAnnotation a1 = new DialTextAnnotation(\"A1\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "a1.addChangeListener(l1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DialTextAnnotation a2 = (DialTextAnnotation)a1.clone()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertFalse(a2.hasListener(l1))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(a1 != a2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
4->3 [style = bold, label=""];
7->1 [style = bold, label=""];
7->9 [style = solid, label="l1"];
0->4 [style = solid, label="a2"];
0->8 [style = solid, label="a2"];
2->6 [style = bold, label=""];
11->6 [style = bold, label=""];
6->4 [style = solid, label="a1"];
6->0 [style = bold, label=""];
10->4 [style = solid, label="a2"];
14->7 [style = solid, label="a2"];
6->10 [style = solid, label="a1"];
7->5 [style = solid, label="l1"];
14->3 [style = solid, label="a2"];
15->14 [style = solid, label="a1"];
0->10 [style = dashed, label="0"];
1->9 [style = bold, label=""];
8->7 [style = bold, label=""];
7->1 [style = solid, label="l1"];
0->4 [style = bold, label=""];
3->8 [style = bold, label=""];
6->10 [style = bold, label=""];
12->14 [style = bold, label=""];
10->4 [style = bold, label=""];
9->5 [style = bold, label=""];
15->3 [style = solid, label="a1"];
15->12 [style = bold, label=""];
13->15 [style = bold, label=""];
10->8 [style = solid, label="a2"];
}
