digraph {
0 [style = filled, label = "assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharMatcher)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharArrayMatcher)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testGetSetPrefix['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final StrSubstitutor sub = new StrSubstitutor()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "sub.setVariablePrefix('<')@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharArrayMatcher)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testGetSetPrefix['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "testGetSetSuffix['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThrows(,null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThrows(,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final StringMatcher matcher = StringMatcherFactory.INSTANCE.commaMatcher()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.StringMatcher)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertThrows(,null)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "sub.setVariablePrefixMatcher(matcher)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "sub.setVariableSuffixMatcher(matcher)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final StringSubstitutor sub = new StringSubstitutor()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.CharArrayMatcher)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertSame(matcher,sub.getVariableSuffixMatcher())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "sub.setVariableSuffix(\"<<\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(sub.getVariableSuffixMatcher() instanceof StrMatcher.CharMatcher)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertSame(matcher,sub.getVariablePrefixMatcher())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertSame(matcher,sub.getVariablePrefixMatcher())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertSame(matcher,sub.getVariableSuffixMatcher())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final StrMatcher matcher = StrMatcher.commaMatcher()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThrows(,null)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "sub.setVariableSuffix('<')@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "sub.setVariablePrefix(\"<<\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(sub.getVariablePrefixMatcher() instanceof AbstractStringMatcher.StringMatcher)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->17 [style = bold, label=""];
17->8 [style = bold, label=""];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
16->3 [style = bold, label=""];
28->29 [style = bold, label=""];
0->9 [style = bold, label=""];
15->2 [style = bold, label=""];
19->18 [style = bold, label=""];
3->1 [style = solid, label="matcher"];
3->26 [style = dashed, label="0"];
11->1 [style = bold, label=""];
0->19 [style = dashed, label="0"];
9->18 [style = dashed, label="0"];
26->20 [style = solid, label="matcher"];
11->29 [style = dashed, label="0"];
26->23 [style = solid, label="matcher"];
26->28 [style = solid, label="matcher"];
6->31 [style = dashed, label="0"];
21->24 [style = bold, label=""];
24->22 [style = bold, label=""];
12->7 [style = bold, label=""];
22->30 [style = bold, label=""];
4->28 [style = dashed, label="0"];
14->7 [style = bold, label=""];
25->31 [style = bold, label=""];
1->20 [style = dashed, label="0"];
8->0 [style = bold, label=""];
23->28 [style = bold, label=""];
3->10 [style = bold, label=""];
30->19 [style = bold, label=""];
31->26 [style = bold, label=""];
29->20 [style = bold, label=""];
3->4 [style = solid, label="matcher"];
6->16 [style = dashed, label="0"];
5->17 [style = dashed, label="0"];
12->14 [style = dashed, label="0"];
18->27 [style = bold, label=""];
26->23 [style = bold, label=""];
7->16 [style = bold, label=""];
7->6 [style = bold, label=""];
12->27 [style = dashed, label="0"];
9->14 [style = bold, label=""];
10->4 [style = bold, label=""];
7->25 [style = dashed, label="0"];
8->30 [style = dashed, label="0"];
9->12 [style = bold, label=""];
2->24 [style = dashed, label="0"];
4->11 [style = bold, label=""];
3->10 [style = solid, label="matcher"];
27->25 [style = bold, label=""];
10->23 [style = dashed, label="0"];
2->5 [style = bold, label=""];
13->2 [style = bold, label=""];
5->22 [style = dashed, label="0"];
}
