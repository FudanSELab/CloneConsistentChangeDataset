digraph {
61 [style = filled, label = "!keyIsNulls.isEmpty()@@@76@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "fields.clear()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "b = unknownLiteral@@@64@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.and(conditions),variablesSet)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "operands.add(builder.literal(false))@@@87@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "RelBuilder builder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.literal(true),variablesSet)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "builder.join(JoinRelType.INNER,builder.and(conditions),variablesSet)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "builder.join(JoinRelType.INNER,builder.literal(true),variablesSet)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "rewriteExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expressionOperands.clear()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "logic@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "builder.aggregate(builder.groupKey(builder.field(\"cs\")),builder.count(false,\"c\"))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "logic@@@86@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "builder.push(e.rel)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "operands.add(builder.isNull(builder.field(\"c\")),falseLiteral)@@@67@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "operands.add(builder.isNotNull(Util.last(builder.fields())),builder.literal(true))@@@80@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "builder.filter(conditions)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.literal(true),variablesSet)@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "builder.distinct()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "allLiterals@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "builder.distinct()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "RelBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "rewriteIn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "variablesSet.isEmpty()@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "b = null@@@61@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "!variablesSet.isEmpty()@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "operands.add(builder.isNull(builder.field(\"c\")),builder.literal(false))@@@64@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "builder.distinct()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "operands.add(builder.or(keyIsNulls),unknownLiteral)@@@77@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "isNullOpperands.addAll(keyIsNulls)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "builder.distinct()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "final RexLiteral unknownLiteral = builder.getRexBuilder().makeNullLiteral(trueLiteral.getType())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "logic@@@63@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "builder.sortLimit(0,1,ImmutableList.of(builder.call(SqlStdOperatorTable.DESC,builder.field(\"cs\"))))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "builder.join(JoinRelType.LEFT,trueLiteral,variablesSet)@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "builder.push(e.rel)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "operands.add(builder.equals(builder.field(\"ct\",\"c\"),builder.literal(0)),builder.literal(false))@@@69@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "builder.project(fields)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "allLiterals@@@65@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RexNode project = builder.and(fields.stream().map(null).collect(Collectors.toList()))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "operands.add(builder.or(keyIsNulls),builder.literal(null))@@@74@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "int offset@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "builder.aggregate(builder.groupKey(),builder.count(false,\"c\"),builder.count(builder.fields()).as(\"ck\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "return trueLiteral@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
86 [style = filled, label = "RexSubQuery e@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "builder.aggregate(builder.groupKey(fields))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "final RexLiteral falseLiteral = (RexLiteral)builder.literal(false)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "builder.join(JoinRelType.INNER,builder.literal(true),variablesSet)@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
72 [style = filled, label = "final RexLiteral trueLiteral = (RexLiteral)builder.literal(true)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
93 [style = filled, label = "return builder.literal(true)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "operands.add(builder.equals(builder.field(\"cs\"),builder.literal(false)),builder.literal(b))@@@66@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "fields.add(builder.alias(builder.literal(true),\"i\"))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "int offset@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "logic@@@56@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final List<RexNode> fields = new ArrayList<>(builder.fields())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "operands.add(builder.isNotNull(Util.last(builder.fields())),trueLiteral)@@@83@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final List<RexNode> expressionOperands = new ArrayList<>(e.getOperands())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "builder.project(builder.alias(builder.literal(true),\"cs\"))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
78 [style = filled, label = "fields.add(builder.alias(trueLiteral,\"i\"))@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
98 [style = filled, label = "builder.project(builder.alias(builder.literal(true),\"i\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "builder.project(builder.alias(project,\"cs\"))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "operands.add(builder.equals(builder.field(\"ct\",\"c\"),builder.literal(0)),falseLiteral)@@@72@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "final ImmutableList.Builder<RexNode> operands = ImmutableList.builder()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "operands.add(builder.isNotNull(builder.field(\"cs\")),trueLiteral)@@@80@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "builder.as(\"ct\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "builder.join(JoinRelType.INNER,trueLiteral,variablesSet)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
99 [style = filled, label = "builder.as(\"dt\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "operands.add(builder.isNotNull(builder.field(\"cs\")),builder.literal(true))@@@77@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,fields).stream().map(null).collect(Collectors.toList())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "boolean allLiterals = RexUtil.allLiterals(e.getOperands())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "operands.add(builder.equals(builder.field(\"cs\"),falseLiteral),b)@@@69@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "return builder.literal(true)@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "variablesSet.isEmpty()@@@66@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "offset += 2@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "logic@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "return builder.call(SqlStdOperatorTable.CASE,operands.build())@@@91@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "builder.as(\"dt\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "allLiterals@@@79@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final List<RexNode> keyIsNulls = e.getOperands().stream().filter(null).map(null).collect(Collectors.toList())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "rewriteIn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Boolean b = true@@@59@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "builder.filter(builder.or(builder.and(conditions),builder.or(isNullOpperands)))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<RexNode> isNullOpperands = fields.stream().map(null).collect(Collectors.toList())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,builder.fields()).stream().map(null).collect(Collectors.toList())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "RexSubQuery e@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "operands.add(builder.call(SqlStdOperatorTable.LESS_THAN,builder.field(\"ct\",\"ck\"),builder.field(\"ct\",\"c\")),builder.literal(b))@@@84@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
100 [style = filled, label = "builder.as(\"dt\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "return builder.isNotNull(Util.last(builder.fields()))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "RelBuilder builder@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "builder.aggregate(builder.groupKey(0))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "operands.add(builder.call(SqlStdOperatorTable.LESS_THAN,builder.field(\"ct\",\"ck\"),builder.field(\"ct\",\"c\")),b)@@@87@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "operands.add(falseLiteral)@@@90@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "RexLiteral b = trueLiteral@@@62@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "!allLiterals@@@85@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int refOffset = offset@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "builder.project(builder.alias(trueLiteral,\"cs\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44->71 [style = bold, label=""];
102->92 [style = dotted, label="true"];
72->80 [style = solid, label="trueLiteral"];
52->8 [style = bold, label=""];
13->47 [style = bold, label=""];
57->79 [style = dotted, label="true"];
82->61 [style = bold, label=""];
90->99 [style = bold, label=""];
28->37 [style = solid, label="isNullOpperands"];
11->12 [style = dotted, label="true"];
9->41 [style = solid, label="logic"];
70->88 [style = solid, label="variablesSet"];
72->74 [style = solid, label="trueLiteral"];
28->62 [style = bold, label=""];
68->69 [style = dotted, label="true"];
50->47 [style = solid, label="conditions"];
43->6 [style = dotted, label="true"];
68->59 [style = dotted, label="true"];
43->78 [style = bold, label=""];
11->44 [style = dotted, label="true"];
4->53 [style = dotted, label="true"];
102->90 [style = bold, label=""];
12->21 [style = dotted, label="true"];
95->101 [style = dotted, label="true"];
55->88 [style = dashed, label="0"];
23->57 [style = bold, label=""];
29->77 [style = dotted, label="true"];
7->60 [style = bold, label=""];
25->31 [style = solid, label="variablesSet"];
72->78 [style = solid, label="trueLiteral"];
21->26 [style = bold, label=""];
80->33 [style = bold, label=""];
12->38 [style = bold, label=""];
65->7 [style = bold, label=""];
9->11 [style = solid, label="logic"];
6->78 [style = dashed, label="0"];
33->18 [style = bold, label=""];
84->65 [style = bold, label=""];
11->71 [style = dotted, label="true"];
32->72 [style = bold, label=""];
41->64 [style = bold, label=""];
31->48 [style = bold, label=""];
43->8 [style = dotted, label="true"];
102->11 [style = dotted, label="true"];
11->28 [style = dotted, label="true"];
43->46 [style = dotted, label="true"];
49->56 [style = bold, label=""];
102->93 [style = dotted, label="true"];
72->87 [style = solid, label="trueLiteral"];
65->66 [style = dotted, label="true"];
83->67 [style = solid, label="falseLiteral"];
79->46 [style = bold, label=""];
8->39 [style = bold, label=""];
93->11 [style = bold, label=""];
5->2 [style = solid, label="fields"];
15->58 [style = dotted, label="true"];
83->73 [style = bold, label=""];
43->57 [style = dotted, label="true"];
42->85 [style = dashed, label="0"];
57->54 [style = bold, label=""];
40->61 [style = bold, label=""];
11->28 [style = bold, label=""];
68->70 [style = dotted, label="true"];
43->78 [style = dotted, label="true"];
22->33 [style = bold, label=""];
11->37 [style = dotted, label="true"];
35->18 [style = bold, label=""];
48->74 [style = bold, label=""];
70->47 [style = solid, label="variablesSet"];
15->34 [style = bold, label=""];
74->41 [style = bold, label=""];
74->66 [style = solid, label="b"];
57->79 [style = bold, label=""];
15->34 [style = dotted, label="true"];
57->54 [style = dotted, label="true"];
12->21 [style = bold, label=""];
63->78 [style = bold, label=""];
57->55 [style = bold, label=""];
54->46 [style = bold, label=""];
11->44 [style = bold, label=""];
29->77 [style = bold, label=""];
9->29 [style = solid, label="logic"];
22->81 [style = dashed, label="0"];
83->76 [style = solid, label="falseLiteral"];
7->76 [style = dotted, label="true"];
44->49 [style = bold, label=""];
41->65 [style = bold, label=""];
47->87 [style = bold, label=""];
15->16 [style = dotted, label="true"];
19->74 [style = dashed, label="0"];
43->45 [style = bold, label=""];
85->0 [style = bold, label=""];
88->46 [style = bold, label=""];
94->91 [style = bold, label=""];
33->29 [style = bold, label=""];
58->39 [style = bold, label=""];
68->86 [style = dotted, label="true"];
25->47 [style = solid, label="variablesSet"];
2->39 [style = bold, label=""];
26->16 [style = bold, label=""];
46->63 [style = bold, label=""];
69->11 [style = solid, label="logic"];
4->59 [style = dotted, label="true"];
83->82 [style = solid, label="falseLiteral"];
19->41 [style = bold, label=""];
27->0 [style = solid, label="allLiterals"];
7->76 [style = bold, label=""];
54->79 [style = dashed, label="0"];
61->42 [style = dotted, label="true"];
0->80 [style = bold, label=""];
59->48 [style = solid, label="builder"];
64->40 [style = solid, label="b"];
61->0 [style = bold, label=""];
65->1 [style = dotted, label="false"];
56->16 [style = bold, label=""];
66->61 [style = bold, label=""];
41->64 [style = dotted, label="true"];
0->51 [style = dotted, label="true"];
95->97 [style = dotted, label="true"];
35->77 [style = dashed, label="0"];
44->90 [style = dashed, label="0"];
29->35 [style = bold, label=""];
43->52 [style = dotted, label="true"];
19->35 [style = solid, label="b"];
69->13 [style = solid, label="logic"];
43->23 [style = dotted, label="true"];
32->85 [style = solid, label="keyIsNulls"];
65->1 [style = bold, label=""];
92->93 [style = bold, label=""];
11->24 [style = dotted, label="true"];
61->85 [style = dotted, label="true"];
41->65 [style = dotted, label="true"];
71->56 [style = bold, label=""];
34->44 [style = solid, label="conditions"];
50->31 [style = solid, label="conditions"];
7->66 [style = bold, label=""];
41->84 [style = dotted, label="true"];
34->37 [style = solid, label="conditions"];
24->12 [style = bold, label=""];
70->79 [style = solid, label="variablesSet"];
14->87 [style = dashed, label="0"];
40->66 [style = dashed, label="0"];
65->40 [style = dotted, label="true"];
95->96 [style = dotted, label="true"];
45->23 [style = bold, label=""];
9->13 [style = solid, label="logic"];
4->10 [style = dotted, label="true"];
5->52 [style = solid, label="fields"];
25->54 [style = solid, label="variablesSet"];
9->43 [style = solid, label="logic"];
1->61 [style = bold, label=""];
38->16 [style = bold, label=""];
59->101 [style = dashed, label="0"];
33->67 [style = bold, label=""];
27->15 [style = solid, label="allLiterals"];
43->2 [style = bold, label=""];
73->15 [style = bold, label=""];
63->6 [style = bold, label=""];
68->30 [style = bold, label=""];
50->13 [style = bold, label=""];
78->52 [style = bold, label=""];
0->81 [style = dotted, label="false"];
97->102 [style = solid, label="logic"];
20->24 [style = solid, label="project"];
76->66 [style = bold, label=""];
42->0 [style = bold, label=""];
73->84 [style = solid, label="unknownLiteral"];
11->49 [style = dotted, label="true"];
12->26 [style = dotted, label="true"];
69->29 [style = solid, label="logic"];
7->60 [style = dotted, label="true"];
100->94 [style = bold, label=""];
11->20 [style = dotted, label="true"];
57->88 [style = bold, label=""];
17->50 [style = bold, label=""];
0->22 [style = dotted, label="false"];
30->5 [style = bold, label=""];
39->17 [style = bold, label=""];
102->11 [style = bold, label=""];
95->30 [style = bold, label=""];
69->41 [style = solid, label="logic"];
15->43 [style = dotted, label="false"];
64->65 [style = bold, label=""];
84->77 [style = solid, label="b"];
15->43 [style = bold, label=""];
14->31 [style = bold, label=""];
15->11 [style = dotted, label="true"];
61->42 [style = bold, label=""];
98->102 [style = bold, label=""];
33->29 [style = dotted, label="true"];
32->62 [style = solid, label="keyIsNulls"];
77->67 [style = bold, label=""];
12->38 [style = dotted, label="false"];
65->82 [style = dotted, label="false"];
60->76 [style = dashed, label="0"];
13->14 [style = dotted, label="true"];
69->43 [style = solid, label="logic"];
72->79 [style = solid, label="trueLiteral"];
102->90 [style = dotted, label="true"];
19->40 [style = solid, label="b"];
16->58 [style = bold, label=""];
7->40 [style = bold, label=""];
102->99 [style = dotted, label="true"];
68->75 [style = dotted, label="true"];
11->56 [style = dotted, label="true"];
49->71 [style = dashed, label="0"];
61->85 [style = bold, label=""];
70->31 [style = solid, label="variablesSet"];
5->22 [style = solid, label="fields"];
72->83 [style = bold, label=""];
43->2 [style = dotted, label="true"];
27->3 [style = bold, label=""];
37->20 [style = bold, label=""];
51->80 [style = dashed, label="0"];
18->36 [style = bold, label=""];
73->85 [style = solid, label="unknownLiteral"];
84->66 [style = solid, label="b"];
4->25 [style = dotted, label="true"];
0->81 [style = bold, label=""];
30->98 [style = bold, label=""];
101->94 [style = solid, label="variablesSet"];
32->42 [style = solid, label="keyIsNulls"];
6->52 [style = bold, label=""];
34->11 [style = bold, label=""];
53->17 [style = solid, label="offset"];
43->6 [style = bold, label=""];
72->71 [style = solid, label="trueLiteral"];
64->35 [style = solid, label="b"];
13->87 [style = dotted, label="true"];
1->82 [style = dashed, label="0"];
57->88 [style = dotted, label="false"];
46->17 [style = solid, label="offset"];
64->84 [style = dashed, label="0"];
101->92 [style = solid, label="variablesSet"];
11->100 [style = bold, label=""];
95->89 [style = dotted, label="true"];
43->63 [style = dotted, label="true"];
27->65 [style = solid, label="allLiterals"];
55->46 [style = bold, label=""];
72->88 [style = solid, label="trueLiteral"];
4->30 [style = bold, label=""];
62->37 [style = bold, label=""];
87->31 [style = bold, label=""];
11->62 [style = dotted, label="true"];
43->45 [style = dotted, label="true"];
60->40 [style = bold, label=""];
0->22 [style = bold, label=""];
0->51 [style = bold, label=""];
65->7 [style = dotted, label="true"];
99->92 [style = bold, label=""];
32->15 [style = bold, label=""];
25->55 [style = solid, label="variablesSet"];
72->81 [style = solid, label="trueLiteral"];
48->19 [style = bold, label=""];
74->77 [style = solid, label="b"];
67->36 [style = bold, label=""];
10->48 [style = solid, label="builder"];
5->27 [style = bold, label=""];
81->33 [style = bold, label=""];
0->80 [style = dotted, label="true"];
13->47 [style = dotted, label="true"];
5->81 [style = solid, label="fields"];
3->32 [style = bold, label=""];
20->24 [style = bold, label=""];
65->82 [style = bold, label=""];
41->84 [style = bold, label=""];
4->9 [style = dotted, label="true"];
47->14 [style = bold, label=""];
83->66 [style = solid, label="falseLiteral"];
29->35 [style = dotted, label="true"];
75->17 [style = solid, label="offset"];
18->67 [style = dashed, label="0"];
57->55 [style = dotted, label="false"];
51->33 [style = bold, label=""];
}
