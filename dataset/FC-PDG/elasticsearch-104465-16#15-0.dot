digraph {
53 [style = filled, label = "CompoundProcessor trackingProcessor = decorate(actualProcessor,null,resultList)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "CompoundProcessor actualProcessor = new CompoundProcessor(pipelineProcessor)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Pipeline pipeline = new Pipeline(pipelineId,null,null,new CompoundProcessor(new TestProcessor(null)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(resultList.size(),equalTo(4))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "testActualPipelineProcessorWithHandledFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertThat(resultList.get(2).getType(),equalTo(\"pipeline\"))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "trackingProcessor.execute(ingestDocument,null)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(resultList.get(3).getProcessorTag(),nullValue())@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertTrue(resultList.get(2).getIngestDocument().hasField(key1))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "verify(ingestService,Mockito.atLeast(2)).getPipeline(pipelineId)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(resultList.get(1).getProcessorTag(),nullValue())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertNull(resultList.get(0).getConditionalWithResult())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "String key1 = randomAlphaOfLength(10)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "pipelineConfig.put(\"name\",pipelineId)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertThat(resultList.get(3).getFailure(),nullValue())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertThat(resultList.get(0).getType(),equalTo(\"pipeline\"))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "RuntimeException exception = new RuntimeException(\"processor failed\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertFalse(resultList.get(0).getIngestDocument().hasField(key3))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(resultList.get(3).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testActualPipelineProcessorRepeatedInvocation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "expectedResult.getIngestDocument().getIngestMetadata().put(\"pipeline\",pipelineId)@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "SimulateProcessorResult expectedResult = new SimulateProcessorResult(actualProcessor.getType(),actualProcessor.getTag(),actualProcessor.getDescription(),ingestDocument,null)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "String pipelineId = \"pipeline1\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(ingestService.getPipeline(pipelineId)).thenReturn(pipeline)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,Object> pipelineConfig = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertNotEquals(resultList.get(1).getIngestDocument().getSourceAndMetadata().get(key1),resultList.get(3).getIngestDocument().getSourceAndMetadata().get(key1))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "assertThat(resultList.get(3).getProcessorTag(),nullValue())@@@46@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertThat(resultList.get(3).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "SimulateProcessorResult expectedResult = new SimulateProcessorResult(actualProcessor.getTag(),actualProcessor.getDescription(),ingestDocument)@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertTrue(resultList.get(0).getIngestDocument().hasField(key1))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(resultList.get(1).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "String key3 = randomAlphaOfLength(10)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "PipelineProcessor pipelineProcessor = factory.create(Collections.emptyMap(),null,null,pipelineConfig)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "trackingProcessor.execute(ingestDocument,null)@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CompoundProcessor actualProcessor = new CompoundProcessor(pipelineProcessor,pipelineProcessor)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertNull(resultList.get(2).getConditionalWithResult())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertFalse(resultList.get(2).getIngestDocument().hasField(key3))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verify(ingestService,Mockito.atLeast(2)).getPipeline(pipelineId)@@@34@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Pipeline pipeline = new Pipeline(pipelineId,null,null,new CompoundProcessor(new TestProcessor(null),new CompoundProcessor(false,Collections.singletonList(new TestProcessor(null)),Collections.singletonList(new TestProcessor(null))),new TestProcessor(null)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(resultList.get(3).getFailure(),nullValue())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "IngestService ingestService = createIngestService()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(resultList.get(2).getIngestDocument().hasField(key2))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "String key2 = randomAlphaOfLength(10)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertThat(resultList.get(1).getFailure().getMessage(),equalTo(exception.getMessage()))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String pipelineId = \"pipeline1\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(resultList.get(0).getProcessorTag(),nullValue())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "when(ingestService.getPipeline(pipelineId)).thenReturn(pipeline)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertFalse(resultList.get(0).getIngestDocument().hasField(key2))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testActualPipelineProcessorRepeatedInvocation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "assertNull(resultList.get(1).getIngestDocument())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "PipelineProcessor.Factory factory = new PipelineProcessor.Factory(ingestService)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(resultList.get(1).getIngestDocument(),not(equalTo(expectedResult.getIngestDocument())))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "expectedResult.getIngestDocument().getIngestMetadata().put(\"pipeline\",pipelineId)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertNotEquals(resultList.get(0).getIngestDocument().getSourceAndMetadata().get(key1),resultList.get(1).getIngestDocument().getSourceAndMetadata().get(key1))@@@30@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(resultList.get(1).getFailure(),nullValue())@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertThat(resultList.size(),equalTo(4))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16->51 [style = bold, label=""];
10->34 [style = dashed, label="0"];
15->19 [style = solid, label="pipelineId"];
10->19 [style = bold, label=""];
15->8 [style = solid, label="pipelineId"];
1->14 [style = solid, label="pipelineId"];
15->16 [style = solid, label="pipelineId"];
50->54 [style = solid, label="key3"];
1->6 [style = solid, label="pipelineId"];
30->29 [style = bold, label=""];
12->7 [style = bold, label=""];
36->55 [style = bold, label=""];
10->51 [style = dashed, label="0"];
46->7 [style = bold, label=""];
39->38 [style = bold, label=""];
0->40 [style = bold, label=""];
21->35 [style = bold, label=""];
46->7 [style = solid, label="pipeline"];
19->28 [style = dashed, label="0"];
17->20 [style = bold, label=""];
0->3 [style = bold, label=""];
40->50 [style = bold, label=""];
2->13 [style = solid, label="ingestService"];
16->37 [style = dashed, label="0"];
28->30 [style = bold, label=""];
3->11 [style = bold, label=""];
14->10 [style = bold, label=""];
11->12 [style = bold, label=""];
20->48 [style = dashed, label="0"];
2->9 [style = bold, label=""];
16->17 [style = bold, label=""];
9->8 [style = bold, label=""];
24->5 [style = bold, label=""];
47->41 [style = solid, label="pipelineProcessor"];
41->53 [style = bold, label=""];
5->21 [style = bold, label=""];
18->4 [style = bold, label=""];
5->45 [style = dashed, label="0"];
25->26 [style = bold, label=""];
47->41 [style = bold, label=""];
0->39 [style = solid, label="key1"];
13->0 [style = bold, label=""];
21->23 [style = bold, label=""];
52->15 [style = bold, label=""];
4->10 [style = bold, label=""];
3->11 [style = solid, label="pipeline"];
41->53 [style = solid, label="actualProcessor"];
31->32 [style = bold, label=""];
4->27 [style = dashed, label="0"];
55->42 [style = bold, label=""];
50->36 [style = solid, label="key3"];
21->39 [style = dashed, label="0"];
19->16 [style = bold, label=""];
13->23 [style = solid, label="key1"];
35->25 [style = bold, label=""];
2->0 [style = solid, label="pipelineConfig"];
34->28 [style = bold, label=""];
1->3 [style = solid, label="pipelineId"];
26->31 [style = bold, label=""];
16->30 [style = dashed, label="0"];
7->18 [style = bold, label=""];
9->47 [style = solid, label="pipelineConfig"];
51->43 [style = bold, label=""];
15->8 [style = solid, label="ingestService"];
22->1 [style = bold, label=""];
12->7 [style = solid, label="actualProcessor"];
45->39 [style = bold, label=""];
8->13 [style = bold, label=""];
40->37 [style = solid, label="key2"];
15->2 [style = bold, label=""];
13->32 [style = solid, label="key1"];
4->6 [style = bold, label=""];
7->47 [style = bold, label=""];
50->46 [style = bold, label=""];
1->15 [style = bold, label=""];
14->34 [style = bold, label=""];
54->48 [style = bold, label=""];
38->36 [style = bold, label=""];
33->1 [style = bold, label=""];
0->12 [style = solid, label="pipelineProcessor"];
43->37 [style = bold, label=""];
17->29 [style = dashed, label="0"];
27->6 [style = bold, label=""];
40->38 [style = solid, label="key2"];
20->5 [style = bold, label=""];
37->54 [style = bold, label=""];
1->9 [style = solid, label="pipelineId"];
6->14 [style = bold, label=""];
48->45 [style = bold, label=""];
0->43 [style = solid, label="key1"];
18->27 [style = bold, label=""];
19->43 [style = dashed, label="0"];
44->52 [style = bold, label=""];
42->49 [style = bold, label=""];
53->4 [style = bold, label=""];
15->46 [style = solid, label="pipelineId"];
29->24 [style = bold, label=""];
17->54 [style = dashed, label="0"];
}
