digraph {
31 [style = filled, label = "BibEntry fourth = bibEntries.get(3)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(Optional.of(\"testE0 and testE1\"),first.getField(StandardField.EDITOR))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "assertEquals(StandardEntryType.Book,fourth.getType())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "BibEntry entry = bibEntries.get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(Optional.of(\"testP\"),fifth.getField(\"pages\"))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Optional.of(\"testE0 and testE1\"),first.getField(\"editor\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertEquals(Optional.of(\"testB0\"),third.getField(StandardField.JOURNAL))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(Optional.of(\"testB0\"),third.getField(\"journal\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
72 [style = filled, label = "Path file = Paths.get(.getResource(\"Endnote.book.example.enw\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(\"book\",fourth.getType())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "assertEquals(StandardEntryType.Misc,second.getType())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(Optional.of(\"testN\"),fifth.getField(StandardField.NUMBER))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "assertEquals(Optional.of(\"testJ\"),second.getField(StandardField.JOURNAL))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "assertEquals(Optional.of(\"http://d-nb.info/107601965X\"),entry.getField(\"url\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertEquals(1,bibEntries.size())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "BibEntry fifth = bibEntries.get(4)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(Optional.of(\"XX, 327\"),entry.getField(\"pages\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(Optional.of(\"testI1\"),fifth.getField(StandardField.SCHOOL))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertEquals(Optional.of(\"testF\"),fifth.getCiteKeyOptional())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(Optional.of(\"testD\"),second.getField(StandardField.YEAR))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "assertEquals(Optional.of(\"3., aktualisierte und erweiterte Auflage\"),entry.getField(\"edition\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertEquals(Optional.of(\"testC\"),second.getField(StandardField.ADDRESS))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "testImportEntries0['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
77 [style = filled, label = "assertEquals(Optional.of(\"dpunkt.verlag\"),entry.getField(\"publisher\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "BibEntry second = bibEntries.get(1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(Optional.of(\"testV\"),fifth.getField(StandardField.VOLUME))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(Optional.of(\"testB2\"),second.getField(\"booktitle\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "Path file = Paths.get(.getResource(\"Endnote.entries.enw\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(Optional.of(\"testD\"),second.getField(\"year\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertEquals(Optional.of(\"testB1\"),fourth.getField(\"series\"))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Optional.of(\"test8\"),second.getField(\"date\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(Optional.of(\"testT\"),first.getField(StandardField.TITLE))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(Optional.of(\"testI1\"),fifth.getField(\"school\"))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "testImportEntriesBookExample['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(\"mastersthesis\",fifth.getType())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Optional.of(\"testB1\"),fourth.getField(StandardField.SERIES))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "assertEquals(\"book\",entry.getType())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(Optional.of(\"Heidelberg\"),entry.getField(\"address\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testImportEntries0['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Optional.of(\"testA0 and testA1\"),first.getField(\"author\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "assertEquals(Optional.of(\"testU\"),fifth.getField(StandardField.URL))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(Optional.of(\"testJ\"),second.getField(\"journal\"))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "assertEquals(Optional.of(\"testV\"),fifth.getField(\"volume\"))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "BibEntry third = bibEntries.get(2)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(StandardEntryType.Misc,first.getType())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
73 [style = filled, label = "assertEquals(Optional.of(\"2016\"),entry.getField(\"year\"))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(Optional.of(\"testO1\"),fifth.getField(\"note\"))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "assertEquals(Optional.of(\"testA0 and testA1\"),first.getField(StandardField.AUTHOR))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "assertEquals(Optional.of(\"testP\"),fifth.getField(StandardField.PAGES))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(\"article\",third.getType())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(5,bibEntries.size())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Optional.of(\"testK\"),fifth.getField(\"keywords\"))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "assertEquals(Optional.of(\"testX\"),fifth.getField(StandardField.ABSTRACT))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertEquals(\"misc\",first.getType())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Optional.of(\"testN\"),fifth.getField(\"number\"))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "BibEntry first = bibEntries.get(0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(Optional.of(\"Prei鐃緒申鐃緒申鐃緒申el, Ren鐃緒申鐃緒申鐃緒申 and Stachmann, Bj鐃緒申鐃緒申鐃緒申rn\"),entry.getField(\"author\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(Optional.of(\"testR\"),fifth.getField(StandardField.DOI))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertEquals(Optional.of(\"testK\"),fifth.getField(StandardField.KEYWORDS))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "assertEquals(Optional.of(\"testO1\"),fifth.getField(StandardField.NOTE))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "List<BibEntry> bibEntries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(Optional.of(\"testX\"),fifth.getField(\"abstract\"))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\"misc\",second.getType())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "assertEquals(StandardEntryType.MastersThesis,fifth.getType())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(Optional.of(\"testR\"),fifth.getField(\"doi\"))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "assertEquals(Optional.of(\"test8\"),second.getField(StandardField.DATE))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "assertEquals(Optional.of(\"Versionsverwaltung\"),entry.getField(\"keywords\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(Optional.of(\"test7\"),second.getField(\"edition\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertEquals(Optional.of(\"test7\"),second.getField(StandardField.EDITION))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(Optional.of(\"testU\"),fifth.getField(\"url\"))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "assertEquals(Optional.of(\"testI0\"),fourth.getField(StandardField.PUBLISHER))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(Optional.of(\"testC\"),second.getField(\"address\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "assertEquals(Optional.of(\"testB2\"),second.getField(StandardField.BOOKTITLE))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertEquals(StandardEntryType.Article,third.getType())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(Optional.of(\"testF\"),fifth.getField(\"bibtexkey\"))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"testT\"),first.getField(\"title\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertEquals(Optional.of(\"testI0\"),fourth.getField(\"publisher\"))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "assertEquals(Optional.of(\"Git : dezentrale Versionsverwaltung im Team : Grundlagen und Workflows\"),entry.getField(\"title\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->73 [style = dashed, label="0"];
32->23 [style = bold, label=""];
4->25 [style = bold, label=""];
43->55 [style = bold, label=""];
3->24 [style = bold, label=""];
10->19 [style = bold, label=""];
53->63 [style = bold, label=""];
11->69 [style = bold, label=""];
15->69 [style = dashed, label="0"];
46->31 [style = bold, label=""];
2->46 [style = dashed, label="0"];
31->21 [style = bold, label=""];
69->68 [style = bold, label=""];
57->41 [style = bold, label=""];
7->52 [style = bold, label=""];
64->77 [style = bold, label=""];
17->52 [style = dashed, label="0"];
22->53 [style = dashed, label="0"];
8->0 [style = bold, label=""];
23->43 [style = dashed, label="0"];
4->70 [style = dashed, label="0"];
3->36 [style = bold, label=""];
45->25 [style = bold, label=""];
0->42 [style = dashed, label="0"];
70->71 [style = bold, label=""];
71->64 [style = bold, label=""];
72->11 [style = bold, label=""];
68->74 [style = bold, label=""];
66->73 [style = bold, label=""];
23->12 [style = bold, label=""];
9->41 [style = dashed, label="0"];
13->74 [style = dashed, label="0"];
20->47 [style = dashed, label="0"];
35->63 [style = dashed, label="0"];
25->51 [style = bold, label=""];
2->31 [style = bold, label=""];
12->55 [style = dashed, label="0"];
26->32 [style = bold, label=""];
14->30 [style = bold, label=""];
54->60 [style = bold, label=""];
29->72 [style = dashed, label="0"];
23->67 [style = dashed, label="0"];
12->66 [style = dashed, label="0"];
19->6 [style = bold, label=""];
33->13 [style = bold, label=""];
60->48 [style = bold, label=""];
38->57 [style = bold, label=""];
24->20 [style = bold, label=""];
41->53 [style = bold, label=""];
20->18 [style = bold, label=""];
56->58 [style = bold, label=""];
34->61 [style = dashed, label="0"];
16->48 [style = dashed, label="0"];
62->43 [style = bold, label=""];
17->2 [style = bold, label=""];
65->72 [style = bold, label=""];
40->3 [style = bold, label=""];
25->26 [style = bold, label=""];
32->77 [style = dashed, label="0"];
47->44 [style = bold, label=""];
5->7 [style = bold, label=""];
44->37 [style = bold, label=""];
61->40 [style = bold, label=""];
39->42 [style = bold, label=""];
24->36 [style = dashed, label="0"];
32->62 [style = dashed, label="0"];
27->40 [style = dashed, label="0"];
29->11 [style = bold, label=""];
15->33 [style = bold, label=""];
9->22 [style = bold, label=""];
74->75 [style = bold, label=""];
6->58 [style = dashed, label="0"];
7->17 [style = bold, label=""];
52->46 [style = bold, label=""];
67->66 [style = bold, label=""];
51->62 [style = bold, label=""];
21->34 [style = bold, label=""];
30->9 [style = bold, label=""];
31->49 [style = bold, label=""];
30->57 [style = dashed, label="0"];
55->39 [style = bold, label=""];
49->61 [style = bold, label=""];
16->76 [style = dashed, label="0"];
4->45 [style = dashed, label="0"];
28->60 [style = dashed, label="0"];
58->38 [style = bold, label=""];
18->44 [style = dashed, label="0"];
33->68 [style = dashed, label="0"];
18->10 [style = bold, label=""];
26->64 [style = dashed, label="0"];
12->8 [style = bold, label=""];
14->38 [style = dashed, label="0"];
76->70 [style = bold, label=""];
77->67 [style = bold, label=""];
16->4 [style = bold, label=""];
1->29 [style = bold, label=""];
75->76 [style = bold, label=""];
22->35 [style = bold, label=""];
13->54 [style = dashed, label="0"];
0->5 [style = bold, label=""];
5->50 [style = dashed, label="0"];
36->47 [style = bold, label=""];
26->51 [style = dashed, label="0"];
42->50 [style = bold, label=""];
19->56 [style = dashed, label="0"];
28->75 [style = dashed, label="0"];
27->3 [style = bold, label=""];
50->7 [style = bold, label=""];
28->16 [style = bold, label=""];
11->15 [style = bold, label=""];
6->14 [style = bold, label=""];
48->45 [style = bold, label=""];
59->29 [style = bold, label=""];
8->39 [style = dashed, label="0"];
10->37 [style = dashed, label="0"];
21->49 [style = dashed, label="0"];
33->54 [style = bold, label=""];
13->28 [style = bold, label=""];
34->27 [style = bold, label=""];
37->56 [style = bold, label=""];
}
