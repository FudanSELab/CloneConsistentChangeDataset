digraph {
4 [style = filled, label = "getRemoteServiceNames_allReturned['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "accept(spans)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "getSpanNames_allReturned['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<Span> spans = IntStream.rangeClosed(0,50).mapToObj(null).collect(Collectors.toList())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "getRemoteServiceNames_allReturned['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(names().getSpanNames(\"frontend\").execute()).containsExactlyInAnyOrderElementsOf(null)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(names().getRemoteServiceNames(\"frontend\").execute()).containsExactlyInAnyOrderElementsOf(null)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2->0 [style = bold, label=""];
4->2 [style = bold, label=""];
1->5 [style = dashed, label="0"];
3->2 [style = bold, label=""];
0->1 [style = bold, label=""];
2->0 [style = solid, label="spans"];
0->5 [style = bold, label=""];
6->2 [style = bold, label=""];
}
