digraph {
14 [style = filled, label = "values.put(\"a\",1.1)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "addManyFieldsWithValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(10.4D,result)@@@28@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "values.put(\"c\",3.1)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "values.put(\"b\",2.1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "values.put(\"c\",3)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(24L,result)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "values.put(\"d\",4)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "values.put(\"a\",1.1)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(a,b,c,d)\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "addManyFieldsWithValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(10D,result)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "values.put(\"b\",2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "values.clear()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "values.put(\"d\",4.1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(10.4D,result)@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "values.clear()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(10.1D,result)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "multManyFieldsWithSubmults['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,mult(c,d))\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(10L,result)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->26 [style = bold, label=""];
18->24 [style = bold, label=""];
13->3 [style = solid, label="result"];
21->27 [style = dashed, label="0"];
13->20 [style = solid, label="result"];
15->21 [style = bold, label=""];
31->32 [style = bold, label=""];
12->24 [style = solid, label="result"];
28->7 [style = bold, label=""];
11->12 [style = bold, label=""];
15->22 [style = solid, label="result"];
20->3 [style = bold, label=""];
6->19 [style = bold, label=""];
19->17 [style = bold, label=""];
1->0 [style = bold, label=""];
32->16 [style = bold, label=""];
16->2 [style = bold, label=""];
26->6 [style = bold, label=""];
9->7 [style = bold, label=""];
21->30 [style = bold, label=""];
20->3 [style = solid, label="result"];
3->4 [style = bold, label=""];
20->4 [style = solid, label="result"];
5->25 [style = bold, label=""];
18->1 [style = solid, label="result"];
15->30 [style = solid, label="result"];
14->23 [style = bold, label=""];
15->21 [style = solid, label="result"];
12->18 [style = solid, label="result"];
21->22 [style = bold, label=""];
22->30 [style = dashed, label="0"];
7->16 [style = bold, label=""];
12->18 [style = bold, label=""];
17->15 [style = bold, label=""];
29->14 [style = bold, label=""];
23->10 [style = bold, label=""];
7->32 [style = dashed, label="0"];
25->8 [style = bold, label=""];
13->20 [style = bold, label=""];
24->1 [style = bold, label=""];
27->29 [style = bold, label=""];
15->27 [style = solid, label="result"];
22->14 [style = bold, label=""];
15->27 [style = bold, label=""];
18->24 [style = solid, label="result"];
8->13 [style = bold, label=""];
0->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
