digraph {
3 [style = filled, label = "final int NUM_WORK_UNITS = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "WorkUnitState wuState = new WorkUnitState(wu,state)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertTrue(Math.abs(timeSpentMicro - (SLEEP_TIME_MICRO * NUM_RECORDS)) < (2000000),\"Time spent \" + timeSpentMicro)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "StressTestingSource source = new StressTestingSource()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final int COMPUTE_TIME_MICRO = 10000@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertTrue(Math.abs(timeSpentMicro - (COMPUTE_TIME_MICRO * NUM_RECORDS)) < (2000000))@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testSleepTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "state.setProp(StressTestingSource.NUM_RECORDS_KEY,NUM_RECORDS)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "state.setProp(StressTestingSource.SLEEP_TIME_MICRO_KEY,SLEEP_TIME_MICRO)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int NUM_RECORDS = 500@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testComputeTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<WorkUnit> wus = source.getWorkunits(state)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "(record = extractor.readRecord(null)) != null@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(record.length,100)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "long startTimeNano = System.nanoTime()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "long timeSpentMicro = (endTimeNano - startTimeNano) / (1000)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Extractor<String,byte((> extractor = source.getExtractor(wuState)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "WorkUnit wu = wus.get(0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "state.setProp(StressTestingSource.NUM_WORK_UNITS_KEY,NUM_WORK_UNITS)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final int MEM_ALLOC_BYTES = 100@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final int SLEEP_TIME_MICRO = 10000@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(Math.abs(timeSpentMicro - (SLEEP_TIME_MICRO * NUM_RECORDS)) < (2000000))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "byte(( record@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "long endTimeNano = System.nanoTime()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testSleepTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Assert.assertEquals(wus.size(),NUM_WORK_UNITS)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "state.setProp(StressTestingSource.COMPUTE_TIME_MICRO_KEY,COMPUTE_TIME_MICRO)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SourceState state = new SourceState()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "state.setProp(StressTestingSource.MEM_ALLOC_BYTES_KEY,MEM_ALLOC_BYTES)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
13->10 [style = bold, label=""];
18->3 [style = bold, label=""];
7->11 [style = bold, label=""];
28->18 [style = bold, label=""];
8->14 [style = solid, label="NUM_RECORDS"];
17->6 [style = bold, label=""];
9->22 [style = solid, label="SLEEP_TIME_MICRO"];
25->26 [style = solid, label="COMPUTE_TIME_MICRO"];
3->25 [style = bold, label=""];
11->6 [style = bold, label=""];
11->2 [style = solid, label="startTimeNano"];
26->14 [style = bold, label=""];
9->24 [style = solid, label="SLEEP_TIME_MICRO"];
8->24 [style = solid, label="NUM_RECORDS"];
10->26 [style = bold, label=""];
0->26 [style = dashed, label="0"];
22->27 [style = dashed, label="0"];
4->2 [style = bold, label=""];
9->8 [style = bold, label=""];
9->0 [style = solid, label="SLEEP_TIME_MICRO"];
2->24 [style = solid, label="timeSpentMicro"];
3->13 [style = solid, label="NUM_WORK_UNITS"];
3->19 [style = solid, label="NUM_WORK_UNITS"];
6->17 [style = dotted, label="true"];
15->5 [style = bold, label=""];
8->22 [style = solid, label="NUM_RECORDS"];
4->2 [style = solid, label="endTimeNano"];
22->24 [style = dashed, label="0"];
3->9 [style = bold, label=""];
5->19 [style = bold, label=""];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
19->1 [style = bold, label=""];
20->18 [style = bold, label=""];
0->14 [style = bold, label=""];
12->5 [style = solid, label="state"];
1->16 [style = solid, label="wu"];
1->16 [style = bold, label=""];
16->21 [style = bold, label=""];
10->0 [style = bold, label=""];
9->25 [style = dashed, label="0"];
2->27 [style = bold, label=""];
21->7 [style = bold, label=""];
8->27 [style = solid, label="NUM_RECORDS"];
2->27 [style = solid, label="timeSpentMicro"];
14->15 [style = bold, label=""];
25->8 [style = bold, label=""];
12->16 [style = solid, label="state"];
2->24 [style = bold, label=""];
2->22 [style = bold, label=""];
2->22 [style = solid, label="timeSpentMicro"];
18->10 [style = solid, label="MEM_ALLOC_BYTES"];
23->18 [style = bold, label=""];
8->12 [style = bold, label=""];
25->27 [style = solid, label="COMPUTE_TIME_MICRO"];
16->21 [style = solid, label="wuState"];
}
