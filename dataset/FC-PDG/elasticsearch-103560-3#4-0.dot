digraph {
1 [style = filled, label = "final Index index = new Index(\"index\",\"uuid\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "action.shardOperationOnPrimary(request,indexShard,ActionTestUtils.assertNoFailureListener(null))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "verify(indexShard).persistRetentionLeases()@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final IndexService indexService = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(indexService.getShard(id)).thenReturn(indexShard)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final RetentionLeaseSyncAction action = new RetentionLeaseSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()),new IndexNameExpressionResolver())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testRetentionLeaseSyncActionOnPrimary['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertNull(action.indexBlockLevel())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertNull(result.finalResponseIfSuccessful.getShardInfo())@@@18@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final int id = randomIntBetween(0,4)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(result.replicaRequest(),sameInstance(request))@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(indicesService.indexServiceSafe(index)).thenReturn(indexService)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final RetentionLeases retentionLeases = mock()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final IndexShard indexShard = mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final ShardId shardId = new ShardId(index,id)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final RetentionLeaseSyncAction.Request request = new RetentionLeaseSyncAction.Request(indexShard.shardId(),retentionLeases)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testBlocks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final IndicesService indicesService = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(indexShard.shardId()).thenReturn(shardId)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final TransportWriteAction.WritePrimaryResult<RetentionLeaseSyncAction.Request,RetentionLeaseSyncAction.Response> result = action.shardOperationOnPrimary(request,indexShard)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "testRetentionLeaseSyncActionOnPrimary['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
2->19 [style = bold, label=""];
11->1 [style = bold, label=""];
18->11 [style = bold, label=""];
5->15 [style = bold, label=""];
0->5 [style = solid, label="retentionLeases"];
8->6 [style = bold, label=""];
6->16 [style = solid, label="id"];
7->4 [style = bold, label=""];
7->15 [style = solid, label="indexShard"];
5->17 [style = solid, label="request"];
5->17 [style = bold, label=""];
16->5 [style = solid, label="shardId"];
13->11 [style = bold, label=""];
16->3 [style = solid, label="shardId"];
7->17 [style = solid, label="indexShard"];
2->0 [style = bold, label=""];
12->10 [style = bold, label=""];
3->2 [style = bold, label=""];
7->4 [style = solid, label="indexShard"];
15->17 [style = dashed, label="0"];
1->14 [style = bold, label=""];
14->8 [style = bold, label=""];
15->12 [style = bold, label=""];
10->9 [style = bold, label=""];
6->7 [style = bold, label=""];
11->2 [style = solid, label="indicesService"];
14->8 [style = solid, label="indexService"];
5->15 [style = solid, label="request"];
5->10 [style = solid, label="request"];
4->16 [style = bold, label=""];
1->16 [style = solid, label="index"];
0->5 [style = bold, label=""];
20->11 [style = bold, label=""];
}
