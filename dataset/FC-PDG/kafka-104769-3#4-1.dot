digraph {
5 [style = filled, label = "PowerMock.replayAll()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertSourceMetricValue(\"source-record-write-total\",0.0)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "retryWithToleranceOperator.metrics(errorHandlingMetrics)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "LogReporter reporter = new LogReporter(taskId)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "LogReporter reporter = new LogReporter(taskId,connConfig(reportProps))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "testErrorHandlingInSourceTasks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertSourceMetricValue(\"source-record-poll-total\",2.0)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "reportProps.put(LogReporter.LOG_ENABLE,\"true\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "EasyMock.expect(producer.send(EasyMock.anyObject(),EasyMock.anyObject())).andReturn(null).times(2)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "SourceRecord record1 = new SourceRecord(emptyMap(),emptyMap(),TOPIC,PARTITION1,valSchema,struct1)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "workerSourceTask.execute()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "sourceTask.start(EasyMock.anyObject())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "reportProps.put(ConnectorConfig.ERRORS_LOG_INCLUDE_MESSAGES_CONFIG,\"true\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "EasyMock.expectLastCall().times(2)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertErrorHandlingMetricValue(\"total-record-errors\",0.0)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "reportProps.put(ConnectorConfig.ERRORS_LOG_ENABLE_CONFIG,\"true\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "retryWithToleranceOperator.reporters(singletonList(reporter))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "sourceTask.initialize(EasyMock.anyObject())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Map<String,Object> reportProps = new HashMap<>()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EasyMock.expect(workerSourceTask.isStopping()).andReturn(true)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testErrorHandlingInSourceTasksWthBadConverter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "EasyMock.expect(sourceTask.poll()).andReturn(singletonList(record2))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testErrorHandlingInSourceTasks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Struct struct1 = new Struct(valSchema).put(\"val\",1234)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.expectLastCall()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "PowerMock.verifyAll()@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "reportProps.put(LogReporter.LOG_INCLUDE_MESSAGES,\"true\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Schema valSchema = SchemaBuilder.struct().field(\"val\",Schema.INT32_SCHEMA).build()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "EasyMock.expect(workerSourceTask.isStopping()).andReturn(false)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Struct struct1 = new Struct(valSchema).put(\"val\",1234)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "reporter.metrics(errorHandlingMetrics)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "createSourceTask(initialState,retryWithToleranceOperator,badConverter())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "SourceRecord record2 = new SourceRecord(emptyMap(),emptyMap(),TOPIC,PARTITION1,valSchema,struct2)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "retryWithToleranceOperator.metrics(errorHandlingMetrics)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "reporter.metrics(errorHandlingMetrics)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "retryWithToleranceOperator.reporters(singletonList(reporter))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "EasyMock.expect(sourceTask.poll()).andReturn(singletonList(record1))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertErrorHandlingMetricValue(\"total-record-failures\",8.0)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "EasyMock.expect(workerSourceTask.isStopping()).andReturn(false)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Struct struct2 = new Struct(valSchema).put(\"val\",6789)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "reporter.configure(reportProps)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "EasyMock.expectLastCall()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "workerSourceTask.initialize(TASK_CONFIG)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.expect(workerSourceTask.commitOffsets()).andReturn(true)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "RetryWithToleranceOperator retryWithToleranceOperator = new RetryWithToleranceOperator(time)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "retryWithToleranceOperator.configure(OPERATION_EXECUTOR_PROPS)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "PowerMock.verifyAll()@@@40@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertErrorHandlingMetricValue(\"total-records-skipped\",0.0)@@@39@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "offsetWriter.offset(EasyMock.anyObject(),EasyMock.anyObject())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Map<String,String> reportProps = new HashMap<>()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
46->44 [style = bold, label=""];
34->23 [style = solid, label="record1"];
38->5 [style = bold, label=""];
17->8 [style = bold, label=""];
39->44 [style = solid, label="reportProps"];
1->41 [style = bold, label=""];
16->2 [style = solid, label="record2"];
5->20 [style = bold, label=""];
0->6 [style = bold, label=""];
31->16 [style = bold, label=""];
48->29 [style = bold, label=""];
18->34 [style = bold, label=""];
37->30 [style = bold, label=""];
34->28 [style = solid, label="record2"];
24->46 [style = dashed, label="0"];
8->3 [style = bold, label=""];
12->11 [style = bold, label=""];
35->19 [style = bold, label=""];
7->35 [style = bold, label=""];
4->21 [style = bold, label=""];
36->28 [style = bold, label=""];
37->27 [style = solid, label="retryWithToleranceOperator"];
29->16 [style = solid, label="valSchema"];
34->31 [style = bold, label=""];
9->17 [style = bold, label=""];
20->14 [style = bold, label=""];
19->36 [style = bold, label=""];
37->48 [style = solid, label="retryWithToleranceOperator"];
31->16 [style = solid, label="struct2"];
18->34 [style = solid, label="struct1"];
27->29 [style = solid, label="struct1"];
42->0 [style = bold, label=""];
29->18 [style = bold, label=""];
15->26 [style = bold, label=""];
40->46 [style = bold, label=""];
2->38 [style = bold, label=""];
45->1 [style = bold, label=""];
6->27 [style = bold, label=""];
6->34 [style = solid, label="valSchema"];
18->34 [style = solid, label="struct2"];
44->42 [style = solid, label="reporter"];
37->1 [style = dashed, label="0"];
29->36 [style = solid, label="record1"];
17->49 [style = bold, label=""];
21->22 [style = bold, label=""];
28->23 [style = bold, label=""];
24->25 [style = bold, label=""];
33->24 [style = bold, label=""];
22->12 [style = bold, label=""];
39->40 [style = bold, label=""];
47->26 [style = bold, label=""];
29->34 [style = solid, label="valSchema"];
8->49 [style = dashed, label="0"];
26->6 [style = solid, label="reporter"];
49->3 [style = bold, label=""];
33->10 [style = solid, label="reportProps"];
6->29 [style = solid, label="valSchema"];
25->10 [style = bold, label=""];
30->0 [style = bold, label=""];
23->2 [style = bold, label=""];
13->9 [style = bold, label=""];
14->13 [style = bold, label=""];
27->29 [style = bold, label=""];
16->4 [style = bold, label=""];
3->32 [style = bold, label=""];
10->1 [style = bold, label=""];
44->45 [style = bold, label=""];
26->33 [style = bold, label=""];
43->39 [style = bold, label=""];
1->0 [style = solid, label="retryWithToleranceOperator"];
27->48 [style = dashed, label="0"];
11->7 [style = bold, label=""];
1->37 [style = bold, label=""];
41->42 [style = bold, label=""];
6->48 [style = bold, label=""];
}
