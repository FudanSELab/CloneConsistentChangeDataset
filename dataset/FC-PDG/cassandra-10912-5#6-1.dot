digraph {
17 [style = filled, label = "CachedPartition cachedCf = (CachedPartition)CacheService.instance.rowCache.get(rck)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "i++@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "rub.add(\"val\",ByteBufferUtil.bytes(values(i())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "cachedStore.truncateBlocking()@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "rub.clustering(String.valueOf(i))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "CacheService.instance.invalidateRowCache()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "RowUpdateBuilder rub = new RowUpdateBuilder(cachedStore.metadata,System.currentTimeMillis(),key)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(++startRowCacheOutOfRange,cachedStore.metric.partitionCacheHitOutOfRange.getCount())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(10).build())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(cachedCf.rowCount(),100)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ByteBuffer key = ByteBufferUtil.bytes(\"rowcachekey\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "values(i( = \"val\" + i@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(1).build())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testRoundTrip['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "long startRowCacheOutOfRange = cachedStore.metric.partitionCacheHitOutOfRange.getCount()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "rub.build().applyUnsafe()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DecoratedKey dk = cachedStore.partitioner.decorateKey(key)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE_CACHED)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "int i = 0@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(++startRowCacheOutOfRange,cachedStore.metric.partitionCacheHitOutOfRange.getCount())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "CompactionManager.instance.disableAutoCompaction()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(r.clustering().get(0),ByteBufferUtil.bytes(values(i(.substring(3)))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "int i = 0@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ColumnFamilyStore cachedStore = keyspace.getColumnFamilyStore(cf)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RowCacheKey rck = new RowCacheKey(cachedStore.metadata.cfId,dk)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String cf = \"CachedIntCF\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "rub.build().applyUnsafe()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "long startRowCacheHits = cachedStore.metric.partitionCacheHit.getCount()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i++@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(c.value(),ByteBufferUtil.bytes(\"val\" + 0))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "CacheService.instance.invalidateRowCache()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(105).build())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).fromIncl(String.valueOf(210)).toExcl(String.valueOf(215)).build())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testRoundTrip['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CachedPartition cachedCf = (CachedPartition)CacheService.instance.rowCache.get(rck)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(10).build())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "rub.add(\"val\",ByteBufferUtil.bytes(\"val\" + 0))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(c.value(),ByteBufferUtil.bytes(values(i())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(startRowCacheOutOfRange,cachedStore.metric.partitionCacheHitOutOfRange.getCount())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "rub.clustering(String.valueOf(0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(((Cell)c).value(),ByteBufferUtil.bytes(\"val\" + 0))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertEquals(startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "String values = new String((((@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testRowCacheRange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "cachedStore.truncateBlocking()@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Row r = (Row)unfiltered@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(++startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(++startRowCacheHits,cachedStore.metric.partitionCacheHit.getCount())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "i < 200@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CacheService.instance.setRowCacheCapacityInMB(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Arrays.sort(values)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Util.getAll(Util.cmd(cachedStore,dk).withLimit(101).build())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40->49 [style = bold, label=""];
38->44 [style = bold, label=""];
32->52 [style = bold, label=""];
44->35 [style = bold, label=""];
36->53 [style = bold, label=""];
55->51 [style = bold, label=""];
40->32 [style = solid, label="i"];
9->10 [style = bold, label=""];
40->29 [style = solid, label="i"];
17->38 [style = bold, label=""];
3->17 [style = solid, label="rck"];
5->0 [style = bold, label=""];
14->46 [style = bold, label=""];
24->17 [style = bold, label=""];
12->18 [style = bold, label=""];
27->17 [style = bold, label=""];
21->16 [style = bold, label=""];
2->48 [style = solid, label="startRowCacheOutOfRange"];
44->45 [style = solid, label="i"];
23->12 [style = bold, label=""];
17->27 [style = bold, label=""];
3->1 [style = solid, label="rck"];
13->14 [style = bold, label=""];
27->25 [style = bold, label=""];
17->20 [style = bold, label=""];
32->52 [style = solid, label="i"];
9->10 [style = solid, label="key"];
36->45 [style = solid, label="i"];
46->24 [style = bold, label=""];
31->5 [style = bold, label=""];
18->15 [style = bold, label=""];
4->19 [style = bold, label=""];
39->45 [style = bold, label=""];
19->2 [style = bold, label=""];
54->41 [style = bold, label=""];
19->47 [style = solid, label="startRowCacheHits"];
8->46 [style = dashed, label="0"];
20->25 [style = bold, label=""];
50->49 [style = bold, label=""];
28->43 [style = solid, label="values"];
18->50 [style = bold, label=""];
7->5 [style = bold, label=""];
21->29 [style = bold, label=""];
19->42 [style = solid, label="startRowCacheHits"];
19->15 [style = solid, label="startRowCacheHits"];
47->54 [style = bold, label=""];
52->18 [style = bold, label=""];
44->36 [style = solid, label="i"];
29->32 [style = bold, label=""];
49->21 [style = dotted, label="true"];
30->47 [style = bold, label=""];
34->14 [style = bold, label=""];
36->35 [style = bold, label=""];
43->34 [style = bold, label=""];
22->6 [style = bold, label=""];
50->49 [style = solid, label="i"];
49->29 [style = dotted, label="true"];
50->29 [style = solid, label="i"];
33->55 [style = bold, label=""];
11->4 [style = bold, label=""];
35->39 [style = bold, label=""];
32->43 [style = solid, label="values"];
45->36 [style = bold, label=""];
49->50 [style = dotted, label="true"];
0->11 [style = bold, label=""];
16->23 [style = bold, label=""];
3->28 [style = bold, label=""];
49->52 [style = dotted, label="true"];
51->37 [style = bold, label=""];
28->45 [style = solid, label="values"];
50->32 [style = solid, label="i"];
3->21 [style = bold, label=""];
41->33 [style = bold, label=""];
48->30 [style = bold, label=""];
15->8 [style = bold, label=""];
37->42 [style = bold, label=""];
8->13 [style = bold, label=""];
20->17 [style = bold, label=""];
9->21 [style = solid, label="key"];
28->40 [style = bold, label=""];
26->5 [style = bold, label=""];
20->45 [style = dashed, label="0"];
20->27 [style = dashed, label="0"];
42->17 [style = bold, label=""];
10->3 [style = bold, label=""];
2->14 [style = solid, label="startRowCacheOutOfRange"];
40->49 [style = solid, label="i"];
19->14 [style = solid, label="startRowCacheHits"];
49->43 [style = bold, label=""];
49->21 [style = bold, label=""];
14->1 [style = bold, label=""];
10->3 [style = solid, label="dk"];
1->24 [style = bold, label=""];
11->4 [style = solid, label="cf"];
32->45 [style = solid, label="values"];
49->18 [style = dotted, label="true"];
16->29 [style = dashed, label="0"];
32->50 [style = solid, label="i"];
19->33 [style = solid, label="startRowCacheHits"];
6->9 [style = bold, label=""];
2->22 [style = bold, label=""];
49->32 [style = dotted, label="true"];
24->48 [style = bold, label=""];
24->38 [style = dashed, label="0"];
}
