digraph {
54 [style = filled, label = "testTable.addReplaceCommit(\"00000000000005\",Option.of(replaceMetadata.getKey()),Option.empty(),replaceMetadata.getValue())@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "HoodieTestTable testTable = HoodieTestTable.of(metaClient)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(0,hoodieCleanStatsOne.size(),\"Must not scan any partitions and clean any files\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(0,hoodieCleanStatsTwo.size(),\"Must not scan any partitions and clean any files\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p1,file1P1C0,file3P1C2)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p0,file3P1C2,file4P1C4)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withMetadataConfig(HoodieMetadataConfig.newBuilder().withAssumeDatePartitioning(true).build()).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS).retainFileVersions(1).build()).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(0,hoodieCleanStatsThree.size(),\"Must not scan any partitions and clean any files\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Map<String,String> partitionAndFileId004 = testTable.forReplaceCommit(\"00000000000004\").getFileIdsWithBaseFilesInPartitions(p0)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "String commitTime = makeNewCommitTime(1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsOne = runCleaner(config)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p0,file2P0C1,file4P0C3)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "List<HoodieCleanStat> cleanStats = runCleaner(config)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testTable.addInflightCommit(\"00000000000001\").withBaseFilesInPartition(p0,file1P0C0).withBaseFilesInPartition(p1,file1P1C0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String p1 = \"2020/01/02\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "String file2P0C1 = partitionAndFileId002.get(p0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "testTable.addReplaceCommit(\"00000000000004\",Option.of(replaceMetadata.getKey()),Option.empty(),replaceMetadata.getValue())@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsFive = runCleaner(config,2)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testTable.addReplaceCommit(\"00000000000003\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "testTable.addReplaceCommit(\"00000000000002\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "String file3P1C2 = partitionAndFileId003.get(p1)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "metaClient.getActiveTimeline().saveAsComplete(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMMIT_ACTION,\"00000000000001\"),Option.of(commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String file4P1C4 = partitionAndFileId005.get(p1)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "HoodieCommitMetadata commitMetadata = generateCommitMetadata(Collections.unmodifiableMap(new HashMap<String,List<String>>(){}))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testTable.addReplaceCommit(\"00000000000003\",Option.of(replaceMetadata.getKey()),Option.empty(),replaceMetadata.getValue())@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testTable.addReplaceCommit(\"00000000000005\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsTwo = runCleaner(config)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withMetadataConfig(HoodieMetadataConfig.newBuilder().withAssumeDatePartitioning(true).build()).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_COMMITS).retainCommits(2).build()).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,String> partitionAndFileId005 = testTable.forReplaceCommit(\"00000000000005\").getFileIdsWithBaseFilesInPartitions(p1)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "metaClient = HoodieTableMetaClient.reload(metaClient)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String file1P1C0 = UUID.randomUUID().toString()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertFalse(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@61@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testTable.addReplaceCommit(\"00000000000002\",Option.of(replaceMetadata.getKey()),Option.empty(),replaceMetadata.getValue())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String file4P0C3 = partitionAndFileId004.get(p0)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Map<String,String> partitionAndFileId002 = testTable.forReplaceCommit(\"00000000000002\").getFileIdsWithBaseFilesInPartitions(p0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "os.write(new byte(((()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testTable.addReplaceCommit(\"00000000000004\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "testCleanWithReplaceCommits['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "String file1P0C0 = UUID.randomUUID().toString()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "List<String> cleanerFileNames = Arrays.asList(HoodieTimeline.makeRequestedCleanerFileName(commitTime),HoodieTimeline.makeInflightCleanerFileName(commitTime))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "metaClient = HoodieTableMetaClient.reload(metaClient)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "testCleanPreviousCorruptedCleanFiles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(0,cleanStats.size(),\"Must not clean any files\")@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "Path commitFile = new Path(Paths.get(metaClient.getBasePath(),HoodieTableMetaClient.METAFOLDER_NAME,f).toString())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "testCleanWithReplaceCommits['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Map<String,String> partitionAndFileId003 = testTable.forReplaceCommit(\"00000000000003\").getFileIdsWithBaseFilesInPartitions(p1)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Pair<HoodieRequestedReplaceMetadata,HoodieReplaceCommitMetadata> replaceMetadata = generateReplaceCommitMetadata(p0,file1P0C0,file2P0C1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String p0 = \"2020/01/01\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsThree = runCleaner(config)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsFour = runCleaner(config)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56->29 [style = bold, label=""];
31->37 [style = bold, label=""];
33->9 [style = solid, label="p1"];
41->2 [style = solid, label="file2P0C1"];
21->25 [style = solid, label="p0"];
65->62 [style = bold, label=""];
21->3 [style = solid, label="p0"];
55->51 [style = bold, label=""];
39->6 [style = solid, label="config"];
37->15 [style = bold, label=""];
33->13 [style = solid, label="p1"];
45->10 [style = solid, label="file3P1C2"];
34->50 [style = bold, label=""];
38->39 [style = bold, label=""];
18->45 [style = bold, label=""];
47->11 [style = bold, label=""];
21->49 [style = solid, label="p0"];
66->64 [style = solid, label="commitTime"];
0->55 [style = dashed, label="0"];
66->64 [style = bold, label=""];
41->35 [style = solid, label="file2P0C1"];
45->47 [style = solid, label="file3P1C2"];
8->25 [style = solid, label="file4P0C3"];
7->40 [style = solid, label="file1P0C0"];
33->18 [style = solid, label="p1"];
54->6 [style = bold, label=""];
40->24 [style = bold, label=""];
23->12 [style = bold, label=""];
42->21 [style = bold, label=""];
21->64 [style = dashed, label="0"];
21->36 [style = solid, label="p0"];
53->48 [style = bold, label=""];
33->7 [style = bold, label=""];
21->14 [style = solid, label="p0"];
41->36 [style = solid, label="file2P0C1"];
5->54 [style = dashed, label="0"];
7->27 [style = solid, label="file1P0C0"];
50->43 [style = bold, label=""];
33->1 [style = solid, label="p1"];
25->36 [style = bold, label=""];
17->47 [style = solid, label="file1P1C0"];
11->44 [style = bold, label=""];
33->10 [style = solid, label="p1"];
8->52 [style = solid, label="file4P0C3"];
21->52 [style = solid, label="p0"];
21->43 [style = solid, label="p0"];
16->32 [style = bold, label=""];
20->14 [style = bold, label=""];
17->1 [style = solid, label="file1P1C0"];
33->24 [style = solid, label="p1"];
3->0 [style = bold, label=""];
58->39 [style = bold, label=""];
33->45 [style = solid, label="p1"];
47->57 [style = bold, label=""];
23->60 [style = dashed, label="0"];
21->27 [style = solid, label="p0"];
5->6 [style = bold, label=""];
21->34 [style = solid, label="p0"];
17->37 [style = solid, label="file1P1C0"];
39->23 [style = solid, label="config"];
39->62 [style = dashed, label="0"];
45->14 [style = solid, label="file3P1C2"];
39->42 [style = bold, label=""];
8->3 [style = solid, label="file4P0C3"];
44->30 [style = bold, label=""];
7->17 [style = bold, label=""];
45->32 [style = solid, label="file3P1C2"];
21->40 [style = solid, label="p0"];
41->49 [style = solid, label="file2P0C1"];
6->25 [style = bold, label=""];
8->3 [style = bold, label=""];
22->29 [style = bold, label=""];
39->44 [style = solid, label="config"];
9->20 [style = bold, label=""];
33->47 [style = solid, label="p1"];
51->52 [style = bold, label=""];
62->66 [style = bold, label=""];
3->55 [style = bold, label=""];
48->26 [style = bold, label=""];
21->16 [style = solid, label="p0"];
17->24 [style = solid, label="file1P1C0"];
7->67 [style = dashed, label="0"];
33->46 [style = solid, label="p1"];
45->31 [style = solid, label="file3P1C2"];
17->13 [style = solid, label="file1P1C0"];
33->31 [style = solid, label="p1"];
52->16 [style = bold, label=""];
67->63 [style = bold, label=""];
20->14 [style = solid, label="file4P1C4"];
22->56 [style = dashed, label="0"];
17->50 [style = solid, label="file1P1C0"];
32->40 [style = bold, label=""];
21->28 [style = solid, label="p0"];
63->67 [style = bold, label=""];
43->41 [style = bold, label=""];
17->13 [style = bold, label=""];
64->67 [style = bold, label=""];
63->61 [style = bold, label=""];
41->3 [style = solid, label="file2P0C1"];
7->34 [style = solid, label="file1P0C0"];
15->8 [style = bold, label=""];
17->46 [style = solid, label="file1P1C0"];
24->9 [style = bold, label=""];
33->20 [style = solid, label="p1"];
11->57 [style = dashed, label="0"];
36->10 [style = bold, label=""];
14->5 [style = bold, label=""];
41->35 [style = bold, label=""];
7->35 [style = solid, label="file1P0C0"];
21->15 [style = solid, label="p0"];
41->16 [style = solid, label="file2P0C1"];
29->4 [style = bold, label=""];
27->1 [style = bold, label=""];
2->19 [style = bold, label=""];
10->28 [style = bold, label=""];
61->60 [style = bold, label=""];
21->35 [style = solid, label="p0"];
13->53 [style = bold, label=""];
19->31 [style = bold, label=""];
62->60 [style = solid, label="config"];
35->22 [style = bold, label=""];
21->33 [style = bold, label=""];
21->8 [style = solid, label="p0"];
39->29 [style = solid, label="config"];
33->32 [style = solid, label="p1"];
12->34 [style = bold, label=""];
1->18 [style = bold, label=""];
49->27 [style = bold, label=""];
21->19 [style = solid, label="p0"];
21->2 [style = solid, label="p0"];
60->59 [style = bold, label=""];
35->56 [style = bold, label=""];
33->37 [style = solid, label="p1"];
14->54 [style = bold, label=""];
28->46 [style = bold, label=""];
7->28 [style = solid, label="file1P0C0"];
4->49 [style = bold, label=""];
7->19 [style = solid, label="file1P0C0"];
26->23 [style = bold, label=""];
0->51 [style = bold, label=""];
45->47 [style = bold, label=""];
57->44 [style = bold, label=""];
33->50 [style = solid, label="p1"];
30->2 [style = bold, label=""];
39->51 [style = solid, label="config"];
21->41 [style = solid, label="p0"];
}
