digraph {
3 [style = filled, label = "setupProcessors(0,0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Thread.sleep(1000)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "checkTimeMetric((long)values.get(\"max_local_write_committed_time_ms\"),0L,1000L)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "commitWithWait(createWriteRequest(1L,1))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "checkTimeMetric((long)values.get(\"max_server_write_committed_time_ms\"),0L,1000L)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Request req1 = createWriteRequest(1l,2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "processRequestWithWait(req1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<String,Object> values = MetricsUtils.currentServerMetrics()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(1L,values.get(\"cnt_local_write_committed_time_ms\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<String,Object> values = MetricsUtils.currentServerMetrics()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(1L,values.get(\"cnt_server_write_committed_time_ms\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Request req2 = createWriteRequest(1l,2)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testLocalWriteCommittedTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testServerWriteCommittedTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(2L,values.get(\"cnt_local_write_committed_time_ms\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "values = MetricsUtils.currentServerMetrics()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "processRequestWithWait(req2)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(1L,values.get(\"cnt_server_write_committed_time_ms\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "checkTimeMetric((long)values.get(\"max_local_write_committed_time_ms\"),0l,1000l)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testServerWriteCommittedTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "commitWithWait(req2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "commitWithWait(req1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
6->3 [style = bold, label=""];
10->20 [style = bold, label=""];
9->10 [style = solid, label="req1"];
4->16 [style = dashed, label="0"];
3->1 [style = bold, label=""];
11->14 [style = bold, label=""];
0->19 [style = dashed, label="0"];
12->13 [style = solid, label="req2"];
12->11 [style = bold, label=""];
4->19 [style = bold, label=""];
1->9 [style = dashed, label="0"];
9->10 [style = bold, label=""];
15->3 [style = bold, label=""];
8->7 [style = bold, label=""];
20->4 [style = bold, label=""];
19->16 [style = bold, label=""];
3->9 [style = bold, label=""];
13->17 [style = bold, label=""];
2->0 [style = bold, label=""];
0->4 [style = bold, label=""];
4->7 [style = dashed, label="0"];
0->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
14->13 [style = bold, label=""];
18->21 [style = bold, label=""];
9->20 [style = solid, label="req1"];
16->12 [style = bold, label=""];
12->11 [style = solid, label="req2"];
17->18 [style = bold, label=""];
2->8 [style = bold, label=""];
}
