digraph {
11 [style = filled, label = "final KafkaStreams kafkaStreams1 = createKafkaStreams(builder,streamsConfiguration())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final List<KafkaStreams> kafkaStreamsList = Arrays.asList(kafkaStreams1,kafkaStreams2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "shouldQuerySpecificActivePartitionStores['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "shouldQueryOnlyActivePartitionStoresByDefault['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "produceValueRange(key,0,batch1NumMessages)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldQueryOnlyActivePartitionStoresByDefault['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final KafkaStreams kafkaStreams2 = createKafkaStreams(builder,streamsConfiguration())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "builder.table(INPUT_TOPIC_NAME,Consumed.with(Serdes.Integer(),Serdes.Integer()),Materialized.as(TABLE_NAME).withCachingDisabled()).toStream().peek(null)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(semaphore.tryAcquire(batch1NumMessages,60,TimeUnit.SECONDS),is(equalTo(true)))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "getStreamsBuilderWithTopology(builder,semaphore)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "startApplicationAndWaitUntilRunning(kafkaStreamsList,Duration.ofSeconds(60))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "until(null)@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final int key = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final int batch1NumMessages = 100@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->4 [style = solid, label="key"];
0->9 [style = bold, label=""];
15->2 [style = bold, label=""];
9->11 [style = bold, label=""];
12->5 [style = bold, label=""];
2->6 [style = solid, label="batch1NumMessages"];
4->6 [style = bold, label=""];
7->14 [style = solid, label="semaphore"];
7->0 [style = bold, label=""];
12->5 [style = solid, label="kafkaStreamsList"];
3->12 [style = bold, label=""];
2->10 [style = bold, label=""];
10->7 [style = bold, label=""];
11->12 [style = solid, label="kafkaStreams1"];
6->1 [style = bold, label=""];
0->14 [style = bold, label=""];
0->3 [style = solid, label="builder"];
8->2 [style = bold, label=""];
0->11 [style = solid, label="builder"];
11->3 [style = bold, label=""];
0->14 [style = solid, label="builder"];
5->4 [style = bold, label=""];
3->12 [style = solid, label="kafkaStreams2"];
14->11 [style = bold, label=""];
2->4 [style = solid, label="batch1NumMessages"];
13->2 [style = bold, label=""];
}
