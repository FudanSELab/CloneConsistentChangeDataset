digraph {
3 [style = filled, label = "testQuery(\"SELECT t1.dim1, SUM(t1.cnt)\" + \"FROM druid.foo t1\" + \" LEFT JOIN (\" + \" SELECT\" + \" SUM(cnt) AS sum_cnt,\" + \" dim2\" + \" FROM druid.foo\" + \" GROUP BY dim2\" + \" ORDER BY 1 DESC\" + \" LIMIT 2\" + \") t2 ON (t1.dim2 = t2.dim2)\" + \"GROUP BY t1.dim1\" + \"ORDER BY 1\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(dimensionSpec(new DefaultDimensionSpec(\"dim1\",\"d0\"))).setAggregatorSpecs(aggregators(new LongSumAggregatorFactory(\"a0\",\"cnt\"))).setLimitSpec(new DefaultLimitSpec(ImmutableList.of(new OrderByColumnSpec(\"d0\",OrderByColumnSpec.Direction.ASCENDING,StringComparators.LEXICOGRAPHIC)),Integer.MAX_VALUE)).setContext(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21ba9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21bae,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21bb3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21bb8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21bbd,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21bc2))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "testRemovableLeftJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DimFilter filter = NullHandling.replaceWithDefault()? IN(\"dim2\",Arrays.asList(null,\"a\"),null): SELECTOR(\"dim2\",\"a\",null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testQuery(\"SELECT t1.dim1, SUM(t1.cnt)\" + \"FROM druid.foo t1\" + \" LEFT JOIN (\" + \" SELECT\" + \" SUM(cnt) AS sum_cnt,\" + \" dim2\" + \" FROM druid.foo\" + \" GROUP BY dim2\" + \" ORDER BY 1 DESC\" + \" LIMIT 2\" + \") t2 ON (t1.dim2 = t2.dim2)\" + \"GROUP BY t1.dim1\" + \"ORDER BY 1\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(QSS(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(DIMS(new DefaultDimensionSpec(\"dim1\",\"d0\"))).setAggregatorSpecs(AGGS(new LongSumAggregatorFactory(\"a0\",\"cnt\"))).setLimitSpec(new DefaultLimitSpec(ImmutableList.of(new OrderByColumnSpec(\"d0\",OrderByColumnSpec.Direction.ASCENDING,StringComparators.LEXICOGRAPHIC)),Integer.MAX_VALUE)).setContext(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21b31,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21b36,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21b3b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21b40,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21b45,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21b4a))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testQuery(\"SELECT t1.dim1, SUM(t1.cnt)\" + \"FROM druid.foo t1\" + \" INNER JOIN (\" + \" SELECT\" + \" SUM(cnt) AS sum_cnt,\" + \" dim2\" + \" FROM druid.foo\" + \" GROUP BY dim2\" + \" ORDER BY 1 DESC\" + \" LIMIT 2\" + \") t2 ON (t1.dim2 = t2.dim2)\" + \"GROUP BY t1.dim1\" + \"ORDER BY 1\",ImmutableList.of(new TopNQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(QSS(Filtration.eternity())).granularity(Granularities.ALL).dimension(new DefaultDimensionSpec(\"dim2\",\"d0\")).aggregators(AGGS(new LongSumAggregatorFactory(\"a0\",\"cnt\"))).metric(new NumericTopNMetricSpec(\"a0\")).threshold(2).context(QUERY_CONTEXT_DEFAULT).build(),GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(QSS(Filtration.eternity())).setGranularity(Granularities.ALL).setDimFilter(filter).setDimensions(DIMS(new DefaultDimensionSpec(\"dim1\",\"d0\"))).setAggregatorSpecs(AGGS(new LongSumAggregatorFactory(\"a0\",\"cnt\"))).setLimitSpec(new DefaultLimitSpec(ImmutableList.of(new OrderByColumnSpec(\"d0\",OrderByColumnSpec.Direction.ASCENDING,StringComparators.LEXICOGRAPHIC)),Integer.MAX_VALUE)).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21c6c,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21c71,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21c76,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21c7b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21c80): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21c88,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a21c8d))@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testRemovableLeftJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "testTopNFilterJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6->5 [style = bold, label=""];
0->3 [style = dashed, label="0"];
1->0 [style = bold, label=""];
4->6 [style = bold, label=""];
2->3 [style = bold, label=""];
}
