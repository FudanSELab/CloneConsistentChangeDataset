digraph {
15 [style = filled, label = "assertFileIsNotPresent(f)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertFileIsPresent(f)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCopyNoRemoveSelectors['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "executeTarget(\"copyandremove-emptypreserve\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String d = getProject().getProperty(\"dest\") + \"/a/b/c/d\"@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testCopyNoRemoveSelectors['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String d = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c/d\"@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertTrue(buildRule.getFullLog().indexOf(\"Removing orphan file:\") == -1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertDebuglogContaining(\"Removed 1 dangling file from\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String f = getProject().getProperty(\"dest\") + \"/e/f\"@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testCopyAndRemoveEmptyPreserve['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "executeTarget(\"copynoremove-selectors\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertTrue(getFullLog().indexOf(\"Removing orphan file:\") > -1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertFileIsPresent(d)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(getFullLog().indexOf(\"Removing orphan file:\") == -1)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "buildRule.executeTarget(\"copynoremove-selectors\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertDebuglogContaining(\"Removed 1 dangling directory from\")@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String f = buildRule.getProject().getProperty(\"dest\") + \"/e/f\"@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
3->6 [style = solid, label="f"];
16->13 [style = bold, label=""];
11->6 [style = solid, label="f"];
11->6 [style = bold, label=""];
0->11 [style = bold, label=""];
3->6 [style = bold, label=""];
5->9 [style = dashed, label="0"];
3->15 [style = bold, label=""];
1->0 [style = bold, label=""];
7->8 [style = bold, label=""];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
15->16 [style = bold, label=""];
8->0 [style = solid, label="d"];
4->12 [style = dashed, label="0"];
8->0 [style = bold, label=""];
3->15 [style = solid, label="f"];
5->16 [style = dashed, label="0"];
6->5 [style = bold, label=""];
13->17 [style = bold, label=""];
6->15 [style = dashed, label="0"];
4->7 [style = dashed, label="0"];
14->12 [style = bold, label=""];
1->8 [style = dashed, label="0"];
4->1 [style = bold, label=""];
6->9 [style = bold, label=""];
1->0 [style = solid, label="d"];
3->11 [style = dashed, label="0"];
}
