digraph {
28 [style = filled, label = "Assert.assertEquals(2,historyPageFilter.queueItems.size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.oldestOnPage)@@@19@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "historyPageFilter.add(runs,queueItems)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.runs.get(1).getEntryId())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(true,historyPageFilter.hasDownPage)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.runs.get(1).getEntryId())@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(3,historyPageFilter.queueItems.get(1).getEntryId())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasUpPage)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "List<ModelObject> itemList = new ArrayList<ModelObject>()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<Queue.Item> queueItems = newQueueItems(3,4)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Assert.assertEquals(12,historyPageFilter.newestOnPage)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),HistoryPageEntry.getEntryId(itemList.get(0)))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "historyPageFilter.add(itemList)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "itemList.addAll(newRuns(1,2))@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<ModelObject> runs = newRuns(1,2)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasDownPage)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "test_latest_longer_list['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "itemList.addAll(newQueueItems(11,12))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(3,historyPageFilter.runs.size())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "itemList.addAll(newRuns(1,10))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(2,historyPageFilter.queueItems.size())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasUpPage)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(4,historyPageFilter.queueItems.get(0).getEntryId())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "itemList.addAll(newQueueItems(3,4))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(4,HistoryPageEntry.getEntryId(itemList.get(0)))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.oldestOnPage)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(2),historyPageFilter.runs.get(0).getEntryId())@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(2),historyPageFilter.runs.get(0).getEntryId())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(12,historyPageFilter.queueItems.get(0).getEntryId())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "test_latest_partial_page['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "test_latest_partial_page['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,null,null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(10),historyPageFilter.runs.get(0).getEntryId())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11->16 [style = bold, label=""];
4->14 [style = bold, label=""];
18->24 [style = bold, label=""];
16->0 [style = bold, label=""];
15->23 [style = dashed, label="0"];
8->15 [style = bold, label=""];
9->0 [style = bold, label=""];
0->13 [style = bold, label=""];
12->5 [style = bold, label=""];
26->7 [style = bold, label=""];
29->30 [style = bold, label=""];
3->16 [style = solid, label="itemList"];
2->1 [style = bold, label=""];
31->32 [style = bold, label=""];
19->20 [style = bold, label=""];
12->32 [style = dashed, label="0"];
15->30 [style = dashed, label="0"];
30->25 [style = bold, label=""];
32->27 [style = bold, label=""];
0->28 [style = bold, label=""];
17->31 [style = dashed, label="0"];
24->22 [style = bold, label=""];
25->16 [style = bold, label=""];
10->7 [style = bold, label=""];
7->3 [style = bold, label=""];
1->17 [style = bold, label=""];
3->19 [style = dashed, label="0"];
13->0 [style = dashed, label="0"];
28->2 [style = bold, label=""];
5->27 [style = dashed, label="0"];
17->12 [style = bold, label=""];
22->0 [style = bold, label=""];
15->11 [style = bold, label=""];
20->23 [style = bold, label=""];
3->25 [style = solid, label="itemList"];
20->23 [style = solid, label="queueItems"];
3->8 [style = bold, label=""];
5->4 [style = bold, label=""];
21->7 [style = bold, label=""];
19->23 [style = solid, label="runs"];
1->2 [style = dashed, label="0"];
7->19 [style = bold, label=""];
14->6 [style = bold, label=""];
16->9 [style = bold, label=""];
23->18 [style = bold, label=""];
3->29 [style = bold, label=""];
8->29 [style = dashed, label="0"];
13->2 [style = bold, label=""];
2->31 [style = bold, label=""];
}
