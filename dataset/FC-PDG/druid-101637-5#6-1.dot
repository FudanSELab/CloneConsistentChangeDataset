digraph {
4 [style = filled, label = "testQuery(\"SELECT\" + \" CASE 'foo'\" + \" WHEN 'bar' THEN SUM(cnt)\" + \" WHEN 'foo' THEN SUM(m1)\" + \" WHEN 'baz' THEN SUM(m2)\" + \" END AS theCase\" + \"FROM foo\" + \"HAVING theCase = 21\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setAggregatorSpecs(aggregators(new DoubleSumAggregatorFactory(\"a0\",\"m1\"))).setHavingSpec(having(numeric_Selector(\"a0\",\"21\",null))).setContext(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9260e0))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testHavingOnGrandTotal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testQuery(\"SELECT SUM(m1) AS m1_sum FROM foo HAVING m1_sum = 21\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setAggregatorSpecs(aggregators(new DoubleSumAggregatorFactory(\"a0\",\"m1\"))).setHavingSpec(having(numeric_Selector(\"a0\",\"21\",null))).setContext(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@92605f))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "testHavingOnGrandTotal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "testPruneDeadAggregatorsThroughHaving['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testQuery(\"SELECT SUM(m1) AS m1_sum FROM foo HAVING m1_sum = 21\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setAggregatorSpecs(aggregators(new DoubleSumAggregatorFactory(\"a0\",\"m1\"))).setHavingSpec(having(selector(\"a0\",\"21\",null))).setContext(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@92609b))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->2 [style = dashed, label="0"];
0->4 [style = dashed, label="0"];
1->0 [style = bold, label=""];
3->2 [style = bold, label=""];
5->4 [style = bold, label=""];
}
