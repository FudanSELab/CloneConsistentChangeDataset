digraph {
28 [style = filled, label = "server.invoke(new CacheSerializableRunnable(\"testRegionEvents\"){@Override public void run2(){LogWriterUtils.getLogWriter().info(\"### Clearing the region on the server ###\")Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions(0()for (int i = 1 i <= 5 i++){region.put(CqQueryUsingPoolDUnitTest.KEY + i,new Portfolio(i))}region.clear()}})@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testRegionEvents['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "cqDUnitTest.closeServer(server)@@@59@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "cqDUnitTest.executeCQ(client,\"testRegionEvents_1\",false,null)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "cqDUnitTest.executeCQ(client,\"testRegionEvents_0\",false,null)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cqDUnitTest.validateCQCount(client,1)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "cqDUnitTest.createPool(client,poolName,host0,port)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "cqDUnitTest.executeCQ(client,\"testRegionEvents_0\",false,null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "VM server = host.getVM(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Wait.pause(1000)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "server.invoke(new CacheSerializableRunnable(\"testRegionEvents\"){@Override public void run2(){LogWriterUtils.getLogWriter().info(\"### Destroying the region on the server ###\")Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions(1()for (int i = 1 i <= 5 i++){region.put(CqQueryUsingPoolDUnitTest.KEY + i,new Portfolio(i))}region.destroyRegion()}})@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "server.invoke(new CacheSerializableRunnable(\"testRegionEvents\"){@Override public void run2(){LogWriterUtils.getLogWriter().info(\"### Invalidate the region on the server ###\")Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions(0()for (int i = 1 i <= 5 i++){region.put(CqQueryUsingPoolDUnitTest.KEY + i,new Portfolio(i))}region.invalidateRegion()}})@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "VM client = host.getVM(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Wait.pause(1000)@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cqDUnitTest.waitForRegionInvalidate(client,\"testRegionEvents_0\")@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "cqDUnitTest.createServer(server)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cqDUnitTest.createCQ(client,\"testRegionEvents_0\",cqDUnitTest.cqs(0()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "cqDUnitTest.createCQ(client,poolName,\"testRegionEvents_1\",cqDUnitTest.cqs(2()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "String poolName = \"testRegionEvents\"@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Host host = Host.getHost(0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testRegionEvents['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "cqDUnitTest.createClient(client,port,host0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "cqDUnitTest.waitForRegionInvalidate(client,\"testRegionEvents_0\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final int port = server.invoke(null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String host0 = NetworkUtils.getServerHostName(server.getHost())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "cqDUnitTest.createCQ(client,poolName,\"testRegionEvents_0\",cqDUnitTest.cqs(0()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "cqDUnitTest.executeCQ(client,\"testRegionEvents_1\",false,null)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "cqDUnitTest.waitForRegionClear(client,\"testRegionEvents_0\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "cqDUnitTest.closeClient(client)@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final int port = server.invoke(null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testRegionEvents['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "cqDUnitTest.waitForRegionClear(client,\"testRegionEvents_0\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = solid, label="server"];
18->3 [style = bold, label=""];
23->3 [style = bold, label=""];
9->16 [style = solid, label="client"];
9->2 [style = solid, label="client"];
25->29 [style = bold, label=""];
9->15 [style = solid, label="client"];
18->20 [style = solid, label="port"];
9->4 [style = bold, label=""];
19->1 [style = bold, label=""];
9->29 [style = solid, label="client"];
13->0 [style = bold, label=""];
0->22 [style = bold, label=""];
11->17 [style = solid, label="i"];
17->19 [style = bold, label=""];
25->26 [style = solid, label="poolName"];
9->22 [style = solid, label="client"];
25->29 [style = solid, label="poolName"];
14->4 [style = solid, label="server"];
9->17 [style = solid, label="client"];
14->9 [style = bold, label=""];
2->10 [style = bold, label=""];
8->6 [style = bold, label=""];
10->28 [style = bold, label=""];
9->1 [style = solid, label="client"];
3->20 [style = bold, label=""];
18->23 [style = dashed, label="0"];
12->13 [style = bold, label=""];
11->7 [style = bold, label=""];
9->12 [style = solid, label="client"];
11->27 [style = bold, label=""];
27->30 [style = solid, label="i"];
14->31 [style = solid, label="server"];
3->20 [style = solid, label="host0"];
6->14 [style = bold, label=""];
9->7 [style = solid, label="client"];
9->10 [style = solid, label="client"];
25->22 [style = solid, label="poolName"];
5->11 [style = bold, label=""];
27->17 [style = bold, label=""];
9->13 [style = solid, label="client"];
10->11 [style = solid, label="i"];
3->29 [style = solid, label="host0"];
12->29 [style = dashed, label="0"];
3->25 [style = bold, label=""];
15->16 [style = bold, label=""];
1->15 [style = bold, label=""];
4->23 [style = bold, label=""];
16->31 [style = bold, label=""];
9->11 [style = solid, label="client"];
7->17 [style = bold, label=""];
30->1 [style = bold, label=""];
0->2 [style = bold, label=""];
28->11 [style = bold, label=""];
24->6 [style = bold, label=""];
23->29 [style = solid, label="port"];
17->30 [style = bold, label=""];
9->0 [style = solid, label="client"];
21->6 [style = bold, label=""];
22->10 [style = bold, label=""];
9->5 [style = solid, label="client"];
0->22 [style = dashed, label="0"];
20->12 [style = bold, label=""];
10->5 [style = bold, label=""];
9->20 [style = solid, label="client"];
26->0 [style = bold, label=""];
9->26 [style = solid, label="client"];
4->18 [style = bold, label=""];
28->27 [style = solid, label="i"];
29->26 [style = bold, label=""];
}
