digraph {
16 [style = filled, label = "assertEquals(\"multipoint (2.0 1.0 10.0, 3.0 4.0 20.0)\",wkt.toWKT(new MultiPoint(Arrays.asList(new Point(2,1,10),new Point(3,4,20)))))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(\"point (20.0 10.0)\",wkt.toWKT(new Point(20,10)))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(new Point(20,10,100),wkt.fromWKT(\"point (20.0 10.0 100.0)\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"point EMPTY\",wkt.toWKT(Point.EMPTY))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"multipoint EMPTY\",wkt.toWKT(MultiPoint.EMPTY))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(new MultiPoint(Arrays.asList(new Point(2,1,10),new Point(3,4,20))),wkt.fromWKT(\"multipoint (2 1 10, 3 4 20)\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(new Point(20,10,100),wkt.fromWKT(\"POINT (20.0 10.0 100.0)\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testBasicSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testBasicSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertEquals(Point.EMPTY,wkt.fromWKT(\"point EMPTY)\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"POINT EMPTY\",wkt.toWKT(Point.EMPTY))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertEquals(Point.EMPTY,wkt.fromWKT(\"POINT EMPTY)\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(new MultiPoint(Arrays.asList(new Point(2,1),new Point(3,4))),wkt.fromWKT(\"multipoint (2 1, 3 4)\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(\"point (20.0 10.0 100.0)\",wkt.toWKT(new Point(20,10,100)))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "testBasicSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(new MultiPoint(Collections.singletonList(new Point(2,1))),wkt.fromWKT(\"multipoint (2 1)\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(new Point(20,10),wkt.fromWKT(\"point (20.0 10.0)\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"POINT (20.0 10.0 100.0)\",wkt.toWKT(new Point(20,10,100)))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(MultiPoint.EMPTY,wkt.fromWKT(\"multipoint EMPTY)\"))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(\"POINT (20.0 10.0)\",wkt.toWKT(new Point(20,10)))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(\"multipoint (2.0 1.0)\",wkt.toWKT(new MultiPoint(Collections.singletonList(new Point(2,1)))))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "WellKnownText wkt = new WellKnownText(true,new GeographyValidator(true))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(\"multipoint (2.0 1.0, 3.0 4.0)\",wkt.toWKT(new MultiPoint(Arrays.asList(new Point(2,1),new Point(3,4)))))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
8->10 [style = bold, label=""];
4->16 [style = dashed, label="0"];
17->6 [style = bold, label=""];
6->22 [style = bold, label=""];
2->6 [style = bold, label=""];
21->15 [style = bold, label=""];
7->11 [style = dashed, label="0"];
7->0 [style = bold, label=""];
15->16 [style = bold, label=""];
12->6 [style = bold, label=""];
3->4 [style = bold, label=""];
1->13 [style = dashed, label="0"];
1->20 [style = dashed, label="0"];
4->9 [style = dashed, label="0"];
11->0 [style = bold, label=""];
22->18 [style = bold, label=""];
19->14 [style = bold, label=""];
6->11 [style = bold, label=""];
0->8 [style = bold, label=""];
5->21 [style = dashed, label="0"];
5->8 [style = dashed, label="0"];
0->18 [style = dashed, label="0"];
3->15 [style = dashed, label="0"];
4->1 [style = bold, label=""];
10->9 [style = bold, label=""];
3->10 [style = dashed, label="0"];
18->21 [style = bold, label=""];
6->7 [style = bold, label=""];
20->19 [style = bold, label=""];
16->20 [style = bold, label=""];
7->22 [style = dashed, label="0"];
0->5 [style = bold, label=""];
9->13 [style = bold, label=""];
}
