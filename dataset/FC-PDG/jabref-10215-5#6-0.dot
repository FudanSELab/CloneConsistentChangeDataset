digraph {
35 [style = filled, label = "assertEquals(Optional.of(\"12\"),first.getField(StandardField.VOLUME))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "BibEntry fourth = bibEntries.get(3)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertEquals(Optional.of(\"testX\"),fifth.getField(\"abstract\"))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(Optional.of(\"3\"),second.getField(\"number\"))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "assertEquals(Optional.of(\"testN\"),fifth.getField(\"number\"))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(Optional.empty(),first.getField(\"month\"))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertEquals(Optional.of(\"test7\"),second.getField(\"edition\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(\"article\",second.getType())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertEquals(Optional.of(\"2457--71\"),first.getField(StandardField.PAGES))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(Optional.empty(),first.getField(StandardField.MONTH))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(Optional.of(\"13\"),second.getField(StandardField.VOLUME))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertEquals(Optional.of(\"testV\"),fifth.getField(\"volume\"))@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertEquals(Optional.of(\"testE0 and testE1\"),first.getField(\"editor\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(Optional.of(\"testJ\"),second.getField(\"journal\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "BibEntry first = entries.get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(2,entries.size())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(Optional.of(\"testP\"),fifth.getField(\"pages\"))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "Path file = Paths.get(.getResource(\"Endnote.entries.enw\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(\"article\",first.getType())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertEquals(Optional.of(\"testT\"),first.getField(\"title\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "List<BibEntry> bibEntries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(\"mastersthesis\",fifth.getType())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(Optional.of(\"13\"),second.getField(\"volume\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
74 [style = filled, label = "assertEquals(\"book\",fourth.getType())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(Optional.of(\"411--22\"),second.getField(StandardField.PAGES))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),first.getField(\"title\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Optional.of(\"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),second.getField(\"title\"))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Optional.of(\"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),second.getField(StandardField.AUTHOR))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(Optional.of(\"20\"),first.getField(StandardField.NUMBER))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertEquals(Optional.of(\"testD\"),second.getField(\"year\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "BibEntry second = bibEntries.get(1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertEquals(Optional.of(\"test8\"),second.getField(\"date\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),first.getField(StandardField.TITLE))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(Optional.of(\"411--22\"),second.getField(\"pages\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertEquals(Optional.of(\"Curr Pharm Des\"),first.getField(StandardField.JOURNAL))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "assertEquals(\"article\",third.getType())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(StandardEntryType.Article,first.getType())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testImportEntriesMedline['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "BibEntry first = bibEntries.get(0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(Optional.of(\"Wesensten, Nancy J.\"),first.getField(StandardField.AUTHOR))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(Optional.of(\"Curr Pharm Des\"),first.getField(\"journal\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
59 [style = filled, label = "assertEquals(Optional.of(\"testR\"),fifth.getField(\"doi\"))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(Optional.of(\"testF\"),fifth.getField(\"bibtexkey\"))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertEquals(Optional.of(\"testB0\"),third.getField(\"journal\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(Optional.of(\"testK\"),fifth.getField(\"keywords\"))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(Optional.of(\"3\"),second.getField(StandardField.NUMBER))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(5,bibEntries.size())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(Optional.of(\"2457--71\"),first.getField(\"pages\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(Optional.of(\"#may#\"),second.getField(StandardField.MONTH))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertEquals(Optional.of(\"testI0\"),fourth.getField(\"publisher\"))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "BibEntry fifth = bibEntries.get(4)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(Optional.of(\"testO1\"),fifth.getField(\"note\"))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(Optional.of(\"2006\"),first.getField(StandardField.YEAR))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "assertEquals(Optional.of(\"testA0 and testA1\"),first.getField(\"author\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(Optional.of(\"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),second.getField(StandardField.TITLE))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "assertEquals(Optional.of(\"testB2\"),second.getField(\"booktitle\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(Optional.of(\"2006\"),second.getField(\"year\"))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Optional.of(\"#may#\"),second.getField(\"month\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertEquals(Optional.of(\"12\"),first.getField(\"volume\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Optional.of(\"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),second.getField(\"author\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertEquals(StandardEntryType.Article,second.getType())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertEquals(Optional.of(\"Wesensten, Nancy J.\"),first.getField(\"author\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
76 [style = filled, label = "BibEntry third = bibEntries.get(2)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertEquals(\"misc\",second.getType())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestMedline.isi\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "testImportEntries0['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(Optional.of(\"testB1\"),fourth.getField(\"series\"))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(Optional.of(\"testC\"),second.getField(\"address\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertEquals(Optional.of(\"testU\"),fifth.getField(\"url\"))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(Optional.of(\"2006\"),first.getField(\"year\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "testImportEntriesMedline['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "assertEquals(\"misc\",first.getType())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(Optional.of(\"2006\"),second.getField(StandardField.YEAR))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "BibEntry second = entries.get(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertEquals(Optional.of(\"testI1\"),fifth.getField(\"school\"))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(Optional.of(\"20\"),first.getField(\"number\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18->67 [style = dashed, label="0"];
8->10 [style = bold, label=""];
54->56 [style = bold, label=""];
22->15 [style = bold, label=""];
45->65 [style = bold, label=""];
68->69 [style = bold, label=""];
76->64 [style = bold, label=""];
63->48 [style = bold, label=""];
10->50 [style = dashed, label="0"];
2->6 [style = bold, label=""];
25->30 [style = bold, label=""];
26->34 [style = bold, label=""];
16->7 [style = bold, label=""];
21->8 [style = bold, label=""];
9->27 [style = dashed, label="0"];
53->44 [style = bold, label=""];
13->73 [style = dashed, label="0"];
5->40 [style = dashed, label="0"];
12->2 [style = bold, label=""];
57->67 [style = bold, label=""];
19->23 [style = dashed, label="0"];
5->0 [style = bold, label=""];
24->21 [style = bold, label=""];
50->45 [style = bold, label=""];
27->33 [style = bold, label=""];
49->63 [style = bold, label=""];
0->36 [style = dashed, label="0"];
58->75 [style = bold, label=""];
18->33 [style = dashed, label="0"];
73->46 [style = bold, label=""];
59->42 [style = bold, label=""];
17->5 [style = bold, label=""];
74->41 [style = bold, label=""];
37->26 [style = bold, label=""];
0->19 [style = bold, label=""];
7->64 [style = dashed, label="0"];
11->37 [style = bold, label=""];
31->29 [style = bold, label=""];
71->52 [style = bold, label=""];
41->49 [style = bold, label=""];
13->26 [style = dashed, label="0"];
8->43 [style = dashed, label="0"];
60->74 [style = bold, label=""];
44->76 [style = bold, label=""];
35->28 [style = bold, label=""];
3->34 [style = dashed, label="0"];
22->62 [style = dashed, label="0"];
18->1 [style = bold, label=""];
22->28 [style = dashed, label="0"];
21->69 [style = dashed, label="0"];
38->25 [style = bold, label=""];
29->40 [style = bold, label=""];
67->51 [style = bold, label=""];
15->12 [style = bold, label=""];
65->55 [style = bold, label=""];
14->21 [style = bold, label=""];
69->43 [style = bold, label=""];
17->70 [style = dashed, label="0"];
7->17 [style = bold, label=""];
7->31 [style = dashed, label="0"];
1->35 [style = dashed, label="0"];
51->62 [style = bold, label=""];
28->39 [style = bold, label=""];
12->32 [style = dashed, label="0"];
4->13 [style = bold, label=""];
11->4 [style = bold, label=""];
47->61 [style = bold, label=""];
42->47 [style = bold, label=""];
3->46 [style = dashed, label="0"];
1->51 [style = dashed, label="0"];
72->59 [style = bold, label=""];
19->41 [style = dashed, label="0"];
3->9 [style = bold, label=""];
9->18 [style = bold, label=""];
16->30 [style = dashed, label="0"];
11->65 [style = dashed, label="0"];
40->36 [style = bold, label=""];
30->31 [style = bold, label=""];
39->32 [style = bold, label=""];
15->39 [style = dashed, label="0"];
4->37 [style = dashed, label="0"];
46->57 [style = bold, label=""];
75->54 [style = bold, label=""];
12->52 [style = dashed, label="0"];
48->66 [style = bold, label=""];
20->11 [style = bold, label=""];
33->35 [style = bold, label=""];
10->20 [style = bold, label=""];
43->50 [style = bold, label=""];
52->53 [style = bold, label=""];
20->45 [style = dashed, label="0"];
55->73 [style = bold, label=""];
15->71 [style = dashed, label="0"];
61->58 [style = bold, label=""];
17->29 [style = dashed, label="0"];
2->38 [style = dashed, label="0"];
1->22 [style = bold, label=""];
32->38 [style = bold, label=""];
62->71 [style = bold, label=""];
0->74 [style = dashed, label="0"];
36->23 [style = bold, label=""];
13->3 [style = bold, label=""];
6->25 [style = dashed, label="0"];
6->16 [style = bold, label=""];
70->60 [style = bold, label=""];
66->72 [style = bold, label=""];
64->70 [style = bold, label=""];
34->27 [style = bold, label=""];
}
