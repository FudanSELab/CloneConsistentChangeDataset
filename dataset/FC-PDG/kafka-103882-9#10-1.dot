digraph {
35 [style = filled, label = "connectionStates.connecting(nodeId1,time.milliseconds(),\"localhost\",ClientDnsLookup.DEFAULT)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(reconnectBackoffMs,currentBackoff,backoffTolerance)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "time.sleep(15000)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(connectionStates.hasReadyNodes(time.milliseconds()))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "connectionStates.disconnected(nodeId1,time.milliseconds())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "connectionStates.connecting(nodeId1,time.milliseconds(),\"localhost\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertTrue(connectionStates.canConnect(nodeId1,time.milliseconds()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "connectionStates.ready(nodeId1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "time.sleep(10000)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertFalse(connectionStates.isBlackedOut(nodeId1,time.milliseconds()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertFalse(connectionStates.isBlackedOut(nodeId1,time.milliseconds()))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(connectionStates.isReady(nodeId1,time.milliseconds()))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(connectionStates.connectionState(nodeId1),ConnectionState.READY)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(connectionStates.canConnect(nodeId1,time.milliseconds()))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(connectionStates.connectionDelay(nodeId1,time.milliseconds()),Long.MAX_VALUE)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertFalse(connectionStates.hasReadyNodes(time.milliseconds()))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(connectionStates.isDisconnected(nodeId1))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFalse(connectionStates.hasReadyNodes(time.milliseconds()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "time.sleep(100)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(connectionStates.isBlackedOut(nodeId1,time.milliseconds()))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(connectionStates.connectionState(nodeId1),ConnectionState.DISCONNECTED)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(connectionStates.isBlackedOut(nodeId1,time.milliseconds()))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFalse(connectionStates.isConnecting(nodeId1))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "double backoffTolerance = reconnectBackoffMs * reconnectBackoffJitter@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "time.sleep(1000)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(connectionStates.canConnect(nodeId1,time.milliseconds()))@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(connectionStates.isReady(nodeId1,time.milliseconds()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(connectionStates.connectionState(nodeId1),ConnectionState.CONNECTING)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "time.sleep(currentBackoff + 1)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(connectionStates.isConnecting(nodeId1))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "connectionStates.remove(nodeId1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testClusterConnectionStateChanges['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertTrue(connectionStates.canConnect(nodeId1,time.milliseconds()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(connectionStates.connectionDelay(nodeId1,time.milliseconds()),0L)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testClusterConnectionStateChanges['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testRemoveNode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(connectionStates.isConnecting(nodeId1))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "connectionStates.disconnected(nodeId1,time.milliseconds())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "long currentBackoff = connectionStates.connectionDelay(nodeId1,time.milliseconds())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
1->4 [style = bold, label=""];
29->5 [style = bold, label=""];
16->11 [style = bold, label=""];
21->19 [style = bold, label=""];
3->1 [style = bold, label=""];
12->21 [style = bold, label=""];
10->27 [style = bold, label=""];
31->32 [style = bold, label=""];
16->29 [style = bold, label=""];
22->9 [style = bold, label=""];
4->13 [style = bold, label=""];
27->3 [style = bold, label=""];
20->0 [style = solid, label="backoffTolerance"];
11->29 [style = dashed, label="0"];
34->31 [style = bold, label=""];
20->14 [style = bold, label=""];
14->0 [style = solid, label="currentBackoff"];
19->2 [style = bold, label=""];
25->6 [style = bold, label=""];
26->24 [style = bold, label=""];
24->22 [style = bold, label=""];
15->16 [style = bold, label=""];
7->26 [style = bold, label=""];
14->28 [style = solid, label="currentBackoff"];
6->20 [style = bold, label=""];
11->5 [style = bold, label=""];
13->17 [style = bold, label=""];
14->0 [style = bold, label=""];
5->12 [style = bold, label=""];
28->23 [style = bold, label=""];
9->25 [style = bold, label=""];
38->34 [style = bold, label=""];
11->33 [style = bold, label=""];
32->36 [style = bold, label=""];
33->38 [style = bold, label=""];
37->35 [style = bold, label=""];
18->7 [style = bold, label=""];
30->16 [style = bold, label=""];
17->18 [style = bold, label=""];
0->28 [style = bold, label=""];
2->8 [style = bold, label=""];
36->10 [style = bold, label=""];
35->11 [style = bold, label=""];
}
