digraph {
11 [style = filled, label = "Map<String,Object> outerConfig = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"Cycle detected for pipeline: inner\",e(0(.getRootCause().getMessage())@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "when(ingestService.getPipeline(innerPipelineId)).thenReturn(inner)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ElasticsearchException e = expectThrows(,null)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Pipeline inner = new Pipeline(innerPipelineId,null,null,new CompoundProcessor())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Pipeline inner = new Pipeline(innerPipelineId,null,null,new CompoundProcessor(factory.create(Collections.emptyMap(),null,innerConfig)))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(ingestService.getPipeline(outerPipelineId)).thenReturn(outer)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "IngestDocument testIngestDocument = RandomDocumentPicks.randomIngestDocument(random(),new HashMap<>())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "innerConfig.put(\"name\",outerPipelineId)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "outerProc.execute(testIngestDocument)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Pipeline outer = new Pipeline(outerPipelineId,null,null,new CompoundProcessor(factory.create(Collections.emptyMap(),null,outerConfig)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "outerConfig.put(\"name\",innerPipelineId)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,Object> innerConfig = new HashMap<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testThrowsOnRecursivePipelineInvocations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Processor outerProc = factory.create(Collections.emptyMap(),null,outerConfig)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "IngestService ingestService = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String outerPipelineId = \"outer\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ElasticsearchException(( e = new ElasticsearchException((((@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "testThrowsOnRecursivePipelineInvocations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "testAllowsRepeatedPipelineInvocations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "outerProc.execute(testIngestDocument)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"Cycle detected for pipeline: inner\",e.getRootCause().getMessage())@@@18@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "factory.create(Collections.emptyMap(),null,outerConfig).execute(testIngestDocument,null)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "PipelineProcessor.Factory factory = new PipelineProcessor.Factory(ingestService)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String innerPipelineId = \"inner\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "outerConfig.put(\"name\",innerPipelineId)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(ingestService.getPipeline(innerPipelineId)).thenReturn(inner)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24->21 [style = bold, label=""];
25->23 [style = bold, label=""];
23->22 [style = bold, label=""];
12->8 [style = solid, label="innerPipelineId"];
4->7 [style = bold, label=""];
7->14 [style = solid, label="outer"];
8->4 [style = bold, label=""];
22->24 [style = bold, label=""];
4->25 [style = bold, label=""];
2->5 [style = bold, label=""];
12->2 [style = bold, label=""];
17->19 [style = bold, label=""];
5->1 [style = bold, label=""];
11->22 [style = solid, label="outerConfig"];
9->3 [style = bold, label=""];
11->7 [style = solid, label="outerConfig"];
12->25 [style = solid, label="innerPipelineId"];
2->10 [style = solid, label="outerPipelineId"];
6->20 [style = bold, label=""];
7->25 [style = dashed, label="0"];
6->22 [style = dashed, label="0"];
15->6 [style = bold, label=""];
1->11 [style = bold, label=""];
13->15 [style = solid, label="inner"];
6->9 [style = bold, label=""];
0->10 [style = bold, label=""];
16->12 [style = bold, label=""];
12->5 [style = bold, label=""];
0->13 [style = solid, label="innerConfig"];
10->13 [style = bold, label=""];
12->6 [style = solid, label="innerPipelineId"];
2->7 [style = solid, label="outerPipelineId"];
11->8 [style = bold, label=""];
25->23 [style = solid, label="inner"];
1->17 [style = solid, label="testIngestDocument"];
7->0 [style = bold, label=""];
1->24 [style = solid, label="testIngestDocument"];
20->17 [style = bold, label=""];
26->12 [style = bold, label=""];
18->12 [style = bold, label=""];
5->4 [style = solid, label="ingestService"];
1->21 [style = solid, label="testIngestDocument"];
13->14 [style = bold, label=""];
14->15 [style = bold, label=""];
12->13 [style = solid, label="innerPipelineId"];
}
