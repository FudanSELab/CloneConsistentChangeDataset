digraph {
12 [style = filled, label = "fullRepairStreamPlan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TreeResponse r1 = new TreeResponse(local,createInitialTree(desc,DatabaseDescriptor.getPartitioner()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "transientLocalStreamPlan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "StreamPlan plan = task.createStreamPlan()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(plan.getFlushBeforeTransfer())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TreeResponse r2 = new TreeResponse(PARTICIPANT2,createInitialTree(desc,DatabaseDescriptor.getPartitioner()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RepairJobDesc desc = new RepairJobDesc(sessionID,UUIDGen.getTimeUUID(),KEYSPACE1,CF_STANDARD,prs.getRanges())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "transientLocalStreamPlan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ActiveRepairService.ParentRepairSession prs = ActiveRepairService.instance.getParentRepairSession(sessionID)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "LocalSyncTask task = new LocalSyncTask(desc,r1.endpoint,r2.endpoint,MerkleTrees.difference(r1.trees,r2.trees),desc.parentSessionId,false,true,PreviewKind.NONE)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNumInOut(plan,0,1)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "UUID sessionID = registerSession(cfs,true,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "LocalSyncTask task = new LocalSyncTask(desc,r1.endpoint,r2.endpoint,MerkleTrees.difference(r1.trees,r2.trees),NO_PENDING_REPAIR,true,true,PreviewKind.NONE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(NO_PENDING_REPAIR,plan.getPendingRepair())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->6 [style = bold, label=""];
3->11 [style = bold, label=""];
2->4 [style = bold, label=""];
0->3 [style = solid, label="desc"];
2->13 [style = bold, label=""];
12->1 [style = bold, label=""];
7->11 [style = dashed, label="0"];
3->7 [style = bold, label=""];
11->2 [style = bold, label=""];
8->1 [style = bold, label=""];
1->5 [style = solid, label="sessionID"];
1->0 [style = solid, label="sessionID"];
5->0 [style = bold, label=""];
0->7 [style = solid, label="desc"];
6->3 [style = bold, label=""];
0->11 [style = solid, label="desc"];
4->13 [style = dashed, label="0"];
2->4 [style = solid, label="plan"];
0->6 [style = solid, label="desc"];
13->10 [style = bold, label=""];
9->1 [style = bold, label=""];
1->5 [style = bold, label=""];
7->2 [style = bold, label=""];
}
