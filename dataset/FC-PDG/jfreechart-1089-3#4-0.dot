digraph {
10 [style = filled, label = "s1.setMajorTickPaint(new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.red))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertTrue(s1.equals(s2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "s1.setMajorTickStroke(new BasicStroke(2.0f))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(s2.hasListener(l1))@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "s2 = (StandardDialScale)s1.clone()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "s1.setExtent(123.4)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "StandardDialScale s2 = (StandardDialScale)s1.clone()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(s1 != s2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertTrue(s1.getClass() == s2.getClass())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(s1.hasListener(l1))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "s1 = new StandardDialScale()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "StandardDialScale s1 = new StandardDialScale()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "s1.setMajorTickPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.WHITE))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertTrue(s1 != s2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MyDialLayerChangeListener l1 = new MyDialLayerChangeListener()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(s1.equals(s2))@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "s1.addChangeListener(l1)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "AxisSpace s1 = new AxisSpace()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "AxisSpace s2 = (AxisSpace)s1.clone()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(s1.getClass() == s2.getClass())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
17->10 [style = bold, label=""];
8->1 [style = solid, label="s2"];
13->0 [style = solid, label="s2"];
11->20 [style = dashed, label="0"];
10->15 [style = bold, label=""];
4->17 [style = bold, label=""];
9->16 [style = solid, label="l1"];
21->0 [style = solid, label="s2"];
16->6 [style = bold, label=""];
18->15 [style = bold, label=""];
19->11 [style = bold, label=""];
21->14 [style = solid, label="s2"];
20->14 [style = solid, label="s1"];
11->14 [style = solid, label="s1"];
12->7 [style = bold, label=""];
3->0 [style = bold, label=""];
10->18 [style = dashed, label="0"];
20->21 [style = bold, label=""];
5->16 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
9->5 [style = solid, label="l1"];
9->6 [style = solid, label="l1"];
13->21 [style = dashed, label="0"];
22->20 [style = bold, label=""];
0->4 [style = bold, label=""];
8->7 [style = solid, label="s2"];
11->13 [style = bold, label=""];
1->12 [style = bold, label=""];
9->5 [style = bold, label=""];
4->1 [style = solid, label="s1"];
13->14 [style = solid, label="s2"];
13->14 [style = bold, label=""];
15->8 [style = bold, label=""];
2->11 [style = bold, label=""];
17->18 [style = bold, label=""];
21->14 [style = bold, label=""];
}
