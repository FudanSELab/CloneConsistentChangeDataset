digraph {
11 [style = filled, label = "final boolean inInteraction = interactionService.isInInteraction()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertNotNull(inventory.getProducts())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "val inventories = repositoryService.allInstances()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(1,inventories.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "sampleInventory_shouldBeSetUpWith3Books['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "sampleInventoryShouldBeSetUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(\"Sample Book\",product.getName())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "val inventories = repository.allInstances()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertNotNull(inventory)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(1,inventory.getProducts().size())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "val inventory = inventories.get(0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(3,inventory.getProducts().size())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "val product = inventory.getProducts().iterator().next()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "sampleInventory_shouldBeSetUpWith3Books['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "setUp3Books(repositoryService)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assertions.assertThat(inInteraction).isTrue()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertInventoryHasBooks(inventory.getProducts(),1,2,3)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2->5 [style = solid, label="inventory"];
9->11 [style = bold, label=""];
10->6 [style = bold, label=""];
1->2 [style = solid, label="inventory"];
12->14 [style = bold, label=""];
2->5 [style = bold, label=""];
6->0 [style = bold, label=""];
4->15 [style = dashed, label="0"];
8->6 [style = bold, label=""];
3->7 [style = bold, label=""];
0->1 [style = bold, label=""];
14->1 [style = bold, label=""];
6->12 [style = dashed, label="0"];
13->12 [style = bold, label=""];
7->3 [style = dashed, label="0"];
11->10 [style = bold, label=""];
7->4 [style = bold, label=""];
15->16 [style = bold, label=""];
3->15 [style = bold, label=""];
5->3 [style = bold, label=""];
1->2 [style = bold, label=""];
}
