digraph {
5 [style = filled, label = "RestClient x = client().query(\"foo\",s).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "x.get(\"/query\").run().assertBody().asString().urlDecode().is(\"foo=bar,baz\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "x.post(\"/formData\").run().assertBody().urlDecode().is(\"foo=x('foo','bar'(\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "a06_query_String_Supplier['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "a10_formData_String_Supplier_Schema_Serializer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "s.set(l2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TestSupplier s = TestSupplier.of(l1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "a06_query_String_Supplier['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "RestClient x = client().formData(\"foo\",s,T_ARRAY_PIPES,new A8()).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "x.get(\"/query\").run().assertBody().urlDecode().is(\"foo=foo,bar\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "x.get(\"/query\").run().assertBody().asString().urlDecode().is(\"foo=foo,bar\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "s.set(OList.of(\"bar\",\"baz\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "x.get(\"/query\").run().assertBody().urlDecode().is(\"foo=bar,baz\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "TestSupplier s = TestSupplier.of(OList.of(\"foo\",\"bar\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "x.post(\"/formData\").run().assertBody().urlDecode().is(\"foo=x('bar','baz'(\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "List<String> l1 = AList.of(\"foo\",\"bar\"),l2 = AList.of(\"bar\",\"baz\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
8->0 [style = bold, label=""];
4->0 [style = solid, label="l2"];
13->10 [style = bold, label=""];
5->8 [style = bold, label=""];
4->1 [style = bold, label=""];
15->12 [style = bold, label=""];
6->0 [style = bold, label=""];
6->8 [style = dashed, label="0"];
14->13 [style = bold, label=""];
5->6 [style = bold, label=""];
4->13 [style = dashed, label="0"];
9->4 [style = bold, label=""];
2->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
11->15 [style = bold, label=""];
4->1 [style = solid, label="l1"];
0->2 [style = bold, label=""];
0->7 [style = bold, label=""];
10->11 [style = bold, label=""];
}
