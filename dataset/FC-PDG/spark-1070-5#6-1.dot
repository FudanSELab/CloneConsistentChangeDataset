digraph {
7 [style = filled, label = "server = context.createServer()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "client.sendRpc(ByteBuffer.allocate(0),callback0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "TransportClient client1 = clientFactory.createClient(TestUtils.getLocalHost(),server.getPort())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(responseSize,callback1.successLength)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "callback1.wait(FOREVER)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TestCallback callback1 = new TestCallback()@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "callback1@@@33@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TransportContext context = new TransportContext(conf,handler)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Semaphore semaphore = new Semaphore(1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "callback0.latch.await()@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "final int responseSize = 16@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "timeoutInactiveRequests['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertFalse(client0.isActive())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(callback1.failure instanceof IOException)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "callback0@@@24@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertNull(callback1.failure)@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "TransportClient client = clientFactory.createClient(TestUtils.getLocalHost(),server.getPort())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "client0.sendRpc(ByteBuffer.allocate(0),callback0)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "callback0.wait(FOREVER)@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "TransportClient client0 = clientFactory.createClient(TestUtils.getLocalHost(),server.getPort())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "callback1.wait(4 * 1000)@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertNotNull(callback1.failure)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(responseSize,callback0.successLength)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "semaphore.release(2)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "RpcHandler handler = new RpcHandler(){@Override public void receive(TransportClient client,ByteBuffer message,RpcResponseCallback callback){try {semaphore.tryAcquire(FOREVER,TimeUnit.MILLISECONDS)callback.onSuccess(ByteBuffer.allocate(responseSize))}catch (InterruptedException e) }@Override public StreamManager getStreamManager(){return defaultManager}}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "timeoutCleanlyClosesClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "client1.sendRpc(ByteBuffer.allocate(0),callback1)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TestCallback callback1 = new TestCallback()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestCallback callback0 = new TestCallback()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "timeoutInactiveRequests['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "clientFactory = context.createClientFactory()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(callback0.failure instanceof IOException)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "callback1.latch.await(4,TimeUnit.SECONDS)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "semaphore.release()@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25->0 [style = bold, label=""];
13->10 [style = bold, label=""];
10->18 [style = bold, label=""];
4->3 [style = bold, label=""];
12->3 [style = dotted, label="true"];
17->5 [style = bold, label=""];
7->1 [style = bold, label=""];
22->15 [style = bold, label=""];
0->5 [style = dotted, label="true"];
0->13 [style = dotted, label="true"];
12->33 [style = dotted, label="true"];
0->18 [style = dotted, label="true"];
5->20 [style = bold, label=""];
0->10 [style = dotted, label="true"];
5->26 [style = dashed, label="0"];
17->0 [style = solid, label="callback1"];
13->20 [style = dashed, label="0"];
11->4 [style = bold, label=""];
12->15 [style = dotted, label="true"];
5->26 [style = bold, label=""];
19->11 [style = bold, label=""];
11->12 [style = bold, label=""];
3->15 [style = bold, label=""];
3->22 [style = dashed, label="0"];
12->24 [style = bold, label=""];
29->34 [style = bold, label=""];
18->2 [style = bold, label=""];
10->29 [style = dashed, label="0"];
17->5 [style = solid, label="callback1"];
30->29 [style = bold, label=""];
31->11 [style = bold, label=""];
9->23 [style = dashed, label="0"];
8->7 [style = bold, label=""];
3->27 [style = bold, label=""];
20->10 [style = bold, label=""];
26->30 [style = bold, label=""];
23->14 [style = bold, label=""];
18->34 [style = dashed, label="0"];
0->5 [style = solid, label="callback1"];
0->26 [style = solid, label="callback1"];
15->17 [style = bold, label=""];
12->27 [style = dotted, label="true"];
21->9 [style = bold, label=""];
17->0 [style = bold, label=""];
5->34 [style = dotted, label="true"];
12->4 [style = bold, label=""];
11->12 [style = solid, label="callback0"];
28->23 [style = bold, label=""];
5->13 [style = bold, label=""];
6->8 [style = bold, label=""];
32->25 [style = bold, label=""];
11->24 [style = solid, label="callback0"];
12->24 [style = dotted, label="true"];
9->14 [style = bold, label=""];
14->29 [style = solid, label="responseSize"];
5->26 [style = dotted, label="true"];
33->32 [style = bold, label=""];
12->4 [style = dotted, label="true"];
5->30 [style = dotted, label="true"];
27->33 [style = bold, label=""];
6->8 [style = solid, label="handler"];
5->29 [style = dotted, label="true"];
4->24 [style = dashed, label="0"];
1->19 [style = bold, label=""];
1->31 [style = bold, label=""];
14->15 [style = solid, label="responseSize"];
4->22 [style = bold, label=""];
14->6 [style = bold, label=""];
16->9 [style = bold, label=""];
24->3 [style = bold, label=""];
14->6 [style = solid, label="responseSize"];
13->30 [style = dashed, label="0"];
11->4 [style = solid, label="callback0"];
0->5 [style = bold, label=""];
19->31 [style = dashed, label="0"];
}
