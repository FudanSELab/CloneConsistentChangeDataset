digraph {
5 [style = filled, label = "e.matches(c)@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return Optional.ofNullable(e.value)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "return Optional.empty()@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "find['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ClassEntry<V> e@@@3@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "find['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "!noClassEntries@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "e.matches(c)@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "classEntries@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "!noClassEntries@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Class<? extends V> ofType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Class<?> c@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return Optional.of(e.value)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ClassEntry<V> e@@@3@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Class<?> c@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "find['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "classEntries@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "Field f@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "fieldEntries@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Class<? extends V> ofType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "e.matches(f)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "FieldEntry<V> e@@@3@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "!noFieldEntries@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return Optional.of(e.value)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
17->8 [style = bold, label=""];
4->5 [style = dotted, label="true"];
5->8 [style = bold, label=""];
22->25 [style = bold, label=""];
20->22 [style = solid, label="ofType"];
1->8 [style = bold, label=""];
26->19 [style = solid, label="f"];
3->26 [style = dashed, label="0"];
21->19 [style = bold, label=""];
22->19 [style = bold, label=""];
11->12 [style = dotted, label="true"];
22->25 [style = dotted, label="true"];
12->11 [style = bold, label=""];
6->1 [style = dotted, label="true"];
21->8 [style = bold, label=""];
5->6 [style = dotted, label="true"];
4->7 [style = dotted, label="true"];
17->14 [style = dotted, label="true"];
15->10 [style = dotted, label="true"];
11->12 [style = bold, label=""];
18->20 [style = dotted, label="true"];
13->11 [style = bold, label=""];
17->11 [style = bold, label=""];
19->8 [style = bold, label=""];
17->16 [style = dotted, label="true"];
15->3 [style = dotted, label="true"];
22->8 [style = bold, label=""];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
3->11 [style = solid, label="c"];
15->17 [style = bold, label=""];
12->13 [style = dotted, label="true"];
5->6 [style = bold, label=""];
21->24 [style = dotted, label="true"];
3->6 [style = solid, label="ofType"];
18->26 [style = dotted, label="true"];
0->4 [style = bold, label=""];
21->23 [style = dotted, label="true"];
12->8 [style = bold, label=""];
9->17 [style = dashed, label="0"];
21->19 [style = dotted, label="true"];
6->8 [style = bold, label=""];
19->22 [style = dotted, label="true"];
25->19 [style = bold, label=""];
9->25 [style = dashed, label="0"];
2->5 [style = solid, label="c"];
4->8 [style = bold, label=""];
11->8 [style = bold, label=""];
25->8 [style = bold, label=""];
0->3 [style = dotted, label="true"];
0->2 [style = dotted, label="true"];
18->21 [style = bold, label=""];
4->9 [style = dotted, label="true"];
13->8 [style = bold, label=""];
19->22 [style = bold, label=""];
4->5 [style = bold, label=""];
17->11 [style = dotted, label="true"];
10->12 [style = solid, label="ofType"];
}
