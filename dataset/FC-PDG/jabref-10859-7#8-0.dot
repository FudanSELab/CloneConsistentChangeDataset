digraph {
3 [style = filled, label = "BibEntry entry = createMinimalBibEntry()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "BibEntry expectedEntry = createMinimalBibEntry()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(expectedEntry,actualParserResult.getDatabase().getEntryByCitationKey(\"Entry1\").get())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "actualEntry.setField(StandardField.REVIEW,commentString)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "BibEntry actualEntry = createMinimalBibEntry()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "multiLineReviewField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "action.performMigration(actualParserResult)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ParserResult actualParserResult = new ParserResult(Collections.singletonList(entry))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "commentField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectedEntry.setField(StandardField.COMMENT,commentString)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "commentField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "String commentString = \"My ReviewSecond ParagraphThird Paragraph\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "action.performMigration(actualParserResult)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "entry.setField(StandardField.COMMENT,\"My Comment\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(entry,actualParserResult.getDatabase().getEntryByCitationKey(\"Entry1\").get())@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
15->13 [style = bold, label=""];
1->2 [style = solid, label="actualParserResult"];
10->14 [style = bold, label=""];
3->1 [style = solid, label="entry"];
9->15 [style = solid, label="commentString"];
12->14 [style = solid, label="actualEntry"];
3->5 [style = solid, label="entry"];
3->4 [style = bold, label=""];
13->11 [style = bold, label=""];
9->10 [style = solid, label="commentString"];
14->7 [style = bold, label=""];
6->4 [style = bold, label=""];
12->10 [style = bold, label=""];
5->11 [style = dashed, label="0"];
8->9 [style = bold, label=""];
7->15 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
9->12 [style = bold, label=""];
14->13 [style = solid, label="actualParserResult"];
7->11 [style = solid, label="expectedEntry"];
2->5 [style = bold, label=""];
}
