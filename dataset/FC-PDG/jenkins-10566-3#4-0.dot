digraph {
0 [style = filled, label = "{FreeStyleProject p = r.createFreeStyleProject()p.addProperty(new KeywordProperty(new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD),new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD)))p.save()r.jenkins.setSecurityRealm(r.createDummySecurityRealm())CLI cli = new CLI(r.getURL())ByteArrayOutputStream stdout = new ByteArrayOutputStream()ByteArrayOutputStream stderr = new ByteArrayOutputStream()int ret = cli.execute(Arrays.asList(\"update-job\",p.getFullName(),\"--username\",\"test\",\"--password\",\"test\"),new ByteArrayInputStream(String.format(CONFIGURATION_TEMPLATE,\"badvalue\",AcceptOnlySpecificKeyword.ACCEPT_KEYWORD).getBytes()),stdout,stderr)assertEquals(0,ret)assertNull(p.getProperty().getNonCriticalField())assertEquals(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD,p.getProperty().getCriticalField().getKeyword())r.jenkins.reload()p = r.jenkins.getItemByFullName(p.getFullName(),)assertEquals(\"badvalue\",p.getProperty().getNonCriticalField().getKeyword())}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{FreeStyleProject p = r.createFreeStyleProject()p.addProperty(new KeywordProperty(new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD),new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD)))p.save()r.jenkins.setSecurityRealm(r.createDummySecurityRealm())CLI cli = new CLI(r.getURL())ByteArrayOutputStream stdout = new ByteArrayOutputStream()ByteArrayOutputStream stderr = new ByteArrayOutputStream()int ret = cli.execute(Arrays.asList(\"update-job\",p.getFullName(),\"--username\",\"test\",\"--password\",\"test\"),new ByteArrayInputStream(String.format(CONFIGURATION_TEMPLATE,AcceptOnlySpecificKeyword.ACCEPT_KEYWORD,\"badvalue\").getBytes()),stdout,stderr)assertNotEquals(0,ret)assertNotEquals(\"badvalue\",p.getProperty().getCriticalField().getKeyword())r.jenkins.reload()p = r.jenkins.getItemByFullName(p.getFullName(),)assertNotEquals(\"badvalue\",p.getProperty().getCriticalField().getKeyword())}@@@20@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testRestInterfaceFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testCliFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "{FreeStyleProject p = r.createFreeStyleProject()p.addProperty(new KeywordProperty(new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD),new AcceptOnlySpecificKeyword(AcceptOnlySpecificKeyword.ACCEPT_KEYWORD)))p.save()r.jenkins.setSecurityRealm(r.createDummySecurityRealm())WebClient wc = r.createWebClient()wc.login(\"test\",\"test\")WebRequest req = new WebRequest(wc.createCrumbedUrl(String.format(\"%s/config.xml\",p.getUrl())),HttpMethod.POST)req.setEncodingType(null)req.setRequestBody(String.format(CONFIGURATION_TEMPLATE,AcceptOnlySpecificKeyword.ACCEPT_KEYWORD,\"badvalue\"))try {wc.getPage(req)fail(\"Submitting unacceptable configuration via REST should fail.\")}catch (FailingHttpStatusCodeException e) assertNotEquals(\"badvalue\",p.getProperty().getCriticalField().getKeyword())r.jenkins.reload()p = r.jenkins.getItemByFullName(p.getFullName(),)assertNotEquals(\"badvalue\",p.getProperty().getCriticalField().getKeyword())}@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Items.XSTREAM2.addCriticalField(,\"criticalField\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testRestInterfaceFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->2 [style = bold, label=""];
0->1 [style = bold, label=""];
2->0 [style = bold, label=""];
0->4 [style = solid, label="req"];
0->4 [style = bold, label=""];
0->1 [style = solid, label="req"];
3->2 [style = bold, label=""];
6->2 [style = bold, label=""];
0->1 [style = solid, label="ret"];
}
