digraph {
22 [style = filled, label = "fileToAdd.createNewFile()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "count == 1@@@41@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "template.send(\"direct:commit-all-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessageAll)}})@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(count,1)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "count++@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "logs = git.log().call()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertFalse(status.getAdded().contains(FILENAME_TO_ADD))@@@62@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Git git = new Git(repository)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "status = git.status().call()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE)@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "count == 1@@@49@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@49@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "template.send(\"direct:add-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameBranchToAdd)}})@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "template.send(\"direct:remove-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int count = 0@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "count == 0@@@40@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Repository repository = getTestRepository()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(count,2)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE_BRANCH)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "repository.close()@@@63@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertFalse(status.getAdded().contains(filenameToAdd))@@@62@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(count,2)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "git.checkout().setCreateBranch(true).setName(BRANCH_TEST).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "commitBranchTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "git.checkout().setCreateBranch(false).setName(BRANCH_TEST).call()@@@60@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,COMMIT_MESSAGE)}})@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "logs = git.log().call()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "template.send(\"direct:commit-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,COMMIT_MESSAGE_BRANCH)}})@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE_ALL)@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "File fileToAdd = new File(GIT_LOCAL_REPO,FILENAME_TO_ADD)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "count = 0@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "File fileToAdd1 = new File(GIT_LOCAL_REPO,FILENAME_BRANCH_TO_ADD)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "count == 1@@@49@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "count++@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(status.getAdded().contains(FILENAME_TO_ADD))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "git.checkout().setCreateBranch(false).setName(branchTest).call()@@@60@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "removeFileBranchTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE)@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "count == 0@@@48@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "fileToAdd1.createNewFile()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "removeFileBranchTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,FILENAME_TO_ADD)}})@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageAll)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Iterable<RevCommit> logs = new Git(repository).log().call()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Status status = new Git(repository).status().call()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "git = new Git(repository)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "count == 0@@@48@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "File gitDir = new File(GIT_LOCAL_REPO,\".git\")@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "repository.close()@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33->19 [style = solid, label="count"];
51->5 [style = bold, label=""];
27->32 [style = bold, label=""];
29->5 [style = bold, label=""];
5->33 [style = solid, label="count"];
4->25 [style = bold, label=""];
33->43 [style = solid, label="count"];
0->46 [style = bold, label=""];
21->15 [style = bold, label=""];
5->8 [style = solid, label="count"];
24->5 [style = dashed, label="0"];
33->21 [style = solid, label="count"];
14->17 [style = bold, label=""];
19->11 [style = bold, label=""];
2->46 [style = dashed, label="0"];
6->38 [style = dashed, label="0"];
19->47 [style = dashed, label="0"];
47->33 [style = bold, label=""];
27->49 [style = bold, label=""];
5->48 [style = dotted, label="true"];
56->54 [style = bold, label=""];
1->7 [style = solid, label="count"];
7->9 [style = bold, label=""];
10->1 [style = solid, label="count"];
48->52 [style = bold, label=""];
22->0 [style = bold, label=""];
10->12 [style = bold, label=""];
19->11 [style = dotted, label="true"];
15->20 [style = bold, label=""];
51->54 [style = solid, label="count"];
54->33 [style = bold, label=""];
1->12 [style = bold, label=""];
11->33 [style = bold, label=""];
42->1 [style = bold, label=""];
51->5 [style = solid, label="count"];
54->5 [style = bold, label=""];
43->44 [style = bold, label=""];
44->47 [style = bold, label=""];
25->28 [style = bold, label=""];
24->19 [style = bold, label=""];
50->23 [style = bold, label=""];
23->20 [style = solid, label="repository"];
41->4 [style = bold, label=""];
25->40 [style = dashed, label="0"];
31->29 [style = bold, label=""];
1->42 [style = bold, label=""];
47->39 [style = bold, label=""];
26->6 [style = bold, label=""];
5->43 [style = solid, label="count"];
12->1 [style = bold, label=""];
23->35 [style = bold, label=""];
20->18 [style = bold, label=""];
45->14 [style = bold, label=""];
20->41 [style = bold, label=""];
43->47 [style = bold, label=""];
18->4 [style = bold, label=""];
5->52 [style = bold, label=""];
33->8 [style = bold, label=""];
52->54 [style = bold, label=""];
8->24 [style = bold, label=""];
19->33 [style = bold, label=""];
13->10 [style = bold, label=""];
16->13 [style = bold, label=""];
54->52 [style = solid, label="count"];
2->3 [style = bold, label=""];
33->55 [style = bold, label=""];
38->16 [style = bold, label=""];
3->26 [style = bold, label=""];
32->14 [style = bold, label=""];
51->52 [style = solid, label="count"];
52->56 [style = dotted, label="true"];
24->44 [style = dashed, label="0"];
27->36 [style = dashed, label="0"];
1->7 [style = bold, label=""];
8->24 [style = dotted, label="true"];
39->33 [style = bold, label=""];
9->27 [style = bold, label=""];
32->45 [style = dashed, label="0"];
43->44 [style = dotted, label="true"];
12->42 [style = dashed, label="0"];
47->39 [style = dotted, label="true"];
33->43 [style = bold, label=""];
54->5 [style = solid, label="count"];
23->9 [style = solid, label="repository"];
46->3 [style = bold, label=""];
33->47 [style = solid, label="count"];
9->36 [style = bold, label=""];
4->40 [style = bold, label=""];
5->8 [style = bold, label=""];
33->8 [style = solid, label="count"];
53->51 [style = bold, label=""];
8->19 [style = bold, label=""];
35->22 [style = bold, label=""];
17->31 [style = bold, label=""];
18->41 [style = dashed, label="0"];
0->2 [style = bold, label=""];
30->23 [style = bold, label=""];
52->56 [style = bold, label=""];
40->28 [style = bold, label=""];
37->23 [style = bold, label=""];
5->19 [style = solid, label="count"];
34->22 [style = bold, label=""];
5->43 [style = bold, label=""];
49->53 [style = bold, label=""];
26->38 [style = bold, label=""];
54->33 [style = solid, label="count"];
10->42 [style = bold, label=""];
6->16 [style = bold, label=""];
34->35 [style = dashed, label="0"];
5->47 [style = solid, label="count"];
5->48 [style = bold, label=""];
23->34 [style = bold, label=""];
36->45 [style = bold, label=""];
33->21 [style = bold, label=""];
}
