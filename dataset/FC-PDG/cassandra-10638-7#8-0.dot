digraph {
5 [style = filled, label = "assertTrue(operation.isAborted())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testAbort['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertFalse(operation.isCompleted())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Monitorable operation = new TestMonitor(\"Test report\",System.currentTimeMillis(),false,timeout,slowTimeout)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(operation.isSlow())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(MonitoringTask.instance.logFailedOperations(ApproximateTime.currentTimeMillis()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(1,MonitoringTask.instance.getFailedOperations().size())@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "waitForOperationsToComplete(operation)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(0,MonitoringTask.instance.getFailedOperations().size())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertFalse(MonitoringTask.instance.logSlowOperations(ApproximateTime.currentTimeMillis()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(0,MonitoringTask.instance.getSlowOperations().size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Monitorable operation = new TestMonitor(\"Test abort\",System.nanoTime(),false,timeout,slowTimeout)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testAbort['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Monitorable operation = new TestMonitor(\"Test abort\",System.currentTimeMillis(),false,timeout,slowTimeout)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "testReport['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13->10 [style = bold, label=""];
6->3 [style = bold, label=""];
4->3 [style = bold, label=""];
4->3 [style = solid, label="operation"];
6->3 [style = solid, label="operation"];
3->14 [style = bold, label=""];
10->3 [style = bold, label=""];
0->11 [style = dashed, label="0"];
1->0 [style = bold, label=""];
4->6 [style = dashed, label="0"];
12->9 [style = bold, label=""];
2->4 [style = bold, label=""];
1->11 [style = bold, label=""];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
7->6 [style = bold, label=""];
11->8 [style = bold, label=""];
4->10 [style = dashed, label="0"];
8->12 [style = bold, label=""];
10->3 [style = solid, label="operation"];
14->5 [style = bold, label=""];
}
