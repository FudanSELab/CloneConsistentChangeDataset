digraph {
10 [style = filled, label = "Assert.assertFalse(caps.hasSpatialIndexes())@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(caps.hasBitmapIndexes())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(caps.isDictionaryEncoded())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(ValueType.STRING,caps.getType())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(caps.hasBitmapIndexes())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertFalse(caps.areDictionaryValuesSorted().isTrue())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(caps.isDictionaryEncoded())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testStringColumn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertFalse(caps.hasSpatialIndexes())@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertTrue(caps.isDictionaryEncoded().isTrue())@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assert.assertTrue(caps.hasMultipleValues().isUnknown())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertTrue(caps.isDictionaryEncoded().isTrue())@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Assert.assertFalse(caps.hasMultipleValues().isMaybeTrue())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d1\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertTrue(caps.areDictionaryValuesSorted().isTrue())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testMultiStringColumn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertFalse(caps.hasSpatialIndexes())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(caps.hasMultipleValues().isTrue())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ColumnCapabilities caps = INC_INDEX.getCapabilities(\"d2\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(ValueType.STRING,caps.getType())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(ValueType.STRING,caps.getType())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testMultiStringColumn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertFalse(ColumnCapabilitiesImpl.snapshot(caps).hasMultipleValues().isMaybeTrue())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertFalse(caps.hasSpatialIndexes())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(caps.areDictionaryValuesUnique().isTrue())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "caps = MMAP_INDEX.getColumnHolder(\"d1\").getCapabilities()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15->17 [style = dashed, label="0"];
13->7 [style = bold, label=""];
1->10 [style = bold, label=""];
13->19 [style = bold, label=""];
26->16 [style = bold, label=""];
15->12 [style = bold, label=""];
1->22 [style = dashed, label="0"];
4->5 [style = bold, label=""];
24->4 [style = bold, label=""];
9->3 [style = bold, label=""];
25->26 [style = bold, label=""];
7->19 [style = dashed, label="0"];
6->13 [style = bold, label=""];
17->12 [style = bold, label=""];
7->11 [style = bold, label=""];
3->25 [style = dashed, label="0"];
8->1 [style = bold, label=""];
12->9 [style = bold, label=""];
5->17 [style = bold, label=""];
16->21 [style = bold, label=""];
14->24 [style = dashed, label="0"];
19->11 [style = bold, label=""];
11->8 [style = bold, label=""];
3->0 [style = bold, label=""];
16->6 [style = bold, label=""];
20->24 [style = bold, label=""];
2->14 [style = bold, label=""];
22->23 [style = bold, label=""];
14->4 [style = bold, label=""];
9->25 [style = bold, label=""];
1->22 [style = bold, label=""];
18->14 [style = bold, label=""];
16->21 [style = dashed, label="0"];
5->15 [style = bold, label=""];
21->13 [style = bold, label=""];
0->16 [style = bold, label=""];
}
