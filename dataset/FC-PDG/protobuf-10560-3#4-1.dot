digraph {
5 [style = filled, label = "assertWithMessage(\"%s.writeTo() must not grant access to underlying array\",classUnderTest).that(Arrays.equals(referenceBytes,stringUnderTest.toByteArray())).isTrue()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "stringUnderTest.writeToInternal(os,0,stringUnderTest.size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testWriteToShouldNotExposeInternalBufferToOutputStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "stringUnderTest.writeTo(os)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(classUnderTest + \".writeToInternal() must grant access to underlying array\",Arrays.equals(allZeros,stringUnderTest.toByteArray()))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testWriteToInternalShouldExposeInternalBufferToOutputStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "OutputStream os = new OutputStream(){@Override public void write(byte(( b,int off,int len){Arrays.fill(b,off,off + len,(byte)0)}@Override public void write(int b){throw new UnsupportedOperationException()}}@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testWriteToShouldNotExposeInternalBufferToOutputStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "byte(( allZeros = new byte((((@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(classUnderTest + \".writeTo() must not grant access to underlying array\",Arrays.equals(referenceBytes,stringUnderTest.toByteArray()))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->2 [style = solid, label="os"];
2->5 [style = bold, label=""];
8->6 [style = bold, label=""];
1->5 [style = dashed, label="0"];
9->0 [style = bold, label=""];
0->7 [style = solid, label="os"];
8->6 [style = solid, label="allZeros"];
7->8 [style = bold, label=""];
2->7 [style = dashed, label="0"];
2->1 [style = bold, label=""];
3->0 [style = bold, label=""];
4->0 [style = bold, label=""];
0->2 [style = bold, label=""];
0->7 [style = bold, label=""];
}
