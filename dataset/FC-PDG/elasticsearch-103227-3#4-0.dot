digraph {
0 [style = filled, label = "assertEquals(new TermInSetQuery(\"field\",terms),ft.termsQuery(Arrays.asList(\"foo\",\"bar\"),null))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ft.setIndexOptions(IndexOptions.DOCS)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"Cannot search on field (field( since it is not indexed.\",e.getMessage())@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "List<BytesRef> terms = new ArrayList<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testTermsQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Collator collator = Collator.getInstance(ULocale.ROOT).freeze()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testTermsQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "terms.add(new BytesRef(\"foo\"))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "MappedFieldType ft = createDefaultFieldType()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "MappedFieldType unsearchable = new TextFieldType(\"field\",false,true,Collections.emptyMap())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "RawCollationKey barKey = collator.getRawCollationKey(\"bar\",null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ft.setName(\"field\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "((CollationFieldType)ft).setCollator(collator)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "IllegalArgumentException e = expectThrows(,null)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "MappedFieldType ft = new TextFieldType(\"field\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "terms.add(new BytesRef(barKey.bytes,0,barKey.size))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "List<BytesRef> terms = new ArrayList<>()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(new TermInSetQuery(\"field\",terms),ft.termsQuery(Arrays.asList(\"foo\",\"bar\"),null))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ft.setIndexOptions(IndexOptions.NONE)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testTermsQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "RawCollationKey fooKey = collator.getRawCollationKey(\"foo\",null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "terms.add(new BytesRef(fooKey.bytes,0,fooKey.size))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(\"Cannot search on field (field( since it is not indexed.\",e.getMessage())@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22->19 [style = bold, label=""];
11->4 [style = bold, label=""];
7->8 [style = bold, label=""];
21->22 [style = bold, label=""];
8->4 [style = bold, label=""];
20->16 [style = bold, label=""];
10->9 [style = bold, label=""];
5->1 [style = bold, label=""];
4->5 [style = bold, label=""];
9->2 [style = bold, label=""];
16->0 [style = bold, label=""];
17->3 [style = bold, label=""];
14->11 [style = bold, label=""];
3->7 [style = bold, label=""];
3->13 [style = dashed, label="0"];
4->20 [style = bold, label=""];
8->21 [style = bold, label=""];
0->10 [style = bold, label=""];
14->5 [style = solid, label="terms"];
0->12 [style = bold, label=""];
6->3 [style = bold, label=""];
5->20 [style = dashed, label="0"];
15->13 [style = bold, label=""];
9->0 [style = dashed, label="0"];
1->16 [style = dashed, label="0"];
4->0 [style = solid, label="terms"];
13->14 [style = bold, label=""];
21->22 [style = solid, label="collator"];
19->18 [style = bold, label=""];
18->4 [style = bold, label=""];
1->0 [style = bold, label=""];
}
