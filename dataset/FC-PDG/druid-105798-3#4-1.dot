digraph {
55 [style = filled, label = "multivalEvent3.put(\"dimA\",\"leek\")@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "event4.put(\"dimA\",\"potato\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,2,4,5,7,8,9,12),adapter.getBitmapIndex(\"dimMultiVal\",\"3\"))@@@185@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
133 [style = filled, label = "Map<String,Object> multivalEvent3 = new HashMap<>()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"4\")),rowList.get(10).dimensionValues())@@@171@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
176 [style = filled, label = "checkBitmapIndex(ImmutableList.of(),adapter.getBitmapIndex(\"dimMultiVal\",\"\"))@@@142@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
157 [style = filled, label = "multivalEvent2.put(\"sumCount\",1L)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"dimA\",\"dimMultiVal\"),ImmutableList.copyOf(adapter.getDimensionNames()))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,2),adapter.getBitmapIndex(\"dimMultiVal\",\"4\"))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "Assert.assertEquals(2L,rowList.get(1).metricValues().get(0))@@@154@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "IncrementalIndexSchema indexSchema = new IncrementalIndexSchema.Builder().withDimensionsSpec(new DimensionsSpec(ImmutableList.of(new StringDimensionSchema(\"dimA\",MultiValueHandling.SORTED_ARRAY,true),new StringDimensionSchema(\"dimMultiVal\",MultiValueHandling.SORTED_ARRAY,true)))).withMetrics(new LongSumAggregatorFactory(\"sumCount\",\"sumCount\")).withRollup(true).build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "final File tmpDirA = temporaryFolder.newFolder()@@@97@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "multivalEvent6.put(\"sumCount\",1L)@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
139 [style = filled, label = "Assert.assertEquals(8L,rowList.get(0).metricValues().get(0))@@@152@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "List<String> multivalEvent5List = Arrays.asList(\"1\",\"2\",\"3\",null)@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "multivalEvent9.put(\"sumCount\",1L)@@@91@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "Map<String,Object> listWithSingleValEvent2 = new HashMap<>()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
189 [style = filled, label = "listWithSingleValEvent2.put(\"dimA\",\"leek\")@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
142 [style = filled, label = "singleEventIndexes.add(queryableIndex)@@@105@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "Assert.assertEquals(4L,rowList.get(2).metricValues().get(0))@@@122@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
134 [style = filled, label = "Map<String,Object> multivalEvent8 = new HashMap<>()@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
164 [style = filled, label = "Map<String,Object> listWithSingleValEvent3 = new HashMap<>()@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
185 [style = filled, label = "List<QueryableIndex> singleEventIndexes = new ArrayList<>()@@@99@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"3\",\"5\")),rowList.get(9).dimensionValues())@@@169@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
208 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",\"\"),rowList.get(3).dimensionValues())@@@157@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
183 [style = filled, label = "multivalEvent5.put(\"sumCount\",1L)@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "checkBitmapIndex(Collections.singletonList(0),adapter.getBitmapIndex(\"dimMultiVal\",\"3\"))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "multivalEvent2.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"4\"))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
159 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"potato\",Arrays.asList(\"1\",\"3\")),rowList.get(12).dimensionValues())@@@175@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
175 [style = filled, label = "Map<String,Object> multivalEvent6 = new HashMap<>()@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Map<String,Object> event2 = new HashMap<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
161 [style = filled, label = "listWithSingleValEvent3.put(\"dimA\",\"potato\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "Assert.assertEquals(4L,rowList.get(10).metricValues().get(0))@@@138@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
111 [style = filled, label = "Map<String,Object> multivalEvent7 = new HashMap<>()@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
194 [style = filled, label = "singleValEvent.put(\"sumCount\",1L)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
154 [style = filled, label = "multivalEvent4.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"2\",\"3\"))@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "multivalEvent8.put(\"sumCount\",1L)@@@87@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
177 [style = filled, label = "multivalEvent2.put(\"dimA\",\"leek\")@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "listWithSingleValEvent.put(\"dimMultiVal\",ImmutableList.of(\"1\"))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "checkBitmapIndex(Collections.singletonList(2),adapter.getBitmapIndex(\"dimMultiVal\",\"0\"))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
196 [style = filled, label = "checkBitmapIndex(Arrays.asList(0,1,2,3,4,5,6,7,8),adapter.getBitmapIndex(\"dimA\",\"leek\"))@@@139@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testMultivalDim_mergeAcrossSegments_rollupWorks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
165 [style = filled, label = "Map<String,Object> listWithNullEvent = new HashMap<>()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
168 [style = filled, label = "listWithNullEvent.put(\"dimMultiVal\",listWithNull)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "Map<String,Object> nullEvent = new HashMap<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
214 [style = filled, label = "Map<String,Object> emptyListEvent = new HashMap<>()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "IncrementalIndex toPersistA = new IncrementalIndex.Builder().setIndexSchema(indexSchema).setMaxRowCount(1000).buildOnheap()@@@93@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "singleValEvent3.put(\"dimMultiVal\",\"2\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "listWithNullEvent.put(\"dimA\",\"leek\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
188 [style = filled, label = "multivalEvent7.put(\"dimA\",\"leek\")@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Map<String,Object> event4 = new HashMap<>()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "listWithSingleValEvent.put(\"sumCount\",1L)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
166 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",null),rowList.get(0).dimensionValues())@@@151@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "Map<String,Object> singleValEvent = new HashMap<>()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"4\")),rowList.get(7).dimensionValues())@@@131@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "multivalEvent5.put(\"dimMultiVal\",multivalEvent5List)@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
149 [style = filled, label = "singleValEvent2.put(\"dimMultiVal\",\"2\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
198 [style = filled, label = "emptyStringEvent.put(\"dimMultiVal\",\"\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
171 [style = filled, label = "toPersistA.add(new MapBasedInputRow(1,dims,event))@@@95@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "Map<String,Object> multivalEvent4 = new HashMap<>()@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "event4.put(\"dimMultiVal\",ImmutableList.of(\"0\",\"1\",\"4\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "Assert.assertEquals(4L,rowList.get(1).metricValues().get(0))@@@120@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "Assert.assertEquals(2L,rowList.get(7).metricValues().get(0))@@@166@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
174 [style = filled, label = "checkBitmapIndex(Arrays.asList(0,1,2,3,4,5,6,7,8,9,10,11),adapter.getBitmapIndex(\"dimA\",\"leek\"))@@@179@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
121 [style = filled, label = "Assert.assertEquals(4L,rowList.get(3).metricValues().get(0))@@@124@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
202 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,2,4,5,6,9),adapter.getBitmapIndex(\"dimMultiVal\",\"3\"))@@@145@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
169 [style = filled, label = "listWithEmptyStringEvent.put(\"dimMultiVal\",ImmutableList.of(\"\"))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(11,rowList.size())@@@116@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
215 [style = filled, label = "List<String> listWithNull = new ArrayList<>()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "QueryableIndex indexA = closer.closeLater(indexIO.loadIndex(indexMerger.persist(toPersistA,tmpDirA,indexSpec,null)))@@@98@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Map<String,Object> event3 = new HashMap<>()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final List<DebugRow> rowList = RowIteratorHelper.toList(adapter.getRows())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "listWithSingleValEvent3.put(\"sumCount\",1L)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "emptyStringEvent.put(\"dimA\",\"leek\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "Assert.assertEquals(4L,rowList.get(6).metricValues().get(0))@@@164@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(null,\"3\")),rowList.get(2).dimensionValues())@@@155@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
151 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"potato\",\"2\"),rowList.get(10).dimensionValues())@@@137@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "toPersistB.add(new MapBasedInputRow(1,dims,event4))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
141 [style = filled, label = "multivalEvent9.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"3\"))@@@90@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "Assert.assertEquals(2L,rowList.get(9).metricValues().get(0))@@@170@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "singleValEvent2.put(\"sumCount\",1L)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "toPersistA.add(new MapBasedInputRow(1,dims,event2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
213 [style = filled, label = "checkBitmapIndex(Arrays.asList(12,13),adapter.getBitmapIndex(\"dimA\",\"potato\"))@@@180@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "listWithNull.add(null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
135 [style = filled, label = "Assert.assertEquals(2L,rowList.get(10).metricValues().get(0))@@@172@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Assert.assertEquals(2L,rowList.get(7).metricValues().get(0))@@@132@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
184 [style = filled, label = "Map<String,Object> multivalEvent5 = new HashMap<>()@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
217 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"3\")),rowList.get(5).dimensionValues())@@@127@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"3\")),rowList.get(8).dimensionValues())@@@167@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "event4.put(\"sumCount\",1L)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
153 [style = filled, label = "List<Map<String,Object>> events = ImmutableList.of(nullEvent,nullEvent2,emptyListEvent,listWithNullEvent,emptyStringEvent,listWithEmptyStringEvent,singleValEvent,singleValEvent2,singleValEvent3,listWithSingleValEvent,listWithSingleValEvent2,listWithSingleValEvent3,multivalEvent,multivalEvent2,multivalEvent3,multivalEvent4,multivalEvent5,multivalEvent6,multivalEvent7,multivalEvent8,multivalEvent9)@@@92@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "singleEventIndexes.add(indexA)@@@107@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "Assert.assertEquals(2L,rowList.get(5).metricValues().get(0))@@@162@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
160 [style = filled, label = "Assert.assertEquals(4L,rowList.get(8).metricValues().get(0))@@@134@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "emptyListEvent.put(\"sumCount\",1L)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
130 [style = filled, label = "checkBitmapIndex(Collections.singletonList(7),adapter.getBitmapIndex(\"dimMultiVal\",\"4\"))@@@146@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
136 [style = filled, label = "multivalEvent7.put(\"sumCount\",1L)@@@83@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
156 [style = filled, label = "Map<String,Object> nullEvent2 = new HashMap<>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
172 [style = filled, label = "Map<String,Object> multivalEvent2 = new HashMap<>()@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "testMultivalDim_mergeAcrossSegments_rollupWorks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
124 [style = filled, label = "Assert.assertEquals(2L,rowList.get(4).metricValues().get(0))@@@126@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
178 [style = filled, label = "multivalEvent4.put(\"sumCount\",1L)@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
170 [style = filled, label = "Assert.assertEquals(12L,rowList.get(0).metricValues().get(0))@@@118@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
132 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",\"1\"),rowList.get(3).dimensionValues())@@@123@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
199 [style = filled, label = "multivalEvent6.put(\"dimMultiVal\",multivalEvent6List)@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final QueryableIndexIndexableAdapter adapter = new QueryableIndexIndexableAdapter(merged)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"2\",\"3\",\"5\")),rowList.get(0).dimensionValues())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "checkBitmapIndex(Collections.singletonList(0),adapter.getBitmapIndex(\"dimMultiVal\",\"5\"))@@@52@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "Assert.assertEquals(14,rowList.size())@@@150@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final File tmpDirMerged = temporaryFolder.newFolder()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
158 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,4,8,10),adapter.getBitmapIndex(\"dimMultiVal\",\"2\"))@@@144@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
114 [style = filled, label = "Map<String,Object> singleValEvent2 = new HashMap<>()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
181 [style = filled, label = "multivalEvent8.put(\"dimMultiVal\",ImmutableList.of(\"\",\"3\"))@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "final File tmpDirMerged = temporaryFolder.newFolder()@@@108@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",\"2\"),rowList.get(11).dimensionValues())@@@173@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",null),rowList.get(0).dimensionValues())@@@117@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "multivalEvent9.put(\"dimA\",\"potato\")@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
129 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",\"2\"),rowList.get(8).dimensionValues())@@@133@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "event2.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"2\",\"3\",\"5\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "event1.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"2\",\"4\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
186 [style = filled, label = "checkBitmapIndex(Arrays.asList(0,1,2),adapter.getBitmapIndex(\"dimMultiVal\",null))@@@181@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "listWithSingleValEvent.put(\"dimA\",\"leek\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,4,7,11,13),adapter.getBitmapIndex(\"dimMultiVal\",\"2\"))@@@184@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
216 [style = filled, label = "Map<String,Object> multivalEvent9 = new HashMap<>()@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Map<String,Object> event1 = new HashMap<>()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "IncrementalIndex toPersist = new IncrementalIndex.Builder().setIndexSchema(indexSchema).setMaxRowCount(1000).buildOnheap()@@@101@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "event3.put(\"dimA\",\"leek\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
143 [style = filled, label = "Assert.assertEquals(4L,rowList.get(11).metricValues().get(0))@@@174@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "multivalEvent3.put(\"sumCount\",1L)@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"2\",\"4\")),rowList.get(1).dimensionValues())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
190 [style = filled, label = "final QueryableIndexIndexableAdapter adapter = new QueryableIndexIndexableAdapter(merged)@@@112@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final File tmpDirB = temporaryFolder.newFolder()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
192 [style = filled, label = "checkBitmapIndex(Arrays.asList(9,10),adapter.getBitmapIndex(\"dimA\",\"potato\"))@@@140@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
204 [style = filled, label = "listWithEmptyStringEvent.put(\"sumCount\",1L)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
173 [style = filled, label = "checkBitmapIndex(Collections.singletonList(9),adapter.getBitmapIndex(\"dimMultiVal\",\"5\"))@@@187@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
180 [style = filled, label = "listWithNullEvent.put(\"sumCount\",1L)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
211 [style = filled, label = "Map<String,Object> multivalEvent = new HashMap<>()@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "listWithSingleValEvent2.put(\"dimMultiVal\",ImmutableList.of(\"2\"))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "multivalEvent.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"3\"))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
203 [style = filled, label = "Assert.assertEquals(4L,rowList.get(13).metricValues().get(0))@@@178@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"2\",\"3\")),rowList.get(4).dimensionValues())@@@125@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"\",\"1\",\"2\",\"3\")),rowList.get(4).dimensionValues())@@@159@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
197 [style = filled, label = "multivalEvent7.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"2\",\"3\",\"\"))@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "Assert.assertEquals(2L,rowList.get(12).metricValues().get(0))@@@176@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
191 [style = filled, label = "final QueryableIndex merged = closer.closeLater(indexIO.loadIndex(indexMerger.mergeQueryableIndex(singleEventIndexes,true,new AggregatorFactory((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f9b5f,tmpDirMerged,indexSpec,null)))@@@109@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "QueryableIndex indexB = closer.closeLater(indexIO.loadIndex(indexMerger.persist(toPersistB,tmpDirB,indexSpec,null)))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
200 [style = filled, label = "Map<String,Object> listWithEmptyStringEvent = new HashMap<>()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
117 [style = filled, label = "listWithEmptyStringEvent.put(\"dimA\",\"leek\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"2\",\"3\")),rowList.get(7).dimensionValues())@@@165@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
138 [style = filled, label = "multivalEvent5.put(\"dimA\",\"leek\")@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "checkBitmapIndex(Arrays.asList(0,1),adapter.getBitmapIndex(\"dimMultiVal\",\"2\"))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
162 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,4,6,7,8,9,10,12),adapter.getBitmapIndex(\"dimMultiVal\",\"1\"))@@@183@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
179 [style = filled, label = "Assert.assertEquals(2L,rowList.get(2).metricValues().get(0))@@@156@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "List<String> dims = Arrays.asList(\"dimA\",\"dimMultiVal\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "List<String> multivalEvent6List = Arrays.asList(null,\"3\")@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
163 [style = filled, label = "Assert.assertEquals(2L,rowList.get(8).metricValues().get(0))@@@168@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "event2.put(\"sumCount\",1L)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "singleValEvent3.put(\"dimA\",\"potato\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "toPersistA.add(new MapBasedInputRow(1,dims,event1))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
201 [style = filled, label = "QueryableIndex queryableIndex = closer.closeLater(indexIO.loadIndex(indexMerger.persist(toPersist,tmpDir,indexSpec,null)))@@@104@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "final List<DebugRow> rowList = RowIteratorHelper.toList(adapter.getRows())@@@113@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
125 [style = filled, label = "singleValEvent3.put(\"sumCount\",1L)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
122 [style = filled, label = "Map<String,Object> listWithSingleValEvent = new HashMap<>()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "multivalEvent3.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"3\",\"5\"))@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "singleValEvent.put(\"dimMultiVal\",\"1\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
127 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,3,4,5,6,7,9),adapter.getBitmapIndex(\"dimMultiVal\",\"1\"))@@@143@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
137 [style = filled, label = "emptyStringEvent.put(\"sumCount\",1L)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
206 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"\",\"3\")),rowList.get(5).dimensionValues())@@@161@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
195 [style = filled, label = "multivalEvent4.put(\"dimA\",\"leek\")@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
146 [style = filled, label = "multivalEvent6.put(\"dimA\",\"leek\")@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
209 [style = filled, label = "emptyListEvent.put(\"dimA\",\"leek\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(2L,rowList.get(6).metricValues().get(0))@@@130@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"dimA\",\"dimMultiVal\"),ImmutableList.copyOf(adapter.getDimensionNames()))@@@114@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "nullEvent2.put(\"dimMultiVal\",null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
205 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(null,\"1\",\"2\",\"3\")),rowList.get(1).dimensionValues())@@@119@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "event3.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"2\",\"4\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
145 [style = filled, label = "Assert.assertEquals(2L,rowList.get(9).metricValues().get(0))@@@136@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
144 [style = filled, label = "Map<String,Object> singleValEvent3 = new HashMap<>()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
120 [style = filled, label = "final File tmpDir = temporaryFolder.newFolder()@@@103@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "toPersistB.add(new MapBasedInputRow(1,dims,event3))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
147 [style = filled, label = "singleValEvent2.put(\"dimA\",\"leek\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
123 [style = filled, label = "nullEvent2.put(\"sumCount\",1L)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(2L,rowList.get(5).metricValues().get(0))@@@128@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "toPersist.add(new MapBasedInputRow(1,dims,event))@@@102@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final QueryableIndex merged = closer.closeLater(indexIO.loadIndex(indexMerger.mergeQueryableIndex(Arrays.asList(indexA,indexB),true,new AggregatorFactory((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8f9742,tmpDirMerged,indexSpec,null,-1)))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "nullEvent2.put(\"dimA\",\"leek\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
193 [style = filled, label = "emptyListEvent.put(\"dimMultiVal\",ImmutableList.of())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
110 [style = filled, label = "listWithSingleValEvent2.put(\"sumCount\",1L)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "checkBitmapIndex(Collections.singletonList(10),adapter.getBitmapIndex(\"dimMultiVal\",\"4\"))@@@186@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "Map<String,Object> emptyStringEvent = new HashMap<>()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
150 [style = filled, label = "listWithSingleValEvent3.put(\"dimMultiVal\",ImmutableList.of(\"2\"))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
210 [style = filled, label = "multivalEvent8.put(\"dimA\",\"leek\")@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "checkBitmapIndex(Collections.singletonList(6),adapter.getBitmapIndex(\"dimMultiVal\",\"5\"))@@@147@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"potato\",Arrays.asList(\"1\",\"3\")),rowList.get(9).dimensionValues())@@@135@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
167 [style = filled, label = "checkBitmapIndex(ImmutableList.of(3,4,5),adapter.getBitmapIndex(\"dimMultiVal\",\"\"))@@@182@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
113 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"potato\",\"2\"),rowList.get(13).dimensionValues())@@@177@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
126 [style = filled, label = "Assert.assertEquals(4L,rowList.get(3).metricValues().get(0))@@@158@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "nullEvent.put(\"sumCount\",1L)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
152 [style = filled, label = "nullEvent.put(\"dimA\",\"leek\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "event1.put(\"sumCount\",1L)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "singleValEvent.put(\"dimA\",\"leek\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(3,rowList.size())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
155 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(null,\"3\")),rowList.get(2).dimensionValues())@@@121@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "Assert.assertEquals(2L,rowList.get(4).metricValues().get(0))@@@160@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
212 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(null,\"1\",\"2\",\"3\")),rowList.get(1).dimensionValues())@@@153@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "NullHandling.replaceWithDefault()@@@115@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
182 [style = filled, label = "checkBitmapIndex(Arrays.asList(0,1,2),adapter.getBitmapIndex(\"dimMultiVal\",null))@@@141@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "multivalEvent.put(\"dimA\",\"leek\")@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
187 [style = filled, label = "testMultivalDim_persistAndMerge_dimensionValueOrderingRules['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "event3.put(\"sumCount\",1L)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"3\",\"5\")),rowList.get(6).dimensionValues())@@@129@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "IncrementalIndex toPersistB = new IncrementalIndex.Builder().setIndexSchema(indexSchema).setMaxRowCount(1000).buildOnheap()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(1L,rowList.get(0).metricValues().get(0))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "event1.put(\"dimA\",\"leek\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "event2.put(\"dimA\",\"leek\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
207 [style = filled, label = "multivalEvent.put(\"sumCount\",1L)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "checkBitmapIndex(Arrays.asList(0,1,2),adapter.getBitmapIndex(\"dimMultiVal\",\"1\"))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",\"1\"),rowList.get(6).dimensionValues())@@@163@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
100->201 [style = solid, label="toPersist"];
162->62 [style = bold, label=""];
98->73 [style = bold, label=""];
192->182 [style = bold, label=""];
81->191 [style = bold, label=""];
97->68 [style = bold, label=""];
167->162 [style = bold, label=""];
57->59 [style = bold, label=""];
148->125 [style = bold, label=""];
147->149 [style = bold, label=""];
53->39 [style = bold, label=""];
63->198 [style = bold, label=""];
134->210 [style = bold, label=""];
7->14 [style = bold, label=""];
45->38 [style = bold, label=""];
39->92 [style = dotted, label="false"];
116->72 [style = bold, label=""];
146->199 [style = bold, label=""];
172->177 [style = bold, label=""];
103->69 [style = bold, label=""];
83->90 [style = bold, label=""];
42->19 [style = bold, label=""];
2->16 [style = bold, label=""];
55->60 [style = bold, label=""];
26->46 [style = bold, label=""];
92->143 [style = bold, label=""];
17->179 [style = dashed, label="0"];
136->134 [style = bold, label=""];
39->80 [style = dotted, label="true"];
111->153 [style = solid, label="multivalEvent7"];
139->212 [style = bold, label=""];
185->191 [style = solid, label="singleEventIndexes"];
39->73 [style = dotted, label="false"];
39->115 [style = dotted, label="true"];
114->153 [style = solid, label="singleValEvent2"];
56->165 [style = bold, label=""];
215->56 [style = bold, label=""];
39->162 [style = dotted, label="false"];
86->152 [style = bold, label=""];
131->120 [style = bold, label=""];
15->115 [style = bold, label=""];
152->65 [style = bold, label=""];
124->217 [style = bold, label=""];
122->153 [style = solid, label="listWithSingleValEvent"];
107->113 [style = bold, label=""];
93->53 [style = bold, label=""];
191->190 [style = solid, label="merged"];
100->131 [style = bold, label=""];
190->93 [style = bold, label=""];
43->131 [style = solid, label="dims"];
207->172 [style = bold, label=""];
155->101 [style = bold, label=""];
117->169 [style = bold, label=""];
174->213 [style = bold, label=""];
205->76 [style = bold, label=""];
39->124 [style = dotted, label="true"];
95->173 [style = bold, label=""];
185->100 [style = bold, label=""];
120->201 [style = solid, label="tmpDir"];
64->61 [style = bold, label=""];
108->97 [style = bold, label=""];
140->183 [style = bold, label=""];
75->144 [style = bold, label=""];
102->96 [style = solid, label="tmpDirA"];
189->84 [style = bold, label=""];
15->7 [style = bold, label=""];
5->23 [style = solid, label="event1"];
39->174 [style = dotted, label="false"];
211->89 [style = bold, label=""];
112->141 [style = bold, label=""];
204->108 [style = bold, label=""];
33->9 [style = bold, label=""];
39->192 [style = dotted, label="true"];
46->11 [style = bold, label=""];
45->171 [style = dashed, label="0"];
39->196 [style = dotted, label="true"];
18->22 [style = solid, label="event4"];
151->52 [style = bold, label=""];
85->106 [style = bold, label=""];
87->88 [style = bold, label=""];
43->31 [style = solid, label="dims"];
164->153 [style = solid, label="listWithSingleValEvent3"];
159->107 [style = bold, label=""];
3->14 [style = solid, label="tmpDirMerged"];
41->44 [style = bold, label=""];
39->91 [style = dotted, label="false"];
39->217 [style = dotted, label="true"];
67->111 [style = bold, label=""];
198->137 [style = bold, label=""];
143->159 [style = bold, label=""];
20->0 [style = bold, label=""];
5->45 [style = bold, label=""];
39->135 [style = dotted, label="false"];
21->30 [style = bold, label=""];
183->66 [style = bold, label=""];
39->129 [style = dotted, label="true"];
39->159 [style = dotted, label="false"];
101->132 [style = bold, label=""];
12->74 [style = dashed, label="0"];
212->94 [style = bold, label=""];
29->2 [style = bold, label=""];
91->98 [style = bold, label=""];
39->94 [style = dotted, label="false"];
39->46 [style = dotted, label="true"];
182->176 [style = bold, label=""];
39->163 [style = dotted, label="false"];
35->31 [style = bold, label=""];
200->117 [style = bold, label=""];
15->14 [style = solid, label="indexA"];
39->106 [style = dotted, label="false"];
39->98 [style = dotted, label="false"];
175->146 [style = bold, label=""];
72->189 [style = bold, label=""];
105->63 [style = bold, label=""];
216->112 [style = bold, label=""];
133->153 [style = solid, label="multivalEvent3"];
164->161 [style = bold, label=""];
39->139 [style = dotted, label="false"];
36->25 [style = bold, label=""];
144->54 [style = bold, label=""];
201->142 [style = solid, label="queryableIndex"];
203->174 [style = bold, label=""];
186->167 [style = bold, label=""];
171->102 [style = bold, label=""];
21->7 [style = solid, label="toPersistB"];
68->194 [style = bold, label=""];
102->96 [style = bold, label=""];
39->90 [style = dotted, label="false"];
201->142 [style = bold, label=""];
27->43 [style = bold, label=""];
39->206 [style = dotted, label="false"];
90->103 [style = bold, label=""];
39->50 [style = dotted, label="true"];
169->204 [style = bold, label=""];
39->155 [style = dotted, label="true"];
8->35 [style = bold, label=""];
127->158 [style = bold, label=""];
40->33 [style = bold, label=""];
43->171 [style = solid, label="dims"];
202->130 [style = bold, label=""];
39->208 [style = dotted, label="false"];
14->32 [style = bold, label=""];
118->58 [style = bold, label=""];
39->12 [style = dotted, label="true"];
197->136 [style = bold, label=""];
114->147 [style = bold, label=""];
34->21 [style = bold, label=""];
17->26 [style = bold, label=""];
44->36 [style = bold, label=""];
31->22 [style = bold, label=""];
47->8 [style = bold, label=""];
39->166 [style = dotted, label="false"];
213->186 [style = bold, label=""];
52->196 [style = bold, label=""];
39->213 [style = dotted, label="false"];
49->43 [style = bold, label=""];
70->157 [style = bold, label=""];
46->129 [style = bold, label=""];
160->119 [style = bold, label=""];
39->15 [style = dotted, label="true"];
10->29 [style = bold, label=""];
145->151 [style = bold, label=""];
208->126 [style = bold, label=""];
132->121 [style = bold, label=""];
82->166 [style = bold, label=""];
137->200 [style = bold, label=""];
6->28 [style = bold, label=""];
39->83 [style = dotted, label="false"];
39->79 [style = dotted, label="false"];
109->140 [style = solid, label="multivalEvent5List"];
39->87 [style = dotted, label="false"];
126->85 [style = bold, label=""];
43->4 [style = bold, label=""];
133->55 [style = bold, label=""];
166->139 [style = bold, label=""];
50->124 [style = bold, label=""];
122->64 [style = bold, label=""];
1->7 [style = solid, label="tmpDirB"];
134->153 [style = solid, label="multivalEvent8"];
209->193 [style = bold, label=""];
128->211 [style = bold, label=""];
65->156 [style = bold, label=""];
88->83 [style = bold, label=""];
163->91 [style = bold, label=""];
142->100 [style = bold, label=""];
214->209 [style = bold, label=""];
62->79 [style = bold, label=""];
108->153 [style = solid, label="singleValEvent"];
39->26 [style = dotted, label="true"];
206->87 [style = bold, label=""];
39->145 [style = dotted, label="true"];
142->99 [style = bold, label=""];
73->135 [style = bold, label=""];
39->113 [style = dotted, label="false"];
177->70 [style = bold, label=""];
135->92 [style = bold, label=""];
111->188 [style = bold, label=""];
39->158 [style = dotted, label="true"];
39->173 [style = dotted, label="false"];
193->104 [style = bold, label=""];
180->105 [style = bold, label=""];
39->121 [style = dotted, label="true"];
168->180 [style = bold, label=""];
29->115 [style = dashed, label="0"];
13->5 [style = bold, label=""];
125->122 [style = bold, label=""];
7->14 [style = solid, label="indexB"];
129->160 [style = bold, label=""];
215->168 [style = solid, label="listWithNull"];
66->175 [style = bold, label=""];
39->74 [style = dotted, label="false"];
43->34 [style = solid, label="dims"];
39->176 [style = dotted, label="true"];
18->47 [style = bold, label=""];
38->24 [style = bold, label=""];
214->153 [style = solid, label="emptyListEvent"];
12->17 [style = bold, label=""];
1->3 [style = bold, label=""];
106->206 [style = bold, label=""];
43->22 [style = solid, label="dims"];
39->127 [style = dotted, label="true"];
156->118 [style = bold, label=""];
39->88 [style = dotted, label="false"];
39->205 [style = dotted, label="true"];
39->62 [style = dotted, label="false"];
141->71 [style = bold, label=""];
39->132 [style = dotted, label="true"];
199->67 [style = bold, label=""];
184->153 [style = solid, label="multivalEvent5"];
39->17 [style = dotted, label="true"];
121->50 [style = bold, label=""];
13->171 [style = bold, label=""];
138->140 [style = bold, label=""];
39->69 [style = dotted, label="false"];
39->82 [style = bold, label=""];
181->77 [style = bold, label=""];
39->82 [style = dotted, label="false"];
39->130 [style = dotted, label="true"];
170->205 [style = bold, label=""];
184->138 [style = bold, label=""];
39->179 [style = dotted, label="false"];
176->127 [style = bold, label=""];
14->32 [style = solid, label="merged"];
39->15 [style = solid, label="tmpDirA"];
78->207 [style = bold, label=""];
210->181 [style = bold, label=""];
179->208 [style = bold, label=""];
39->202 [style = dotted, label="true"];
59->195 [style = bold, label=""];
72->153 [style = solid, label="listWithSingleValEvent2"];
39->16 [style = dotted, label="true"];
115->170 [style = bold, label=""];
39->182 [style = dotted, label="true"];
41->34 [style = solid, label="event2"];
39->101 [style = dotted, label="true"];
69->163 [style = bold, label=""];
77->216 [style = bold, label=""];
23->34 [style = bold, label=""];
13->15 [style = solid, label="toPersistA"];
96->185 [style = bold, label=""];
51->168 [style = bold, label=""];
16->12 [style = bold, label=""];
4->86 [style = bold, label=""];
39->203 [style = dotted, label="false"];
211->153 [style = solid, label="multivalEvent"];
58->123 [style = bold, label=""];
96->99 [style = solid, label="indexA"];
32->37 [style = bold, label=""];
39->170 [style = dotted, label="true"];
172->153 [style = solid, label="multivalEvent2"];
150->128 [style = bold, label=""];
39->107 [style = dotted, label="false"];
149->75 [style = bold, label=""];
120->201 [style = bold, label=""];
109->184 [style = bold, label=""];
216->153 [style = solid, label="multivalEvent9"];
39->160 [style = dotted, label="true"];
104->215 [style = bold, label=""];
39->76 [style = dotted, label="true"];
110->164 [style = bold, label=""];
105->153 [style = solid, label="emptyStringEvent"];
165->51 [style = bold, label=""];
79->95 [style = bold, label=""];
157->133 [style = bold, label=""];
39->119 [style = dotted, label="true"];
19->18 [style = bold, label=""];
39->212 [style = dotted, label="false"];
113->203 [style = bold, label=""];
188->197 [style = bold, label=""];
144->153 [style = solid, label="singleValEvent3"];
158->202 [style = bold, label=""];
71->153 [style = bold, label=""];
13->96 [style = solid, label="toPersistA"];
60->57 [style = bold, label=""];
153->13 [style = bold, label=""];
99->81 [style = bold, label=""];
89->78 [style = bold, label=""];
119->145 [style = bold, label=""];
76->155 [style = bold, label=""];
39->85 [style = dotted, label="false"];
94->74 [style = bold, label=""];
4->13 [style = bold, label=""];
161->150 [style = bold, label=""];
39->151 [style = dotted, label="true"];
123->214 [style = bold, label=""];
187->43 [style = bold, label=""];
39->103 [style = dotted, label="false"];
24->41 [style = bold, label=""];
39->167 [style = dotted, label="false"];
66->199 [style = solid, label="multivalEvent6List"];
154->178 [style = bold, label=""];
22->39 [style = bold, label=""];
39->1 [style = bold, label=""];
39->95 [style = dotted, label="false"];
191->190 [style = bold, label=""];
81->191 [style = solid, label="tmpDirMerged"];
195->154 [style = bold, label=""];
39->186 [style = dotted, label="false"];
178->109 [style = bold, label=""];
74->179 [style = bold, label=""];
39->15 [style = bold, label=""];
28->40 [style = bold, label=""];
39->52 [style = dotted, label="true"];
84->110 [style = bold, label=""];
217->16 [style = bold, label=""];
196->192 [style = bold, label=""];
25->23 [style = bold, label=""];
200->153 [style = solid, label="listWithEmptyStringEvent"];
11->6 [style = bold, label=""];
37->20 [style = bold, label=""];
3->15 [style = bold, label=""];
48->42 [style = bold, label=""];
0->10 [style = bold, label=""];
165->153 [style = solid, label="listWithNullEvent"];
30->31 [style = solid, label="event3"];
43->23 [style = solid, label="dims"];
54->148 [style = bold, label=""];
194->114 [style = bold, label=""];
61->116 [style = bold, label=""];
30->48 [style = bold, label=""];
39->126 [style = dotted, label="false"];
39->143 [style = dotted, label="false"];
59->153 [style = solid, label="multivalEvent4"];
175->153 [style = solid, label="multivalEvent6"];
130->80 [style = bold, label=""];
}
