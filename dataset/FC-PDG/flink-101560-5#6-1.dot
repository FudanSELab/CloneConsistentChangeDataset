digraph {
17 [style = filled, label = "miniClusterResource.getMiniCluster().terminateTaskManager(0).get()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final DataStream<String> input = env.addSource(new ParallelismTrackingSource())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(1,0L))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final JobClient jobClient = env.executeAsync()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "waitUntilParallelismForVertexReached(miniClusterResource.getRestClusterClient(),jobClient.getJobID(),NUMBER_SLOTS_PER_TASK_MANAGER * (INITIAL_NUMBER_TASK_MANAGERS + 1))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "startAdditionalTaskManager()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ParallelismTrackingSource.waitForScaleUpToParallelism(NUMBER_SLOTS_PER_TASK_MANAGER * INITIAL_NUMBER_TASK_MANAGERS)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "ParallelismTrackingSource.waitForScaleUpToParallelism(NUMBER_SLOTS_PER_TASK_MANAGER)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testScaleUpOnAdditionalTaskManager['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ParallelismTrackingSource.resetParallelismTracker()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "env.executeAsync()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ParallelismTrackingSource.waitForScaleUpToParallelism(NUMBER_SLOTS_PER_TASK_MANAGER * 2)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "input.addSink(new DiscardingSink<>())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testScaleUpOnAdditionalTaskManager['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "waitUntilParallelismForVertexReached(miniClusterResource.getRestClusterClient(),jobClient.getJobID(),NUMBER_SLOTS_PER_TASK_MANAGER * INITIAL_NUMBER_TASK_MANAGERS)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testScaleDownOnTaskManagerLoss['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final DataStream<String> input = env.addSource(new DummySource())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "miniClusterResource.getMiniCluster().startTaskManager()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
0->16 [style = bold, label=""];
0->9 [style = bold, label=""];
4->14 [style = bold, label=""];
2->6 [style = bold, label=""];
16->7 [style = bold, label=""];
8->6 [style = bold, label=""];
2->10 [style = bold, label=""];
12->0 [style = bold, label=""];
13->11 [style = bold, label=""];
11->2 [style = bold, label=""];
7->3 [style = bold, label=""];
4->0 [style = bold, label=""];
8->13 [style = dashed, label="0"];
0->7 [style = bold, label=""];
6->10 [style = dashed, label="0"];
8->1 [style = bold, label=""];
18->4 [style = bold, label=""];
14->0 [style = bold, label=""];
7->9 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
3->8 [style = bold, label=""];
5->4 [style = bold, label=""];
17->15 [style = bold, label=""];
3->13 [style = bold, label=""];
9->3 [style = bold, label=""];
1->2 [style = bold, label=""];
}
