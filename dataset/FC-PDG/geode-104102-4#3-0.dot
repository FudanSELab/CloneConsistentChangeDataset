digraph {
10 [style = filled, label = "region.wait(10000)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "getAfterRoll['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "region.get(\"Key\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"Value2\",getValueOnDisk(region))@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "putBeforeRoll['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(\"Value1\",getValueOnDisk(region))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"Value1\",getValueInHTree(region))@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(hasBeenNotified)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "InterruptedException e@@@23@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "region.put(\"Key\",\"Value1\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "throw new AssertionError(\"exception not expected here\",e)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "getAfterRoll['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "switchOplog(region)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Region region@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "region@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "!hasBeenNotified@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Region region@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CacheObserverHolder.setInstance(new CacheObserverAdapter(){public void beforeGoingToCompact(){region.put(\"Key\",\"Value2\")}public void afterHavingCompacted(){synchronized (region) {region.notify()hasBeenNotified = true}}})@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->2 [style = dotted, label="true"];
3->0 [style = solid, label="hasBeenNotified"];
16->9 [style = solid, label="region"];
16->15 [style = solid, label="region"];
11->4 [style = bold, label=""];
2->5 [style = solid, label="region"];
9->11 [style = bold, label=""];
14->3 [style = bold, label=""];
8->5 [style = bold, label=""];
17->16 [style = dotted, label="true"];
4->10 [style = dotted, label="true"];
1->8 [style = bold, label=""];
12->1 [style = bold, label=""];
4->8 [style = bold, label=""];
0->8 [style = bold, label=""];
17->3 [style = bold, label=""];
4->0 [style = dotted, label="true"];
3->13 [style = bold, label=""];
2->6 [style = solid, label="region"];
2->3 [style = solid, label="region"];
7->3 [style = bold, label=""];
2->11 [style = solid, label="region"];
2->16 [style = dashed, label="0"];
0->15 [style = bold, label=""];
16->3 [style = solid, label="region"];
1->15 [style = bold, label=""];
14->2 [style = dotted, label="true"];
4->10 [style = bold, label=""];
11->4 [style = dotted, label="true"];
2->9 [style = solid, label="region"];
13->9 [style = bold, label=""];
4->15 [style = bold, label=""];
12->1 [style = dotted, label="true"];
16->11 [style = solid, label="region"];
5->15 [style = dashed, label="0"];
10->0 [style = bold, label=""];
5->6 [style = bold, label=""];
}
