digraph {
8 [style = filled, label = "BoundPredicate<Integer> pred@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return predicate(Expression.Operation.LT_EQ,name,transform.apply(boundary))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "return null@@@21@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "truncateIntegerStrict['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "BoundPredicate<Integer> pred@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "Transform<Integer,T> transform@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return predicate(Expression.Operation.LT_EQ,name,transform.apply(boundary) - 1)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "return predicate(Expression.Operation.GT,name,transform.apply(boundary))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "String name@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "return predicate(Expression.Operation.LT_EQ,name,transform.apply(boundary) - 1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "truncateInteger['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Transform<Integer,Integer> transform@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "int boundary = pred.literal().value()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return predicate(Expression.Operation.LT,name,transform.apply(boundary + 1))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "return null@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return predicate(Expression.Operation.LT,name,transform.apply(boundary))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "transform.apply(boundary - 1).equals(transform.apply(boundary))@@@13@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "truncateIntegerStrict['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "return predicate(Expression.Operation.LT_EQ,name,transform.apply(boundary))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String name@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "BoundPredicate<Integer> pred@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "String name@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "transform.apply(boundary + 1).equals(transform.apply(boundary))@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "return predicate(Expression.Operation.GT_EQ,name,transform.apply(boundary))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "return predicate(pred.op(),name,transform.apply(boundary))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "pred.op()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return predicate(Expression.Operation.GT,name,transform.apply(boundary - 1))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "return predicate(Expression.Operation.GT_EQ,name,transform.apply(boundary))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return predicate(Expression.Operation.GT_EQ,name,transform.apply(boundary) + 1)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "return null@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "return predicate(Expression.Operation.GT_EQ,name,transform.apply(boundary + 1))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "return predicate(Expression.Operation.LT_EQ,name,transform.apply(boundary - 1))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return predicate(Expression.Operation.NOT_EQ,name,transform.apply(boundary))@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return null@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "return null@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "return predicate(Expression.Operation.GT_EQ,name,transform.apply(boundary) + 1)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "Transform<Integer,T> transform@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "return predicate(Expression.Operation.NOT_EQ,name,transform.apply(boundary))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6->3 [style = bold, label=""];
9->35 [style = dotted, label="true"];
9->11 [style = bold, label=""];
29->30 [style = bold, label=""];
36->29 [style = bold, label=""];
3->14 [style = solid, label="boundary"];
11->2 [style = dotted, label="false"];
3->5 [style = solid, label="boundary"];
9->37 [style = dotted, label="true"];
10->1 [style = solid, label="name"];
31->36 [style = solid, label="name"];
10->5 [style = solid, label="name"];
9->35 [style = bold, label=""];
9->37 [style = bold, label=""];
19->26 [style = solid, label="name"];
14->7 [style = bold, label=""];
9->26 [style = bold, label=""];
23->18 [style = dotted, label="true"];
4->36 [style = dashed, label="0"];
3->26 [style = solid, label="boundary"];
12->24 [style = dashed, label="0"];
9->21 [style = bold, label=""];
9->14 [style = bold, label=""];
9->5 [style = bold, label=""];
9->13 [style = bold, label=""];
9->15 [style = dotted, label="true"];
10->4 [style = solid, label="name"];
3->30 [style = solid, label="boundary"];
9->29 [style = bold, label=""];
27->25 [style = bold, label=""];
3->1 [style = solid, label="boundary"];
3->2 [style = solid, label="boundary"];
14->16 [style = bold, label=""];
34->28 [style = dotted, label="true"];
9->33 [style = dotted, label="true"];
15->13 [style = bold, label=""];
9->26 [style = dotted, label="true"];
7->1 [style = bold, label=""];
31->30 [style = solid, label="name"];
19->22 [style = solid, label="name"];
9->33 [style = bold, label=""];
3->11 [style = solid, label="boundary"];
19->17 [style = solid, label="name"];
11->22 [style = dashed, label="0"];
3->7 [style = solid, label="boundary"];
9->17 [style = bold, label=""];
23->3 [style = bold, label=""];
23->19 [style = dotted, label="true"];
9->21 [style = dotted, label="true"];
31->33 [style = solid, label="name"];
26->27 [style = bold, label=""];
34->31 [style = dotted, label="true"];
3->16 [style = solid, label="boundary"];
3->0 [style = solid, label="boundary"];
22->20 [style = bold, label=""];
21->22 [style = bold, label=""];
0->33 [style = dashed, label="0"];
9->13 [style = dotted, label="true"];
6->12 [style = dotted, label="true"];
9->1 [style = bold, label=""];
3->22 [style = solid, label="boundary"];
3->4 [style = solid, label="boundary"];
23->24 [style = dotted, label="true"];
3->21 [style = solid, label="boundary"];
10->2 [style = solid, label="name"];
9->22 [style = bold, label=""];
9->0 [style = dotted, label="true"];
10->16 [style = solid, label="name"];
3->29 [style = solid, label="boundary"];
3->33 [style = solid, label="boundary"];
9->11 [style = dotted, label="true"];
12->32 [style = dashed, label="0"];
11->4 [style = bold, label=""];
0->11 [style = bold, label=""];
9->20 [style = bold, label=""];
10->7 [style = solid, label="name"];
11->4 [style = dotted, label="true"];
9->27 [style = bold, label=""];
3->9 [style = bold, label=""];
14->16 [style = dotted, label="true"];
6->10 [style = dotted, label="true"];
31->29 [style = solid, label="name"];
16->1 [style = bold, label=""];
4->20 [style = dashed, label="0"];
6->8 [style = dotted, label="true"];
9->20 [style = dotted, label="true"];
9->1 [style = dotted, label="true"];
3->20 [style = solid, label="boundary"];
9->22 [style = dotted, label="true"];
9->30 [style = dotted, label="true"];
4->5 [style = bold, label=""];
2->5 [style = bold, label=""];
9->36 [style = bold, label=""];
9->5 [style = dotted, label="true"];
34->32 [style = dotted, label="true"];
33->35 [style = bold, label=""];
17->26 [style = bold, label=""];
20->17 [style = bold, label=""];
9->29 [style = dotted, label="true"];
9->0 [style = bold, label=""];
19->21 [style = solid, label="name"];
1->15 [style = bold, label=""];
9->17 [style = dotted, label="true"];
9->36 [style = dotted, label="true"];
14->7 [style = dotted, label="false"];
3->35 [style = solid, label="boundary"];
9->30 [style = bold, label=""];
10->0 [style = solid, label="name"];
31->35 [style = solid, label="name"];
5->14 [style = bold, label=""];
30->37 [style = bold, label=""];
11->2 [style = bold, label=""];
9->14 [style = dotted, label="true"];
9->25 [style = dotted, label="true"];
9->27 [style = dotted, label="true"];
34->3 [style = bold, label=""];
0->21 [style = dashed, label="0"];
9->15 [style = bold, label=""];
9->25 [style = bold, label=""];
19->20 [style = solid, label="name"];
35->36 [style = bold, label=""];
3->36 [style = solid, label="boundary"];
11->35 [style = dashed, label="0"];
3->17 [style = solid, label="boundary"];
}
