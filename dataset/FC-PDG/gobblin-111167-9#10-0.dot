digraph {
8 [style = filled, label = "Preconditions.checkArgument(flowName != null,\"FlowName cannot be null\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "String flowName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "return Iterators.singletonIterator(getJobStatus(jobStates.get(0)))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Predicate<String> flowExecutionIdPredicate = null@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "String flowGroup@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Preconditions.checkArgument(flowName != null,\"flowName cannot be null\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "getJobStatusesForFlowExecution['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<JobStatus> jobStatuses = new ArrayList<>(tableNames.size())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "getJobStatusesForFlowExecution['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return jobStatuses.iterator()@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "jobStates.isEmpty()@@@12@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "return Iterators.emptyIterator()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "List<String> tableNames = this.stateStore.getTableNames(storeName,flowExecutionIdPredicate)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "String flowGroup@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "getJobStatusesForFlowExecution['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "String flowName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "String storeName = KafkaJobStatusMonitor.jobStatusStoreName(flowGroup,flowName)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "long flowExecutionId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "jobStatuses.add(getJobStatus(jobStates.get(0)))@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Preconditions.checkArgument(flowGroup != null,\"FlowGroup cannot be null\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "String storeName = KafkaJobStatusMonitor.jobStatusStoreName(flowGroup,flowName)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "List<State> jobStates = this.stateStore.getAll(storeName,tableName)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "return Iterators.emptyIterator()@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String flowName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "long flowExecutionId@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "String jobGroup@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Preconditions.checkArgument(jobName != null,\"jobName cannot be null\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Preconditions.checkArgument(jobGroup != null,\"jobGroup cannot be null\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Preconditions.checkArgument(flowGroup != null,\"flowGroup cannot be null\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String jobName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "List<State> jobStates = this.stateStore.getAll(storeName,tableName)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String flowGroup@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "String tableName = KafkaJobStatusMonitor.jobStatusTableName(flowExecutionId,jobGroup,jobName)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "jobStates.isEmpty()@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10->16 [style = bold, label=""];
5->4 [style = solid, label="flowName"];
24->31 [style = solid, label="tableName"];
22->30 [style = dotted, label="false"];
22->30 [style = bold, label=""];
20->27 [style = dotted, label="true"];
13->4 [style = bold, label=""];
3->33 [style = dashed, label="0"];
1->0 [style = dotted, label="true"];
23->24 [style = bold, label=""];
20->18 [style = dotted, label="true"];
6->11 [style = bold, label=""];
7->17 [style = solid, label="flowGroup"];
28->32 [style = bold, label=""];
31->22 [style = bold, label=""];
14->12 [style = bold, label=""];
4->10 [style = solid, label="storeName"];
20->29 [style = dotted, label="true"];
8->17 [style = bold, label=""];
4->14 [style = solid, label="storeName"];
32->21 [style = bold, label=""];
9->6 [style = bold, label=""];
20->25 [style = bold, label=""];
12->9 [style = bold, label=""];
29->24 [style = solid, label="jobGroup"];
15->5 [style = dotted, label="true"];
25->28 [style = bold, label=""];
1->3 [style = dotted, label="true"];
6->14 [style = bold, label=""];
18->24 [style = solid, label="jobName"];
22->26 [style = bold, label=""];
24->31 [style = bold, label=""];
12->9 [style = dotted, label="true"];
20->33 [style = dotted, label="true"];
17->13 [style = bold, label=""];
33->24 [style = solid, label="flowExecutionId"];
16->14 [style = bold, label=""];
5->8 [style = solid, label="flowName"];
7->4 [style = solid, label="flowGroup"];
23->31 [style = solid, label="storeName"];
4->10 [style = bold, label=""];
1->2 [style = dotted, label="true"];
13->10 [style = solid, label="flowExecutionIdPredicate"];
15->7 [style = dotted, label="true"];
20->19 [style = dotted, label="true"];
27->25 [style = solid, label="flowName"];
19->28 [style = solid, label="flowGroup"];
19->23 [style = solid, label="flowGroup"];
21->23 [style = bold, label=""];
15->8 [style = bold, label=""];
29->21 [style = solid, label="jobGroup"];
27->23 [style = solid, label="flowName"];
12->6 [style = bold, label=""];
18->32 [style = solid, label="jobName"];
22->26 [style = dotted, label="true"];
15->3 [style = dotted, label="true"];
}
