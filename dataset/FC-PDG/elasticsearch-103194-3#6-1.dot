digraph {
0 [style = filled, label = "String mapping = Strings.toString(xContentBuilder.endObject().endObject().endObject().endArray().endObject().endObject())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type\",new CompressedXContent(mapping))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "{mapping.startObject().startObject(\"point\"){mapping.field(\"match\",\"point*\")mapping.startObject(\"mapping\").field(\"type\",\"geo_point\").endObject()}mapping.endObject().endObject()}@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "XContentBuilder mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\").startArray(\"dynamic_templates\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().startArray(\"point\").value(1.3).value(1.2).endArray().endObject()),XContentType.JSON))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(doc.rootDoc().getField(\"point\"),notNullValue())@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(doc.rootDoc().getField(\"point\"),notNullValue())@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "XContentBuilder xContentBuilder = XContentFactory.jsonBuilder().startObject().startObject(\"type\").startArray(\"dynamic_templates\").startObject().startObject(\"point\").field(\"match\",\"point*\").startObject(\"mapping\").field(\"type\",\"point\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ParsedDocument doc = mapper.parse(source(null))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testLonLatArrayDynamic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(mapping)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "mapping.endArray().endObject().endObject()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testLonLatArrayDynamic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "testArrayDynamic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "XContentBuilder xContentBuilder = XContentFactory.jsonBuilder().startObject().startObject(\"type\").startArray(\"dynamic_templates\").startObject().startObject(\"point\").field(\"match\",\"point*\").startObject(\"mapping\").field(\"type\",\"geo_point\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8->10 [style = bold, label=""];
1->4 [style = bold, label=""];
3->5 [style = bold, label=""];
11->7 [style = solid, label="mapping"];
5->14 [style = dashed, label="0"];
0->2 [style = solid, label="mapping"];
9->11 [style = bold, label=""];
14->0 [style = bold, label=""];
5->0 [style = bold, label=""];
5->11 [style = dashed, label="0"];
7->8 [style = bold, label=""];
13->14 [style = bold, label=""];
2->1 [style = bold, label=""];
12->7 [style = bold, label=""];
11->6 [style = bold, label=""];
0->2 [style = bold, label=""];
6->12 [style = bold, label=""];
}
