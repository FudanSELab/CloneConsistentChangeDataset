digraph {
10 [style = filled, label = "location.put(\"lon\",-97.822d)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCity['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertThat(geoData.get(\"continent_name\"),equalTo(\"North America\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(geoData.get(\"ip\"),equalTo(\"8.8.8.8\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(geoData.get(\"country_name\"),equalTo(\"Netherlands\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "document.put(\"source_field\",\"82.170.213.79\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(geoData.get(\"country_name\"),equalTo(\"United States\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "processor.execute(ingestDocument)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "GeoIpProcessor processor = new GeoIpProcessor(randomAlphaOfLength(10),\"source_field\",loader(\"/GeoLite2-City.mmdb\"),\"target_field\",EnumSet.allOf(),false,new GeoIpCache(1000))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(geoData.size(),equalTo(4))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(ingestDocument.getSourceAndMetadata().get(\"source_field\"),equalTo(\"82.170.213.79\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testCountry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "GeoIpProcessor processor = new GeoIpProcessor(randomAlphaOfLength(10),\"source_field\",loader(\"/GeoLite2-Country.mmdb\"),\"target_field\",EnumSet.allOf(),false,new GeoIpCache(1000))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(geoData.size(),equalTo(6))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(geoData.size(),equalTo(5))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Map<String,Object> location = new HashMap<>()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(ingestDocument.getSourceAndMetadata().get(\"source_field\"),equalTo(\"8.8.8.8\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random(),document)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testCity['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(geoData.get(\"country_iso_code\"),equalTo(\"NL\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "@SuppressWarnings(\"unchecked\") Map<String,Object> geoData = (Map<String,Object>)ingestDocument.getSourceAndMetadata().get(\"target_field\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Map<String,Object> document = new HashMap<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "document.put(\"source_field\",\"8.8.8.8\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(geoData.get(\"country_iso_code\"),equalTo(\"US\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(geoData.get(\"ip\"),equalTo(\"82.170.213.79\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(geoData.get(\"continent_name\"),equalTo(\"Europe\"))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "location.put(\"lat\",37.751d)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(geoData.get(\"timezone\"),equalTo(\"America/Chicago\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertThat(geoData.get(\"location\"),equalTo(location))@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
17->5 [style = bold, label=""];
13->9 [style = solid, label="document"];
8->15 [style = bold, label=""];
25->22 [style = bold, label=""];
10->14 [style = bold, label=""];
28->20 [style = bold, label=""];
16->6 [style = bold, label=""];
0->12 [style = bold, label=""];
9->4 [style = bold, label=""];
11->26 [style = dashed, label="0"];
27->3 [style = bold, label=""];
8->23 [style = dashed, label="0"];
15->24 [style = dashed, label="0"];
18->12 [style = bold, label=""];
26->9 [style = bold, label=""];
16->19 [style = bold, label=""];
11->9 [style = bold, label=""];
15->16 [style = bold, label=""];
19->6 [style = bold, label=""];
13->11 [style = bold, label=""];
2->17 [style = dashed, label="0"];
16->21 [style = dashed, label="0"];
7->3 [style = bold, label=""];
4->7 [style = bold, label=""];
5->20 [style = dashed, label="0"];
7->27 [style = dashed, label="0"];
12->13 [style = bold, label=""];
6->1 [style = bold, label=""];
3->28 [style = bold, label=""];
23->24 [style = bold, label=""];
20->23 [style = bold, label=""];
3->2 [style = bold, label=""];
24->21 [style = bold, label=""];
13->26 [style = bold, label=""];
9->4 [style = solid, label="ingestDocument"];
4->27 [style = bold, label=""];
12->22 [style = dashed, label="0"];
2->28 [style = dashed, label="0"];
3->17 [style = bold, label=""];
6->14 [style = solid, label="location"];
1->10 [style = bold, label=""];
22->13 [style = bold, label=""];
2->5 [style = bold, label=""];
}
