digraph {
13 [style = filled, label = "onlineNodeShouldSucceedOnDisconnectingNode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "onlineNodeShouldSucceedOnOnlineNode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "System.out.println(\"Waiting until online in progress...\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "onlineNodeShouldSucceedOnOnlineNode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "System.out.println(\"Waiting until online in progress...\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(slave.toComputer().isOnline(),equalTo(true))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "slave.toComputer().isConnecting()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(result,succeededSilently())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "slave.toComputer().isConnecting()@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Computer.CONNECT,Jenkins.READ).invokeWithArgs(\"aNode\")@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(slave.toComputer().isOnline(),equalTo(false))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "slave.toComputer().waitUntilOnline()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "slave.toComputer().waitUntilOnline()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Computer.CONNECT,Jenkins.READ).invokeWithArgs(\"aNode\")@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "DumbSlave slave = j.createSlave(\"aNode\",\"\",null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "slave.toComputer().disconnect()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(slave.toComputer().isOnline(),equalTo(true))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "System.out.println(\"Waiting until going online is in progress...\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0->6 [style = bold, label=""];
11->3 [style = bold, label=""];
14->17 [style = bold, label=""];
8->11 [style = dotted, label="true"];
7->10 [style = bold, label=""];
1->4 [style = solid, label="result"];
4->5 [style = bold, label=""];
13->6 [style = bold, label=""];
12->1 [style = bold, label=""];
8->2 [style = dotted, label="true"];
3->7 [style = bold, label=""];
6->8 [style = bold, label=""];
9->6 [style = bold, label=""];
2->3 [style = bold, label=""];
8->11 [style = bold, label=""];
8->2 [style = bold, label=""];
7->12 [style = bold, label=""];
10->4 [style = bold, label=""];
16->14 [style = bold, label=""];
1->10 [style = dashed, label="0"];
15->16 [style = bold, label=""];
1->4 [style = bold, label=""];
8->7 [style = bold, label=""];
15->16 [style = dotted, label="true"];
8->3 [style = dotted, label="true"];
7->1 [style = bold, label=""];
2->11 [style = dashed, label="0"];
15->14 [style = dotted, label="true"];
4->15 [style = bold, label=""];
5->15 [style = dashed, label="0"];
10->4 [style = solid, label="result"];
15->17 [style = bold, label=""];
}
