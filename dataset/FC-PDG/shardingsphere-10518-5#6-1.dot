digraph {
13 [style = filled, label = "final Object shardingColumnParameter@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "AssignmentSegment assignment = new ColumnAssignmentSegment(0,0,columns,new LiteralExpressionSegment(0,0,\"\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "createUpdateStatement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "result.setTableSegment(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"user\"))))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "createUpdateStatementAndParameters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "result.setSetAssignment(new SetAssignmentSegment(0,0,Collections.singletonList(assignment)))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "result.setSetAssignment(new SetAssignmentSegment(0,0,Collections.singletonList(new AssignmentSegment(0,0,new ColumnSegment(0,0,new IdentifierValue(\"id\")),new LiteralExpressionSegment(0,0,\"\")))))@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<ColumnSegment> columns = new LinkedList<>()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "UpdateStatement result = new MySQLUpdateStatement()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "WhereSegment where = new WhereSegment(0,0,binaryOperationExpression)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "createUpdateStatement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "ParameterMarkerExpressionSegment right = new ParameterMarkerExpressionSegment(0,0,0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return result@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "return result@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ColumnSegment left = new ColumnSegment(0,0,new IdentifierValue(\"id\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Collection<AssignmentSegment> assignments = Collections.singletonList(new AssignmentSegment(0,0,new ColumnSegment(0,0,new IdentifierValue(\"id\")),new LiteralExpressionSegment(0,0,shardingColumnParameter)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "SetAssignmentSegment setAssignmentSegment = new SetAssignmentSegment(0,0,assignments)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "result.setSetAssignment(setAssignmentSegment)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "result.setWhere(where)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return result@@@6@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "BinaryOperationExpression binaryOperationExpression = new BinaryOperationExpression(0,0,left,right,\"=\",null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "columns.add(new ColumnSegment(0,0,new IdentifierValue(\"id\")))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->16 [style = bold, label=""];
4->9 [style = bold, label=""];
2->6 [style = solid, label="result"];
11->14 [style = solid, label="where"];
4->17 [style = bold, label=""];
19->12 [style = bold, label=""];
11->14 [style = bold, label=""];
21->15 [style = bold, label=""];
12->11 [style = bold, label=""];
7->5 [style = solid, label="assignment"];
19->12 [style = solid, label="right"];
12->11 [style = solid, label="binaryOperationExpression"];
9->10 [style = bold, label=""];
15->19 [style = bold, label=""];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
0->17 [style = dashed, label="0"];
2->16 [style = solid, label="result"];
4->0 [style = bold, label=""];
20->2 [style = bold, label=""];
9->7 [style = solid, label="columns"];
7->5 [style = bold, label=""];
2->1 [style = solid, label="result"];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
8->2 [style = bold, label=""];
17->18 [style = solid, label="assignments"];
15->12 [style = solid, label="left"];
0->1 [style = bold, label=""];
20->13 [style = dotted, label="true"];
18->21 [style = bold, label=""];
13->17 [style = solid, label="shardingColumnParameter"];
18->21 [style = solid, label="setAssignmentSegment"];
17->18 [style = bold, label=""];
}
