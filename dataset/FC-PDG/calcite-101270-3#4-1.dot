digraph {
4 [style = filled, label = "final String expected = \"\" + \"LogicalProject(EMPNO=($0(, ENAME=($1(, HIREDATE=($4(, SAL=($5(, COMM=($6(, DEPTNO=($7()\" + \" LogicalTableScan(table=((scott, EMP(()\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testProjectExceptWithName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testProjectExceptWithImplicitAliasAndName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testProjectExceptWithName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "RelNode root = builder.scan(\"EMP\").projectExcept(builder.field(\"MGR\"),builder.field(\"JOB\")).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RelNode root = builder.scan(\"EMP\").projectExcept(builder.field(\"EMP\",\"MGR\"),builder.field(\"EMP\",\"JOB\")).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(root,hasTree(expected))@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final RelBuilder builder = RelBuilder.create(config().build())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
6->4 [style = bold, label=""];
1->4 [style = bold, label=""];
5->2 [style = bold, label=""];
4->3 [style = solid, label="expected"];
1->3 [style = solid, label="root"];
7->2 [style = bold, label=""];
2->6 [style = bold, label=""];
2->1 [style = bold, label=""];
1->6 [style = dashed, label="0"];
6->3 [style = solid, label="root"];
0->2 [style = bold, label=""];
}
