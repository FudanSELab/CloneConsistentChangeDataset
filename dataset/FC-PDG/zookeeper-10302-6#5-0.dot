digraph {
1 [style = filled, label = "assertEquals(new String(zk.getData(\"/foo\",null,null)),\"foobar\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT),\"waiting for server down\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT),\"waiting for server being up\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testMetricsProviderLifecycle['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "clientConnected = new CountDownLatch(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "main.join()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final String configs = \"metricsProvider.className=\" + .getName() + \"\" + \"metricsProvider.httpPort=1234\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.stopCalled.get(),\"metrics provider lifecycle error\")@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "MainThread main = new MainThread(CLIENT_PORT,true,configs)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(\"waiting for server being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MainThread main = new MainThread(CLIENT_PORT,true,configs)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testMetricsProviderConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(1234,MetricsProviderWithConfiguration.httpPort.get())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ClientBase.setupTestEnv()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.startCalled.get())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "MetricsProviderWithConfiguration.httpPort.set(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "MetricsProviderCapturingLifecycle.reset()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "zk.close()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.startCalled.get(),\"metrics provider lifecycle error\")@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertTrue(clientConnected.await(CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS),\"Failed to establish zkclient connection!\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(\"Failed to establish zkclient connection!\",clientConnected.await(CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.stopCalled.get())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "testMetricsProviderLifecycle['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "main.shutdown()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "zk.create(\"/foo\",\"foobar\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.getRootContextCalled.get(),\"metrics provider lifecycle error\")@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertTrue(BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.configureCalled.get(),\"metrics provider lifecycle error\")@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "main.deleteDirs()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.configureCalled.get())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.getRootContextCalled.get())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "ZooKeeper zk = new ZooKeeper(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT,this)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "main.start()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final int CLIENT_PORT = PortAssignment.unique()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String configs = \"metricsProvider.className=\" + .getName() + \"\" + \"metricsProvider.httpPort=1234\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->27 [style = dashed, label="0"];
16->22 [style = dashed, label="0"];
7->32 [style = bold, label=""];
19->34 [style = bold, label=""];
4->14 [style = bold, label=""];
7->8 [style = solid, label="CLIENT_PORT"];
21->6 [style = bold, label=""];
7->12 [style = bold, label=""];
31->9 [style = bold, label=""];
7->34 [style = solid, label="CLIENT_PORT"];
0->17 [style = bold, label=""];
5->26 [style = dashed, label="0"];
26->29 [style = bold, label=""];
27->28 [style = bold, label=""];
25->3 [style = bold, label=""];
34->33 [style = bold, label=""];
23->15 [style = bold, label=""];
3->11 [style = bold, label=""];
10->3 [style = bold, label=""];
28->26 [style = bold, label=""];
1->0 [style = bold, label=""];
19->2 [style = bold, label=""];
7->19 [style = solid, label="CLIENT_PORT"];
7->16 [style = solid, label="CLIENT_PORT"];
15->18 [style = bold, label=""];
13->23 [style = dashed, label="0"];
14->1 [style = bold, label=""];
22->4 [style = bold, label=""];
20->27 [style = bold, label=""];
31->9 [style = solid, label="configs"];
9->23 [style = bold, label=""];
5->21 [style = bold, label=""];
7->23 [style = solid, label="CLIENT_PORT"];
7->9 [style = solid, label="CLIENT_PORT"];
19->34 [style = dashed, label="0"];
7->13 [style = solid, label="CLIENT_PORT"];
7->18 [style = solid, label="CLIENT_PORT"];
18->22 [style = bold, label=""];
7->15 [style = solid, label="CLIENT_PORT"];
3->7 [style = bold, label=""];
30->3 [style = bold, label=""];
12->8 [style = bold, label=""];
6->24 [style = dashed, label="0"];
2->28 [style = dashed, label="0"];
8->9 [style = bold, label=""];
17->20 [style = bold, label=""];
13->15 [style = bold, label=""];
16->4 [style = bold, label=""];
12->8 [style = solid, label="configs"];
20->19 [style = bold, label=""];
29->24 [style = bold, label=""];
21->29 [style = dashed, label="0"];
7->27 [style = solid, label="CLIENT_PORT"];
32->31 [style = bold, label=""];
11->7 [style = bold, label=""];
2->5 [style = bold, label=""];
9->13 [style = bold, label=""];
18->16 [style = bold, label=""];
}
