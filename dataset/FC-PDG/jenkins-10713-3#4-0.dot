digraph {
22 [style = filled, label = "assertThat(\"We should have two additional enabled protocols\",reloadedProtocols.size(),equalTo(defaultProtocols.size() + 2))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(\"JNLP3-connect must be enabled after the roundtrip\",reloadedProtocols,hasItem(\"JNLP3-connect\"))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(\"JNLP3-connect must be enabled before the roundtrip\",j.jenkins.getAgentProtocols(),hasItem(\"JNLP3-connect\"))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Set<String> newProtocols = new HashSet<>(defaultProtocols)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "newProtocols.add(\"JNLP4-connect\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertProtocolEnabled(MockOptInProtocol1.NAME,\"before the roundtrip\")@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "j.jenkins.save()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertProtocolEnabled(MockOptInProtocol1.NAME,\"after the roundtrip\")@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertFalse(\"The protocol list must have been really reloaded\",agentProtocolsBeforeReload == reloadedProtocols)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "agentProtocols_multipleEnable_roundtrip['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(\"We should have additional enabled protocol\",reloadedProtocols.size(),equalTo(defaultProtocols.size() + 1))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "j.jenkins.reload()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "j.jenkins.setAgentProtocols(newProtocols)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "newProtocols.add(\"JNLP3-connect\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assume.assumeThat(\"We assume that JNLP3-connect is disabled\",defaultProtocols,not(hasItem(\"JNLP3-connect\")))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(\"JNLP3-connect must be enabled after the roundtrip\",reloadedProtocols,hasItem(\"JNLP4-connect\"))@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "agentProtocols_singleEnable_roundtrip['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(\"JNLP4-connect must be enabled before the roundtrip\",j.jenkins.getAgentProtocols(),hasItem(\"JNLP4-connect\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assume.assumeThat(\"We assume that JNLP4-connect is disabled\",defaultProtocols,not(hasItem(\"JNLP4-connect\")))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "agentProtocols_singleEnable_roundtrip['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "newProtocols.add(MockOptInProtocol1.NAME)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9->22 [style = bold, label=""];
12->0 [style = bold, label=""];
2->19 [style = solid, label="reloadedProtocols"];
3->11 [style = bold, label=""];
11->12 [style = bold, label=""];
8->4 [style = bold, label=""];
23->10 [style = bold, label=""];
2->4 [style = solid, label="reloadedProtocols"];
10->3 [style = solid, label="defaultProtocols"];
12->21 [style = bold, label=""];
1->18 [style = bold, label=""];
10->11 [style = bold, label=""];
11->15 [style = bold, label=""];
8->17 [style = bold, label=""];
6->9 [style = solid, label="agentProtocolsBeforeReload"];
2->9 [style = solid, label="reloadedProtocols"];
3->20 [style = bold, label=""];
10->3 [style = bold, label=""];
10->20 [style = solid, label="defaultProtocols"];
6->16 [style = bold, label=""];
10->11 [style = solid, label="defaultProtocols"];
2->9 [style = bold, label=""];
15->0 [style = bold, label=""];
4->19 [style = bold, label=""];
11->0 [style = solid, label="newProtocols"];
12->15 [style = dashed, label="0"];
22->4 [style = bold, label=""];
16->7 [style = bold, label=""];
1->7 [style = bold, label=""];
0->5 [style = bold, label=""];
9->8 [style = bold, label=""];
13->10 [style = bold, label=""];
14->10 [style = bold, label=""];
21->0 [style = bold, label=""];
6->1 [style = bold, label=""];
18->7 [style = bold, label=""];
5->6 [style = bold, label=""];
8->22 [style = dashed, label="0"];
20->11 [style = bold, label=""];
7->2 [style = bold, label=""];
}
