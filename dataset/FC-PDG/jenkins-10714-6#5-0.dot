digraph {
21 [style = filled, label = "final Set<String> newProtocols = new HashSet<>(defaultProtocols)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "j.jenkins.setAgentProtocols(newProtocols)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "j.jenkins.reload()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "agentProtocols_multipleDisable_roundtrip['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final String protocolToDisable2 = iterator.next()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "j.jenkins.save()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(protocolToDisable + \" must be disabled after the roundtrip\",j.jenkins.getAgentProtocols(),not(hasItem(protocolToDisable)))@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final Set<String> newProtocols = new HashSet<>(defaultProtocols)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "agentProtocols_singleDisable_roundtrip['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "final String protocolToDisable2 = MockOptOutProtocol2.NAME@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "assertThat(\"We should have disabled one protocol\",j.jenkins.getAgentProtocols().size(),equalTo(defaultProtocols.size() - 1))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assume.assumeThat(\"At least one protocol is enabled\",defaultProtocols.size(),greaterThan(0))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "agentProtocols_singleDisable_roundtrip['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertProtocolDisabled(protocolToDisable2,\"after the roundtrip\")@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(\"We should have disabled two protocols\",j.jenkins.getAgentProtocols().size(),equalTo(defaultProtocols.size() - 2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertProtocolDisabled(protocolToDisable1,\"after the roundtrip\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "j.jenkins.save()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final String protocolToDisable1 = MockOptOutProtocol1.NAME@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final String protocolToDisable1 = iterator.next()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "newProtocols.remove(protocolToDisable1)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertThat(protocolToDisable2 + \" must be disabled after the roundtrip\",j.jenkins.getAgentProtocols(),not(hasItem(protocolToDisable2)))@@@20@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(protocolToDisable2 + \" must be disabled before the roundtrip\",j.jenkins.getAgentProtocols(),not(hasItem(protocolToDisable2)))@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assume.assumeThat(\"At least two protocol should be enabled\",defaultProtocols.size(),greaterThan(1))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertFalse(\"The protocol list must have been really refreshed\",agentProtocolsBeforeReload == j.jenkins.getAgentProtocols())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertThat(protocolToDisable + \" must be disabled before the roundtrip\",j.jenkins.getAgentProtocols(),not(hasItem(protocolToDisable)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(protocolToDisable1 + \" must be disabled after the roundtrip\",j.jenkins.getAgentProtocols(),not(hasItem(protocolToDisable1)))@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "j.jenkins.setAgentProtocols(newProtocols)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final String protocolToDisable = defaultProtocols.iterator().next()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "j.jenkins.reload()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "newProtocols.remove(protocolToDisable)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Iterator<String> iterator = defaultProtocols.iterator()@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertThat(protocolToDisable1 + \" must be disabled before the roundtrip\",j.jenkins.getAgentProtocols(),not(hasItem(protocolToDisable1)))@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->21 [style = solid, label="defaultProtocols"];
26->3 [style = solid, label="newProtocols"];
7->26 [style = solid, label="defaultProtocols"];
11->14 [style = solid, label="protocolToDisable1"];
7->3 [style = solid, label="defaultProtocols"];
8->15 [style = bold, label=""];
30->27 [style = solid, label="protocolToDisable"];
23->3 [style = solid, label="protocolToDisable2"];
29->30 [style = bold, label=""];
23->18 [style = solid, label="protocolToDisable2"];
19->9 [style = solid, label="agentProtocolsBeforeReload"];
14->34 [style = dashed, label="0"];
3->31 [style = bold, label=""];
34->5 [style = bold, label=""];
25->9 [style = bold, label=""];
30->26 [style = bold, label=""];
27->3 [style = bold, label=""];
11->12 [style = solid, label="protocolToDisable1"];
18->19 [style = bold, label=""];
12->9 [style = dashed, label="0"];
0->11 [style = bold, label=""];
21->24 [style = bold, label=""];
5->18 [style = bold, label=""];
12->16 [style = bold, label=""];
7->20 [style = bold, label=""];
9->10 [style = bold, label=""];
32->7 [style = bold, label=""];
13->1 [style = solid, label="protocolToDisable2"];
30->34 [style = solid, label="protocolToDisable"];
33->9 [style = bold, label=""];
8->28 [style = dashed, label="0"];
11->17 [style = solid, label="protocolToDisable1"];
22->7 [style = bold, label=""];
18->28 [style = bold, label=""];
9->8 [style = solid, label="agentProtocolsBeforeReload"];
1->9 [style = bold, label=""];
14->1 [style = bold, label=""];
19->25 [style = bold, label=""];
31->34 [style = bold, label=""];
20->5 [style = solid, label="protocolToDisable1"];
26->27 [style = bold, label=""];
2->0 [style = bold, label=""];
13->16 [style = solid, label="protocolToDisable2"];
20->23 [style = bold, label=""];
13->3 [style = bold, label=""];
10->8 [style = bold, label=""];
23->21 [style = bold, label=""];
28->33 [style = bold, label=""];
20->8 [style = solid, label="protocolToDisable1"];
7->2 [style = bold, label=""];
2->29 [style = dashed, label="0"];
11->13 [style = bold, label=""];
3->5 [style = solid, label="newProtocols"];
0->30 [style = dashed, label="0"];
15->33 [style = dashed, label="0"];
3->17 [style = bold, label=""];
15->12 [style = bold, label=""];
13->4 [style = solid, label="protocolToDisable2"];
6->7 [style = bold, label=""];
20->24 [style = solid, label="protocolToDisable1"];
4->5 [style = bold, label=""];
18->14 [style = bold, label=""];
24->3 [style = bold, label=""];
17->4 [style = bold, label=""];
23->15 [style = solid, label="protocolToDisable2"];
30->9 [style = solid, label="protocolToDisable"];
5->28 [style = solid, label="agentProtocolsBeforeReload"];
21->17 [style = solid, label="newProtocols"];
7->29 [style = bold, label=""];
17->27 [style = dashed, label="0"];
}
