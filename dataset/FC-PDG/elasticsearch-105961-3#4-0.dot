digraph {
45 [style = filled, label = "request = new AnalyzeAction.Request()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertEquals(1,tokens.size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "request.text(\"the quick brown fox\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "List<AnalyzeAction.AnalyzeToken> tokens = analyze.getTokens()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "request.addCharFilter(\"append\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(\"the\",tokens.get(0).getTerm())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testNoIndexAnalyzers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "testNormalizerWithIndex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "request.normalizer(\"my_normalizer\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "tokens = analyze.getTokens()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "AnalyzeAction.Response analyze = TransportAnalyzeAction.analyze(request,\"text\",null,null,registry,environment,maxTokenCount)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertEquals(\"brown\",tokens.get(1).getTerm())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "request = new AnalyzeAction.Request()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "request = new AnalyzeRequest()@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "AnalyzeRequest request = new AnalyzeRequest(\"index\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(\"abc\",tokens.get(0).getTerm())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(\"brown\",tokens.get(2).getTerm())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,\"text\",null,randomBoolean()? indexAnalyzers: null,registry,environment,maxTokenCount)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "AnalyzeResponse analyze = TransportAnalyzeAction.analyze(request,\"text\",null,null,registry,environment,maxTokenCount)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "request.tokenizer(\"standard\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "request = new AnalyzeRequest()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,\"text\",null,randomBoolean()? indexAnalyzers: null,registry,environment,maxTokenCount)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "request = new AnalyzeRequest()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "request = new AnalyzeAction.Request()@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "AnalyzeResponse analyze = TransportAnalyzeAction.analyze(request,\"text\",null,indexAnalyzers,registry,environment,maxTokenCount)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(\"qu1ck\",tokens.get(0).getTerm())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "request.addTokenFilter(\"mock\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(3,tokens.size())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<AnalyzeResponse.AnalyzeToken> tokens = analyze.getTokens()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "request.tokenizer(\"standard\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "tokens = analyze.getTokens()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "AnalyzeRequest request = new AnalyzeRequest()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "AnalyzeAction.Request request = new AnalyzeAction.Request()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(4,tokens.size())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(\"the\",tokens.get(0).getTerm())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "request.text(\"ABc\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "request.analyzer(\"standard\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"qu1ck\",tokens.get(1).getTerm())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\"foxbar\",tokens.get(3).getTerm())@@@41@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"qu1ck\",tokens.get(1).getTerm())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(\"brown\",tokens.get(2).getTerm())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"fox\",tokens.get(2).getTerm())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,\"text\",null,randomBoolean()? indexAnalyzers: null,registry,environment,maxTokenCount)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(4,tokens.size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testNoIndexAnalyzers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(4,tokens.size())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "request.tokenizer(\"standard\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "request.addCharFilter(\"append_foo\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(\"foxfoo\",tokens.get(3).getTerm())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tokens = analyze.getTokens()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52->1 [style = bold, label=""];
20->8 [style = solid, label="analyze"];
8->34 [style = bold, label=""];
42->23 [style = bold, label=""];
30->38 [style = bold, label=""];
1->42 [style = dashed, label="0"];
16->0 [style = bold, label=""];
28->18 [style = solid, label="request"];
44->21 [style = bold, label=""];
22->15 [style = bold, label=""];
10->28 [style = bold, label=""];
40->19 [style = solid, label="request"];
46->25 [style = bold, label=""];
47->52 [style = solid, label="request"];
20->52 [style = dashed, label="0"];
29->30 [style = bold, label=""];
17->50 [style = dashed, label="0"];
28->45 [style = dashed, label="0"];
4->39 [style = bold, label=""];
33->6 [style = bold, label=""];
28->11 [style = bold, label=""];
43->42 [style = bold, label=""];
12->32 [style = bold, label=""];
38->4 [style = bold, label=""];
23->46 [style = bold, label=""];
2->19 [style = solid, label="request"];
44->43 [style = solid, label="request"];
3->44 [style = dashed, label="0"];
31->2 [style = bold, label=""];
11->12 [style = bold, label=""];
6->24 [style = bold, label=""];
20->1 [style = bold, label=""];
18->19 [style = solid, label="analyze"];
15->19 [style = bold, label=""];
25->16 [style = bold, label=""];
50->52 [style = bold, label=""];
45->18 [style = solid, label="request"];
37->7 [style = bold, label=""];
1->23 [style = bold, label=""];
3->20 [style = solid, label="request"];
45->11 [style = bold, label=""];
49->47 [style = bold, label=""];
35->25 [style = bold, label=""];
23->35 [style = bold, label=""];
43->8 [style = solid, label="analyze"];
17->43 [style = bold, label=""];
24->26 [style = bold, label=""];
35->46 [style = dashed, label="0"];
18->29 [style = bold, label=""];
19->14 [style = bold, label=""];
51->50 [style = bold, label=""];
23->53 [style = dashed, label="0"];
34->37 [style = bold, label=""];
40->5 [style = bold, label=""];
39->31 [style = bold, label=""];
35->8 [style = solid, label="request"];
5->13 [style = bold, label=""];
10->45 [style = bold, label=""];
47->51 [style = bold, label=""];
0->8 [style = bold, label=""];
46->8 [style = solid, label="request"];
8->18 [style = solid, label="analyze"];
31->40 [style = bold, label=""];
9->3 [style = bold, label=""];
21->51 [style = dashed, label="0"];
3->21 [style = bold, label=""];
17->20 [style = bold, label=""];
13->22 [style = bold, label=""];
14->27 [style = bold, label=""];
32->18 [style = bold, label=""];
27->33 [style = bold, label=""];
2->40 [style = dashed, label="0"];
20->43 [style = dashed, label="0"];
41->44 [style = bold, label=""];
21->17 [style = bold, label=""];
1->53 [style = bold, label=""];
7->36 [style = bold, label=""];
53->48 [style = bold, label=""];
2->5 [style = bold, label=""];
36->10 [style = bold, label=""];
3->47 [style = dashed, label="0"];
}
