digraph {
22 [style = filled, label = "Statistics<?> colStats = stats.get(id)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return ROWS_CANNOT_MATCH@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return ROWS_CANNOT_MATCH@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "T lower = min(colStats,id)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return ROWS_MIGHT_MATCH@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return ROWS_MIGHT_MATCH@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Long valueCount = valueCounts.get(id)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "!colStats.hasNonNullValue()@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Literal<T> lit@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "ltEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "colStats != null && !colStats.isEmpty()@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return ROWS_MIGHT_MATCH@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "Preconditions.checkNotNull(struct.field(id),\"Cannot filter by nested column: %s\",schema.findField(id))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "valueCount == null@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return ROWS_CANNOT_MATCH@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ltEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cmp > 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "isNull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "colStats != null && !colStats.isEmpty() && colStats.getNumNulls() == 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
9->22 [style = bold, label=""];
15->23 [style = bold, label=""];
22->15 [style = bold, label=""];
1->10 [style = dotted, label="true"];
11->6 [style = solid, label="id"];
11->21 [style = solid, label="id"];
0->6 [style = bold, label=""];
22->15 [style = solid, label="colStats"];
11->21 [style = bold, label=""];
25->9 [style = bold, label=""];
17->4 [style = bold, label=""];
14->22 [style = bold, label=""];
19->18 [style = dotted, label="true"];
19->11 [style = bold, label=""];
11->25 [style = solid, label="id"];
5->0 [style = dotted, label="true"];
7->4 [style = bold, label=""];
21->25 [style = bold, label=""];
8->21 [style = dashed, label="0"];
3->6 [style = dotted, label="true"];
11->12 [style = solid, label="id"];
12->9 [style = bold, label=""];
15->3 [style = bold, label=""];
3->4 [style = bold, label=""];
11->9 [style = bold, label=""];
23->0 [style = bold, label=""];
9->14 [style = dotted, label="true"];
14->13 [style = dotted, label="true"];
13->14 [style = dashed, label="0"];
1->11 [style = bold, label=""];
6->2 [style = bold, label=""];
17->7 [style = bold, label=""];
8->12 [style = solid, label="field"];
2->17 [style = solid, label="cmp"];
3->5 [style = bold, label=""];
3->5 [style = dotted, label="true"];
11->15 [style = solid, label="id"];
5->6 [style = bold, label=""];
5->0 [style = bold, label=""];
11->8 [style = solid, label="id"];
24->11 [style = bold, label=""];
15->0 [style = bold, label=""];
24->20 [style = dotted, label="true"];
25->9 [style = solid, label="valueCount"];
19->16 [style = dotted, label="true"];
9->14 [style = bold, label=""];
11->9 [style = solid, label="id"];
15->3 [style = solid, label="colStats"];
3->15 [style = dashed, label="0"];
9->14 [style = solid, label="valueCount"];
11->8 [style = bold, label=""];
6->2 [style = solid, label="lower"];
15->6 [style = solid, label="colStats"];
14->15 [style = bold, label=""];
13->15 [style = bold, label=""];
3->17 [style = dotted, label="true"];
14->13 [style = bold, label=""];
17->7 [style = dotted, label="true"];
1->16 [style = dotted, label="true"];
15->23 [style = dotted, label="true"];
8->12 [style = bold, label=""];
11->22 [style = solid, label="id"];
3->2 [style = dotted, label="true"];
16->20 [style = dashed, label="0"];
}
