digraph {
8 [style = filled, label = "assertNotNull(transactionManager.coordinator(CoordinatorType.TRANSACTION))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "client.prepareUnsupportedVersionResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){InitProducerIdRequest initProducerIdRequest = (InitProducerIdRequest)bodyassertEquals(initProducerIdRequest.transactionalId(),transactionalId)assertEquals(initProducerIdRequest.transactionTimeoutMs(),transactionTimeoutMs)return true}})@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "testUnsupportedInitTransactions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "prepareFindCoordinatorResponse(Errors.NONE,false,CoordinatorType.TRANSACTION,transactionalId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(transactionManager.lastError() instanceof UnsupportedVersionException)@@@20@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "client.prepareUnsupportedVersionResponse(null)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testUnsupportedInitTransactions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "sender.run(time.milliseconds())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testDisconnectAndRetry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(transactionManager.lastError() instanceof UnsupportedVersionException)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "prepareFindCoordinatorResponse(Errors.NONE,true,CoordinatorType.TRANSACTION,transactionalId)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "sender.run(time.milliseconds())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "transactionManager.initializeTransactions()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "sender.run(time.milliseconds())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(brokerNode,transactionManager.coordinator(CoordinatorType.TRANSACTION))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "sender.run(time.milliseconds())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFalse(transactionManager.hasError())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(transactionManager.hasFatalError())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->5 [style = bold, label=""];
4->17 [style = bold, label=""];
5->9 [style = bold, label=""];
1->15 [style = bold, label=""];
1->3 [style = bold, label=""];
7->11 [style = dashed, label="0"];
11->12 [style = bold, label=""];
4->2 [style = bold, label=""];
16->2 [style = bold, label=""];
8->7 [style = bold, label=""];
9->6 [style = bold, label=""];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
10->4 [style = bold, label=""];
3->15 [style = dashed, label="0"];
8->11 [style = bold, label=""];
17->16 [style = bold, label=""];
14->4 [style = bold, label=""];
13->4 [style = bold, label=""];
}
