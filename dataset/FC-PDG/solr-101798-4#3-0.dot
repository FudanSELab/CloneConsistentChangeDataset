digraph {
19 [style = filled, label = "constantIntTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(new Integer(24),val.getObject())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "val.streamObjects(null)@@@48@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"24.0\",val.getString())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(24.0,val.getDouble(),.00001)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "constantFloatTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "counter.setValue(0)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "counter.setValue(0)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(\"24\",val.getString())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "val.streamLongs(null)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "val.streamDoubles(null)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(val.exists())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(24L,val.getLong())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "val.streamStrings(null)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "counter.setValue(0)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "val.streamFloats(null)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "val.streamInts(null)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ConstantIntValue val = new ConstantIntValue(24)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "constantFloatTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertEquals(new Float(24F),val.getObject())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(24,val.getInt())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "counter.setValue(0)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestIntValue counter = new TestIntValue()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "counter.setValue(0)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(24F,val.getFloat(),.00001)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ConstantFloatValue val = new ConstantFloatValue(24F)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(24F,val.getObject())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "counter.setValue(0)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->20 [style = bold, label=""];
18->3 [style = bold, label=""];
7->21 [style = dashed, label="0"];
1->8 [style = bold, label=""];
22->2 [style = bold, label=""];
5->23 [style = bold, label=""];
17->6 [style = bold, label=""];
7->10 [style = bold, label=""];
23->26 [style = bold, label=""];
21->24 [style = bold, label=""];
0->21 [style = bold, label=""];
12->6 [style = bold, label=""];
27->22 [style = bold, label=""];
13->1 [style = bold, label=""];
3->0 [style = bold, label=""];
19->25 [style = bold, label=""];
2->13 [style = bold, label=""];
0->7 [style = bold, label=""];
20->18 [style = bold, label=""];
26->27 [style = bold, label=""];
5->2 [style = bold, label=""];
24->4 [style = bold, label=""];
6->25 [style = dashed, label="0"];
11->3 [style = bold, label=""];
25->11 [style = bold, label=""];
6->11 [style = bold, label=""];
7->16 [style = bold, label=""];
8->9 [style = bold, label=""];
9->14 [style = bold, label=""];
10->4 [style = bold, label=""];
14->15 [style = bold, label=""];
10->16 [style = dashed, label="0"];
16->4 [style = bold, label=""];
4->5 [style = bold, label=""];
10->24 [style = dashed, label="0"];
}
