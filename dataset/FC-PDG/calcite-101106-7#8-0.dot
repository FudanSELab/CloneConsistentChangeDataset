digraph {
12 [style = filled, label = "groupKey = ImmutableBitSet.of(3)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "RelNode rel = convertSql(\"select * from (values \" + \"(1, 2, 3, null), \" + \"(3, 4, 5, 6), \" + \"(3, 4, null, 6), \" + \"(8, 4, 5, null) \" + \") t(c1, c2, c3, c4)\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testDistinctRowCountTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "ImmutableBitSet groupKey = ImmutableBitSet.of(0,1,2,3)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "result = mq.getDistinctRowCount(rel,groupKey,null)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testDistinctRowCountTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final RelMetadataQuery mq = rel.getCluster().getMetadataQuery()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Double result = mq.getDistinctRowCount(rel,groupKey,null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(result,nullValue())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "ImmutableBitSet groupKey = ImmutableBitSet.of(rel.getRowType().getFieldNames().indexOf(\"DEPTNO\"))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "ImmutableBitSet groupKey = ImmutableBitSet.of()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "result = mq.getDistinctRowCount(rel,groupKey,null)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "groupKey = ImmutableBitSet.of(1,2)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertThat(result,is(4D))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertThat(result,is(2D))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "RelNode rel = convertSql(\"select * from emp where deptno = 10\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(result,is(3D))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertThat(result,is(1D))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(result,is(3D))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "result = mq.getDistinctRowCount(rel,groupKey,null)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "testDistinctRowCountTableEmptyKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "groupKey = ImmutableBitSet.of(0)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
16->14 [style = solid, label="rel"];
5->20 [style = bold, label=""];
2->1 [style = bold, label=""];
3->18 [style = dashed, label="0"];
12->17 [style = bold, label=""];
4->19 [style = bold, label=""];
4->19 [style = solid, label="result"];
4->18 [style = bold, label=""];
8->6 [style = bold, label=""];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
20->4 [style = solid, label="groupKey"];
16->2 [style = bold, label=""];
15->16 [style = bold, label=""];
16->17 [style = solid, label="rel"];
2->4 [style = bold, label=""];
16->4 [style = solid, label="rel"];
3->19 [style = dashed, label="0"];
20->2 [style = bold, label=""];
5->16 [style = dashed, label="0"];
21->5 [style = bold, label=""];
5->4 [style = solid, label="rel"];
5->2 [style = bold, label=""];
4->18 [style = solid, label="result"];
7->4 [style = solid, label="groupKey"];
10->12 [style = bold, label=""];
14->8 [style = solid, label="result"];
4->3 [style = solid, label="result"];
13->14 [style = solid, label="groupKey"];
12->17 [style = solid, label="groupKey"];
18->13 [style = bold, label=""];
1->4 [style = solid, label="groupKey"];
16->9 [style = solid, label="rel"];
14->8 [style = bold, label=""];
17->11 [style = solid, label="result"];
2->7 [style = bold, label=""];
6->9 [style = solid, label="groupKey"];
6->9 [style = bold, label=""];
9->10 [style = solid, label="result"];
1->7 [style = dashed, label="0"];
13->14 [style = bold, label=""];
0->5 [style = bold, label=""];
17->11 [style = bold, label=""];
}
