digraph {
14 [style = filled, label = "testCrossReference['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals((Integer)1,person.getId())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals((Integer)2,person.getPets().get(1).getId())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Person person = personMapper.select(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "SqlSessionFactory sqlSessionFactory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals((Integer)3,pet2.getId())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testCrossReference['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "PetMapper petMapper = sqlSession.getMapper()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SqlSessionFactory sqlSessionFactory@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals((Integer)2,pet2.getOwner().getId())@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals((Integer)2,person.getPets().get(1).getId())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals((Integer)1,person.getId())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "SqlSessionFactory sqlSessionFactory@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testCrossReference['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(2,person.getPets().size())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Pet pet = personMapper.selectPet(1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MultipleCrossIncludePetMapper petMapper = sqlSession.getMapper()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Pet pet2 = petMapper.select(3)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MultipleCrossIncludePersonMapper personMapper = sqlSession.getMapper()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(Integer.valueOf(1),pet.getId())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "PersonMapper personMapper = sqlSession.getMapper()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->15 [style = dashed, label="0"];
4->9 [style = bold, label=""];
16->18 [style = bold, label=""];
12->20 [style = dashed, label="0"];
16->17 [style = dotted, label="true"];
18->11 [style = bold, label=""];
6->1 [style = dotted, label="true"];
10->3 [style = bold, label=""];
3->12 [style = bold, label=""];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
15->3 [style = bold, label=""];
19->8 [style = bold, label=""];
11->15 [style = bold, label=""];
14->13 [style = dotted, label="true"];
20->4 [style = bold, label=""];
6->2 [style = bold, label=""];
1->13 [style = dashed, label="0"];
3->20 [style = bold, label=""];
1->17 [style = dashed, label="0"];
8->5 [style = bold, label=""];
12->4 [style = bold, label=""];
5->0 [style = bold, label=""];
7->19 [style = dashed, label="0"];
11->10 [style = bold, label=""];
2->18 [style = dashed, label="0"];
9->19 [style = bold, label=""];
14->2 [style = bold, label=""];
2->11 [style = bold, label=""];
}
