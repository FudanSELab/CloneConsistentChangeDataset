digraph {
12 [style = filled, label = "return responseData@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "forPath['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String path@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "client.processBackgroundOperation(new OperationAndData<String>(this,path,backgrounding.getCallback(),null,backgrounding.getContext(),watching),null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "backgrounding.inBackground()@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "path = client.fixForNamespace(path)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return children@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "children = pathInForeground(path)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "forPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "forPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "byte(( responseData = null@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String path@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "client.getSchemaSet().getSchema(path).validateWatch(watching.isWatched() || watching.hasWatcher())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "responseData = pathInForeground(path)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<String> children = null@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "client.getSchemaSet().getSchema(path).validateWatch(path,watching.isWatched() || watching.hasWatcher())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
0->13 [style = bold, label=""];
0->6 [style = solid, label="path"];
2->6 [style = bold, label=""];
14->5 [style = bold, label=""];
6->11 [style = dashed, label="0"];
11->12 [style = solid, label="responseData"];
11->12 [style = bold, label=""];
15->0 [style = solid, label="path"];
9->10 [style = bold, label=""];
8->7 [style = solid, label="children"];
2->4 [style = bold, label=""];
4->7 [style = bold, label=""];
8->13 [style = dashed, label="0"];
1->3 [style = dotted, label="true"];
0->11 [style = solid, label="path"];
14->15 [style = dotted, label="true"];
13->12 [style = solid, label="responseData"];
5->0 [style = bold, label=""];
8->2 [style = bold, label=""];
5->10 [style = dashed, label="0"];
6->7 [style = solid, label="children"];
3->0 [style = solid, label="path"];
10->0 [style = bold, label=""];
0->4 [style = solid, label="path"];
3->10 [style = solid, label="path"];
0->8 [style = bold, label=""];
2->4 [style = dotted, label="true"];
7->12 [style = dashed, label="0"];
4->12 [style = bold, label=""];
2->6 [style = dotted, label="false"];
3->15 [style = dashed, label="0"];
2->11 [style = dotted, label="false"];
6->7 [style = bold, label=""];
2->11 [style = bold, label=""];
9->3 [style = dotted, label="true"];
13->2 [style = bold, label=""];
}
