digraph {
17 [style = filled, label = "expandedStatFacet.put(\"type\",\"func\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(13,queryResponse.getResults().getNumFound())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(0.108,(double)topLevelFacetingData.getStatValue(\"avg_value\"),0.1)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final JsonQueryRequest request = new JsonQueryRequest().setQuery(\"memory\").withFilter(\"inStock:true\").withStatFacet(\"avg_price\",\"avg(price)\").withStatFacet(\"min_manufacturedate_dt\",\"min(manufacturedate_dt)\").withStatFacet(\"num_suppliers\",\"unique(manu_exact)\").withStatFacet(\"median_weight\",\"percentile(weight,50)\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(10,queryResponse.getResults().size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testStatFacet1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final JsonQueryRequest request = new JsonQueryRequest().setQuery(\"*:*\").withFilter(\"price:(1.0 TO *(\").withFilter(\"popularity:(0 TO 10(\").withFacet(\"avg_value\",expandedStatFacet)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testStatFacet1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "final Map<String,Object> expandedStatFacet = new HashMap<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SolrClient solrClient = cluster.getSolrClient()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(0,queryResponse.getStatus())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(3L,topLevelFacetingData.getStatValue(\"num_suppliers\"))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testStatFacetExpanded['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expandedStatFacet.put(\"func\",\"avg(div($numer,$denom))\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Object val = topLevelFacetingData.getStatValue(\"min_manufacturedate_dt\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"2006-02-13T15:26:37Z\",((Date)val).toInstant().toString())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "expandedStatFacet.put(\"numer\",\"mul(popularity,3.0)\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(4,queryResponse.getResults().size())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(0,queryResponse.getStatus())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expandedStatFacet.put(\"denom\",\"price\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(4,queryResponse.getResults().getNumFound())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "QueryResponse queryResponse = request.process(solrClient,COLLECTION_NAME)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final NestableJsonFacet topLevelFacetingData = queryResponse.getJsonFacetingResponse()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(352.0,(double)topLevelFacetingData.getStatValue(\"median_weight\"),0.5)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "QueryResponse queryResponse = request.process(solrClient,COLLECTION_NAME)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->4 [style = bold, label=""];
12->10 [style = solid, label="solrClient"];
8->0 [style = bold, label=""];
1->12 [style = bold, label=""];
25->19 [style = bold, label=""];
12->2 [style = bold, label=""];
11->25 [style = dashed, label="0"];
9->15 [style = bold, label=""];
14->12 [style = bold, label=""];
2->10 [style = bold, label=""];
19->0 [style = bold, label=""];
17->20 [style = bold, label=""];
7->11 [style = bold, label=""];
9->6 [style = bold, label=""];
0->23 [style = bold, label=""];
8->0 [style = solid, label="val"];
10->7 [style = bold, label=""];
16->21 [style = bold, label=""];
18->21 [style = solid, label="expandedStatFacet"];
24->16 [style = bold, label=""];
6->3 [style = bold, label=""];
3->8 [style = bold, label=""];
12->18 [style = bold, label=""];
6->25 [style = bold, label=""];
15->3 [style = bold, label=""];
20->24 [style = bold, label=""];
9->23 [style = dashed, label="0"];
4->13 [style = bold, label=""];
18->17 [style = bold, label=""];
6->15 [style = dashed, label="0"];
13->9 [style = bold, label=""];
21->9 [style = bold, label=""];
4->19 [style = dashed, label="0"];
0->5 [style = bold, label=""];
22->12 [style = bold, label=""];
12->9 [style = solid, label="solrClient"];
}
