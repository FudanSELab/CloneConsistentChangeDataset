digraph {
11 [style = filled, label = "QueryResponse response = commonsHttpSolrServer.query(query)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "httpSolrServer.setRequestWriter(new BinaryRequestWriter())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "counter(0( = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "httpSolrServer.commit()@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "commonsHttpSolrServer.setRequestWriter(new BinaryRequestWriter())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(0,response.getStatus())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(0,response.getStatus())@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "commonsHttpSolrServer.addBeans(new Iterator<Bean>(){@Override public boolean hasNext(){return counter(0( < numdocs}@Override public Bean next(){Bean bean = new Bean()bean.id = \"\" + (++counter(0()bean.cat = \"foocat\"return bean}@Override public void remove(){}})@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "httpSolrServer.addBeans(new Iterator<Bean>(){@Override public boolean hasNext(){return counter(0( < numdocs}@Override public Bean next(){Bean bean = new Bean()bean.id = \"\" + (++counter(0()bean.cat = \"foocat\"return bean}@Override public void remove(){}})@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "httpSolrServer.deleteByQuery(\"*:*\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "commonsHttpSolrServer.add(new Iterator<SolrInputDocument>(){@Override public boolean hasNext(){return counter(0( < numdocs}@Override public SolrInputDocument next(){SolrInputDocument doc = new SolrInputDocument()doc.addField(\"id\",\"\" + (++counter(0())doc.addField(\"cat\",\"foocat\")return doc}@Override public void remove(){}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "SolrQuery query = new SolrQuery(\"*:*\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "QueryResponse response = commonsHttpSolrServer.query(query)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "HttpSolrServer httpSolrServer = (HttpSolrServer)getSolrServer()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testWithBinaryBean['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "commonsHttpSolrServer.commit()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(numdocs,response.getResults().getNumFound())@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final int(( counter = new int((((@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "counter(0( = 0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "QueryResponse response = httpSolrServer.query(query)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testWithBinaryBean['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "commonsHttpSolrServer.deleteByQuery(\"*:*\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "HttpSolrServer commonsHttpSolrServer = (HttpSolrServer)getSolrServer()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "doIt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final int(( counter = new int((((@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "HttpSolrServer commonsHttpSolrServer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(numdocs,response.getResults().getNumFound())@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22->26 [style = bold, label=""];
6->13 [style = solid, label="counter"];
15->7 [style = bold, label=""];
2->1 [style = bold, label=""];
19->20 [style = dotted, label="true"];
5->11 [style = solid, label="query"];
21->25 [style = solid, label="query"];
22->26 [style = solid, label="counter"];
8->3 [style = bold, label=""];
25->3 [style = bold, label=""];
14->17 [style = bold, label=""];
5->18 [style = bold, label=""];
21->25 [style = bold, label=""];
18->2 [style = bold, label=""];
9->7 [style = bold, label=""];
24->22 [style = bold, label=""];
13->16 [style = bold, label=""];
11->2 [style = bold, label=""];
6->8 [style = solid, label="counter"];
4->0 [style = bold, label=""];
8->13 [style = dashed, label="0"];
19->24 [style = bold, label=""];
0->14 [style = dashed, label="0"];
0->10 [style = bold, label=""];
3->5 [style = bold, label=""];
23->21 [style = bold, label=""];
11->18 [style = dashed, label="0"];
6->13 [style = bold, label=""];
26->23 [style = bold, label=""];
7->6 [style = bold, label=""];
6->8 [style = bold, label=""];
12->14 [style = bold, label=""];
17->15 [style = bold, label=""];
10->17 [style = dashed, label="0"];
16->5 [style = bold, label=""];
10->9 [style = bold, label=""];
5->11 [style = bold, label=""];
5->18 [style = solid, label="query"];
3->16 [style = dashed, label="0"];
9->15 [style = dashed, label="0"];
8->26 [style = dashed, label="0"];
}
