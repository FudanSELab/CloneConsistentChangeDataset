digraph {
16 [style = filled, label = "expectLastCall()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "workerTask.awaitStop(1000L)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "workerTask.stop()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "stopBeforeStarting['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "verify(workerTask)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "EasyMock.expectLastCall()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "workerTask.releaseResources()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "expectLastCall()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "workerTask.awaitStop(1000L)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "workerTask.run()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "workerTask.close()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "expectLastCall()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "verify(workerTask)@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "statusListener.onStartup(taskId)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "replay(workerTask)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expectLastCall()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "workerTask.stop()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "standardStartup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader,metrics).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "statusListener.onShutdown(taskId)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "workerTask.execute()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "standardStartup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "EasyMock.expectLastCall()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ConnectorTaskId taskId = new ConnectorTaskId(\"foo\",0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader,metrics,retryWithToleranceOperator).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "expectLastCall()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "workerTask.run()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "EasyMock.expectLastCall()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
17->8 [style = bold, label=""];
0->16 [style = bold, label=""];
16->13 [style = bold, label=""];
29->4 [style = bold, label=""];
4->17 [style = bold, label=""];
15->1 [style = solid, label="workerTask"];
21->0 [style = bold, label=""];
27->12 [style = bold, label=""];
12->21 [style = bold, label=""];
15->5 [style = solid, label="workerTask"];
16->25 [style = dashed, label="0"];
2->3 [style = bold, label=""];
21->19 [style = solid, label="workerTask"];
12->15 [style = bold, label=""];
12->14 [style = solid, label="taskId"];
12->20 [style = solid, label="taskId"];
15->21 [style = dashed, label="0"];
8->6 [style = bold, label=""];
11->12 [style = bold, label=""];
24->29 [style = bold, label=""];
15->19 [style = solid, label="workerTask"];
7->4 [style = bold, label=""];
23->8 [style = bold, label=""];
14->7 [style = bold, label=""];
20->10 [style = bold, label=""];
6->20 [style = bold, label=""];
3->9 [style = bold, label=""];
6->1 [style = bold, label=""];
17->28 [style = dashed, label="0"];
5->2 [style = bold, label=""];
0->25 [style = bold, label=""];
15->4 [style = solid, label="workerTask"];
22->12 [style = bold, label=""];
15->0 [style = bold, label=""];
25->26 [style = bold, label=""];
9->19 [style = bold, label=""];
28->24 [style = bold, label=""];
26->28 [style = bold, label=""];
10->1 [style = bold, label=""];
21->1 [style = solid, label="workerTask"];
18->14 [style = bold, label=""];
4->23 [style = bold, label=""];
13->18 [style = bold, label=""];
}
