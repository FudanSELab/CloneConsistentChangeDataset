digraph {
29 [style = filled, label = "m1.startEventProcessing()@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final MemberIdentifierFactory memberFactory = mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Membership m1 = MembershipBuilder.newMembershipBuilder().setAuthenticator(new GMSAuthenticator(config.getSecurityProps(),securityService,mockSystem.getSecurityLogWriter(),mockSystem.getInternalLogWriter())).setStatistics(stats1).setMessageListener(messageListener).setMembershipListener(listener).setConfig(new ServiceConfig(transport,config)).setSerializer(serializer).setLifecycleListener(lifeCycleListener).setMemberIDFactory(new MemberIdentifierFactory(){@Override public InternalDistributedMember create(MemberData memberInfo){return new InternalDistributedMember(memberInfo)}@Override public Comparator<InternalDistributedMember> getComparator(){return Comparator.naturalOrder()}}).setLocatorClient(new TcpClient(asTcpSocketCreator(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())).setSocketCreator(asTcpSocketCreator(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.CLUSTER))).create()@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final MessageListener messageListener = mock()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "final DMStats stats1 = mock()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final TcpSocketCreator socketCreator = asTcpSocketCreator(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.CLUSTER))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "when(memberFactory.create(isA())).thenAnswer(new Answer<MemberIdentifier>(){@Override public MemberIdentifier answer(InvocationOnMock invocation){return new InternalDistributedMember((MemberData)invocation.getArgument(0))}})@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "doAnswer(null).when(lifeCycleListener).started()@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "doAnswer(null).when(lifeCycleListener).started()@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final RemoteTransportConfig transport@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "LifecycleListener lifeCycleListener = mock()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "final Membership<InternalDistributedMember> m1 = MembershipBuilder.newMembershipBuilder(socketCreator,locatorClient,serializer,memberIdentifierFactory).setAuthenticator(authenticator).setStatistics(stats1).setMessageListener(messageListener).setMembershipListener(listener).setConfig(new ServiceConfig(transport,config)).setLifecycleListener(lifeCycleListener).create()@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "final SecurityService securityService = SecurityServiceFactory.create()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final MessageListener<InternalDistributedMember> messageListener = mock()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "final GMSAuthenticator authenticator = new GMSAuthenticator(config.getSecurityProps(),securityService,mockSystem.getSecurityLogWriter(),mockSystem.getInternalLogWriter())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "issueRequest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final MembershipListener<InternalDistributedMember> listener = mock()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "final boolean replyExpected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final MembershipListener listener = mock()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "LifecycleListener<InternalDistributedMember> lifeCycleListener = mock()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "createMembershipManager['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final MemberIdentifierFactory<InternalDistributedMember> memberIdentifierFactory = new MemberIdentifierFactory<InternalDistributedMember>(){@Override public InternalDistributedMember create(MemberData memberInfo){return new InternalDistributedMember(memberInfo)}@Override public Comparator<InternalDistributedMember> getComparator(){return Comparator.naturalOrder()}}@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "m1.startEventProcessing()@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final Object request@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final RemoteTransportConfig transport@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final TcpClient locatorClient = new TcpClient(asTcpSocketCreator(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "m1.start()@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final int locatorPort@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "DSFIDSerializer serializer = InternalDataSerializer.getDSFIDSerializer()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final String hostName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "m1.start()@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final InternalDistributedSystem mockSystem = mock()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "return Pair.of(m1,messageListener)@@@37@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "createMembershipManager['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "return new TcpClient(asTcpSocketCreator(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer()).requestToServer(InetAddress.getByName(hostName),locatorPort,request,10000,replyExpected)@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return Pair.of(m1,messageListener)@@@33@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final DistributionConfigImpl config@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13->10 [style = bold, label=""];
15->13 [style = bold, label=""];
17->26 [style = bold, label=""];
9->0 [style = bold, label=""];
18->23 [style = bold, label=""];
33->32 [style = dotted, label="true"];
26->3 [style = bold, label=""];
15->2 [style = dotted, label="true"];
33->34 [style = dotted, label="true"];
8->22 [style = solid, label="securityService"];
26->25 [style = solid, label="messageListener"];
3->11 [style = bold, label=""];
13->17 [style = dashed, label="0"];
29->25 [style = bold, label=""];
10->3 [style = bold, label=""];
30->25 [style = solid, label="m1"];
35->31 [style = solid, label="locatorPort"];
12->6 [style = bold, label=""];
24->22 [style = bold, label=""];
1->7 [style = bold, label=""];
27->4 [style = dotted, label="true"];
22->30 [style = bold, label=""];
15->4 [style = dotted, label="true"];
14->1 [style = bold, label=""];
19->24 [style = bold, label=""];
33->36 [style = dotted, label="true"];
5->16 [style = bold, label=""];
28->21 [style = bold, label=""];
10->26 [style = dashed, label="0"];
30->28 [style = bold, label=""];
9->18 [style = bold, label=""];
21->29 [style = bold, label=""];
33->35 [style = dotted, label="true"];
34->31 [style = solid, label="request"];
27->20 [style = dotted, label="true"];
23->19 [style = bold, label=""];
27->17 [style = bold, label=""];
33->31 [style = bold, label=""];
0->18 [style = dashed, label="0"];
11->8 [style = bold, label=""];
16->14 [style = bold, label=""];
10->7 [style = solid, label="messageListener"];
6->9 [style = bold, label=""];
5->7 [style = solid, label="m1"];
32->31 [style = solid, label="hostName"];
8->12 [style = bold, label=""];
36->31 [style = solid, label="replyExpected"];
0->5 [style = bold, label=""];
}
