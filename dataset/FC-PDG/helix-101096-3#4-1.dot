digraph {
9 [style = filled, label = "idealStateParams.put(\"Replicas\",\"3\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String(( p0 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String body = get(\"clusters/\" + clusterName + \"/resources/\" + resourceName + \"/health\",null,Response.Status.OK.getStatusCode(),true)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "partitionReplicaStates_2.put(\"p1\",Arrays.asList(p1_2))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "String(( p2_1 = {\"MASTER\",\"SLAVE\",\"ERROR\"}@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "String(( p0_2 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String body = get(\"clusters/\" + clusterName + \"/resources/\" + resourceName + \"/health\",Response.Status.OK.getStatusCode(),true)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "createDummyMapping(clusterName,resourceNameUnhealthy,idealStateParams,partitionReplicaStates_2)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "partitionReplicaStates_2.put(\"p0\",Arrays.asList(p0_2))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "idealStateParams.put(\"NumPartitions\",\"3\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(healthStatus.get(resourceNameHealthy),\"HEALTHY\")@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "idealStateParams.put(\"StateModelDefRef\",\"MasterSlave\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String(( p1_1 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "partitionReplicaStates_1.put(\"p0\",Arrays.asList(p0_1))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Map<String,String> healthStatus = OBJECT_MAPPER.readValue(node,new TypeReference<Map<String,String>>(){})@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "createDummyMapping(clusterName,resourceName,idealStateParams,partitionReplicaStates)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "JsonNode node = OBJECT_MAPPER.readTree(body)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String resourceName = clusterName + \"_db_0\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "partitionReplicaStates.put(\"p0\",Arrays.asList(p0))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "idealStateParams.put(\"MinActiveReplicas\",\"2\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(healthStatus.get(resourceNamePartiallyHealthy),\"PARTIAL_HEALTHY\")@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String(( p1 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testPartitionHealth['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Map<String,String> idealStateParams = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Map<String,List<String>> partitionReplicaStates_1 = new LinkedHashMap<>()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "String resourceNameHealthy = clusterName + \"_db_0\"@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "partitionReplicaStates.put(\"p2\",Arrays.asList(p2))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "String body = get(\"clusters/\" + clusterName + \"/resources/health\",Response.Status.OK.getStatusCode(),true)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "String(( p0_1 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Assert.assertEquals(healthStatus.get(resourceNameUnhealthy),\"UNHEALTHY\")@@@63@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "createDummyMapping(clusterName,resourceNamePartiallyHealthy,idealStateParams,partitionReplicaStates_1)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Map<String,String> healthStatus = OBJECT_MAPPER.readValue(node,new TypeReference<Map<String,String>>(){})@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testPartitionHealth['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "partitionReplicaStates_2.put(\"p2\",Arrays.asList(p2_2))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<String,List<String>> partitionReplicaStates = new LinkedHashMap<>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String clusterName = \"TestCluster_1\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "partitionReplicaStates.put(\"p1\",Arrays.asList(p1))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "System.out.println(\"Start test :\" + TestHelper.getTestMethodName())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String(( p2_2 = {\"ERROR\",\"SLAVE\",\"ERROR\"}@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "createDummyMapping(clusterName,resourceNameHealthy,idealStateParams,partitionReplicaStates)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "testResourceHealth['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertEquals(healthStatus.get(\"p0\"),\"HEALTHY\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Map<String,List<String>> partitionReplicaStates_2 = new LinkedHashMap<>()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "String(( p1_2 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "String resourceNameUnhealthy = clusterName + \"_db_2\"@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(healthStatus.get(\"p2\"),\"UNHEALTHY\")@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "JsonNode node = OBJECT_MAPPER.readTree(body)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "partitionReplicaStates_1.put(\"p2\",Arrays.asList(p2_1))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String(( p2 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "idealStateParams.put(\"MaxPartitionsPerInstance\",\"3\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "String resourceNamePartiallyHealthy = clusterName + \"_db_1\"@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "partitionReplicaStates_1.put(\"p1\",Arrays.asList(p1_1))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(healthStatus.get(\"p1\"),\"PARTIAL_HEALTHY\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
6->22 [style = bold, label=""];
32->31 [style = solid, label="p1_2"];
38->51 [style = bold, label=""];
20->0 [style = bold, label=""];
14->4 [style = solid, label="clusterName"];
2->4 [style = solid, label="partitionReplicaStates"];
36->42 [style = solid, label="resourceNameUnhealthy"];
24->22 [style = solid, label="body"];
21->2 [style = bold, label=""];
37->47 [style = solid, label="node"];
0->14 [style = bold, label=""];
12->10 [style = bold, label=""];
14->24 [style = solid, label="clusterName"];
35->37 [style = bold, label=""];
9->21 [style = bold, label=""];
29->43 [style = bold, label=""];
2->29 [style = solid, label="partitionReplicaStates"];
31->40 [style = bold, label=""];
23->12 [style = bold, label=""];
11->24 [style = solid, label="resourceName"];
46->50 [style = bold, label=""];
49->30 [style = solid, label="resourceNameHealthy"];
14->11 [style = bold, label=""];
15->13 [style = bold, label=""];
43->27 [style = solid, label="resourceNamePartiallyHealthy"];
33->38 [style = solid, label="p1_1"];
39->45 [style = bold, label=""];
46->27 [style = solid, label="partitionReplicaStates_1"];
16->19 [style = bold, label=""];
43->46 [style = bold, label=""];
7->16 [style = solid, label="p0"];
5->1 [style = bold, label=""];
15->29 [style = solid, label="idealStateParams"];
3->23 [style = bold, label=""];
52->0 [style = bold, label=""];
11->6 [style = solid, label="resourceName"];
15->42 [style = solid, label="idealStateParams"];
44->32 [style = bold, label=""];
15->4 [style = solid, label="idealStateParams"];
13->5 [style = bold, label=""];
51->27 [style = bold, label=""];
41->38 [style = bold, label=""];
14->15 [style = bold, label=""];
26->42 [style = solid, label="partitionReplicaStates_2"];
8->17 [style = solid, label="p2"];
14->35 [style = solid, label="clusterName"];
10->45 [style = dashed, label="0"];
12->39 [style = dashed, label="0"];
37->47 [style = bold, label=""];
25->0 [style = bold, label=""];
4->24 [style = bold, label=""];
34->51 [style = solid, label="p2_1"];
14->42 [style = solid, label="clusterName"];
43->39 [style = solid, label="resourceNamePartiallyHealthy"];
36->45 [style = solid, label="resourceNameUnhealthy"];
19->17 [style = bold, label=""];
1->9 [style = bold, label=""];
48->31 [style = bold, label=""];
14->49 [style = solid, label="clusterName"];
15->27 [style = solid, label="idealStateParams"];
26->44 [style = bold, label=""];
14->29 [style = solid, label="clusterName"];
7->18 [style = bold, label=""];
14->43 [style = solid, label="clusterName"];
49->2 [style = bold, label=""];
21->49 [style = bold, label=""];
18->8 [style = bold, label=""];
50->33 [style = bold, label=""];
22->3 [style = solid, label="node"];
14->6 [style = solid, label="clusterName"];
17->4 [style = bold, label=""];
6->22 [style = solid, label="body"];
14->36 [style = solid, label="clusterName"];
11->4 [style = solid, label="resourceName"];
28->40 [style = solid, label="p2_2"];
27->36 [style = bold, label=""];
4->6 [style = bold, label=""];
50->41 [style = solid, label="p0_1"];
34->41 [style = bold, label=""];
36->26 [style = bold, label=""];
14->27 [style = solid, label="clusterName"];
24->22 [style = bold, label=""];
11->15 [style = bold, label=""];
35->37 [style = solid, label="body"];
47->30 [style = bold, label=""];
42->35 [style = bold, label=""];
22->3 [style = bold, label=""];
49->29 [style = solid, label="resourceNameHealthy"];
18->19 [style = solid, label="p1"];
6->24 [style = dashed, label="0"];
23->30 [style = dashed, label="0"];
30->39 [style = bold, label=""];
28->48 [style = bold, label=""];
44->48 [style = solid, label="p0_2"];
2->7 [style = bold, label=""];
14->11 [style = solid, label="clusterName"];
4->29 [style = dashed, label="0"];
17->29 [style = bold, label=""];
33->34 [style = bold, label=""];
32->28 [style = bold, label=""];
40->42 [style = bold, label=""];
}
