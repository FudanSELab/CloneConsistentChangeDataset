digraph {
27 [style = filled, label = "assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT),\"waiting for server down\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "main.start()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MetricsProviderCapturingLifecycle.reset()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ZooKeeper zk = new ZooKeeper(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT,this)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.stopCalled.get(),\"metrics provider lifecycle error\")@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertTrue(clientConnected.await(CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS),\"Failed to establish zkclient connection!\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "testMetricsProviderLifecycle['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertEquals(new String(zk.getData(\"/foo\",null,null)),\"foobar\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(\"waiting for server being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MainThread main = new MainThread(CLIENT_PORT,true,configs)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.configureCalled.get())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "clientConnected = new CountDownLatch(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testFaultyMetricsProviderOnStop['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "main.shutdown()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(\"Failed to establish zkclient connection!\",clientConnected.await(CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.startCalled.get())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT),\"waiting for server being up\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "final String configs = \"metricsProvider.className=\" + .getName() + \"\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.getRootContextCalled.get())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "MainThread main = new MainThread(CLIENT_PORT,true,configs)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "main.join()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "zk.close()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "MetricsProviderWithErrorInStop.stopCalled.set(false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.getRootContextCalled.get(),\"metrics provider lifecycle error\")@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertTrue(MetricsProviderWithErrorInStop.stopCalled.get())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ClientBase.setupTestEnv()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(\"metrics provider lifecycle error\",BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.stopCalled.get())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "zk.create(\"/foo\",\"foobar\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final String configs = \"metricsProvider.className=\" + .getName() + \"\" + \"metricsProvider.httpPort=1234\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.startCalled.get(),\"metrics provider lifecycle error\")@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertTrue(BaseTestMetricsProvider.MetricsProviderCapturingLifecycle.configureCalled.get(),\"metrics provider lifecycle error\")@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testMetricsProviderLifecycle['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "main.deleteDirs()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final int CLIENT_PORT = PortAssignment.unique()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
22->26 [style = bold, label=""];
20->19 [style = solid, label="CLIENT_PORT"];
8->10 [style = bold, label=""];
18->3 [style = bold, label=""];
29->8 [style = bold, label=""];
19->27 [style = dashed, label="0"];
10->20 [style = bold, label=""];
2->19 [style = bold, label=""];
20->27 [style = solid, label="CLIENT_PORT"];
4->21 [style = solid, label="configs"];
7->12 [style = bold, label=""];
14->25 [style = dashed, label="0"];
16->6 [style = bold, label=""];
27->28 [style = bold, label=""];
20->5 [style = solid, label="CLIENT_PORT"];
20->1 [style = solid, label="CLIENT_PORT"];
20->14 [style = solid, label="CLIENT_PORT"];
9->28 [style = dashed, label="0"];
11->26 [style = dashed, label="0"];
3->11 [style = bold, label=""];
4->21 [style = bold, label=""];
20->12 [style = solid, label="CLIENT_PORT"];
30->32 [style = bold, label=""];
3->22 [style = dashed, label="0"];
5->14 [style = bold, label=""];
34->8 [style = bold, label=""];
12->1 [style = bold, label=""];
31->7 [style = bold, label=""];
5->25 [style = bold, label=""];
20->33 [style = bold, label=""];
20->4 [style = bold, label=""];
20->7 [style = solid, label="CLIENT_PORT"];
15->17 [style = bold, label=""];
7->24 [style = bold, label=""];
23->22 [style = bold, label=""];
9->18 [style = bold, label=""];
8->20 [style = bold, label=""];
19->30 [style = dashed, label="0"];
19->9 [style = bold, label=""];
28->23 [style = bold, label=""];
20->24 [style = solid, label="CLIENT_PORT"];
18->23 [style = dashed, label="0"];
6->13 [style = bold, label=""];
12->24 [style = dashed, label="0"];
0->8 [style = bold, label=""];
20->21 [style = solid, label="CLIENT_PORT"];
31->7 [style = solid, label="configs"];
25->15 [style = bold, label=""];
2->27 [style = bold, label=""];
21->7 [style = bold, label=""];
33->31 [style = bold, label=""];
14->15 [style = bold, label=""];
24->1 [style = bold, label=""];
20->30 [style = solid, label="CLIENT_PORT"];
17->16 [style = bold, label=""];
13->2 [style = bold, label=""];
19->30 [style = bold, label=""];
}
