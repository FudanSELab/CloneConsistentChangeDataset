digraph {
1 [style = filled, label = "TestObserverEx<Integer> to = new TestObserverEx<Integer>(QueueFuseable.ASYNC)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "fusionRejected['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>().setInitialFusionMode(QueueFuseable.ASYNC)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Flowable.fromIterable(Arrays.asList(1,2,3)).subscribe(ts)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "fusionRejected['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "ts.assertFusionMode(QueueFuseable.NONE).assertResult(1,2,3)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "fusionRejected['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestObserverEx<Integer> to = new TestObserverEx<>(QueueFuseable.ASYNC)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Observable.fromIterable(Arrays.asList(1,2,3)).subscribe(to)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "to.assertFusionMode(QueueFuseable.NONE).assertResult(1,2,3)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
7->9 [style = bold, label=""];
6->8 [style = bold, label=""];
1->4 [style = dashed, label="0"];
4->3 [style = bold, label=""];
1->8 [style = dashed, label="0"];
4->3 [style = solid, label="to"];
5->4 [style = bold, label=""];
0->9 [style = dashed, label="0"];
1->3 [style = solid, label="to"];
8->7 [style = solid, label="ts"];
3->7 [style = dashed, label="0"];
2->1 [style = bold, label=""];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
}
