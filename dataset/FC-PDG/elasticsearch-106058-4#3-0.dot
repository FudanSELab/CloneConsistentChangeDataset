digraph {
10 [style = filled, label = "assertThat(fsHealthService.getHealth().getInfo(),is(\"health check failed on (\" + disruptedPath + \"(\"))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testFailsHealthOnSinglePathWriteFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "FileSystemIOExceptionProvider disruptWritesFileSystemProvider = new FileSystemIOExceptionProvider(fileSystem)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testFailsHealthOnSinglePathFsyncFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "disruptFsyncFileSystemProvider.restrictPathPrefix(disruptedPath)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String disruptedPath = randomFrom(paths).toString()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(1,disruptWritesFileSystemProvider.getInjectedPathCount())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "{disruptFsyncFileSystemProvider.injectIOException.set(false)PathUtilsForTesting.teardown()ThreadPool.terminate(testThreadPool,500,TimeUnit.MILLISECONDS)}@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "fsHealthService = new FsHealthService(settings,clusterSettings,testThreadPool,env)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "disruptWritesFileSystemProvider.restrictPathPrefix(disruptedPath)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Path(( paths = env.nodeDataPaths()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "new FsHealthMonitor()fsHealthService.run()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "disruptWritesFileSystemProvider.injectIOException.set(true)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "TestThreadPool testThreadPool = new TestThreadPool(getClass().getName(),settings)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "fileSystem = disruptFsyncFileSystemProvider.getFileSystem(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final ClusterSettings clusterSettings = new ClusterSettings(Settings.EMPTY,ClusterSettings.BUILT_IN_CLUSTER_SETTINGS)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(UNHEALTHY,fsHealthService.getHealth().getStatus())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "disruptWritesFileSystemProvider.injectIOException.set(true)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "FileSystemFsyncIOExceptionProvider disruptFsyncFileSystemProvider = new FileSystemFsyncIOExceptionProvider(fileSystem)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "disruptFsyncFileSystemProvider.injectIOException.set(true)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "FsHealthService fsHealthService = new FsHealthService(settings,clusterSettings,testThreadPool,env)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "new FsHealthMonitor()fsHealthService.run()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(1,disruptFsyncFileSystemProvider.getInjectedPathCount())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "fileSystem = disruptWritesFileSystemProvider.getFileSystem(null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"health check passed\",fsHealthService.getHealth().getInfo())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(HEALTHY,fsHealthService.getHealth().getStatus())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testFailsHealthOnSinglePathWriteFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "final Settings settings = Settings.EMPTY@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "PathUtilsForTesting.installMock(fileSystem)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "FileSystem fileSystem = PathUtils.getDefaultFileSystem()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->0 [style = bold, label=""];
4->10 [style = bold, label=""];
0->9 [style = bold, label=""];
10->20 [style = bold, label=""];
14->25 [style = bold, label=""];
10->28 [style = bold, label=""];
29->2 [style = solid, label="fileSystem"];
8->23 [style = bold, label=""];
16->11 [style = solid, label="settings"];
27->14 [style = bold, label=""];
22->19 [style = bold, label=""];
9->4 [style = bold, label=""];
16->12 [style = solid, label="settings"];
14->10 [style = solid, label="disruptedPath"];
12->17 [style = bold, label=""];
1->27 [style = bold, label=""];
28->7 [style = bold, label=""];
18->12 [style = bold, label=""];
11->0 [style = solid, label="testThreadPool"];
20->28 [style = dashed, label="0"];
24->29 [style = bold, label=""];
5->29 [style = dashed, label="0"];
26->19 [style = bold, label=""];
19->6 [style = bold, label=""];
23->0 [style = bold, label=""];
1->13 [style = bold, label=""];
11->18 [style = bold, label=""];
21->0 [style = solid, label="clusterSettings"];
14->8 [style = solid, label="disruptedPath"];
19->6 [style = solid, label="fileSystem"];
19->24 [style = bold, label=""];
8->0 [style = bold, label=""];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
29->2 [style = bold, label=""];
13->27 [style = dashed, label="0"];
3->19 [style = bold, label=""];
16->0 [style = solid, label="settings"];
19->24 [style = solid, label="fileSystem"];
21->11 [style = bold, label=""];
6->24 [style = dashed, label="0"];
16->21 [style = bold, label=""];
17->15 [style = bold, label=""];
11->7 [style = solid, label="testThreadPool"];
11->12 [style = solid, label="testThreadPool"];
8->25 [style = dashed, label="0"];
1->14 [style = bold, label=""];
14->8 [style = bold, label=""];
20->7 [style = bold, label=""];
5->2 [style = solid, label="fileSystem"];
13->14 [style = bold, label=""];
14->25 [style = solid, label="disruptedPath"];
21->12 [style = solid, label="clusterSettings"];
15->1 [style = bold, label=""];
2->16 [style = bold, label=""];
}
