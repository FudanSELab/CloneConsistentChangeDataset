digraph {
34 [style = filled, label = "d2.setIntervalPositionFactor(0.123)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "MatrixSeries s1 = new MatrixSeries(\"Series\",2,3)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "IntervalXYDelegate d1 = new IntervalXYDelegate(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "XYSeriesCollection c1 = new XYSeriesCollection()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MatrixSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertTrue(d2.equals(d1))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(d1.equals(d2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "c2.addSeries(s2)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "d2.setFixedIntervalWidth(1.23)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertFalse(d1.equals(d2))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(d1.equals(d2))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "d1.setIntervalPositionFactor(0.123)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "XYSeries s1 = new XYSeries(\"Series\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "IntervalXYDelegate d2 = new IntervalXYDelegate(c2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertFalse(d1.equals(d2))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "MatrixSeriesCollection c2 = (MatrixSeriesCollection)c1.clone()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertFalse(d1.equals(d2))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(d1.equals(d2))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "s2.add(1.2,3.4)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "XYSeries s2 = new XYSeries(\"Series\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertTrue(d1.equals(d2))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "s1.add(1.2,3.4)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "d2.setAutoWidth(false)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "XYSeriesCollection c2 = new XYSeriesCollection()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "d1.setAutoWidth(false)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MatrixSeriesCollection c1 = new MatrixSeriesCollection()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "s1.update(0,0,1.1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "d1.setFixedIntervalWidth(1.23)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
6->3 [style = bold, label=""];
17->25 [style = bold, label=""];
33->35 [style = bold, label=""];
23->20 [style = bold, label=""];
21->30 [style = solid, label="d2"];
5->9 [style = bold, label=""];
22->29 [style = solid, label="s2"];
0->6 [style = bold, label=""];
0->19 [style = bold, label=""];
24->21 [style = solid, label="c2"];
1->3 [style = solid, label="c1"];
27->28 [style = bold, label=""];
18->33 [style = bold, label=""];
6->11 [style = dashed, label="0"];
0->11 [style = bold, label=""];
31->29 [style = bold, label=""];
36->32 [style = bold, label=""];
11->3 [style = solid, label="c2"];
19->17 [style = solid, label="d1"];
30->34 [style = bold, label=""];
21->23 [style = solid, label="d2"];
1->0 [style = bold, label=""];
16->17 [style = bold, label=""];
25->14 [style = bold, label=""];
4->26 [style = dashed, label="0"];
1->28 [style = dashed, label="0"];
6->3 [style = solid, label="c2"];
7->8 [style = bold, label=""];
2->4 [style = bold, label=""];
29->21 [style = bold, label=""];
4->0 [style = solid, label="s1"];
15->26 [style = bold, label=""];
28->0 [style = bold, label=""];
26->27 [style = bold, label=""];
6->9 [style = solid, label="c2"];
8->5 [style = bold, label=""];
12->4 [style = bold, label=""];
3->7 [style = bold, label=""];
11->3 [style = bold, label=""];
24->31 [style = bold, label=""];
6->8 [style = solid, label="c2"];
26->0 [style = solid, label="s1"];
11->9 [style = solid, label="c2"];
21->36 [style = solid, label="d2"];
11->8 [style = solid, label="c2"];
28->19 [style = solid, label="c1"];
21->33 [style = solid, label="d2"];
21->16 [style = solid, label="d2"];
21->16 [style = bold, label=""];
14->18 [style = bold, label=""];
34->23 [style = bold, label=""];
1->11 [style = solid, label="c1"];
21->14 [style = solid, label="d2"];
21->13 [style = solid, label="d2"];
22->24 [style = bold, label=""];
32->13 [style = bold, label=""];
10->1 [style = bold, label=""];
35->30 [style = bold, label=""];
19->22 [style = bold, label=""];
20->36 [style = bold, label=""];
}
