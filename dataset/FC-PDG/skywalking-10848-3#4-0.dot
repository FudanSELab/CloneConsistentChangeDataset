digraph {
4 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.termQuery(ServiceInventory.NODE_TYPE,NodeType.Browser.value()))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "sourceBuilder.query(boolQueryBuilder)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "boolQueryBuilder.must().add(timeRangeQueryBuild(startTimestamp,endTimestamp))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "database.setName((String)sourceAsMap.get(ServiceInventory.NAME))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "database.setId(((Number)sourceAsMap.get(ServiceInventory.SEQUENCE)).intValue())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "!Strings.isNullOrEmpty(propertiesString)@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String propertiesString = (String)sourceAsMap.get(ServiceInstanceInventory.PROPERTIES)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "long endTimestamp@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "databases.add(database)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SearchResponse response = getClient().search(ServiceInventory.INDEX_NAME,sourceBuilder)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "sourceBuilder.query(boolQueryBuilder)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "sourceBuilder.size(queryMaxSize)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<Database> databases = new ArrayList<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long startTimestamp@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "getAllBrowserServices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.termQuery(ServiceTraffic.NODE_TYPE,NodeType.Browser.value()))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "database.setType(properties.get(ServiceInventory.PropertyUtil.DATABASE).getAsString())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Database database = new Database()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "getAllDatabases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "return databases@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "database.setType(\"UNKNOWN\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "getAllBrowserServices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SearchResponse response = getClient().search(ServiceInventory.INDEX_NAME,sourceBuilder)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "return buildServices(response)@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Map<String,Object> sourceAsMap = searchHit.getSourceAsMap()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "JsonObject properties = GSON.fromJson(propertiesString,)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.termQuery(ServiceInventory.IS_ADDRESS,BooleanUtils.FALSE))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "long endTimestamp@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "sourceBuilder.size(queryMaxSize)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "boolQueryBuilder.must().add(QueryBuilders.termQuery(ServiceInventory.NODE_TYPE,NodeType.Database.value()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "properties.has(ServiceInventory.PropertyUtil.DATABASE)@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
30->32 [style = solid, label="database"];
6->3 [style = bold, label=""];
5->24 [style = solid, label="databases"];
2->19 [style = bold, label=""];
20->25 [style = dotted, label="true"];
8->1 [style = solid, label="sourceBuilder"];
6->1 [style = dashed, label="0"];
18->23 [style = bold, label=""];
22->25 [style = solid, label="propertiesString"];
11->16 [style = dashed, label="0"];
2->1 [style = solid, label="boolQueryBuilder"];
10->11 [style = solid, label="startTimestamp"];
30->27 [style = bold, label=""];
12->15 [style = bold, label=""];
25->18 [style = bold, label=""];
23->32 [style = bold, label=""];
20->32 [style = bold, label=""];
18->28 [style = dotted, label="false"];
17->30 [style = bold, label=""];
2->12 [style = solid, label="boolQueryBuilder"];
8->6 [style = solid, label="sourceBuilder"];
18->23 [style = dotted, label="true"];
9->8 [style = bold, label=""];
5->17 [style = bold, label=""];
20->25 [style = bold, label=""];
13->10 [style = dotted, label="true"];
18->28 [style = bold, label=""];
28->32 [style = bold, label=""];
26->21 [style = bold, label=""];
11->0 [style = bold, label=""];
5->6 [style = bold, label=""];
8->2 [style = bold, label=""];
22->20 [style = bold, label=""];
0->4 [style = bold, label=""];
11->19 [style = dashed, label="0"];
19->26 [style = bold, label=""];
21->1 [style = bold, label=""];
20->18 [style = dotted, label="true"];
7->11 [style = solid, label="endTimestamp"];
2->26 [style = solid, label="boolQueryBuilder"];
4->1 [style = bold, label=""];
29->22 [style = bold, label=""];
27->29 [style = bold, label=""];
13->8 [style = bold, label=""];
9->7 [style = dotted, label="true"];
13->14 [style = dotted, label="true"];
9->10 [style = dotted, label="true"];
1->5 [style = solid, label="response"];
32->24 [style = bold, label=""];
16->12 [style = bold, label=""];
32->17 [style = bold, label=""];
2->11 [style = bold, label=""];
31->8 [style = bold, label=""];
6->3 [style = solid, label="response"];
15->1 [style = bold, label=""];
2->16 [style = bold, label=""];
}
