digraph {
3 [style = filled, label = "expected.addAll(file3SecondSnapshotRecords)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Iterable<Record> results = IcebergGenerics.read(sharedTable).asOfTime(sharedTable.history().get(2).timestampMillis()).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testFullScan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Iterable<Record> results = IcebergGenerics.read(sharedTable).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testAsOfTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Set<Record> expected = Sets.newHashSet()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Record set should match\",Sets.newHashSet(expected),records)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expected.addAll(file2SecondSnapshotRecords)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "expected.addAll(file1SecondSnapshotRecords)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "expected.addAll(file2ThirdSnapshotRecords)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "expected.addAll(file3Records)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Set<Record> records = Sets.newHashSet(results)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testAsOfTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "expected.addAll(file2Records)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(\"Random record set should match\",Sets.newHashSet(expected),records)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertNotNull(Iterables.get(records,0).getField(\"id\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expected.addAll(file3ThirdSnapshotRecords)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(\"Should produce correct number of records\",expected.size(),records.size())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expected.addAll(file1ThirdSnapshotRecords)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "overwriteExistingData()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expected.addAll(file1Records)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertNotNull(Iterables.get(records,0).getField(\"data\"))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
19->6 [style = solid, label="records"];
3->1 [style = bold, label=""];
3->18 [style = dashed, label="0"];
5->2 [style = solid, label="expected"];
12->15 [style = bold, label=""];
18->19 [style = bold, label=""];
1->2 [style = solid, label="records"];
4->1 [style = solid, label="results"];
11->17 [style = dashed, label="0"];
10->13 [style = dashed, label="0"];
11->12 [style = dashed, label="0"];
9->8 [style = bold, label=""];
5->17 [style = bold, label=""];
16->6 [style = solid, label="expected"];
0->7 [style = bold, label=""];
6->2 [style = bold, label=""];
19->1 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
13->12 [style = bold, label=""];
10->11 [style = bold, label=""];
20->16 [style = bold, label=""];
21->20 [style = bold, label=""];
20->19 [style = solid, label="results"];
11->3 [style = bold, label=""];
5->13 [style = bold, label=""];
2->6 [style = dashed, label="0"];
16->5 [style = bold, label=""];
3->15 [style = dashed, label="0"];
14->8 [style = bold, label=""];
10->5 [style = dashed, label="0"];
8->4 [style = bold, label=""];
4->5 [style = bold, label=""];
17->18 [style = bold, label=""];
15->1 [style = bold, label=""];
}
