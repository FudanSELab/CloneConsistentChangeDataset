digraph {
25 [style = filled, label = "Assertions.assertEquals(1,user.getGroups().size())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assertions.assertEquals(3,user.getRoles().size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "shouldGetAllUser['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Assertions.assertEquals(2,user.getGroups().size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "usersCursor = mapper.getAllUsers()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "usersCursor.close()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assertions.assertEquals(\"User1\",user.getName())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Cursor<User> usersCursor@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testCursorMultipleCloseCall['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "shouldGetAllUser['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assertions.assertFalse(iterator.hasNext())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assertions.assertEquals(3,user.getRoles().size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assertions.assertFalse(iterator.hasNext())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assertions.assertEquals(1,user.getRoles().size())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Iterator<User> iterator = usersCursor.iterator()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "User user = iterator.next()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Cursor<User> usersCursor = mapper.getAllUsers()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "user = iterator.next()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assertions.assertTrue(usersCursor.isConsumed())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assertions.assertEquals(2,user.getGroups().size())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "usersCursor.close()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "user = iterator.next()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assertions.assertEquals(2,user.getRoles().size())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "user = iterator.next()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assertions.assertEquals(3,user.getGroups().size())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->25 [style = bold, label=""];
15->13 [style = bold, label=""];
6->26 [style = bold, label=""];
13->24 [style = bold, label=""];
35->29 [style = bold, label=""];
17->1 [style = bold, label=""];
27->12 [style = bold, label=""];
26->17 [style = bold, label=""];
28->34 [style = bold, label=""];
7->12 [style = bold, label=""];
0->19 [style = dashed, label="0"];
23->31 [style = dashed, label="0"];
29->31 [style = bold, label=""];
4->19 [style = bold, label=""];
12->15 [style = bold, label=""];
1->3 [style = bold, label=""];
5->14 [style = bold, label=""];
22->34 [style = dashed, label="0"];
11->9 [style = bold, label=""];
13->15 [style = dashed, label="0"];
19->0 [style = bold, label=""];
20->4 [style = bold, label=""];
8->22 [style = bold, label=""];
3->18 [style = bold, label=""];
18->10 [style = bold, label=""];
24->21 [style = bold, label=""];
25->11 [style = bold, label=""];
10->23 [style = bold, label=""];
0->8 [style = bold, label=""];
33->30 [style = bold, label=""];
21->16 [style = bold, label=""];
9->5 [style = bold, label=""];
23->2 [style = bold, label=""];
19->28 [style = bold, label=""];
34->35 [style = bold, label=""];
15->32 [style = bold, label=""];
16->20 [style = bold, label=""];
32->24 [style = bold, label=""];
14->6 [style = bold, label=""];
30->15 [style = bold, label=""];
}
