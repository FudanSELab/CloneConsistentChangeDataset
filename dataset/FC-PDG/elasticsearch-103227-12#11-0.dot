digraph {
17 [style = filled, label = "terms.add(new BytesRef(\"bar\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "IllegalArgumentException e = expectThrows(,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "MappedFieldType unsearchable = new CollationFieldType(\"field\",false,false,true,collator,Collections.emptyMap())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "terms.add(new BytesRef(\"foo\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testTermsQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "MappedFieldType ft = new CollationFieldType(\"field\",collator)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "IllegalArgumentException e = expectThrows(,null)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"Cannot search on field (field( since it is not indexed.\",e.getMessage())@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "MappedFieldType unsearchable = new TextFieldType(\"field\",false,false,Collections.emptyMap())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testTermsQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(new TermInSetQuery(\"field\",terms),ft.termsQuery(Arrays.asList(\"foo\",\"bar\"),null))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "MappedFieldType unsearchable = new CollationFieldType(\"field\",false,collator)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "terms.add(new BytesRef(fooKey.bytes,0,fooKey.size))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"Cannot search on field (field( since it is not indexed.\",e.getMessage())@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RawCollationKey barKey = collator.getRawCollationKey(\"bar\",null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "RawCollationKey fooKey = collator.getRawCollationKey(\"foo\",null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testTermsQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "MappedFieldType ft = createFieldType()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Collator collator = DEFAULT_COLLATOR@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<BytesRef> terms = new ArrayList<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "terms.add(new BytesRef(barKey.bytes,0,barKey.size))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->15 [style = dashed, label="0"];
14->3 [style = bold, label=""];
9->20 [style = dashed, label="0"];
5->8 [style = bold, label=""];
1->4 [style = bold, label=""];
16->18 [style = bold, label=""];
9->0 [style = bold, label=""];
17->6 [style = bold, label=""];
4->6 [style = bold, label=""];
7->17 [style = dashed, label="0"];
0->2 [style = bold, label=""];
18->19 [style = bold, label=""];
20->14 [style = bold, label=""];
3->12 [style = bold, label=""];
12->0 [style = bold, label=""];
10->7 [style = bold, label=""];
7->3 [style = bold, label=""];
3->9 [style = bold, label=""];
8->1 [style = bold, label=""];
6->20 [style = bold, label=""];
11->5 [style = bold, label=""];
15->17 [style = bold, label=""];
5->9 [style = solid, label="collator"];
6->10 [style = bold, label=""];
13->5 [style = bold, label=""];
19->6 [style = solid, label="terms"];
9->12 [style = dashed, label="0"];
19->15 [style = bold, label=""];
5->12 [style = solid, label="collator"];
5->8 [style = solid, label="collator"];
6->3 [style = solid, label="terms"];
}
