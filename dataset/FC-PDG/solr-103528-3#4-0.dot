digraph {
37 [style = filled, label = "assertEquals(CommonParams.OK,response.getResponse().get(CommonParams.STATUS))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertEquals(CommonParams.OK,req.process(httpSolrClient).getResponse().get(CommonParams.STATUS))@@@49@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JettySolrRunner newJetty = cluster.startJettySolrRunner()@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "SolrResponse response = req.process(httpSolrClient)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertTrue(\"Should have seen an exception containing the an error\",thrown.getMessage().contains(\"Error processing the request. CoreContainer is either not initialized or shutting down.\"))@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(0,collectionAdminResponse.getStatus())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(CommonParams.OK,response.getResponse().get(CommonParams.STATUS))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "BaseHttpSolrClient.RemoteSolrException e = expectThrows(,null)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "{newJetty.stop()}@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertEquals(\"Exception code should be 404\",404,thrown.code())@@@42@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(\"Should have seen an exception containing the an error\",thrown.getMessage().contains(\"Error processing the request. CoreContainer is either not initialized or shutting down.\"))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "JettySolrRunner newJetty = cluster.startJettySolrRunner()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "newJetty.getCoreContainer().getZkController().getZkClient().close()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "newJetty.getCoreContainer().shutdown()@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(SolrException.ErrorCode.SERVICE_UNAVAILABLE.code,e.code())@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "{newJetty.stop()}@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(CommonParams.OK,req.process(httpSolrClient).getResponse().get(CommonParams.STATUS))@@@51@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "SolrRequest req = new GenericSolrRequest(SolrRequest.METHOD.GET,HEALTH_CHECK_HANDLER_PATH,new ModifiableSolrParams())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(\"Exception code should be 404\",404,thrown.code())@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertTrue(e.getMessage(),e.getMessage().contains(\"Host Unavailable\"))@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testHealthCheckHandler['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(SolrException.ErrorCode.SERVICE_UNAVAILABLE.code,e.code())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testHealthCheckHandler['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "CollectionAdminResponse collectionAdminResponse = CollectionAdminRequest.createCollection(\"test\",\"_default\",1,1).withProperty(\"solr.directoryFactory\",\"solr.StandardDirectoryFactory\").process(httpSolrClient)@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "newJetty = cluster.startJettySolrRunner()@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(CommonParams.OK,res.getResponse().get(CommonParams.STATUS))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "CollectionAdminResponse collectionAdminResponse = CollectionAdminRequest.createCollection(\"test\",\"_default\",1,1).withProperty(\"solr.directoryFactory\",\"solr.StandardDirectoryFactory\").process(httpSolrClient)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "@SuppressWarnings({\"rawtypes\"}) SolrRequest req = new GenericSolrRequest(SolrRequest.METHOD.GET,HEALTH_CHECK_HANDLER_PATH,new ModifiableSolrParams())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "SolrException thrown = expectThrows(,null)@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "SolrResponse response = req.process(httpSolrClient)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "assertEquals(SolrException.ErrorCode.SERVICE_UNAVAILABLE.code,e.code())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "{cluster.deleteAllCollections()cluster.deleteAllConfigSets()}@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals(CommonParams.OK,req.process(cluster.getSolrClient()).getResponse().get(CommonParams.STATUS))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "BaseHttpSolrClient.RemoteSolrException e = expectThrows(,null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertTrue(e.getMessage(),e.getMessage().contains(\"Host Unavailable\"))@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "assertEquals(CommonParams.OK,new V2Request.Builder(\"/node/health\").build().process(httpSolrClient).getResponse().get(CommonParams.STATUS))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "V2Response res = new V2Request.Builder(\"/node/health\").build().process(cluster.getSolrClient())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(0,res.getStatus())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(CommonParams.OK,req.process(cluster.getSolrClient()).getResponse().get(CommonParams.STATUS))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(CommonParams.OK,response.getResponse().get(CommonParams.STATUS))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "newJetty.getCoreContainer().shutdown()@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertEquals(0,collectionAdminResponse.getStatus())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(CommonParams.OK,req.process(httpSolrClient).getResponse().get(CommonParams.STATUS))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "{newJetty.stop()}@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "JettySolrRunner newJetty = cluster.startJettySolrRunner()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testHealthCheckV2Api['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertTrue(e.getMessage(),e.getMessage().contains(\"Host Unavailable\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(CommonParams.OK,req.process(httpSolrClient).getResponse().get(CommonParams.STATUS))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "newJetty.getCoreContainer().getZkController().getZkClient().close()@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "newJetty = cluster.startJettySolrRunner()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "newJetty.getCoreContainer().getZkController().getZkClient().close()@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19->3 [style = bold, label=""];
7->28 [style = bold, label=""];
39->14 [style = bold, label=""];
32->13 [style = bold, label=""];
48->49 [style = bold, label=""];
13->4 [style = bold, label=""];
8->5 [style = bold, label=""];
27->25 [style = bold, label=""];
43->45 [style = bold, label=""];
4->16 [style = bold, label=""];
24->20 [style = bold, label=""];
40->43 [style = bold, label=""];
1->12 [style = bold, label=""];
34->7 [style = bold, label=""];
5->1 [style = bold, label=""];
30->9 [style = bold, label=""];
4->27 [style = bold, label=""];
0->9 [style = bold, label=""];
44->48 [style = bold, label=""];
6->13 [style = bold, label=""];
23->11 [style = bold, label=""];
16->22 [style = bold, label=""];
50->42 [style = bold, label=""];
15->7 [style = bold, label=""];
14->26 [style = bold, label=""];
5->35 [style = bold, label=""];
12->24 [style = bold, label=""];
9->6 [style = bold, label=""];
25->39 [style = bold, label=""];
47->40 [style = bold, label=""];
37->21 [style = bold, label=""];
2->18 [style = bold, label=""];
22->14 [style = bold, label=""];
10->4 [style = bold, label=""];
11->8 [style = bold, label=""];
26->11 [style = bold, label=""];
28->37 [style = bold, label=""];
35->38 [style = bold, label=""];
36->34 [style = bold, label=""];
13->43 [style = dashed, label="0"];
49->47 [style = bold, label=""];
42->46 [style = bold, label=""];
3->15 [style = bold, label=""];
38->31 [style = bold, label=""];
18->21 [style = bold, label=""];
7->17 [style = bold, label=""];
14->23 [style = bold, label=""];
0->30 [style = bold, label=""];
46->41 [style = bold, label=""];
9->32 [style = bold, label=""];
31->24 [style = bold, label=""];
13->10 [style = bold, label=""];
24->29 [style = bold, label=""];
21->0 [style = bold, label=""];
45->50 [style = bold, label=""];
29->33 [style = bold, label=""];
11->5 [style = bold, label=""];
17->2 [style = bold, label=""];
}
