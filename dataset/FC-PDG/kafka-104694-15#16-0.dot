digraph {
21 [style = filled, label = "WorkerSourceTask workerTask = PowerMock.createMock()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "worker.startTask(TASK_ID,connProps,origProps,taskStatusListener,TargetState.STARTED)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "EasyMock.expect(task.version()).andReturn(\"1.0\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "workerTask.initialize(taskConfig)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(2)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TaskConfig taskConfig = new TaskConfig(origProps)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "worker.stopAndAwaitTask(TASK_ID)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "connProps.put(ConnectorConfig.KEY_CONVERTER_CLASS_CONFIG,.getName())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "EasyMock.expectLastCall()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "connProps.put(\"value.converter.extra.config\",\"bar\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "PowerMock.verifyAll()@@@51@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "worker.start()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "EasyMock.expectLastCall()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EasyMock.expect(workerTask.id()).andStubReturn(TASK_ID)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "expectStartStorage()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(Collections.emptySet(),worker.taskIds())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(Collections.emptySet(),worker.taskIds())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "workerTask.run()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "EasyMock.expectLastCall()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Map<String,String> origProps = new HashMap<>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(\"bar\",valueConverter.getValue().configs.get(\"extra.config\"))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "PowerMock.expectNew(,EasyMock.eq(TASK_ID),EasyMock.eq(task),EasyMock.anyObject(),EasyMock.eq(TargetState.STARTED),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.eq(TransformationChain.noOp()),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.eq(pluginLoader),EasyMock.anyObject()).andReturn(workerTask)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "EasyMock.expect(plugins.delegatingLoader()).andReturn(delegatingLoader)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testCleanupTasksOnStop['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertStatistics(worker,0,0)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.expect(delegatingLoader.connectorLoader(.getName())).andReturn(pluginLoader)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Capture<TestConverter> keyConverter = EasyMock.newCapture()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "expectConverters()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "PowerMock.expectNew(,EasyMock.eq(TASK_ID),EasyMock.eq(task),EasyMock.anyObject(),EasyMock.eq(TargetState.STARTED),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.eq(TransformationChain.noOp()),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.eq(pluginLoader),EasyMock.anyObject()).andReturn(workerTask)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "connProps.put(\"key.converter.extra.config\",\"foo\")@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertStatistics(worker,0,0)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "worker.stop()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Capture<TestConverter> valueConverter = EasyMock.newCapture()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "workerTask.stop()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "PowerMock.replayAll()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(\"foo\",keyConverter.getValue().configs.get(\"extra.config\"))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testCleanupTasksOnStop['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "origProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(TASK_ID)),worker.taskIds())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TestSourceTask task = PowerMock.createMock()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "EasyMock.expect(workerTask.loader()).andReturn(pluginLoader)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "expectStopStorage()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertStatistics(worker,0,0)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(pluginLoader)).andReturn(delegatingLoader).times(2)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "expectConverters(true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "EasyMock.expect(workerTask.awaitStop(EasyMock.anyLong())).andStubReturn(true)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Map<String,String> connProps = anyConnectorConfigMap()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "worker.stop()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "worker.startTask(TASK_ID,anyConnectorConfigMap(),origProps,taskStatusListener,TargetState.STARTED)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testConverterOverrides['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "EasyMock.expectLastCall()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertStatistics(worker,0,0)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertStatistics(worker,0,1)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "connProps.put(ConnectorConfig.VALUE_CONVERTER_CLASS_CONFIG,.getName())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "EasyMock.expect(plugins.newTask()).andReturn(task)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "PowerMock.expectNew(,EasyMock.eq(TASK_ID),EasyMock.eq(task),EasyMock.anyObject(),EasyMock.eq(TargetState.STARTED),EasyMock.capture(keyConverter),EasyMock.capture(valueConverter),EasyMock.eq(TransformationChain.noOp()),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.eq(pluginLoader),EasyMock.anyObject()).andReturn(workerTask)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "PowerMock.verifyAll()@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertStatistics(worker,0,1)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "EasyMock.expect(workerTask.awaitStop(EasyMock.anyLong())).andReturn(true)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
32->47 [style = dashed, label="0"];
5->29 [style = bold, label=""];
11->28 [style = bold, label=""];
15->23 [style = bold, label=""];
23->25 [style = bold, label=""];
24->12 [style = bold, label=""];
10->18 [style = bold, label=""];
17->26 [style = bold, label=""];
30->22 [style = bold, label=""];
22->15 [style = bold, label=""];
15->55 [style = bold, label=""];
21->23 [style = solid, label="workerTask"];
4->17 [style = bold, label=""];
59->60 [style = bold, label=""];
26->45 [style = dashed, label="0"];
28->20 [style = bold, label=""];
57->50 [style = bold, label=""];
22->48 [style = bold, label=""];
2->6 [style = bold, label=""];
1->44 [style = solid, label="worker"];
29->58 [style = bold, label=""];
31->13 [style = bold, label=""];
37->25 [style = bold, label=""];
49->44 [style = bold, label=""];
56->41 [style = bold, label=""];
46->53 [style = bold, label=""];
16->7 [style = bold, label=""];
1->50 [style = solid, label="worker"];
40->15 [style = bold, label=""];
1->60 [style = solid, label="worker"];
17->45 [style = bold, label=""];
36->32 [style = bold, label=""];
1->14 [style = solid, label="worker"];
6->24 [style = bold, label=""];
7->31 [style = bold, label=""];
20->1 [style = bold, label=""];
29->34 [style = bold, label=""];
9->10 [style = bold, label=""];
53->54 [style = bold, label=""];
32->30 [style = bold, label=""];
25->16 [style = bold, label=""];
12->0 [style = bold, label=""];
33->27 [style = bold, label=""];
60->46 [style = bold, label=""];
35->4 [style = bold, label=""];
26->11 [style = bold, label=""];
27->35 [style = bold, label=""];
48->40 [style = bold, label=""];
58->56 [style = bold, label=""];
23->37 [style = dashed, label="0"];
47->30 [style = bold, label=""];
45->11 [style = bold, label=""];
51->59 [style = bold, label=""];
25->7 [style = solid, label="origProps"];
1->10 [style = solid, label="worker"];
21->55 [style = solid, label="workerTask"];
55->25 [style = bold, label=""];
23->55 [style = dashed, label="0"];
19->32 [style = bold, label=""];
0->33 [style = bold, label=""];
8->2 [style = bold, label=""];
30->3 [style = bold, label=""];
25->49 [style = solid, label="origProps"];
21->22 [style = bold, label=""];
56->49 [style = solid, label="connProps"];
50->51 [style = bold, label=""];
44->52 [style = bold, label=""];
7->8 [style = solid, label="taskConfig"];
3->21 [style = bold, label=""];
14->9 [style = bold, label=""];
43->49 [style = bold, label=""];
3->31 [style = solid, label="task"];
34->14 [style = bold, label=""];
39->47 [style = bold, label=""];
1->29 [style = solid, label="worker"];
13->8 [style = bold, label=""];
52->57 [style = bold, label=""];
15->37 [style = bold, label=""];
25->34 [style = solid, label="origProps"];
42->38 [style = bold, label=""];
38->43 [style = bold, label=""];
41->42 [style = bold, label=""];
}
