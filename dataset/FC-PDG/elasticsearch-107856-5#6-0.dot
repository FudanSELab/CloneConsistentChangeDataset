digraph {
13 [style = filled, label = "dynamicTemplate.isRuntimeMapping()@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "return typeParser.parse(name,mapping,parserContext)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Map<String,Object> mapping = dynamicTemplate.mappingForName(name,dynamicType)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DynamicTemplate dynamicTemplate = context.root().findTemplate(context.path(),name,matchType)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "DynamicTemplate.XContentFieldType matchType@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "applyMatchingTemplate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "String name@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Runtime.createDynamicField(runtimeField,context)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Mapper.TypeParser.ParserContext parserContext = context.parserContext(dateFormatter)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ParseContext context@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "Map<String,Object> mapping@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "CONCRETE.createDynamicField(builder,context)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return false@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Mapper.TypeParser.ParserContext parserContext = context.parserContext(dateFormatter)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "RuntimeField runtimeField = parser.parse(fullName,mapping,parserContext)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "throw new MapperParsingException(\"failed to find type parsed (\" + mappingType + \"( for (\" + name + \"(\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "String mappingType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "throw new MapperParsingException(\"failed to find type parsed (\" + mappingType + \"( for (\" + fullName + \"(\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "typeParser == null@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String fullName = context.path().pathAsText(name)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ParseContext context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "DateFormatter dateFormatter@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "parser == null@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String mappingType = dynamicTemplate.mappingType(dynamicType)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String name@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "DynamicTemplate.XContentFieldType matchType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "Mapper.TypeParser typeParser = parserContext.typeParser(mappingType)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "parseDynamicTemplateMapping['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return true@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "RuntimeField.Parser parser = parserContext.runtimeFieldParser(mappingType)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String dynamicType = dynamicTemplate.isRuntimeMapping()? matchType.defaultRuntimeMappingType(): matchType.defaultMappingType()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "DynamicTemplate dynamicTemplate = context.findDynamicTemplate(name,matchType)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "String name@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "parserContext = parserContext.createDynamicTemplateFieldContext(parserContext)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "dynamicTemplate == null@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DateFormatter dateFormatter@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Mapper.Builder builder = parseDynamicTemplateMapping(name,mappingType,mapping,dateFormatter,context)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "applyMatchingTemplate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "DateFormatter dateFormatter@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29->37 [style = solid, label="parserContext"];
21->8 [style = solid, label="mappingType"];
5->6 [style = solid, label="name"];
20->0 [style = dotted, label="true"];
9->27 [style = dashed, label="0"];
9->7 [style = bold, label=""];
26->11 [style = bold, label=""];
25->18 [style = dotted, label="true"];
5->8 [style = solid, label="name"];
6->26 [style = dashed, label="0"];
6->11 [style = bold, label=""];
20->18 [style = dotted, label="true"];
38->31 [style = dotted, label="true"];
5->3 [style = solid, label="name"];
9->15 [style = dotted, label="true"];
3->7 [style = solid, label="mapping"];
8->4 [style = bold, label=""];
33->29 [style = solid, label="parserContext"];
14->7 [style = solid, label="parserContext"];
17->21 [style = bold, label=""];
13->14 [style = bold, label=""];
18->8 [style = solid, label="name"];
21->3 [style = bold, label=""];
13->9 [style = dotted, label="true"];
11->16 [style = bold, label=""];
15->34 [style = dashed, label="0"];
18->3 [style = solid, label="name"];
13->8 [style = dotted, label="false"];
4->19 [style = bold, label=""];
13->7 [style = dotted, label="true"];
23->26 [style = solid, label="matchType"];
16->17 [style = bold, label=""];
2->9 [style = bold, label=""];
6->11 [style = solid, label="dynamicTemplate"];
0->14 [style = solid, label="dateFormatter"];
8->4 [style = solid, label="builder"];
33->29 [style = bold, label=""];
20->5 [style = dotted, label="true"];
36->33 [style = solid, label="dateFormatter"];
13->4 [style = dotted, label="false"];
38->28 [style = dotted, label="true"];
1->9 [style = solid, label="parser"];
18->8 [style = solid, label="context"];
20->10 [style = dotted, label="true"];
25->26 [style = bold, label=""];
2->7 [style = solid, label="fullName"];
11->16 [style = dotted, label="true"];
11->17 [style = bold, label=""];
29->35 [style = bold, label=""];
25->23 [style = dotted, label="true"];
22->8 [style = solid, label="dateFormatter"];
38->33 [style = bold, label=""];
0->8 [style = solid, label="dateFormatter"];
21->15 [style = solid, label="mappingType"];
21->1 [style = solid, label="mappingType"];
25->24 [style = dotted, label="true"];
38->32 [style = dotted, label="true"];
18->2 [style = solid, label="name"];
3->8 [style = solid, label="mapping"];
26->11 [style = solid, label="dynamicTemplate"];
38->30 [style = dotted, label="true"];
18->26 [style = solid, label="name"];
24->8 [style = solid, label="context"];
13->2 [style = dotted, label="true"];
27->37 [style = bold, label=""];
18->12 [style = solid, label="context"];
27->34 [style = bold, label=""];
10->6 [style = solid, label="matchType"];
2->15 [style = solid, label="fullName"];
1->2 [style = bold, label=""];
13->14 [style = dotted, label="true"];
38->36 [style = dotted, label="true"];
35->27 [style = bold, label=""];
5->2 [style = solid, label="name"];
15->7 [style = bold, label=""];
24->4 [style = solid, label="context"];
13->12 [style = dotted, label="true"];
7->12 [style = bold, label=""];
27->34 [style = dotted, label="true"];
30->34 [style = solid, label="name"];
1->29 [style = dashed, label="0"];
20->6 [style = bold, label=""];
7->12 [style = solid, label="runtimeField"];
31->35 [style = solid, label="mappingType"];
14->1 [style = bold, label=""];
18->4 [style = solid, label="context"];
22->14 [style = solid, label="dateFormatter"];
13->1 [style = dotted, label="true"];
24->12 [style = solid, label="context"];
17->3 [style = solid, label="dynamicType"];
34->37 [style = bold, label=""];
9->15 [style = bold, label=""];
25->22 [style = dotted, label="true"];
3->13 [style = bold, label=""];
7->37 [style = dashed, label="0"];
30->37 [style = solid, label="name"];
31->34 [style = solid, label="mappingType"];
13->8 [style = bold, label=""];
12->19 [style = bold, label=""];
17->21 [style = solid, label="dynamicType"];
35->27 [style = solid, label="typeParser"];
28->37 [style = solid, label="mapping"];
}
