digraph {
0 [style = filled, label = "final List<Object> list = new ArrayList<Object>()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Flowable.range(1,5).concatWith(Flowable.error(ex)).subscribeOn(Schedulers.computation()).blockingSubscribe(new FlowableSubscriber<Object>(){@Override public void onSubscribe(Subscription s){s.request(Long.MAX_VALUE)}@Override public void onNext(Object value){list.add(value)}@Override public void onError(Throwable e){list.add(e)}@Override public void onComplete(){list.add(100)}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final List<Object> list = new ArrayList<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "blockingSubscribeObserverError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "blockingSubscribeObserver['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final TestException ex = new TestException()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Arrays.asList(1,2,3,4,5,100),list)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Observable.range(1,5).subscribeOn(Schedulers.computation()).blockingSubscribe(new Observer<Object>(){@Override public void onSubscribe(Disposable d){}@Override public void onNext(Object value){list.add(value)}@Override public void onError(Throwable e){list.add(e)}@Override public void onComplete(){list.add(100)}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "blockingSubscribeObserverError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(Arrays.asList(1,2,3,4,5,ex),list)@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8->7 [style = bold, label=""];
2->1 [style = solid, label="ex"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
5->1 [style = solid, label="list"];
0->7 [style = solid, label="list"];
9->0 [style = bold, label=""];
1->7 [style = dashed, label="0"];
3->1 [style = bold, label=""];
0->5 [style = dashed, label="0"];
0->1 [style = solid, label="list"];
2->3 [style = bold, label=""];
4->0 [style = bold, label=""];
0->2 [style = bold, label=""];
0->8 [style = bold, label=""];
}
