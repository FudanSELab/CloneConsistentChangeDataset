digraph {
16 [style = filled, label = "TypeSerializer<?> valueSerializer = descrIntercepted.getValueSerializer()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "config.registerKryoType()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(valueSerializer instanceof KryoSerializer)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "StreamingRuntimeContext context = createRuntimeContext(descriptorCapture,config)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertTrue(((KryoSerializer<?>)valueSerializer).getKryo().getRegistration().getId() > 0)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final ExecutionConfig config = new ExecutionConfig()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(((KryoSerializer<?>)serializer).getKryo().getRegistration().getId() > 0)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testAggregatingStateInstantiation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testMapStateInstantiation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "AggregatingStateDescriptor<String,TaskInfo,String> descr = new AggregatingStateDescriptor<>(\"name\",aggregate,)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "MapStateDescriptor<String,TaskInfo> descr = new MapStateDescriptor<>(\"name\",,)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "AggregatingStateDescriptor<?,?,?> descrIntercepted = (AggregatingStateDescriptor<?,?,?>)descriptorCapture.get()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "@SuppressWarnings(\"unchecked\") AggregateFunction<String,TaskInfo,String> aggregate = (AggregateFunction<String,TaskInfo,String>)mock()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final AtomicReference<Object> descriptorCapture = new AtomicReference<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TypeSerializer<?> serializer = descrIntercepted.getSerializer()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "context.getAggregatingState(descr)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "StreamingRuntimeContext context = new StreamingRuntimeContext(createDescriptorCapturingMockOp(descriptorCapture,config),createMockEnvironment(),Collections.emptyMap())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testAggregatingStateInstantiation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertTrue(serializer instanceof KryoSerializer)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "MapStateDescriptor<?,?> descrIntercepted = (MapStateDescriptor<?,?>)descriptorCapture.get()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "context.getMapState(descr)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
4->18 [style = dashed, label="0"];
1->12 [style = solid, label="descriptorCapture"];
16->14 [style = solid, label="valueSerializer"];
3->10 [style = solid, label="config"];
10->19 [style = bold, label=""];
8->4 [style = solid, label="serializer"];
19->15 [style = solid, label="descr"];
20->3 [style = bold, label=""];
12->6 [style = bold, label=""];
10->6 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
5->2 [style = solid, label="descr"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
15->17 [style = bold, label=""];
3->12 [style = solid, label="config"];
13->3 [style = bold, label=""];
0->1 [style = bold, label=""];
6->5 [style = solid, label="aggregate"];
1->12 [style = bold, label=""];
1->10 [style = solid, label="descriptorCapture"];
11->8 [style = bold, label=""];
16->14 [style = bold, label=""];
14->18 [style = bold, label=""];
8->4 [style = bold, label=""];
19->15 [style = bold, label=""];
1->10 [style = bold, label=""];
2->11 [style = bold, label=""];
17->16 [style = bold, label=""];
}
