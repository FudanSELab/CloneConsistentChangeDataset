digraph {
104 [style = filled, label = "@Nullable final VirtualColumnRegistry virtualColumnRegistry@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "SqlTypeName.TIMESTAMP == rhsLiteral.getTypeName() || SqlTypeName.DATE == rhsLiteral.getTypeName()@@@104@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "kind == SqlKind.IS_TRUE || kind == SqlKind.IS_NOT_FALSE@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "final SqlKind flippedKind@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "column = lhsExpression.getSimpleExtraction().getColumn()@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "final String column@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "flip@@@42@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "filter = Bounds.equalTo(boundRefKey,val)@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "val = String.valueOf(RexLiteral.stringValue(rhsLiteral))@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final DruidExpression druidExpression = toDruidExpression(plannerContext,rowSignature,operand)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "virtualColumnRegistry != null@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "kind == SqlKind.IS_FALSE || kind == SqlKind.IS_NOT_TRUE@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "lhsExpression == null@@@64@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final DimFilter filter@@@112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "return new NotDimFilter(toSimpleLeafFilter(plannerContext,rowSignature,virtualColumnRegistry,Iterables.getOnlyElement(((RexCall)rexNode).getOperands())))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "virtualColumnRegistry != null@@@78@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "final RexLiteral rhsLiteral = (RexLiteral)rhs@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "final RexNode rexNode@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "rhs.getKind() != SqlKind.LITERAL@@@60@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final long rhsMillis = Calcites.calciteDateTimeLiteralToJoda(rhs,plannerContext.getTimeZone()).getMillis()@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "return null@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "lhs.getKind() == SqlKind.LITERAL && rhs.getKind() != SqlKind.LITERAL@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final VirtualColumn virtualColumn = virtualColumnRegistry.getOrCreateVirtualColumnForExpression(plannerContext,druidExpression,operand.getType())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "rhs = x@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "throw new IllegalStateException(\"Shouldn't have got here\")@@@126@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "kind == SqlKind.IS_NULL || kind == SqlKind.IS_NOT_NULL@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final RexNode operand = Iterables.getOnlyElement(((RexCall)rexNode).getOperands())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "filter = new NotDimFilter(Bounds.equalTo(boundRefKey,val))@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "filter = Bounds.lessThan(boundRefKey,val)@@@122@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final ExtractionFn extractionFn@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "final SqlOperatorConversion conversion = plannerContext.getOperatorTable().lookupOperatorConversion(operator)@@@132@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "final long rhsMillis@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "granularity != null@@@88@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "VirtualColumn virtualLhs = virtualColumnRegistry.getOrCreateVirtualColumnForExpression(plannerContext,lhsExpression,lhs.getType())@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final SqlKind kind = rexNode.getKind()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final Granularity queryGranularity = toQueryGranularity(lhsExpression,plannerContext.getExprMacroTable())@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Preconditions.checkState(operands.size() == 2,\"WTF?! Expected 2 operands, got(%,d(\",operands.size())@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
86 [style = filled, label = "flippedKind = SqlKind.GREATER_THAN_OR_EQUAL@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final RexNode rexNode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "lhs = rhs@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "extractionFn = null@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "throw new ISE(\"Kind(%s( not expected here\",kind)@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "RexNode x = lhs@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "return null@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "final RowSignature rowSignature@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
102 [style = filled, label = "toSimpleLeafFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "flippedKind = SqlKind.LESS_THAN@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "extractionFn = lhsExpression.getSimpleExtraction().getExtractionFn()@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "SqlTypeName.NUMERIC_TYPES.contains(rhsLiteral.getTypeName())@@@98@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "return conversion.toDruidFilter(plannerContext,rowSignature,virtualColumnRegistry,rexNode)@@@137@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "flip = true@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "queryGranularity != null@@@68@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final PlannerContext plannerContext@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "rexNode instanceof RexCall@@@130@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "druidExpression == null@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "column.equals(ColumnHolder.TIME_COLUMN_NAME) && extractionFn instanceof TimeFormatExtractionFn@@@86@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "buildTimeFloorFilter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@126@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final DimFilter equalFilter@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,extractionFn,comparator)@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "SqlTypeName.CHAR_TYPES.contains(rhsLiteral.getTypeName())@@@101@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "kind@@@43@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "column = virtualLhs.getOutputName()@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final SqlOperator operator = ((RexCall)rexNode).getOperator()@@@131@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "return null@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "return buildTimeFloorFilter(ColumnHolder.TIME_COLUMN_NAME,queryGranularity,flippedKind,rhsMillis)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return toSimpleLeafFilter(plannerContext,rowSignature,virtualColumnRegistry,Iterables.getOnlyElement(((RexCall)rexNode).getOperands()))@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "return getBoundTimeDimFilter(operatorKind,boundRefKey,rhsInterval,rhsAligned)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "conversion == null@@@133@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "flippedKind = kind@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return null@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return kind == SqlKind.IS_NOT_NULL? new NotDimFilter(equalFilter): equalFilter@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "boolean flip = false@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "return getBoundTimeDimFilter(flippedKind,boundRefKey,rhsInterval,rhsAligned)@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "final Interval rhsInterval = granularity.bucket(DateTimes.utc(rhsMillis))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "filter = Bounds.greaterThan(boundRefKey,val)@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "final String val@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "final SqlKind operatorKind@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "@Nullable final VirtualColumnRegistry virtualColumnRegistry@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "flippedKind = kind@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "RexNode lhs = operands.get(0)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "filter = Bounds.greaterThanOrEqualTo(boundRefKey,val)@@@120@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "final List<RexNode> operands = ((RexCall)rexNode).getOperands()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "return filter@@@128@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "final PlannerContext plannerContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "final Granularity granularity = ExtractionFns.toQueryGranularity(extractionFn)@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "druidExpression.isSimpleExtraction()@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "flippedKind = SqlKind.LESS_THAN_OR_EQUAL@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "final DruidExpression lhsExpression = toDruidExpression(plannerContext,rowSignature,lhs)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "return null@@@141@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "val = String.valueOf(RexLiteral.value(rhsLiteral))@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "equalFilter = new SelectorDimFilter(druidExpression.getSimpleExtraction().getColumn(),NullHandling.defaultStringValue(),druidExpression.getSimpleExtraction().getExtractionFn())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "Preconditions.checkState(operands.size() == 2,\"Expected 2 operands, got(%,d(\",operands.size())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "lhsExpression.isSimpleExtraction()@@@74@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "final Granularity granularity@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "final Interval rhsInterval = granularity.bucket(DateTimes.utc(rhsMillis))@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "throw new ISE(\"WTF?! Kind(%s( not expected here\",kind)@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "return null@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "equalFilter = new SelectorDimFilter(virtualColumn.getOutputName(),NullHandling.defaultStringValue(),null)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "return null@@@134@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "val = String.valueOf(Calcites.calciteDateTimeLiteralToJoda(rhsLiteral,plannerContext.getTimeZone()).getMillis())@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "toSimpleLeafFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final long rhsMillis = Calcites.calciteDateTimeLiteralToJoda(rhs,plannerContext.getTimeZone()).getMillis()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "RexNode rhs = operands.get(1)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "final String column@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "flippedKind = SqlKind.GREATER_THAN@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "filter = Bounds.lessThanOrEqualTo(boundRefKey,val)@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "flippedKind@@@113@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "return null@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "kind == SqlKind.EQUALS || kind == SqlKind.NOT_EQUALS || kind == SqlKind.GREATER_THAN || kind == SqlKind.GREATER_THAN_OR_EQUAL || kind == SqlKind.LESS_THAN || kind == SqlKind.LESS_THAN_OR_EQUAL@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "final StringComparator comparator = Calcites.getStringComparatorForRelDataType(lhs.getType())@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51->42 [style = solid, label="extractionFn"];
62->13 [style = bold, label=""];
17->13 [style = solid, label="kind"];
9->77 [style = bold, label=""];
83->30 [style = solid, label="val"];
93->46 [style = bold, label=""];
54->68 [style = bold, label=""];
60->29 [style = bold, label=""];
93->74 [style = dotted, label="true"];
8->11 [style = solid, label="virtualColumnRegistry"];
74->19 [style = solid, label="flippedKind"];
89->10 [style = bold, label=""];
93->86 [style = bold, label=""];
32->54 [style = solid, label="x"];
49->35 [style = solid, label="filter"];
45->7 [style = bold, label=""];
95->18 [style = solid, label="lhsExpression"];
7->14 [style = bold, label=""];
3->35 [style = bold, label=""];
11->77 [style = dotted, label="true"];
93->86 [style = dotted, label="true"];
79->57 [style = dotted, label="true"];
19->90 [style = bold, label=""];
14->39 [style = dotted, label="true"];
44->79 [style = bold, label=""];
81->89 [style = bold, label=""];
79->69 [style = dotted, label="true"];
36->63 [style = bold, label=""];
19->99 [style = bold, label=""];
104->56 [style = solid, label="virtualColumnRegistry"];
20->48 [style = solid, label="extractionFn"];
102->100 [style = dotted, label="true"];
67->95 [style = bold, label=""];
79->20 [style = dotted, label="true"];
66->6 [style = dotted, label="true"];
107->112 [style = solid, label="rhsMillis"];
88->52 [style = solid, label="val"];
86->19 [style = solid, label="flippedKind"];
17->43 [style = solid, label="kind"];
12->35 [style = bold, label=""];
75->64 [style = bold, label=""];
4->85 [style = solid, label="plannerContext"];
43->45 [style = bold, label=""];
34->96 [style = bold, label=""];
93->58 [style = dotted, label="true"];
41->53 [style = bold, label=""];
74->53 [style = solid, label="flippedKind"];
55->25 [style = bold, label=""];
19->99 [style = dotted, label="true"];
26->98 [style = dotted, label="false"];
19->3 [style = dotted, label="true"];
104->85 [style = solid, label="virtualColumnRegistry"];
55->25 [style = dotted, label="false"];
10->12 [style = solid, label="val"];
45->7 [style = solid, label="operand"];
14->39 [style = bold, label=""];
16->61 [style = dotted, label="true"];
1->27 [style = solid, label="rhs"];
81->89 [style = dotted, label="false"];
16->8 [style = dotted, label="true"];
50->55 [style = solid, label="rexNode"];
72->55 [style = bold, label=""];
72->91 [style = dotted, label="true"];
11->21 [style = bold, label=""];
84->80 [style = bold, label=""];
96->1 [style = bold, label=""];
32->27 [style = bold, label=""];
83->2 [style = solid, label="val"];
66->82 [style = dotted, label="true"];
20->42 [style = solid, label="extractionFn"];
3->35 [style = solid, label="filter"];
58->91 [style = bold, label=""];
38->48 [style = bold, label=""];
73->37 [style = dotted, label="false"];
0->92 [style = bold, label=""];
7->9 [style = solid, label="druidExpression"];
93->74 [style = bold, label=""];
103->9 [style = solid, label="plannerContext"];
43->72 [style = dotted, label="false"];
72->48 [style = dotted, label="true"];
19->40 [style = bold, label=""];
72->95 [style = dotted, label="true"];
71->91 [style = bold, label=""];
23->56 [style = bold, label=""];
42->66 [style = bold, label=""];
40->35 [style = solid, label="filter"];
30->35 [style = solid, label="filter"];
43->13 [style = dotted, label="true"];
93->105 [style = dotted, label="true"];
36->6 [style = solid, label="column"];
48->66 [style = dotted, label="true"];
75->64 [style = dotted, label="true"];
77->13 [style = solid, label="equalFilter"];
55->65 [style = dotted, label="true"];
14->0 [style = bold, label=""];
0->13 [style = solid, label="equalFilter"];
18->5 [style = bold, label=""];
107->114 [style = solid, label="rhsMillis"];
60->101 [style = bold, label=""];
17->22 [style = solid, label="kind"];
106->111 [style = solid, label="operatorKind"];
97->6 [style = bold, label=""];
15->93 [style = bold, label=""];
72->75 [style = dotted, label="true"];
23->59 [style = dotted, label="true"];
64->18 [style = bold, label=""];
62->13 [style = solid, label="equalFilter"];
17->46 [style = solid, label="kind"];
4->7 [style = solid, label="plannerContext"];
11->9 [style = bold, label=""];
7->14 [style = solid, label="druidExpression"];
72->5 [style = dotted, label="true"];
37->43 [style = bold, label=""];
18->53 [style = solid, label="queryGranularity"];
19->90 [style = dotted, label="true"];
72->51 [style = dotted, label="true"];
72->88 [style = dotted, label="true"];
104->24 [style = solid, label="virtualColumnRegistry"];
83->78 [style = bold, label=""];
80->15 [style = bold, label=""];
61->7 [style = solid, label="rowSignature"];
91->95 [style = bold, label=""];
55->31 [style = bold, label=""];
72->94 [style = dotted, label="true"];
100->7 [style = solid, label="rowSignature"];
103->85 [style = solid, label="plannerContext"];
61->56 [style = solid, label="rowSignature"];
26->83 [style = bold, label=""];
8->85 [style = solid, label="virtualColumnRegistry"];
75->18 [style = bold, label=""];
37->43 [style = dotted, label="false"];
61->95 [style = solid, label="rowSignature"];
28->3 [style = solid, label="boundRefKey"];
68->80 [style = bold, label=""];
72->28 [style = dotted, label="true"];
103->69 [style = solid, label="plannerContext"];
19->2 [style = bold, label=""];
72->18 [style = dotted, label="true"];
92->11 [style = dotted, label="false"];
16->4 [style = dotted, label="true"];
79->38 [style = dotted, label="false"];
33->82 [style = bold, label=""];
100->85 [style = solid, label="rowSignature"];
83->3 [style = solid, label="val"];
44->79 [style = dotted, label="false"];
112->111 [style = bold, label=""];
70->28 [style = solid, label="column"];
89->26 [style = bold, label=""];
104->79 [style = solid, label="virtualColumnRegistry"];
43->0 [style = dotted, label="true"];
34->15 [style = solid, label="flip"];
55->23 [style = dotted, label="true"];
103->24 [style = solid, label="plannerContext"];
17->37 [style = solid, label="kind"];
78->28 [style = solid, label="comparator"];
72->78 [style = dotted, label="true"];
86->53 [style = solid, label="flippedKind"];
87->12 [style = solid, label="val"];
6->47 [style = bold, label=""];
23->59 [style = bold, label=""];
103->95 [style = solid, label="plannerContext"];
63->28 [style = solid, label="extractionFn"];
81->87 [style = bold, label=""];
72->55 [style = dotted, label="false"];
87->30 [style = solid, label="val"];
71->47 [style = solid, label="flippedKind"];
5->41 [style = dotted, label="true"];
93->71 [style = bold, label=""];
8->24 [style = solid, label="virtualColumnRegistry"];
28->49 [style = bold, label=""];
66->33 [style = dotted, label="true"];
19->12 [style = dotted, label="true"];
94->10 [style = solid, label="rhsLiteral"];
43->72 [style = bold, label=""];
4->95 [style = solid, label="plannerContext"];
96->95 [style = solid, label="lhs"];
79->38 [style = bold, label=""];
10->78 [style = bold, label=""];
5->53 [style = dotted, label="true"];
73->24 [style = dotted, label="true"];
94->81 [style = bold, label=""];
93->46 [style = dotted, label="true"];
28->30 [style = solid, label="boundRefKey"];
99->35 [style = bold, label=""];
72->44 [style = dotted, label="true"];
2->35 [style = solid, label="filter"];
77->13 [style = bold, label=""];
15->22 [style = dotted, label="false"];
74->91 [style = bold, label=""];
72->96 [style = dotted, label="true"];
82->47 [style = solid, label="rhsInterval"];
44->36 [style = bold, label=""];
51->48 [style = solid, label="extractionFn"];
6->47 [style = solid, label="boundRefKey"];
72->1 [style = dotted, label="true"];
1->94 [style = solid, label="rhs"];
19->2 [style = dotted, label="true"];
65->23 [style = solid, label="conversion"];
87->2 [style = solid, label="val"];
69->57 [style = bold, label=""];
44->36 [style = dotted, label="true"];
20->28 [style = solid, label="extractionFn"];
72->34 [style = dotted, label="true"];
57->28 [style = solid, label="column"];
80->19 [style = solid, label="flippedKind"];
72->80 [style = dotted, label="true"];
95->75 [style = solid, label="lhsExpression"];
66->47 [style = dotted, label="true"];
19->52 [style = dotted, label="true"];
88->40 [style = solid, label="val"];
93->71 [style = dotted, label="true"];
39->0 [style = bold, label=""];
53->70 [style = bold, label=""];
74->47 [style = solid, label="flippedKind"];
94->87 [style = solid, label="rhsLiteral"];
71->19 [style = solid, label="flippedKind"];
18->5 [style = solid, label="queryGranularity"];
108->113 [style = dotted, label="true"];
43->92 [style = dotted, label="true"];
80->47 [style = solid, label="flippedKind"];
91->67 [style = dotted, label="true"];
19->52 [style = bold, label=""];
19->30 [style = bold, label=""];
19->40 [style = dotted, label="true"];
82->97 [style = bold, label=""];
72->29 [style = dotted, label="true"];
87->3 [style = solid, label="val"];
63->48 [style = bold, label=""];
10->52 [style = solid, label="val"];
37->85 [style = bold, label=""];
28->40 [style = solid, label="boundRefKey"];
57->20 [style = bold, label=""];
37->85 [style = dotted, label="true"];
55->31 [style = dotted, label="true"];
54->94 [style = solid, label="rhs"];
46->47 [style = solid, label="flippedKind"];
28->52 [style = solid, label="boundRefKey"];
33->97 [style = solid, label="rhsMillis"];
8->79 [style = solid, label="virtualColumnRegistry"];
57->6 [style = solid, label="column"];
43->14 [style = dotted, label="true"];
113->110 [style = solid, label="column"];
10->2 [style = solid, label="val"];
21->13 [style = bold, label=""];
102->61 [style = dotted, label="true"];
61->24 [style = solid, label="rowSignature"];
79->69 [style = bold, label=""];
61->56 [style = solid, label="rexNode"];
72->60 [style = dotted, label="true"];
76->53 [style = solid, label="flippedKind"];
100->95 [style = solid, label="rowSignature"];
51->44 [style = bold, label=""];
33->82 [style = solid, label="rhsMillis"];
26->83 [style = dotted, label="true"];
22->47 [style = solid, label="flippedKind"];
105->91 [style = bold, label=""];
68->15 [style = solid, label="flip"];
102->104 [style = dotted, label="true"];
83->40 [style = solid, label="val"];
114->112 [style = bold, label=""];
10->30 [style = solid, label="val"];
101->34 [style = bold, label=""];
17->105 [style = solid, label="kind"];
98->78 [style = bold, label=""];
97->47 [style = solid, label="rhsAligned"];
87->40 [style = solid, label="val"];
27->54 [style = bold, label=""];
84->68 [style = dotted, label="true"];
31->65 [style = solid, label="operator"];
86->91 [style = bold, label=""];
110->111 [style = solid, label="boundRefKey"];
40->35 [style = bold, label=""];
28->12 [style = solid, label="boundRefKey"];
72->81 [style = dotted, label="true"];
93->105 [style = bold, label=""];
11->9 [style = dotted, label="true"];
48->88 [style = bold, label=""];
63->42 [style = solid, label="extractionFn"];
108->106 [style = dotted, label="true"];
30->35 [style = bold, label=""];
52->35 [style = solid, label="filter"];
49->19 [style = bold, label=""];
72->70 [style = dotted, label="true"];
90->99 [style = dashed, label="0"];
84->27 [style = dotted, label="true"];
88->12 [style = solid, label="val"];
36->28 [style = solid, label="column"];
102->103 [style = dotted, label="true"];
87->78 [style = bold, label=""];
31->65 [style = bold, label=""];
92->62 [style = bold, label=""];
76->19 [style = solid, label="flippedKind"];
5->70 [style = bold, label=""];
81->87 [style = dotted, label="true"];
16->50 [style = dotted, label="true"];
1->84 [style = bold, label=""];
10->3 [style = solid, label="val"];
93->58 [style = bold, label=""];
88->3 [style = solid, label="val"];
46->91 [style = bold, label=""];
73->24 [style = bold, label=""];
114->111 [style = solid, label="rhsInterval"];
72->60 [style = bold, label=""];
29->101 [style = dashed, label="0"];
88->30 [style = solid, label="val"];
72->15 [style = dotted, label="true"];
44->63 [style = dotted, label="true"];
5->41 [style = bold, label=""];
72->19 [style = dotted, label="true"];
22->19 [style = solid, label="flippedKind"];
43->45 [style = dotted, label="true"];
86->47 [style = solid, label="flippedKind"];
100->24 [style = solid, label="rowSignature"];
43->7 [style = dotted, label="true"];
27->95 [style = solid, label="lhs"];
110->114 [style = bold, label=""];
4->56 [style = solid, label="plannerContext"];
28->2 [style = solid, label="boundRefKey"];
65->23 [style = bold, label=""];
2->35 [style = bold, label=""];
103->56 [style = solid, label="plannerContext"];
100->56 [style = solid, label="rowSignature"];
61->85 [style = solid, label="rowSignature"];
112->111 [style = solid, label="rhsAligned"];
70->6 [style = solid, label="column"];
84->32 [style = dotted, label="true"];
29->34 [style = bold, label=""];
51->28 [style = solid, label="extractionFn"];
70->51 [style = bold, label=""];
50->56 [style = solid, label="rexNode"];
66->88 [style = bold, label=""];
89->26 [style = dotted, label="false"];
20->48 [style = bold, label=""];
80->53 [style = solid, label="flippedKind"];
23->56 [style = dotted, label="false"];
95->75 [style = bold, label=""];
46->19 [style = solid, label="flippedKind"];
19->3 [style = bold, label=""];
66->33 [style = bold, label=""];
52->35 [style = bold, label=""];
89->10 [style = dotted, label="true"];
72->49 [style = dotted, label="true"];
17->73 [style = solid, label="kind"];
73->37 [style = bold, label=""];
19->12 [style = bold, label=""];
108->110 [style = bold, label=""];
46->53 [style = solid, label="flippedKind"];
92->11 [style = bold, label=""];
47->88 [style = bold, label=""];
72->35 [style = dotted, label="true"];
16->17 [style = bold, label=""];
103->7 [style = solid, label="plannerContext"];
92->62 [style = dotted, label="true"];
4->69 [style = solid, label="plannerContext"];
72->84 [style = dotted, label="true"];
63->48 [style = solid, label="extractionFn"];
90->35 [style = bold, label=""];
17->73 [style = bold, label=""];
15->93 [style = dotted, label="true"];
17->93 [style = solid, label="kind"];
4->9 [style = solid, label="plannerContext"];
93->76 [style = bold, label=""];
41->53 [style = solid, label="rhsMillis"];
83->52 [style = solid, label="val"];
104->11 [style = solid, label="virtualColumnRegistry"];
76->91 [style = bold, label=""];
108->107 [style = dotted, label="true"];
4->24 [style = solid, label="plannerContext"];
19->30 [style = dotted, label="true"];
88->2 [style = solid, label="val"];
11->21 [style = dotted, label="false"];
15->22 [style = bold, label=""];
95->69 [style = solid, label="lhsExpression"];
84->54 [style = dotted, label="true"];
72->101 [style = dotted, label="true"];
8->56 [style = solid, label="virtualColumnRegistry"];
71->53 [style = solid, label="flippedKind"];
78->28 [style = bold, label=""];
66->97 [style = dotted, label="true"];
108->109 [style = dotted, label="true"];
84->32 [style = bold, label=""];
76->47 [style = solid, label="flippedKind"];
96->32 [style = solid, label="lhs"];
22->91 [style = bold, label=""];
87->52 [style = solid, label="val"];
17->58 [style = solid, label="kind"];
48->42 [style = dotted, label="true"];
91->67 [style = bold, label=""];
83->12 [style = solid, label="val"];
58->105 [style = dashed, label="0"];
48->42 [style = bold, label=""];
17->72 [style = solid, label="kind"];
93->76 [style = dotted, label="true"];
26->98 [style = bold, label=""];
88->94 [style = bold, label=""];
61->55 [style = solid, label="rexNode"];
42->66 [style = solid, label="granularity"];
10->40 [style = solid, label="val"];
22->53 [style = solid, label="flippedKind"];
12->35 [style = solid, label="filter"];
102->17 [style = bold, label=""];
}
