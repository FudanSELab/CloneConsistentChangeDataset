digraph {
73 [style = filled, label = "time = 1000L - 100L - 1L@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "testAsymmetricWindowingAfter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(3,\"A3+i3\",1103))@@@73@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "final TestInputTopic<Integer,String> inputTopic2 = driver.createInputTopic(topic2,new IntegerSerializer(),new StringSerializer(),Instant.ofEpochMilli(0L),Duration.ZERO)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "time += 1L@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i++@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "inputTopic2.pipeInput(expectedKey,\"g\" + expectedKey,time)@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "processor.checkAndClearProcessResult()@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "time += 1L@@@74@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+b0\",1000L))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "int i = 0@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "processor.checkAndClearProcessResult()@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@78@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(1,\"A1+g1\",1101),new KeyValueTimestamp<>(2,\"A2+g2\",1101),new KeyValueTimestamp<>(3,\"A3+g3\",1101))@@@63@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b9f238@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "inputTopic2.pipeInput(expectedKey,\"c\" + expectedKey,time)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(0)).after(ofMillis(100)).grace(ofMillis(0)),StreamJoined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "inputTopic2.pipeInput(expectedKey,\"f\" + expectedKey,time)@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+b0\",1000))@@@38@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i < expectedKeys.length@@@24@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+d0\",1000),new KeyValueTimestamp<>(1,\"A1+d1\",1001),new KeyValueTimestamp<>(2,\"A2+d2\",1002))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(1,\"A1+g1\",1001),new KeyValueTimestamp<>(2,\"A2+g2\",1002),new KeyValueTimestamp<>(3,\"A3+g3\",1003))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "long time = 1000L@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "time += 1L@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+c0\",1000),new KeyValueTimestamp<>(1,\"A1+c1\",1001))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+e0\",1003),new KeyValueTimestamp<>(1,\"A1+e1\",1003),new KeyValueTimestamp<>(2,\"A2+e2\",1003),new KeyValueTimestamp<>(3,\"A3+e3\",1003))@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "time += 1L@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final TestInputTopic<Integer,String> inputTopic1 = driver.createInputTopic(topic1,new IntegerSerializer(),new StringSerializer(),Instant.ofEpochMilli(0L),Duration.ZERO)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+d0\",1002),new KeyValueTimestamp<>(1,\"A1+d1\",1002),new KeyValueTimestamp<>(2,\"A2+d2\",1002))@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(1,\"A1+g1\",1101L),new KeyValueTimestamp<>(2,\"A2+g2\",1101L),new KeyValueTimestamp<>(3,\"A3+g3\",1101L))@@@63@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "processor.checkAndClearProcessResult()@@@78@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(2,\"A2+h2\",1102),new KeyValueTimestamp<>(3,\"A3+h3\",1102))@@@68@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "time = 1000L@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "inputTopic2.pipeInput(expectedKey,\"b\" + expectedKey,time)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "inputTopic2.pipeInput(expectedKey,\"a\" + expectedKey,time)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "inputTopic2.pipeInput(expectedKey,\"h\" + expectedKey,time)@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+f0\",1100L),new KeyValueTimestamp<>(1,\"A1+f1\",1100L),new KeyValueTimestamp<>(2,\"A2+f2\",1100L),new KeyValueTimestamp<>(3,\"A3+f3\",1100L))@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(2,\"A2+h2\",1102L),new KeyValueTimestamp<>(3,\"A3+h3\",1102L))@@@68@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+c0\",1001),new KeyValueTimestamp<>(1,\"A1+c1\",1001))@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "time = 1000L - 1L@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+e0\",1003L),new KeyValueTimestamp<>(1,\"A1+e1\",1003L),new KeyValueTimestamp<>(2,\"A2+e2\",1003L),new KeyValueTimestamp<>(3,\"A3+e3\",1003L))@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+d0\",1002L),new KeyValueTimestamp<>(1,\"A1+d1\",1002L),new KeyValueTimestamp<>(2,\"A2+d2\",1002L))@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(0)).after(ofMillis(100)).grace(ofMillis(0)),StreamJoined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "time += 1L@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "inputTopic2.pipeInput(expectedKey,\"d\" + expectedKey,time)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "inputTopic2.pipeInput(expectedKey,\"e\" + expectedKey,time)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+f0\",1100),new KeyValueTimestamp<>(1,\"A1+f1\",1100),new KeyValueTimestamp<>(2,\"A2+f2\",1100),new KeyValueTimestamp<>(3,\"A3+f3\",1100))@@@58@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(0)).before(ofMillis(100)),StreamJoined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "testAsymmetricWindowingAfter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+e0\",1000),new KeyValueTimestamp<>(1,\"A1+e1\",1001),new KeyValueTimestamp<>(2,\"A2+e2\",1002),new KeyValueTimestamp<>(3,\"A3+e3\",1003))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "testAsymmetricWindowingBefore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "joined.process(supplier)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+c0\",1001L),new KeyValueTimestamp<>(1,\"A1+c1\",1001L))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "inputTopic1.pipeInput(expectedKeys(i(,\"A\" + expectedKeys(i(,time + i)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(3,\"A3+i3\",1003))@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "time += 1L@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "time += 1L@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "inputTopic2.pipeInput(expectedKey,\"j\" + expectedKey,time)@@@76@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(3,\"A3+i3\",1103L))@@@73@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(2,\"A2+h2\",1002),new KeyValueTimestamp<>(3,\"A3+h3\",1003))@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "time = 1000 + 100L@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "time += 1L@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "inputTopic2.pipeInput(expectedKey,\"i\" + expectedKey,time)@@@71@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+f0\",1000),new KeyValueTimestamp<>(1,\"A1+f1\",1001),new KeyValueTimestamp<>(2,\"A2+f2\",1002),new KeyValueTimestamp<>(3,\"A3+f3\",1003))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->58 [style = dashed, label="0"];
67->28 [style = bold, label=""];
38->3 [style = solid, label="time"];
9->11 [style = bold, label=""];
68->50 [style = bold, label=""];
58->30 [style = bold, label=""];
40->55 [style = bold, label=""];
69->9 [style = bold, label=""];
40->15 [style = bold, label=""];
70->37 [style = bold, label=""];
13->20 [style = solid, label="stream2"];
33->3 [style = solid, label="expectedKeys"];
20->70 [style = dashed, label="0"];
6->67 [style = dashed, label="0"];
23->67 [style = bold, label=""];
7->69 [style = bold, label=""];
36->33 [style = bold, label=""];
65->14 [style = bold, label=""];
29->18 [style = bold, label=""];
43->4 [style = bold, label=""];
50->65 [style = bold, label=""];
19->24 [style = bold, label=""];
52->7 [style = solid, label="time"];
27->73 [style = bold, label=""];
19->24 [style = solid, label="i"];
18->44 [style = bold, label=""];
3->19 [style = bold, label=""];
28->25 [style = solid, label="time"];
15->52 [style = bold, label=""];
8->34 [style = solid, label="time"];
13->70 [style = bold, label=""];
20->37 [style = bold, label=""];
16->43 [style = bold, label=""];
40->75 [style = bold, label=""];
28->25 [style = bold, label=""];
75->52 [style = bold, label=""];
4->8 [style = bold, label=""];
11->71 [style = bold, label=""];
50->66 [style = bold, label=""];
24->3 [style = dotted, label="true"];
5->30 [style = bold, label=""];
41->58 [style = bold, label=""];
24->53 [style = bold, label=""];
24->27 [style = bold, label=""];
12->49 [style = solid, label="time"];
51->74 [style = dashed, label="0"];
25->51 [style = bold, label=""];
8->34 [style = bold, label=""];
25->62 [style = bold, label=""];
73->43 [style = bold, label=""];
42->65 [style = dashed, label="0"];
7->46 [style = bold, label=""];
44->37 [style = solid, label="supplier"];
19->3 [style = solid, label="i"];
7->57 [style = bold, label=""];
51->62 [style = dashed, label="0"];
34->31 [style = bold, label=""];
32->3 [style = solid, label="i"];
27->16 [style = bold, label=""];
27->53 [style = dashed, label="0"];
74->12 [style = bold, label=""];
38->32 [style = bold, label=""];
41->76 [style = bold, label=""];
6->59 [style = dashed, label="0"];
0->50 [style = solid, label="time"];
32->19 [style = solid, label="i"];
71->68 [style = bold, label=""];
61->8 [style = bold, label=""];
10->0 [style = bold, label=""];
10->71 [style = dashed, label="0"];
24->19 [style = dotted, label="true"];
52->7 [style = bold, label=""];
59->28 [style = bold, label=""];
14->41 [style = solid, label="time"];
68->50 [style = solid, label="time"];
24->3 [style = bold, label=""];
23->59 [style = bold, label=""];
49->54 [style = bold, label=""];
37->47 [style = bold, label=""];
15->75 [style = dashed, label="0"];
21->54 [style = dashed, label="0"];
22->26 [style = bold, label=""];
16->43 [style = solid, label="time"];
13->64 [style = bold, label=""];
32->24 [style = solid, label="i"];
46->9 [style = bold, label=""];
56->36 [style = bold, label=""];
39->13 [style = bold, label=""];
2->1 [style = bold, label=""];
51->12 [style = bold, label=""];
35->2 [style = bold, label=""];
63->0 [style = bold, label=""];
0->68 [style = dashed, label="0"];
9->11 [style = solid, label="time"];
45->40 [style = solid, label="time"];
16->73 [style = dashed, label="0"];
42->14 [style = bold, label=""];
12->49 [style = bold, label=""];
43->61 [style = bold, label=""];
64->37 [style = bold, label=""];
50->42 [style = bold, label=""];
11->10 [style = bold, label=""];
23->6 [style = bold, label=""];
72->36 [style = bold, label=""];
31->60 [style = dashed, label="0"];
57->9 [style = bold, label=""];
55->52 [style = bold, label=""];
14->41 [style = bold, label=""];
45->40 [style = bold, label=""];
33->17 [style = bold, label=""];
4->61 [style = dashed, label="0"];
48->36 [style = bold, label=""];
13->64 [style = solid, label="stream2"];
73->43 [style = solid, label="time"];
11->63 [style = bold, label=""];
30->23 [style = bold, label=""];
20->64 [style = dashed, label="0"];
46->57 [style = dashed, label="0"];
46->69 [style = dashed, label="0"];
44->39 [style = bold, label=""];
47->35 [style = bold, label=""];
76->30 [style = bold, label=""];
5->76 [style = dashed, label="0"];
49->21 [style = bold, label=""];
0->50 [style = bold, label=""];
25->74 [style = bold, label=""];
1->22 [style = bold, label=""];
60->45 [style = bold, label=""];
26->38 [style = bold, label=""];
34->60 [style = bold, label=""];
15->55 [style = dashed, label="0"];
30->23 [style = solid, label="time"];
62->12 [style = bold, label=""];
13->70 [style = solid, label="stream2"];
42->66 [style = dashed, label="0"];
53->16 [style = bold, label=""];
66->14 [style = bold, label=""];
17->29 [style = bold, label=""];
32->24 [style = bold, label=""];
31->45 [style = bold, label=""];
10->63 [style = dashed, label="0"];
6->28 [style = bold, label=""];
41->5 [style = bold, label=""];
13->20 [style = bold, label=""];
}
