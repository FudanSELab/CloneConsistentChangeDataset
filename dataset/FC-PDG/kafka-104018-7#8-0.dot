digraph {
4 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(1,consumerId,\"leader\",Errors.NONE.code()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.prepareResponse(syncGroupResponse(Arrays.asList(tp),Errors.NONE.code()))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "subscriptions.subscribe(singleton(topicName),rebalanceListener)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "coordinator.ensureCoordinatorReady()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE.code()))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "subscriptions.subscribe(Arrays.asList(topicName),rebalanceListener)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "coordinator.poll(time.milliseconds())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(ClientRequest request){JoinGroupRequest joinRequest = new JoinGroupRequest(request.request().body())return joinRequest.memberId().equals(JoinGroupRequest.UNKNOWN_MEMBER_ID)}},joinGroupFollowerResponse(2,consumerId,\"leader\",Errors.NONE.code()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testIllegalGenerationOnSyncGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testUnexpectedErrorOnSyncGroup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "coordinator.poll(time.milliseconds())@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(Collections.singleton(tp),subscriptions.assignedPartitions())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testUnexpectedErrorOnSyncGroup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(subscriptions.partitionAssignmentNeeded())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "subscriptions.needReassignment()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String consumerId = \"consumer\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "coordinator.poll(time.milliseconds())@@@10@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "client.prepareResponse(syncGroupResponse(Collections.emptyList(),Errors.ILLEGAL_GENERATION.code()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE.code()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->4 [style = bold, label=""];
1->4 [style = solid, label="consumerId"];
1->0 [style = solid, label="consumerId"];
12->15 [style = bold, label=""];
9->2 [style = bold, label=""];
11->9 [style = bold, label=""];
14->12 [style = bold, label=""];
16->13 [style = bold, label=""];
5->11 [style = dashed, label="0"];
1->11 [style = bold, label=""];
10->1 [style = bold, label=""];
18->16 [style = bold, label=""];
3->8 [style = bold, label=""];
3->18 [style = dashed, label="0"];
2->0 [style = bold, label=""];
13->14 [style = bold, label=""];
4->3 [style = bold, label=""];
6->1 [style = bold, label=""];
5->7 [style = bold, label=""];
1->16 [style = solid, label="consumerId"];
4->18 [style = bold, label=""];
17->1 [style = bold, label=""];
1->5 [style = bold, label=""];
7->2 [style = bold, label=""];
}
