digraph {
1 [style = filled, label = "GenericCallback<?> callbackInstance = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String argument = \"foo\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StringCallback callbackInstance = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "LambdaSafe.callbacks(,Collections.singleton(callbackInstance),argument).invoke(null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verifyZeroInteractions(callbackInstance)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "callbacksInvokeWhenHasGenericShouldInvokeCallback['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "LambdaSafe.callbacks(,Collections.singleton(callbackInstance),argument).invoke(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "verify(callbackInstance).handle(argument)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "verifyNoInteractions(callbackInstance)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "callbacksInvokeWhenHasResolvableGenericNonMatchShouldNotInvokeCallback['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "callbacksInvokeWhenHasResolvableGenericNonMatchShouldNotInvokeCallback['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2->7 [style = solid, label="argument"];
5->1 [style = bold, label=""];
3->6 [style = bold, label=""];
1->9 [style = dashed, label="0"];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
3->10 [style = dashed, label="0"];
1->0 [style = solid, label="callbackInstance"];
2->10 [style = bold, label=""];
0->7 [style = dashed, label="0"];
9->2 [style = bold, label=""];
10->7 [style = bold, label=""];
1->6 [style = solid, label="callbackInstance"];
3->0 [style = bold, label=""];
2->3 [style = bold, label=""];
0->6 [style = dashed, label="0"];
8->9 [style = bold, label=""];
}
