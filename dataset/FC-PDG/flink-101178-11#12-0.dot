digraph {
16 [style = filled, label = "env.setParallelism(4)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "{ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()env.setParallelism(4)env.setRestartStrategy(RestartStrategies.noRestart())List<Long> resultCollection = env.generateSequence(1,10).rebalance().map(new FailingMapper1<>()).reduce((ReduceFunction<Long>)null).collect()long sum = 0for (long l : resultCollection){sum += l}assertEquals(55,sum)}@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "List<Long> resultCollection = new ArrayList<>()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()env.setParallelism(4)env.setRestartStrategy(RestartStrategies.noRestart())env.generateSequence(1,10).rebalance().map(new FailingMapper1<>()).reduce((ReduceFunction<Long>)null).output(new LocalCollectionOutputFormat<>(resultCollection))executeAndRunAssertions(env)long sum = 0for (long l : resultCollection){sum += l}assertEquals(55,sum)}@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "{FailingMapper1.failuresBeforeSuccess = 1}@@@31@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "{FailingMapper2.failuresBeforeSuccess = 1}@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "{FailingMapper1.failuresBeforeSuccess = 1}@@@27@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals(55,sum)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "{ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()env.setParallelism(4)env.setRestartStrategy(RestartStrategies.noRestart())try {env.generateSequence(1,10).rebalance().map(new FailingMapper1<>()).reduce(null).collect()fail(\"The program should have failed, but run successfully\")}catch (JobExecutionException e) }@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "env.generateSequence(1,10).rebalance().map(new FailingMapper2<>()).reduce(null).output(new LocalCollectionOutputFormat<>(resultCollection))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testFailedRunThenSuccessfulRun['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "long sum = 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testRestart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "sum += l@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "executeAndRunAssertions(env)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testFailedRunThenSuccessfulRun['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15->9 [style = bold, label=""];
16->8 [style = bold, label=""];
0->8 [style = solid, label="resultCollection"];
14->0 [style = bold, label=""];
11->15 [style = bold, label=""];
0->13 [style = bold, label=""];
0->2 [style = solid, label="resultCollection"];
10->12 [style = bold, label=""];
1->3 [style = bold, label=""];
13->16 [style = bold, label=""];
2->1 [style = bold, label=""];
6->5 [style = bold, label=""];
2->6 [style = bold, label=""];
11->15 [style = solid, label="sum"];
12->11 [style = bold, label=""];
13->10 [style = solid, label="env"];
0->2 [style = bold, label=""];
0->1 [style = solid, label="resultCollection"];
2->1 [style = solid, label="env"];
8->10 [style = bold, label=""];
4->0 [style = bold, label=""];
7->2 [style = bold, label=""];
}
