digraph {
4 [style = filled, label = "String nStr = ((StreamExpressionValue)nParam.getParameter()).getValue()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "1 != streamExpressions.size()@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "init(stream,nInt,comp)@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "NumberFormatException e@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "GroupOperation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "StreamComparator comp = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "StreamExpressionNamedParameter sortExpression = factory.getNamedOperand(expression,SORT)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "int nInt = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' must be greater than 0.\",expression,nStr))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 2@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "StreamExpressionNamedParameter nParam = factory.getNamedOperand(expression,\"n\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single 'n' parameter of type positive integer but didn't find one\",expression))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "null == sortExpression || !(sortExpression.getParameter() instanceof StreamExpressionValue)@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "GroupOperation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "StreamExpressionNamedParameter nParam = factory.getNamedOperand(expression,\"n\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String nStr = ((StreamExpressionValue)nParam.getParameter()).getValue()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' is not a valid integer.\",expression,nStr))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "nInt <= 0@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "NumberFormatException e@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "RankStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "nInt = Integer.parseInt(nStr)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression,,)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "nInt = Integer.parseInt(nStr)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'over' parameter listing fields to unique over but didn't find one\",expression))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "nInt <= 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "StreamExpressionNamedParameter sortExpression = factory.getNamedOperand(expression,\"sort\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "null == nParam || null == nParam.getParameter() || !(nParam.getParameter() instanceof StreamExpressionValue)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "StreamExpression expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' must be greater than 0.\",expression,nStr))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "StreamExpression expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "TupleStream stream = factory.constructStream(streamExpressions.get(0))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "int nInt = 0@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->16 [style = bold, label=""];
32->29 [style = solid, label="expression"];
2->32 [style = dashed, label="0"];
32->12 [style = solid, label="expression"];
4->10 [style = solid, label="nStr"];
8->6 [style = bold, label=""];
18->20 [style = dotted, label="true"];
23->30 [style = solid, label="stream"];
12->26 [style = dashed, label="0"];
26->35 [style = bold, label=""];
31->27 [style = dotted, label="true"];
1->12 [style = bold, label=""];
23->36 [style = bold, label=""];
27->19 [style = bold, label=""];
26->28 [style = bold, label=""];
1->25 [style = solid, label="nInt"];
32->9 [style = solid, label="expression"];
16->9 [style = bold, label=""];
32->21 [style = solid, label="expression"];
5->10 [style = bold, label=""];
36->30 [style = solid, label="comp"];
19->34 [style = bold, label=""];
7->11 [style = bold, label=""];
9->33 [style = bold, label=""];
15->2 [style = dotted, label="true"];
0->6 [style = solid, label="expression"];
25->12 [style = dotted, label="true"];
14->16 [style = solid, label="expression"];
11->12 [style = bold, label=""];
15->14 [style = dotted, label="true"];
10->7 [style = bold, label=""];
33->29 [style = bold, label=""];
35->28 [style = bold, label=""];
36->30 [style = bold, label=""];
6->16 [style = dashed, label="0"];
9->28 [style = solid, label="sortExpression"];
32->35 [style = solid, label="expression"];
28->24 [style = dotted, label="true"];
31->27 [style = bold, label=""];
13->0 [style = dotted, label="true"];
0->8 [style = solid, label="expression"];
25->26 [style = bold, label=""];
28->24 [style = bold, label=""];
10->12 [style = solid, label="nInt"];
0->11 [style = solid, label="expression"];
3->1 [style = dotted, label="true"];
4->11 [style = solid, label="nStr"];
22->26 [style = bold, label=""];
19->1 [style = solid, label="nStr"];
3->1 [style = bold, label=""];
32->6 [style = solid, label="expression"];
6->31 [style = solid, label="nParam"];
32->24 [style = solid, label="expression"];
13->2 [style = dotted, label="true"];
7->11 [style = dotted, label="true"];
28->23 [style = bold, label=""];
33->29 [style = dotted, label="true"];
9->12 [style = solid, label="streamComparator"];
17->22 [style = dotted, label="true"];
26->35 [style = dotted, label="true"];
18->21 [style = bold, label=""];
4->5 [style = bold, label=""];
1->25 [style = bold, label=""];
15->8 [style = bold, label=""];
31->19 [style = bold, label=""];
24->23 [style = bold, label=""];
14->8 [style = solid, label="expression"];
1->30 [style = solid, label="nInt"];
10->7 [style = solid, label="nInt"];
3->17 [style = dashed, label="0"];
21->6 [style = bold, label=""];
7->12 [style = bold, label=""];
34->1 [style = bold, label=""];
9->4 [style = bold, label=""];
29->31 [style = bold, label=""];
19->12 [style = solid, label="nStr"];
12->26 [style = bold, label=""];
17->22 [style = bold, label=""];
18->32 [style = dotted, label="true"];
14->11 [style = solid, label="expression"];
32->27 [style = solid, label="expression"];
25->12 [style = bold, label=""];
33->31 [style = bold, label=""];
6->9 [style = bold, label=""];
13->8 [style = bold, label=""];
}
