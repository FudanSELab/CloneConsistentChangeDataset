digraph {
4 [style = filled, label = "topology.addSource(\"source\",new StringDeserializer(),new StringDeserializer(),\"input\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "topology.addSink(\"sink\",\"output\",new StringSerializer(),new StringSerializer(),\"recursiveProcessor\")@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(keyValueStore.get(\"A\"),is(\"recurse-alpha\"))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final TestOutputTopic<String,String> globalTopic = topologyTestDriver.createOutputTopic(\"global-topic\",new StringDeserializer(),new StringDeserializer())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "topology.addGlobalStore(Stores.keyValueStoreBuilder(Stores.inMemoryKeyValueStore(\"global-store\"),Serdes.String(),Serdes.String()).withLoggingDisabled(),\"globalSource\",new StringDeserializer(),new StringDeserializer(),\"global-topic\",\"globalProcessor\",null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "in.pipeInput(\"A\",\"alpha\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "shouldEnqueueLaterOutputsAfterEarlierOnes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final TestInputTopic<String,String> in = topologyTestDriver.createInputTopic(\"input\",new StringSerializer(),new StringSerializer())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(keyValueStore,notNullValue())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(events,is(Arrays.asList(new KeyValue<>(\"A\",\"alpha\"),new KeyValue<>(\"A\",\"recurse-alpha\"))))@@@41@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final TestOutputTopic<String,String> out = topologyTestDriver.createOutputTopic(\"output\",new StringDeserializer(),new StringDeserializer())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "shouldEnqueueLaterOutputsAfterEarlierOnes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "shouldApplyGlobalUpdatesCorrectlyInRecursiveTopologies['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "topology.addSink(\"globalSink\",\"global-topic\",new StringSerializer(),new StringSerializer(),\"recursiveProcessor\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final List<KeyValue<String,String>> events = out.readKeyValuesToList()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "topology.addSink(\"recursiveSink\",\"input\",new StringSerializer(),new StringSerializer(),\"recursiveProcessor\")@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "in.pipeInput(\"B\",\"beta\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final KeyValueStore<String,String> keyValueStore = topologyTestDriver.getKeyValueStore(\"global-store\")@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "topology.addProcessor(\"recursiveProcessor\",null,\"source\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(events,is(Arrays.asList(new KeyValue<>(\"B\",\"beta\"),new KeyValue<>(\"B\",\"recurse-beta\"))))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Topology topology = new Topology()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final List<KeyValue<String,String>> events = globalTopic.readKeyValuesToList()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
20->13 [style = bold, label=""];
5->9 [style = bold, label=""];
21->0 [style = bold, label=""];
16->8 [style = bold, label=""];
1->15 [style = dashed, label="0"];
0->2 [style = bold, label=""];
17->14 [style = solid, label="events"];
4->21 [style = bold, label=""];
18->17 [style = bold, label=""];
9->10 [style = bold, label=""];
19->6 [style = bold, label=""];
6->15 [style = bold, label=""];
4->0 [style = bold, label=""];
5->20 [style = dashed, label="0"];
6->1 [style = bold, label=""];
9->10 [style = solid, label="events"];
13->12 [style = bold, label=""];
17->14 [style = bold, label=""];
15->20 [style = bold, label=""];
3->8 [style = bold, label=""];
7->6 [style = bold, label=""];
9->13 [style = dashed, label="0"];
12->18 [style = bold, label=""];
13->12 [style = solid, label="keyValueStore"];
11->8 [style = bold, label=""];
8->4 [style = bold, label=""];
2->7 [style = bold, label=""];
7->19 [style = bold, label=""];
}
