digraph {
24 [style = filled, label = "final AtomicInteger onCacheCalled = new AtomicInteger()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testClearField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "ifdService.clearField(\"field_1\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "LeafReaderContext leafReaderContext = reader.getContext().leaves().get(0)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(2,onRemovalCalled.get())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final IndexReader reader = wrap? ElasticsearchDirectoryReader.wrap(open,new ShardId(\"test\",\"_na_\",1)): open@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final MappedFieldType mapper1 = new TextFieldMapper.Builder(\"field_1\",createDefaultIndexAnalyzers()).fielddata(true).build(contentPath).fieldType()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(1,onCacheCalled.get())@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "writer.addDocument(doc)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final IndicesService indicesService = getInstanceFromNode()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final IndexService indexService = createIndex(\"test\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "doc.add(new StringField(\"field_2\",\"thisisanotherstring\",Store.NO))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(2,onCacheCalled.get())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(1,onRemovalCalled.get())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final boolean wrap = randomBoolean()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "doc.add(new StringField(\"field_1\",\"thisisastring\",Store.NO))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Document doc = new Document()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final MappedFieldType mapper1 = new TextFieldMapper.Builder(\"field_1\",null).fielddata(true).build(contentPath).fieldType()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "final MappedFieldType mapper2 = new TextFieldMapper.Builder(\"field_2\",createDefaultIndexAnalyzers()).fielddata(true).build(contentPath).fieldType()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "final IndexWriter writer = new IndexWriter(new ByteBuffersDirectory(),new IndexWriterConfig(new KeywordAnalyzer()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "ifdService.setListener(new IndexFieldDataCache.Listener(){@Override public void onCache(ShardId shardId,String fieldName,Accountable ramUsage){if (wrap) {assertEquals(new ShardId(\"test\",\"_na_\",1),shardId)}{assertNull(shardId)}onCacheCalled.incrementAndGet()}@Override public void onRemoval(ShardId shardId,String fieldName,boolean wasEvicted,long sizeInBytes){if (wrap) {assertEquals(new ShardId(\"test\",\"_na_\",1),shardId)}{assertNull(shardId)}onRemovalCalled.incrementAndGet()}})@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "load.close()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "final AtomicInteger onRemovalCalled = new AtomicInteger()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(0,onRemovalCalled.get())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final IndexReader reader = DirectoryReader.open(writer)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ifdService.clearField(\"field_2\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final ContentPath contentPath = new ContentPath(1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final AtomicInteger onCacheCalled = new AtomicInteger()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "testFieldDataCacheListener['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "writer.close()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "IndexFieldData<?> ifd = ifdService.getForField(mapper1,\"test\",null)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "loadField1.close()@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final AtomicInteger onRemovalCalled = new AtomicInteger()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "LeafFieldData load = ifd.load(leafReaderContext)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "ifdService.clearField(\"field_1\")@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "reader.close()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "writer.close()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "DirectoryReader open = DirectoryReader.open(writer)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(2,onCacheCalled.get())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final IndexFieldDataService ifdService = new IndexFieldDataService(indexService.getIndexSettings(),indicesService.getIndicesFieldDataCache(),indicesService.getCircuitBreakerService(),indexService.mapperService())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "doc.add(new StringField(\"s\",\"thisisastring\",Store.NO))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "LeafFieldData loadField1 = ifd1.load(leafReaderContext)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testClearField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ifdService.clear()@@@52@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final MappedFieldType mapper1 = new TextFieldMapper.Builder(\"s\",null).fielddata(true).build(contentPath).fieldType()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final MappedFieldType mapper2 = new TextFieldMapper.Builder(\"field_2\",null).fielddata(true).build(contentPath).fieldType()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "LeafReaderContext leafReaderContext = reader.getContext().leaves().get(0)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(0,onRemovalCalled.get())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(1,onRemovalCalled.get())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(1,onRemovalCalled.get())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(2,onCacheCalled.get())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "reader.close()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "ifdService.clear()@@@51@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(1,onCacheCalled.get())@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38->16 [style = solid, label="mapper2"];
52->1 [style = bold, label=""];
23->28 [style = solid, label="writer"];
17->25 [style = bold, label=""];
3->53 [style = solid, label="wrap"];
29->4 [style = bold, label=""];
43->18 [style = solid, label="mapper1"];
30->13 [style = bold, label=""];
47->3 [style = bold, label=""];
33->3 [style = bold, label=""];
34->20 [style = bold, label=""];
21->0 [style = bold, label=""];
42->46 [style = bold, label=""];
22->19 [style = bold, label=""];
10->14 [style = bold, label=""];
16->10 [style = bold, label=""];
30->43 [style = bold, label=""];
35->9 [style = bold, label=""];
2->51 [style = bold, label=""];
26->38 [style = dashed, label="0"];
21->15 [style = bold, label=""];
37->1 [style = bold, label=""];
15->50 [style = bold, label=""];
50->44 [style = bold, label=""];
24->32 [style = bold, label=""];
28->47 [style = dashed, label="0"];
45->36 [style = bold, label=""];
25->40 [style = dashed, label="0"];
38->23 [style = bold, label=""];
14->34 [style = bold, label=""];
1->35 [style = bold, label=""];
9->30 [style = bold, label=""];
16->49 [style = solid, label="leafReaderContext"];
34->42 [style = bold, label=""];
13->43 [style = dashed, label="0"];
11->2 [style = dashed, label="0"];
49->34 [style = bold, label=""];
7->8 [style = bold, label=""];
5->17 [style = bold, label=""];
23->51 [style = solid, label="doc"];
3->53 [style = bold, label=""];
41->47 [style = solid, label="writer"];
13->39 [style = dashed, label="0"];
6->1 [style = bold, label=""];
3->28 [style = bold, label=""];
48->45 [style = bold, label=""];
10->14 [style = solid, label="leafReaderContext"];
2->3 [style = solid, label="doc"];
16->49 [style = bold, label=""];
13->26 [style = bold, label=""];
13->18 [style = solid, label="mapper1"];
0->22 [style = bold, label=""];
26->23 [style = bold, label=""];
19->27 [style = bold, label=""];
36->18 [style = bold, label=""];
51->47 [style = bold, label=""];
10->34 [style = solid, label="leafReaderContext"];
3->36 [style = solid, label="wrap"];
11->33 [style = bold, label=""];
25->15 [style = bold, label=""];
28->24 [style = bold, label=""];
32->36 [style = bold, label=""];
8->21 [style = bold, label=""];
30->39 [style = bold, label=""];
39->38 [style = bold, label=""];
43->41 [style = bold, label=""];
15->12 [style = bold, label=""];
47->53 [style = solid, label="open"];
23->2 [style = bold, label=""];
39->18 [style = solid, label="mapper1"];
26->16 [style = solid, label="mapper2"];
27->29 [style = bold, label=""];
20->7 [style = bold, label=""];
46->40 [style = bold, label=""];
14->49 [style = dashed, label="0"];
41->23 [style = bold, label=""];
4->5 [style = bold, label=""];
2->11 [style = bold, label=""];
12->31 [style = bold, label=""];
40->21 [style = bold, label=""];
53->48 [style = bold, label=""];
18->16 [style = bold, label=""];
}
