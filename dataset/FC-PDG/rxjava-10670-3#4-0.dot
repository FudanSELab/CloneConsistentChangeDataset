digraph {
8 [style = filled, label = "to.onSubscribe(Disposables.empty())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "to.onSubscribe(Disposables.empty())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "to.onSubscribe(Disposable.empty())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertTerminated2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "AssertionError ex@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "to.onError(new TestException())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTerminated2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "to.onError(new IOException())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertValuesOnlyThrowsWhenErrored['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "to = TestObserver.create()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestObserver<Integer> to = TestObserver.create()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "to.onSubscribe(Disposable.empty())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "to.assertValuesOnly()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "{}@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "{}@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "to.onError(new TestException())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "to.onComplete()@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "throw new RuntimeException()@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "to.assertError()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->4 [style = bold, label=""];
0->9 [style = bold, label=""];
8->16 [style = dashed, label="0"];
11->14 [style = bold, label=""];
2->1 [style = bold, label=""];
18->11 [style = bold, label=""];
12->11 [style = bold, label=""];
16->7 [style = bold, label=""];
9->17 [style = bold, label=""];
9->10 [style = bold, label=""];
17->19 [style = bold, label=""];
7->3 [style = bold, label=""];
8->7 [style = bold, label=""];
2->13 [style = bold, label=""];
0->14 [style = dashed, label="0"];
6->4 [style = bold, label=""];
11->0 [style = bold, label=""];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
15->11 [style = bold, label=""];
5->17 [style = dashed, label="0"];
6->19 [style = dashed, label="0"];
4->8 [style = bold, label=""];
14->9 [style = bold, label=""];
4->16 [style = bold, label=""];
13->4 [style = bold, label=""];
}
