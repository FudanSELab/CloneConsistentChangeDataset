digraph {
5 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "DirectoryReader reader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "loader = new Loader(reader,0)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "randomBoolean()@@@32@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TestEntity entity = new TestEntity(requestCacheStats,indexShard)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "TermQueryBuilder termQuery = new TermQueryBuilder(\"id\",\"0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "testInvalidate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "cache.invalidate(entity,reader,termBytes)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@47@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,newIndexWriterConfig())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "IOUtils.close(reader,writer,dir,cache)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ShardRequestCache requestCacheStats = new ShardRequestCache()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testBasicOperationsCache['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testInvalidate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "writer.addDocument(newDoc(0,\"foo\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(1,cache.count())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cache.clear(entity)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "reader.close()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "indexShard.set(false)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cache.cleanCache()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "IndicesRequestCache cache = new IndicesRequestCache(Settings.EMPTY)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(1,cache.count())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Directory dir = newDirectory()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(0,cache.count())@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Loader loader = new Loader(reader,0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "BytesReference termBytes = XContentHelper.toXContent(termQuery,XContentType.JSON,false)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(1,cache.count())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "loader = new Loader(reader,0)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->30 [style = solid, label="requestCacheStats"];
34->15 [style = solid, label="cache"];
34->20 [style = bold, label=""];
4->25 [style = bold, label=""];
30->56 [style = solid, label="entity"];
31->9 [style = bold, label=""];
2->15 [style = solid, label="writer"];
39->24 [style = bold, label=""];
13->15 [style = solid, label="reader"];
0->15 [style = bold, label=""];
24->31 [style = solid, label="entity"];
49->39 [style = bold, label=""];
21->31 [style = bold, label=""];
55->23 [style = bold, label=""];
3->19 [style = bold, label=""];
24->21 [style = bold, label=""];
29->14 [style = bold, label=""];
30->26 [style = solid, label="entity"];
14->11 [style = bold, label=""];
13->56 [style = solid, label="reader"];
41->13 [style = bold, label=""];
35->7 [style = bold, label=""];
11->18 [style = solid, label="indexShard"];
9->40 [style = bold, label=""];
8->28 [style = bold, label=""];
21->54 [style = solid, label="loader"];
46->38 [style = bold, label=""];
50->43 [style = bold, label=""];
37->36 [style = bold, label=""];
26->17 [style = bold, label=""];
47->48 [style = bold, label=""];
27->0 [style = bold, label=""];
40->52 [style = bold, label=""];
45->59 [style = bold, label=""];
24->3 [style = solid, label="entity"];
17->42 [style = bold, label=""];
22->23 [style = bold, label=""];
11->18 [style = bold, label=""];
21->9 [style = solid, label="loader"];
18->50 [style = bold, label=""];
52->12 [style = bold, label=""];
13->43 [style = solid, label="reader"];
10->44 [style = bold, label=""];
39->35 [style = bold, label=""];
30->3 [style = solid, label="entity"];
48->16 [style = bold, label=""];
43->57 [style = dashed, label="0"];
57->6 [style = bold, label=""];
12->33 [style = bold, label=""];
1->26 [style = solid, label="loader"];
44->37 [style = bold, label=""];
1->56 [style = bold, label=""];
45->46 [style = bold, label=""];
2->41 [style = bold, label=""];
54->40 [style = bold, label=""];
2->13 [style = solid, label="writer"];
14->54 [style = solid, label="termBytes"];
35->7 [style = dotted, label="true"];
20->15 [style = solid, label="dir"];
28->49 [style = bold, label=""];
24->54 [style = solid, label="entity"];
38->27 [style = bold, label=""];
14->57 [style = solid, label="termBytes"];
13->26 [style = solid, label="reader"];
33->5 [style = bold, label=""];
18->43 [style = solid, label="entity"];
32->30 [style = bold, label=""];
42->4 [style = bold, label=""];
13->21 [style = solid, label="reader"];
19->45 [style = bold, label=""];
13->54 [style = solid, label="reader"];
14->31 [style = solid, label="termBytes"];
13->9 [style = solid, label="reader"];
58->23 [style = bold, label=""];
50->57 [style = solid, label="loader"];
6->10 [style = bold, label=""];
50->57 [style = bold, label=""];
20->2 [style = solid, label="dir"];
11->30 [style = solid, label="indexShard"];
23->24 [style = solid, label="requestCacheStats"];
18->57 [style = solid, label="entity"];
7->19 [style = bold, label=""];
60->27 [style = bold, label=""];
35->53 [style = bold, label=""];
31->54 [style = bold, label=""];
23->18 [style = solid, label="requestCacheStats"];
30->1 [style = bold, label=""];
11->24 [style = solid, label="indexShard"];
13->57 [style = solid, label="reader"];
53->3 [style = bold, label=""];
59->38 [style = bold, label=""];
36->32 [style = bold, label=""];
24->9 [style = solid, label="entity"];
35->53 [style = dotted, label="false"];
38->60 [style = bold, label=""];
1->26 [style = bold, label=""];
35->3 [style = dotted, label="false"];
43->6 [style = bold, label=""];
56->17 [style = bold, label=""];
13->31 [style = solid, label="reader"];
1->56 [style = solid, label="loader"];
20->2 [style = bold, label=""];
5->47 [style = bold, label=""];
13->29 [style = bold, label=""];
13->50 [style = solid, label="reader"];
14->9 [style = solid, label="termBytes"];
14->26 [style = solid, label="termBytes"];
23->34 [style = bold, label=""];
46->59 [style = dashed, label="0"];
25->8 [style = bold, label=""];
16->35 [style = bold, label=""];
14->56 [style = solid, label="termBytes"];
14->43 [style = solid, label="termBytes"];
9->54 [style = dashed, label="0"];
50->43 [style = solid, label="loader"];
13->1 [style = solid, label="reader"];
29->14 [style = solid, label="termQuery"];
26->56 [style = dashed, label="0"];
15->51 [style = bold, label=""];
}
