digraph {
21 [style = filled, label = "getProfiledSegment['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "List<QueryResult.Series> series = client.queryForSeries(query)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "!Strings.isNullOrEmpty(base64)@@@20@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return null@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String segmentId@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "series == null || series.isEmpty()@@@5@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String base64 = (String)values.get(9)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "segmentRecord.setStartTime((long)values.get(5))@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "segmentRecord.setDataBinary(Base64.getDecoder().decode(base64))@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<Object> values = series.get(0).getValues().get(0)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "segmentRecord.setSegmentId((String)values.get(1))@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "getProfiledSegment['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "segmentRecord.setLatency((int)values.get(7))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "segmentRecord.setIsError((int)values.get(8))@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "segmentRecord.setTraceId((String)values.get(2))@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return segmentRecord@@@23@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "segmentRecord.setVersion((int)values.get(10))@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "segmentRecord.setServiceId((String)values.get(3))@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String traceId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SegmentRecord segmentRecord = new SegmentRecord()@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "WhereQueryImpl query = select().column(SegmentRecord.SEGMENT_ID).column(SegmentRecord.TRACE_ID).column(SegmentRecord.SERVICE_ID).column(SegmentRecord.ENDPOINT_NAME).column(SegmentRecord.START_TIME).column(SegmentRecord.END_TIME).column(SegmentRecord.LATENCY).column(SegmentRecord.IS_ERROR).column(SegmentRecord.DATA_BINARY).column(SegmentRecord.VERSION).from(client.getDatabase(),SegmentRecord.INDEX_NAME).where().and(eq(SegmentRecord.SEGMENT_ID,segmentId))@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "queryByTraceId['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "segmentRecord.setEndpointName((String)values.get(4))@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "segmentRecord.setEndTime((long)values.get(6))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->14 [style = bold, label=""];
22->23 [style = dotted, label="true"];
19->6 [style = bold, label=""];
11->12 [style = bold, label=""];
1->9 [style = bold, label=""];
7->9 [style = bold, label=""];
1->7 [style = dotted, label="true"];
6->13 [style = bold, label=""];
13->8 [style = dotted, label="true"];
14->0 [style = bold, label=""];
21->10 [style = dotted, label="true"];
0->11 [style = bold, label=""];
10->19 [style = solid, label="segmentId"];
6->13 [style = solid, label="series"];
5->4 [style = bold, label=""];
3->20 [style = bold, label=""];
4->2 [style = bold, label=""];
20->1 [style = bold, label=""];
12->17 [style = bold, label=""];
17->15 [style = bold, label=""];
18->19 [style = bold, label=""];
16->3 [style = bold, label=""];
19->6 [style = solid, label="query"];
15->5 [style = bold, label=""];
18->10 [style = dotted, label="true"];
2->16 [style = bold, label=""];
0->9 [style = solid, label="segmentRecord"];
13->8 [style = bold, label=""];
1->7 [style = bold, label=""];
10->23 [style = dashed, label="0"];
13->14 [style = bold, label=""];
20->7 [style = solid, label="base64"];
}
