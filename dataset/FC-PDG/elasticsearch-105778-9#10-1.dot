digraph {
19 [style = filled, label = "testExecuteVerboseItem['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testExecuteVerboseItem['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(simulateDocumentBaseResult.getIngestDocument(),equalTo(ingestDocument))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getFailure(),nullValue())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Pipeline pipeline = new Pipeline(\"_id\",\"_description\",version,new CompoundProcessor(processor,processor))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(simulateDocumentBaseResult.getFailure(),nullValue())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().size(),equalTo(2))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(processor.getInvokedCounter(),equalTo(2))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(0),pipeline.getId(),ingestDocument)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "SimulateDocumentVerboseResult simulateDocumentVerboseResult = (SimulateDocumentVerboseResult)actualItemResponse@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult)actualItemResponse@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(actualItemResponse,instanceOf())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "latch.await()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TestProcessor processor = new TestProcessor(\"test-id\",\"mock\",null,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getProcessorTag(),equalTo(\"test-id\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SimulateDocumentResult actualItemResponse = holder.getAcquire()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TestProcessor processor = new TestProcessor(\"processor_0\",\"mock\",null,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "executionService.executeDocument(pipeline,ingestDocument,true,null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(actualItemResponse,instanceOf())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "executionService.executeDocument(pipeline,ingestDocument,false,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getFailure(),nullValue())@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(1),pipeline.getId(),ingestDocument)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testExecuteItem['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Pipeline pipeline = new Pipeline(\"_id\",\"_description\",version,null,new CompoundProcessor(processor,processor))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getIngestDocument().getSourceAndMetadata(),not(sameInstance(simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument().getSourceAndMetadata())))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getProcessorTag(),equalTo(\"test-id\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
15->2 [style = bold, label=""];
16->0 [style = bold, label=""];
0->9 [style = bold, label=""];
15->20 [style = dashed, label="0"];
7->23 [style = dashed, label="0"];
4->24 [style = solid, label="actualItemResponse"];
4->22 [style = solid, label="actualItemResponse"];
17->1 [style = bold, label=""];
15->21 [style = solid, label="pipeline"];
17->24 [style = dashed, label="0"];
25->23 [style = bold, label=""];
6->18 [style = bold, label=""];
1->27 [style = dashed, label="0"];
12->11 [style = bold, label=""];
7->15 [style = solid, label="processor"];
23->15 [style = bold, label=""];
11->22 [style = dashed, label="0"];
10->21 [style = bold, label=""];
7->20 [style = bold, label=""];
15->13 [style = solid, label="pipeline"];
2->10 [style = bold, label=""];
20->2 [style = bold, label=""];
7->20 [style = solid, label="processor"];
21->5 [style = bold, label=""];
4->11 [style = solid, label="actualItemResponse"];
20->13 [style = solid, label="pipeline"];
1->6 [style = bold, label=""];
13->21 [style = dashed, label="0"];
10->13 [style = bold, label=""];
3->7 [style = bold, label=""];
6->26 [style = dashed, label="0"];
5->4 [style = bold, label=""];
4->17 [style = solid, label="actualItemResponse"];
13->5 [style = bold, label=""];
4->12 [style = bold, label=""];
7->15 [style = bold, label=""];
11->17 [style = bold, label=""];
14->8 [style = bold, label=""];
22->24 [style = bold, label=""];
19->7 [style = bold, label=""];
18->14 [style = bold, label=""];
24->27 [style = bold, label=""];
12->22 [style = bold, label=""];
23->15 [style = solid, label="processor"];
27->26 [style = bold, label=""];
}
