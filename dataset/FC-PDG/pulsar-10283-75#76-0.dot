digraph {
88 [style = filled, label = "mockNamespaces = mock()@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "verify(mockNamespaces).setPersistence(\"myprop/clust/ns1\",new PersistencePolicies(2,1,1,100.0d))@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "mockNamespaces = mock()@@@137@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
210 [style = filled, label = "namespaces.run(split(\"set-dispatch-rate myprop/clust/ns1 -md -1 -bd -1 -dt 2\"))@@@191@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
196 [style = filled, label = "verify(mockNamespaces).getInactiveTopicPolicies(\"myprop/clust/ns1\")@@@132@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
219 [style = filled, label = "namespaces.run(split(\"get-max-consumers-per-topic myprop/clust/ns1\"))@@@168@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "namespaces.run(split(\"get-delayed-delivery myprop/clust/ns1\"))@@@125@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "verify(mockNamespaces).clearOffloadDeleteLag(\"myprop/clust/ns1\")@@@228@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
162 [style = filled, label = "namespaces.run(split(\"get-compaction-threshold myprop/clust/ns1\"))@@@215@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
171 [style = filled, label = "namespaces.run(split(\"clear-backlog myprop/clust/ns1 -force\"))@@@135@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "namespaces.run(split(\"get-message-ttl myprop/clust/ns1\"))@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@148@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
204 [style = filled, label = "Lookup mockLookup = mock()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "verify(mockNamespaces).getMaxUnackedMessagesPerConsumer(\"myprop/clust/ns1\")@@@185@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "namespaces.run(split(\"split-bundle myprop/clust/ns1 -b 0x00000000_0xffffffff\"))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
180 [style = filled, label = "verify(mockNamespaces).getSubscriptionTypesEnabled(\"myprop/clust/ns1\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
186 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "mockNamespaces = mock()@@@188@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
158 [style = filled, label = "namespaces.run(split(\"set-max-producers-per-topic myprop/clust/ns1 -p 1\"))@@@164@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "verify(mockNamespaces).getCompactionThreshold(\"myprop/clust/ns1\")@@@216@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
229 [style = filled, label = "verify(mockNamespaces).setAutoTopicCreation(\"myprop/clust/ns1\",new AutoTopicCreationOverride(true,TopicType.NON_PARTITIONED.toString(),null))@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
145 [style = filled, label = "namespaces.run(split(\"remove-retention myprop/clust/ns1\"))@@@121@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "namespaces.run(split(\"get-publish-rate myprop/clust/ns1\"))@@@199@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "verify(mockNamespaces).unsubscribeNamespace(\"myprop/clust/ns1\",\"my-sub\")@@@153@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "verify(mockNamespaces).setSubscriptionExpirationTime(\"myprop/clust/ns1\",60)@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
236 [style = filled, label = "verify(mockNamespaces).removeRetention(\"myprop/clust/ns1\")@@@122@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
230 [style = filled, label = "mockNamespaces = mock()@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "namespaces.run(split(\"remove-max-producers-per-topic myprop/clust/ns1\"))@@@166@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "verify(mockNamespaces).clearNamespaceBacklogForSubscription(\"myprop/clust/ns1\",\"my-sub\")@@@146@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "namespaces.run(split(\"set-bookie-affinity-group myprop/clust/ns1 --primary-group test1 --secondary-group test2\"))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "verify(mockNamespaces).getPolicies(\"myprop/clust/ns1\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "verify(mockNamespaces).removeSubscriptionDispatchRate(\"myprop/clust/ns1\")@@@214@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "verify(mockNamespaces).getNamespaceMessageTTL(\"myprop/clust/ns1\")@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
189 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
190 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@156@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
220 [style = filled, label = "namespaces.run(split(\"set-clusters myprop/clust/ns1 -c use,usw,usc\"))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verify(mockNamespaces).removeMaxConsumersPerTopic(\"myprop/clust/ns1\")@@@173@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
223 [style = filled, label = "namespaces.run(split(\"policies myprop/clust/ns1\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
240 [style = filled, label = "verify(mockNamespaces).removeDispatchRate(\"myprop/clust/ns1\")@@@196@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
94 [style = filled, label = "verify(mockNamespaces).getNamespaces(\"myprop\",\"clust\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "verify(mockNamespaces).setMaxConsumersPerTopic(\"myprop/clust/ns1\",2)@@@171@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "verify(mockNamespaces).removeOffloadPolicies(\"myprop/clust/ns1\")@@@232@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
172 [style = filled, label = "namespaces.run(split(\"set-auto-subscription-creation myprop/clust/ns1 -e\"))@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
161 [style = filled, label = "namespaces.run(split(\"get-offload-policies myprop/clust/ns1\"))@@@233@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
185 [style = filled, label = "verify(mockNamespaces).getNamespaces(\"myprop\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "namespaces.run(split(\"set-offload-deletion-lag myprop/clust/ns1 -l 1d\"))@@@225@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "namespaces.run(split(\"remove-deduplication-snapshot-interval myprop/clust/ns1\"))@@@241@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
154 [style = filled, label = "namespaces.run(split(\"get-clusters myprop/clust/ns1\"))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
212 [style = filled, label = "verify(mockNamespaces).getPersistence(\"myprop/clust/ns1\")@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
226 [style = filled, label = "mockNamespaces = mock()@@@159@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@190@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "verify(mockNamespaces).getNamespaceReplicationClusters(\"myprop/clust/ns1\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "namespaces.run(split(\"set-backlog-quota myprop/clust/ns1 -p producer_exception -l 10G\"))@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "namespaces.run(split(\"set-replicator-dispatch-rate myprop/clust/ns1 -md 10 -bd 11 -dt 12\"))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "namespaces.run(split(\"remove-offload-policies myprop/clust/ns1\"))@@@231@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
214 [style = filled, label = "verify(mockNamespaces).removeMaxUnackedMessagesPerSubscription(\"myprop/clust/ns1\")@@@183@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "namespaces.run(split(\"get-replicator-dispatch-rate myprop/clust/ns1\"))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "verify(mockNamespaces).getBacklogQuotaMap(\"myprop/clust/ns1\")@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "verify(mockNamespaces).removeDelayedDeliveryMessages(\"myprop/clust/ns1\")@@@128@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "verify(mockNamespaces).setSubscriptionDispatchRate(\"myprop/clust/ns1\",new DispatchRate(-1,-1,2))@@@210@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
207 [style = filled, label = "verify(mockNamespaces).getOffloadThreshold(\"myprop/clust/ns1\")@@@220@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "namespaces.run(split(\"remove-max-subscriptions-per-topic myprop/clust/ns1\"))@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "namespaces.run(split(\"remove-message-ttl myprop/clust/ns1\"))@@@235@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
216 [style = filled, label = "verify(mockNamespaces).setSubscribeRate(\"myprop/clust/ns1\",new SubscribeRate(2,60))@@@204@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "namespaces.run(split(\"get-max-producers-per-topic myprop/clust/ns1\"))@@@162@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "verify(mockNamespaces).removePersistence(\"myprop/clust/ns1\")@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
192 [style = filled, label = "namespaces.run(split(\"get-subscribe-rate myprop/clust/ns1\"))@@@205@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "verify(mockNamespaces).setAutoSubscriptionCreation(\"myprop/clust/ns1\",new AutoSubscriptionCreationOverride(true))@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "namespaces.run(split(\"get-deduplication-snapshot-interval myprop/clust/ns1\"))@@@239@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "namespaces.run(split(\"set-offload-policies myprop/clust/ns1 -r test-region -d aws-s3 -b test-bucket -e http://test.endpoint -mbs 32M -rbs 5M -oat 10M -oae 10s -orp tiered-storage-first\"))@@@229@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
147 [style = filled, label = "namespaces.run(split(\"set-max-unacked-messages-per-consumer myprop/clust/ns1 -c 3\"))@@@186@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
198 [style = filled, label = "verify(mockNamespaces).clearNamespaceBacklog(\"myprop/clust/ns1\")@@@136@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
211 [style = filled, label = "namespaces.run(split(\"set-backlog-quota myprop/clust/ns1 -p producer_exception -l 10K\"))@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "namespaces.run(split(\"list myprop\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
218 [style = filled, label = "verify(mockNamespaces).unsubscribeNamespaceBundle(\"myprop/clust/ns1\",\"0x80000000_0xffffffff\",\"my-sub\")@@@158@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@149@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
222 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@144@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
241 [style = filled, label = "namespaces.run(split(\"remove-dispatch-rate myprop/clust/ns1\"))@@@195@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "verify(mockNamespaces).getSubscriptionDispatchRate(\"myprop/clust/ns1\")@@@212@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "verify(mockNamespaces).setMaxUnackedMessagesPerConsumer(\"myprop/clust/ns1\",3)@@@187@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
235 [style = filled, label = "namespaces.run(split(\"delete-bookie-affinity-group myprop/clust/ns1\"))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
238 [style = filled, label = "namespaces.run(split(\"set-persistence myprop/clust/ns1 -e 2 -w 1 -a 1 -r 100.0\"))@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@139@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
194 [style = filled, label = "Namespaces mockNamespaces = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "namespaces.run(split(\"permissions myprop/clust/ns1\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "namespaces.run(split(\"set-delayed-delivery myprop/clust/ns1 -e -t 1s\"))@@@123@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "namespaces.run(split(\"unsubscribe -s my-sub myprop/clust/ns1\"))@@@152@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
133 [style = filled, label = "verify(mockNamespaces).setDeduplicationSnapshotInterval(\"myprop/clust/ns1\",1000)@@@238@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
177 [style = filled, label = "verify(mockNamespaces).grantPermissionOnNamespace(\"myprop/clust/ns1\",\"role1\",EnumSet.of(AuthAction.produce,AuthAction.consume))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "namespaces.run(split(\"set-deduplication-snapshot-interval myprop/clust/ns1 -i 1000\"))@@@237@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
206 [style = filled, label = "verify(mockNamespaces).setOffloadDeleteLag(\"myprop/clust/ns1\",24 * 60 * 60,TimeUnit.SECONDS)@@@226@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "verify(mockNamespaces).setRetention(\"myprop/clust/ns1\",new RetentionPolicies(60,1))@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "namespaces.run(split(\"delete-anti-affinity-group myprop/clust/ns1 \"))@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
155 [style = filled, label = "verify(mockNamespaces).deleteNamespaceAntiAffinityGroup(\"myprop/clust/ns1\")@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
217 [style = filled, label = "namespaces.run(split(\"set-anti-affinity-group myprop/clust/ns1 -g group\"))@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
139 [style = filled, label = "namespaces.run(split(\"unsubscribe -b 0x80000000_0xffffffff -s my-sub myprop/clust/ns1\"))@@@157@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "verify(mockNamespaces).setBacklogQuota(\"myprop/clust/ns1\",new BacklogQuota(10 * 1024,RetentionPolicy.producer_exception))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
179 [style = filled, label = "namespaces.run(split(\"get-max-subscriptions-per-topic myprop/clust/ns1\"))@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "verify(mockNamespaces).setReplicatorDispatchRate(\"myprop/clust/ns1\",new DispatchRate(10,11,12))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "verify(mockNamespaces).setNamespaceReplicationClusters(\"myprop/clust/ns1\",Sets.newHashSet(\"use\",\"usw\",\"usc\"))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
150 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
152 [style = filled, label = "namespaces.run(split(\"set-compaction-threshold myprop/clust/ns1 -t 1G\"))@@@217@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
244 [style = filled, label = "verify(mockNamespaces).createNamespace(\"my-prop/my-namespace\",policies)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
126 [style = filled, label = "verify(mockNamespaces).getSubscribeRate(\"myprop/clust/ns1\")@@@206@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "mockNamespaces = mock()@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
160 [style = filled, label = "namespaces.run(split(\"set-subscription-types-enabled myprop/clust/ns1 -t Shared,Failover\"))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
166 [style = filled, label = "namespaces.run(split(\"unload myprop/clust/ns1 -b 0x80000000_0xffffffff\"))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
243 [style = filled, label = "Policies policies = new Policies()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "namespaces.run(split(\"remove-auto-topic-creation myprop/clust/ns1\"))@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@160@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
237 [style = filled, label = "namespaces.run(split(\"remove-max-unacked-messages-per-subscription myprop/clust/ns1\"))@@@182@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
193 [style = filled, label = "verify(mockNamespaces).getMaxSubscriptionsPerTopic(\"myprop/clust/ns1\")@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@155@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
164 [style = filled, label = "verify(mockNamespaces).setBacklogQuota(\"myprop/clust/ns1\",new BacklogQuota(10 * 1024 * 1024,RetentionPolicy.producer_exception))@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
170 [style = filled, label = "mockNamespaces = mock()@@@142@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
209 [style = filled, label = "verify(mockNamespaces).removeNamespaceMessageTTL(\"myprop/clust/ns1\")@@@236@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "verify(mockNamespaces).removeAutoTopicCreation(\"myprop/clust/ns1\")@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "verify(mockNamespaces).getMaxConsumersPerSubscription(\"myprop/clust/ns1\")@@@175@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "namespaces.run(split(\"topics myprop/clust/ns1\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "PulsarAdmin admin = Mockito.mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
246 [style = filled, label = "namespaces.run(split(\"create my-prop/my-namespace\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "verify(mockNamespaces).getPermissions(\"myprop/clust/ns1\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
224 [style = filled, label = "namespaces.run(split(\"set-max-subscriptions-per-topic myprop/clust/ns1 -m 300\"))@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
221 [style = filled, label = "verify(mockNamespaces).getDelayedDelivery(\"myprop/clust/ns1\")@@@126@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "namespaces.run(split(\"get-max-unacked-messages-per-subscription myprop/clust/ns1\"))@@@178@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "namespaces.run(split(\"set-inactive-topic-policies myprop/clust/ns1 -e -t 1s -m delete_when_no_subscriptions\"))@@@129@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@143@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
143 [style = filled, label = "verify(mockNamespaces).removeMaxSubscriptionsPerTopic(\"myprop/clust/ns1\")@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
203 [style = filled, label = "verify(mockNamespaces).setNamespaceAntiAffinityGroup(\"myprop/clust/ns1\",\"group\")@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "namespaces.run(split(\"remove-inactive-topic-policies myprop/clust/ns1\"))@@@133@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
156 [style = filled, label = "namespaces.run(split(\"grant-permission myprop/clust/ns1 --role role1 --actions produce,consume\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
178 [style = filled, label = "verify(mockNamespaces).setDispatchRate(\"myprop/clust/ns1\",new DispatchRate(-1,-1,2))@@@192@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "verify(mockNamespaces).setMaxUnackedMessagesPerSubscription(\"myprop/clust/ns1\",3)@@@181@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
176 [style = filled, label = "namespaces.run(split(\"set-backlog-quota myprop/clust/ns1 -p producer_request_hold -l 10\"))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
228 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "verify(mockNamespaces).setDelayedDeliveryMessages(\"myprop/clust/ns1\",new DelayedDeliveryPolicies(1000,true))@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
144 [style = filled, label = "namespaces.run(split(\"remove-auto-subscription-creation myprop/clust/ns1\"))@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
187 [style = filled, label = "CmdNamespaces namespaces = new CmdNamespaces(null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
151 [style = filled, label = "verify(mockNamespaces).removePublishRate(\"myprop/clust/ns1\")@@@202@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "namespaces.run(split(\"set-subscription-expiration-time myprop/clust/ns1 -t 60\"))@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
197 [style = filled, label = "namespaces.run(split(\"revoke-permission myprop/clust/ns1 --role role1\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "namespaces.run(split(\"get-offload-threshold myprop/clust/ns1\"))@@@219@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
201 [style = filled, label = "verify(mockNamespaces).unloadNamespaceBundle(\"myprop/clust/ns1\",\"0x80000000_0xffffffff\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "namespaces.run(split(\"remove-subscribe-rate myprop/clust/ns1\"))@@@207@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "verify(mockNamespaces).setInactiveTopicPolicies(\"myprop/clust/ns1\",new InactiveTopicPolicies(InactiveTopicDeleteMode.delete_when_no_subscriptions,1,true))@@@130@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
137 [style = filled, label = "namespaces.run(split(\"get-max-unacked-messages-per-consumer myprop/clust/ns1\"))@@@184@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "mockNamespaces = mock()@@@147@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "verify(mockNamespaces).setOffloadThreshold(\"myprop/clust/ns1\",1024 * 1024 * 1024)@@@222@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "verify(mockNamespaces).setBookieAffinityGroup(\"myprop/clust/ns1\",new BookieAffinityGroupData(\"test1\",\"test2\"))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
232 [style = filled, label = "namespaces.run(split(\"get-offload-deletion-lag myprop/clust/ns1\"))@@@223@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "namespaces.run(split(\"delete myprop/clust/ns1\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(mockNamespaces).getReplicatorDispatchRate(\"myprop/clust/ns1\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "namespaces.run(split(\"get-max-consumers-per-subscription myprop/clust/ns1\"))@@@174@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "mockNamespaces = mock()@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
191 [style = filled, label = "verify(mockNamespaces).removeDeduplicationStatus(\"myprop/clust/ns1\")@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "verify(mockNamespaces).getDispatchRate(\"myprop/clust/ns1\")@@@194@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "verify(mockNamespaces).getTopics(\"myprop/clust/ns1\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "verify(mockNamespaces).removeMaxProducersPerTopic(\"myprop/clust/ns1\")@@@167@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "verify(mockNamespaces).setOffloadPolicies(\"myprop/clust/ns1\",OffloadPolicies.create(\"aws-s3\",\"test-region\",\"test-bucket\",\"http://test.endpoint\",null,null,32 * 1024 * 1024,5 * 1024 * 1024,10 * 1024 * 1024L,10000L,OffloadPolicies.OffloadedReadPriority.TIERED_STORAGE_FIRST))@@@230@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "namespaces.run(split(\"remove-deduplication myprop/clust/ns1\"))@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
184 [style = filled, label = "namespaces.run(split(\"remove-replicator-dispatch-rate myprop/clust/ns1\"))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "namespaces.run(split(\"remove-delayed-delivery myprop/clust/ns1\"))@@@127@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
239 [style = filled, label = "namespaces['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
202 [style = filled, label = "verify(mockNamespaces).unload(\"myprop/clust/ns1\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "verify(mockNamespaces).getBookieAffinityGroup(\"myprop/clust/ns1\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "mockNamespaces = mock()@@@154@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "when(admin.lookups()).thenReturn(mockLookup)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
182 [style = filled, label = "namespaces.run(split(\"remove-max-consumers-per-topic myprop/clust/ns1\"))@@@172@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
188 [style = filled, label = "verify(mockNamespaces).setCompactionThreshold(\"myprop/clust/ns1\",1024 * 1024 * 1024)@@@218@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
195 [style = filled, label = "verify(mockNamespaces).setBacklogQuota(\"myprop/clust/ns1\",new BacklogQuota(10,RetentionPolicy.producer_request_hold))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "verify(mockNamespaces).setMaxSubscriptionsPerTopic(\"myprop/clust/ns1\",300)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
136 [style = filled, label = "namespaces.run(split(\"set-publish-rate myprop/clust/ns1 -m 10 -b 20\"))@@@197@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(mockNamespaces).getOffloadDeleteLagMs(\"myprop/clust/ns1\")@@@224@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
163 [style = filled, label = "verify(mockNamespaces).revokePermissionsOnNamespace(\"myprop/clust/ns1\",\"role1\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "verify(mockNamespaces).getNamespaceAntiAffinityGroup(\"myprop/clust/ns1\")@@@112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "verify(mockNamespaces).setBacklogQuota(\"myprop/clust/ns1\",new BacklogQuota(10l * 1024 * 1024 * 1024,RetentionPolicy.producer_exception))@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "verify(mockNamespaces).setMaxConsumersPerSubscription(\"myprop/clust/ns1\",3)@@@177@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "namespaces.run(split(\"remove-publish-rate myprop/clust/ns1\"))@@@201@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "namespaces.run(split(\"remove-persistence myprop/clust/ns1\"))@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "namespaces.run(split(\"list-cluster myprop/clust\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "namespaces.run(split(\"set-max-consumers-per-subscription myprop/clust/ns1 -c 3\"))@@@176@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "namespaces.run(split(\"get-dispatch-rate myprop/clust/ns1\"))@@@193@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "namespaces.run(split(\"set-deduplication myprop/clust/ns1 --enable\"))@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
199 [style = filled, label = "namespaces.run(split(\"set-max-unacked-messages-per-subscription myprop/clust/ns1 -c 3\"))@@@180@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
227 [style = filled, label = "verify(mockNamespaces).removeDeduplicationSnapshotInterval(\"myprop/clust/ns1\")@@@242@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
233 [style = filled, label = "verify(mockNamespaces).getSubscriptionExpirationTime(\"myprop/clust/ns1\")@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "namespaces.run(split(\"get-inactive-topic-policies myprop/clust/ns1\"))@@@131@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
173 [style = filled, label = "verify(mockNamespaces).getDeduplicationSnapshotInterval(\"myprop/clust/ns1\")@@@240@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
245 [style = filled, label = "namespacesCreate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
157 [style = filled, label = "verify(mockNamespaces).deleteNamespace(\"myprop/clust/ns1\",false)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "namespaces.run(split(\"remove-subscription-dispatch-rate myprop/clust/ns1\"))@@@213@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
165 [style = filled, label = "namespaces.run(split(\"get-deduplication myprop/clust/ns1\"))@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
200 [style = filled, label = "namespaces.run(split(\"set-message-ttl myprop/clust/ns1 -ttl 300\"))@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
141 [style = filled, label = "verify(mockNamespaces).clearNamespaceBundleBacklogForSubscription(\"myprop/clust/ns1\",\"0x80000000_0xffffffff\",\"my-sub\")@@@151@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "namespaces.run(split(\"get-retention myprop/clust/ns1\"))@@@119@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
208 [style = filled, label = "verify(mockNamespaces).getOffloadPolicies(\"myprop/clust/ns1\")@@@234@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
181 [style = filled, label = "namespaces.run(split(\"get-subscription-types-enabled myprop/clust/ns1\"))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "namespaces['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
159 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
175 [style = filled, label = "namespaces.run(split(\"set-max-consumers-per-topic myprop/clust/ns1 -c 2\"))@@@170@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@138@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@161@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
183 [style = filled, label = "verify(mockNamespaces).removeReplicatorDispatchRate(\"myprop/clust/ns1\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
213 [style = filled, label = "verify(mockNamespaces).setDeduplicationStatus(\"myprop/clust/ns1\",true)@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
205 [style = filled, label = "verify(mockNamespaces).createNamespace(\"myprop/clust/ns1\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@189@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
234 [style = filled, label = "namespaces.run(split(\"get-subscription-dispatch-rate myprop/clust/ns1\"))@@@211@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "namespaces.run(split(\"set-backlog-quota myprop/clust/ns1 -p producer_exception -l 10M\"))@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "namespaces.run(split(\"set-subscribe-rate myprop/clust/ns1 -sr 2 -st 60\"))@@@203@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
215 [style = filled, label = "namespaces.run(split(\"clear-backlog -b 0x80000000_0xffffffff myprop/clust/ns1 -force\"))@@@140@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "verify(mockNamespaces).getAntiAffinityNamespaces(\"dummy\",\"cluster\",\"group\")@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(mockNamespaces).getMaxUnackedMessagesPerSubscription(\"myprop/clust/ns1\")@@@179@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "verify(mockNamespaces).setSubscriptionTypesEnabled(\"myprop/clust/ns1\",Sets.newHashSet(SubscriptionType.Shared,SubscriptionType.Failover))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "verify(mockNamespaces).setPublishRate(\"myprop/clust/ns1\",new PublishRate(10,20))@@@198@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "namespaces.run(split(\"set-subscription-dispatch-rate myprop/clust/ns1 -md -1 -bd -1 -dt 2\"))@@@209@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
153 [style = filled, label = "namespaces.run(split(\"get-backlog-quotas myprop/clust/ns1\"))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "namespaces.run(split(\"clear-backlog -s my-sub myprop/clust/ns1 -force\"))@@@145@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
231 [style = filled, label = "namespaces.run(split(\"set-auto-topic-creation myprop/clust/ns1 -e -t non-partitioned\"))@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
242 [style = filled, label = "policies.bundles = null@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "namespaces.run(split(\"get-subscription-expiration-time myprop/clust/ns1\"))@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "namespaces.run(split(\"clear-backlog -b 0x80000000_0xffffffff -s my-sub myprop/clust/ns1 -force\"))@@@150@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
142 [style = filled, label = "verify(mockNamespaces).deleteBookieAffinityGroup(\"myprop/clust/ns1\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
167 [style = filled, label = "verify(mockNamespaces).removeSubscribeRate(\"myprop/clust/ns1\")@@@208@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "verify(mockNamespaces).getPublishRate(\"myprop/clust/ns1\")@@@200@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "verify(mockNamespaces).getRetention(\"myprop/clust/ns1\")@@@120@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "namespaces.run(split(\"clear-offload-deletion-lag myprop/clust/ns1\"))@@@227@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "namespaces.run(split(\"get-persistence myprop/clust/ns1\"))@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "namespaces.run(split(\"get-anti-affinity-namespaces -p dummy -c cluster -g group\"))@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "verify(mockNamespaces).clearNamespaceBundleBacklog(\"myprop/clust/ns1\",\"0x80000000_0xffffffff\")@@@141@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
134 [style = filled, label = "namespaces.run(split(\"create myprop/clust/ns1\"))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "verify(mockNamespaces).removeInactiveTopicPolicies(\"myprop/clust/ns1\")@@@134@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "verify(mockNamespaces).setNamespaceMessageTTL(\"myprop/clust/ns1\",300)@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
169 [style = filled, label = "namespaces.run(split(\"set-offload-threshold myprop/clust/ns1 -s 1G\"))@@@221@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
225 [style = filled, label = "verify(mockNamespaces).getDeduplicationStatus(\"myprop/clust/ns1\")@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "verify(mockNamespaces).setMaxProducersPerTopic(\"myprop/clust/ns1\",1)@@@165@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
168 [style = filled, label = "namespaces.run(split(\"get-bookie-affinity-group myprop/clust/ns1\"))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "verify(mockNamespaces).getMaxProducersPerTopic(\"myprop/clust/ns1\")@@@163@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "verify(mockNamespaces).splitNamespaceBundle(\"myprop/clust/ns1\",\"0x00000000_0xffffffff\",false,null)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "namespaces.run(split(\"set-retention myprop/clust/ns1 -t 1h -s 1M\"))@@@117@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "namespaces.run(split(\"unload myprop/clust/ns1\"))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "namespaces.run(split(\"get-anti-affinity-group myprop/clust/ns1\"))@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
174 [style = filled, label = "verify(mockNamespaces).removeAutoSubscriptionCreation(\"myprop/clust/ns1\")@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(mockNamespaces).getMaxConsumersPerTopic(\"myprop/clust/ns1\")@@@169@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84->106 [style = bold, label=""];
44->154 [style = bold, label=""];
97->144 [style = bold, label=""];
233->217 [style = bold, label=""];
7->80 [style = bold, label=""];
163->220 [style = bold, label=""];
88->115 [style = solid, label="mockNamespaces"];
119->113 [style = bold, label=""];
10->227 [style = bold, label=""];
170->120 [style = bold, label=""];
0->199 [style = bold, label=""];
59->83 [style = bold, label=""];
194->39 [style = bold, label=""];
54->77 [style = bold, label=""];
205->125 [style = bold, label=""];
241->240 [style = bold, label=""];
101->60 [style = bold, label=""];
153->45 [style = bold, label=""];
172->97 [style = bold, label=""];
120->222 [style = bold, label=""];
201->124 [style = bold, label=""];
148->187 [style = bold, label=""];
142->8 [style = bold, label=""];
27->190 [style = bold, label=""];
190->139 [style = bold, label=""];
196->101 [style = bold, label=""];
55->78 [style = bold, label=""];
85->134 [style = bold, label=""];
209->33 [style = bold, label=""];
154->109 [style = bold, label=""];
104->156 [style = bold, label=""];
17->138 [style = bold, label=""];
141->32 [style = bold, label=""];
204->148 [style = bold, label=""];
69->170 [style = bold, label=""];
113->179 [style = bold, label=""];
206->122 [style = bold, label=""];
71->92 [style = bold, label=""];
99->164 [style = bold, label=""];
226->56 [style = solid, label="mockNamespaces"];
15->155 [style = bold, label=""];
217->203 [style = bold, label=""];
112->135 [style = bold, label=""];
182->2 [style = bold, label=""];
35->37 [style = bold, label=""];
89->51 [style = bold, label=""];
77->103 [style = bold, label=""];
216->192 [style = bold, label=""];
62->233 [style = bold, label=""];
228->11 [style = bold, label=""];
31->84 [style = bold, label=""];
180->87 [style = bold, label=""];
51->82 [style = bold, label=""];
159->189 [style = bold, label=""];
169->93 [style = bold, label=""];
214->137 [style = bold, label=""];
49->147 [style = bold, label=""];
41->1 [style = solid, label="mockNamespaces"];
161->208 [style = bold, label=""];
175->67 [style = bold, label=""];
29->59 [style = bold, label=""];
140->47 [style = bold, label=""];
37->27 [style = solid, label="mockNamespaces"];
24->223 [style = bold, label=""];
96->209 [style = bold, label=""];
211->75 [style = bold, label=""];
41->1 [style = bold, label=""];
103->221 [style = bold, label=""];
173->10 [style = bold, label=""];
188->121 [style = bold, label=""];
181->180 [style = bold, label=""];
14->74 [style = bold, label=""];
13->228 [style = bold, label=""];
176->195 [style = bold, label=""];
95->66 [style = bold, label=""];
125->157 [style = bold, label=""];
237->214 [style = bold, label=""];
98->55 [style = bold, label=""];
167->36 [style = bold, label=""];
34->234 [style = bold, label=""];
151->79 [style = bold, label=""];
63->61 [style = bold, label=""];
78->100 [style = bold, label=""];
134->205 [style = bold, label=""];
93->232 [style = bold, label=""];
143->200 [style = bold, label=""];
33->133 [style = bold, label=""];
22->150 [style = solid, label="mockNamespaces"];
123->62 [style = bold, label=""];
187->42 [style = bold, label=""];
242->244 [style = bold, label=""];
164->88 [style = bold, label=""];
94->244 [style = dashed, label="0"];
5->153 [style = bold, label=""];
131->24 [style = bold, label=""];
229->38 [style = bold, label=""];
144->174 [style = bold, label=""];
80->116 [style = bold, label=""];
121->207 [style = bold, label=""];
42->246 [style = dashed, label="0"];
158->48 [style = bold, label=""];
50->136 [style = bold, label=""];
207->169 [style = bold, label=""];
56->64 [style = bold, label=""];
118->40 [style = bold, label=""];
139->218 [style = bold, label=""];
195->22 [style = bold, label=""];
61->0 [style = bold, label=""];
138->4 [style = bold, label=""];
187->246 [style = bold, label=""];
13->228 [style = solid, label="mockNamespaces"];
17->138 [style = solid, label="mockNamespaces"];
193->224 [style = bold, label=""];
197->163 [style = bold, label=""];
6->73 [style = solid, label="mockNamespaces"];
72->107 [style = bold, label=""];
79->216 [style = bold, label=""];
70->173 [style = bold, label=""];
223->85 [style = bold, label=""];
92->30 [style = bold, label=""];
67->182 [style = bold, label=""];
194->39 [style = solid, label="mockNamespaces"];
157->81 [style = bold, label=""];
230->159 [style = solid, label="mockNamespaces"];
149->194 [style = bold, label=""];
166->201 [style = bold, label=""];
210->178 [style = bold, label=""];
90->50 [style = bold, label=""];
42->185 [style = bold, label=""];
155->23 [style = bold, label=""];
226->56 [style = bold, label=""];
23->118 [style = bold, label=""];
150->186 [style = bold, label=""];
102->152 [style = bold, label=""];
6->73 [style = bold, label=""];
22->150 [style = bold, label=""];
135->165 [style = bold, label=""];
107->158 [style = bold, label=""];
162->102 [style = bold, label=""];
117->235 [style = bold, label=""];
76->52 [style = bold, label=""];
48->53 [style = bold, label=""];
199->57 [style = bold, label=""];
8->19 [style = bold, label=""];
185->21 [style = bold, label=""];
30->238 [style = bold, label=""];
198->17 [style = bold, label=""];
60->171 [style = bold, label=""];
189->166 [style = bold, label=""];
235->142 [style = bold, label=""];
86->112 [style = bold, label=""];
111->141 [style = bold, label=""];
165->225 [style = bold, label=""];
43->145 [style = bold, label=""];
4->215 [style = bold, label=""];
146->7 [style = bold, label=""];
168->117 [style = bold, label=""];
105->210 [style = bold, label=""];
40->43 [style = bold, label=""];
9->143 [style = bold, label=""];
45->176 [style = bold, label=""];
65->111 [style = bold, label=""];
243->242 [style = bold, label=""];
204->148 [style = solid, label="mockLookup"];
66->140 [style = bold, label=""];
127->3 [style = bold, label=""];
46->181 [style = bold, label=""];
171->198 [style = bold, label=""];
106->161 [style = bold, label=""];
129->31 [style = bold, label=""];
225->130 [style = bold, label=""];
179->193 [style = bold, label=""];
137->49 [style = bold, label=""];
18->9 [style = bold, label=""];
222->76 [style = bold, label=""];
53->20 [style = bold, label=""];
94->131 [style = bold, label=""];
39->204 [style = bold, label=""];
186->211 [style = bold, label=""];
213->28 [style = bold, label=""];
191->231 [style = bold, label=""];
184->183 [style = bold, label=""];
178->90 [style = bold, label=""];
221->128 [style = bold, label=""];
21->94 [style = bold, label=""];
239->149 [style = bold, label=""];
145->236 [style = bold, label=""];
110->123 [style = bold, label=""];
12->149 [style = bold, label=""];
58->212 [style = bold, label=""];
130->213 [style = bold, label=""];
231->229 [style = bold, label=""];
160->46 [style = bold, label=""];
220->44 [style = bold, label=""];
74->206 [style = bold, label=""];
19->127 [style = bold, label=""];
116->151 [style = bold, label=""];
183->68 [style = bold, label=""];
245->149 [style = bold, label=""];
50->241 [style = bold, label=""];
28->191 [style = bold, label=""];
91->168 [style = bold, label=""];
236->54 [style = bold, label=""];
82->63 [style = bold, label=""];
218->226 [style = bold, label=""];
192->126 [style = bold, label=""];
26->58 [style = bold, label=""];
132->129 [style = bold, label=""];
136->146 [style = bold, label=""];
57->237 [style = bold, label=""];
109->160 [style = bold, label=""];
37->27 [style = bold, label=""];
219->16 [style = bold, label=""];
177->197 [style = bold, label=""];
38->114 [style = bold, label=""];
108->6 [style = bold, label=""];
203->98 [style = bold, label=""];
2->89 [style = bold, label=""];
152->188 [style = bold, label=""];
122->132 [style = bold, label=""];
243->244 [style = solid, label="policies"];
200->86 [style = bold, label=""];
238->26 [style = bold, label=""];
68->202 [style = bold, label=""];
47->196 [style = bold, label=""];
246->243 [style = bold, label=""];
20->219 [style = bold, label=""];
83->162 [style = bold, label=""];
202->230 [style = bold, label=""];
208->96 [style = bold, label=""];
224->18 [style = bold, label=""];
32->35 [style = bold, label=""];
39->187 [style = bold, label=""];
81->104 [style = bold, label=""];
25->167 [style = bold, label=""];
87->91 [style = bold, label=""];
212->119 [style = bold, label=""];
215->69 [style = bold, label=""];
75->13 [style = bold, label=""];
52->41 [style = bold, label=""];
64->72 [style = bold, label=""];
147->108 [style = bold, label=""];
36->34 [style = bold, label=""];
232->14 [style = bold, label=""];
133->70 [style = bold, label=""];
88->115 [style = bold, label=""];
230->159 [style = bold, label=""];
170->120 [style = solid, label="mockNamespaces"];
73->105 [style = bold, label=""];
234->29 [style = bold, label=""];
16->175 [style = bold, label=""];
11->99 [style = bold, label=""];
100->15 [style = bold, label=""];
115->71 [style = bold, label=""];
128->95 [style = bold, label=""];
126->25 [style = bold, label=""];
240->136 [style = bold, label=""];
114->172 [style = bold, label=""];
174->110 [style = bold, label=""];
156->177 [style = bold, label=""];
124->5 [style = bold, label=""];
3->184 [style = bold, label=""];
1->65 [style = bold, label=""];
}
