digraph {
4 [style = filled, label = "expectNoMethodsRemoved()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(facet.value(),is(.getCanonicalName()))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "installsFacet_onValuesUsingLogicalTypeName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "installsFacet_onValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(facet.value(),is(\"xxx.ValueExample\"))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(facet instanceof LogicalTypeFacetInferredFromClassName,is(true))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(facet instanceof LogicalTypeFacetDerivedFromClassName,is(true))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertThat(facet,is(not(nullValue())))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "facetFactory = new ValueAnnotationFacetFactory()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(facet instanceof LogicalTypeFacetForValueAnnotation,is(true))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "facetFactory.process(new ObjectTypeFacetFactory.ProcessObjectTypeContext(,facetHolder))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "facetFactory = LogicalTypeFacetDerivedFromClassNameFactory.forTesting(metaModelContext)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "final LogicalTypeFacet facet = facetHolder.getFacet()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "facetFactory.process(new ObjectTypeFacetFactory.ProcessObjectTypeContext(,facetHolder))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "facetFactory = new LogicalTypeFacetDerivedFromClassNameFactory()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "installsFacet_onValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->3 [style = bold, label=""];
8->10 [style = bold, label=""];
1->4 [style = bold, label=""];
5->12 [style = dashed, label="0"];
7->14 [style = solid, label="facet"];
11->4 [style = bold, label=""];
4->13 [style = bold, label=""];
1->10 [style = dashed, label="0"];
2->9 [style = bold, label=""];
3->13 [style = dashed, label="0"];
7->2 [style = solid, label="facet"];
0->14 [style = dashed, label="0"];
6->1 [style = bold, label=""];
2->0 [style = bold, label=""];
15->11 [style = bold, label=""];
7->0 [style = solid, label="facet"];
3->7 [style = bold, label=""];
7->2 [style = bold, label=""];
13->7 [style = bold, label=""];
1->11 [style = dashed, label="0"];
14->12 [style = bold, label=""];
2->14 [style = bold, label=""];
10->4 [style = bold, label=""];
9->5 [style = bold, label=""];
7->9 [style = solid, label="facet"];
0->9 [style = dashed, label="0"];
0->5 [style = bold, label=""];
}
