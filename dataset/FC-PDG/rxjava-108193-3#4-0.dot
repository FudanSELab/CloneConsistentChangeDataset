digraph {
11 [style = filled, label = "TestDisposableObserver<Integer> tc = new TestDisposableObserver<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "normal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(1,tc.values.get(0).intValue())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(1,tc.complete)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Completable.complete().subscribe(tc)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Observable.just(1).subscribe(tc)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(tc.errors.isEmpty())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "normal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "normal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "TestCompletable tc = new TestCompletable()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(0,tc.complete)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertFalse(tc.isDisposed())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(tc.values.isEmpty())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(0,tc.start)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertFalse(tc.isDisposed())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(tc.errors.isEmpty())@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1,tc.start)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TestDisposableObserver<Integer> tc = new TestDisposableObserver<Integer>()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->17 [style = bold, label=""];
13->10 [style = bold, label=""];
8->10 [style = bold, label=""];
11->7 [style = solid, label="tc"];
1->4 [style = bold, label=""];
15->2 [style = bold, label=""];
5->7 [style = solid, label="tc"];
7->17 [style = dashed, label="0"];
1->15 [style = bold, label=""];
12->11 [style = bold, label=""];
3->6 [style = bold, label=""];
4->2 [style = bold, label=""];
7->3 [style = bold, label=""];
8->13 [style = dashed, label="0"];
11->0 [style = bold, label=""];
14->0 [style = bold, label=""];
5->0 [style = bold, label=""];
5->11 [style = dashed, label="0"];
0->1 [style = bold, label=""];
14->17 [style = solid, label="tc"];
6->13 [style = bold, label=""];
4->15 [style = dashed, label="0"];
6->8 [style = bold, label=""];
17->3 [style = bold, label=""];
9->5 [style = bold, label=""];
16->14 [style = bold, label=""];
2->7 [style = bold, label=""];
}
