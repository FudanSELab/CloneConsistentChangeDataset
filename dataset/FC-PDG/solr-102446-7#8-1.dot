digraph {
15 [style = filled, label = "boolean success = true@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "success = false@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "log.warn(\"\",e)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "e.code() != KeeperException.Code.SESSIONEXPIRED@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return LeaderStatus.NO@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "InterruptedException e@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "amILeader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "myId.equals(props.getStr(\"id\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "log.warn(\"\",e)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Thread.currentThread().interrupt()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "KeeperException e@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return LeaderStatus.YES@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return LeaderStatus.NO@@@35@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return LeaderStatus.DONT_KNOW@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ZkNodeProps props = ZkNodeProps.load(zkStateReader.getZkClient().getData(OverseerElectionContext.OVERSEER_ELECT + \"/leader\",null,null,true))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "amILeader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ZkNodeProps props = ZkNodeProps.load(zkClient.getData(OverseerElectionContext.OVERSEER_ELECT + \"/leader\",null,null,true))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String statsName = \"collection_am_i_leader\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return LeaderStatus.DONT_KNOW@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "success = false@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "log.info(\"According to ZK I (id=\" + myId + \") am no longer a leader.\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "e.code() == KeeperException.Code.CONNECTIONLOSS@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "TimerContext timerContext = stats.time(\"am_i_leader\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TimerContext timerContext = stats.time(statsName)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "{timerContext.stop()if (success) {stats.success(statsName)}{stats.error(statsName)}}@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "log.error(\"\",e)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Thread.currentThread().interrupt()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "{timerContext.stop()if (success) {stats.success(\"am_i_leader\")}{stats.error(\"am_i_leader\")}}@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return LeaderStatus.YES@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "amILeader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "boolean success = true@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Timer.Context timerContext = stats.time(statsName)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7->23 [style = dotted, label="false"];
11->16 [style = bold, label=""];
13->10 [style = bold, label=""];
4->3 [style = bold, label=""];
30->22 [style = bold, label=""];
9->11 [style = bold, label=""];
23->5 [style = bold, label=""];
27->0 [style = bold, label=""];
29->30 [style = bold, label=""];
10->14 [style = bold, label=""];
12->8 [style = dotted, label="true"];
0->17 [style = bold, label=""];
12->28 [style = solid, label="success"];
21->15 [style = bold, label=""];
18->28 [style = solid, label="success"];
27->28 [style = bold, label=""];
31->6 [style = dotted, label="true"];
3->11 [style = bold, label=""];
23->5 [style = dotted, label="true"];
0->11 [style = bold, label=""];
25->12 [style = dotted, label="true"];
15->11 [style = solid, label="success"];
31->18 [style = bold, label=""];
7->11 [style = solid, label="success"];
28->26 [style = bold, label=""];
24->29 [style = bold, label=""];
1->0 [style = bold, label=""];
10->21 [style = bold, label=""];
10->29 [style = dashed, label="0"];
16->19 [style = bold, label=""];
7->8 [style = bold, label=""];
5->28 [style = bold, label=""];
31->18 [style = dotted, label="true"];
17->11 [style = bold, label=""];
12->7 [style = bold, label=""];
4->28 [style = bold, label=""];
8->4 [style = dotted, label="true"];
8->3 [style = dotted, label="true"];
6->11 [style = solid, label="success"];
25->7 [style = dotted, label="true"];
20->10 [style = bold, label=""];
18->6 [style = dotted, label="true"];
1->22 [style = dashed, label="0"];
23->28 [style = bold, label=""];
26->16 [style = bold, label=""];
5->2 [style = bold, label=""];
10->21 [style = solid, label="statsName"];
8->5 [style = bold, label=""];
22->27 [style = bold, label=""];
27->0 [style = dotted, label="true"];
18->6 [style = bold, label=""];
25->12 [style = bold, label=""];
7->23 [style = bold, label=""];
18->9 [style = dotted, label="true"];
7->4 [style = dotted, label="true"];
10->14 [style = solid, label="statsName"];
10->11 [style = solid, label="statsName"];
0->17 [style = dotted, label="true"];
14->21 [style = dashed, label="0"];
14->15 [style = bold, label=""];
5->11 [style = bold, label=""];
8->5 [style = dotted, label="false"];
8->4 [style = bold, label=""];
6->9 [style = bold, label=""];
12->7 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
30->28 [style = solid, label="success"];
2->11 [style = bold, label=""];
5->2 [style = dotted, label="true"];
0->28 [style = bold, label=""];
6->28 [style = bold, label=""];
15->1 [style = bold, label=""];
}
