digraph {
3 [style = filled, label = "final RexNode node5 = f.eq(f.i,f.literal(10))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "f.checkImplies(node5,node2)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "f.checkImplies(node1,node3)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "f.checkNotImplies(node2,node1)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testSimpleLesserCond['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "f.checkNotImplies(iLt30,iEq10)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "testSimpleShort['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "f.checkNotImplies(node4,node6)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "f.checkImplies(iLt10,iLt30)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "final RexNode node2 = f.ge(f.sh,f.shortLiteral((short)11))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "f.checkNotImplies(node2,node5)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "f.checkImplies(iLe30,iLe30)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "f.checkNotImplies(iLt10,iNe10)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "final RexNode node1 = f.ge(f.sh,f.shortLiteral((short)10))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final RexNode node1 = f.lt(f.i,f.literal(10))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "f.checkNotImplies(node1,node5)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "final RexNode node3 = f.le(f.i,f.literal(30))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "final RexNode iLe10 = f.le(f.i,f.literal(10))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "f.checkImplies(node1,node2)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "f.checkNotImplies(iLe10,iNe10)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "final RexNode node6 = f.ne(f.i,f.literal(10))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final Fixture f = new Fixture()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testSimpleLesserCond['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "final RexNode iLe30 = f.le(f.i,f.literal(30))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "f.checkImplies(iLt10,iLe30)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "f.checkNotImplies(node1,node6)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "f.checkImplies(iLt10,iLt10)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "final RexNode iEq10 = f.eq(f.i,f.literal(10))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "final RexNode iNe10 = f.ne(f.i,f.literal(10))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "f.checkNotImplies(node3,node1)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "final RexNode iLt30 = f.lt(f.i,f.literal(30))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "f.checkNotImplies(iLt10,iEq10)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "f.checkNotImplies(node1,node2)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "f.checkImplies(node2,node1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "f.checkNotImplies(iLt30,iLt10)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "f.checkNotImplies(iLe30,iLt10)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final RexNode node2 = f.lt(f.i,f.literal(30))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final RexNode node4 = f.le(f.i,f.literal(10))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "final RexNode iLt10 = f.lt(f.i,f.literal(10))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "f.checkImplies(iEq10,iLt30)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21->34 [style = solid, label="iLt30"];
15->10 [style = bold, label=""];
38->37 [style = solid, label="node2"];
9->11 [style = bold, label=""];
27->26 [style = solid, label="iLt10"];
3->1 [style = solid, label="node5"];
11->6 [style = solid, label="node3"];
16->12 [style = solid, label="node6"];
23->20 [style = solid, label="iLe30"];
25->29 [style = bold, label=""];
3->16 [style = bold, label=""];
29->34 [style = bold, label=""];
30->18 [style = bold, label=""];
13->10 [style = solid, label="node1"];
22->4 [style = bold, label=""];
34->24 [style = bold, label=""];
9->21 [style = dashed, label="0"];
39->38 [style = bold, label=""];
0->12 [style = solid, label="node4"];
3->5 [style = solid, label="node5"];
23->17 [style = bold, label=""];
9->15 [style = solid, label="node2"];
16->33 [style = dashed, label="0"];
27->24 [style = solid, label="iLt10"];
32->20 [style = bold, label=""];
10->18 [style = dashed, label="0"];
0->3 [style = bold, label=""];
18->31 [style = bold, label=""];
3->7 [style = solid, label="node5"];
33->19 [style = solid, label="iNe10"];
27->30 [style = solid, label="iLt10"];
9->10 [style = solid, label="node2"];
23->31 [style = solid, label="iLe30"];
10->14 [style = bold, label=""];
15->30 [style = dashed, label="0"];
2->4 [style = bold, label=""];
0->17 [style = dashed, label="0"];
9->5 [style = solid, label="node2"];
5->34 [style = dashed, label="0"];
28->29 [style = solid, label="iEq10"];
5->1 [style = bold, label=""];
7->5 [style = bold, label=""];
27->18 [style = solid, label="iLt10"];
12->19 [style = dashed, label="0"];
1->24 [style = dashed, label="0"];
28->24 [style = solid, label="iEq10"];
11->14 [style = solid, label="node3"];
33->30 [style = bold, label=""];
36->37 [style = bold, label=""];
6->7 [style = bold, label=""];
13->14 [style = solid, label="node1"];
13->1 [style = solid, label="node1"];
14->6 [style = bold, label=""];
27->31 [style = solid, label="iLt10"];
21->23 [style = bold, label=""];
14->31 [style = dashed, label="0"];
3->28 [style = dashed, label="0"];
31->25 [style = bold, label=""];
1->8 [style = bold, label=""];
39->36 [style = solid, label="node1"];
4->39 [style = bold, label=""];
4->13 [style = bold, label=""];
11->23 [style = dashed, label="0"];
21->30 [style = solid, label="iLt30"];
13->8 [style = solid, label="node1"];
26->19 [style = bold, label=""];
13->39 [style = dashed, label="0"];
24->26 [style = bold, label=""];
19->32 [style = bold, label=""];
13->27 [style = dashed, label="0"];
21->29 [style = solid, label="iLt30"];
28->34 [style = solid, label="iEq10"];
13->9 [style = bold, label=""];
33->26 [style = solid, label="iNe10"];
27->21 [style = bold, label=""];
8->12 [style = bold, label=""];
9->38 [style = dashed, label="0"];
8->26 [style = dashed, label="0"];
13->15 [style = solid, label="node1"];
16->8 [style = solid, label="node6"];
16->15 [style = bold, label=""];
23->25 [style = solid, label="iLe30"];
39->37 [style = solid, label="node1"];
38->36 [style = bold, label=""];
21->18 [style = solid, label="iLt30"];
35->4 [style = bold, label=""];
27->25 [style = solid, label="iLt10"];
9->7 [style = solid, label="node2"];
17->28 [style = bold, label=""];
11->0 [style = bold, label=""];
28->33 [style = bold, label=""];
6->25 [style = dashed, label="0"];
13->6 [style = solid, label="node1"];
17->19 [style = solid, label="iLe10"];
38->36 [style = solid, label="node2"];
4->27 [style = bold, label=""];
27->32 [style = solid, label="iLt10"];
7->29 [style = dashed, label="0"];
}
