digraph {
0 [style = filled, label = "result.put(entry.getKey(),entry.getValue().getSchema(Util.showHiddenColumns()))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Map<Long,List<Column>> result = Maps.newHashMap()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return result@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "result.put(entry.getKey(),entry.getValue().getSchema(full))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "result.put(entry.getKey(),entry.getValue().getSchemaHash())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "getIndexIdToSchemaHash['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "getIndexIdToSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "getIndexIdToSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "boolean full@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Map<Long,Integer> result = Maps.newHashMap()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
3->2 [style = solid, label="result"];
8->2 [style = solid, label="result"];
4->5 [style = dotted, label="true"];
4->3 [style = bold, label=""];
3->6 [style = bold, label=""];
3->8 [style = dashed, label="0"];
0->6 [style = dashed, label="0"];
0->9 [style = dashed, label="0"];
7->8 [style = bold, label=""];
9->2 [style = bold, label=""];
5->6 [style = solid, label="full"];
3->0 [style = bold, label=""];
0->2 [style = bold, label=""];
8->9 [style = bold, label=""];
6->2 [style = bold, label=""];
}
