digraph {
9 [style = filled, label = "List<NiciraNvpDeviceVO> devices = niciraNvpDao.listByPhysicalNetwork(network.getPhysicalNetworkId())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Network network@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "return false@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "DeleteLogicalRouterAnswer answer = (DeleteLogicalRouterAnswer)agentMgr.easySend(niciraNvpHost.getId(),cmd)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "return false@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "ReservationContext context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "DeleteLogicalRouterCommand cmd = new DeleteLogicalRouterCommand(routermapping.getLogicalRouterUuid())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Account owner = context.getAccount()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "String publicCidr = sourceNatIp.getAddress().addr() + \"/\" + NetUtils.getCidrSize(sourceNatIp.getVlanNetmask())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "!(tiep == BroadcastDomainType.UnDecided || tiep == BroadcastDomainType.Native)@@@36@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "niciraNvpRouterMappingDao.remove(routermapping.getId())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "NiciraNvpRouterMappingVO routermapping = new NiciraNvpRouterMappingVO(answer.getLogicalRouterUuid(),network.getId())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Network network@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "DeployDestination dest@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "NetworkOffering offering@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "tiep = BroadcastDomainType.getTypeOf(vtag)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "throw new CloudRuntimeException(\"vlantag for sourceNatIp is not valid: \" + vtag,use)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "!canHandle(network,Service.Connectivity)@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "answer.getResult() == false@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "NiciraNvpRouterMappingVO routermapping = niciraNvpRouterMappingDao.findByNetworkId(network.getId())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "routermapping == null@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "devices.isEmpty()@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "PublicIp sourceNatIp = ipAddrMgr.assignSourceNatIpAddressToGuestNetwork(owner,network)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "throw new CloudRuntimeException(\"only vlans are supported for sourceNatIp, at this moment: \" + vtag)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "network.getBroadcastUri() == null@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ReservationContext context@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "String vtag = sourceNatIp.getVlanTag()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ReservationContext context@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "HostVO niciraNvpHost = hostDao.findById(niciraNvpDevice.getHostId())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "return true@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "s_logger.error(\"Nic has no broadcast Uri with the LSwitch Uuid\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<NiciraNvpDeviceVO> devices = niciraNvpDao.listByPhysicalNetwork(network.getPhysicalNetworkId())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "hostDao.loadDetails(niciraNvpHost)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "BroadcastDomainType tiep = null@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "answer.getResult() == false@@@42@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return false@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "shutdown['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "s_logger.error(\"Failed to delete LogicalRouter for network \" + network.getDisplayText())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "CreateLogicalRouterAnswer answer = (CreateLogicalRouterAnswer)agentMgr.easySend(niciraNvpHost.getId(),cmd)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return true@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "!network.getGuestType().equals(GuestType.Shared) && networkModel.isProviderSupportServiceInNetwork(network.getId(),Service.SourceNat,Provider.NiciraNvp)@@@13@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "shutdown['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "tiep == BroadcastDomainType.Vlan@@@33@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "return false@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "!canHandle(network,Service.Connectivity)@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "return false@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "networkModel.isProviderSupportServiceInNetwork(network.getId(),Service.SourceNat,Provider.NiciraNvp)@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "vtag = BroadcastDomainType.Vlan.getValueFrom(BroadcastDomainType.fromString(vtag))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "URISyntaxException use@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "long vlanid = (Vlan.UNTAGGED.equals(vtag))? 0: Long.parseLong(vtag)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "s_logger.error(\"Failed to create Logical Router for network \" + network.getDisplayText())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "implement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "boolean cleanup@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "s_logger.debug(\"entering NiciraNvpElement implement function for network \" + network.getDisplayText() + \" (state \" + network.getState() + \")\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "String internalCidr = network.getGateway() + \"/\" + network.getCidr().split(\"/\")(1(@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "s_logger.error(\"No NiciraNvp Controller on physical network \" + network.getPhysicalNetworkId())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "niciraNvpRouterMappingDao.persist(routermapping)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Network network@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "NiciraNvpDeviceVO niciraNvpDevice = devices.get(0)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "s_logger.debug(\"Apparently we are supposed to provide SourceNat on this network\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "NiciraNvpDeviceVO niciraNvpDevice = devices.get(0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "s_logger.warn(\"No logical router uuid found for network \" + network.getDisplayText())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "CreateLogicalRouterCommand cmd = new CreateLogicalRouterCommand(niciraNvpHost.getDetail(\"l3gatewayserviceuuid\"),vlanid,BroadcastDomainType.getValue(network.getBroadcastUri()),\"router-\" + network.getDisplayText(),publicCidr,sourceNatIp.getGateway(),internalCidr,context.getDomain().getName() + \"-\" + context.getAccount().getAccountName())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return true@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27->18 [style = dotted, label="true"];
17->34 [style = dotted, label="true"];
23->9 [style = bold, label=""];
4->6 [style = bold, label=""];
10->23 [style = bold, label=""];
9->5 [style = dotted, label="true"];
0->37 [style = dotted, label="true"];
0->31 [style = dotted, label="true"];
3->1 [style = dotted, label="true"];
50->9 [style = bold, label=""];
20->18 [style = dotted, label="true"];
56->60 [style = dotted, label="false"];
38->61 [style = bold, label=""];
6->22 [style = bold, label=""];
24->10 [style = bold, label=""];
29->57 [style = bold, label=""];
5->13 [style = bold, label=""];
12->5 [style = dotted, label="true"];
3->1 [style = bold, label=""];
3->6 [style = bold, label=""];
19->27 [style = bold, label=""];
57->39 [style = bold, label=""];
63->30 [style = bold, label=""];
46->43 [style = dotted, label="true"];
30->59 [style = bold, label=""];
0->49 [style = dotted, label="true"];
20->27 [style = dashed, label="0"];
15->16 [style = bold, label=""];
17->23 [style = bold, label=""];
0->48 [style = dotted, label="true"];
18->21 [style = bold, label=""];
27->0 [style = dotted, label="true"];
31->36 [style = bold, label=""];
20->55 [style = solid, label="niciraNvpHost"];
20->0 [style = bold, label=""];
63->30 [style = solid, label="vtag"];
9->12 [style = bold, label=""];
43->29 [style = solid, label="network"];
40->30 [style = bold, label=""];
14->54 [style = dashed, label="0"];
58->56 [style = solid, label="tiep"];
27->16 [style = dotted, label="true"];
0->29 [style = dotted, label="true"];
28->26 [style = dotted, label="true"];
10->17 [style = bold, label=""];
0->42 [style = bold, label=""];
27->3 [style = dotted, label="true"];
11->3 [style = solid, label="routermapping"];
36->53 [style = bold, label=""];
16->8 [style = bold, label=""];
62->56 [style = bold, label=""];
58->56 [style = bold, label=""];
0->57 [style = dotted, label="true"];
46->45 [style = dotted, label="true"];
20->16 [style = dotted, label="true"];
0->11 [style = bold, label=""];
46->41 [style = dotted, label="true"];
51->50 [style = bold, label=""];
27->8 [style = bold, label=""];
37->58 [style = bold, label=""];
18->21 [style = dotted, label="true"];
28->25 [style = dotted, label="true"];
33->29 [style = solid, label="owner"];
27->11 [style = dotted, label="true"];
36->53 [style = solid, label="routermapping"];
12->19 [style = bold, label=""];
34->44 [style = bold, label=""];
5->47 [style = bold, label=""];
31->38 [style = dotted, label="true"];
27->6 [style = dotted, label="true"];
1->4 [style = bold, label=""];
49->37 [style = bold, label=""];
61->36 [style = bold, label=""];
49->40 [style = solid, label="vtag"];
28->10 [style = bold, label=""];
16->36 [style = dashed, label="0"];
49->30 [style = solid, label="vtag"];
49->58 [style = solid, label="vtag"];
44->51 [style = bold, label=""];
56->63 [style = dotted, label="true"];
20->3 [style = dotted, label="true"];
11->3 [style = bold, label=""];
30->59 [style = solid, label="vlanid"];
12->47 [style = dotted, label="true"];
27->22 [style = dotted, label="true"];
39->49 [style = bold, label=""];
60->30 [style = bold, label=""];
24->14 [style = dotted, label="true"];
13->19 [style = bold, label=""];
21->15 [style = bold, label=""];
52->62 [style = bold, label=""];
35->31 [style = bold, label=""];
24->7 [style = dotted, label="true"];
47->19 [style = bold, label=""];
0->53 [style = dotted, label="true"];
60->40 [style = bold, label=""];
0->48 [style = bold, label=""];
20->8 [style = bold, label=""];
46->54 [style = dotted, label="true"];
0->35 [style = dotted, label="true"];
20->0 [style = dotted, label="true"];
56->60 [style = bold, label=""];
49->63 [style = solid, label="vtag"];
44->50 [style = dotted, label="true"];
17->44 [style = bold, label=""];
21->38 [style = dashed, label="0"];
3->4 [style = dotted, label="true"];
18->16 [style = bold, label=""];
0->59 [style = dotted, label="true"];
60->40 [style = dotted, label="true"];
22->18 [style = bold, label=""];
0->36 [style = dotted, label="true"];
48->29 [style = bold, label=""];
55->33 [style = bold, label=""];
28->14 [style = dotted, label="true"];
59->35 [style = bold, label=""];
0->48 [style = dashed, label="0"];
0->56 [style = dotted, label="true"];
31->38 [style = bold, label=""];
52->62 [style = dotted, label="true"];
18->15 [style = dotted, label="true"];
44->9 [style = bold, label=""];
46->32 [style = bold, label=""];
19->20 [style = bold, label=""];
27->0 [style = bold, label=""];
9->13 [style = bold, label=""];
24->2 [style = dotted, label="true"];
53->42 [style = bold, label=""];
57->59 [style = solid, label="publicCidr"];
0->30 [style = dotted, label="true"];
39->59 [style = solid, label="internalCidr"];
12->5 [style = bold, label=""];
32->17 [style = bold, label=""];
31->61 [style = dotted, label="true"];
0->58 [style = dotted, label="true"];
20->22 [style = dotted, label="true"];
59->35 [style = solid, label="cmd"];
17->34 [style = bold, label=""];
9->12 [style = dotted, label="true"];
20->55 [style = bold, label=""];
10->17 [style = dotted, label="true"];
56->63 [style = bold, label=""];
6->22 [style = solid, label="cmd"];
33->0 [style = bold, label=""];
20->6 [style = dotted, label="true"];
44->51 [style = dotted, label="true"];
0->39 [style = dotted, label="true"];
20->11 [style = dotted, label="true"];
}
