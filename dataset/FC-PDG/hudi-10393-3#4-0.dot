digraph {
8 [style = filled, label = "List<Row> result1 = CollectionUtil.iterableToList(null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertRowsEquals(result2,\"(\" + \"+I(id6, Emma, 20, 1970-01-01T00:00:06, par3(, \" + \"+I(id7, Bob, 44, 1970-01-01T00:00:07, par4(, \" + \"+I(id8, Han, 56, 1970-01-01T00:00:08, par4((\")@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String hoodieTableDDL = sql(\"hoodie_sink\").option(FlinkOptions.PATH,tempFile.getAbsolutePath()).option(FlinkOptions.OPERATION,\"bulk_insert\").option(FlinkOptions.WRITE_BULK_INSERT_SHUFFLE_BY_PARTITION,\"true\").option(FlinkOptions.HIVE_STYLE_PARTITIONING,hiveStylePartitioning).end()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "String hoodieTableDDL = sql(\"hoodie_sink\").option(FlinkOptions.PATH,tempFile.getAbsolutePath()).option(FlinkOptions.OPERATION,\"bulk_insert\").option(FlinkOptions.WRITE_BULK_INSERT_SHUFFLE_BY_PARTITION,true).option(FlinkOptions.HIVE_STYLE_PARTITIONING,hiveStylePartitioning).end()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testAppendWrite['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testBulkInsert['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "String hoodieTableDDL = sql(\"hoodie_sink\").option(FlinkOptions.PATH,tempFile.getAbsolutePath()).option(FlinkOptions.OPERATION,\"insert\").option(FlinkOptions.INSERT_DEDUP,false).end()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testBulkInsert['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TableEnvironment tableEnv = batchTableEnv@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "execInsertSql(tableEnv,insertInto)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "tableEnv.executeSql(hoodieTableDDL)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String csvSourceDDL = TestConfigurations.getCsvSourceDDL(\"csv_source\",\"test_source_5.data\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertRowsEquals(result1,TestData.DATA_SET_SOURCE_INSERT)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String insertInto = \"insert into hoodie_sink select * from csv_source\"@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "tableEnv.executeSql(csvSourceDDL)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "boolean hiveStylePartitioning@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<Row> result2 = CollectionUtil.iterableToList(null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->12 [style = solid, label="result2"];
16->9 [style = solid, label="hoodieTableDDL"];
0->16 [style = bold, label=""];
15->2 [style = bold, label=""];
10->9 [style = solid, label="hoodieTableDDL"];
9->11 [style = bold, label=""];
4->6 [style = bold, label=""];
2->3 [style = solid, label="tableEnv"];
8->4 [style = solid, label="result1"];
13->7 [style = dotted, label="true"];
14->9 [style = solid, label="hoodieTableDDL"];
5->0 [style = solid, label="csvSourceDDL"];
1->7 [style = dotted, label="true"];
0->10 [style = bold, label=""];
0->14 [style = bold, label=""];
5->0 [style = bold, label=""];
11->3 [style = bold, label=""];
3->8 [style = bold, label=""];
11->3 [style = solid, label="insertInto"];
14->9 [style = bold, label=""];
10->9 [style = bold, label=""];
1->2 [style = bold, label=""];
10->16 [style = dashed, label="0"];
8->4 [style = bold, label=""];
10->14 [style = dashed, label="0"];
16->9 [style = bold, label=""];
2->5 [style = bold, label=""];
13->2 [style = bold, label=""];
6->12 [style = bold, label=""];
}
