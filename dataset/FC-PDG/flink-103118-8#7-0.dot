digraph {
23 [style = filled, label = "opMethod.invoke(map1,minResource2,preferredResource2)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "opMethod.invoke(map2,minResource4,preferredResource4)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "DataStream<Long> source2 = env.generateSequence(0,0)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Operator operator = new MockOperator()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "ResourceSpec preferredResource5 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(600).build()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ResourceSpec preferredResource1 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(200).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(preferredResource1,env.getStreamGraph().getStreamNode(source1.getId()).getPreferredResources())@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "DataStream<Long> windowed = connected.windowAll(GlobalWindows.create()).trigger(PurgingTrigger.of(CountTrigger.of(10))).fold(0L,new FoldFunction<Long,Long>(){@Override public Long fold(Long accumulator,Long value){return null}})@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(preferredResource2,env.getStreamGraph().getStreamNode(map1.getId()).getPreferredResources())@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(minResource1,env.getStreamGraph().getStreamNode(source1.getId()).getMinResources())@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ResourceSpec preferredResources = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(200).build()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "assertEquals(preferredResource4,env.getStreamGraph().getStreamNode(map2.getId()).getPreferredResources())@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "sinkMethod.setAccessible(true)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(minResource4,env.getStreamGraph().getStreamNode(map2.getId()).getMinResources())@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "ResourceSpec minResource5 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(500).build()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ResourceSpec preferredResources = ResourceSpec.newBuilder(2.0,200).build()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "opMethod.invoke(windowed,minResource6,preferredResource6)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "opMethod.setAccessible(true)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "ResourceSpec preferredResource2 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(300).build()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(preferredResources,operator.getPreferredResources())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testConfigurationOfResource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertEquals(preferredResource5,env.getStreamGraph().getStreamNode(connected.getId()).getPreferredResources())@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "ResourceSpec preferredResource4 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(500).build()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "opMethod.invoke(source2,minResource3,preferredResource3)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "ResourceSpec preferredResource7 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(800).build()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "opMethod.invoke(source1,minResource1,preferredResource1)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ResourceSpec minResources = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(100).build()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "opMethod.setAccessible(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(minResources,operator.getMinResources())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(minResource2,env.getStreamGraph().getStreamNode(map1.getId()).getMinResources())@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "DataStream<Long> map1 = source1.map(new MapFunction<Long,Long>(){@Override public Long map(Long value){return null}})@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "ResourceSpec minResource2 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(200).build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "opMethod.invoke(operator,minResources,preferredResources)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testConfigurationOfResource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "DataStream<Long> source1 = env.generateSequence(0,0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "DataStreamSink<Long> sink = windowed.print()@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Method opMethod = .getDeclaredMethod(\"setResources\",,)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertEquals(minResource5,env.getStreamGraph().getStreamNode(connected.getId()).getMinResources())@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(minResource6,env.getStreamGraph().getStreamNode(windowed.getId()).getMinResources())@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(preferredResource6,env.getStreamGraph().getStreamNode(windowed.getId()).getPreferredResources())@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "DataStream<Long> map2 = source2.map(new MapFunction<Long,Long>(){@Override public Long map(Long value){return null}})@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "testResources['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "ResourceSpec minResource4 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(400).build()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(minResource3,env.getStreamGraph().getStreamNode(source2.getId()).getMinResources())@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ResourceSpec minResource6 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(600).build()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ResourceSpec minResource1 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(100).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "sinkMethod.invoke(sink,minResource7,preferredResource7)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "ResourceSpec preferredResource3 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(400).build()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "opMethod.invoke(connected,minResource5,preferredResource5)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ResourceSpec minResource3 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(300).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "ResourceSpec minResource7 = ResourceSpec.newBuilder().setCpuCores(1.0).setTaskHeapMemoryMB(700).build()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Method opMethod = .getDeclaredMethod(\"setResources\",,)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(preferredResource3,env.getStreamGraph().getStreamNode(source2.getId()).getPreferredResources())@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(minResource7,env.getStreamGraph().getStreamNode(sink.getTransformation().getId()).getMinResources())@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ResourceSpec preferredResource6 = ResourceSpec.newBuilder().setCpuCores(2.0).setTaskHeapMemoryMB(700).build()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ResourceSpec minResources = ResourceSpec.newBuilder(1.0,100).build()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(preferredResource7,env.getStreamGraph().getStreamNode(sink.getTransformation().getId()).getPreferredResources())@@@71@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Method sinkMethod = .getDeclaredMethod(\"setResources\",,)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "DataStream<Long> connected = map1.connect(map2).flatMap(new CoFlatMapFunction<Long,Long,Long>(){@Override public void flatMap1(Long value,Collector<Long> out){}@Override public void flatMap2(Long value,Collector<Long> out){}})@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29->59 [style = bold, label=""];
32->22 [style = bold, label=""];
9->11 [style = bold, label=""];
6->11 [style = dashed, label="0"];
58->47 [style = solid, label="connected"];
25->14 [style = bold, label=""];
32->39 [style = solid, label="minResource7"];
38->42 [style = bold, label=""];
34->53 [style = solid, label="minResource4"];
43->23 [style = bold, label=""];
54->19 [style = bold, label=""];
44->21 [style = solid, label="source2"];
13->33 [style = solid, label="minResource6"];
24->49 [style = bold, label=""];
3->9 [style = dashed, label="0"];
53->41 [style = bold, label=""];
57->16 [style = bold, label=""];
51->39 [style = bold, label=""];
18->32 [style = bold, label=""];
4->8 [style = bold, label=""];
49->56 [style = bold, label=""];
56->14 [style = solid, label="preferredResource2"];
41->54 [style = bold, label=""];
22->31 [style = solid, label="preferredResource7"];
35->26 [style = solid, label="source1"];
23->44 [style = bold, label=""];
57->16 [style = solid, label="map2"];
24->26 [style = solid, label="preferredResource1"];
40->50 [style = bold, label=""];
44->21 [style = bold, label=""];
48->19 [style = solid, label="preferredResource5"];
27->31 [style = bold, label=""];
26->43 [style = bold, label=""];
27->31 [style = solid, label="sink"];
1->0 [style = bold, label=""];
2->9 [style = bold, label=""];
17->37 [style = bold, label=""];
0->7 [style = bold, label=""];
24->42 [style = solid, label="preferredResource1"];
52->12 [style = bold, label=""];
49->25 [style = solid, label="minResource2"];
36->50 [style = solid, label="preferredResource3"];
55->27 [style = bold, label=""];
11->7 [style = solid, label="preferredResources"];
48->13 [style = bold, label=""];
6->1 [style = solid, label="preferredResources"];
45->52 [style = bold, label=""];
59->48 [style = bold, label=""];
13->18 [style = bold, label=""];
19->33 [style = bold, label=""];
34->29 [style = bold, label=""];
20->21 [style = solid, label="minResource3"];
21->57 [style = bold, label=""];
42->25 [style = bold, label=""];
37->30 [style = bold, label=""];
2->3 [style = bold, label=""];
48->47 [style = solid, label="preferredResource5"];
3->6 [style = bold, label=""];
22->28 [style = bold, label=""];
31->38 [style = bold, label=""];
12->24 [style = bold, label=""];
12->38 [style = solid, label="minResource1"];
6->1 [style = bold, label=""];
9->0 [style = solid, label="minResources"];
30->35 [style = bold, label=""];
8->2 [style = bold, label=""];
4->1 [style = solid, label="operator"];
5->4 [style = bold, label=""];
28->17 [style = bold, label=""];
29->41 [style = solid, label="preferredResource4"];
35->26 [style = bold, label=""];
36->34 [style = bold, label=""];
16->58 [style = bold, label=""];
11->1 [style = solid, label="preferredResources"];
20->36 [style = bold, label=""];
46->55 [style = bold, label=""];
3->1 [style = solid, label="minResources"];
36->21 [style = solid, label="preferredResource3"];
34->16 [style = solid, label="minResource4"];
39->15 [style = bold, label=""];
11->1 [style = bold, label=""];
12->26 [style = solid, label="minResource1"];
13->55 [style = solid, label="minResource6"];
9->1 [style = solid, label="minResources"];
59->54 [style = solid, label="minResource5"];
32->31 [style = solid, label="minResource7"];
47->46 [style = bold, label=""];
56->23 [style = solid, label="preferredResource2"];
43->23 [style = solid, label="map1"];
6->7 [style = solid, label="preferredResources"];
49->23 [style = solid, label="minResource2"];
46->55 [style = solid, label="windowed"];
58->47 [style = bold, label=""];
33->51 [style = bold, label=""];
3->0 [style = solid, label="minResources"];
59->47 [style = solid, label="minResource5"];
18->55 [style = solid, label="preferredResource6"];
18->51 [style = solid, label="preferredResource6"];
22->15 [style = solid, label="preferredResource7"];
10->4 [style = bold, label=""];
56->20 [style = bold, label=""];
29->16 [style = solid, label="preferredResource4"];
14->40 [style = bold, label=""];
50->53 [style = bold, label=""];
20->40 [style = solid, label="minResource3"];
}
