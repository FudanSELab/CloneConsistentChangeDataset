digraph {
17 [style = filled, label = "commit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "KeeperException ke = KeeperException.create(KeeperException.Code.get(res.rc))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final MultiResult res = new MultiResult()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "!res.finished@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "res@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "res.wait()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Iterable<Op> ops@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return zk.multi(ops)@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return res.results@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "multi['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "KeeperException.Code.OK.intValue() != res.rc@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Iterable<Op> ops@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ZooKeeper zk@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "return txn.commit()@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "zk.multi(ops,new MultiCallback(){@Override public void processResult(int rc,String path,Object ctx,List<OpResult> opResults){if (!ClientCnxn.isInEventThread()) {throw new RuntimeException(\"not in event thread\")}synchronized (res) {res.rc = rcres.results = opResultsres.finished = trueres.notifyAll()}}},null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "KeeperException.Code.OK.intValue() != res.rc && ops.iterator().next().getKind() != Op.OpKind.READ@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Transaction txn@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "useAsync@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "throw ke@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "multi['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "txn.commit(new MultiCallback(){@Override public void processResult(int rc,String path,Object ctx,List<OpResult> opResults){synchronized (res) {res.rc = rcres.results = opResultsres.finished = trueres.notifyAll()}}},null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->6 [style = bold, label=""];
5->8 [style = dotted, label="true"];
17->18 [style = dotted, label="true"];
10->2 [style = dotted, label="true"];
14->5 [style = bold, label=""];
3->19 [style = dashed, label="0"];
7->13 [style = solid, label="ops"];
5->19 [style = dotted, label="true"];
5->10 [style = dotted, label="true"];
5->16 [style = dotted, label="true"];
5->8 [style = bold, label=""];
10->2 [style = bold, label=""];
3->9 [style = solid, label="results"];
5->20 [style = dotted, label="false"];
16->2 [style = dotted, label="true"];
2->11 [style = solid, label="ke"];
5->9 [style = dotted, label="true"];
10->9 [style = bold, label=""];
5->3 [style = dotted, label="true"];
4->7 [style = dotted, label="true"];
2->11 [style = bold, label=""];
6->0 [style = bold, label=""];
4->5 [style = bold, label=""];
3->10 [style = solid, label="rc"];
1->3 [style = solid, label="ops"];
3->2 [style = solid, label="rc"];
11->9 [style = bold, label=""];
5->13 [style = dotted, label="false"];
8->3 [style = solid, label="res"];
5->12 [style = dotted, label="true"];
4->1 [style = dotted, label="true"];
14->7 [style = dotted, label="true"];
8->12 [style = solid, label="res"];
5->13 [style = bold, label=""];
8->3 [style = bold, label=""];
6->0 [style = dotted, label="true"];
6->10 [style = bold, label=""];
6->16 [style = bold, label=""];
19->16 [style = solid, label="rc"];
16->2 [style = bold, label=""];
7->3 [style = solid, label="ops"];
10->16 [style = dashed, label="0"];
14->15 [style = dotted, label="true"];
19->9 [style = solid, label="results"];
3->12 [style = bold, label=""];
5->20 [style = bold, label=""];
1->13 [style = solid, label="ops"];
16->11 [style = dotted, label="true"];
13->20 [style = dashed, label="0"];
8->19 [style = solid, label="res"];
12->6 [style = dotted, label="true"];
19->2 [style = solid, label="rc"];
10->11 [style = dotted, label="true"];
19->12 [style = bold, label=""];
17->5 [style = bold, label=""];
12->6 [style = bold, label=""];
8->19 [style = bold, label=""];
7->18 [style = dashed, label="0"];
16->9 [style = bold, label=""];
}
