digraph {
8 [style = filled, label = "checkTimeMetric((long)values.get(\"max_server_write_committed_time_ms\"),0L,1000L)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assert.assertEquals(2L,values.get(\"cnt_read_commitproc_time_ms\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testServerWriteCommittedTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "values = MetricsUtils.currentServerMetrics()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "processRequestWithWait(req1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(1L,values.get(\"cnt_read_commitproc_time_ms\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Map<String,Object> values = MetricsUtils.currentServerMetrics()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "checkTimeMetric((long)values.get(\"max_server_write_committed_time_ms\"),0L,1000L)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "processRequestWithWait(createReadRequest(1l,3))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "setupProcessors(0,0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "processRequestWithWait(createReadRequest(1l,1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "commitWithWait(req1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(1L,values.get(\"cnt_server_write_committed_time_ms\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "checkTimeMetric((long)values.get(\"max_read_commitproc_time_ms\"),1000L,2000L)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Request req1 = createWriteRequest(1l,2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Thread.sleep(1000)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(1L,values.get(\"cnt_server_write_committed_time_ms\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testServerWriteCommittedTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "commitWithWait(createWriteRequest(1L,1))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testReadCommitProcTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "checkTimeMetric((long)values.get(\"max_read_commitproc_time_ms\"),0l,1000l)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->18 [style = dashed, label="0"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
17->5 [style = bold, label=""];
16->11 [style = bold, label=""];
15->14 [style = bold, label=""];
18->19 [style = bold, label=""];
1->18 [style = bold, label=""];
9->20 [style = bold, label=""];
4->6 [style = dashed, label="0"];
12->9 [style = bold, label=""];
13->1 [style = bold, label=""];
11->15 [style = bold, label=""];
19->16 [style = bold, label=""];
20->10 [style = bold, label=""];
3->19 [style = dashed, label="0"];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
5->0 [style = bold, label=""];
16->11 [style = solid, label="req1"];
0->1 [style = bold, label=""];
5->13 [style = bold, label=""];
14->12 [style = bold, label=""];
16->12 [style = solid, label="req1"];
6->8 [style = bold, label=""];
0->13 [style = dashed, label="0"];
3->8 [style = dashed, label="0"];
2->5 [style = bold, label=""];
}
