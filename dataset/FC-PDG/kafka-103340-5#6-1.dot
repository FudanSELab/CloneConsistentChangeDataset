digraph {
9 [style = filled, label = "fileRecords.flush()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "fileRecords.append(MemoryRecords.withRecords(magic,0L,compression,CREATE_TIME,firstBatchRecord))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNull(logInputStream.nextBatch())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertNull(logInputStream.nextBatch())@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNoProducerData(firstBatch)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "compression == CompressionType.ZSTD && magic < MAGIC_VALUE_V2@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "FileLogInputStream logInputStream = new FileLogInputStream(fileRecords,0,fileRecords.sizeInBytes())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testBatchIterationWithMultipleRecordsPerBatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertGenericRecordBatchData(firstBatch,0L,3241324L,firstBatchRecord)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "FileChannelRecordBatch firstBatch = logInputStream.nextBatch()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertGenericRecordBatchData(firstBatch,0L,3241324L,firstBatchRecords)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testSimpleBatchIteration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "FileLogInputStream logInputStream = new FileLogInputStream(fileRecords,0,fileRecords.sizeInBytes())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "FileChannelRecordBatch firstBatch = logInputStream.nextBatch()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "return@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SimpleRecord secondBatchRecord = new SimpleRecord(234280L,\"b\".getBytes(),\"bar\".getBytes())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "FileChannelRecordBatch secondBatch = logInputStream.nextBatch()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertNoProducerData(secondBatch)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testSimpleBatchIteration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "SimpleRecord(( secondBatchRecords = new SimpleRecord((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b62bd4@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "SimpleRecord firstBatchRecord = new SimpleRecord(3241324L,\"a\".getBytes(),\"foo\".getBytes())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "fileRecords.append(MemoryRecords.withRecords(magic,1L,compression,CREATE_TIME,secondBatchRecords))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertGenericRecordBatchData(secondBatch,1L,238423489L,secondBatchRecords)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertNoProducerData(firstBatch)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "fileRecords.append(MemoryRecords.withRecords(magic,0L,compression,CREATE_TIME,firstBatchRecords))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "fileRecords.flush()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "magic < MAGIC_VALUE_V2 && compression == CompressionType.NONE@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "SimpleRecord(( firstBatchRecords = new SimpleRecord((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b62bbb@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "fileRecords.append(MemoryRecords.withRecords(magic,1L,compression,CREATE_TIME,secondBatchRecord))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
16->15 [style = bold, label=""];
4->3 [style = bold, label=""];
15->10 [style = bold, label=""];
20->17 [style = bold, label=""];
3->29 [style = solid, label="firstBatch"];
10->7 [style = solid, label="firstBatchRecord"];
5->9 [style = bold, label=""];
13->7 [style = solid, label="firstBatch"];
16->10 [style = bold, label=""];
20->17 [style = solid, label="secondBatch"];
25->23 [style = bold, label=""];
9->4 [style = bold, label=""];
9->3 [style = solid, label="secondBatch"];
12->11 [style = bold, label=""];
23->26 [style = bold, label=""];
3->6 [style = bold, label=""];
26->9 [style = bold, label=""];
9->4 [style = solid, label="secondBatch"];
20->22 [style = solid, label="secondBatch"];
17->22 [style = bold, label=""];
3->21 [style = solid, label="firstBatch"];
19->24 [style = bold, label=""];
24->29 [style = solid, label="firstBatchRecords"];
10->8 [style = solid, label="firstBatchRecord"];
8->1 [style = bold, label=""];
24->23 [style = solid, label="firstBatchRecords"];
29->20 [style = bold, label=""];
19->28 [style = dotted, label="true"];
7->5 [style = bold, label=""];
0->10 [style = bold, label=""];
22->18 [style = bold, label=""];
21->29 [style = bold, label=""];
2->4 [style = solid, label="secondBatchRecord"];
25->26 [style = solid, label="secondBatchRecords"];
13->7 [style = bold, label=""];
24->25 [style = bold, label=""];
11->13 [style = bold, label=""];
1->12 [style = bold, label=""];
28->24 [style = bold, label=""];
3->21 [style = bold, label=""];
10->2 [style = bold, label=""];
25->22 [style = solid, label="secondBatchRecords"];
27->19 [style = bold, label=""];
19->28 [style = bold, label=""];
13->5 [style = solid, label="firstBatch"];
2->1 [style = solid, label="secondBatchRecord"];
10->24 [style = dashed, label="0"];
2->8 [style = bold, label=""];
16->15 [style = dotted, label="true"];
}
