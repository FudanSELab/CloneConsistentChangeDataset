digraph {
18 [style = filled, label = "Long key = random.nextLong()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(map,map2)@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "map.put(key,value)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DataSerializer.writeHashtable(map,out)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testHashtableObject['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "DataInput in = getDataInput()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Hashtable map2 = DataSerializer.readHashtable(in)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Object key = new Long(random.nextLong())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < size@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Hashtable map = new Hashtable()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Hashtable map2 = (Hashtable)DataSerializer.readObject(in)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Random random = getRandom()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "DataOutputStream out = getDataOutput()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Hashtable<Long,String> map = new Hashtable<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "int size = random.nextInt(50)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testHashtable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "out.flush()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Object value = String.valueOf(random.nextLong())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String value = String.valueOf(random.nextLong())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "DataSerializer.writeObject(map,out)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Hashtable<Long,String> map2 = DataSerializer.readHashtable(in)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testHashtable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7->13 [style = bold, label=""];
4->7 [style = solid, label="i"];
8->9 [style = solid, label="value"];
6->4 [style = solid, label="i"];
17->1 [style = bold, label=""];
13->21 [style = solid, label="out"];
16->14 [style = solid, label="map"];
20->9 [style = bold, label=""];
16->10 [style = bold, label=""];
10->7 [style = solid, label="size"];
20->9 [style = solid, label="value"];
2->1 [style = bold, label=""];
12->16 [style = dashed, label="0"];
0->19 [style = dashed, label="0"];
3->21 [style = dashed, label="0"];
9->4 [style = bold, label=""];
16->3 [style = solid, label="map"];
0->23 [style = dashed, label="0"];
15->18 [style = dashed, label="0"];
8->20 [style = dashed, label="0"];
15->9 [style = solid, label="key"];
18->9 [style = solid, label="key"];
7->9 [style = dotted, label="true"];
6->7 [style = solid, label="i"];
11->19 [style = bold, label=""];
7->15 [style = dotted, label="true"];
10->6 [style = bold, label=""];
4->7 [style = bold, label=""];
0->14 [style = solid, label="map2"];
7->20 [style = dotted, label="true"];
23->14 [style = bold, label=""];
21->5 [style = bold, label=""];
18->20 [style = bold, label=""];
3->5 [style = bold, label=""];
12->10 [style = bold, label=""];
11->0 [style = bold, label=""];
0->14 [style = bold, label=""];
19->14 [style = bold, label=""];
13->3 [style = bold, label=""];
1->16 [style = bold, label=""];
12->14 [style = solid, label="map"];
19->14 [style = solid, label="map2"];
12->21 [style = solid, label="map"];
7->4 [style = dotted, label="true"];
8->9 [style = bold, label=""];
1->12 [style = bold, label=""];
12->3 [style = solid, label="map"];
7->18 [style = bold, label=""];
7->18 [style = dotted, label="true"];
7->15 [style = bold, label=""];
11->0 [style = solid, label="in"];
5->11 [style = bold, label=""];
22->1 [style = bold, label=""];
11->19 [style = solid, label="in"];
13->3 [style = solid, label="out"];
23->14 [style = solid, label="map2"];
6->7 [style = bold, label=""];
13->21 [style = bold, label=""];
7->8 [style = dotted, label="true"];
11->23 [style = bold, label=""];
15->8 [style = bold, label=""];
11->23 [style = solid, label="in"];
}
