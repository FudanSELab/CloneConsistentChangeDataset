digraph {
2 [style = filled, label = "assertThat(connectionManager.getConnectionCount()).isEqualTo(2)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "connectionManager.start(backgroundProcessor)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ServerLocation serverLocation1 = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Connection heldConnection1 = connectionManager.borrowConnection(serverLocation1,timeout,false)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Set<ServerLocation> excluded = Collections.emptySet()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(heldConnection2.getServer()).isEqualTo(connection2.getServer())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "returnConnectionReturnsToHead['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "ServerLocation serverLocation1 = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(connection2.getEndpoint()).thenReturn(endpoint2)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(endpoint2.getLocation()).thenReturn(serverLocation2)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "connectionManager.close(false)@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "returnConnectionReturnsToHead['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "exchangeReturnsExistingConnectionIfOneExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Connection heldConnection2 = connectionManager.borrowConnection(serverLocation2,false)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "heldConnection2 = connectionManager.exchangeConnection(heldConnection1,excluded)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ServerLocation serverLocation2 = mock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "connectionManager.returnConnection(heldConnection2)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Endpoint endpoint2 = mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "connectionManager = createDefaultConnectionManager()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "connectionManager.close(false)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "when(connectionFactory.createClientToServerConnection(serverLocation1,false)).thenReturn(connection1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Connection heldConnection2 = connectionManager.borrowConnection(serverLocation2,timeout,false)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "when(connectionFactory.createClientToServerConnection(serverLocation2,false)).thenReturn(connection2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Connection heldConnection1 = connectionManager.borrowConnection(serverLocation1,false)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Connection connection2 = mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "connectionManager.returnConnection(heldConnection2,true)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(connection2.getServer()).thenReturn(serverLocation2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ServerLocation serverLocation2 = mock()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Connection connection1 = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(connectionManager.borrowConnection(timeout).getServer()).isEqualTo(connection2.getServer())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
0->3 [style = bold, label=""];
5->29 [style = bold, label=""];
28->26 [style = solid, label="excluded"];
15->23 [style = dashed, label="0"];
10->0 [style = solid, label="serverLocation2"];
23->5 [style = bold, label=""];
10->23 [style = solid, label="serverLocation2"];
3->1 [style = bold, label=""];
17->6 [style = bold, label=""];
10->15 [style = solid, label="serverLocation2"];
10->19 [style = bold, label=""];
27->28 [style = bold, label=""];
26->25 [style = bold, label=""];
11->4 [style = bold, label=""];
4->13 [style = bold, label=""];
20->0 [style = bold, label=""];
14->22 [style = solid, label="serverLocation1"];
28->7 [style = bold, label=""];
10->1 [style = solid, label="serverLocation2"];
19->5 [style = solid, label="serverLocation2"];
15->26 [style = solid, label="heldConnection1"];
20->1 [style = solid, label="endpoint2"];
13->2 [style = solid, label="heldConnection1"];
19->20 [style = solid, label="connection2"];
22->2 [style = solid, label="heldConnection1"];
9->10 [style = bold, label=""];
22->23 [style = bold, label=""];
23->17 [style = solid, label="heldConnection2"];
25->2 [style = bold, label=""];
5->29 [style = solid, label="heldConnection2"];
15->5 [style = bold, label=""];
14->13 [style = solid, label="serverLocation1"];
1->11 [style = bold, label=""];
19->16 [style = bold, label=""];
14->7 [style = bold, label=""];
29->26 [style = bold, label=""];
7->18 [style = solid, label="connection1"];
14->9 [style = solid, label="serverLocation1"];
7->15 [style = solid, label="serverLocation1"];
5->2 [style = bold, label=""];
19->11 [style = solid, label="serverLocation2"];
6->8 [style = bold, label=""];
12->14 [style = bold, label=""];
18->9 [style = bold, label=""];
7->18 [style = bold, label=""];
9->19 [style = bold, label=""];
13->15 [style = bold, label=""];
2->24 [style = bold, label=""];
19->3 [style = solid, label="serverLocation2"];
16->20 [style = bold, label=""];
13->22 [style = dashed, label="0"];
4->22 [style = bold, label=""];
16->3 [style = solid, label="endpoint2"];
16->0 [style = solid, label="connection2"];
18->9 [style = solid, label="connection1"];
21->14 [style = bold, label=""];
15->17 [style = solid, label="heldConnection2"];
}
