digraph {
8 [style = filled, label = "sub.onComplete()@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sub.onSubscribe(Disposable.empty())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "timedInternalState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "BufferExactUnboundedObserver<Integer,List<Integer>> sub = new BufferExactUnboundedObserver<Integer,List<Integer>>(to,Functions.justSupplier((List<Integer>)new ArrayList<Integer>()),1,TimeUnit.SECONDS,sch)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "sub.onSubscribe(Disposables.empty())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "timedInternalState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "sub.enter()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sub.run()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "sub.onNext(1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sub.buffer = new ArrayList<Integer>()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(sub.isDisposed())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestScheduler sch = new TestScheduler()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sub.onComplete()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestObserver<List<Integer>> to = new TestObserver<List<Integer>>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "sub.onSubscribe(new BooleanSubscription())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertFalse(sub.isDisposed())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "sub.onError(new TestException())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sub.dispose()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "timedInternalState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "TestSubscriber<List<Integer>> ts = new TestSubscriber<List<Integer>>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "BufferExactUnboundedSubscriber<Integer,List<Integer>> sub = new BufferExactUnboundedSubscriber<Integer,List<Integer>>(ts,Functions.justSupplier((List<Integer>)new ArrayList<Integer>()),1,TimeUnit.SECONDS,sch)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->16 [style = bold, label=""];
5->10 [style = bold, label=""];
19->18 [style = bold, label=""];
9->0 [style = bold, label=""];
3->1 [style = bold, label=""];
20->9 [style = bold, label=""];
11->6 [style = bold, label=""];
0->11 [style = bold, label=""];
9->17 [style = bold, label=""];
16->2 [style = bold, label=""];
18->2 [style = bold, label=""];
7->8 [style = bold, label=""];
0->17 [style = dashed, label="0"];
10->7 [style = bold, label=""];
1->13 [style = bold, label=""];
17->19 [style = bold, label=""];
2->12 [style = bold, label=""];
6->18 [style = dashed, label="0"];
6->2 [style = bold, label=""];
6->16 [style = dashed, label="0"];
11->19 [style = dashed, label="0"];
15->9 [style = bold, label=""];
9->19 [style = solid, label="sch"];
14->9 [style = bold, label=""];
12->3 [style = bold, label=""];
0->11 [style = solid, label="to"];
17->19 [style = solid, label="ts"];
4->5 [style = bold, label=""];
9->11 [style = solid, label="sch"];
13->4 [style = bold, label=""];
}
