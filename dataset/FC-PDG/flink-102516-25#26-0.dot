digraph {
11 [style = filled, label = "createTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(new JobVertexID(),\"Test Task\",1,1,invokableClass.getName(),new Configuration())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Class<? extends AbstractInvokable> invokableClass@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"Job Name\",new SerializedValue<>(new ExecutionConfig()),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ShuffleEnvironment<?,?> shuffleEnvironment = new NettyShuffleEnvironmentBuilder().build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ResultPartitionConsumableNotifier consumableNotifier = new NoOpResultPartitionConsumableNotifier()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),mock(),mock(),shuffleEnvironment,new KvStateService(new KvStateRegistry(),null,null),mock(),new TaskEventDispatcher(),ExternalResourceInfoProvider.NO_EXTERNAL_RESOURCES,new TestTaskStateManager(),mock(),mock(),mock(),new NoOpTaskOperatorEventGateway(),new TestGlobalAggregateManager(),classLoaderHandle,mock(),new TestingTaskManagerRuntimeInfo(),taskMetricGroup,consumableNotifier,partitionProducerStateChecker,executor)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TaskMetricGroup taskMetricGroup = UnregisteredMetricGroups.createUnregisteredTaskMetricGroup()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Executor executor = mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "createTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Class<? extends TaskInvokable> invokableClass@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "createTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PartitionProducerStateChecker partitionProducerStateChecker = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final TestingClassLoaderLease classLoaderHandle = TestingClassLoaderLease.newBuilder().setGetOrResolveClassLoaderFunction(null).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),mock(),mock(),shuffleEnvironment,new KvStateService(new KvStateRegistry(),null,null),mock(),new TaskEventDispatcher(),ExternalResourceInfoProvider.NO_EXTERNAL_RESOURCES,new TestTaskStateManager(),mock(),mock(),mock(),new NoOpTaskOperatorEventGateway(),new TestGlobalAggregateManager(),TestingClassLoaderLease.newBuilder().build(),mock(),new TestingTaskManagerRuntimeInfo(),taskMetricGroup,consumableNotifier,partitionProducerStateChecker,executor)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3->2 [style = solid, label="partitionProducerStateChecker"];
4->2 [style = solid, label="taskMetricGroup"];
3->12 [style = solid, label="partitionProducerStateChecker"];
0->4 [style = bold, label=""];
11->10 [style = dotted, label="true"];
9->4 [style = bold, label=""];
6->7 [style = dotted, label="true"];
5->12 [style = solid, label="consumableNotifier"];
1->12 [style = bold, label=""];
4->12 [style = solid, label="taskMetricGroup"];
0->9 [style = bold, label=""];
14->13 [style = bold, label=""];
4->8 [style = bold, label=""];
14->7 [style = dotted, label="true"];
1->2 [style = solid, label="taskInformation"];
5->2 [style = solid, label="consumableNotifier"];
9->2 [style = solid, label="shuffleEnvironment"];
8->1 [style = bold, label=""];
8->12 [style = solid, label="jobInformation"];
3->0 [style = bold, label=""];
1->12 [style = solid, label="taskInformation"];
6->5 [style = bold, label=""];
0->12 [style = solid, label="executor"];
13->12 [style = solid, label="classLoaderHandle"];
0->2 [style = solid, label="executor"];
5->3 [style = bold, label=""];
8->2 [style = solid, label="jobInformation"];
1->2 [style = bold, label=""];
13->5 [style = bold, label=""];
7->10 [style = dashed, label="0"];
11->5 [style = bold, label=""];
2->12 [style = dashed, label="0"];
}
