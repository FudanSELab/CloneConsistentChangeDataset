digraph {
33 [style = filled, label = "int i = v.indexOf(' ')@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "b.set(RESTOP_httpMethod,v.substring(0,i).trim())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "stringStream(a.defaultRequestHeaders()).map(null).forEach(null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "b.setIfNotEmpty(REST_produces,stringList(a.produces()))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ContextPropertiesBuilder b@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "AnnotationInfo<RestPost> ai@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "RestPost a = ai.getAnnotation()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "b.set(REST_serializers,merge(ConverterUtils.toType(b.peek(REST_serializers),),a.serializers()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RestOp a = ai.getAnnotation()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "stringStream(a.defaultQuery()).map(null).forEach(null)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "b.set(REST_parsers,merge(ConverterUtils.toType(b.peek(REST_parsers),),a.parsers()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "stringStream(a.defaultRequestAttributes()).map(null).forEach(null)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "b.setIfNotEmpty(REST_maxInput,string(a.maxInput()))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "AnnotationInfo<RestOp> ai@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "b.appendToIfNotEmpty(REST_defaultRequestHeaders,contentType(string(a.defaultContentType())))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "b.appendToIfNotEmpty(REST_defaultRequestHeaders,accept(string(a.defaultAccept())))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "stringStream(a.defaultFormData()).map(null).forEach(null)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "b.setIf(a.contextClass() != ,RESTOP_contextClass,a.contextClass())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "ContextPropertiesBuilder b@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "b.set(REST_encoders,merge(ConverterUtils.toType(b.peek(REST_encoders),),a.encoders()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "stringStream(a.defaultResponseHeaders()).map(null).forEach(null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "b.set(REST_serializers,merge(ConverterUtils.toType(b.peek(REST_serializers),),a.serializers()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "b.setIfNotEmpty(RESTOP_debug,string(a.debug()))@@@28@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cdStream(a.rolesDeclared()).forEach(null)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "b.setIfNotEmpty(RESTOP_clientVersion,a.clientVersion())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "b.prependTo(RESTOP_path,v.substring(i).trim())@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "v != null@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "b.setIfNotEmpty(RESTOP_httpMethod,\"post\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "stringStream(a.path()).forEach(null)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "b.set(RESTOP_httpMethod,v)@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "RestOperationContextBuilder b@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "b.setIfNotEmpty(REST_defaultCharset,string(a.defaultCharset()))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i == -1@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "b.setIfNotEmpty(RESTOP_path,a.value())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "b.prependTo(REST_converters,a.converters())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "b.addToIfNotEmpty(REST_roleGuard,string(a.roleGuard()))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "b.setIfNotEmpty(REST_consumes,stringList(a.consumes()))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "AnnotationInfo<RestOp> ai@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "b.prependTo(REST_guards,reverse(a.guards()))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "b.setIfNotEmpty(RESTOP_debug,string(a.debug()))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "b.prependTo(RESTOP_matchers,a.matchers())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33->31 [style = solid, label="i"];
17->8 [style = bold, label=""];
27->43 [style = dashed, label="0"];
7->32 [style = bold, label=""];
31->30 [style = dotted, label="false"];
13->24 [style = bold, label=""];
26->10 [style = solid, label="v"];
26->10 [style = bold, label=""];
29->39 [style = bold, label=""];
0->19 [style = bold, label=""];
32->12 [style = bold, label=""];
8->18 [style = bold, label=""];
38->41 [style = dotted, label="true"];
29->3 [style = bold, label=""];
26->1 [style = solid, label="v"];
10->31 [style = dotted, label="true"];
20->14 [style = dotted, label="true"];
20->27 [style = dotted, label="true"];
39->3 [style = bold, label=""];
31->1 [style = bold, label=""];
15->30 [style = bold, label=""];
10->33 [style = dotted, label="true"];
18->2 [style = bold, label=""];
38->42 [style = bold, label=""];
27->36 [style = dashed, label="0"];
12->0 [style = bold, label=""];
25->17 [style = bold, label=""];
22->23 [style = bold, label=""];
31->15 [style = bold, label=""];
42->40 [style = bold, label=""];
37->4 [style = bold, label=""];
20->4 [style = bold, label=""];
23->28 [style = bold, label=""];
19->5 [style = bold, label=""];
37->35 [style = dotted, label="true"];
24->26 [style = bold, label=""];
28->21 [style = bold, label=""];
21->29 [style = bold, label=""];
40->16 [style = bold, label=""];
5->6 [style = bold, label=""];
38->43 [style = dotted, label="true"];
13->26 [style = bold, label=""];
31->1 [style = dotted, label="true"];
9->25 [style = bold, label=""];
34->16 [style = bold, label=""];
6->11 [style = bold, label=""];
4->42 [style = dashed, label="0"];
11->22 [style = bold, label=""];
3->13 [style = bold, label=""];
33->31 [style = bold, label=""];
31->15 [style = dotted, label="false"];
37->36 [style = dotted, label="true"];
10->33 [style = bold, label=""];
2->7 [style = bold, label=""];
16->9 [style = bold, label=""];
4->34 [style = bold, label=""];
}
