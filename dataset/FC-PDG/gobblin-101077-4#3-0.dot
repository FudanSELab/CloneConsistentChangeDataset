digraph {
21 [style = filled, label = "logger.info(\"(Before Delete( Number of specs: \" + specs.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Collection<Spec> specs = topologyCatalog.getSpecs()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "this.topologyCatalog.remove(topologySpec.getUri())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "deleteTopologySpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "createFlowSpec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "logger.info(\"(Before Delete( Spec \" + i++ + \": \" + gson.toJson(topologySpec))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertTrue(specs.size() == 0,\"Spec store should be empty after deletion\")@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(specs.size() == 1,\"Spec store should contain 1 Spec after addition\")@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(specs.size(),0,\"Spec store should be empty before addition\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertEquals(specs.size(),1,\"Spec store should contain 1 Spec after addition\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "logger.info(\"(After Create( Spec \" + i++ + \": \" + gson.toJson(topologySpec))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "this.flowCatalog.put(flowSpec)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Collection<Spec> specs = flowCatalog.getSpecs()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "FlowSpec flowSpec = (FlowSpec)spec@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "specs = topologyCatalog.getSpecs()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "createFlowSpec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "logger.info(\"(Before Create( Number of specs: \" + specs.size())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "flowSpec = (FlowSpec)spec@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(specs.size() == 0,\"Spec store should be empty before addition\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "TopologySpec topologySpec = (TopologySpec)spec@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "logger.info(\"(Before Create( Spec \" + i++ + \": \" + gson.toJson(flowSpec))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(flowCatalog.getSize(),1,\"Spec store should contain 1 Spec after addition\")@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "int i = 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(specs.size() == 1,\"Spec store should initially have 1 Spec before deletion\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "logger.info(\"(After Create( Spec \" + i++ + \": \" + gson.toJson(flowSpec))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "specs = flowCatalog.getSpecs()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i = 0@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "topologySpec = (TopologySpec)spec@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "logger.info(\"(After Create( Number of specs: \" + specs.size())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
17->8 [style = bold, label=""];
24->28 [style = bold, label=""];
1->4 [style = bold, label=""];
27->0 [style = bold, label=""];
2->6 [style = bold, label=""];
19->20 [style = bold, label=""];
0->2 [style = bold, label=""];
8->23 [style = dashed, label="0"];
18->19 [style = bold, label=""];
14->10 [style = bold, label=""];
9->22 [style = dashed, label="0"];
3->1 [style = solid, label="i"];
2->13 [style = solid, label="i"];
1->18 [style = dashed, label="0"];
15->16 [style = bold, label=""];
3->22 [style = bold, label=""];
1->9 [style = bold, label=""];
9->10 [style = solid, label="flowSpec"];
3->18 [style = solid, label="i"];
20->27 [style = bold, label=""];
9->1 [style = solid, label="flowSpec"];
3->9 [style = bold, label=""];
13->28 [style = dashed, label="0"];
5->27 [style = dashed, label="0"];
22->18 [style = bold, label=""];
18->22 [style = bold, label=""];
10->5 [style = bold, label=""];
5->0 [style = bold, label=""];
23->21 [style = bold, label=""];
11->3 [style = bold, label=""];
13->7 [style = bold, label=""];
12->8 [style = bold, label=""];
6->24 [style = dashed, label="0"];
6->13 [style = bold, label=""];
26->23 [style = bold, label=""];
6->13 [style = solid, label="flowSpec"];
24->28 [style = solid, label="topologySpec"];
7->15 [style = dashed, label="0"];
7->25 [style = dashed, label="0"];
28->24 [style = bold, label=""];
28->25 [style = bold, label=""];
4->19 [style = dashed, label="0"];
10->20 [style = dashed, label="0"];
2->28 [style = solid, label="i"];
1->14 [style = bold, label=""];
4->14 [style = dashed, label="0"];
13->15 [style = bold, label=""];
13->6 [style = bold, label=""];
2->24 [style = bold, label=""];
9->1 [style = bold, label=""];
8->11 [style = bold, label=""];
21->3 [style = bold, label=""];
22->18 [style = solid, label="topologySpec"];
11->21 [style = dashed, label="0"];
}
