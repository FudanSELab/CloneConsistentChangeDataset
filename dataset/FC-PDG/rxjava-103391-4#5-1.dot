digraph {
10 [style = filled, label = "buf.error(new TestException())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "values.clear()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "test.advanceTimeBy(2,TimeUnit.SECONDS)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertFalse(buf.hasError())@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "test.advanceTimeBy(1,TimeUnit.SECONDS)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(buf.hasError())@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "values.clear()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "values.clear()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertFalse(buf.hasCompleted())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "TestScheduler test = new TestScheduler()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "buf.next(2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(Arrays.asList(5),values)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<Integer> values = new ArrayList<Integer>()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "test.advanceTimeBy(2,TimeUnit.SECONDS)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "timedAndSizedTruncationError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "buf.next(1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(Arrays.asList(3,4),values)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(1,buf.size)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(Arrays.asList(2),values)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "buf.next(5)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "SizeAndTimeBoundReplayBuffer<Integer> buf = new SizeAndTimeBoundReplayBuffer<Integer>(2,2000,TimeUnit.MILLISECONDS,test,false)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "SizeAndTimeBoundReplayBuffer<Integer> buf = new SizeAndTimeBoundReplayBuffer<>(2,2000,TimeUnit.MILLISECONDS,test,false)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "buf.collect(values)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "buf.complete()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "buf.collect(values)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "timedAndSizedTruncation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "buf.collect(values)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertFalse(buf.hasCompleted())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertFalse(buf.hasError())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertTrue(buf.hasCompleted())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "List<Integer> values = new ArrayList<>()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "buf.next(4)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "test.advanceTimeBy(1,TimeUnit.SECONDS)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertFalse(buf.hasError())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(values.isEmpty())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertFalse(buf.hasCompleted())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "buf.next(3)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "timedAndSizedTruncationError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "buf.collect(values)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->14 [style = solid, label="values"];
6->17 [style = bold, label=""];
17->10 [style = bold, label=""];
10->18 [style = bold, label=""];
1->33 [style = dashed, label="0"];
27->36 [style = bold, label=""];
33->14 [style = solid, label="values"];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
22->2 [style = bold, label=""];
37->24 [style = bold, label=""];
20->9 [style = bold, label=""];
33->29 [style = solid, label="values"];
18->11 [style = bold, label=""];
1->29 [style = solid, label="values"];
24->32 [style = bold, label=""];
33->26 [style = solid, label="values"];
25->4 [style = bold, label=""];
21->24 [style = bold, label=""];
20->1 [style = bold, label=""];
9->7 [style = bold, label=""];
16->22 [style = bold, label=""];
31->12 [style = bold, label=""];
0->15 [style = bold, label=""];
1->11 [style = solid, label="values"];
3->0 [style = bold, label=""];
15->5 [style = bold, label=""];
1->26 [style = solid, label="values"];
26->30 [style = bold, label=""];
24->20 [style = bold, label=""];
17->38 [style = bold, label=""];
24->20 [style = solid, label="test"];
14->26 [style = bold, label=""];
4->31 [style = bold, label=""];
32->9 [style = bold, label=""];
7->33 [style = bold, label=""];
33->11 [style = solid, label="values"];
23->36 [style = dashed, label="0"];
38->18 [style = bold, label=""];
13->27 [style = bold, label=""];
12->29 [style = bold, label=""];
34->24 [style = bold, label=""];
5->6 [style = bold, label=""];
30->3 [style = bold, label=""];
23->19 [style = bold, label=""];
2->14 [style = bold, label=""];
11->13 [style = bold, label=""];
1->12 [style = solid, label="values"];
28->17 [style = bold, label=""];
1->15 [style = solid, label="values"];
33->15 [style = solid, label="values"];
33->12 [style = solid, label="values"];
24->32 [style = solid, label="test"];
27->23 [style = bold, label=""];
20->32 [style = dashed, label="0"];
19->35 [style = dashed, label="0"];
36->35 [style = bold, label=""];
1->5 [style = solid, label="values"];
33->8 [style = bold, label=""];
8->25 [style = bold, label=""];
29->16 [style = bold, label=""];
33->5 [style = solid, label="values"];
6->28 [style = bold, label=""];
}
