digraph {
14 [style = filled, label = "addChild['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "_identifier = ((IdentifierAstNode)childNode).getName()@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "throw new Pql2CompilationException(\"IN predicate has both identifier and function.\")@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "_function == null && _identifier == null@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "throw new Pql2CompilationException(\"Comparison predicate has more than one column/function\")@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "throw new Pql2CompilationException(\"IN predicate has both identifier and function.\")@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "_identifier != null@@@10@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "_function != null@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@89f0ecchildNode@@@35@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "childNode instanceof LiteralAstNode@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "throw new Pql2CompilationException(\"Comparison between two constants is not supported.\")@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "_identifier = node.getName()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "_identifier = TransformExpressionTree.getStandardExpression(childNode)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "_identifier != null@@@4@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "_identifier = ((IdentifierAstNode)childNode).getName()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "_literal != null@@@16@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "throw new Pql2CompilationException(\"Comparison between two constants is not supported\")@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "_literal = (LiteralAstNode)childNode@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "throw new Pql2CompilationException(\"Comparison between function and column is not supported.\")@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "childNode instanceof IdentifierAstNode@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "addChild['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@89f13dchildNode@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "AstNode childNode@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "childNode instanceof FunctionCallAstNode@@@14@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "_identifier == null && _function == null@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "throw new Pql2CompilationException(\"Comparison predicate has more than one column/function\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "_function = (FunctionCallAstNode)childNode@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "LiteralAstNode node = (LiteralAstNode)childNode@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "throw new Pql2CompilationException(\"IN predicate has more than one function.\")@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "childNode instanceof LiteralAstNode@@@26@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "_identifier != null@@@8@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "addChild['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "throw new Pql2CompilationException(\"IN predicate has more than one identifier.\")@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "childNode instanceof FunctionCallAstNode@@@15@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "throw new Pql2CompilationException(\"Comparison between column and function is not supported.\")@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "IdentifierAstNode node = (IdentifierAstNode)childNode@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "_function != null@@@19@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "_literal == null@@@28@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@89f1a9childNode@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
32->37 [style = bold, label=""];
16->13 [style = dotted, label="true"];
14->0 [style = dotted, label="true"];
0->30 [style = solid, label="childNode"];
0->20 [style = solid, label="childNode"];
11->12 [style = dotted, label="true"];
19->31 [style = dotted, label="false"];
11->29 [style = bold, label=""];
20->36 [style = dotted, label="true"];
8->6 [style = bold, label=""];
0->17 [style = solid, label="childNode"];
9->7 [style = bold, label=""];
11->9 [style = bold, label=""];
0->8 [style = solid, label="childNode"];
9->35 [style = bold, label=""];
29->18 [style = bold, label=""];
16->3 [style = dotted, label="false"];
19->5 [style = bold, label=""];
33->11 [style = bold, label=""];
3->5 [style = bold, label=""];
12->10 [style = bold, label=""];
19->38 [style = dashed, label="0"];
10->32 [style = dashed, label="0"];
11->9 [style = dotted, label="false"];
12->18 [style = bold, label=""];
15->31 [style = dashed, label="0"];
7->20 [style = dotted, label="false"];
13->22 [style = bold, label=""];
14->11 [style = bold, label=""];
17->16 [style = bold, label=""];
25->21 [style = bold, label=""];
2->20 [style = dotted, label="true"];
16->3 [style = bold, label=""];
22->25 [style = bold, label=""];
2->20 [style = bold, label=""];
28->18 [style = bold, label=""];
8->6 [style = dotted, label="false"];
13->25 [style = dotted, label="true"];
0->25 [style = solid, label="childNode"];
9->2 [style = bold, label=""];
19->38 [style = dotted, label="true"];
20->34 [style = bold, label=""];
1->34 [style = dashed, label="0"];
18->15 [style = bold, label=""];
18->19 [style = bold, label=""];
11->12 [style = bold, label=""];
9->23 [style = dashed, label="0"];
24->20 [style = bold, label=""];
7->23 [style = dotted, label="true"];
13->22 [style = dotted, label="true"];
12->10 [style = dotted, label="true"];
12->32 [style = dotted, label="true"];
27->11 [style = bold, label=""];
7->23 [style = bold, label=""];
13->5 [style = bold, label=""];
9->4 [style = dotted, label="true"];
11->8 [style = bold, label=""];
7->13 [style = dotted, label="false"];
11->8 [style = dotted, label="false"];
0->9 [style = solid, label="childNode"];
19->38 [style = bold, label=""];
23->24 [style = dotted, label="true"];
12->37 [style = dotted, label="true"];
6->17 [style = bold, label=""];
9->35 [style = dotted, label="false"];
33->0 [style = dotted, label="true"];
22->26 [style = bold, label=""];
16->13 [style = bold, label=""];
23->20 [style = bold, label=""];
0->4 [style = solid, label="childNode"];
0->32 [style = solid, label="childNode"];
2->1 [style = bold, label=""];
0->13 [style = solid, label="childNode"];
11->29 [style = dotted, label="true"];
18->19 [style = dotted, label="true"];
12->32 [style = bold, label=""];
7->4 [style = bold, label=""];
7->20 [style = bold, label=""];
0->35 [style = solid, label="childNode"];
6->5 [style = bold, label=""];
10->5 [style = bold, label=""];
29->28 [style = dotted, label="true"];
22->26 [style = dotted, label="true"];
8->9 [style = dotted, label="true"];
18->21 [style = bold, label=""];
9->7 [style = dotted, label="true"];
4->5 [style = bold, label=""];
20->36 [style = bold, label=""];
12->18 [style = dotted, label="false"];
12->19 [style = dotted, label="false"];
20->34 [style = dotted, label="false"];
7->13 [style = bold, label=""];
2->1 [style = dotted, label="false"];
0->5 [style = solid, label="childNode"];
19->31 [style = bold, label=""];
0->21 [style = solid, label="childNode"];
26->25 [style = bold, label=""];
9->2 [style = dotted, label="false"];
18->15 [style = dotted, label="false"];
11->18 [style = dotted, label="true"];
0->6 [style = solid, label="childNode"];
6->17 [style = dotted, label="true"];
15->5 [style = bold, label=""];
0->11 [style = solid, label="childNode"];
20->5 [style = bold, label=""];
7->20 [style = dotted, label="true"];
29->28 [style = bold, label=""];
20->21 [style = bold, label=""];
17->13 [style = solid, label="node"];
23->24 [style = bold, label=""];
4->30 [style = bold, label=""];
27->0 [style = dotted, label="true"];
20->36 [style = dashed, label="0"];
7->4 [style = dotted, label="true"];
0->7 [style = solid, label="childNode"];
8->9 [style = bold, label=""];
12->29 [style = dashed, label="0"];
12->19 [style = bold, label=""];
7->30 [style = dotted, label="true"];
13->21 [style = bold, label=""];
11->7 [style = bold, label=""];
6->16 [style = dotted, label="true"];
11->7 [style = dotted, label="false"];
}
