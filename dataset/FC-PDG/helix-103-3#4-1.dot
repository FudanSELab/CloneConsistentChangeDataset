digraph {
27 [style = filled, label = "ZnodeOpArg arg@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "arg = new ZnodeOpArg(pathChild2,ZnodePropertyType.ZNODE,\"==\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "new Thread(){@Override public void run(){try {Thread.sleep(3000)final ZkClient zkClient = new ZkClient(ZK_ADDR)zkClient.setZkSerializer(new ZNRecordSerializer())zkClient.createPersistent(pathChild1,true)zkClient.writeData(pathChild1,record)}catch (InterruptedException e) }}.start()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "arg = new ZnodeOpArg(pathChild2,ZnodePropertyType.ZNODE,\"+\",record)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "commandList.add(command)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "command = new TestCommand(CommandType.VERIFY,new TestTrigger(3100,0,\"simpleValue1-new\"),arg)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "commandList.add(command)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "arg = new ZnodeOpArg(pathChild2,ZnodePropertyType.ZNODE,\"+\",recordNew)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "ZnodeOpArg arg1 = new ZnodeOpArg(pathChild1,ZnodePropertyType.ZNODE,\"+\",recordNew)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "testDataTriggerWithTimeout['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "commandList.add(command)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "commandList.add(command1)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String pathChild2 = PREFIX + \"/data_trigger_child2\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "arg1 = new ZnodeOpArg(pathChild1,ZnodePropertyType.ZNODE,\"==\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "arg = new ZnodeOpArg(pathChild1,ZnodePropertyType.SIMPLE,\"!=\",\"key1\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "command = new TestCommand(CommandType.MODIFY,new TestTrigger(0,3000,record),arg)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testDataTrigger['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "ZnodeOpArg arg1 = new ZnodeOpArg(pathChild1,ZnodePropertyType.SIMPLE,\"+\",\"key1\",\"simpleValue1-new\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "boolean result = results.remove(command1).booleanValue()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "command = new TestCommand(CommandType.MODIFY,new TestTrigger(1000),arg)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "recordNew.setSimpleField(IdealStateProperty.REBALANCE_MODE.toString(),RebalanceMode.SEMI_AUTO.toString())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "Assert.assertTrue(entry.getValue())@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "recordNew.setSimpleField(IdealStateProperty.IDEAL_STATE_MODE.toString(),IdealStateModeProperty.AUTO.toString())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "command1 = new TestCommand(CommandType.VERIFY,new TestTrigger(9000,500,recordNew),arg1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "AssertJUnit.assertFalse(result)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ZNRecord recordNew = new ZNRecord(record)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "TestCommand command@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "logger.info(\"END: \" + new Date(System.currentTimeMillis()))@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Map<TestCommand,Boolean> results = TestExecutor.executeTest(commandList,ZK_ADDR)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "commandList.add(command1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "command = new TestCommand(CommandType.VERIFY,new TestTrigger(3100,0,recordNew),arg)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<TestCommand,Boolean> results = TestExecutor.executeTest(commandList,ZK_ADDR)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<TestCommand> commandList = new ArrayList<TestCommand>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestCommand command1 = new TestCommand(CommandType.MODIFY,new TestTrigger(0,0,\"simpleValue1\"),arg1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final ZNRecord record = getExampleZNRecord()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "commandList.add(command1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "commandList.add(command)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "TestCommand command1 = new TestCommand(CommandType.MODIFY,new TestTrigger(0,8000,record),arg1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "String pathChild1 = PREFIX + \"/data_trigger_child1\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final String pathChild1 = PREFIX + \"/dataTriggerWithTimeout_child1\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertTrue(entry.getValue())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ZNRecord record = getExampleZNRecord()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testDataTrigger['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "logger.info(\"RUN: \" + new Date(System.currentTimeMillis()))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->13 [style = bold, label=""];
41->39 [style = solid, label="arg1"];
42->41 [style = bold, label=""];
15->10 [style = bold, label=""];
6->26 [style = solid, label="record"];
25->18 [style = solid, label="pathChild2"];
10->38 [style = dashed, label="0"];
7->31 [style = bold, label=""];
17->3 [style = solid, label="commandList"];
29->18 [style = bold, label=""];
9->6 [style = bold, label=""];
19->24 [style = bold, label=""];
12->2 [style = bold, label=""];
3->19 [style = bold, label=""];
35->37 [style = bold, label=""];
38->7 [style = bold, label=""];
7->4 [style = solid, label="command1"];
26->15 [style = bold, label=""];
0->8 [style = bold, label=""];
38->7 [style = solid, label="arg1"];
14->26 [style = solid, label="arg"];
21->0 [style = solid, label="pathChild1"];
7->14 [style = solid, label="recordNew"];
11->4 [style = dashed, label="0"];
17->21 [style = bold, label=""];
31->14 [style = bold, label=""];
11->28 [style = bold, label=""];
43->16 [style = bold, label=""];
18->12 [style = bold, label=""];
18->12 [style = solid, label="arg"];
16->17 [style = bold, label=""];
21->25 [style = bold, label=""];
21->28 [style = solid, label="pathChild1"];
8->9 [style = solid, label="command1"];
24->5 [style = bold, label=""];
6->10 [style = solid, label="record"];
25->27 [style = bold, label=""];
25->14 [style = solid, label="pathChild2"];
17->34 [style = bold, label=""];
19->24 [style = solid, label="result"];
35->37 [style = solid, label="record"];
34->35 [style = bold, label=""];
6->7 [style = bold, label=""];
5->22 [style = bold, label=""];
13->0 [style = bold, label=""];
26->39 [style = dashed, label="0"];
4->14 [style = bold, label=""];
25->10 [style = solid, label="pathChild2"];
21->34 [style = dashed, label="0"];
2->3 [style = bold, label=""];
20->11 [style = solid, label="command"];
15->32 [style = dashed, label="0"];
7->4 [style = bold, label=""];
4->33 [style = bold, label=""];
0->8 [style = solid, label="arg1"];
12->2 [style = solid, label="command"];
40->36 [style = bold, label=""];
39->32 [style = bold, label=""];
1->29 [style = bold, label=""];
10->20 [style = solid, label="arg"];
37->42 [style = bold, label=""];
14->41 [style = dashed, label="0"];
35->39 [style = solid, label="record"];
20->11 [style = bold, label=""];
34->38 [style = solid, label="pathChild1"];
39->32 [style = solid, label="command1"];
23->16 [style = bold, label=""];
10->20 [style = bold, label=""];
7->12 [style = solid, label="recordNew"];
28->1 [style = solid, label="arg"];
4->31 [style = dashed, label="0"];
28->1 [style = bold, label=""];
26->15 [style = solid, label="command"];
37->41 [style = solid, label="recordNew"];
14->26 [style = bold, label=""];
32->38 [style = bold, label=""];
1->29 [style = solid, label="command"];
33->40 [style = bold, label=""];
6->7 [style = solid, label="record"];
8->9 [style = bold, label=""];
34->41 [style = solid, label="pathChild1"];
17->40 [style = solid, label="commandList"];
41->39 [style = bold, label=""];
30->16 [style = bold, label=""];
20->7 [style = dashed, label="0"];
37->7 [style = solid, label="recordNew"];
}
