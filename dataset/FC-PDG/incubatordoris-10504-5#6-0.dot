digraph {
12 [style = filled, label = "TStreamLoadPutRequest request = getBaseRequest()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testColumnsNormal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "TupleDescriptor dstDesc = descTbl.createTupleDescriptor(\"DstTableDesc\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "slot.setIsNullable(true)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "StreamLoadTask streamLoadTask = StreamLoadTask.fromTStreamLoadPutRequest(request,db)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "TPlanNode planNode = new TPlanNode()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "scanNode.getNodeExplainString(\"\",TExplainLevel.NORMAL)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testWhereNormal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "new Expectations(){}@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "scanNode.toThrift(planNode)@@@39@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DescriptorTable descTbl = analyzer.getDescTbl()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "request.setColumns(\"k1,k2,v1, v2=k2\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "slot.setIsNullable(false)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testColumnsNormal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "scanNode.init(analyzer)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Analyzer analyzer = new Analyzer(catalog,connectContext)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "slot.setIsMaterialized(true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "request.setColumns(\"k1,k2,v1, v2=k1\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "column.isAllowNull()@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "request.setWhere(\"k1 = 1\")@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "slot.setColumn(column)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "scanNode.finalize(analyzer)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "SlotDescriptor slot = descTbl.addSlotDescriptor(dstDesc)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<Column> columns = getBaseSchema()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "StreamLoadScanNode scanNode = getStreamLoadScanNode(dstDesc,request)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = bold, label=""];
8->7 [style = solid, label="analyzer"];
15->10 [style = bold, label=""];
8->5 [style = solid, label="analyzer"];
13->11 [style = solid, label="dstDesc"];
4->17 [style = bold, label=""];
3->1 [style = bold, label=""];
0->17 [style = bold, label=""];
12->11 [style = solid, label="request"];
3->11 [style = bold, label=""];
21->8 [style = bold, label=""];
13->20 [style = solid, label="dstDesc"];
6->2 [style = solid, label="planNode"];
1->11 [style = bold, label=""];
7->14 [style = bold, label=""];
6->2 [style = bold, label=""];
3->23 [style = dashed, label="0"];
11->5 [style = bold, label=""];
17->12 [style = bold, label=""];
23->22 [style = bold, label=""];
20->16 [style = bold, label=""];
19->13 [style = bold, label=""];
12->1 [style = solid, label="request"];
10->0 [style = bold, label=""];
10->0 [style = dotted, label="false"];
4->20 [style = bold, label=""];
8->9 [style = bold, label=""];
10->4 [style = bold, label=""];
9->19 [style = bold, label=""];
5->7 [style = bold, label=""];
0->20 [style = bold, label=""];
12->23 [style = bold, label=""];
12->3 [style = bold, label=""];
18->8 [style = bold, label=""];
24->8 [style = bold, label=""];
10->4 [style = dotted, label="true"];
14->6 [style = bold, label=""];
22->11 [style = bold, label=""];
13->20 [style = bold, label=""];
}
