digraph {
1 [style = filled, label = "RestRequest fakeRequest = new FakeRestRequest.Builder(xContentRegistry()).withHeaders(restHeaders).build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "AssertingChannel channel = new AssertingChannel(fakeRequest,false,RestStatus.BAD_REQUEST)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testRequestWithDisallowedMultiValuedHeaderButSameValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "RestRequest fakeRequest = new FakeRestRequest.Builder(xContentRegistry()).withHeaders(restHeaders).withPath(\"/bar\").build()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "restController.registerHandler(RestRequest.Method.GET,\"/bar\",new RestHandler(){@Override public void handleRequest(RestRequest request,RestChannel channel,NodeClient client){channel.sendResponse(new BytesRestResponse(RestStatus.OK,BytesRestResponse.TEXT_CONTENT_TYPE,BytesArray.EMPTY))}})@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "restController.dispatchRequest(fakeRequest,channel,threadContext)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "restHeaders.put(\"header.1\",Collections.singletonList(\"boo\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final RestController restController = new RestController(headers,null,null,circuitBreakerService,usageService)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Map<String,List<String>> restHeaders = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testRequestWithDisallowedMultiValuedHeader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "final ThreadContext threadContext = client.threadPool().getThreadContext()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final ThreadContext threadContext = new ThreadContext(Settings.EMPTY)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(channel.getSendResponseCalled())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "restController.dispatchRequest(fakeRequest,channel,threadContext)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "restHeaders.put(\"header.2\",List.of(\"foo\",\"bar\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(channel.getSendResponseCalled())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testRequestWithDisallowedMultiValuedHeader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "AssertingChannel channel = new AssertingChannel(fakeRequest,false,RestStatus.OK)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "restHeaders.put(\"header.2\",List.of(\"foo\",\"foo\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Set<RestHeaderDefinition> headers = new HashSet<>(Arrays.asList(new RestHeaderDefinition(\"header.1\",true),new RestHeaderDefinition(\"header.2\",false)))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->6 [style = solid, label="threadContext"];
15->14 [style = solid, label="channel"];
5->8 [style = bold, label=""];
0->4 [style = bold, label=""];
11->12 [style = bold, label=""];
3->6 [style = solid, label="channel"];
13->19 [style = bold, label=""];
14->18 [style = bold, label=""];
8->0 [style = bold, label=""];
19->15 [style = solid, label="fakeRequest"];
9->2 [style = bold, label=""];
10->5 [style = solid, label="headers"];
2->10 [style = bold, label=""];
1->6 [style = solid, label="fakeRequest"];
12->6 [style = solid, label="threadContext"];
0->13 [style = bold, label=""];
4->1 [style = bold, label=""];
2->14 [style = solid, label="threadContext"];
3->6 [style = bold, label=""];
16->2 [style = bold, label=""];
12->10 [style = bold, label=""];
1->19 [style = dashed, label="0"];
1->3 [style = bold, label=""];
17->15 [style = bold, label=""];
15->14 [style = bold, label=""];
19->17 [style = bold, label=""];
1->3 [style = solid, label="fakeRequest"];
4->13 [style = dashed, label="0"];
6->7 [style = bold, label=""];
19->14 [style = solid, label="fakeRequest"];
10->5 [style = bold, label=""];
2->12 [style = dashed, label="0"];
}
