digraph {
6 [style = filled, label = "final KafkaFutureImpl<Long> expiryTimeFuture = new KafkaFutureImpl<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final RenewDelegationTokenOptions options@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "runnable.call(new Call(\"renewDelegationToken\",calcDeadlineMs(now,options.timeoutMs()),new LeastLoadedNodeProvider()){@Override RenewDelegationTokenRequest.Builder createRequest(int timeoutMs){return new RenewDelegationTokenRequest.Builder(new RenewDelegationTokenRequestData().setHmac(hmac).setRenewPeriodMs(options.renewTimePeriodMs()))}@Override void handleResponse(AbstractResponse abstractResponse){RenewDelegationTokenResponse response = (RenewDelegationTokenResponse)abstractResponseif (response.hasError()) {expiryTimeFuture.completeExceptionally(response.error().exception())}{expiryTimeFuture.complete(response.expiryTimestamp())}}@Override void handleFailure(Throwable throwable){expiryTimeFuture.completeExceptionally(throwable)}},now)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return new ExpireDelegationTokenResult(expiryTimeFuture)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return new RenewDelegationTokenResult(expiryTimeFuture)@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "renewDelegationToken['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "runnable.call(new Call(\"expireDelegationToken\",calcDeadlineMs(now,options.timeoutMs()),new LeastLoadedNodeProvider()){@Override AbstractRequest.Builder<ExpireDelegationTokenRequest> createRequest(int timeoutMs){return new ExpireDelegationTokenRequest.Builder(new ExpireDelegationTokenRequestData().setHmac(hmac).setExpiryTimePeriodMs(options.expiryTimePeriodMs()))}@Override void handleResponse(AbstractResponse abstractResponse){ExpireDelegationTokenResponse response = (ExpireDelegationTokenResponse)abstractResponseif (response.hasError()) {expiryTimeFuture.completeExceptionally(response.error().exception())}{expiryTimeFuture.complete(response.expiryTimestamp())}}@Override void handleFailure(Throwable throwable){expiryTimeFuture.completeExceptionally(throwable)}},now)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final long now = time.milliseconds()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "renewDelegationToken['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final byte(( hmac@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expireDelegationToken['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final byte(( hmac@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final ExpireDelegationTokenOptions options@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final RenewDelegationTokenOptions options@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6->3 [style = bold, label=""];
2->0 [style = dotted, label="true"];
2->6 [style = bold, label=""];
3->10 [style = solid, label="now"];
12->6 [style = bold, label=""];
3->4 [style = bold, label=""];
1->13 [style = dashed, label="0"];
3->10 [style = bold, label=""];
12->13 [style = dotted, label="true"];
5->11 [style = dashed, label="0"];
6->5 [style = solid, label="expiryTimeFuture"];
2->1 [style = dotted, label="true"];
6->11 [style = solid, label="expiryTimeFuture"];
7->6 [style = bold, label=""];
3->4 [style = solid, label="now"];
4->10 [style = dashed, label="0"];
7->1 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
4->5 [style = bold, label=""];
12->9 [style = dotted, label="true"];
10->11 [style = bold, label=""];
}
