digraph {
27 [style = filled, label = "verify(libvirtComputingResource,times(1)).getLibvirtUtilitiesHelper()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "final Connect conn = Mockito.mock()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testPvlanSetupCommandDhcpAdd['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final String dhcpIp = \"127.0.0.1\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "when(libvirtComputingResource.getGuestBridgeName()).thenReturn(guestBridgeName)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final List<InterfaceDef> ifaces = new ArrayList<InterfaceDef>()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertNotNull(wrapper)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "when(libvirtComputingResource.getOvsPvlanDhcpHostPath()).thenReturn(ovsPvlanDhcpHostPath)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final PvlanSetupCommand command = PvlanSetupCommand.createDhcpSetup(op,uri,networkTag,dhcpName,dhcpMac,dhcpIp)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final String op = \"add\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ifaces.add(nic)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final String guestBridgeName = \"br0\"@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final URI uri = URI.create(\"http://localhost\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final LibvirtException e@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testPvlanSetupCommandVm['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testPvlanSetupCommandVm['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(libvirtComputingResource.getTimeout()).thenReturn(Duration.ZERO)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String networkTag = \"/105\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(answer.getResult())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final InterfaceDef nic = Mockito.mock()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final String dhcpName = \"dhcp\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertFalse(answer.getResult())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final String vmMac = \"00:00:00:00\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "verify(libvirtUtilitiesHelper,times(1)).getConnectionByVmName(dhcpName)@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final String dhcpMac = \"00:00:00:00\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final URI uri = URI.create(\"pvlan://200-p200\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "when(libvirtComputingResource.getInterfaces(conn,dhcpName)).thenReturn(ifaces)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final String guestBridgeName = \"br0\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(libvirtComputingResource.getGuestBridgeName()).thenReturn(guestBridgeName)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "fail(e.getMessage())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "when(libvirtUtilitiesHelper.getConnectionByVmName(dhcpName)).thenReturn(conn)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final String ovsPvlanDhcpHostPath = \"/pvlan\"@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "when(libvirtComputingResource.getTimeout()).thenReturn(Duration.ZERO)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final String ovsPvlanVmPath = \"/pvlan\"@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final PvlanSetupCommand command = PvlanSetupCommand.createVmSetup(op,uri,networkTag,vmMac)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->19 [style = bold, label=""];
37->7 [style = bold, label=""];
21->11 [style = bold, label=""];
22->38 [style = bold, label=""];
8->14 [style = bold, label=""];
24->32 [style = bold, label=""];
38->28 [style = bold, label=""];
27->25 [style = bold, label=""];
23->25 [style = solid, label="dhcpName"];
12->23 [style = dashed, label="0"];
31->29 [style = solid, label="nic"];
14->32 [style = solid, label="networkTag"];
34->24 [style = bold, label=""];
19->20 [style = bold, label=""];
5->9 [style = solid, label="wrapper"];
6->0 [style = bold, label=""];
26->31 [style = bold, label=""];
9->3 [style = bold, label=""];
11->32 [style = solid, label="op"];
12->13 [style = solid, label="vmMac"];
23->32 [style = solid, label="dhcpName"];
2->6 [style = solid, label="guestBridgeName"];
34->32 [style = solid, label="dhcpMac"];
32->38 [style = solid, label="command"];
36->22 [style = bold, label=""];
14->12 [style = bold, label=""];
35->33 [style = solid, label="libvirtUtilitiesHelper"];
37->17 [style = solid, label="conn"];
11->15 [style = bold, label=""];
36->22 [style = solid, label="wrapper"];
8->13 [style = solid, label="uri"];
5->9 [style = bold, label=""];
15->13 [style = solid, label="uri"];
39->30 [style = dotted, label="true"];
26->18 [style = solid, label="ifaces"];
12->13 [style = bold, label=""];
1->11 [style = bold, label=""];
13->3 [style = solid, label="command"];
0->10 [style = bold, label=""];
23->34 [style = bold, label=""];
28->27 [style = bold, label=""];
10->7 [style = bold, label=""];
32->35 [style = bold, label=""];
11->13 [style = solid, label="op"];
7->5 [style = solid, label="guestBridgeName"];
15->14 [style = bold, label=""];
11->8 [style = bold, label=""];
35->37 [style = bold, label=""];
8->15 [style = dashed, label="0"];
29->17 [style = bold, label=""];
7->20 [style = dashed, label="0"];
8->32 [style = solid, label="uri"];
19->20 [style = solid, label="ovsPvlanDhcpHostPath"];
2->6 [style = bold, label=""];
7->5 [style = bold, label=""];
14->23 [style = bold, label=""];
10->19 [style = dashed, label="0"];
18->36 [style = bold, label=""];
31->29 [style = bold, label=""];
24->32 [style = solid, label="dhcpIp"];
13->2 [style = bold, label=""];
16->11 [style = bold, label=""];
39->30 [style = bold, label=""];
30->36 [style = bold, label=""];
14->13 [style = solid, label="networkTag"];
3->4 [style = bold, label=""];
10->7 [style = solid, label="ovsPvlanVmPath"];
20->33 [style = bold, label=""];
33->26 [style = bold, label=""];
17->18 [style = bold, label=""];
}
