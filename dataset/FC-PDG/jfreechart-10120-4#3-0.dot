digraph {
6 [style = filled, label = "CategoryPlot p2@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(p1.getClass() == p2.getClass())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "LineAndShapeRenderer r1 = new LineAndShapeRenderer()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testBug2817504['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "p2 = CloneUtils.clone(p1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertTrue(p1.equals(p2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "XYLineAndShapeRenderer r2 = (XYLineAndShapeRenderer)p2.getRenderer()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "p1.setRenderer(r1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "fail(\"Cloning failed.\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(p1 != p2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CloneNotSupportedException e@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(r2.getPlot() == p2)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "LineAndShapeRenderer r2 = (LineAndShapeRenderer)p2.getRenderer()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testBug2817504['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "XYPlot p1 = new XYPlot()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "CategoryPlot p1 = new CategoryPlot()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(p1.getClass() == p2.getClass())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testBug2817504['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "XYLineAndShapeRenderer r1 = new XYLineAndShapeRenderer()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(r2.getPlot() == p2)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(p1 != p2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "XYPlot p2 = (XYPlot)p1.clone()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "p2 = (CategoryPlot)p1.clone()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertTrue(p1.equals(p2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
1->14 [style = solid, label="p1"];
6->3 [style = bold, label=""];
8->10 [style = bold, label=""];
1->4 [style = bold, label=""];
22->18 [style = solid, label="p2"];
12->23 [style = dashed, label="0"];
22->17 [style = solid, label="p2"];
21->19 [style = bold, label=""];
22->19 [style = solid, label="p2"];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
24->0 [style = bold, label=""];
4->0 [style = solid, label="r1"];
16->24 [style = bold, label=""];
11->12 [style = bold, label=""];
3->8 [style = solid, label="p2"];
12->9 [style = bold, label=""];
6->22 [style = dashed, label="0"];
4->0 [style = bold, label=""];
1->8 [style = solid, label="p1"];
6->14 [style = bold, label=""];
3->9 [style = solid, label="p2"];
5->13 [style = dotted, label="true"];
10->11 [style = bold, label=""];
20->16 [style = bold, label=""];
16->17 [style = solid, label="p1"];
14->8 [style = solid, label="p2"];
24->0 [style = solid, label="r1"];
5->7 [style = dotted, label="true"];
1->16 [style = dashed, label="0"];
3->8 [style = bold, label=""];
0->22 [style = bold, label=""];
19->23 [style = bold, label=""];
14->11 [style = solid, label="p2"];
22->17 [style = bold, label=""];
3->11 [style = solid, label="p2"];
5->7 [style = bold, label=""];
14->8 [style = bold, label=""];
4->24 [style = dashed, label="0"];
13->8 [style = bold, label=""];
3->14 [style = dashed, label="0"];
14->9 [style = solid, label="p2"];
17->21 [style = bold, label=""];
23->18 [style = bold, label=""];
15->1 [style = bold, label=""];
}
