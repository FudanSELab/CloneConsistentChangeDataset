digraph {
1 [style = filled, label = "assertRouteForDropIndexStatementDoNotFoundTables['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "IndexSegment segment = mock(,RETURNS_DEEP_STUBS)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shardingTableBroadcastRoutingEngine.route(routeContext,createShardingRule(false))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "IndexSegment segment = mock(,RETURNS_DEEP_STUBS)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds1\",\"t_order_0\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order_0\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(segment.getIdentifier().getValue()).thenReturn(\"t_order\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(schema.get(anyString()).getIndexes().containsKey(anyString())).thenReturn(false)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(schema.get(anyString()).getIndexes().containsKey(anyString())).thenReturn(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds1\",\"t_order_1\")@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ShardingTableBroadcastRoutingEngine shardingTableBroadcastRoutingEngine = new ShardingTableBroadcastRoutingEngine(schema,sqlStatementContext,tableNames)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "when(sqlStatementContext.getTablesContext().getTableNames()).thenReturn(tableNames)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertRouteForDropIndexStatement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "when(((TableAvailable)sqlStatementContext).getAllTables()).thenReturn(Collections.emptyList())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Collection<String> tableNames = Collections.emptyList()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertRouteForDropIndexStatementDoNotFoundTables['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "ShardingSphereSchema schema = mock(,RETURNS_DEEP_STUBS)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(((IndexAvailable)sqlStatementContext).getIndexes()).thenReturn(Collections.singletonList(segment))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(routeContext.getActualDataSourceNames().size(),is(2))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "when(schema.getAllTableNames()).thenReturn(Collections.singleton(\"t_order\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SQLStatementContext<DropIndexStatement> sqlStatementContext = mock(,RETURNS_DEEP_STUBS)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "RouteContext routeContext = new RouteContext()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Iterator<RouteUnit> routeUnits = routeContext.getRouteUnits().iterator()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order_1\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(sqlStatementContext.getTablesContext().getTableNames()).thenReturn(Collections.emptyList())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ShardingTableBroadcastRoutingEngine shardingTableBroadcastRoutingEngine = new ShardingTableBroadcastRoutingEngine(schema,sqlStatementContext)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->6 [style = bold, label=""];
23->2 [style = bold, label=""];
5->7 [style = solid, label="schema"];
13->7 [style = bold, label=""];
4->7 [style = bold, label=""];
9->12 [style = dashed, label="0"];
4->16 [style = bold, label=""];
22->24 [style = bold, label=""];
7->11 [style = solid, label="routeContext"];
24->20 [style = bold, label=""];
12->14 [style = bold, label=""];
9->7 [style = solid, label="sqlStatementContext"];
3->4 [style = solid, label="sqlStatementContext"];
18->5 [style = bold, label=""];
7->8 [style = solid, label="routeContext"];
14->13 [style = bold, label=""];
5->4 [style = solid, label="schema"];
12->13 [style = solid, label="tableNames"];
7->11 [style = bold, label=""];
2->16 [style = solid, label="segment"];
6->2 [style = bold, label=""];
11->8 [style = solid, label="routeContext"];
2->3 [style = bold, label=""];
5->0 [style = bold, label=""];
8->19 [style = dashed, label="0"];
5->21 [style = bold, label=""];
3->12 [style = bold, label=""];
10->4 [style = bold, label=""];
11->8 [style = bold, label=""];
5->13 [style = solid, label="schema"];
19->17 [style = bold, label=""];
3->9 [style = bold, label=""];
12->14 [style = solid, label="tableNames"];
3->13 [style = solid, label="sqlStatementContext"];
15->5 [style = bold, label=""];
16->7 [style = bold, label=""];
4->13 [style = dashed, label="0"];
21->23 [style = bold, label=""];
25->22 [style = bold, label=""];
17->25 [style = bold, label=""];
8->19 [style = bold, label=""];
9->10 [style = bold, label=""];
1->5 [style = bold, label=""];
}
