digraph {
27 [style = filled, label = "DoFnRunner<InputT,OutputT> doFnRunner = DoFnRunners.simpleRunner(serializableOptions.get(),doFn,CachedSideInputReader.of(new SparkSideInputReader(sideInputs,broadcastStateData)),outputManager,mainOutputTag,additionalOutputTags,new NoOpStepContext(),inputCoder,outputCoderMap,windowingStrategy,doFnSchemaInformation,sideInputMapping)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "key = ((KV)currentValue.getValue()).getKey()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Object key = null@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "stateful@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "timerInternals = new InMemoryTimerInternals()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final InMemoryStateInternals<?> stateInternals = InMemoryStateInternals.forKey(key)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return new ProcessContext<>(doFn,doFnRunnerWithMetrics,outputManager,Collections.emptyIterator()).processPartition(iter).iterator()@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final StepContext context@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "DoFnInvokers.tryInvokeSetupFor(doFn,options.get())@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "call['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "iter = Iterators.concat(Iterators.singletonIterator(currentValue),iter)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "timerInternals = null@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Iterator<WindowedValue<InputT>> iter@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "wasSetupCalled = true@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DoFnInvokers.tryInvokeSetupFor(doFn)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "context = new SparkProcessContext.NoOpStepContext()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return new SparkProcessContext<>(doFn,doFnRunnerWithMetrics,outputManager,key,stateful? new TimerDataIterator(timerInternals): Collections.emptyIterator()).processPartition(iter).iterator()@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DoFnOutputManager outputManager = new DoFnOutputManager()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "!wasSetupCalled && iter.hasNext()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "context = new StepContext(){@Override public StateInternals stateInternals(){return stateInternals}@Override public TimerInternals timerInternals(){return timerInternals}}@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "DoFnRunnerWithMetrics<InputT,OutputT> doFnRunnerWithMetrics = new DoFnRunnerWithMetrics<>(stepName,doFnRunner,metricsAccum)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "iter.hasNext()@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "WindowedValue<InputT> currentValue = iter.next()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "call['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final DoFnRunner<InputT,OutputT> doFnRunner = DoFnRunners.simpleRunner(options.get(),doFn,CachedSideInputReader.of(new SparkSideInputReader(sideInputs)),outputManager,mainOutputTag,additionalOutputTags,context,inputCoder,outputCoders,windowingStrategy,doFnSchemaInformation,sideInputMapping)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DoFnRunnerWithMetrics<InputT,OutputT> doFnRunnerWithMetrics = new DoFnRunnerWithMetrics<>(stepName,doFnRunner,metricsAccum)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "call['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final InMemoryTimerInternals timerInternals@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->4 [style = dotted, label="true"];
11->20 [style = bold, label=""];
14->3 [style = bold, label=""];
13->4 [style = bold, label=""];
14->16 [style = bold, label=""];
20->10 [style = bold, label=""];
27->25 [style = bold, label=""];
19->1 [style = bold, label=""];
8->0 [style = bold, label=""];
6->0 [style = solid, label="currentValue"];
27->25 [style = solid, label="doFnRunner"];
2->5 [style = bold, label=""];
13->4 [style = solid, label="timerInternals"];
1->21 [style = bold, label=""];
25->26 [style = bold, label=""];
18->8 [style = dotted, label="true"];
14->16 [style = dotted, label="true"];
11->20 [style = solid, label="context"];
17->0 [style = solid, label="iter"];
14->7 [style = dotted, label="true"];
6->8 [style = bold, label=""];
4->20 [style = bold, label=""];
20->10 [style = solid, label="doFnRunner"];
9->17 [style = dotted, label="true"];
4->20 [style = solid, label="context"];
3->27 [style = bold, label=""];
21->2 [style = bold, label=""];
8->12 [style = solid, label="key"];
12->13 [style = bold, label=""];
3->20 [style = solid, label="outputManager"];
21->12 [style = solid, label="key"];
18->6 [style = dotted, label="true"];
7->3 [style = bold, label=""];
2->18 [style = bold, label=""];
0->12 [style = bold, label=""];
23->17 [style = dotted, label="true"];
5->11 [style = bold, label=""];
2->18 [style = dotted, label="true"];
2->13 [style = dotted, label="true"];
18->0 [style = dotted, label="true"];
22->7 [style = bold, label=""];
16->22 [style = dashed, label="0"];
3->19 [style = bold, label=""];
2->12 [style = dotted, label="true"];
9->14 [style = bold, label=""];
2->5 [style = dotted, label="false"];
23->14 [style = bold, label=""];
14->22 [style = dotted, label="true"];
16->7 [style = bold, label=""];
10->15 [style = bold, label=""];
2->11 [style = dotted, label="false"];
18->12 [style = bold, label=""];
24->14 [style = bold, label=""];
3->27 [style = solid, label="outputManager"];
15->26 [style = dashed, label="0"];
24->17 [style = dotted, label="true"];
12->4 [style = solid, label="stateInternals"];
18->6 [style = bold, label=""];
14->22 [style = bold, label=""];
}
