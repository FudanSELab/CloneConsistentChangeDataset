digraph {
11 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "handshakeCompletedLock@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "handshakeCompletedLock@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "serverThread.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Socket clientSocket = null@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "handshakeCompletedLock@@@20@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "clientSocket.getOutputStream().flush()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Socket clientSocket = null@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "serverThread.start()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFalse(handshakeCompleted)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final Integer paramIndex@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testTLSDetectionNonBlockingNonStrictServerIdleClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "forceClose(badClientSocket)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(1))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "clientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "{forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "{forceClose(badClientSocket)forceClose(clientSocket)forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@36@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(handshakeCompleted)@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "badClientSocket = connectWithoutSSL()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Socket badClientSocket = connectWithoutSSL()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "setUp()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "final Boolean hostnameVerification@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "final X509KeyType certKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "Socket badClientSocket = null@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testTLSDetectionNonBlockingNonStrictServerIdleClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "init(caKeyType,certKeyType,hostnameVerification,paramIndex)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "!handshakeCompleted@@@32@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "int bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "buf = new byte((((@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "secureClientSocket = connectWithSSL()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(handshakeCompleted)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final X509KeyType caKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "int bytesRead = clientSocket.getInputStream().read(buf,0,buf.length)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "!handshakeCompleted@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "Socket secureClientSocket = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "{forceClose(badClientSocket)forceClose(clientSocket)forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@38@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "byte(( buf = new byte((((@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "secureClientSocket = connectWithSSL()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "byte(( buf = new byte((((@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testTLSDetectionNonBlockingStrictServerDisconnectedClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "clientSocket = connectWithoutSSL()@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "clientSocket = connectWithoutSSL()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
54->55 [style = bold, label=""];
8->16 [style = bold, label=""];
52->44 [style = bold, label=""];
46->49 [style = solid, label="buf"];
39->22 [style = dotted, label="true"];
12->5 [style = bold, label=""];
23->48 [style = dashed, label="0"];
53->47 [style = bold, label=""];
4->24 [style = solid, label="bytesRead"];
52->44 [style = dotted, label="true"];
47->49 [style = bold, label=""];
44->51 [style = bold, label=""];
54->45 [style = solid, label="secureClientSocket"];
37->38 [style = dotted, label="true"];
5->0 [style = solid, label="badClientSocket"];
17->15 [style = dotted, label="true"];
40->16 [style = bold, label=""];
31->35 [style = bold, label=""];
33->32 [style = solid, label="paramIndex"];
29->14 [style = bold, label=""];
37->32 [style = bold, label=""];
11->27 [style = bold, label=""];
23->12 [style = bold, label=""];
13->31 [style = bold, label=""];
50->54 [style = bold, label=""];
36->13 [style = dotted, label="true"];
4->53 [style = dashed, label="0"];
28->36 [style = bold, label=""];
12->50 [style = solid, label="badClientSocket"];
36->31 [style = bold, label=""];
28->36 [style = dotted, label="true"];
1->0 [style = solid, label="clientSocket"];
14->19 [style = solid, label="bytesRead"];
56->57 [style = bold, label=""];
43->46 [style = bold, label=""];
39->22 [style = bold, label=""];
12->41 [style = bold, label=""];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
19->17 [style = solid, label="buf"];
10->35 [style = solid, label="clientSocket"];
19->26 [style = bold, label=""];
48->16 [style = bold, label=""];
9->13 [style = dotted, label="true"];
22->0 [style = solid, label="secureClientSocket"];
17->15 [style = bold, label=""];
18->9 [style = bold, label=""];
51->42 [style = bold, label=""];
24->7 [style = bold, label=""];
30->32 [style = solid, label="hostnameVerification"];
24->7 [style = solid, label="buf"];
22->11 [style = bold, label=""];
13->0 [style = bold, label=""];
21->4 [style = bold, label=""];
2->17 [style = bold, label=""];
19->26 [style = solid, label="buf"];
21->46 [style = dashed, label="0"];
44->42 [style = bold, label=""];
29->14 [style = solid, label="buf"];
5->12 [style = dashed, label="0"];
4->24 [style = bold, label=""];
20->13 [style = bold, label=""];
34->32 [style = solid, label="certKeyType"];
1->3 [style = bold, label=""];
52->42 [style = dotted, label="true"];
14->19 [style = bold, label=""];
9->20 [style = bold, label=""];
16->23 [style = bold, label=""];
38->32 [style = solid, label="caKeyType"];
44->51 [style = dotted, label="true"];
15->22 [style = bold, label=""];
27->35 [style = solid, label="secureClientSocket"];
36->13 [style = bold, label=""];
42->11 [style = bold, label=""];
32->40 [style = bold, label=""];
9->20 [style = dotted, label="true"];
7->18 [style = bold, label=""];
55->43 [style = bold, label=""];
37->34 [style = dotted, label="true"];
29->26 [style = solid, label="buf"];
53->47 [style = solid, label="bytesRead"];
27->21 [style = bold, label=""];
1->50 [style = dashed, label="0"];
28->31 [style = dotted, label="true"];
12->50 [style = bold, label=""];
37->33 [style = dotted, label="true"];
46->53 [style = solid, label="buf"];
7->18 [style = solid, label="bytesRead"];
20->28 [style = bold, label=""];
46->53 [style = bold, label=""];
11->45 [style = bold, label=""];
21->4 [style = solid, label="buf"];
28->13 [style = bold, label=""];
3->35 [style = solid, label="badClientSocket"];
24->9 [style = solid, label="buf"];
37->30 [style = dotted, label="true"];
57->48 [style = bold, label=""];
26->2 [style = bold, label=""];
49->52 [style = bold, label=""];
10->29 [style = bold, label=""];
22->27 [style = bold, label=""];
20->28 [style = dotted, label="true"];
21->7 [style = solid, label="buf"];
15->39 [style = bold, label=""];
25->8 [style = bold, label=""];
26->2 [style = solid, label="bytesRead"];
16->12 [style = bold, label=""];
6->25 [style = bold, label=""];
41->5 [style = bold, label=""];
}
