digraph {
18 [style = filled, label = "TestDoubleColumnSelector selector = new TestDoubleColumnSelector(Arrays.asList(doubleValues1))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "buf.limit(pos + maxSize)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TestFloatColumnSelector selector = new TestFloatColumnSelector(Arrays.asList(floatValues1))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "FloatBloomFilterAggregator agg = new FloatBloomFilterAggregator(selector,MAX_NUM_VALUES,true)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "BloomKFilter bloomKFilter = BloomKFilter.deserialize((ByteBuffer)valueAggregatorFactory.finalizeComputation(agg.get(buf,pos)))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int pos = 10@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testBufferAggregateDoubleValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(serializedFloatFilter,serialized)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DoubleBloomFilterAggregator agg = new DoubleBloomFilterAggregator(selector,maxNumValues,true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "FloatBloomFilterAggregator agg = new FloatBloomFilterAggregator(selector,maxNumValues,true)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "ByteBuffer buf = ByteBuffer.allocate(maxSize + 64)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testBufferAggregateFloatValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "agg.init(buf,pos)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "IntStream.range(0,doubleValues1.length).forEach(null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testBufferAggregateFloatValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "String serialized = filterToString(bloomKFilter)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TestFloatColumnSelector selector = new TestFloatColumnSelector(Arrays.asList(FLOAT_VALUES1))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "IntStream.range(0,FLOAT_VALUES1.length).forEach(null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assert.assertEquals(serializedDoubleFilter,serialized)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int maxSize = valueAggregatorFactory.getMaxIntermediateSizeWithNulls()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "IntStream.range(0,floatValues1.length).forEach(null)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6->10 [style = solid, label="buf"];
15->14 [style = bold, label=""];
4->20 [style = solid, label="serialized"];
7->10 [style = bold, label=""];
11->16 [style = dashed, label="0"];
10->19 [style = bold, label=""];
12->15 [style = bold, label=""];
10->3 [style = bold, label=""];
5->6 [style = solid, label="maxSize"];
18->16 [style = solid, label="selector"];
9->7 [style = bold, label=""];
3->13 [style = dashed, label="0"];
9->0 [style = solid, label="pos"];
3->0 [style = bold, label=""];
19->0 [style = bold, label=""];
3->19 [style = dashed, label="0"];
2->15 [style = dashed, label="0"];
1->20 [style = dashed, label="0"];
5->7 [style = solid, label="maxSize"];
11->5 [style = bold, label=""];
15->14 [style = solid, label="selector"];
5->6 [style = bold, label=""];
8->2 [style = bold, label=""];
2->11 [style = solid, label="selector"];
10->13 [style = bold, label=""];
0->4 [style = bold, label=""];
9->10 [style = solid, label="pos"];
4->1 [style = solid, label="serialized"];
11->14 [style = dashed, label="0"];
4->20 [style = bold, label=""];
2->18 [style = dashed, label="0"];
16->5 [style = bold, label=""];
0->4 [style = solid, label="bloomKFilter"];
9->7 [style = solid, label="pos"];
4->1 [style = bold, label=""];
6->9 [style = bold, label=""];
6->0 [style = solid, label="buf"];
2->11 [style = bold, label=""];
17->18 [style = bold, label=""];
13->0 [style = bold, label=""];
14->5 [style = bold, label=""];
18->16 [style = bold, label=""];
}
