digraph {
5 [style = filled, label = "selectStatement.setGroupBy(new GroupBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.ASC,OrderDirection.DESC))))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(new PaginationContext(getOffsetSegment(),getRowCountSegment(),getParameters()).getRevisedRowCount(selectStatementContext),is((long)Integer.MAX_VALUE))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "selectStatement.setOrderBy(new OrderBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.DESC))))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "SelectStatementContext selectStatementContext = createSelectStatementContext(selectStatement)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "getRevisedRowCountWithMax['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(new PaginationContext(getOffsetSegment(),getRowCountSegment(),getParameters()).getRevisedRowCount(selectStatementContext),is((long)Integer.MAX_VALUE))@@@9@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "getRevisedRowCountWithMax['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "selectStatement.setGroupBy(new GroupBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.DESC))))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<String,ShardingSphereMetaData> metaDataMap = new HashMap<>()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertIsSameGroupByAndOrderByItems['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(metaDataMap,Collections.emptyList(),selectStatement,DefaultSchema.LOGIC_NAME)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Map<String,ShardingSphereMetaData> metaDataMap = Collections.singletonMap(DefaultSchema.LOGIC_NAME,mock())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "metaDataMap.put(DefaultSchema.LOGIC_NAME,mock())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "selectStatement.setProjections(new ProjectionsSegment(0,0))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(selectStatementContext.isSameGroupByAndOrderByItems())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
5->13 [style = dashed, label="0"];
0->6 [style = bold, label=""];
7->10 [style = bold, label=""];
6->2 [style = solid, label="selectStatementContext"];
11->1 [style = bold, label=""];
3->9 [style = solid, label="selectStatement"];
3->6 [style = solid, label="selectStatement"];
7->4 [style = bold, label=""];
1->13 [style = bold, label=""];
8->3 [style = dotted, label="true"];
10->9 [style = solid, label="metaDataMap"];
9->6 [style = bold, label=""];
4->0 [style = bold, label=""];
6->2 [style = bold, label=""];
7->14 [style = bold, label=""];
8->1 [style = bold, label=""];
15->14 [style = solid, label="selectStatement"];
16->1 [style = bold, label=""];
13->7 [style = bold, label=""];
14->12 [style = bold, label=""];
4->6 [style = solid, label="metaDataMap"];
3->15 [style = dashed, label="0"];
5->7 [style = bold, label=""];
10->9 [style = bold, label=""];
9->6 [style = solid, label="selectStatementContext"];
4->10 [style = dashed, label="0"];
11->3 [style = dotted, label="true"];
16->15 [style = dotted, label="true"];
}
