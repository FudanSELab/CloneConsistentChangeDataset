digraph {
14 [style = filled, label = "scriptGenerator.writeCopyFile(writer,source,destination)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(output).containsExactly(\"mkdir -p '\" + source.getParent() + \"'\",\"cp -p '\" + source + \"' '\" + destinaiton + \"'\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "writer.flush()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(output).containsExactly(\"cp -p '\" + source + \"' '\" + destinaiton + \"'\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "writeCopyFileTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(output).hasSize(2)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "writeCopyFileTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "File destination = tempDir.newFile(\"original\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "File destinaiton = tempDir.newFile(\"original\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "writeCopyFileTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "scriptGenerator.writeCopyFile(writer,source,destinaiton)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(output).containsExactly(\"Robocopy.exe\" + \" \"\" + source.getParent() + \"\" \"\" + destination.getParent() + \"\" \" + source.getName() + \" /njh /njs\",\"IF %ERRORLEVEL% GEQ 4 GOTO Exit_Bad\")@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "File source = tempDir.newFile(\"backup\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<String> output = Files.readAllLines(outputFile.toPath())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(output).hasSize(1)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertThat(output).hasSize(2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->3 [style = bold, label=""];
8->10 [style = bold, label=""];
7->11 [style = bold, label=""];
9->0 [style = bold, label=""];
15->14 [style = bold, label=""];
1->14 [style = dashed, label="0"];
0->6 [style = bold, label=""];
0->14 [style = solid, label="source"];
0->4 [style = solid, label="source"];
1->3 [style = bold, label=""];
11->12 [style = bold, label=""];
7->8 [style = bold, label=""];
2->4 [style = bold, label=""];
2->8 [style = dashed, label="0"];
0->15 [style = bold, label=""];
4->12 [style = dashed, label="0"];
6->1 [style = bold, label=""];
0->1 [style = solid, label="source"];
6->4 [style = solid, label="destinaiton"];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
0->10 [style = solid, label="source"];
6->15 [style = dashed, label="0"];
6->1 [style = solid, label="destinaiton"];
7->2 [style = bold, label=""];
2->11 [style = dashed, label="0"];
6->10 [style = solid, label="destinaiton"];
4->10 [style = dashed, label="0"];
15->14 [style = solid, label="destination"];
13->0 [style = bold, label=""];
}
