digraph {
19 [style = filled, label = "extractionMap.put(\"\",\"EMPTY\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "extractionMap.put(\"\",\"REPLACED_VALUE\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,results,\"\")@@@18@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "extractionMap.put(\"\",\"SHOULD_NOT_BE_USED\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,\"EMPTY\",true,true)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,\"REPLACED_VALUE\",true,false)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testGroupByWithExtractionDimFilterKeyisNull['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "LookupExtractionFn lookupExtractionFn@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "GroupByQuery query = GroupByQuery.builder().setDataSource(QueryRunnerTestHelper.dataSource).setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird).setDimensions(new DefaultDimensionSpec(\"null_column\",\"alias\")).setAggregatorSpecs(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory(\"idx\",\"index\")).setGranularity(QueryRunnerTestHelper.dayGran).setDimFilter(new ExtractionDimFilter(\"null_column\",\"REPLACED_VALUE\",lookupExtractionFn,null)).build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "NullHandling.replaceWithDefault()@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testGroupByWithExtractionDimFilterNullDims['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testGroupByWithExtractionDimFilterKeyisNull['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "extractionMap.put(\"\",\"EMPTY\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<Row> expectedResults = Arrays.asList(GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",null,\"rows\",13L,\"idx\",6619L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-02\",\"alias\",null,\"rows\",13L,\"idx\",5827L))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,null,true,true)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "MapLookupExtractor mapLookupExtractor = new MapLookupExtractor(extractionMap,false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory,runner,query)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "GroupByQuery query = GroupByQuery.builder().setDataSource(QueryRunnerTestHelper.dataSource).setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird).setDimensions(new DefaultDimensionSpec(\"null_column\",\"alias\")).setAggregatorSpecs(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory(\"idx\",\"index\")).setGranularity(QueryRunnerTestHelper.dayGran).setDimFilter(new ExtractionDimFilter(\"null_column\",\"EMPTY\",lookupExtractionFn,null)).build()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,null,true,false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,String> extractionMap = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,results,\"dim-extraction\")@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "extractionMap.put(\"\",\"NOT_USED\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->2 [style = dotted, label="true"];
12->7 [style = bold, label=""];
17->1 [style = bold, label=""];
6->3 [style = solid, label="extractionMap"];
10->21 [style = bold, label=""];
3->20 [style = solid, label="mapLookupExtractor"];
5->12 [style = solid, label="query"];
6->15 [style = bold, label=""];
2->5 [style = bold, label=""];
1->12 [style = bold, label=""];
12->14 [style = bold, label=""];
5->1 [style = bold, label=""];
13->6 [style = bold, label=""];
10->8 [style = bold, label=""];
2->18 [style = dashed, label="0"];
12->14 [style = solid, label="results"];
11->6 [style = bold, label=""];
10->19 [style = bold, label=""];
0->10 [style = bold, label=""];
3->18 [style = solid, label="mapLookupExtractor"];
8->2 [style = bold, label=""];
10->18 [style = dotted, label="true"];
21->20 [style = bold, label=""];
10->21 [style = dotted, label="false"];
10->4 [style = bold, label=""];
10->8 [style = dotted, label="true"];
12->7 [style = solid, label="results"];
3->0 [style = bold, label=""];
4->9 [style = bold, label=""];
6->3 [style = bold, label=""];
17->12 [style = solid, label="query"];
16->6 [style = bold, label=""];
10->4 [style = dotted, label="false"];
9->20 [style = dashed, label="0"];
15->3 [style = bold, label=""];
3->8 [style = solid, label="mapLookupExtractor"];
20->17 [style = bold, label=""];
18->17 [style = bold, label=""];
10->20 [style = dotted, label="false"];
7->14 [style = dashed, label="0"];
10->19 [style = dotted, label="true"];
1->7 [style = solid, label="expectedResults"];
1->14 [style = solid, label="expectedResults"];
9->5 [style = bold, label=""];
19->18 [style = bold, label=""];
5->17 [style = dashed, label="0"];
10->9 [style = dotted, label="false"];
3->4 [style = solid, label="mapLookupExtractor"];
}
