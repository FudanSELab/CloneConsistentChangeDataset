digraph {
12 [style = filled, label = "SparkWatermarks currentWatermarks = GlobalWatermarkHolder.get().getValue().get(1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "GlobalWatermarkHolder.add(1,new SparkWatermarks(instant.plus(Duration.millis(5)),instant.plus(Duration.millis(5)),instant))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "GlobalWatermarkHolder.add(1,new SparkWatermarks(instant.plus(Duration.millis(10)),instant.plus(Duration.millis(15)),instant.plus(Duration.millis(100))))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "GlobalWatermarkHolder.add(1,new SparkWatermarks(instant.plus(Duration.millis(25)),instant.plus(Duration.millis(20)),instant.plus(Duration.millis(200))))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "GlobalWatermarkHolder.advance(jsc)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "GlobalWatermarkHolder.advance()@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testSynchronizedTimeMonotonic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(currentWatermarks.getSynchronizedProcessingTime(),equalTo(instant.plus(Duration.millis(100))))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "thrown.expect()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "thrown.expectMessage(RegexMatcher.matches(\"Low watermark \" + INSTANT_PATTERN + \" cannot be later then high watermark \" + INSTANT_PATTERN))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "GlobalWatermarkHolder.add(1,new SparkWatermarks(instant.plus(Duration.millis(5)),instant.plus(Duration.millis(10)),instant))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Instant instant = new Instant(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "GlobalWatermarkHolder.advance(jsc)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testSynchronizedTimeMonotonic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "testLowHighWatermarksAdvance['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "thrown.expectMessage(\"Synchronized processing time must advance.\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "GlobalWatermarkHolder.add(1,new SparkWatermarks(instant.plus(Duration.millis(5)),instant.plus(Duration.millis(10)),instant))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "GlobalWatermarkHolder.advance()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertThat(currentWatermarks.getLowWatermark(),equalTo(instant.plus(Duration.millis(10))))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "JavaSparkContext jsc = SparkContextFactory.getSparkContext(options)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "GlobalWatermarkHolder.advance(jsc)@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(currentWatermarks.getHighWatermark(),equalTo(instant.plus(Duration.millis(15))))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->3 [style = bold, label=""];
5->19 [style = bold, label=""];
20->3 [style = bold, label=""];
13->4 [style = bold, label=""];
8->18 [style = dashed, label="0"];
14->16 [style = bold, label=""];
21->15 [style = bold, label=""];
3->15 [style = solid, label="jsc"];
4->9 [style = dashed, label="0"];
15->12 [style = bold, label=""];
7->9 [style = bold, label=""];
1->8 [style = bold, label=""];
18->13 [style = bold, label=""];
2->10 [style = dashed, label="0"];
1->18 [style = bold, label=""];
17->14 [style = bold, label=""];
0->3 [style = bold, label=""];
7->13 [style = dashed, label="0"];
3->5 [style = bold, label=""];
6->2 [style = bold, label=""];
5->7 [style = solid, label="instant"];
6->10 [style = bold, label=""];
10->1 [style = bold, label=""];
12->17 [style = bold, label=""];
16->1 [style = bold, label=""];
5->6 [style = solid, label="instant"];
7->4 [style = bold, label=""];
2->1 [style = bold, label=""];
8->7 [style = bold, label=""];
19->2 [style = bold, label=""];
6->19 [style = dashed, label="0"];
5->19 [style = solid, label="instant"];
3->4 [style = solid, label="jsc"];
3->2 [style = solid, label="jsc"];
2->21 [style = bold, label=""];
5->6 [style = bold, label=""];
}
