digraph {
40 [style = filled, label = "assertEquals(2,searchResponse.getSuccessfulShards())@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testCleanupIrrelevantContexts['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(\"fetch\",phase.getName())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "results.consumeResult(queryResult,null)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "QuerySearchResult queryResult = new QuerySearchResult(ctx1,new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE),null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(84,searchResponse.getHits().getAt(0).docId())@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "FetchSearchPhase phase = new FetchSearchPhase(results,controller,null,mockSearchPhaseContext,null)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(2,searchResponse.getSuccessfulShards())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "mockSearchPhaseContext.searchTransport = new SearchTransportService(null,null){@Override public void sendExecuteFetch(Transport.Connection connection,ShardFetchSearchRequest request,SearchTask task,SearchActionListener<FetchSearchResult> listener){FetchSearchResult fetchResult = new FetchSearchResult()if (request.contextId().getId() == 321) {fetchResult.hits(new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123d3ce,new TotalHits(1,TotalHits.Relation.EQUAL_TO),2.0F))}{fail(\"requestID 123 should not be fetched but was\")}listener.onResponse(fetchResult)}}@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testFetchTwoDocument['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertEquals(1,searchResponse.getHits().getHits().length)@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty())@@@63@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final ShardSearchContextId ctx2 = new ShardSearchContextId(UUIDs.base64UUID(),321)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "queryResult.size(resultSetSize)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "queryResult = new QuerySearchResult(ctx2,new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",1),null,OriginalIndices.NONE),null)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "mockSearchPhaseContext.searchTransport = new SearchTransportService(null,null,null){@Override public void sendExecuteFetch(Transport.Connection connection,ShardFetchSearchRequest request,SearchTask task,SearchActionListener<FetchSearchResult> listener){FetchSearchResult fetchResult = new FetchSearchResult()if (request.contextId().equals(ctx2)) {fetchResult.hits(new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123d252,new TotalHits(1,TotalHits.Relation.EQUAL_TO),2.0F))}{assertEquals(ctx1,request.contextId())fetchResult.hits(new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123d26f,new TotalHits(1,TotalHits.Relation.EQUAL_TO),1.0F))}listener.onResponse(fetchResult)}}@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertNotNull(searchResponse)@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(42,searchResponse.getHits().getAt(1).docId())@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "queryResult.size(resultSetSize)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ShardSearchContextId ctx1 = new ShardSearchContextId(UUIDs.base64UUID(),123)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.contains(ctx1))@@@61@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "mockSearchPhaseContext.assertNoFailure()@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final ShardSearchContextId ctx1 = new ShardSearchContextId(UUIDs.base64UUID(),123)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int resultSetSize = randomIntBetween(2,10)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "FetchSearchPhase phase = new FetchSearchPhase(results,controller,null,mockSearchPhaseContext,null)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "queryResult.setShardIndex(0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SearchResponse searchResponse = mockSearchPhaseContext.searchResponse.get()@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testFetchTwoDocument['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "int resultSetSize = 1@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "queryResult = new QuerySearchResult(ctx2,new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",1),null,OriginalIndices.NONE),null)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "SearchPhaseController controller = new SearchPhaseController(writableRegistry(),null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123d389),2.0F),new DocValueFormat(((()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "QueryPhaseResultConsumer results = controller.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),new NoopCircuitBreaker(CircuitBreaker.REQUEST),SearchProgressListener.NOOP,mockSearchPhaseContext.getRequest(),2,null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(2,searchResponse.getHits().getTotalHits().value)@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123d341),2.0F),new DocValueFormat(((()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "results.consumeResult(queryResult,null)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "phase.run()@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(0,searchResponse.getFailedShards())@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "queryResult.setShardIndex(1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.releasedSearchContexts.size())@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->22 [style = bold, label=""];
33->25 [style = solid, label="ctx1"];
15->23 [style = bold, label=""];
32->7 [style = solid, label="resultSetSize"];
18->36 [style = solid, label="mockSearchPhaseContext"];
4->24 [style = bold, label=""];
27->15 [style = solid, label="searchResponse"];
24->2 [style = bold, label=""];
26->36 [style = solid, label="controller"];
11->1 [style = bold, label=""];
9->4 [style = bold, label=""];
18->26 [style = bold, label=""];
1->3 [style = bold, label=""];
12->36 [style = bold, label=""];
34->18 [style = bold, label=""];
8->7 [style = solid, label="resultSetSize"];
29->25 [style = bold, label=""];
28->6 [style = solid, label="results"];
24->37 [style = solid, label="ctx2"];
12->31 [style = dashed, label="0"];
7->0 [style = bold, label=""];
8->32 [style = dashed, label="0"];
29->33 [style = dashed, label="0"];
28->36 [style = solid, label="results"];
12->6 [style = bold, label=""];
30->18 [style = bold, label=""];
38->39 [style = bold, label=""];
8->21 [style = solid, label="resultSetSize"];
37->5 [style = solid, label="queryResult"];
27->15 [style = bold, label=""];
32->33 [style = bold, label=""];
25->4 [style = solid, label="queryResult"];
14->7 [style = bold, label=""];
28->32 [style = bold, label=""];
24->2 [style = solid, label="ctx2"];
16->11 [style = dashed, label="0"];
37->14 [style = bold, label=""];
18->6 [style = solid, label="mockSearchPhaseContext"];
21->9 [style = bold, label=""];
13->27 [style = bold, label=""];
3->20 [style = bold, label=""];
40->11 [style = bold, label=""];
20->16 [style = bold, label=""];
31->6 [style = bold, label=""];
5->31 [style = bold, label=""];
2->5 [style = solid, label="queryResult"];
5->12 [style = bold, label=""];
33->25 [style = bold, label=""];
11->3 [style = bold, label=""];
29->31 [style = solid, label="ctx1"];
23->40 [style = bold, label=""];
24->31 [style = solid, label="ctx2"];
6->10 [style = bold, label=""];
28->8 [style = bold, label=""];
2->14 [style = bold, label=""];
17->18 [style = bold, label=""];
24->37 [style = bold, label=""];
25->19 [style = bold, label=""];
39->10 [style = bold, label=""];
2->37 [style = dashed, label="0"];
29->25 [style = solid, label="ctx1"];
33->3 [style = solid, label="ctx1"];
32->21 [style = solid, label="resultSetSize"];
35->38 [style = bold, label=""];
26->28 [style = bold, label=""];
29->12 [style = solid, label="ctx1"];
23->11 [style = bold, label=""];
36->35 [style = bold, label=""];
10->22 [style = solid, label="searchResponse"];
8->29 [style = bold, label=""];
22->13 [style = bold, label=""];
26->6 [style = solid, label="controller"];
24->12 [style = solid, label="ctx2"];
0->5 [style = bold, label=""];
19->21 [style = bold, label=""];
}
