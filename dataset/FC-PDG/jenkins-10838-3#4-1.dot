digraph {
3 [style = filled, label = "builder.add(\"arg\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "builder.prepend(\"first\",\"second\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(\"There should be masked arguments\",builder.hasMaskedArguments())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertPrependBeforeAddingMasked['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(\"The mask array was incorrect\",array,is(new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4977dd))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "builder.addMasked(\"ismasked\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "builder.prepend(\"first\",\"second\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertPrependAfterAddingMasked['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertArrayEquals(\"The mask array was incorrect\",new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@497815,array)@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNotNull(\"The mask array should not be null\",array)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ArgumentListBuilder builder = new ArgumentListBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "boolean(( array = builder.toMaskArray()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertPrependAfterAddingMasked['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
6->3 [style = bold, label=""];
11->8 [style = bold, label=""];
8->6 [style = bold, label=""];
7->0 [style = bold, label=""];
2->4 [style = solid, label="array"];
1->8 [style = bold, label=""];
2->5 [style = solid, label="array"];
5->10 [style = dashed, label="0"];
3->7 [style = bold, label=""];
9->8 [style = bold, label=""];
12->6 [style = bold, label=""];
2->4 [style = bold, label=""];
4->5 [style = bold, label=""];
2->10 [style = solid, label="array"];
8->12 [style = bold, label=""];
3->0 [style = bold, label=""];
0->2 [style = bold, label=""];
}
