digraph {
9 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assertions.assertFalse(iterator.hasNext())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "usersCursor = mapper.getAllUsers()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Cursor<User> usersCursor = mapper.getAllUsers()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "usersCursor.close()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCursorMultipleCloseCall['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "User user = iterator.next()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "usersCursor.close()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Cursor<User> usersCursor@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assertions.assertEquals(\"User1\",user.getName())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testCursorClosedOnSessionClose['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testCursorClosedOnSessionClose['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Iterator<User> iterator = usersCursor.iterator()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
16->3 [style = bold, label=""];
7->1 [style = bold, label=""];
21->19 [style = bold, label=""];
19->20 [style = bold, label=""];
9->4 [style = bold, label=""];
12->17 [style = bold, label=""];
8->3 [style = bold, label=""];
5->15 [style = bold, label=""];
2->9 [style = bold, label=""];
3->12 [style = bold, label=""];
12->6 [style = bold, label=""];
1->11 [style = bold, label=""];
0->7 [style = bold, label=""];
6->12 [style = dashed, label="0"];
11->5 [style = bold, label=""];
18->22 [style = bold, label=""];
0->23 [style = bold, label=""];
23->21 [style = bold, label=""];
22->12 [style = bold, label=""];
6->13 [style = bold, label=""];
10->0 [style = bold, label=""];
14->2 [style = bold, label=""];
17->13 [style = bold, label=""];
1->23 [style = dashed, label="0"];
13->14 [style = bold, label=""];
11->21 [style = dashed, label="0"];
}
