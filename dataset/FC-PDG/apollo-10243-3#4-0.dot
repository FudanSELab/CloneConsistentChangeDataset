digraph {
8 [style = filled, label = "RepositoryChangeListener someListener = mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testRepositoryChangeListener['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final ArgumentCaptor<Properties> captor = ArgumentCaptor.forClass()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ApolloConfig newApolloConfig = assembleApolloConfig(newConfigurations)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "RemoteConfigRepository remoteConfigRepository = new RemoteConfigRepository(someNamespace)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(newConfigurations,captor.getValue())@@@26@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verify(someListener,times(1)).onRepositoryChange(eq(someNamespace),captor.capture())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(someResponse.getStatusCode()).thenReturn(200)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testRepositoryChangeListener['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "remoteConfigRepository.sync()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(someResponse.getBody()).thenReturn(someApolloConfig)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Map<String,String> newConfigurations = ImmutableMap.of(\"someKey\",\"anotherValue\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final SettableFuture<Boolean> longPollFinished = SettableFuture.create()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "remoteConfigLongPollService.stopLongPollingRefresh()@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "ApolloConfig someApolloConfig = assembleApolloConfig(configurations)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testLongPollingRefresh['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Map<String,String> configurations = ImmutableMap.of(\"someKey\",\"someValue\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "doAnswer(new Answer<Void>(){@Override public Void answer(InvocationOnMock invocation){longPollFinished.set(true)return null}}).when(someListener).onRepositoryChange(any(),any())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "remoteConfigRepository.addChangeListener(someListener)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "longPollFinished.get(500,TimeUnit.MILLISECONDS)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_OK)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "remoteConfigRepository.stopLongPollingRefresh()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "verify(someListener,times(1)).onRepositoryChange(eq(someNamespace),captor.capture())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(someResponse.getBody()).thenReturn(newApolloConfig)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->3 [style = bold, label=""];
8->14 [style = bold, label=""];
22->8 [style = bold, label=""];
15->9 [style = bold, label=""];
21->15 [style = bold, label=""];
0->7 [style = bold, label=""];
9->17 [style = dashed, label="0"];
2->3 [style = solid, label="newApolloConfig"];
4->15 [style = solid, label="newConfigurations"];
10->11 [style = bold, label=""];
4->9 [style = solid, label="newConfigurations"];
6->22 [style = bold, label=""];
4->2 [style = solid, label="newConfigurations"];
6->8 [style = bold, label=""];
5->4 [style = bold, label=""];
8->1 [style = solid, label="someListener"];
4->2 [style = bold, label=""];
2->3 [style = bold, label=""];
14->1 [style = bold, label=""];
8->18 [style = bold, label=""];
19->21 [style = bold, label=""];
13->6 [style = solid, label="someApolloConfig"];
13->12 [style = bold, label=""];
3->0 [style = bold, label=""];
3->19 [style = bold, label=""];
11->13 [style = bold, label=""];
11->13 [style = solid, label="configurations"];
7->15 [style = bold, label=""];
18->14 [style = bold, label=""];
20->11 [style = bold, label=""];
16->11 [style = bold, label=""];
2->23 [style = bold, label=""];
12->6 [style = bold, label=""];
1->5 [style = bold, label=""];
15->17 [style = bold, label=""];
}
