digraph {
1 [style = filled, label = "application.addListeners((ApplicationListener<ApplicationEvent>)null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(events).hasAtLeastOneElementOfType()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SpringApplication application = new SpringApplication(,)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "registerListener['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SpringApplication application = new SpringApplication(,,)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "registerListenerWithCustomMulticaster['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(events).hasAtLeastOneElementOfType()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "application.setApplicationContextClass()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "registerListener['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "verifyTestListenerEvents()@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "this.context = application.run()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Set<ApplicationEvent> events = new LinkedHashSet<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
4->8 [style = bold, label=""];
6->0 [style = bold, label=""];
7->4 [style = bold, label=""];
8->5 [style = bold, label=""];
3->1 [style = bold, label=""];
11->10 [style = bold, label=""];
1->7 [style = bold, label=""];
2->6 [style = bold, label=""];
10->0 [style = bold, label=""];
9->6 [style = bold, label=""];
6->10 [style = dashed, label="0"];
}
