digraph {
15 [style = filled, label = "return null@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "FetchResponse<?> response@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "!omitted.isEmpty()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "FetchResponse<?> response@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Set<TopicPartition> extra = findMissing(response.responseData().keySet(),sessionPartitions.keySet())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Set<TopicPartition> omitted = findMissing(response.responseData().keySet(),sessionPartitions.keySet())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "verifyIncrementalFetchResponsePartitions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "bld.append(\"response=(\").append(Utils.join(response.responseData().keySet(),\", \"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "verifyIncrementalFetchResponsePartitions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "!extra.isEmpty()@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return bld.toString()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "bld.append(\"extra=(\").append(Utils.join(extra,\", \")).append(\", \")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "(!omitted.isEmpty()) || (!extra.isEmpty())@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "return bld.toString()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "StringBuilder bld = new StringBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "!extra.isEmpty()@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Set<TopicPartition> extra = findMissing(sessionPartitions.keySet(),response.responseData().keySet())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "bld.append(\"omitted=(\").append(Utils.join(omitted,\", \")).append(\", \")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return null@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "verifyFullFetchResponsePartitions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "bld.append(\"extra=(\").append(Utils.join(extra,\", \")).append(\"), \")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "bld.append(\"response=(\").append(Utils.join(response.responseData().keySet(),\", \")).append(\"), \")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "FetchResponse<?> response@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
3->7 [style = dotted, label="true"];
20->17 [style = bold, label=""];
7->1 [style = bold, label=""];
16->18 [style = bold, label=""];
21->18 [style = dotted, label="true"];
21->15 [style = bold, label=""];
11->4 [style = bold, label=""];
12->17 [style = bold, label=""];
18->15 [style = bold, label=""];
6->9 [style = dashed, label="0"];
7->4 [style = dashed, label="0"];
5->6 [style = dotted, label="true"];
3->4 [style = dotted, label="true"];
17->14 [style = dotted, label="true"];
10->9 [style = dotted, label="true"];
3->4 [style = bold, label=""];
13->11 [style = bold, label=""];
6->22 [style = dashed, label="0"];
8->7 [style = bold, label=""];
19->13 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
17->14 [style = bold, label=""];
10->0 [style = bold, label=""];
20->12 [style = bold, label=""];
4->20 [style = bold, label=""];
19->22 [style = dotted, label="true"];
21->16 [style = bold, label=""];
4->8 [style = bold, label=""];
1->2 [style = bold, label=""];
20->12 [style = dotted, label="true"];
21->16 [style = dotted, label="true"];
3->8 [style = dotted, label="true"];
17->21 [style = bold, label=""];
3->1 [style = dotted, label="true"];
14->21 [style = bold, label=""];
}
