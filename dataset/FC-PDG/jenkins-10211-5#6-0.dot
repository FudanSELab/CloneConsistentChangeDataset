digraph {
6 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Item.READ).invokeWithArgs(PROJECT_NAME,\"-\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "dummyRangeNumberSingleShouldFailIfBuildNumberIsHyphen['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(result,failedWith(2))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"-1\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1-', expected string with a range M-N\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "dummyRangeRangeSingleShouldFailIfBuildRangeContainsEmptyNumber['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"-\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "dummyRangeNumberSingleShouldFailIfBuildNumberIsHyphen['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"-\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \"-\" is not a valid option\"))@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1-\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \"-1\" is not a valid option\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(result,failedWith(3))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(result,failedWith(2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
16->15 [style = bold, label=""];
1->4 [style = bold, label=""];
10->14 [style = bold, label=""];
12->7 [style = solid, label="result"];
9->2 [style = bold, label=""];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
6->1 [style = solid, label="result"];
0->6 [style = dashed, label="0"];
9->2 [style = solid, label="result"];
15->11 [style = solid, label="result"];
12->7 [style = bold, label=""];
3->0 [style = bold, label=""];
6->2 [style = bold, label=""];
0->2 [style = solid, label="result"];
0->1 [style = solid, label="result"];
5->6 [style = bold, label=""];
12->13 [style = solid, label="result"];
15->11 [style = bold, label=""];
1->16 [style = bold, label=""];
11->10 [style = bold, label=""];
15->10 [style = solid, label="result"];
14->12 [style = bold, label=""];
8->9 [style = bold, label=""];
9->1 [style = solid, label="result"];
0->9 [style = dashed, label="0"];
6->2 [style = solid, label="result"];
13->4 [style = bold, label=""];
}
