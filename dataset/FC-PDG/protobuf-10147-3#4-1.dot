digraph {
4 [style = filled, label = "assertImmutable(testMapOrBuilder.getStringToInt32Field(),\"1\",2)@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertImmutable(testMapOrBuilder.getInt32ToEnumField(),1,TestMap.EnumValue.FOO)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TestMapOrBuilder testMapOrBuilder@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertImmutable(testMapOrBuilder.getInt32ToStringFieldMap(),1,\"2\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertImmutable(testMapOrBuilder.getInt32ToInt32Field(),1,2)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertImmutable(testMapOrBuilder.getInt32ToInt32FieldMap(),1,2)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertImmutable(testMapOrBuilder.getInt32ToMessageFieldMap(),1,MessageValue.getDefaultInstance())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertMapsAreImmutable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertImmutable(testMapOrBuilder.getInt32ToBytesFieldMap(),1,TestUtil.toBytes(\"2\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertImmutable(testMapOrBuilder.getInt32ToStringField(),1,\"2\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertMapsAreImmutable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertImmutable(testMapOrBuilder.getInt32ToEnumFieldMap(),1,TestMap.EnumValue.FOO)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertImmutable(testMapOrBuilder.getStringToInt32FieldMap(),\"1\",2)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertImmutable(testMapOrBuilder.getInt32ToBytesField(),1,TestUtil.toBytes(\"2\"))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertImmutable(testMapOrBuilder.getInt32ToMessageField(),1,MessageValue.getDefaultInstance())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertMapsAreImmutable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
1->4 [style = bold, label=""];
2->6 [style = bold, label=""];
14->10 [style = bold, label=""];
5->9 [style = dashed, label="0"];
15->6 [style = bold, label=""];
0->12 [style = dashed, label="0"];
15->7 [style = dotted, label="true"];
12->9 [style = bold, label=""];
13->11 [style = bold, label=""];
3->0 [style = bold, label=""];
6->10 [style = dashed, label="0"];
1->13 [style = dashed, label="0"];
5->1 [style = bold, label=""];
10->8 [style = bold, label=""];
2->7 [style = dotted, label="true"];
14->7 [style = dotted, label="true"];
3->8 [style = dashed, label="0"];
4->11 [style = dashed, label="0"];
8->12 [style = bold, label=""];
0->5 [style = bold, label=""];
9->13 [style = bold, label=""];
}
