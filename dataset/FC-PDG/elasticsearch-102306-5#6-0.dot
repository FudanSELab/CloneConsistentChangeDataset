digraph {
3 [style = filled, label = "final String exceptionMessage = expectThrows(,null).getMessage()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(exceptionMessage,equalTo(\"local node is not part of initial configuration\"))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testCannotSetInitialConfigurationWithoutLocalNode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(exceptionMessage,containsString(coordinator.getLocalNode().toString()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCannotSetInitialConfigurationWithoutQuorum['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertThat(exceptionMessage,containsString(\"unknown-node\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(exceptionMessage,startsWith(\"not enough nodes discovered to form a quorum in the initial configuration (knownNodes=(\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Coordinator coordinator = cluster.getAnyNode().coordinator@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(coordinator.setInitialConfiguration(new VotingConfiguration(Collections.singleton(coordinator.getLocalNode().getId()))))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testCannotSetInitialConfigurationWithoutQuorum['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final VotingConfiguration unknownNodeConfiguration = new VotingConfiguration(Sets.newHashSet(\"unknown-node\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(coordinator.setInitialConfiguration(VotingConfiguration.of(coordinator.getLocalNode())))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final VotingConfiguration unknownNodeConfiguration = new VotingConfiguration(Sets.newHashSet(coordinator.getLocalNode().getId(),\"unknown-node\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "cluster.stabilise()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3->12 [style = solid, label="exceptionMessage"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
0->11 [style = bold, label=""];
3->6 [style = bold, label=""];
3->12 [style = bold, label=""];
7->8 [style = bold, label=""];
1->7 [style = bold, label=""];
4->0 [style = bold, label=""];
6->12 [style = dashed, label="0"];
7->9 [style = bold, label=""];
8->9 [style = dashed, label="0"];
6->1 [style = bold, label=""];
8->5 [style = bold, label=""];
11->3 [style = bold, label=""];
3->7 [style = solid, label="exceptionMessage"];
10->0 [style = bold, label=""];
9->5 [style = bold, label=""];
2->11 [style = dashed, label="0"];
3->6 [style = solid, label="exceptionMessage"];
13->0 [style = bold, label=""];
3->1 [style = solid, label="exceptionMessage"];
}
