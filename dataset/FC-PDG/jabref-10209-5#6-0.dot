digraph {
10 [style = filled, label = "assertEquals(Optional.of(\"Aip\"),first.getField(\"publisher\"))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(Optional.of(\"2006\"),first.getField(\"year\"))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Optional.of(\"Second harmonic generation of continuous wave ultraviolet light and production of beta -BaB$_2$O$_4$ optical waveguides\"),first.getField(StandardField.TITLE))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals(Optional.of(\"2006\"),first.getField(StandardField.YEAR))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "testImportEntriesINSPEC['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertEquals(\"article\",second.getType())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "BibEntry entry = bibEntries.get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(Optional.of(\"Degl'Innocenti, R. and Guarino, A. and Poberaj, G. and Gunter, P.\"),first.getField(StandardField.AUTHOR))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(Optional.of(\"Lorem ipsum abstract\"),first.getField(\"abstract\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "second = tmp@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Optional.of(\"Second harmonic generation of continuous wave ultraviolet light and production of beta -BaB$_2$O$_4$ optical waveguides\"),first.getField(\"title\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertEquals(Optional.of(\"89\"),first.getField(StandardField.VOLUME))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(Optional.of(\"Lorem ipsum abstract\"),first.getField(StandardField.ABSTRACT))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "List<BibEntry> bibEntries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(Optional.of(\"Applied Physics Letters\"),first.getField(StandardField.JOURNAL))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(Optional.of(\"Heidelberg\"),entry.getField(\"address\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(Optional.of(\"Versionsverwaltung\"),entry.getField(\"keywords\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"),second.getField(StandardField.TITLE))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"),second.getField(\"title\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(Optional.of(\"Degl'Innocenti, R. and Guarino, A. and Poberaj, G. and Gunter, P.\"),first.getField(\"author\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "Path file = Paths.get(.getResource(\"Endnote.book.example.enw\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "first.getField(StandardField.TITLE).equals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "assertEquals(\"book\",entry.getType())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(Optional.of(\"Applied Physics Letters\"),first.getField(\"journal\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Optional.of(\"Prei鐃緒申鐃緒申鐃緒申el, Ren鐃緒申鐃緒申鐃緒申 and Stachmann, Bj鐃緒申鐃緒申鐃緒申rn\"),entry.getField(\"author\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(Optional.of(\"http://d-nb.info/107601965X\"),entry.getField(\"url\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testImportEntriesINSPEC['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestInspec.isi\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "BibEntry second = entries.get(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(Optional.of(\"4\"),first.getField(StandardField.NUMBER))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(StandardEntryType.Article,second.getType())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"4\"),first.getField(\"number\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "assertEquals(Optional.of(\"Git : dezentrale Versionsverwaltung im Team : Grundlagen und Workflows\"),entry.getField(\"title\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "BibEntry first = entries.get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(Optional.of(\"XX, 327\"),entry.getField(\"pages\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(1,bibEntries.size())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "first.getField(\"title\").equals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertEquals(Optional.of(\"#jul#\"),first.getField(\"month\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertEquals(StandardEntryType.Article,first.getType())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(Optional.of(\"#jul#\"),first.getField(StandardField.MONTH))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "testImportEntriesBookExample['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(Optional.of(\"Aip\"),first.getField(StandardField.PUBLISHER))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "assertEquals(Optional.of(\"2016\"),entry.getField(\"year\"))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(\"article\",first.getType())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "first = second@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(2,entries.size())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(Optional.of(\"3., aktualisierte und erweiterte Auflage\"),entry.getField(\"edition\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(Optional.of(\"89\"),first.getField(\"volume\"))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Optional.of(\"dpunkt.verlag\"),entry.getField(\"publisher\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "BibEntry tmp = first@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->28 [style = bold, label=""];
21->10 [style = bold, label=""];
9->12 [style = solid, label="tmp"];
22->15 [style = bold, label=""];
42->46 [style = bold, label=""];
15->7 [style = bold, label=""];
3->1 [style = bold, label=""];
18->16 [style = solid, label="second"];
15->25 [style = bold, label=""];
6->43 [style = dashed, label="0"];
17->9 [style = bold, label=""];
11->6 [style = bold, label=""];
22->9 [style = bold, label=""];
28->31 [style = bold, label=""];
12->15 [style = bold, label=""];
35->33 [style = bold, label=""];
3->24 [style = dashed, label="0"];
4->21 [style = bold, label=""];
18->17 [style = bold, label=""];
2->18 [style = bold, label=""];
31->29 [style = bold, label=""];
10->33 [style = dashed, label="0"];
0->26 [style = dashed, label="0"];
30->34 [style = bold, label=""];
20->3 [style = bold, label=""];
2->9 [style = solid, label="first"];
1->28 [style = dashed, label="0"];
7->8 [style = bold, label=""];
48->42 [style = bold, label=""];
1->13 [style = bold, label=""];
9->16 [style = bold, label=""];
49->50 [style = bold, label=""];
22->12 [style = dotted, label="true"];
6->2 [style = bold, label=""];
17->16 [style = dotted, label="true"];
8->0 [style = bold, label=""];
11->38 [style = dashed, label="0"];
5->19 [style = bold, label=""];
25->27 [style = bold, label=""];
19->34 [style = dashed, label="0"];
18->39 [style = dashed, label="0"];
23->24 [style = bold, label=""];
18->22 [style = bold, label=""];
27->26 [style = bold, label=""];
10->5 [style = bold, label=""];
13->31 [style = dashed, label="0"];
17->12 [style = dotted, label="true"];
40->36 [style = bold, label=""];
12->36 [style = dashed, label="0"];
44->48 [style = bold, label=""];
37->38 [style = bold, label=""];
22->16 [style = dotted, label="true"];
26->23 [style = bold, label=""];
39->49 [style = bold, label=""];
50->40 [style = bold, label=""];
17->9 [style = dotted, label="true"];
17->15 [style = bold, label=""];
45->47 [style = bold, label=""];
33->30 [style = bold, label=""];
7->25 [style = dashed, label="0"];
20->23 [style = dashed, label="0"];
47->44 [style = bold, label=""];
43->41 [style = bold, label=""];
8->27 [style = dashed, label="0"];
0->20 [style = bold, label=""];
2->41 [style = dashed, label="0"];
29->35 [style = bold, label=""];
21->35 [style = dashed, label="0"];
36->45 [style = bold, label=""];
41->39 [style = bold, label=""];
22->9 [style = dotted, label="true"];
4->29 [style = dashed, label="0"];
32->11 [style = bold, label=""];
14->11 [style = bold, label=""];
16->12 [style = bold, label=""];
38->43 [style = bold, label=""];
5->30 [style = dashed, label="0"];
13->4 [style = bold, label=""];
17->22 [style = dashed, label="0"];
}
