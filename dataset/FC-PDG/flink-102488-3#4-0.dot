digraph {
26 [style = filled, label = "final UnAvailableTestInputProcessor inputProcessor = new UnAvailableTestInputProcessor(unAvailableTime)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final long sleepTimeInsideMail = 44@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "final long unAvailableTime = 42@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final int numberOfProcessCalls = 10@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testProcessWithUnAvailableOutput['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(numberOfProcessCalls,inputProcessor.currentNumProcessCalls)@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "executor.submit(null,\"This task will submit another task to execute after processing input once.\")@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "task.invoke()@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "executor.submit(null,\"This task will submit another task to execute after processing input once.\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final long sleepTime = 42@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertThat(ioMetricGroup.getBackPressuredTimePerSecond().getCount(),is(0L))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "TaskIOMetricGroup ioMetricGroup = task.getEnvironment().getMetricGroup().getIOMetricGroup()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(ioMetricGroup.getIdleTimeMsPerSecond().getCount(),is(0L))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(ioMetricGroup.getIdleTimeMsPerSecond().getCount(),is(0L))@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(ioMetricGroup.getIdleTimeMsPerSecond().getCount(),Matchers.greaterThanOrEqualTo(unAvailableTime))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final StreamTask task = new MockStreamTaskBuilder(environment).setStreamInputProcessor(inputProcessor).build()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final long sleepTimeOutsideMail = 42@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final int numberOfProcessCalls = 10@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "task.invoke()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final StreamTask task = new MockStreamTaskBuilder(environment).setStreamInputProcessor(inputProcessor).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(ioMetricGroup.getBackPressuredTimePerSecond().getCount(),Matchers.lessThanOrEqualTo(totalDuration - sleepTimeInsideMail))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "long startTs = System.currentTimeMillis()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(numberOfProcessCalls,inputProcessor.currentNumProcessCalls)@@@26@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testProcessWithUnAvailableOutput['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertThat(ioMetricGroup.getBackPressuredTimePerSecond().getCount(),Matchers.greaterThanOrEqualTo(sleepTimeOutsideMail))@@@23@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "final RunnableWithException completeFutureTask = null@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "testProcessWithUnAvailableInput['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "TaskIOMetricGroup ioMetricGroup = task.getEnvironment().getMetricGroup().getIOMetricGroup()@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final MailboxExecutor executor = task.mailboxProcessor.getMainMailboxExecutor()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->19 [style = dashed, label="0"];
15->23 [style = bold, label=""];
4->14 [style = bold, label=""];
10->6 [style = solid, label="numberOfProcessCalls"];
18->14 [style = solid, label="sleepTimeInsideMail"];
22->15 [style = bold, label=""];
9->0 [style = bold, label=""];
2->6 [style = bold, label=""];
12->14 [style = solid, label="totalDuration"];
27->28 [style = bold, label=""];
26->25 [style = bold, label=""];
28->26 [style = solid, label="unAvailableTime"];
28->26 [style = bold, label=""];
4->2 [style = bold, label=""];
16->17 [style = bold, label=""];
12->24 [style = bold, label=""];
28->12 [style = solid, label="unAvailableTime"];
0->28 [style = dashed, label="0"];
0->17 [style = dashed, label="0"];
7->3 [style = bold, label=""];
22->12 [style = solid, label="startTs"];
1->11 [style = bold, label=""];
4->12 [style = dashed, label="0"];
10->1 [style = solid, label="numberOfProcessCalls"];
0->4 [style = solid, label="sleepTime"];
11->5 [style = bold, label=""];
0->10 [style = bold, label=""];
3->20 [style = bold, label=""];
1->11 [style = solid, label="numberOfProcessCalls"];
8->5 [style = bold, label=""];
12->4 [style = bold, label=""];
5->12 [style = bold, label=""];
18->1 [style = bold, label=""];
1->13 [style = solid, label="numberOfProcessCalls"];
25->11 [style = bold, label=""];
3->8 [style = bold, label=""];
11->7 [style = bold, label=""];
23->12 [style = bold, label=""];
2->24 [style = dashed, label="0"];
20->19 [style = bold, label=""];
10->1 [style = bold, label=""];
19->22 [style = bold, label=""];
14->21 [style = bold, label=""];
17->18 [style = bold, label=""];
21->13 [style = bold, label=""];
17->4 [style = solid, label="sleepTimeOutsideMail"];
}
