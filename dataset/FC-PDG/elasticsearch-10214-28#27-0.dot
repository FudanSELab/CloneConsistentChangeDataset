digraph {
23 [style = filled, label = "getMappers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "mappers.put(type.typeName(),new NumberFieldMapper.TypeParser(type))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "mappers.put(type.typeName(),new RangeFieldMapper.TypeParser(type))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "mappers.put(FieldAliasMapper.CONTENT_TYPE,new FieldAliasMapper.TypeParser())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "mappers.put(BinaryFieldMapper.CONTENT_TYPE,new BinaryFieldMapper.TypeParser())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "mappers.put(GeoPointFieldMapper.CONTENT_TYPE,new GeoPointFieldMapper.TypeParser())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "mappers.put(ObjectMapper.NESTED_CONTENT_TYPE,new ObjectMapper.TypeParser())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "mappers.put(GeoShapeFieldMapper.CONTENT_TYPE,new AbstractGeometryFieldMapper.TypeParser())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "mappers.put(TextFieldMapper.CONTENT_TYPE,new TextFieldMapper.TypeParser())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "mappers.put(CompletionFieldMapper.CONTENT_TYPE,new CompletionFieldMapper.TypeParser())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "throw new IllegalArgumentException(\"Mapper (\" + entry.getKey() + \"( is already registered\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "mappers.put(nanoseconds.type(),new DateFieldMapper.TypeParser(nanoseconds))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "DateFieldMapper.Resolution milliseconds = DateFieldMapper.Resolution.MILLISECONDS@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "return Collections.unmodifiableMap(mappers)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "getMappers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<MapperPlugin> mapperPlugins@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "mappers.put(IpFieldMapper.CONTENT_TYPE,new IpFieldMapper.TypeParser())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DateFieldMapper.Resolution nanoseconds = DateFieldMapper.Resolution.NANOSECONDS@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "mappers.put(TokenCountFieldMapper.CONTENT_TYPE,new TokenCountFieldMapper.TypeParser())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "mappers.put(ScaledFloatFieldMapper.CONTENT_TYPE,new ScaledFloatFieldMapper.TypeParser())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "mappers.put(KeywordFieldMapper.CONTENT_TYPE,new KeywordFieldMapper.TypeParser())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "mappers.put(entry.getKey(),entry.getValue()) != null@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Map<String,Mapper.TypeParser> mappers = new LinkedHashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "mappers.put(RankFeatureFieldMapper.CONTENT_TYPE,new RankFeatureFieldMapper.TypeParser())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "getMappers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "mappers.put(milliseconds.type(),new DateFieldMapper.TypeParser(milliseconds))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "mappers.put(BooleanFieldMapper.CONTENT_TYPE,new BooleanFieldMapper.TypeParser())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "mappers.put(ObjectMapper.CONTENT_TYPE,new ObjectMapper.TypeParser())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "mappers.put(SearchAsYouTypeFieldMapper.CONTENT_TYPE,new SearchAsYouTypeFieldMapper.TypeParser())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "return Collections.unmodifiableMap(mappers)@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "mappers.put(RankFeaturesFieldMapper.CONTENT_TYPE,new RankFeaturesFieldMapper.TypeParser())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29->30 [style = bold, label=""];
27->14 [style = bold, label=""];
26->24 [style = bold, label=""];
1->25 [style = dashed, label="0"];
14->22 [style = solid, label="mappers"];
14->3 [style = bold, label=""];
10->17 [style = bold, label=""];
17->21 [style = bold, label=""];
18->22 [style = bold, label=""];
0->22 [style = bold, label=""];
3->24 [style = dashed, label="0"];
15->19 [style = bold, label=""];
8->7 [style = solid, label="nanoseconds"];
11->6 [style = bold, label=""];
30->25 [style = bold, label=""];
14->26 [style = bold, label=""];
5->13 [style = bold, label=""];
3->1 [style = bold, label=""];
1->11 [style = bold, label=""];
19->16 [style = bold, label=""];
25->28 [style = bold, label=""];
14->28 [style = solid, label="mappers"];
7->4 [style = bold, label=""];
6->5 [style = bold, label=""];
2->12 [style = dotted, label="true"];
23->14 [style = bold, label=""];
0->18 [style = dotted, label="true"];
16->20 [style = bold, label=""];
8->7 [style = bold, label=""];
2->14 [style = bold, label=""];
20->9 [style = bold, label=""];
13->8 [style = bold, label=""];
5->13 [style = solid, label="milliseconds"];
4->15 [style = bold, label=""];
21->0 [style = bold, label=""];
24->29 [style = bold, label=""];
0->18 [style = bold, label=""];
9->10 [style = bold, label=""];
18->0 [style = bold, label=""];
23->12 [style = dotted, label="true"];
}
