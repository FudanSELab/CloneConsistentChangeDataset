digraph {
50 [style = filled, label = "CheckJoinIndex.check(r,parentsFilter)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "r.close()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(0,s.search(fullChildQuery.build(),1).totalHits)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(1,results.totalGroupedHitCount)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "i++@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "dir.close()@@@54@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "childDoc = s.doc(hits.scoreDocs(0(.doc)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "BooleanQuery.Builder fullQuery = new BooleanQuery.Builder()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "s.search(fullQuery.build(),c)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "w.close()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "IndexReader r = w.getReader()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertFalse(Float.isNaN(group.score))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "fullChildQuery.add(new BooleanClause(parentJoinQuery,Occur.MUST))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(1,group.totalHits)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TopDocs hits = s.search(fullChildQuery.build(),10)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "docs.add(makeResume(\"Frank\",\"United States\"))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "w.commit()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(\"Lisa\",getParentDoc(r,parentsFilter,hits.scoreDocs(0(.doc).get(\"name\"))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final RandomIndexWriter w = new RandomIndexWriter(random(),dir)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(1,hits.totalHits)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(\"Lisa\",parentDoc.get(\"name\"))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(r.leaves().size() > 1)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "final IndexWriter w = new IndexWriter(dir,config)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "w.addDocuments(docs)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "fullQuery.add(new BooleanClause(parentQuery,Occur.MUST))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "BooleanQuery.Builder childQuery = new BooleanQuery.Builder()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "childQuery.add(new BooleanClause(new TermQuery(new Term(\"skill\",\"java\")),Occur.MUST))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "int i = 0@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "docs.add(makeJob(\"java\",2007))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "testSimple['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "ToParentBlockJoinCollector c = new ToParentBlockJoinCollector(Sort.RELEVANCE,1,true,true)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testEmptyChildFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "fullChildQuery.add(new BooleanClause(childQuery.build(),Occur.MUST))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(1,results.groups.length)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(2007,childDoc.getField(\"year\").numericValue())@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery,parentsFilter)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "IndexSearcher s = new IndexSearcher(r)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "docs.add(makeJob(\"java\",2006))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "fullChildQuery.add(new TermQuery(new Term(\"skill\",\"foosball\")),Occur.FILTER)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "docs.add(makeJob(\"java\",2007))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "dir.close()@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "StoredDocument parentDoc = s.doc(group.groupValue)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "r.close()@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertFalse(Float.isNaN(results.maxScore))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i < num@@@20@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "docs.add(makeJob(\"python\",2010))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "docs.clear()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int num = atLeast(10)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "docs.add(makeJob(\"ruby\",2005))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "BooleanQuery.Builder fullChildQuery = new BooleanQuery.Builder()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "w.addDocuments(docs)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "Query parentQuery = new TermQuery(new Term(\"country\",\"United Kingdom\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "childQuery.add(new BooleanClause(NumericRangeQuery.newIntRange(\"year\",2006,2011,true,true),Occur.MUST))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "fullQuery.add(new BooleanClause(childJoinQuery,Occur.MUST))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "StoredDocument childDoc = s.doc(group.scoreDocs(0(.doc)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "IndexSearcher s = newSearcher(r)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "fullQuery.add(new BooleanClause(new MatchAllDocsQuery(),Occur.MUST))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "ToParentBlockJoinQuery childJoinQuery = new ToParentBlockJoinQuery(childQuery.build(),parentsFilter,ScoreMode.Avg)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "w.addDocuments(docs)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "TopGroups<Integer> results = c.getTopGroups(childJoinQuery,null,0,10,0,true)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "final List<Document> docs = new ArrayList<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final GroupDocs<Integer> group = results.groups(0(@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "config.setMergePolicy(NoMergePolicy.INSTANCE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertNotNull(group.groupValue)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"docType\",\"resume\")))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "testEmptyChildFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "docs.clear()@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "IndexReader r = DirectoryReader.open(w,random().nextBoolean())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "docs.add(makeResume(\"Lisa\",\"United Kingdom\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(\"java\",childDoc.get(\"skill\"))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(\"java\",childDoc.get(\"skill\"))@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final IndexWriterConfig config = new IndexWriterConfig(new MockAnalyzer(random()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50->32 [style = bold, label=""];
42->23 [style = bold, label=""];
54->56 [style = bold, label=""];
8->47 [style = solid, label="parentsFilter"];
22->15 [style = bold, label=""];
63->64 [style = solid, label="childJoinQuery"];
3->24 [style = bold, label=""];
55->62 [style = bold, label=""];
64->8 [style = bold, label=""];
61->57 [style = bold, label=""];
9->60 [style = bold, label=""];
8->50 [style = solid, label="parentsFilter"];
22->11 [style = solid, label="parentJoinQuery"];
6->29 [style = bold, label=""];
62->67 [style = bold, label=""];
19->44 [style = bold, label=""];
19->2 [style = dashed, label="0"];
15->11 [style = bold, label=""];
71->47 [style = bold, label=""];
68->22 [style = solid, label="parentsFilter"];
31->34 [style = dotted, label="true"];
68->63 [style = solid, label="parentsFilter"];
21->55 [style = solid, label="dir"];
60->68 [style = bold, label=""];
44->46 [style = solid, label="r"];
17->27 [style = bold, label=""];
67->38 [style = bold, label=""];
45->41 [style = bold, label=""];
16->3 [style = bold, label=""];
29->36 [style = bold, label=""];
13->34 [style = bold, label=""];
47->6 [style = bold, label=""];
41->31 [style = solid, label="i"];
42->46 [style = bold, label=""];
57->51 [style = bold, label=""];
63->54 [style = bold, label=""];
14->22 [style = bold, label=""];
7->37 [style = bold, label=""];
19->39 [style = bold, label=""];
51->22 [style = solid, label="parentQuery"];
69->64 [style = bold, label=""];
62->26 [style = solid, label="docs"];
2->9 [style = bold, label=""];
10->7 [style = bold, label=""];
62->3 [style = solid, label="docs"];
24->20 [style = bold, label=""];
5->1 [style = bold, label=""];
35->14 [style = solid, label="c"];
27->71 [style = bold, label=""];
29->35 [style = bold, label=""];
27->47 [style = bold, label=""];
36->35 [style = bold, label=""];
32->17 [style = bold, label=""];
51->63 [style = bold, label=""];
72->37 [style = bold, label=""];
25->38 [style = bold, label=""];
44->42 [style = bold, label=""];
58->61 [style = bold, label=""];
25->44 [style = solid, label="w"];
31->13 [style = bold, label=""];
28->31 [style = bold, label=""];
18->40 [style = bold, label=""];
31->45 [style = dotted, label="true"];
38->16 [style = bold, label=""];
28->41 [style = solid, label="i"];
56->66 [style = bold, label=""];
35->14 [style = bold, label=""];
65->21 [style = bold, label=""];
21->55 [style = bold, label=""];
21->5 [style = bold, label=""];
30->21 [style = bold, label=""];
5->25 [style = solid, label="config"];
31->44 [style = bold, label=""];
11->10 [style = bold, label=""];
28->31 [style = solid, label="i"];
46->8 [style = bold, label=""];
53->72 [style = bold, label=""];
59->70 [style = bold, label=""];
2->60 [style = solid, label="r"];
66->42 [style = bold, label=""];
4->12 [style = bold, label=""];
9->19 [style = bold, label=""];
8->50 [style = bold, label=""];
41->31 [style = bold, label=""];
31->13 [style = dotted, label="true"];
40->43 [style = bold, label=""];
1->25 [style = bold, label=""];
51->56 [style = solid, label="parentQuery"];
21->25 [style = solid, label="dir"];
48->59 [style = bold, label=""];
42->69 [style = solid, label="c"];
8->32 [style = bold, label=""];
38->20 [style = solid, label="docs"];
38->9 [style = solid, label="docs"];
34->45 [style = bold, label=""];
43->48 [style = bold, label=""];
23->46 [style = bold, label=""];
47->22 [style = solid, label="childJoinQuery"];
12->26 [style = bold, label=""];
63->66 [style = solid, label="childJoinQuery"];
6->52 [style = bold, label=""];
39->28 [style = bold, label=""];
49->21 [style = bold, label=""];
48->0 [style = bold, label=""];
20->4 [style = bold, label=""];
47->29 [style = solid, label="childJoinQuery"];
38->45 [style = solid, label="docs"];
42->69 [style = bold, label=""];
26->2 [style = bold, label=""];
0->33 [style = bold, label=""];
39->31 [style = solid, label="num"];
37->18 [style = bold, label=""];
44->50 [style = solid, label="r"];
52->29 [style = bold, label=""];
31->41 [style = dotted, label="true"];
7->53 [style = bold, label=""];
68->58 [style = bold, label=""];
}
