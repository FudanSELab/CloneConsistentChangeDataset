digraph {
6 [style = filled, label = "Text text = new Text(uuid)@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(TypeInfoFactory.stringTypeInfo.getTypeName(),oi.getTypeName())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(text,oi.getPrimitiveWritableObject(uuid))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "Assert.assertNull(oi.convert(null))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Text copy = (Text)oi.copyObject(text)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(uuid,oi.getPrimitiveJavaObject(text))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertFalse(oi.preferWritable())@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(ObjectInspector.Category.PRIMITIVE,oi.getCategory())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(time,oi.convert(text))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(,oi.getJavaPrimitiveClass())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Text text = new Text(uuidStr)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "Assert.assertEquals(uuidStr,oi.getPrimitiveJavaObject(text))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(PrimitiveObjectInspector.PrimitiveCategory.STRING,oi.getPrimitiveCategory())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testIcebergUUIDObjectInspector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "IcebergTimeObjectInspector oi = IcebergTimeObjectInspector.get()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(text,copy)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "UUID uuid = UUID.randomUUID()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Assert.assertEquals(text,oi.getPrimitiveWritableObject(time))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(uuid,oi.convert(uuidStr))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Text text = new Text(time)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(,oi.getPrimitiveWritableClass())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertNull(oi.copyObject(null))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertNull(oi.getPrimitiveJavaObject(null))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(TypeInfoFactory.stringTypeInfo,oi.getTypeInfo())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertNotSame(text,copy)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testIcebergUUIDObjectInspector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String uuid = UUID.randomUUID().toString()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "String time = LocalTime.now().toString()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertEquals(time,oi.getPrimitiveJavaObject(text))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String uuidStr = uuid.toString()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "Assert.assertNull(oi.getPrimitiveWritableObject(null))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "IcebergUUIDObjectInspector oi = IcebergUUIDObjectInspector.get()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(text,oi.getPrimitiveWritableObject(uuidStr))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assert.assertFalse(oi.preferWritable())@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "testIcebergTimeObjectInspector['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(uuid,oi.convert(text))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->17 [style = bold, label=""];
5->3 [style = bold, label=""];
16->15 [style = solid, label="copy"];
16->15 [style = bold, label=""];
31->29 [style = solid, label="text"];
2->23 [style = dashed, label="0"];
6->17 [style = solid, label="text"];
0->9 [style = bold, label=""];
10->20 [style = bold, label=""];
20->13 [style = bold, label=""];
15->7 [style = bold, label=""];
24->23 [style = solid, label="text"];
6->18 [style = solid, label="text"];
22->28 [style = solid, label="uuidStr"];
8->33 [style = dashed, label="0"];
31->16 [style = solid, label="text"];
18->15 [style = solid, label="copy"];
35->19 [style = bold, label=""];
8->14 [style = solid, label="uuid"];
26->9 [style = bold, label=""];
31->29 [style = bold, label=""];
19->11 [style = bold, label=""];
8->6 [style = bold, label=""];
22->23 [style = solid, label="uuidStr"];
31->15 [style = solid, label="text"];
6->31 [style = dashed, label="0"];
17->32 [style = dashed, label="0"];
3->12 [style = bold, label=""];
27->16 [style = bold, label=""];
29->34 [style = bold, label=""];
6->14 [style = solid, label="text"];
8->21 [style = dashed, label="0"];
31->34 [style = solid, label="text"];
8->17 [style = solid, label="uuid"];
22->24 [style = solid, label="uuidStr"];
24->7 [style = solid, label="text"];
31->32 [style = solid, label="text"];
8->6 [style = solid, label="uuid"];
9->35 [style = dashed, label="0"];
6->15 [style = solid, label="text"];
6->14 [style = bold, label=""];
23->28 [style = bold, label=""];
6->2 [style = solid, label="text"];
17->28 [style = dashed, label="0"];
11->5 [style = bold, label=""];
30->35 [style = bold, label=""];
6->16 [style = solid, label="text"];
22->27 [style = solid, label="uuidStr"];
12->4 [style = bold, label=""];
18->16 [style = solid, label="copy"];
33->32 [style = solid, label="time"];
21->22 [style = bold, label=""];
16->7 [style = solid, label="copy"];
33->31 [style = solid, label="time"];
2->34 [style = dashed, label="0"];
9->19 [style = bold, label=""];
33->31 [style = bold, label=""];
24->16 [style = solid, label="text"];
33->29 [style = solid, label="time"];
34->32 [style = bold, label=""];
4->1 [style = bold, label=""];
14->2 [style = bold, label=""];
7->25 [style = bold, label=""];
28->27 [style = bold, label=""];
22->24 [style = bold, label=""];
32->18 [style = bold, label=""];
13->8 [style = bold, label=""];
21->27 [style = solid, label="uuid"];
13->33 [style = bold, label=""];
13->21 [style = bold, label=""];
1->10 [style = bold, label=""];
8->2 [style = solid, label="uuid"];
33->34 [style = solid, label="time"];
31->18 [style = solid, label="text"];
14->29 [style = dashed, label="0"];
17->18 [style = bold, label=""];
24->28 [style = solid, label="text"];
24->15 [style = solid, label="text"];
24->23 [style = bold, label=""];
18->16 [style = bold, label=""];
}
