digraph {
5 [style = filled, label = "Assert.assertEquals(6,ingestionSpecs.size())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final IndexTuningConfig tuningConfig = new IndexTuningConfig(null,500000,1000000L,6L,null,null,null,new IndexSpec(new RoaringBitmapSerdeFactory(true),CompressionStrategy.LZ4,CompressionStrategy.LZF,LongEncodingStrategy.LONGS),5000,true,false,true,false,null,100L,null,null,null,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final List<IndexIngestionSpec> ingestionSpecs = CompactionTask.createIngestionSchema(toolbox,new SegmentProvider(DATA_SOURCE,COMPACTION_INTERVAL),new PartitionConfigurationManager(null,tuningConfig),null,keepSegmentGranularity,null,objectMapper)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertIngestionSchema(ingestionSpecs,expectedDimensionsSpec,AGGREGATORS,Collections.singletonList(COMPACTION_INTERVAL),tuningConfig,Granularities.ALL)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "keepSegmentGranularity@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testCreateIngestionSchemaWithTargetPartitionSize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testCreateIngestionSchemaWithMaxTotalRows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertIngestionSchema(ingestionSpecs,expectedDimensionsSpec,SEGMENT_INTERVALS,tuningConfig,Granularities.MONTH)@@@9@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testCreateIngestionSchemaWithTargetPartitionSize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final IndexTuningConfig tuningConfig = new IndexTuningConfig(6,500000,1000000L,null,null,null,null,new IndexSpec(new RoaringBitmapSerdeFactory(true),CompressionStrategy.LZ4,CompressionStrategy.LZF,LongEncodingStrategy.LONGS),5000,true,false,true,false,null,100L,null,null,null,null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(1,ingestionSpecs.size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final List<DimensionsSpec> expectedDimensionsSpec = getExpectedDimensionsSpecForAutoGeneration(keepSegmentGranularity)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertIngestionSchema(ingestionSpecs,expectedDimensionsSpec,AGGREGATORS,SEGMENT_INTERVALS,tuningConfig,Granularities.MONTH)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final List<IndexIngestionSpec> ingestionSpecs = CompactionTask.createIngestionSchema(toolbox,new SegmentProvider(DATA_SOURCE,COMPACTION_INTERVAL),new PartitionConfigurationManager(null,tuningConfig),null,null,keepSegmentGranularity,null,objectMapper)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertIngestionSchema(ingestionSpecs,expectedDimensionsSpec,Collections.singletonList(COMPACTION_INTERVAL),tuningConfig,Granularities.ALL)@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final IndexTuningConfig tuningConfig = new IndexTuningConfig(null,6,500000,1000000L,null,null,null,null,new IndexSpec(new RoaringBitmapSerdeFactory(true),CompressionStrategy.LZ4,CompressionStrategy.LZF,LongEncodingStrategy.LONGS),5000,true,false,true,false,null,100L,null,null,null,null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "ingestionSpecs.sort(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
16->15 [style = bold, label=""];
5->8 [style = bold, label=""];
6->13 [style = solid, label="expectedDimensionsSpec"];
9->2 [style = bold, label=""];
15->2 [style = solid, label="tuningConfig"];
6->12 [style = solid, label="expectedDimensionsSpec"];
1->9 [style = dotted, label="false"];
0->15 [style = dashed, label="0"];
3->6 [style = bold, label=""];
0->11 [style = dashed, label="0"];
10->12 [style = solid, label="ingestionSpecs"];
15->3 [style = bold, label=""];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
11->12 [style = solid, label="tuningConfig"];
1->9 [style = bold, label=""];
0->8 [style = solid, label="tuningConfig"];
11->10 [style = solid, label="tuningConfig"];
4->0 [style = bold, label=""];
1->2 [style = dotted, label="false"];
8->13 [style = dashed, label="0"];
1->7 [style = dotted, label="true"];
3->8 [style = solid, label="ingestionSpecs"];
1->13 [style = dotted, label="true"];
6->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
11->13 [style = solid, label="tuningConfig"];
7->5 [style = bold, label=""];
1->12 [style = dotted, label="false"];
10->13 [style = solid, label="ingestionSpecs"];
0->3 [style = solid, label="tuningConfig"];
3->2 [style = solid, label="ingestionSpecs"];
11->10 [style = bold, label=""];
0->2 [style = solid, label="tuningConfig"];
6->2 [style = solid, label="expectedDimensionsSpec"];
5->13 [style = bold, label=""];
1->8 [style = dotted, label="true"];
3->10 [style = dashed, label="0"];
9->12 [style = bold, label=""];
15->8 [style = solid, label="tuningConfig"];
6->8 [style = solid, label="expectedDimensionsSpec"];
15->3 [style = solid, label="tuningConfig"];
14->11 [style = bold, label=""];
1->5 [style = dotted, label="true"];
}
