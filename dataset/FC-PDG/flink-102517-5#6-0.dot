digraph {
5 [style = filled, label = "testRunDefaultAction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "stop(mailboxThread)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(expectedInvocations,counter.get())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "AtomicInteger index = new AtomicInteger()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(expectedInvocations,counter.get())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "MailboxThread mailboxThread = new MailboxThread(){@Override public void runDefaultAction(Controller controller){if (counter.incrementAndGet() == expectedInvocations) {controller.allActionsCompleted()}}}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "mailboxExecutor.execute(new Runnable(){@Override public void run(){mailboxExecutor.execute(this,\"Blocking mail\" + index.incrementAndGet())}},\"Blocking mail\" + index)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "mailboxThread.signalStart()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final MailboxExecutor mailboxExecutor = mailboxProcessor.getMailboxExecutor(DEFAULT_PRIORITY)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final MailboxProcessor mailboxProcessor = mailboxThread.getMailboxProcessor()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final AtomicInteger counter = new AtomicInteger(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final int expectedInvocations = 3@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "mailboxThread.start()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "mailboxThread.join()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(expectedInvocations,index.get())@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testRunDefaultAction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "testAvoidStarvation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "stop(mailboxThread)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "start(mailboxThread)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
16->15 [style = bold, label=""];
18->3 [style = bold, label=""];
3->1 [style = bold, label=""];
11->14 [style = bold, label=""];
0->6 [style = bold, label=""];
3->10 [style = solid, label="expectedInvocations"];
6->7 [style = dashed, label="0"];
2->6 [style = solid, label="mailboxThread"];
8->3 [style = bold, label=""];
17->11 [style = solid, label="index"];
7->4 [style = bold, label=""];
3->9 [style = solid, label="expectedInvocations"];
3->2 [style = solid, label="expectedInvocations"];
13->16 [style = bold, label=""];
2->12 [style = solid, label="mailboxThread"];
2->13 [style = bold, label=""];
0->7 [style = bold, label=""];
6->4 [style = bold, label=""];
15->17 [style = bold, label=""];
2->0 [style = bold, label=""];
12->10 [style = bold, label=""];
14->12 [style = bold, label=""];
0->13 [style = dashed, label="0"];
2->0 [style = solid, label="mailboxThread"];
3->4 [style = solid, label="expectedInvocations"];
1->2 [style = bold, label=""];
10->9 [style = bold, label=""];
17->11 [style = bold, label=""];
}
