digraph {
6 [style = filled, label = "AbstractMessageWrapper.Builder builder = new AbstractMessageWrapper.Builder(TestUnpackedTypes.newBuilder())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "AbstractMessageWrapper message = builder.mergeFrom(TestUtil.getPackedSet().toByteString()).build()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "AbstractMessageWrapper.Builder builder = new AbstractMessageWrapper.Builder(TestPackedTypes.newBuilder())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testParsePackedToUnpacked['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "AbstractMessageWrapper message = builder.mergeFrom(TestUtil.getPackedSet().toByteString(),ExtensionRegistryLite.getEmptyRegistry()).build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "testPackedParsing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestUtil.assertUnpackedFieldsSet((TestUnpackedTypes)message.wrappedMessage)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TestUtil.assertPackedFieldsSet((TestPackedTypes)message.wrappedMessage)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testPackedParsing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->3 [style = bold, label=""];
1->4 [style = dashed, label="0"];
3->8 [style = dashed, label="0"];
6->1 [style = bold, label=""];
4->3 [style = bold, label=""];
5->2 [style = bold, label=""];
1->8 [style = bold, label=""];
2->4 [style = bold, label=""];
2->1 [style = bold, label=""];
7->6 [style = bold, label=""];
0->2 [style = bold, label=""];
2->6 [style = dashed, label="0"];
}
