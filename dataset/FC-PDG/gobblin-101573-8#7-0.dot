digraph {
11 [style = filled, label = "configureSchema['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "configureSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "configureSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "AvroJob.setInputKeySchema(job,newestSchema)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Job job@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "newestSchema != null@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "AvroJob.setOutputKeySchema(job,newestSchema)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Schema newestSchema = getNewestSchemaFromSource(job,this.fs)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "AvroJob.setInputKeySchema(job,newestSchema)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "AvroJob.setMapOutputKeySchema(job,this.shouldDeduplicate? getDedupKeySchema(newestSchema): newestSchema)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "AvroJob.setMapOutputKeySchema(job,this.shouldDeduplicate? getKeySchema(job,newestSchema): newestSchema)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Schema newestSchema = MRCompactorAvroKeyDedupJobRunner.getNewestSchemaFromSource(job,this.fs)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "this.state.getPropAsBoolean(MRCompactorAvroKeyDedupJobRunner.COMPACTION_JOB_AVRO_SINGLE_INPUT_SCHEMA,true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Job job@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "AvroJob.setOutputKeySchema(job,newestSchema)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "AvroJob.setMapOutputValueSchema(job,newestSchema)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "this.useSingleInputSchema@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5->2 [style = bold, label=""];
0->8 [style = solid, label="newestSchema"];
1->8 [style = dotted, label="true"];
2->4 [style = bold, label=""];
13->14 [style = solid, label="job"];
13->2 [style = solid, label="job"];
9->4 [style = bold, label=""];
1->9 [style = dotted, label="true"];
7->4 [style = solid, label="job"];
12->14 [style = bold, label=""];
0->2 [style = solid, label="newestSchema"];
0->9 [style = solid, label="newestSchema"];
12->15 [style = bold, label=""];
13->16 [style = solid, label="job"];
2->9 [style = dashed, label="0"];
12->15 [style = dotted, label="true"];
4->8 [style = bold, label=""];
11->16 [style = bold, label=""];
5->9 [style = bold, label=""];
1->6 [style = dotted, label="true"];
10->7 [style = dotted, label="true"];
16->14 [style = solid, label="newestSchema"];
1->6 [style = bold, label=""];
7->13 [style = dashed, label="0"];
0->1 [style = bold, label=""];
6->2 [style = bold, label=""];
7->8 [style = solid, label="job"];
6->9 [style = bold, label=""];
16->12 [style = bold, label=""];
16->2 [style = solid, label="newestSchema"];
7->5 [style = solid, label="job"];
6->5 [style = dotted, label="true"];
0->16 [style = dashed, label="0"];
13->15 [style = solid, label="job"];
7->0 [style = solid, label="job"];
7->9 [style = solid, label="job"];
16->15 [style = solid, label="newestSchema"];
15->14 [style = bold, label=""];
16->4 [style = solid, label="newestSchema"];
3->0 [style = bold, label=""];
0->4 [style = solid, label="newestSchema"];
6->5 [style = bold, label=""];
0->1 [style = solid, label="newestSchema"];
1->12 [style = dashed, label="0"];
14->2 [style = bold, label=""];
1->2 [style = dotted, label="true"];
3->7 [style = dotted, label="true"];
13->4 [style = solid, label="job"];
0->5 [style = solid, label="newestSchema"];
11->13 [style = dotted, label="true"];
7->2 [style = solid, label="job"];
1->4 [style = dotted, label="true"];
10->0 [style = bold, label=""];
}
