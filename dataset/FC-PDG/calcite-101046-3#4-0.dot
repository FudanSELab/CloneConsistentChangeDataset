digraph {
3 [style = filled, label = "return Frameworks.newConfigBuilder().parserConfig(SqlParser.Config.DEFAULT).defaultSchema(root.get()).traitDefs((List<RelTraitDef>)null).programs(Programs.heuristicJoinOrder(Programs.RULE_SET,true,2))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "config['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "config['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return Frameworks.newConfigBuilder().parserConfig(SqlParser.Config.DEFAULT).defaultSchema(CalciteAssert.addSchema(rootSchema,CalciteAssert.SchemaSpec.SCOTT_WITH_TEMPORAL)).traitDefs((List<RelTraitDef>)null)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "config['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "rootSchema.add(\"mv0\",new AbstractTable(){@Override public RelDataType getRowType(RelDataTypeFactory typeFactory){return typeFactory.builder().add(\"deptno\",SqlTypeName.INTEGER).add(\"count_sal\",SqlTypeName.BIGINT).build()}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final SchemaPlus rootSchema = Frameworks.createRootSchema(true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "CalciteAssert.model(TPCDS_MODEL).doWithConnection(null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Holder<SchemaPlus> root = Holder.of(null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "final Holder<SchemaPlus> root = Holder.empty()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->3 [style = bold, label=""];
5->1 [style = bold, label=""];
2->5 [style = dashed, label="0"];
3->6 [style = dashed, label="0"];
7->8 [style = bold, label=""];
4->5 [style = bold, label=""];
2->1 [style = bold, label=""];
9->6 [style = bold, label=""];
0->2 [style = bold, label=""];
8->9 [style = bold, label=""];
}
