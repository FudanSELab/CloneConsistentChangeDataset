digraph {
4 [style = filled, label = "new ShardingAlterTableStatementValidator().preValidate(shardingRule,sqlStatementContext,Collections.emptyList(),schema)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertPreValidateAlterTableWithRenameTableWithBroadcastTableForPostgreSQL['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "sqlStatement.setRenameTable(new SimpleTableSegment(0,0,new IdentifierValue(\"t_order_new\")))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(shardingRule.isBroadcastTable(\"t_order\")).thenReturn(true)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "when(shardingRule.tableRuleExists(Arrays.asList(\"t_order\",\"t_order_new\"))).thenReturn(false)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SQLStatementContext<AlterTableStatement> sqlStatementContext = new AlterTableStatementContext(sqlStatement)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "sqlStatement.setTable(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"t_order\"))))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "new ShardingAlterTableStatementValidator().preValidate(shardingRule,sqlStatementContext,Collections.emptyList(),schema)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertPreValidateAlterTableWithRenameTableWithShardingTableForPostgreSQL['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "sqlStatement.setTable(new SimpleTableSegment(0,0,new IdentifierValue(\"t_order\")))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertPreValidateAlterTableWithRenameTableWithShardingTableForPostgreSQL['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "PostgreSQLAlterTableStatement sqlStatement = new PostgreSQLAlterTableStatement()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sqlStatement.setRenameTable(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"t_order_new\"))))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "when(shardingRule.tableRuleExists(Arrays.asList(\"t_order\",\"t_order_new\"))).thenReturn(true)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->4 [style = solid, label="sqlStatementContext"];
0->3 [style = bold, label=""];
3->8 [style = dashed, label="0"];
6->4 [style = bold, label=""];
1->9 [style = dashed, label="0"];
1->2 [style = bold, label=""];
7->0 [style = bold, label=""];
13->12 [style = bold, label=""];
6->13 [style = dashed, label="0"];
3->1 [style = bold, label=""];
5->0 [style = bold, label=""];
2->13 [style = bold, label=""];
2->11 [style = solid, label="sqlStatementContext"];
9->2 [style = bold, label=""];
2->6 [style = bold, label=""];
10->0 [style = bold, label=""];
0->2 [style = solid, label="sqlStatement"];
0->8 [style = bold, label=""];
8->9 [style = bold, label=""];
12->11 [style = bold, label=""];
}
