digraph {
46 [style = filled, label = "sortedSet.setDocument(0)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "BinaryDocValues binaries = cache.getTerms(ar,\"bogusterms\",true)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.INT_POINT_PARSER,true)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.LEGACY_INT_PARSER,true)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "assertEquals(0,scratch.length)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(NO_MORE_DOCS,ints.nextDoc())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "DirectoryReader ir = iw.getReader()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.LEGACY_FLOAT_PARSER,true)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "testNonexistantFields['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(SortedSetDocValues.NO_MORE_ORDS,sortedSet.nextOrd())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(0,ints.get(0))@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "cache.purgeAllCaches()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "LeafReader ar = getOnlyLeafReader(ir)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(0,doubles.get(0))@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "scratch = sorted.get(0)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LEGACY_LONG_PARSER)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.DOUBLE_POINT_PARSER,true)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "iw.addDocument(doc)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertFalse(bits.get(0))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.LEGACY_FLOAT_PARSER)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "iw.close()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Document doc = new Document()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.FLOAT_POINT_PARSER,true)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "dir.close()@@@35@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RandomIndexWriter iw = new RandomIndexWriter(random(),dir)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(NO_MORE_DOCS,doubles.nextDoc())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "testNonexistantFields['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "testNonexistantFields['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LEGACY_LONG_PARSER,true)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(0,longs.get(0))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LONG_POINT_PARSER,true)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.LEGACY_DOUBLE_PARSER,true)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "Bits bits = cache.getDocsWithField(ar,\"bogusbits\",null)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(0,scratch.length)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(NO_MORE_DOCS,longs.nextDoc())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.LEGACY_INT_PARSER)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "final FieldCache cache = FieldCache.DEFAULT@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "SortedDocValues sorted = cache.getTermsIndex(ar,\"bogustermsindex\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.LEGACY_DOUBLE_PARSER)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "SortedSetDocValues sortedSet = cache.getDocTermOrds(ar,\"bogusmultivalued\",null)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(NO_MORE_DOCS,floats.nextDoc())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(-1,sorted.getOrd(0))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(0,floats.get(0))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "BytesRef scratch = binaries.get(0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "ir.close()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
1->5 [style = bold, label=""];
1->39 [style = bold, label=""];
0->26 [style = solid, label="ar"];
46->38 [style = bold, label=""];
16->26 [style = dashed, label="0"];
24->19 [style = bold, label=""];
42->46 [style = bold, label=""];
15->14 [style = bold, label=""];
18->47 [style = bold, label=""];
8->18 [style = bold, label=""];
1->30 [style = dashed, label="0"];
2->3 [style = bold, label=""];
0->39 [style = solid, label="ar"];
15->14 [style = solid, label="doc"];
27->30 [style = bold, label=""];
4->19 [style = bold, label=""];
39->6 [style = bold, label=""];
28->26 [style = bold, label=""];
31->18 [style = bold, label=""];
22->28 [style = bold, label=""];
5->39 [style = dashed, label="0"];
29->23 [style = bold, label=""];
9->10 [style = bold, label=""];
41->1 [style = bold, label=""];
10->27 [style = dashed, label="0"];
5->29 [style = dashed, label="0"];
0->8 [style = solid, label="ar"];
26->24 [style = bold, label=""];
25->17 [style = bold, label=""];
0->34 [style = solid, label="ar"];
30->29 [style = bold, label=""];
0->47 [style = solid, label="ar"];
3->0 [style = bold, label=""];
4->44 [style = bold, label=""];
38->32 [style = bold, label=""];
0->27 [style = solid, label="ar"];
0->32 [style = solid, label="ar"];
0->7 [style = bold, label=""];
21->12 [style = bold, label=""];
9->27 [style = bold, label=""];
9->41 [style = bold, label=""];
0->10 [style = solid, label="ar"];
35->40 [style = bold, label=""];
0->5 [style = solid, label="ar"];
37->43 [style = bold, label=""];
0->16 [style = solid, label="ar"];
40->33 [style = bold, label=""];
8->22 [style = dashed, label="0"];
23->22 [style = bold, label=""];
6->31 [style = bold, label=""];
10->41 [style = dashed, label="0"];
5->6 [style = bold, label=""];
16->47 [style = dashed, label="0"];
33->42 [style = bold, label=""];
8->31 [style = dashed, label="0"];
6->8 [style = bold, label=""];
2->0 [style = solid, label="ir"];
18->28 [style = dashed, label="0"];
32->36 [style = bold, label=""];
11->17 [style = bold, label=""];
17->20 [style = solid, label="dir"];
14->2 [style = bold, label=""];
19->21 [style = bold, label=""];
0->41 [style = solid, label="ar"];
13->9 [style = bold, label=""];
0->42 [style = solid, label="ar"];
44->37 [style = bold, label=""];
16->4 [style = bold, label=""];
34->35 [style = bold, label=""];
45->17 [style = bold, label=""];
0->22 [style = solid, label="ar"];
10->1 [style = bold, label=""];
20->15 [style = bold, label=""];
43->34 [style = bold, label=""];
4->24 [style = dashed, label="0"];
47->4 [style = bold, label=""];
0->44 [style = solid, label="ar"];
6->23 [style = dashed, label="0"];
36->19 [style = bold, label=""];
0->29 [style = solid, label="ar"];
17->20 [style = bold, label=""];
0->31 [style = solid, label="ar"];
18->16 [style = bold, label=""];
}
