digraph {
0 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(timing.acquireSemaphore(semaphore))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testLostSession['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "{}@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(timing.awaitLatch(latch))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).sessionTimeoutMs(timing.session()).connectionTimeoutMs(timing.connection()).retryPolicy(new ExponentialBackoffRetry(100,3)).namespace(\"aisa\").build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new ExponentialBackoffRetry(100,3))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(timing.acquireSemaphore(semaphore))@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "timing.sleepABit()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "KeeperException.ConnectionLossException|KeeperException.SessionExpiredException e@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "client.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(timing.acquireSemaphore(semaphore))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertNull(client.checkExists().forPath(\"/test-me\"))@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@37@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testWithNamespaceAndLostSession['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.fail()@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Timing timing = new Timing()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "client.delete().guaranteed().forPath(\"/test-me\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "client.getConnectionStateListenable().addListener(listener)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "server.restart()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "{}@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testLostSession['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "ConnectionStateListener listener = new ConnectionStateListener(){@Override public void stateChanged(CuratorFramework client,ConnectionState newState){if ((newState == ConnectionState.LOST) || (newState == ConnectionState.SUSPENDED)) {semaphore.release()}if (newState == ConnectionState.RECONNECTED) {latch.countDown()}}}@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertNull(client.checkExists().forPath(\"/test-me\"))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "KeeperException.ConnectionLossException|KeeperException.SessionExpiredException e@@@28@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "server.stop()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "fail()@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "client.create().forPath(\"/test-me\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "timing.sleepABit()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
9->1 [style = solid, label="latch"];
15->23 [style = bold, label=""];
28->6 [style = bold, label=""];
9->11 [style = bold, label=""];
11->14 [style = bold, label=""];
1->26 [style = dashed, label="0"];
30->20 [style = bold, label=""];
1->15 [style = bold, label=""];
19->20 [style = bold, label=""];
0->2 [style = bold, label=""];
4->26 [style = bold, label=""];
11->13 [style = solid, label="semaphore"];
11->25 [style = solid, label="semaphore"];
14->16 [style = solid, label="listener"];
6->19 [style = bold, label=""];
10->22 [style = dashed, label="0"];
2->10 [style = bold, label=""];
15->3 [style = bold, label=""];
25->2 [style = bold, label=""];
9->26 [style = solid, label="latch"];
5->25 [style = bold, label=""];
29->13 [style = bold, label=""];
7->9 [style = bold, label=""];
3->23 [style = dashed, label="0"];
12->13 [style = bold, label=""];
17->12 [style = bold, label=""];
31->6 [style = bold, label=""];
0->25 [style = dashed, label="0"];
13->27 [style = dashed, label="0"];
5->0 [style = bold, label=""];
10->13 [style = bold, label=""];
18->6 [style = bold, label=""];
22->27 [style = bold, label=""];
23->21 [style = bold, label=""];
19->30 [style = dashed, label="0"];
24->17 [style = bold, label=""];
26->15 [style = bold, label=""];
11->0 [style = solid, label="semaphore"];
16->5 [style = bold, label=""];
3->21 [style = bold, label=""];
4->1 [style = bold, label=""];
11->27 [style = solid, label="semaphore"];
8->4 [style = bold, label=""];
17->27 [style = bold, label=""];
20->7 [style = bold, label=""];
13->8 [style = bold, label=""];
2->22 [style = bold, label=""];
17->29 [style = bold, label=""];
19->21 [style = solid, label="client"];
27->8 [style = bold, label=""];
30->21 [style = solid, label="client"];
6->30 [style = bold, label=""];
}
