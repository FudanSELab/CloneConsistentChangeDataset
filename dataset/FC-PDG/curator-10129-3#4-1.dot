digraph {
9 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final CountDownLatch createdLatch = new CountDownLatch(1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final WatcherRemovalFacade removerClient = (WatcherRemovalFacade)client.newWatcherRemoveCuratorFramework()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Timing timing = new Timing()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(deletedLatch))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(createdLatch))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(),1)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "{TestCleanState.closeAndTestClean(client)}@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "removerClient.create().forPath(\"/yo\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "client.start()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testResetFromWatcher['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(),0)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testTriggered['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "removerClient.delete().forPath(\"/yo\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(),1)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Watcher watcher = new Watcher(){@Override public void process(WatchedEvent event){if (event.getType() == Event.EventType.NodeCreated) {latch.countDown()}}}@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testTriggered['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "removerClient.create().forPath(\"/yo\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(removerClient.getRemovalManager().getEntries().size(),1)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final CountDownLatch deletedLatch = new CountDownLatch(1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Watcher watcher = new Watcher(){@Override public void process(WatchedEvent event){if (event.getType() == Event.EventType.NodeCreated) {try {removerClient.checkExists().usingWatcher(this).forPath(\"/yo\")}catch (Exception e) createdLatch.countDown()}if (event.getType() == Event.EventType.NodeDeleted) {deletedLatch.countDown()}}}@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "client.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "removerClient.checkExists().usingWatcher(watcher).forPath(\"/yo\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
9->11 [style = bold, label=""];
4->6 [style = bold, label=""];
16->24 [style = bold, label=""];
0->2 [style = bold, label=""];
18->17 [style = bold, label=""];
25->14 [style = bold, label=""];
8->14 [style = dashed, label="0"];
6->5 [style = solid, label="client"];
15->19 [style = bold, label=""];
12->6 [style = bold, label=""];
24->22 [style = bold, label=""];
10->7 [style = bold, label=""];
17->22 [style = solid, label="client"];
9->23 [style = dashed, label="0"];
3->0 [style = bold, label=""];
19->16 [style = bold, label=""];
7->26 [style = bold, label=""];
17->7 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
23->14 [style = solid, label="createdLatch"];
20->8 [style = bold, label=""];
21->20 [style = bold, label=""];
23->21 [style = bold, label=""];
11->3 [style = bold, label=""];
6->10 [style = bold, label=""];
26->23 [style = bold, label=""];
21->16 [style = solid, label="deletedLatch"];
14->15 [style = bold, label=""];
9->8 [style = solid, label="latch"];
7->26 [style = dashed, label="0"];
1->25 [style = bold, label=""];
13->18 [style = bold, label=""];
2->8 [style = bold, label=""];
}
