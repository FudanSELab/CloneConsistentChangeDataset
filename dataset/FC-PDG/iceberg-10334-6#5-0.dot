digraph {
33 [style = filled, label = "table.refresh()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"entries_test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Table filesTable = loadTable(tableIdentifier,\"files\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestHelpers.assertEqualsSafe(filesTable.schema().asStruct(),expected.get(0),actual.get(0))@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testAllEntriesTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"all_entries\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.unpartitioned())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "i += 1@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"files\")).collectAsList()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testFilesTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(\"Actual results should have one row\",1,actual.size())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Dataset<Row> df1 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"a\")),)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "table.newDelete().deleteFromRowFilter(Expressions.equal(\"id\",1)).commit()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "GenericData.Record file = (GenericData.Record)record.get(\"data_file\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"all_entries\")).orderBy(\"snapshot_id\").collectAsList()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Dataset<Row> df2 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"b\")),)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.builderFor(SCHEMA).identity(\"id\").build())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "df2.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Dataset<Row> df2 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(2,\"b\")),)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "df2.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "df1.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"files_test\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "TestHelpers.assertEqualsSafe(entriesTable.schema().asStruct(),expected.get(i),actual.get(i))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testFilesTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "rows.forEach(null)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expected.add(file)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int i = 0@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertEquals(\"Entries table should have 3 rows\",3,expected.size())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"entries\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(\"Actual results should have 3 rows\",3,actual.size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "file.put(0,FileContent.DATA.id())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i < expected.size()@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29->21 [style = bold, label=""];
17->18 [style = dotted, label="true"];
1->36 [style = dashed, label="0"];
35->27 [style = solid, label="i"];
23->32 [style = bold, label=""];
19->6 [style = bold, label=""];
2->4 [style = bold, label=""];
34->26 [style = solid, label="i"];
7->10 [style = bold, label=""];
35->26 [style = solid, label="i"];
13->10 [style = dashed, label="0"];
17->19 [style = bold, label=""];
25->24 [style = bold, label=""];
6->0 [style = bold, label=""];
9->31 [style = bold, label=""];
36->31 [style = solid, label="tableIdentifier"];
18->3 [style = solid, label="file"];
8->17 [style = bold, label=""];
22->9 [style = bold, label=""];
36->23 [style = solid, label="tableIdentifier"];
1->4 [style = solid, label="tableIdentifier"];
5->10 [style = bold, label=""];
11->2 [style = bold, label=""];
20->1 [style = bold, label=""];
36->23 [style = bold, label=""];
26->27 [style = bold, label=""];
1->11 [style = bold, label=""];
27->35 [style = bold, label=""];
11->23 [style = dashed, label="0"];
36->32 [style = solid, label="tableIdentifier"];
3->17 [style = bold, label=""];
12->5 [style = bold, label=""];
17->15 [style = dotted, label="true"];
19->29 [style = bold, label=""];
16->1 [style = bold, label=""];
10->13 [style = bold, label=""];
1->11 [style = solid, label="tableIdentifier"];
1->7 [style = solid, label="tableIdentifier"];
4->9 [style = bold, label=""];
18->15 [style = bold, label=""];
3->19 [style = bold, label=""];
3->8 [style = bold, label=""];
14->8 [style = bold, label=""];
31->5 [style = bold, label=""];
17->28 [style = bold, label=""];
15->3 [style = bold, label=""];
17->8 [style = bold, label=""];
32->22 [style = bold, label=""];
21->34 [style = bold, label=""];
12->9 [style = dashed, label="0"];
26->27 [style = dotted, label="true"];
34->27 [style = solid, label="i"];
36->10 [style = solid, label="tableIdentifier"];
13->14 [style = bold, label=""];
24->28 [style = bold, label=""];
17->3 [style = dotted, label="true"];
10->33 [style = bold, label=""];
33->25 [style = bold, label=""];
35->26 [style = bold, label=""];
1->2 [style = solid, label="tableIdentifier"];
1->5 [style = solid, label="tableIdentifier"];
34->26 [style = bold, label=""];
30->36 [style = bold, label=""];
5->7 [style = bold, label=""];
26->35 [style = dotted, label="true"];
2->32 [style = dashed, label="0"];
9->12 [style = bold, label=""];
28->17 [style = bold, label=""];
17->18 [style = bold, label=""];
}
