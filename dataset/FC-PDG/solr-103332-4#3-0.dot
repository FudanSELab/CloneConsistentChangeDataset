digraph {
0 [style = filled, label = "iw.addDocument(doc)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LONG_POINT_PARSER,true)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testNonexistantFields['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.LEGACY_FLOAT_PARSER)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.LEGACY_INT_PARSER,true)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "DirectoryReader ir = iw.getReader()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "doc.add(new StoredField(\"boguslongs\",\"bogus\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.LEGACY_INT_PARSER)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "testNonexistantFields['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "Bits bits = cache.getDocsWithField(ar,\"bogusbits\",null)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final FieldCache cache = FieldCache.DEFAULT@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.LEGACY_DOUBLE_PARSER)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "doc.add(new StoredField(\"bogusshorts\",\"bogus\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "BytesRef scratch = binaries.get(0)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "LeafReader ar = getOnlyLeafReader(ir)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ir.close()@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LEGACY_LONG_PARSER,true)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(0,cache.getCacheEntries().length)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testNonIndexedFields['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "doc.add(new StoredField(\"bogusfloats\",\"bogus\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "doc.add(new StoredField(\"bogusterms\",\"bogus\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(NO_MORE_DOCS,floats.nextDoc())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "doc.add(new StoredField(\"bogustermsindex\",\"bogus\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "doc.add(new StoredField(\"bogusints\",\"bogus\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(NO_MORE_DOCS,doubles.nextDoc())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertFalse(bits.get(0))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(0,doubles.get(0))@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(0,longs.get(0))@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "doc.add(new StoredField(\"bogusbytes\",\"bogus\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(0,scratch.length)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "cache.purgeAllCaches()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RandomIndexWriter iw = new RandomIndexWriter(random(),dir)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.DOUBLE_POINT_PARSER,true)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(NO_MORE_DOCS,ints.nextDoc())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "doc.add(new StoredField(\"bogusdoubles\",\"bogus\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.LEGACY_FLOAT_PARSER,true)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "dir.close()@@@45@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "doc.add(new StoredField(\"bogusmultivalued\",\"bogus\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "SortedSetDocValues sortedSet = cache.getDocTermOrds(ar,\"bogusmultivalued\",null)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "NumericDocValues ints = cache.getNumerics(ar,\"bogusints\",FieldCache.INT_POINT_PARSER,true)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "iw.close()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(NO_MORE_DOCS,longs.nextDoc())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "scratch = sorted.get(0)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "BinaryDocValues binaries = cache.getTerms(ar,\"bogusterms\",true)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "NumericDocValues floats = cache.getNumerics(ar,\"bogusfloats\",FieldCache.FLOAT_POINT_PARSER,true)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Document doc = new Document()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(0,floats.get(0))@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(-1,sorted.getOrd(0))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "SortedDocValues sorted = cache.getTermsIndex(ar,\"bogustermsindex\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "sortedSet.setDocument(0)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(SortedSetDocValues.NO_MORE_ORDS,sortedSet.nextOrd())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "doc.add(new StoredField(\"bogusbits\",\"bogus\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "NumericDocValues longs = cache.getNumerics(ar,\"boguslongs\",FieldCache.LEGACY_LONG_PARSER)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertEquals(0,scratch.length)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(0,ints.get(0))@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "NumericDocValues doubles = cache.getNumerics(ar,\"bogusdoubles\",FieldCache.LEGACY_DOUBLE_PARSER,true)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->56 [style = solid, label="ar"];
55->36 [style = bold, label=""];
9->11 [style = bold, label=""];
25->30 [style = bold, label=""];
54->57 [style = bold, label=""];
13->10 [style = solid, label="ar"];
57->41 [style = bold, label=""];
38->39 [style = bold, label=""];
13->27 [style = solid, label="ar"];
30->29 [style = bold, label=""];
13->37 [style = solid, label="ar"];
8->0 [style = solid, label="doc"];
13->12 [style = solid, label="ar"];
7->20 [style = solid, label="dir"];
47->49 [style = bold, label=""];
8->0 [style = bold, label=""];
19->1 [style = bold, label=""];
13->40 [style = solid, label="ar"];
12->2 [style = bold, label=""];
40->11 [style = bold, label=""];
36->0 [style = bold, label=""];
2->44 [style = bold, label=""];
45->38 [style = bold, label=""];
28->25 [style = bold, label=""];
26->28 [style = bold, label=""];
48->34 [style = bold, label=""];
13->9 [style = solid, label="ar"];
17->22 [style = dashed, label="0"];
33->7 [style = bold, label=""];
13->51 [style = solid, label="ar"];
11->51 [style = bold, label=""];
13->57 [style = solid, label="ar"];
16->6 [style = bold, label=""];
11->12 [style = bold, label=""];
10->21 [style = bold, label=""];
12->30 [style = dashed, label="0"];
2->4 [style = bold, label=""];
27->22 [style = bold, label=""];
44->17 [style = bold, label=""];
43->45 [style = bold, label=""];
29->27 [style = bold, label=""];
20->8 [style = bold, label=""];
21->9 [style = bold, label=""];
5->13 [style = solid, label="ir"];
13->30 [style = solid, label="ar"];
3->7 [style = bold, label=""];
56->21 [style = bold, label=""];
52->48 [style = bold, label=""];
42->32 [style = bold, label=""];
41->46 [style = bold, label=""];
10->56 [style = dashed, label="0"];
13->15 [style = bold, label=""];
24->7 [style = bold, label=""];
49->54 [style = bold, label=""];
4->44 [style = dashed, label="0"];
32->50 [style = bold, label=""];
4->17 [style = bold, label=""];
8->31 [style = bold, label=""];
22->19 [style = bold, label=""];
31->52 [style = bold, label=""];
6->23 [style = bold, label=""];
4->27 [style = dashed, label="0"];
7->20 [style = bold, label=""];
53->37 [style = bold, label=""];
6->56 [style = bold, label=""];
51->2 [style = bold, label=""];
21->26 [style = dashed, label="0"];
2->29 [style = dashed, label="0"];
6->10 [style = bold, label=""];
11->25 [style = dashed, label="0"];
50->35 [style = bold, label=""];
14->13 [style = bold, label=""];
34->43 [style = bold, label=""];
10->23 [style = dashed, label="0"];
37->42 [style = bold, label=""];
0->5 [style = bold, label=""];
13->47 [style = solid, label="ar"];
13->44 [style = solid, label="ar"];
13->28 [style = solid, label="ar"];
39->55 [style = bold, label=""];
12->51 [style = dashed, label="0"];
17->47 [style = bold, label=""];
13->50 [style = solid, label="ar"];
9->28 [style = dashed, label="0"];
46->53 [style = bold, label=""];
35->19 [style = bold, label=""];
23->26 [style = bold, label=""];
1->18 [style = bold, label=""];
5->14 [style = bold, label=""];
15->16 [style = bold, label=""];
17->19 [style = bold, label=""];
9->40 [style = dashed, label="0"];
21->40 [style = bold, label=""];
13->4 [style = solid, label="ar"];
13->23 [style = solid, label="ar"];
}
