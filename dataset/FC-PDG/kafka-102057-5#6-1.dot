digraph {
22 [style = filled, label = "assertFalse(task.maybePunctuateSystemTime())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "time.sleep(100)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "time.sleep(105)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertTrue(task.maybePunctuateSystemTime())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "shouldRespectPunctuateCancellationSystemTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "time.sleep(10)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(task.maybePunctuateSystemTime())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(task.maybePunctuateSystemTime())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "processorSystemTime.mockProcessor.checkAndClearPunctuateResult(PunctuationType.WALL_CLOCK_TIME,now + 10)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "task.initializeStateStores()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(task.maybePunctuateSystemTime())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertFalse(task.maybePunctuateSystemTime())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertTrue(task.maybePunctuateSystemTime())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertTrue(task.maybePunctuateSystemTime())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "shouldPunctuateOnceSystemTimeAfterGap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "task = createStatelessTask(createConfig(false),StreamsConfig.METRICS_LATEST)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "time.sleep(5)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "task = createStatelessTask(createConfig(false,\"100\"),StreamsConfig.METRICS_LATEST)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "shouldRespectPunctuateCancellationSystemTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "time.sleep(10)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "task.initializeTopology()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(task.maybePunctuateSystemTime())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "time.sleep(1)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "processorSystemTime.mockProcessor.checkAndClearPunctuateResult(PunctuationType.WALL_CLOCK_TIME,now + 100,now + 110,now + 122,now + 130,now + 235,now + 240)@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "processorSystemTime.mockProcessor.scheduleCancellable.cancel()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(task.maybePunctuateSystemTime())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "time.sleep(7)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "task.completeRestoration()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final long now = time.milliseconds()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "task.initializeIfNeeded()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "time.sleep(12)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
29->8 [style = bold, label=""];
16->27 [style = bold, label=""];
28->30 [style = bold, label=""];
21->6 [style = bold, label=""];
1->14 [style = dashed, label="0"];
10->24 [style = bold, label=""];
10->2 [style = solid, label="now"];
18->26 [style = bold, label=""];
20->28 [style = bold, label=""];
3->6 [style = bold, label=""];
8->12 [style = dashed, label="0"];
4->2 [style = bold, label=""];
9->10 [style = bold, label=""];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
10->19 [style = solid, label="now"];
1->9 [style = bold, label=""];
24->5 [style = bold, label=""];
26->22 [style = bold, label=""];
8->1 [style = bold, label=""];
5->21 [style = bold, label=""];
6->4 [style = bold, label=""];
27->4 [style = bold, label=""];
30->19 [style = bold, label=""];
13->12 [style = bold, label=""];
22->20 [style = bold, label=""];
11->10 [style = bold, label=""];
17->18 [style = bold, label=""];
10->0 [style = bold, label=""];
12->14 [style = bold, label=""];
25->15 [style = bold, label=""];
0->24 [style = dashed, label="0"];
9->11 [style = dashed, label="0"];
23->17 [style = bold, label=""];
14->11 [style = bold, label=""];
4->23 [style = bold, label=""];
6->25 [style = bold, label=""];
0->5 [style = bold, label=""];
}
