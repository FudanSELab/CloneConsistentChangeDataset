digraph {
32 [style = filled, label = "final int keyPartition = keyQueryMetadata.getPartition()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "store1 = IntegrationTestUtils.getStore(kafkaStreams1,storeQueryParam)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "kafkaStreams1IsActive@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final boolean kafkaStreams1IsActive = (keyQueryMetadata.getActiveHost().port() % 2) == 1@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final ReadOnlyKeyValueStore<Integer,Integer> store2 = IntegrationTestUtils.getStore(TABLE_NAME,kafkaStreams2,queryableStoreType)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final int batch1NumMessages = 100@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(kafkaStreams1IsActive? store4.get(key): store3.get(key),is(nullValue()))@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(store1,is(nullValue()))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "store2 = IntegrationTestUtils.getStore(kafkaStreams2,storeQueryParam)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "kafkaStreams1IsActive@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertThat(store2,is(nullValue()))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(store1,is(notNullValue()))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "produceValueRange(key,0,batch1NumMessages)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int key = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(kafkaStreams1IsActive? store1.get(key): store2.get(key),is(notNullValue()))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final KafkaStreams kafkaStreams2 = createKafkaStreams(builder,streamsConfiguration())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final boolean kafkaStreams1IsActive = (keyQueryMetadata.activeHost().port() % 2) == 1@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "shouldQuerySpecificActivePartitionStores['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ReadOnlyKeyValueStore<Integer,Integer> store3 = null@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "store3 = IntegrationTestUtils.getStore(kafkaStreams1,storeQueryParam)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final int keyDontBelongPartition = (keyPartition == 0)? 1: 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "!kafkaStreams1IsActive@@@39@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "shouldQueryOnlyActivePartitionStoresByDefault['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "StoreQueryParameters<ReadOnlyKeyValueStore<Integer,Integer>> storeQueryParam = StoreQueryParameters.fromNameAndType(TABLE_NAME,QueryableStoreTypes.keyValueStore()).withPartition(keyPartition)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final QueryableStoreType<ReadOnlyKeyValueStore<Integer,Integer>> queryableStoreType = QueryableStoreTypes.keyValueStore()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(kafkaStreams1IsActive? store2.get(key): store1.get(key),is(nullValue()))@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final KeyQueryMetadata keyQueryMetadata = kafkaStreams1.queryMetadataForKey(TABLE_NAME,key,null)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "store4 = IntegrationTestUtils.getStore(kafkaStreams2,storeQueryParam)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final List<KafkaStreams> kafkaStreamsList = Arrays.asList(kafkaStreams1,kafkaStreams2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "shouldQueryOnlyActivePartitionStoresByDefault['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final KafkaStreams kafkaStreams1 = createKafkaStreams(builder,streamsConfiguration())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "startApplicationAndWaitUntilRunning(kafkaStreamsList,Duration.ofSeconds(60))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "ReadOnlyKeyValueStore<Integer,Integer> store4 = null@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final ReadOnlyKeyValueStore<Integer,Integer> store1 = IntegrationTestUtils.getStore(TABLE_NAME,kafkaStreams1,queryableStoreType)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(store2,is(notNullValue()))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "storeQueryParam = StoreQueryParameters.fromNameAndType(TABLE_NAME,QueryableStoreTypes.keyValueStore()).withPartition(keyDontBelongPartition)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "ReadOnlyKeyValueStore<Integer,Integer> store2 = null@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "ReadOnlyKeyValueStore<Integer,Integer> store1 = null@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(semaphore.tryAcquire(batch1NumMessages,60,TimeUnit.SECONDS),is(equalTo(true)))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "builder.table(INPUT_TOPIC_NAME,Consumed.with(Serdes.Integer(),Serdes.Integer()),Materialized.as(TABLE_NAME).withCachingDisabled()).toStream().peek(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37->31 [style = solid, label="store1"];
23->22 [style = bold, label=""];
3->10 [style = bold, label=""];
24->31 [style = solid, label="store1"];
38->41 [style = solid, label="store2"];
20->6 [style = bold, label=""];
14->4 [style = solid, label="kafkaStreams1IsActive"];
21->39 [style = bold, label=""];
11->16 [style = bold, label=""];
39->22 [style = solid, label="kafkaStreams1IsActive"];
16->13 [style = bold, label=""];
40->31 [style = dotted, label="false"];
40->27 [style = dotted, label="true"];
15->0 [style = solid, label="queryableStoreType"];
15->0 [style = bold, label=""];
28->29 [style = dotted, label="false"];
26->40 [style = bold, label=""];
30->7 [style = bold, label=""];
6->25 [style = bold, label=""];
38->35 [style = bold, label=""];
20->4 [style = solid, label="kafkaStreams1IsActive"];
20->6 [style = solid, label="kafkaStreams1IsActive"];
1->5 [style = solid, label="kafkaStreams2"];
10->24 [style = solid, label="kafkaStreams1"];
19->7 [style = bold, label=""];
15->2 [style = solid, label="queryableStoreType"];
31->33 [style = bold, label=""];
35->26 [style = bold, label=""];
5->11 [style = solid, label="kafkaStreamsList"];
28->29 [style = bold, label=""];
1->5 [style = bold, label=""];
39->14 [style = bold, label=""];
26->36 [style = solid, label="store2"];
10->0 [style = solid, label="kafkaStreams1"];
34->28 [style = bold, label=""];
25->34 [style = bold, label=""];
8->6 [style = solid, label="key"];
7->16 [style = solid, label="batch1NumMessages"];
38->36 [style = solid, label="store2"];
10->23 [style = solid, label="kafkaStreams1"];
33->6 [style = bold, label=""];
39->35 [style = solid, label="kafkaStreams1IsActive"];
12->9 [style = bold, label=""];
17->32 [style = bold, label=""];
37->38 [style = bold, label=""];
17->15 [style = bold, label=""];
32->14 [style = solid, label="keyPartition"];
32->21 [style = solid, label="keyPartition"];
8->16 [style = solid, label="key"];
8->22 [style = solid, label="key"];
24->40 [style = bold, label=""];
7->8 [style = bold, label=""];
24->27 [style = solid, label="store1"];
35->24 [style = dotted, label="true"];
6->4 [style = bold, label=""];
8->4 [style = solid, label="key"];
13->17 [style = bold, label=""];
28->23 [style = bold, label=""];
41->31 [style = bold, label=""];
39->33 [style = solid, label="kafkaStreams1IsActive"];
40->27 [style = bold, label=""];
26->41 [style = solid, label="store2"];
10->1 [style = bold, label=""];
40->41 [style = bold, label=""];
8->33 [style = solid, label="key"];
21->6 [style = solid, label="keyDontBelongPartition"];
7->13 [style = solid, label="batch1NumMessages"];
36->33 [style = bold, label=""];
28->23 [style = dotted, label="true"];
14->24 [style = solid, label="storeQueryParam"];
40->41 [style = dotted, label="false"];
35->24 [style = bold, label=""];
40->36 [style = dotted, label="true"];
35->26 [style = dotted, label="false"];
9->10 [style = solid, label="builder"];
18->7 [style = bold, label=""];
8->12 [style = bold, label=""];
6->23 [style = solid, label="storeQueryParam"];
9->1 [style = solid, label="builder"];
9->3 [style = bold, label=""];
14->37 [style = bold, label=""];
1->29 [style = solid, label="kafkaStreams2"];
39->40 [style = solid, label="kafkaStreams1IsActive"];
8->17 [style = solid, label="key"];
32->21 [style = bold, label=""];
6->29 [style = solid, label="storeQueryParam"];
27->36 [style = bold, label=""];
37->27 [style = solid, label="store1"];
5->11 [style = bold, label=""];
14->20 [style = dashed, label="0"];
2->20 [style = bold, label=""];
14->6 [style = bold, label=""];
1->2 [style = solid, label="kafkaStreams2"];
14->6 [style = solid, label="kafkaStreams1IsActive"];
29->22 [style = bold, label=""];
1->26 [style = solid, label="kafkaStreams2"];
2->14 [style = bold, label=""];
0->2 [style = bold, label=""];
14->26 [style = solid, label="storeQueryParam"];
10->5 [style = solid, label="kafkaStreams1"];
}
