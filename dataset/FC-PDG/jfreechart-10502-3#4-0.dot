digraph {
16 [style = filled, label = "GradientPaint gp = new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.BLUE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "ColorBlock b1 = new ColorBlock(gp,1.0,2.0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "fail(e.toString())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "EmptyBlock b2 = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ColorBlock b2 = null@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(b1.equals(b2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "EmptyBlock b1 = new EmptyBlock(1.0,2.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(b1.getClass() == b2.getClass())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(b1 != b2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "b2 = (ColorBlock)b1.clone()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertTrue(b1 != b2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "bounds1.setRect(1.0,2.0,3.0,4.0)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "b2 = (EmptyBlock)b1.clone()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(b1.getClass() == b2.getClass())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "b1.setBounds(bounds1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(b1.equals(b2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Rectangle2D bounds1 = new Rectangle2D.Double(10.0,20.0,30.0,40.0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "GradientPaint gp = new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.blue)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "b2.setBounds(new Rectangle2D.Double(1.0,2.0,3.0,4.0))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "CloneNotSupportedException e@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(b1.equals(b2))@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(b1.equals(b2))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16->11 [style = bold, label=""];
5->6 [style = solid, label="b2"];
5->8 [style = solid, label="b2"];
14->12 [style = dotted, label="true"];
19->20 [style = dotted, label="true"];
11->1 [style = solid, label="bounds1"];
19->20 [style = bold, label=""];
0->4 [style = solid, label="gp"];
4->6 [style = solid, label="b1"];
11->4 [style = bold, label=""];
8->3 [style = bold, label=""];
0->16 [style = dashed, label="0"];
0->11 [style = bold, label=""];
22->14 [style = solid, label="b2"];
20->14 [style = bold, label=""];
12->24 [style = bold, label=""];
12->6 [style = bold, label=""];
1->13 [style = bold, label=""];
5->2 [style = solid, label="b2"];
5->9 [style = solid, label="b2"];
22->24 [style = solid, label="b2"];
7->9 [style = bold, label=""];
21->14 [style = solid, label="b1"];
23->22 [style = bold, label=""];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
9->15 [style = bold, label=""];
14->12 [style = bold, label=""];
10->0 [style = bold, label=""];
13->5 [style = bold, label=""];
16->4 [style = solid, label="gp"];
4->1 [style = bold, label=""];
18->21 [style = bold, label=""];
6->7 [style = bold, label=""];
22->14 [style = bold, label=""];
15->8 [style = bold, label=""];
17->16 [style = bold, label=""];
21->23 [style = bold, label=""];
5->22 [style = dashed, label="0"];
}
