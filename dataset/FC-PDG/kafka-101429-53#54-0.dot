digraph {
21 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
119 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "assertNull(driver.readOutput(output))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
111 [style = filled, label = "i++@@@62@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
121 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
117 [style = filled, label = "int i = 0@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "assertNull(driver.readOutput(output))@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "assertOutputKeyValue(driver,3,\"XX3+YY3\")@@@74@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "driver.flushState()@@@65@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "driver.flushState()@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
130 [style = filled, label = "i < 2@@@45@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
96 [style = filled, label = "i < 2@@@61@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
125 [style = filled, label = "int i = 0@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "int i = 0@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "final KTable<Integer,String> table1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "i++@@@62@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "joined.toStream().process(supplier)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "final KTable<Integer,String> joined@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertOutputKeyValue(driver,2,\"XX2+YY2\")@@@73@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
91 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,null))@@@63@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
113 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
126 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertOutputKeyValue(driver,1,\"XX1+null\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,null))@@@79@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
109 [style = filled, label = "assertOutputKeyValue(driver,2,\"null+YY2\")@@@82@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "driver.flushState()@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
132 [style = filled, label = "int i = 0@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@66@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "driver.setUp(builder,stateDir)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "joined.toStream().to(output)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,null),kv(2,\"null+YY2\"),kv(3,\"XX3+YY3\"))@@@81@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
128 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "int i = 0@@@60@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
110 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
114 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
123 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "int i = 0@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
105 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+null\")@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "driver.flushState()@@@79@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
133 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+null\")@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "i < 2@@@27@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertNull(driver.readOutput(output))@@@83@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "i++@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@69@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+YY2\")@@@49@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
83 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "driver.flushState()@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+YY1\")@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+Y0\")@@@33@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
112 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertNull(driver.readOutput(output))@@@75@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+Y1\")@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
82 [style = filled, label = "assertNull(driver.readOutput(output))@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "i < 3@@@75@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
122 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
134 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "supplier = new MockProcessorSupplier<>()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
94 [style = filled, label = "i++@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "driver.flushState()@@@57@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@72@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "joined = table1.outerJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+YY0\")@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "final KTable<Integer,String> table2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "driver.flushState()@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
124 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertNull(driver.readOutput(output))@@@67@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
95 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+Y0\")@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "i < 2@@@61@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "testOuterJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "assertNull(driver.readOutput(output))@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "driver.process(topic1,expectedKeys(i(,null)@@@77@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
101 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+null\")@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
79 [style = filled, label = "i < 2@@@28@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
100 [style = filled, label = "i < 3@@@77@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@41@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey))@@@37@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "i++@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
116 [style = filled, label = "joined.process(supplier)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "assertNull(driver.readOutput(output))@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
80 [style = filled, label = "assertOutputKeyValue(driver,1,null)@@@81@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@69@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,\"X2+null\"),kv(3,\"X3+null\"))@@@47@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i++@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "@SuppressWarnings(\"unchecked\") final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertOutputKeyValue(driver,0,\"XX0+null\")@@@71@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@63@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@73@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "getter.init(driver.context())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+null\")@@@24@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
97 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+YY1\")@@@48@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+YY3\")@@@50@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "driver.flushState()@@@71@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
64 [style = filled, label = "table2 = builder.table(topic2,consumed)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c21422@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+YY2\")@@@57@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i < 2@@@21@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+Y1\")@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
88 [style = filled, label = "i++@@@78@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
127 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@53@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "table1 = builder.table(topic1,consumed)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+YY3\")@@@58@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+null\")@@@65@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "i < 2@@@19@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@59@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
118 [style = filled, label = "i++@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+YY0\")@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+null\")@@@66@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "processor.checkAndClearProcessResult(\"1:null\",\"2:null+YY2\")@@@80@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "int i = 1@@@76@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
77->110 [style = bold, label=""];
86->95 [style = bold, label=""];
40->2 [style = bold, label=""];
8->30 [style = bold, label=""];
94->110 [style = solid, label="i"];
62->3 [style = bold, label=""];
100->80 [style = bold, label=""];
52->8 [style = bold, label=""];
75->79 [style = solid, label="i"];
62->80 [style = dashed, label="0"];
9->11 [style = bold, label=""];
38->37 [style = solid, label="expectedKeys"];
19->104 [style = dashed, label="0"];
63->48 [style = bold, label=""];
74->72 [style = bold, label=""];
102->108 [style = bold, label=""];
90->86 [style = bold, label=""];
98->93 [style = solid, label="i"];
65->84 [style = bold, label=""];
1->27 [style = bold, label=""];
47->37 [style = solid, label="i"];
97->68 [style = bold, label=""];
35->29 [style = solid, label="builder"];
11->29 [style = bold, label=""];
72->100 [style = bold, label=""];
120->114 [style = bold, label=""];
16->64 [style = bold, label=""];
40->7 [style = solid, label="i"];
47->65 [style = solid, label="i"];
88->100 [style = bold, label=""];
12->42 [style = bold, label=""];
47->37 [style = bold, label=""];
69->96 [style = bold, label=""];
17->7 [style = solid, label="i"];
23->22 [style = solid, label="i"];
38->110 [style = solid, label="expectedKeys"];
88->103 [style = solid, label="i"];
80->109 [style = bold, label=""];
104->67 [style = bold, label=""];
130->128 [style = bold, label=""];
38->126 [style = bold, label=""];
89->55 [style = bold, label=""];
33->0 [style = bold, label=""];
108->98 [style = bold, label=""];
30->52 [style = dashed, label="0"];
23->51 [style = solid, label="i"];
12->2 [style = bold, label=""];
49->39 [style = bold, label=""];
23->22 [style = bold, label=""];
31->6 [style = bold, label=""];
51->22 [style = solid, label="i"];
38->49 [style = bold, label=""];
56->36 [style = solid, label="i"];
38->91 [style = solid, label="expectedKeys"];
107->105 [style = bold, label=""];
38->2 [style = solid, label="expectedKeys"];
118->128 [style = solid, label="i"];
65->37 [style = bold, label=""];
69->111 [style = solid, label="i"];
20->36 [style = solid, label="i"];
38->103 [style = solid, label="expectedKeys"];
113->125 [style = bold, label=""];
61->26 [style = dashed, label="0"];
34->66 [style = dashed, label="0"];
48->21 [style = bold, label=""];
70->35 [style = bold, label=""];
72->103 [style = solid, label="i"];
52->131 [style = bold, label=""];
79->75 [style = dotted, label="true"];
31->120 [style = dashed, label="0"];
7->2 [style = dashed, label="0"];
42->48 [style = solid, label="getter"];
35->38 [style = bold, label=""];
41->54 [style = bold, label=""];
69->91 [style = solid, label="i"];
14->76 [style = dashed, label="0"];
87->104 [style = bold, label=""];
72->100 [style = solid, label="i"];
50->37 [style = dashed, label="0"];
16->123 [style = dashed, label="0"];
2->25 [style = bold, label=""];
43->128 [style = dashed, label="0"];
65->37 [style = solid, label="i"];
135->117 [style = bold, label=""];
121->41 [style = bold, label=""];
125->47 [style = solid, label="i"];
130->118 [style = dotted, label="true"];
88->100 [style = solid, label="i"];
125->15 [style = solid, label="i"];
12->17 [style = dotted, label="true"];
38->5 [style = solid, label="expectedKeys"];
51->43 [style = solid, label="i"];
129->35 [style = bold, label=""];
38->128 [style = solid, label="expectedKeys"];
22->43 [style = bold, label=""];
43->51 [style = bold, label=""];
18->15 [style = bold, label=""];
119->127 [style = bold, label=""];
12->2 [style = dotted, label="true"];
81->77 [style = bold, label=""];
6->14 [style = solid, label="supplier"];
92->99 [style = bold, label=""];
42->45 [style = solid, label="getter"];
22->43 [style = dotted, label="true"];
30->34 [style = bold, label=""];
81->110 [style = solid, label="i"];
21->59 [style = bold, label=""];
69->96 [style = solid, label="i"];
28->65 [style = dashed, label="0"];
32->41 [style = dashed, label="0"];
96->111 [style = dotted, label="true"];
21->83 [style = dashed, label="0"];
32->10 [style = bold, label=""];
50->28 [style = bold, label=""];
59->89 [style = dashed, label="0"];
44->37 [style = dashed, label="0"];
4->76 [style = bold, label=""];
36->62 [style = bold, label=""];
94->77 [style = bold, label=""];
25->2 [style = dashed, label="0"];
133->132 [style = bold, label=""];
130->128 [style = dotted, label="true"];
17->2 [style = bold, label=""];
122->52 [style = bold, label=""];
39->119 [style = dashed, label="0"];
40->2 [style = solid, label="i"];
22->61 [style = bold, label=""];
98->79 [style = bold, label=""];
59->55 [style = bold, label=""];
98->79 [style = solid, label="i"];
64->4 [style = solid, label="table2"];
36->56 [style = dotted, label="true"];
75->79 [style = bold, label=""];
79->37 [style = bold, label=""];
106->69 [style = bold, label=""];
115->33 [style = bold, label=""];
38->7 [style = solid, label="expectedKeys"];
42->8 [style = solid, label="getter"];
0->135 [style = bold, label=""];
27->20 [style = bold, label=""];
114->123 [style = bold, label=""];
84->90 [style = bold, label=""];
32->86 [style = dashed, label="0"];
81->94 [style = solid, label="i"];
101->92 [style = bold, label=""];
71->56 [style = bold, label=""];
105->101 [style = bold, label=""];
23->106 [style = bold, label=""];
2->17 [style = bold, label=""];
37->47 [style = bold, label=""];
83->89 [style = bold, label=""];
57->17 [style = bold, label=""];
18->40 [style = dashed, label="0"];
4->14 [style = bold, label=""];
17->40 [style = solid, label="i"];
56->36 [style = bold, label=""];
111->91 [style = solid, label="i"];
15->47 [style = dotted, label="true"];
45->23 [style = bold, label=""];
100->88 [style = dotted, label="true"];
130->112 [style = bold, label=""];
117->12 [style = solid, label="i"];
77->110 [style = dotted, label="true"];
109->85 [style = bold, label=""];
38->44 [style = solid, label="expectedKeys"];
75->93 [style = solid, label="i"];
68->63 [style = bold, label=""];
78->87 [style = bold, label=""];
42->26 [style = solid, label="getter"];
117->2 [style = solid, label="i"];
25->18 [style = bold, label=""];
96->91 [style = dotted, label="true"];
66->97 [style = bold, label=""];
100->103 [style = bold, label=""];
81->77 [style = solid, label="i"];
26->19 [style = bold, label=""];
131->124 [style = bold, label=""];
39->53 [style = bold, label=""];
37->65 [style = bold, label=""];
73->23 [style = bold, label=""];
76->33 [style = bold, label=""];
40->102 [style = bold, label=""];
28->41 [style = bold, label=""];
82->83 [style = bold, label=""];
12->113 [style = bold, label=""];
42->46 [style = solid, label="getter"];
17->12 [style = solid, label="i"];
132->130 [style = solid, label="i"];
132->118 [style = solid, label="i"];
58->1 [style = bold, label=""];
96->91 [style = bold, label=""];
17->12 [style = bold, label=""];
110->94 [style = bold, label=""];
42->57 [style = bold, label=""];
98->75 [style = solid, label="i"];
56->5 [style = solid, label="i"];
42->13 [style = solid, label="getter"];
30->99 [style = dashed, label="0"];
37->44 [style = bold, label=""];
56->74 [style = bold, label=""];
100->103 [style = dotted, label="true"];
15->37 [style = dotted, label="true"];
26->78 [style = bold, label=""];
36->5 [style = bold, label=""];
72->88 [style = solid, label="i"];
5->103 [style = dashed, label="0"];
132->130 [style = bold, label=""];
111->96 [style = solid, label="i"];
64->4 [style = bold, label=""];
125->37 [style = solid, label="i"];
15->37 [style = bold, label=""];
37->44 [style = dotted, label="true"];
21->124 [style = dashed, label="0"];
7->40 [style = bold, label=""];
20->36 [style = bold, label=""];
7->110 [style = dashed, label="0"];
42->27 [style = solid, label="getter"];
20->56 [style = solid, label="i"];
43->91 [style = dashed, label="0"];
53->127 [style = dashed, label="0"];
63->82 [style = bold, label=""];
0->9 [style = bold, label=""];
20->5 [style = solid, label="i"];
10->95 [style = dashed, label="0"];
103->88 [style = bold, label=""];
61->60 [style = bold, label=""];
47->15 [style = bold, label=""];
5->56 [style = bold, label=""];
79->93 [style = dotted, label="true"];
24->35 [style = bold, label=""];
47->44 [style = solid, label="i"];
60->26 [style = bold, label=""];
99->66 [style = bold, label=""];
55->73 [style = bold, label=""];
15->121 [style = bold, label=""];
38->93 [style = solid, label="expectedKeys"];
47->15 [style = solid, label="i"];
124->133 [style = bold, label=""];
134->116 [style = bold, label=""];
42->54 [style = solid, label="getter"];
132->128 [style = solid, label="i"];
44->93 [style = dashed, label="0"];
2->40 [style = dotted, label="true"];
37->65 [style = dotted, label="true"];
2->40 [style = bold, label=""];
123->134 [style = solid, label="stream2"];
118->130 [style = solid, label="i"];
53->31 [style = bold, label=""];
46->47 [style = bold, label=""];
10->52 [style = bold, label=""];
14->33 [style = bold, label=""];
20->71 [style = bold, label=""];
49->126 [style = dashed, label="0"];
123->134 [style = bold, label=""];
65->44 [style = solid, label="i"];
41->122 [style = bold, label=""];
19->58 [style = bold, label=""];
77->2 [style = bold, label=""];
67->20 [style = bold, label=""];
29->12 [style = bold, label=""];
38->43 [style = solid, label="expectedKeys"];
120->116 [style = solid, label="supplier"];
77->94 [style = dotted, label="true"];
6->16 [style = bold, label=""];
51->22 [style = bold, label=""];
94->77 [style = solid, label="i"];
2->7 [style = dotted, label="true"];
9->81 [style = bold, label=""];
44->65 [style = bold, label=""];
91->111 [style = bold, label=""];
117->12 [style = bold, label=""];
58->67 [style = dashed, label="0"];
3->13 [style = bold, label=""];
53->16 [style = bold, label=""];
15->46 [style = bold, label=""];
54->32 [style = bold, label=""];
96->26 [style = bold, label=""];
126->119 [style = bold, label=""];
127->120 [style = bold, label=""];
117->17 [style = solid, label="i"];
23->43 [style = solid, label="i"];
2->7 [style = bold, label=""];
116->115 [style = bold, label=""];
17->2 [style = solid, label="i"];
36->5 [style = dotted, label="true"];
93->75 [style = bold, label=""];
79->93 [style = bold, label=""];
95->107 [style = bold, label=""];
128->118 [style = bold, label=""];
55->45 [style = bold, label=""];
125->15 [style = bold, label=""];
37->50 [style = bold, label=""];
22->51 [style = dotted, label="true"];
118->130 [style = bold, label=""];
111->96 [style = bold, label=""];
34->63 [style = bold, label=""];
}
