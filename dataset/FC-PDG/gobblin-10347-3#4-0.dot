digraph {
22 [style = filled, label = "callbacks.add(new MockWriteCallback())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "IOException e@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "asyncHttpWriter.close()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "asyncHttpWriter.flush()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<MockWriteCallback> callbacks = new ArrayList<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "asyncHttpWriter.write(new Object(),callbacks.get(1))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i < 4@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.fail(\"Close failed\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "asyncHttpWriter.write(new Object(),callbacks.get(2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MockAsyncHttpWriterBuilder builder = new MockAsyncHttpWriterBuilder(client,requestBuilder,responseHandler)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertTrue(responseHandler.recordsInLastRequest.size() == 1)@@@34@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testSuccessfulWrites['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i < 50@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testSuccessfulWrites['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "asyncHttpWriter.write(new Object(),callback)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.fail(\"Flush failed\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "MockHttpClient client = new MockHttpClient()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "IOException e@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertTrue(callback.isSuccess)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "callbacks.add(callback)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "i++@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MockRequestBuilder requestBuilder = new MockRequestBuilder()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MockResponseHandler responseHandler = new MockResponseHandler()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.fail(\"Close failed\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TestAsyncHttpWriter asyncHttpWriter = new TestAsyncHttpWriter(builder)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "MockThrottledHttpClient client = new MockThrottledHttpClient(createMockBroker())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "MockWriteCallback callback = new MockWriteCallback()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "asyncHttpWriter.close()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertTrue(client.isCloseCalled)@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "asyncHttpWriter.write(new Object(),callbacks.get(0))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int i = 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertTrue(client.getSendTimer().getCount() == 50)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "asyncHttpWriter.write(new Object(),callbacks.get(3))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(callback.isSuccess)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testSuccessfulWritesWithLimiter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8->16 [style = bold, label=""];
14->5 [style = bold, label=""];
33->16 [style = solid, label="client"];
12->7 [style = bold, label=""];
22->19 [style = bold, label=""];
0->14 [style = dotted, label="true"];
29->27 [style = bold, label=""];
26->21 [style = bold, label=""];
7->8 [style = bold, label=""];
12->33 [style = dashed, label="0"];
9->11 [style = bold, label=""];
11->21 [style = bold, label=""];
16->4 [style = bold, label=""];
21->28 [style = bold, label=""];
12->16 [style = solid, label="client"];
6->11 [style = bold, label=""];
22->27 [style = dashed, label="0"];
33->7 [style = bold, label=""];
5->9 [style = bold, label=""];
31->26 [style = bold, label=""];
8->16 [style = solid, label="responseHandler"];
4->1 [style = bold, label=""];
27->34 [style = solid, label="callback"];
2->3 [style = bold, label=""];
10->12 [style = bold, label=""];
19->2 [style = solid, label="i"];
18->6 [style = dotted, label="true"];
29->34 [style = dotted, label="true"];
20->13 [style = bold, label=""];
19->29 [style = bold, label=""];
19->29 [style = solid, label="i"];
29->27 [style = dotted, label="true"];
29->30 [style = dotted, label="true"];
2->22 [style = bold, label=""];
31->26 [style = dotted, label="true"];
1->17 [style = bold, label=""];
17->2 [style = solid, label="i"];
2->22 [style = dotted, label="true"];
29->19 [style = dotted, label="true"];
17->19 [style = solid, label="i"];
3->15 [style = bold, label=""];
27->30 [style = solid, label="callback"];
15->20 [style = bold, label=""];
18->21 [style = bold, label=""];
2->29 [style = dashed, label="0"];
24->12 [style = bold, label=""];
7->16 [style = solid, label="requestBuilder"];
19->2 [style = bold, label=""];
16->4 [style = solid, label="builder"];
27->34 [style = bold, label=""];
32->33 [style = bold, label=""];
0->14 [style = bold, label=""];
21->23 [style = bold, label=""];
29->18 [style = bold, label=""];
34->30 [style = bold, label=""];
2->19 [style = dotted, label="true"];
30->19 [style = bold, label=""];
17->29 [style = solid, label="i"];
17->29 [style = bold, label=""];
13->5 [style = bold, label=""];
18->6 [style = bold, label=""];
28->25 [style = bold, label=""];
17->2 [style = bold, label=""];
}
