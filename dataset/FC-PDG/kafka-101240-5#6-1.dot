digraph {
16 [style = filled, label = "shouldGetSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "expect(streamsMetrics.storeLevelSensor(TASK_ID,STORE_NAME,metricName,RecordingLevel.DEBUG)).andReturn(expectedSensor)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "verify(,streamsMetrics)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "final String descriptionOfRate@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "StreamsMetricsImpl.addAvgAndMaxToSensor(expectedSensor,STORE_LEVEL_GROUP,storeTagMap,latencyMetricName(metricName),descriptionOfAvg,descriptionOfMax)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final String metricName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final Sensor sensor = sensorSupplier.get()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final String metricName = \"prefix-scan\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final String descriptionOfMax@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "when(streamsMetrics.storeLevelTagMap(TASK_ID,STORE_TYPE,STORE_NAME)).thenReturn(storeTagMap)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final Sensor sensor = StateStoreMetrics.prefixScanSensor(TASK_ID,STORE_TYPE,STORE_NAME,streamsMetrics)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "StreamsMetricsImpl.addInvocationRateToSensor(expectedSensor,STORE_LEVEL_GROUP,storeTagMap,metricName,descriptionOfRate)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "expect(streamsMetrics.storeLevelSensor(TASK_ID,STORE_NAME,metricName,RecordingLevel.DEBUG)).andReturn(expectedSensor)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "final String descriptionOfAvg = \"The average latency of calls to prefix-scan\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "StreamsMetricsImpl.addAvgAndMaxToSensor(expectedSensor,STORE_LEVEL_GROUP,storeTagMap,latencyMetricName(metricName),descriptionOfAvg,descriptionOfMax)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final String descriptionOfRate = \"The average number of calls to prefix-scan per second\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expect(streamsMetrics.storeLevelTagMap(TASK_ID,STORE_TYPE,STORE_NAME)).andReturn(storeTagMap)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String descriptionOfMax = \"The maximum latency of calls to prefix-scan\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final Supplier<Sensor> sensorSupplier@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "replay(,streamsMetrics)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final String descriptionOfAvg@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "shouldGetPrefixScanSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "verify(,streamsMetrics)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "replay(,streamsMetrics)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "shouldGetPrefixScanSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(streamsMetrics.storeLevelSensor(TASK_ID,STORE_NAME,metricName,RecordingLevel.DEBUG)).thenReturn(expectedSensor)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "expect(streamsMetrics.storeLevelTagMap(TASK_ID,STORE_TYPE,STORE_NAME)).andReturn(storeTagMap)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
0->5 [style = solid, label="descriptionOfRate"];
7->1 [style = bold, label=""];
6->2 [style = solid, label="descriptionOfMax"];
15->14 [style = bold, label=""];
26->24 [style = solid, label="descriptionOfRate"];
16->17 [style = dotted, label="true"];
1->19 [style = dashed, label="0"];
12->11 [style = bold, label=""];
3->6 [style = bold, label=""];
1->2 [style = solid, label="metricName"];
1->0 [style = bold, label=""];
5->28 [style = bold, label=""];
16->19 [style = bold, label=""];
24->22 [style = bold, label=""];
16->23 [style = dotted, label="true"];
13->1 [style = bold, label=""];
6->15 [style = bold, label=""];
2->12 [style = bold, label=""];
19->24 [style = bold, label=""];
16->26 [style = dotted, label="true"];
20->21 [style = bold, label=""];
21->5 [style = bold, label=""];
6->4 [style = bold, label=""];
18->20 [style = bold, label=""];
5->2 [style = bold, label=""];
22->18 [style = bold, label=""];
9->14 [style = dashed, label="0"];
21->28 [style = solid, label="sensor"];
10->8 [style = bold, label=""];
11->10 [style = bold, label=""];
1->5 [style = solid, label="metricName"];
4->15 [style = dashed, label="0"];
17->18 [style = solid, label="descriptionOfAvg"];
25->18 [style = solid, label="descriptionOfMax"];
9->5 [style = bold, label=""];
11->8 [style = bold, label=""];
16->27 [style = dotted, label="true"];
11->8 [style = solid, label="sensor"];
3->2 [style = solid, label="descriptionOfAvg"];
16->25 [style = dotted, label="true"];
23->18 [style = solid, label="metricName"];
23->24 [style = solid, label="metricName"];
2->11 [style = bold, label=""];
14->5 [style = bold, label=""];
11->21 [style = dashed, label="0"];
}
