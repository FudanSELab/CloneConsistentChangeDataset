digraph {
8 [style = filled, label = "assertEquals(OptionalLong.of(9L),context.client.highWatermark())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "context.client.poll()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "context.deliverRequest(context.fetchRequest(epoch,otherNodeId,9L,epoch,500))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "context.pollUntilResponse()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "context.pollUntilResponse()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "RaftClientTestContext.MockListener secondListener = new RaftClientTestContext.MockListener()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,otherNodeId)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int epoch = 7@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).appendToLog(0L,2,Arrays.asList(\"a\",\"b\",\"c\")).appendToLog(3L,4,Arrays.asList(\"d\",\"e\",\"f\")).appendToLog(6L,4,Arrays.asList(\"g\",\"h\",\"i\")).withUnknownLeader(epoch - 1).build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "context.becomeLeader()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "context.client.poll()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "int otherNodeId = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testHandleCommitCallbackFiresInVotedState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,localId)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "context.client.poll()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "context.client.register(secondListener)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "context.assertSentFetchResponse(Errors.NONE,epoch,OptionalInt.of(context.localId))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "testHandleCommitCallbackFiresInCandidateState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,localId)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "context.deliverRequest(context.voteRequest(candidateEpoch,otherNodeId,epoch,10L))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testHandleCommitCallbackFiresInCandidateState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "context.client.poll()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "RaftClientTestContext.MockListener secondListener = new RaftClientTestContext.MockListener()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(OptionalInt.empty(),secondListener.currentClaimedEpoch())@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(OptionalInt.empty(),secondListener.currentClaimedEpoch())@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int localId = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(OptionalLong.of(9L),context.client.highWatermark())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "context.client.poll()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(OptionalLong.of(8L),secondListener.lastCommitOffset())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(OptionalLong.of(8L),secondListener.lastCommitOffset())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "context.time.sleep(context.electionTimeoutMs * 2)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,otherNodeId)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "context.deliverRequest(context.fetchRequest(epoch,otherNodeId,10L,epoch,500))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int candidateEpoch = epoch + 2@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int candidateEpoch = epoch + 1@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "context.deliverRequest(context.voteRequest(epoch + 1,otherNodeId,epoch,9L))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
13->10 [style = bold, label=""];
35->31 [style = bold, label=""];
14->24 [style = dashed, label="0"];
22->36 [style = dashed, label="0"];
0->9 [style = bold, label=""];
10->28 [style = bold, label=""];
17->1 [style = bold, label=""];
7->31 [style = solid, label="epoch"];
27->0 [style = bold, label=""];
14->35 [style = bold, label=""];
7->12 [style = solid, label="epoch"];
30->20 [style = bold, label=""];
32->34 [style = solid, label="secondListener"];
21->15 [style = bold, label=""];
10->19 [style = bold, label=""];
7->20 [style = solid, label="epoch"];
9->38 [style = solid, label="otherNodeId"];
34->33 [style = bold, label=""];
7->30 [style = solid, label="epoch"];
29->0 [style = bold, label=""];
1->3 [style = bold, label=""];
8->35 [style = dashed, label="0"];
26->20 [style = bold, label=""];
38->36 [style = bold, label=""];
36->32 [style = bold, label=""];
32->34 [style = bold, label=""];
16->23 [style = bold, label=""];
20->38 [style = bold, label=""];
9->7 [style = bold, label=""];
12->6 [style = bold, label=""];
3->4 [style = bold, label=""];
9->21 [style = solid, label="otherNodeId"];
11->2 [style = bold, label=""];
37->4 [style = bold, label=""];
28->14 [style = bold, label=""];
7->21 [style = solid, label="epoch"];
7->28 [style = solid, label="epoch"];
20->22 [style = bold, label=""];
19->24 [style = bold, label=""];
0->5 [style = solid, label="localId"];
7->25 [style = solid, label="epoch"];
23->37 [style = dashed, label="0"];
21->26 [style = bold, label=""];
7->5 [style = bold, label=""];
31->30 [style = solid, label="candidateEpoch"];
19->14 [style = bold, label=""];
20->38 [style = dashed, label="0"];
9->30 [style = solid, label="otherNodeId"];
15->20 [style = bold, label=""];
22->12 [style = bold, label=""];
5->13 [style = bold, label=""];
0->1 [style = solid, label="localId"];
0->23 [style = solid, label="localId"];
31->30 [style = bold, label=""];
9->5 [style = solid, label="otherNodeId"];
0->25 [style = solid, label="localId"];
15->26 [style = dashed, label="0"];
8->21 [style = bold, label=""];
12->23 [style = solid, label="candidateEpoch"];
9->37 [style = solid, label="otherNodeId"];
14->8 [style = bold, label=""];
9->19 [style = solid, label="otherNodeId"];
7->19 [style = solid, label="epoch"];
24->8 [style = bold, label=""];
23->11 [style = bold, label=""];
31->38 [style = solid, label="candidateEpoch"];
33->37 [style = bold, label=""];
9->28 [style = solid, label="otherNodeId"];
12->1 [style = solid, label="candidateEpoch"];
31->37 [style = solid, label="candidateEpoch"];
8->25 [style = bold, label=""];
18->0 [style = bold, label=""];
19->28 [style = dashed, label="0"];
4->16 [style = bold, label=""];
25->21 [style = bold, label=""];
3->4 [style = solid, label="secondListener"];
}
