digraph {
4 [style = filled, label = "testExecuteVerboseItemExceptionWithIgnoreFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testExecuteVerboseItemExceptionWithIgnoreFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "testExecuteVerboseItemWithoutExceptionAndWithIgnoreFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertIngestDocument(simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument(),ingestDocument)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "CompoundProcessor processor = new CompoundProcessor(true,Collections.singletonList(testProcessor),Collections.emptyList())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "SimulateDocumentVerboseResult simulateDocumentVerboseResult = (SimulateDocumentVerboseResult)actualItemResponse@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getProcessorTag(),equalTo(\"processor_0\"))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TestProcessor testProcessor = new TestProcessor(\"processor_0\",\"mock\",exception)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument().getSourceAndMetadata(),not(sameInstance(ingestDocument.getSourceAndMetadata())))@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument().getSourceAndMetadata(),not(sameInstance(ingestDocument.getSourceAndMetadata())))@@@17@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().size(),equalTo(1))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(testProcessor.getInvokedCounter(),equalTo(1))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SimulateDocumentResult actualItemResponse = executionService.executeDocument(pipeline,ingestDocument,true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getFailure(),nullValue())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TestProcessor testProcessor = new TestProcessor(\"processor_0\",\"mock\",null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Pipeline pipeline = new Pipeline(\"_id\",\"_description\",version,new CompoundProcessor(processor))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Pipeline pipeline = new Pipeline(\"_id\",\"_description\",version,new CompoundProcessor(processor))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestProcessor testProcessor = new TestProcessor(\"processor_0\",\"mock\",null)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "CompoundProcessor processor = new CompoundProcessor(true,Collections.singletonList(testProcessor),Collections.emptyList())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument().getSourceAndMetadata(),not(sameInstance(ingestDocument.getSourceAndMetadata())))@@@19@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument(),not(sameInstance(ingestDocument)))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "SimulateDocumentResult actualItemResponse = executionService.executeDocument(pipeline,ingestDocument,true)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "RuntimeException exception = new RuntimeException(\"processor failed\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(actualItemResponse,instanceOf())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->15 [style = solid, label="exception"];
4->3 [style = bold, label=""];
15->16 [style = solid, label="testProcessor"];
16->18 [style = bold, label=""];
21->7 [style = solid, label="processor"];
5->9 [style = bold, label=""];
2->1 [style = bold, label=""];
3->1 [style = solid, label="exception"];
18->17 [style = bold, label=""];
0->15 [style = dashed, label="0"];
7->5 [style = solid, label="processor"];
3->15 [style = bold, label=""];
18->17 [style = solid, label="pipeline"];
17->9 [style = solid, label="actualItemResponse"];
15->16 [style = bold, label=""];
17->5 [style = solid, label="actualItemResponse"];
3->0 [style = bold, label=""];
0->7 [style = bold, label=""];
0->7 [style = solid, label="testProcessor"];
17->7 [style = bold, label=""];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
20->23 [style = bold, label=""];
8->2 [style = bold, label=""];
23->21 [style = bold, label=""];
5->14 [style = solid, label="actualItemResponse"];
9->13 [style = solid, label="actualItemResponse"];
6->10 [style = bold, label=""];
16->18 [style = solid, label="processor"];
7->5 [style = solid, label="pipeline"];
12->14 [style = bold, label=""];
21->7 [style = bold, label=""];
3->13 [style = solid, label="exception"];
9->12 [style = bold, label=""];
9->14 [style = solid, label="actualItemResponse"];
14->13 [style = bold, label=""];
1->2 [style = dashed, label="0"];
13->8 [style = bold, label=""];
2->22 [style = bold, label=""];
23->21 [style = solid, label="testProcessor"];
19->3 [style = bold, label=""];
5->12 [style = solid, label="actualItemResponse"];
5->9 [style = solid, label="pipeline"];
22->6 [style = bold, label=""];
10->11 [style = bold, label=""];
}
