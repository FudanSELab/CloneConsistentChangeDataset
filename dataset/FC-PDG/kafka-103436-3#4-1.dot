digraph {
7 [style = filled, label = "testIntersectionOfMany['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertEquals(,intersection.getClass())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final Set<String> union = intersection(null,oneSet,twoSet,threeSet,fourSet)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final Set<String> intersection = intersection(null,oneSet,twoSet,threeSet)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "testDisjointIntersectionOfMany['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(union.getClass(),equalTo())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(union.getClass(),equalTo())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final Set<String> oneSet = mkSet(\"a\",\"b\",\"c\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Set<String> union = intersection(null,oneSet,twoSet,threeSet)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "final Set<String> threeSet = mkSet(\"b\",\"c\",\"d\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final Set<String> fourSet = mkSet(\"x\",\"y\",\"z\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Set<String> twoSet = mkSet(\"c\",\"d\",\"e\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(union,is(emptySet()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(union,is(mkSet(\"c\")))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertEquals(mkSet(\"c\"),intersection)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testIntersectionOfMany['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
8->10 [style = bold, label=""];
5->9 [style = bold, label=""];
0->6 [style = bold, label=""];
2->0 [style = solid, label="union"];
13->14 [style = solid, label="union"];
11->4 [style = bold, label=""];
1->2 [style = solid, label="twoSet"];
5->9 [style = solid, label="threeSet"];
7->4 [style = bold, label=""];
9->8 [style = solid, label="intersection"];
9->8 [style = bold, label=""];
3->4 [style = bold, label=""];
4->2 [style = solid, label="oneSet"];
6->10 [style = dashed, label="0"];
12->13 [style = bold, label=""];
2->12 [style = dashed, label="0"];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
1->13 [style = solid, label="twoSet"];
5->12 [style = bold, label=""];
5->13 [style = solid, label="threeSet"];
2->9 [style = dashed, label="0"];
0->8 [style = dashed, label="0"];
4->9 [style = solid, label="oneSet"];
14->15 [style = bold, label=""];
4->1 [style = bold, label=""];
5->2 [style = solid, label="threeSet"];
13->14 [style = bold, label=""];
4->13 [style = solid, label="oneSet"];
1->9 [style = solid, label="twoSet"];
12->13 [style = solid, label="fourSet"];
}
