digraph {
6 [style = filled, label = "assertNotSame(rangeQuery,rewritten.getNestedSort().getFilter())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "GeoDistanceSortBuilder rewritten = (GeoDistanceSortBuilder)sortBuilder.rewrite(createMockShardContext())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testNestedRewrites['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ScriptSortBuilder sortBuilder = new ScriptSortBuilder(mockScript(\"something\"),ScriptSortType.STRING)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertNotSame(rangeQuery,rewritten.getNestedSort().getFilter())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RangeQueryBuilder rangeQuery = new RangeQueryBuilder(\"fieldName\"){@Override public QueryBuilder doRewrite(QueryRewriteContext queryShardContext){return new MatchNoneQueryBuilder()}}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sortBuilder.setNestedSort(new NestedSortBuilder(\"path\").setFilter(rangeQuery))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "GeoDistanceSortBuilder sortBuilder = new GeoDistanceSortBuilder(\"fieldName\",0.0,0.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "sortBuilder.setNestedSort(new NestedSortBuilder(\"path\").setFilter(rangeQuery))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testNestedRewrites['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "ScriptSortBuilder rewritten = sortBuilder.rewrite(createMockShardContext())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testNestedSortRewrites['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertNotSame(rangeQuery,rewritten.getNestedFilter())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "sortBuilder.setNestedPath(\"path\").setNestedFilter(rangeQuery)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->3 [style = bold, label=""];
5->12 [style = dashed, label="0"];
7->1 [style = bold, label=""];
2->9 [style = solid, label="rangeQuery"];
2->8 [style = solid, label="rangeQuery"];
8->3 [style = bold, label=""];
3->6 [style = bold, label=""];
2->9 [style = bold, label=""];
9->10 [style = bold, label=""];
2->5 [style = solid, label="rangeQuery"];
2->6 [style = solid, label="rangeQuery"];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
11->2 [style = bold, label=""];
4->9 [style = dashed, label="0"];
3->5 [style = bold, label=""];
5->6 [style = dashed, label="0"];
2->12 [style = solid, label="rangeQuery"];
10->12 [style = bold, label=""];
1->11 [style = dashed, label="0"];
0->1 [style = bold, label=""];
4->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
3->10 [style = dashed, label="0"];
2->4 [style = solid, label="rangeQuery"];
2->8 [style = bold, label=""];
}
