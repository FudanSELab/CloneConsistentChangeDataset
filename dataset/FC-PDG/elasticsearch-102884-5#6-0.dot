digraph {
12 [style = filled, label = "assertEquals(Set.of(\"other_field\",\"field\"),lookup.sourcePaths(\"field\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "FieldTypeLookup lookup = new FieldTypeLookup(singletonList(field),emptyList())@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertEquals(Set.of(\"field\"),lookup.sourcePaths(\"field\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testSourcePathWithMultiFields['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(Set.of(\"field\"),lookup.sourcePaths(\"field.subfield2\"))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Mapper.BuilderContext context = new Mapper.BuilderContext(MockFieldMapper.DEFAULT_SETTINGS,new ContentPath())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Set.of(\"field\"),lookup.sourcePaths(\"field.subfield2\"))@@@8@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Set.of(\"field\"),lookup.sourcePaths(\"field.subfield1\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MockFieldMapper field = new MockFieldMapper.Builder(\"field\").addMultiField(new MockFieldMapper.Builder(\"field.subfield1\")).build(context)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(Set.of(\"other_field\",\"field\"),lookup.sourcePaths(\"field.subfield1\"))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testSourcePathWithMultiFields['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\").copyTo(\"field\").build(context)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testSourcePathsWithCopyTo['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "MockFieldMapper field = new MockFieldMapper.Builder(\"field\").addMultiField(new MockFieldMapper.Builder(\"field.subfield1\")).addMultiField(new MockFieldMapper.Builder(\"field.subfield2\")).build(new ContentPath())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "MockFieldMapper field = new MockFieldMapper.Builder(\"field\").addMultiField(new MockFieldMapper.Builder(\"field.subfield1\")).addMultiField(new MockFieldMapper.Builder(\"field.subfield2\")).build(context)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "FieldTypeLookup lookup = new FieldTypeLookup(Arrays.asList(field,otherField),emptyList())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
1->4 [style = bold, label=""];
10->13 [style = solid, label="otherField"];
7->1 [style = bold, label=""];
5->1 [style = solid, label="field"];
3->11 [style = solid, label="context"];
2->6 [style = bold, label=""];
3->10 [style = solid, label="context"];
3->11 [style = bold, label=""];
4->2 [style = bold, label=""];
6->14 [style = dashed, label="0"];
11->13 [style = solid, label="field"];
9->8 [style = bold, label=""];
15->3 [style = bold, label=""];
8->7 [style = bold, label=""];
5->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
3->5 [style = bold, label=""];
13->12 [style = bold, label=""];
10->13 [style = bold, label=""];
5->11 [style = dashed, label="0"];
11->10 [style = bold, label=""];
12->14 [style = bold, label=""];
8->7 [style = solid, label="field"];
3->5 [style = solid, label="context"];
}
