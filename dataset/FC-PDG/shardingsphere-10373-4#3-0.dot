digraph {
21 [style = filled, label = "InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0,0,Arrays.asList(new ColumnSegment(0,0,new IdentifierValue(\"id\")),new ColumnSegment(0,0,new IdentifierValue(\"name\")),new ColumnSegment(0,0,new IdentifierValue(\"shadow\"))))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final InsertStatement insertStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFalse(\"should not be shadow\",simpleShadowDataSourceRouter.isShadow())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0,0,Arrays.asList(new ColumnSegment(0,0,new IdentifierValue(\"id\")),new ColumnSegment(0,0,new IdentifierValue(\"name\")),new ColumnSegment(0,0,new IdentifierValue(\"status\"))))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "insertStatement.getValues().clear()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "setUpInsertValues(insertStatement)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertInsertStatementContext(actual)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertInsertStatementContextWithColumnNames['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "judgeForInsert['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SimpleShadowDataSourceJudgeEngine simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule,insertStatementContext)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "InsertStatementContext actual = new InsertStatementContext(mock(),Arrays.asList(1,\"Tom\",2,\"Jerry\"),insertStatement)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "insertStatement.getValues().addAll(Collections.singletonList(new InsertValuesSegment(0,0,Arrays.asList(new LiteralExpressionSegment(0,0,1),new LiteralExpressionSegment(0,0,\"name\"),new LiteralExpressionSegment(0,0,false)))))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "insertStatement.setTable(new SimpleTableSegment(0,0,new IdentifierValue(\"tbl\")))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertInsertStatementContextWithColumnNames['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "InsertStatementContext insertStatementContext = new InsertStatementContext(schema,Collections.emptyList(),insertStatement)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "insertStatementContext = new InsertStatementContext(schema,Collections.emptyList(),insertStatement)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "InsertStatementContext actual = createInsertStatementContext(Arrays.asList(1,\"Tom\",2,\"Jerry\"),insertStatement)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertTrue(\"should be shadow\",simpleShadowDataSourceRouter.isShadow())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "insertStatement.getValues().addAll(Collections.singletonList(new InsertValuesSegment(0,0,Arrays.asList(new LiteralExpressionSegment(0,0,1),new LiteralExpressionSegment(0,0,\"name\"),new LiteralExpressionSegment(0,0,true)))))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "insertStatement.setInsertColumns(insertColumnsSegment)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final InsertStatement insertStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "simpleShadowDataSourceRouter = new SimpleShadowDataSourceJudgeEngine(shadowRule,insertStatementContext)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
15->10 [style = bold, label=""];
21->2 [style = solid, label="insertColumnsSegment"];
2->6 [style = bold, label=""];
18->11 [style = bold, label=""];
8->3 [style = bold, label=""];
0->16 [style = dashed, label="0"];
1->9 [style = dashed, label="0"];
19->15 [style = solid, label="insertStatementContext"];
1->18 [style = dashed, label="0"];
20->3 [style = bold, label=""];
4->2 [style = bold, label=""];
6->14 [style = dashed, label="0"];
7->0 [style = dotted, label="true"];
4->21 [style = dashed, label="0"];
3->4 [style = bold, label=""];
7->3 [style = bold, label=""];
18->11 [style = solid, label="insertStatementContext"];
16->19 [style = solid, label="insertStatement"];
9->5 [style = solid, label="actual"];
21->2 [style = bold, label=""];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
13->19 [style = bold, label=""];
0->9 [style = solid, label="insertStatement"];
17->12 [style = bold, label=""];
5->11 [style = dashed, label="0"];
2->14 [style = bold, label=""];
1->5 [style = solid, label="actual"];
4->2 [style = solid, label="insertColumnsSegment"];
9->5 [style = bold, label=""];
11->17 [style = bold, label=""];
3->21 [style = bold, label=""];
14->18 [style = bold, label=""];
8->0 [style = dotted, label="true"];
0->1 [style = solid, label="insertStatement"];
6->9 [style = bold, label=""];
19->15 [style = bold, label=""];
0->6 [style = solid, label="insertStatement"];
16->18 [style = solid, label="insertStatement"];
20->16 [style = dotted, label="true"];
}
