digraph {
20 [style = filled, label = "assertEquals(2,metaClient.getActiveTimeline().getCommitsAndCompactionTimeline().countInstants())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "HoodieWriteConfig cfg = getConfigForInlineCompaction(3,60,CompactionTriggerStrategy.NUM_COMMITS)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testSuccessfulCompactionBasedOnNumAndTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "List<HoodieRecord> records = dataGen.generateInserts(HoodieActiveTimeline.createNewInstantTime(),10)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(5,metaClient.getActiveTimeline().getWriteTimeline().countInstants())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "List<String> instants = IntStream.range(0,2).mapToObj(null).collect(Collectors.toList())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<HoodieRecord> records = dataGen.generateInserts(HoodieActiveTimeline.createNewInstantTime(),100)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "HoodieTableMetaClient metaClient = HoodieTableMetaClient.builder().setConf(hadoopConf).setBasePath(cfg.getBasePath()).build()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "metaClient = HoodieTableMetaClient.builder().setConf(hadoopConf).setBasePath(cfg.getBasePath()).build()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "runNextDeltaCommits(writeClient,readClient,instants,records,cfg,true,new ArrayList<>())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testSuccessfulCompactionBasedOnNumAndTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "createNextDeltaCommit(finalInstant,dataGen.generateUpdates(finalInstant,10),writeClient,metaClient,cfg,false)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<String> instants = IntStream.range(0,3).mapToObj(null).collect(Collectors.toList())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "HoodieReadClient readClient = getHoodieReadClient(cfg.getBasePath())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "HoodieWriteConfig cfg = getConfigForInlineCompaction(3,20,CompactionTriggerStrategy.NUM_AND_TIME)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String finalInstant = HoodieActiveTimeline.createNewInstantTime(20000)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(3,metaClient.getActiveTimeline().getCommitsAndCompactionTimeline().countInstants())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(3,metaClient.getActiveTimeline().getWriteTimeline().countInstants())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "metaClient = HoodieTableMetaClient.builder().setConf(hadoopConf).setBasePath(cfg.getBasePath()).build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(5,metaClient.getActiveTimeline().getCommitsAndCompactionTimeline().countInstants())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "testCompactionIsNotScheduledEarly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
11->16 [style = bold, label=""];
8->10 [style = bold, label=""];
8->16 [style = dashed, label="0"];
2->20 [style = bold, label=""];
9->0 [style = bold, label=""];
18->10 [style = solid, label="records"];
0->6 [style = bold, label=""];
16->10 [style = bold, label=""];
11->10 [style = solid, label="readClient"];
18->11 [style = bold, label=""];
6->10 [style = solid, label="records"];
5->15 [style = bold, label=""];
12->7 [style = solid, label="finalInstant"];
0->10 [style = solid, label="cfg"];
19->17 [style = bold, label=""];
16->10 [style = solid, label="instants"];
2->4 [style = bold, label=""];
0->17 [style = dashed, label="0"];
12->7 [style = bold, label=""];
13->1 [style = bold, label=""];
17->10 [style = solid, label="cfg"];
2->13 [style = bold, label=""];
6->18 [style = dashed, label="0"];
7->5 [style = bold, label=""];
14->0 [style = bold, label=""];
4->20 [style = dashed, label="0"];
0->7 [style = solid, label="cfg"];
6->11 [style = bold, label=""];
1->12 [style = bold, label=""];
3->15 [style = dashed, label="0"];
11->8 [style = bold, label=""];
8->10 [style = solid, label="instants"];
10->2 [style = bold, label=""];
4->1 [style = bold, label=""];
4->13 [style = dashed, label="0"];
17->18 [style = bold, label=""];
1->7 [style = solid, label="metaClient"];
}
