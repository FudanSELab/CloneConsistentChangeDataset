digraph {
13 [style = filled, label = "StringValue casted = (StringValue)val@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "val.setValue(1234).setExists(true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(val instanceof StringValue)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(new Integer(20),casted.getObject())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertTrue(casted.exists())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(new Integer(1234),casted.getObject())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "TestIntValue val = new TestIntValue()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "val.setValue(20).setExists(true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1234,casted.getObject())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "stringCastingTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(\"20\",casted.getString())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "objectCastingTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertEquals(\"1234\",casted.getString())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "AnalyticsValue casted = (AnalyticsValue)val@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(20,casted.getObject())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "objectCastingTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(casted.exists())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(val instanceof AnalyticsValue)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
17->8 [style = bold, label=""];
16->3 [style = bold, label=""];
4->17 [style = dashed, label="0"];
0->17 [style = bold, label=""];
7->14 [style = dashed, label="0"];
8->6 [style = bold, label=""];
12->1 [style = bold, label=""];
1->7 [style = bold, label=""];
1->2 [style = solid, label="val"];
5->16 [style = dashed, label="0"];
6->5 [style = bold, label=""];
0->10 [style = bold, label=""];
2->0 [style = bold, label=""];
10->8 [style = bold, label=""];
5->11 [style = dashed, label="0"];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
6->16 [style = bold, label=""];
7->2 [style = bold, label=""];
2->13 [style = dashed, label="0"];
6->11 [style = bold, label=""];
4->8 [style = bold, label=""];
1->14 [style = bold, label=""];
1->14 [style = solid, label="val"];
14->13 [style = bold, label=""];
9->1 [style = bold, label=""];
1->13 [style = solid, label="val"];
1->7 [style = solid, label="val"];
4->10 [style = dashed, label="0"];
13->0 [style = bold, label=""];
15->1 [style = bold, label=""];
}
