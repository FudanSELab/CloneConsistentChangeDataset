digraph {
21 [style = filled, label = "!flush(netOutBuffer)@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "handshake['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "boolean async@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "{try {handshake = handshakeWrap(write)}catch (SSLException e) if (handshake.getStatus() == Status.OK) {if (handshakeStatus == HandshakeStatus.NEED_TASK) handshakeStatus = tasks()}if (handshake.getStatus() == Status.CLOSED) {flush(netOutBuffer)return -1}{throw new IOException(sm.getString(\"channel.nio.ssl.unexpectedStatusDuringWrap\",handshake.getStatus()))}if (handshakeStatus != HandshakeStatus.NEED_UNWRAP || (!flush(netOutBuffer))) {return SelectionKey.OP_WRITE}}@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "handshakeStatus != HandshakeStatus.NEED_UNWRAP || netOutBuffer.remaining() > 0@@@63@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "handshakeComplete@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return SelectionKey.OP_WRITE@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "handshakeStatus@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "throw new IllegalStateException(sm.getString(\"channel.nio.ssl.invalidStatus\",handshakeStatus))@@@106@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "boolean read@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sniResult == 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "SSLEngineResult handshake = null@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return sniResult@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "{if (endpoint.hasNegotiableProtocols() && sslEngine instanceof SSLUtil.ProtocolInfo) {socket.setNegotiatedProtocol(((SSLUtil.ProtocolInfo)sslEngine).getNegotiatedProtocol())}handshakeComplete = !netOutBuffer.hasRemaining()if (handshakeComplete) {return 0}{if (async) {sc.write(netOutBuffer,socket,handshakeWriteCompletionHandler)}{try {sc.write(netOutBuffer).get(endpoint.getSoTimeout(),TimeUnit.MILLISECONDS)}catch (InterruptedException|ExecutionException|TimeoutException e) }return 1}}@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int sniResult = processSNI()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "handshake['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "{handshakeStatus = tasks()break}@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "handshakeStatus != HandshakeStatus.NEED_UNWRAP || (!flush(netOutBuffer))@@@49@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "handshakeComplete@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "{try {handshake = handshakeWrap()}catch (SSLException e) if (handshake.getStatus() == Status.OK) {if (handshakeStatus == HandshakeStatus.NEED_TASK) handshakeStatus = tasks()}if (handshake.getStatus() == Status.CLOSED) {return -1}{throw new IOException(sm.getString(\"channel.nio.ssl.unexpectedStatusDuringWrap\",handshake.getStatus()))}if (handshakeStatus != HandshakeStatus.NEED_UNWRAP || netOutBuffer.remaining() > 0) {if (async) {sc.write(netOutBuffer,socket,handshakeWriteCompletionHandler)}{try {sc.write(netOutBuffer).get(endpoint.getSoTimeout(),TimeUnit.MILLISECONDS)}catch (InterruptedException|ExecutionException|TimeoutException e) }return 1}}@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "{handshake = handshakeUnwrap(read)if (handshake.getStatus() == Status.OK) {if (handshakeStatus == HandshakeStatus.NEED_TASK) handshakeStatus = tasks()}if (handshake.getStatus() == Status.BUFFER_UNDERFLOW) {return SelectionKey.OP_READ}if (handshake.getStatus() == Status.BUFFER_OVERFLOW) {bufHandler.configureReadBufferForWrite()}{throw new IOException(sm.getString(\"channel.nio.ssl.unexpectedStatusDuringWrap\",handshakeStatus))}break}@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "{throw new IOException(sm.getString(\"channel.nio.ssl.notHandshaking\"))}@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "handshake.getStatus() == Status.OK@@@54@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return 0@@@76@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "boolean read@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "handshakeStatus@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "handshake.getStatus() == Status.OK@@@80@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "handshake.getStatus() == Status.OK@@@39@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "handshakeInternal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "{handshakeStatus = tasks()break}@@@102@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "!handshakeComplete@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sniComplete = true@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return SelectionKey.OP_WRITE@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "!sniComplete@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "return handshakeComplete? 0: handshakeInternal(async)@@@109@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "boolean write@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "endpoint.hasNegotiableProtocols() && sslEngine instanceof SSLUtil.ProtocolInfo@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "{handshake = handshakeUnwrap()if (handshake.getStatus() == Status.OK) {if (handshakeStatus == HandshakeStatus.NEED_TASK) handshakeStatus = tasks()}if (handshake.getStatus() == Status.BUFFER_UNDERFLOW) {if (async) {sc.read(netInBuffer,socket,handshakeReadCompletionHandler)}{try {sc.read(netInBuffer).get(endpoint.getSoTimeout(),TimeUnit.MILLISECONDS)}catch (InterruptedException|ExecutionException|TimeoutException e) }return 1}{throw new IOException(sm.getString(\"channel.nio.ssl.unexpectedStatusDuringUnwrap\",handshakeStatus))}break}@@@78@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20->23 [style = bold, label=""];
11->22 [style = bold, label=""];
25->3 [style = bold, label=""];
37->10 [style = bold, label=""];
25->9 [style = solid, label="handshakeStatus"];
16->2 [style = dotted, label="true"];
17->21 [style = bold, label=""];
25->3 [style = solid, label="handshakeStatus"];
37->35 [style = bold, label=""];
30->36 [style = solid, label="async"];
30->29 [style = solid, label="async"];
16->0 [style = bold, label=""];
3->4 [style = solid, label="handshakeStatus"];
17->14 [style = bold, label=""];
10->11 [style = bold, label=""];
27->12 [style = dotted, label="true"];
0->24 [style = dotted, label="true"];
14->1 [style = solid, label="sniResult"];
3->37 [style = solid, label="handshakeStatus"];
3->36 [style = solid, label="handshakeStatus"];
3->35 [style = bold, label=""];
37->32 [style = dotted, label="true"];
21->26 [style = bold, label=""];
37->4 [style = bold, label=""];
17->23 [style = bold, label=""];
5->29 [style = bold, label=""];
26->23 [style = bold, label=""];
28->22 [style = solid, label="read"];
10->29 [style = solid, label="handshakeComplete"];
9->25 [style = bold, label=""];
27->28 [style = dotted, label="true"];
4->3 [style = bold, label=""];
5->6 [style = bold, label=""];
12->30 [style = dashed, label="0"];
30->10 [style = solid, label="async"];
4->31 [style = dashed, label="0"];
25->22 [style = solid, label="handshakeStatus"];
36->4 [style = solid, label="handshakeStatus"];
36->4 [style = bold, label=""];
17->1 [style = dotted, label="true"];
1->15 [style = dotted, label="true"];
5->9 [style = dotted, label="true"];
15->23 [style = bold, label=""];
37->19 [style = dotted, label="true"];
7->32 [style = dashed, label="0"];
15->21 [style = bold, label=""];
9->18 [style = dotted, label="true"];
5->37 [style = bold, label=""];
35->5 [style = bold, label=""];
22->25 [style = bold, label=""];
23->5 [style = bold, label=""];
0->17 [style = bold, label=""];
1->15 [style = bold, label=""];
30->4 [style = solid, label="async"];
37->3 [style = bold, label=""];
38->0 [style = bold, label=""];
25->11 [style = solid, label="handshakeStatus"];
37->35 [style = dotted, label="true"];
9->19 [style = dotted, label="true"];
12->11 [style = solid, label="write"];
8->10 [style = bold, label=""];
21->13 [style = bold, label=""];
9->10 [style = bold, label=""];
37->34 [style = dotted, label="true"];
17->14 [style = dotted, label="true"];
9->37 [style = dashed, label="0"];
13->23 [style = bold, label=""];
24->17 [style = bold, label=""];
38->30 [style = dotted, label="true"];
21->13 [style = dotted, label="true"];
1->20 [style = dotted, label="false"];
0->24 [style = bold, label=""];
2->22 [style = solid, label="read"];
6->29 [style = dashed, label="0"];
9->4 [style = dotted, label="true"];
37->33 [style = dotted, label="true"];
9->22 [style = bold, label=""];
11->22 [style = solid, label="handshakeStatus"];
9->11 [style = bold, label=""];
9->7 [style = dotted, label="true"];
9->3 [style = bold, label=""];
27->0 [style = bold, label=""];
10->36 [style = bold, label=""];
5->9 [style = bold, label=""];
3->5 [style = bold, label=""];
14->1 [style = bold, label=""];
20->21 [style = bold, label=""];
16->12 [style = dotted, label="true"];
21->26 [style = dotted, label="true"];
37->36 [style = bold, label=""];
14->20 [style = solid, label="sniResult"];
3->35 [style = solid, label="handshakeStatus"];
9->3 [style = dotted, label="true"];
9->8 [style = bold, label=""];
37->31 [style = dotted, label="true"];
1->20 [style = bold, label=""];
37->8 [style = bold, label=""];
21->23 [style = bold, label=""];
5->37 [style = dotted, label="true"];
}
