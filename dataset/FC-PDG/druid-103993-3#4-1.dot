digraph {
40 [style = filled, label = "assertEquals(JAN_5,actual.getDateTime())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(expectedDay5,actual.getRows())@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(JAN_4,actual.getDateTime())@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "RowBucketIterable rbi = new RowBucketIterable(seq,intervals,ONE_DAY)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(JAN_4,actual.getDateTime())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "List<Row> expectedDay3 = Collections.emptyList()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "actual = iter.next()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testMultipleMissingDays['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "rows.add(JAN_5_M_10)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "actual = iter.next()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "intervals = new ArrayList<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(expectedDay2,actual.getRows())@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(expectedDay3,actual.getRows())@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<Row> expectedDay2 = Collections.singletonList(JAN_2_M_10)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(expectedDay4,actual.getRows())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "testMultipleMissingDaysMultipleRowAtTheEnd['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertEquals(JAN_3,actual.getDateTime())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "intervals.add(INTERVAL_JAN_1_5)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "rows.add(JAN_2_M_10)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(JAN_2,actual.getDateTime())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "actual = iter.next()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(JAN_2,actual.getDateTime())@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rows = new ArrayList<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(JAN_3,actual.getDateTime())@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Sequence<Row> seq = Sequences.simple(rows)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "List<Row> expectedDay5 = Collections.singletonList(JAN_5_M_10)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(expectedDay4,actual.getRows())@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testMultipleMissingDays['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "rows.add(JAN_4_M_10)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "actual = iter.next()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(expectedDay1,actual.getRows())@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(JAN_1,actual.getDateTime())@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RowBucket actual = iter.next()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(expectedDay2,actual.getRows())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "intervals.add(INTERVAL_JAN_1_4)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<Row> expectedDay1 = Collections.emptyList()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Iterator<RowBucket> iter = rbi.iterator()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(expectedDay1,actual.getRows())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "Assert.assertEquals(JAN_1,actual.getDateTime())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "List<Row> expectedDay4 = Collections.singletonList(JAN_4_M_10)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(expectedDay3,actual.getRows())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11->20 [style = bold, label=""];
35->37 [style = solid, label="expectedDay5"];
18->24 [style = bold, label=""];
31->25 [style = bold, label=""];
4->9 [style = solid, label="expectedDay3"];
8->31 [style = bold, label=""];
22->19 [style = bold, label=""];
21->6 [style = bold, label=""];
7->10 [style = bold, label=""];
34->5 [style = bold, label=""];
14->32 [style = solid, label="expectedDay1"];
27->28 [style = bold, label=""];
6->32 [style = dashed, label="0"];
0->24 [style = solid, label="expectedDay4"];
18->27 [style = dashed, label="0"];
4->26 [style = solid, label="expectedDay3"];
24->39 [style = bold, label=""];
1->17 [style = solid, label="intervals"];
10->3 [style = bold, label=""];
30->32 [style = bold, label=""];
17->22 [style = bold, label=""];
36->14 [style = bold, label=""];
13->11 [style = bold, label=""];
38->3 [style = bold, label=""];
15->11 [style = solid, label="expectedDay2"];
20->33 [style = bold, label=""];
4->0 [style = bold, label=""];
33->26 [style = bold, label=""];
15->25 [style = solid, label="expectedDay2"];
21->30 [style = dashed, label="0"];
23->14 [style = bold, label=""];
24->28 [style = dashed, label="0"];
25->20 [style = bold, label=""];
26->12 [style = bold, label=""];
32->8 [style = bold, label=""];
1->34 [style = bold, label=""];
20->16 [style = bold, label=""];
35->1 [style = bold, label=""];
10->38 [style = bold, label=""];
13->31 [style = dashed, label="0"];
0->28 [style = solid, label="expectedDay4"];
0->1 [style = bold, label=""];
39->40 [style = bold, label=""];
3->17 [style = solid, label="seq"];
6->8 [style = bold, label=""];
9->26 [style = dashed, label="0"];
15->4 [style = bold, label=""];
12->18 [style = bold, label=""];
29->14 [style = bold, label=""];
5->3 [style = solid, label="rows"];
0->35 [style = bold, label=""];
11->25 [style = dashed, label="0"];
2->34 [style = dashed, label="0"];
5->7 [style = bold, label=""];
3->17 [style = bold, label=""];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
9->12 [style = bold, label=""];
16->33 [style = dashed, label="0"];
12->27 [style = bold, label=""];
14->6 [style = solid, label="expectedDay1"];
16->9 [style = bold, label=""];
8->13 [style = bold, label=""];
40->37 [style = bold, label=""];
2->5 [style = bold, label=""];
19->30 [style = bold, label=""];
19->21 [style = bold, label=""];
}
