digraph {
5 [style = filled, label = "i++@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "doTestJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final KTable<Integer,String> joined@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+YY0\"),kv(1,\"XX1+YY1\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@62@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "driver.flushState()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "joined.process(supplier)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "processor.checkAndClearProcessResult()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int i = 0@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c3c0e6@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "i < 2@@@45@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final int(( expectedKeys@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final int(( expectedKeys@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final StreamsBuilder builder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "processor.checkAndClearProcessResult(\"2:XX2+YY2\",\"3:XX3+YY3\")@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "i < 2@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "i++@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i++@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+Y0\"),kv(1,\"XX1+Y1\"))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "driver.flushState()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "doTestJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "int i = 0@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "driver.process(topic1,null,\"XX\" + 1)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "int i = 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "i++@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "driver.flushState()@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "i++@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "checkJoinedValues(getter,kv(0,null),kv(1,null))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "driver.flushState()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "@SuppressWarnings(\"unchecked\") final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "driver.flushState()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "final StreamsBuilder builder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "driver.flushState()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i < 2@@@48@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "int i = 0@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "testJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "i < 2@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "driver.setUp(builder,stateDir,Serdes.Integer(),Serdes.String())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "getter.init(driver.context())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "i < 2@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "processor.checkAndClearProcessResult()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "driver.setTime(0L)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->33 [style = solid, label="i"];
1->9 [style = solid, label="expectedKeys"];
11->70 [style = dashed, label="0"];
25->22 [style = bold, label=""];
29->30 [style = bold, label=""];
71->72 [style = solid, label="supplier"];
14->35 [style = bold, label=""];
41->80 [style = dotted, label="true"];
84->82 [style = solid, label="expectedKeys"];
28->6 [style = solid, label="i"];
41->9 [style = bold, label=""];
61->36 [style = dotted, label="true"];
30->6 [style = bold, label=""];
38->15 [style = bold, label=""];
64->82 [style = solid, label="i"];
23->57 [style = bold, label=""];
6->29 [style = bold, label=""];
32->50 [style = dotted, label="true"];
7->14 [style = bold, label=""];
45->25 [style = bold, label=""];
43->52 [style = solid, label="i"];
84->33 [style = solid, label="expectedKeys"];
52->18 [style = solid, label="i"];
47->26 [style = bold, label=""];
51->17 [style = bold, label=""];
68->74 [style = bold, label=""];
56->58 [style = dotted, label="true"];
56->54 [style = dotted, label="true"];
41->45 [style = bold, label=""];
48->18 [style = bold, label=""];
72->18 [style = bold, label=""];
9->24 [style = bold, label=""];
48->18 [style = dotted, label="true"];
83->73 [style = bold, label=""];
57->13 [style = bold, label=""];
37->9 [style = solid, label="i"];
74->41 [style = bold, label=""];
64->36 [style = solid, label="i"];
80->41 [style = solid, label="i"];
54->13 [style = solid, label="builder"];
5->33 [style = bold, label=""];
51->7 [style = solid, label="getter"];
3->75 [style = solid, label="i"];
66->67 [style = bold, label=""];
39->34 [style = bold, label=""];
61->82 [style = bold, label=""];
32->49 [style = dotted, label="true"];
75->33 [style = dotted, label="true"];
5->75 [style = solid, label="i"];
41->24 [style = dotted, label="true"];
34->31 [style = bold, label=""];
75->69 [style = bold, label=""];
13->40 [style = bold, label=""];
48->44 [style = bold, label=""];
80->45 [style = solid, label="i"];
18->45 [style = dashed, label="0"];
73->84 [style = bold, label=""];
69->20 [style = bold, label=""];
10->7 [style = bold, label=""];
80->41 [style = bold, label=""];
24->41 [style = solid, label="i"];
20->85 [style = bold, label=""];
50->30 [style = solid, label="expectedKeys"];
19->13 [style = bold, label=""];
3->2 [style = bold, label=""];
21->11 [style = bold, label=""];
1->30 [style = solid, label="expectedKeys"];
50->18 [style = solid, label="expectedKeys"];
52->48 [style = bold, label=""];
44->68 [style = bold, label=""];
56->16 [style = bold, label=""];
0->20 [style = bold, label=""];
3->75 [style = bold, label=""];
84->66 [style = bold, label=""];
59->44 [style = bold, label=""];
27->8 [style = bold, label=""];
77->76 [style = solid, label="stream2"];
71->78 [style = bold, label=""];
28->30 [style = solid, label="i"];
56->55 [style = dotted, label="true"];
28->29 [style = bold, label=""];
29->6 [style = dotted, label="true"];
84->45 [style = solid, label="expectedKeys"];
82->36 [style = bold, label=""];
41->9 [style = dotted, label="true"];
51->21 [style = solid, label="getter"];
40->53 [style = bold, label=""];
56->50 [style = dotted, label="true"];
48->52 [style = dotted, label="true"];
30->82 [style = dashed, label="0"];
32->4 [style = dotted, label="true"];
3->5 [style = solid, label="i"];
61->82 [style = dotted, label="true"];
37->41 [style = bold, label=""];
37->24 [style = solid, label="i"];
18->59 [style = bold, label=""];
60->79 [style = bold, label=""];
32->16 [style = bold, label=""];
33->5 [style = bold, label=""];
64->61 [style = solid, label="i"];
36->39 [style = bold, label=""];
79->65 [style = bold, label=""];
24->41 [style = bold, label=""];
17->43 [style = bold, label=""];
36->82 [style = solid, label="i"];
15->28 [style = bold, label=""];
31->10 [style = bold, label=""];
3->33 [style = solid, label="i"];
23->19 [style = bold, label=""];
29->42 [style = bold, label=""];
36->61 [style = solid, label="i"];
1->18 [style = solid, label="expectedKeys"];
51->39 [style = solid, label="getter"];
64->61 [style = bold, label=""];
75->33 [style = bold, label=""];
8->37 [style = bold, label=""];
51->35 [style = solid, label="getter"];
18->52 [style = bold, label=""];
63->3 [style = bold, label=""];
74->41 [style = solid, label="i"];
32->1 [style = dotted, label="true"];
2->5 [style = bold, label=""];
5->75 [style = bold, label=""];
2->20 [style = dashed, label="0"];
74->45 [style = solid, label="i"];
53->51 [style = bold, label=""];
37->41 [style = solid, label="i"];
74->80 [style = solid, label="i"];
19->57 [style = dashed, label="0"];
6->29 [style = solid, label="i"];
45->80 [style = bold, label=""];
51->3 [style = solid, label="getter"];
65->64 [style = bold, label=""];
43->48 [style = bold, label=""];
20->46 [style = bold, label=""];
85->70 [style = bold, label=""];
43->18 [style = solid, label="i"];
42->36 [style = bold, label=""];
28->29 [style = solid, label="i"];
46->47 [style = bold, label=""];
4->13 [style = solid, label="builder"];
41->45 [style = dotted, label="true"];
9->33 [style = dashed, label="0"];
67->62 [style = bold, label=""];
22->3 [style = bold, label=""];
26->38 [style = bold, label=""];
78->77 [style = bold, label=""];
76->72 [style = bold, label=""];
51->46 [style = solid, label="getter"];
11->0 [style = bold, label=""];
62->71 [style = bold, label=""];
77->76 [style = bold, label=""];
6->30 [style = solid, label="i"];
70->60 [style = bold, label=""];
50->9 [style = solid, label="expectedKeys"];
52->48 [style = solid, label="i"];
47->79 [style = dashed, label="0"];
29->30 [style = dotted, label="true"];
36->61 [style = bold, label=""];
12->23 [style = bold, label=""];
61->81 [style = bold, label=""];
43->48 [style = solid, label="i"];
44->27 [style = bold, label=""];
33->21 [style = bold, label=""];
16->12 [style = bold, label=""];
41->63 [style = bold, label=""];
51->15 [style = solid, label="getter"];
75->5 [style = dotted, label="true"];
24->9 [style = solid, label="i"];
}
