digraph {
13 [style = filled, label = "mockTime.sleep(commitInterval - 10L)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "thread.setNow(mockTime.milliseconds())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Consumer<byte((,byte((> consumer = EasyMock.createNiceMock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "props.setProperty(StreamsConfig.STATE_DIR_CONFIG,stateDir)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expect(consumer.groupMetadata()).andStubReturn(consumerGroupMetadata)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "shouldNotCommitBeforeTheCommitInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "thread.maybeCommit()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expect(consumerGroupMetadata.groupInstanceId()).andReturn(Optional.empty())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "final ConsumerGroupMetadata consumerGroupMetadata = mock()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "EasyMock.replay(consumer,consumerGroupMetadata)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "thread.maybeCommit()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final long commitInterval = 1000L@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "thread.setNow(mockTime.milliseconds())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics,CLIENT_ID,StreamsConfig.METRICS_LATEST,mockTime)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final StreamsConfig config = new StreamsConfig(props)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "props.setProperty(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG,Long.toString(commitInterval))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldNotCommitBeforeTheCommitInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final StreamThread thread = new StreamThread(mockTime,config,null,consumer,consumer,null,null,taskManager,streamsMetrics,internalTopologyBuilder,CLIENT_ID,new LogContext(\"\"),new AtomicInteger(),new AtomicLong(Long.MAX_VALUE),null,HANDLER,null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final TaskManager taskManager = mockTaskManagerCommit(consumer,1,1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "shouldNotCauseExceptionIfNothingCommitted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final Properties props = configProps(false)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(taskManager)@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final TaskManager taskManager = mockTaskManagerCommit(consumer,1,0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
11->20 [style = bold, label=""];
1->4 [style = bold, label=""];
16->0 [style = bold, label=""];
17->1 [style = bold, label=""];
21->0 [style = bold, label=""];
11->1 [style = bold, label=""];
12->15 [style = solid, label="config"];
11->19 [style = solid, label="consumer"];
4->15 [style = bold, label=""];
12->11 [style = bold, label=""];
11->1 [style = solid, label="consumer"];
4->15 [style = solid, label="streamsMetrics"];
11->22 [style = solid, label="consumer"];
18->17 [style = bold, label=""];
1->15 [style = solid, label="taskManager"];
11->15 [style = solid, label="consumer"];
15->3 [style = bold, label=""];
22->9 [style = solid, label="taskManager"];
1->22 [style = dashed, label="0"];
20->18 [style = solid, label="consumerGroupMetadata"];
22->4 [style = bold, label=""];
20->18 [style = bold, label=""];
20->19 [style = solid, label="consumerGroupMetadata"];
0->14 [style = bold, label=""];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
22->15 [style = solid, label="taskManager"];
10->12 [style = bold, label=""];
6->10 [style = bold, label=""];
8->9 [style = bold, label=""];
11->22 [style = bold, label=""];
0->13 [style = solid, label="commitInterval"];
1->9 [style = solid, label="taskManager"];
14->12 [style = solid, label="props"];
19->4 [style = bold, label=""];
1->19 [style = bold, label=""];
14->6 [style = bold, label=""];
0->10 [style = solid, label="commitInterval"];
2->8 [style = bold, label=""];
13->2 [style = bold, label=""];
}
