digraph {
78 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "windowStore.put(1,\"one\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(7,startTime + incr * 7 - WINDOW_SIZE,startTime + incr * 7 + WINDOW_SIZE)))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@62@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,startTime + incr * 2 - WINDOW_SIZE,startTime + incr * 2 + WINDOW_SIZE)))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@59@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + incr * 3 - WINDOW_SIZE,startTime + incr * 3 + WINDOW_SIZE)))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
100 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "assertEquals(Utils.mkList(\"one\"),toList(windowStore.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(4,startTime + incr * 4 - WINDOW_SIZE,startTime + incr * 4 + WINDOW_SIZE)))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(windowStore.fetch(8,startTime + incr * 8 - WINDOW_SIZE,startTime + incr * 8 + WINDOW_SIZE)))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "windowStore.close()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "windowStore.put(0,\"zero\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "windowStore.put(0,\"zero\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - WINDOW_SIZE,startTime + WINDOW_SIZE)))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
92 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(windowStore.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "windowStore.put(4,\"four\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 4))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(8,startTime + incr * 8 - WINDOW_SIZE,startTime + incr * 8 + WINDOW_SIZE)))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "windowStore.put(2,\"two\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "windowStore = createWindowStore(context,false,true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "testRolling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
79 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3)),segmentDirs(baseDir))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 4))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(Utils.mkList(\"zero\"),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(6,startTime + incr * 6 - WINDOW_SIZE,startTime + incr * 6 + WINDOW_SIZE)))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
96 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "Utils.delete(baseDir)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "windowStore.flush()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "context.setRecordContext(createRecordContext(startTime))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,startTime + incr * 2 - WINDOW_SIZE,startTime + incr * 2 + WINDOW_SIZE)))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,startTime + incr * 6 - WINDOW_SIZE,startTime + incr * 6 + WINDOW_SIZE)))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "long incr = segmentSize / 2@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 5))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 2))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "long incr = segmentSize / 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "windowStore.flush()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "context.restore(windowName,changeLog)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(5,startTime + incr * 5 - WINDOW_SIZE,startTime + incr * 5 + WINDOW_SIZE)))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@48@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@47@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "windowStore.put(5,\"five\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 7))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
81 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 6))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "long startTime = segmentSize * 2@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "windowStore.put(6,\"six\")@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - WINDOW_SIZE,startTime + WINDOW_SIZE)))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "windowStore.put(4,\"four\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + incr - WINDOW_SIZE,startTime + incr + WINDOW_SIZE)))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(windowStore.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@60@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,startTime - windowSize,startTime + windowSize)))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 8))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "windowStore = createWindowStore(context,false,true)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,startTime + incr * 5 - WINDOW_SIZE,startTime + incr * 5 + WINDOW_SIZE)))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,startTime + incr * 3 - WINDOW_SIZE,startTime + incr * 3 + WINDOW_SIZE)))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
83 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "windowStore.put(7,\"seven\")@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "windowStore.put(8,\"eight\")@@@50@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "long startTime = segmentSize * 2@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "windowStore.flush()@@@61@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,startTime + incr * 4 - WINDOW_SIZE,startTime + incr * 4 + WINDOW_SIZE)))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,startTime + incr - WINDOW_SIZE,startTime + incr + WINDOW_SIZE)))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "final Segments segments = new Segments(windowName,retentionPeriod,numSegments)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@58@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,startTime + incr * 7 - WINDOW_SIZE,startTime + incr * 7 + WINDOW_SIZE)))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40->4 [style = bold, label=""];
2->35 [style = bold, label=""];
45->11 [style = solid, label="incr"];
98->25 [style = bold, label=""];
84->77 [style = bold, label=""];
28->39 [style = solid, label="startTime"];
28->55 [style = solid, label="startTime"];
31->76 [style = solid, label="incr"];
31->102 [style = solid, label="incr"];
5->9 [style = bold, label=""];
65->54 [style = bold, label=""];
63->48 [style = bold, label=""];
55->47 [style = bold, label=""];
0->46 [style = bold, label=""];
45->41 [style = solid, label="incr"];
22->88 [style = solid, label="startTime"];
28->43 [style = solid, label="startTime"];
22->10 [style = solid, label="startTime"];
22->70 [style = solid, label="startTime"];
37->51 [style = dashed, label="0"];
45->21 [style = solid, label="incr"];
68->91 [style = bold, label=""];
34->15 [style = bold, label=""];
28->41 [style = solid, label="startTime"];
22->94 [style = solid, label="startTime"];
28->15 [style = solid, label="startTime"];
59->62 [style = bold, label=""];
28->59 [style = solid, label="startTime"];
57->59 [style = bold, label=""];
29->34 [style = bold, label=""];
102->69 [style = bold, label=""];
45->0 [style = solid, label="incr"];
28->58 [style = solid, label="startTime"];
45->8 [style = solid, label="incr"];
28->53 [style = solid, label="startTime"];
48->27 [style = bold, label=""];
33->78 [style = bold, label=""];
28->61 [style = solid, label="startTime"];
31->90 [style = solid, label="incr"];
22->102 [style = solid, label="startTime"];
19->24 [style = bold, label=""];
52->28 [style = bold, label=""];
45->43 [style = solid, label="incr"];
66->88 [style = bold, label=""];
31->96 [style = solid, label="incr"];
22->68 [style = solid, label="startTime"];
22->75 [style = solid, label="startTime"];
82->13 [style = bold, label=""];
28->6 [style = solid, label="startTime"];
45->22 [style = bold, label=""];
94->70 [style = bold, label=""];
21->1 [style = bold, label=""];
76->81 [style = bold, label=""];
22->90 [style = solid, label="startTime"];
78->71 [style = bold, label=""];
31->66 [style = solid, label="incr"];
4->8 [style = bold, label=""];
49->56 [style = bold, label=""];
25->10 [style = bold, label=""];
31->98 [style = solid, label="incr"];
45->44 [style = solid, label="incr"];
31->101 [style = solid, label="incr"];
36->59 [style = dashed, label="0"];
21->64 [style = dashed, label="0"];
31->77 [style = solid, label="incr"];
22->84 [style = solid, label="startTime"];
45->14 [style = solid, label="incr"];
45->6 [style = solid, label="incr"];
28->9 [style = solid, label="startTime"];
28->45 [style = bold, label=""];
28->48 [style = solid, label="startTime"];
28->37 [style = solid, label="startTime"];
47->53 [style = bold, label=""];
99->29 [style = bold, label=""];
45->50 [style = solid, label="incr"];
45->57 [style = solid, label="incr"];
24->93 [style = bold, label=""];
31->88 [style = solid, label="incr"];
22->24 [style = solid, label="startTime"];
37->26 [style = bold, label=""];
22->25 [style = solid, label="startTime"];
31->99 [style = solid, label="incr"];
17->41 [style = bold, label=""];
30->42 [style = bold, label=""];
72->8 [style = bold, label=""];
14->47 [style = dashed, label="0"];
92->40 [style = bold, label=""];
75->74 [style = bold, label=""];
7->0 [style = bold, label=""];
20->14 [style = bold, label=""];
45->10 [style = solid, label="incr"];
73->94 [style = bold, label=""];
22->98 [style = solid, label="startTime"];
16->19 [style = bold, label=""];
28->11 [style = solid, label="startTime"];
22->78 [style = solid, label="startTime"];
22->91 [style = solid, label="startTime"];
28->38 [style = solid, label="startTime"];
45->15 [style = solid, label="incr"];
14->43 [style = bold, label=""];
4->72 [style = bold, label=""];
67->22 [style = bold, label=""];
1->11 [style = bold, label=""];
45->9 [style = solid, label="incr"];
33->23 [style = bold, label=""];
5->73 [style = bold, label=""];
20->55 [style = dashed, label="0"];
8->17 [style = bold, label=""];
56->58 [style = bold, label=""];
28->19 [style = solid, label="startTime"];
22->0 [style = solid, label="startTime"];
28->31 [style = solid, label="startTime"];
45->54 [style = solid, label="incr"];
31->86 [style = solid, label="incr"];
12->29 [style = bold, label=""];
85->95 [style = bold, label=""];
45->49 [style = solid, label="incr"];
45->63 [style = solid, label="incr"];
86->100 [style = bold, label=""];
38->37 [style = bold, label=""];
71->68 [style = bold, label=""];
31->75 [style = solid, label="incr"];
70->75 [style = bold, label=""];
97->85 [style = bold, label=""];
28->24 [style = solid, label="startTime"];
96->83 [style = bold, label=""];
28->25 [style = solid, label="startTime"];
28->47 [style = solid, label="startTime"];
31->74 [style = solid, label="incr"];
16->54 [style = dashed, label="0"];
31->24 [style = solid, label="incr"];
31->8 [style = solid, label="incr"];
28->16 [style = solid, label="startTime"];
10->56 [style = dashed, label="0"];
22->99 [style = solid, label="startTime"];
79->99 [style = bold, label=""];
46->40 [style = bold, label=""];
24->57 [style = dashed, label="0"];
22->95 [style = solid, label="startTime"];
27->20 [style = bold, label=""];
22->69 [style = solid, label="startTime"];
45->60 [style = solid, label="incr"];
22->82 [style = solid, label="startTime"];
51->63 [style = bold, label=""];
31->25 [style = solid, label="incr"];
31->6 [style = solid, label="incr"];
28->65 [style = solid, label="startTime"];
28->40 [style = solid, label="startTime"];
22->101 [style = solid, label="startTime"];
19->68 [style = dashed, label="0"];
39->16 [style = bold, label=""];
6->58 [style = dashed, label="0"];
28->44 [style = solid, label="startTime"];
28->8 [style = solid, label="startTime"];
62->51 [style = bold, label=""];
81->9 [style = bold, label=""];
60->2 [style = bold, label=""];
83->98 [style = bold, label=""];
28->13 [style = solid, label="startTime"];
22->93 [style = solid, label="startTime"];
22->71 [style = solid, label="startTime"];
31->68 [style = solid, label="incr"];
6->21 [style = bold, label=""];
31->0 [style = bold, label=""];
28->1 [style = solid, label="startTime"];
45->19 [style = solid, label="incr"];
45->40 [style = solid, label="incr"];
42->39 [style = bold, label=""];
31->19 [style = solid, label="incr"];
44->48 [style = dashed, label="0"];
38->69 [style = dashed, label="0"];
91->102 [style = bold, label=""];
23->32 [style = bold, label=""];
11->60 [style = dashed, label="0"];
45->36 [style = solid, label="incr"];
45->61 [style = solid, label="incr"];
28->49 [style = solid, label="startTime"];
31->40 [style = solid, label="incr"];
42->65 [style = bold, label=""];
31->69 [style = solid, label="incr"];
25->49 [style = dashed, label="0"];
35->1 [style = dashed, label="0"];
32->30 [style = bold, label=""];
22->40 [style = solid, label="startTime"];
93->38 [style = bold, label=""];
31->100 [style = solid, label="incr"];
10->6 [style = bold, label=""];
31->7 [style = bold, label=""];
28->56 [style = solid, label="startTime"];
28->64 [style = solid, label="startTime"];
31->10 [style = solid, label="incr"];
37->19 [style = dashed, label="0"];
101->96 [style = bold, label=""];
28->36 [style = solid, label="startTime"];
28->14 [style = solid, label="startTime"];
22->73 [style = solid, label="startTime"];
3->28 [style = bold, label=""];
31->83 [style = solid, label="incr"];
28->0 [style = solid, label="startTime"];
9->18 [style = bold, label=""];
38->62 [style = dashed, label="0"];
27->55 [style = bold, label=""];
26->44 [style = bold, label=""];
28->51 [style = solid, label="startTime"];
45->56 [style = solid, label="incr"];
18->97 [style = bold, label=""];
50->57 [style = bold, label=""];
22->100 [style = solid, label="startTime"];
77->101 [style = bold, label=""];
80->67 [style = bold, label=""];
22->76 [style = solid, label="startTime"];
1->61 [style = dashed, label="0"];
45->48 [style = solid, label="incr"];
31->94 [style = solid, label="incr"];
31->95 [style = solid, label="incr"];
64->61 [style = bold, label=""];
19->50 [style = dashed, label="0"];
31->91 [style = solid, label="incr"];
41->12 [style = bold, label=""];
22->8 [style = solid, label="startTime"];
45->64 [style = solid, label="incr"];
45->62 [style = solid, label="incr"];
22->96 [style = solid, label="startTime"];
22->83 [style = solid, label="startTime"];
45->59 [style = solid, label="incr"];
45->37 [style = solid, label="incr"];
58->64 [style = bold, label=""];
28->20 [style = solid, label="startTime"];
28->57 [style = solid, label="startTime"];
89->84 [style = bold, label=""];
45->58 [style = solid, label="incr"];
31->85 [style = solid, label="incr"];
46->92 [style = bold, label=""];
61->60 [style = bold, label=""];
95->86 [style = bold, label=""];
28->63 [style = solid, label="startTime"];
22->97 [style = solid, label="startTime"];
22->19 [style = solid, label="startTime"];
22->74 [style = solid, label="startTime"];
22->6 [style = solid, label="startTime"];
31->70 [style = solid, label="incr"];
28->50 [style = solid, label="startTime"];
26->63 [style = dashed, label="0"];
43->53 [style = dashed, label="0"];
22->77 [style = solid, label="startTime"];
36->102 [style = dashed, label="0"];
38->89 [style = bold, label=""];
28->62 [style = solid, label="startTime"];
31->81 [style = solid, label="incr"];
22->31 [style = bold, label=""];
28->54 [style = solid, label="startTime"];
28->60 [style = solid, label="startTime"];
45->13 [style = solid, label="incr"];
100->66 [style = bold, label=""];
11->2 [style = bold, label=""];
26->24 [style = dashed, label="0"];
15->5 [style = bold, label=""];
28->21 [style = solid, label="startTime"];
54->50 [style = bold, label=""];
53->49 [style = bold, label=""];
45->25 [style = solid, label="incr"];
24->36 [style = bold, label=""];
45->38 [style = solid, label="incr"];
31->71 [style = solid, label="incr"];
31->82 [style = solid, label="incr"];
45->53 [style = solid, label="incr"];
22->85 [style = solid, label="startTime"];
31->93 [style = solid, label="incr"];
39->65 [style = dashed, label="0"];
45->26 [style = solid, label="incr"];
90->15 [style = bold, label=""];
28->26 [style = solid, label="startTime"];
45->16 [style = solid, label="incr"];
45->1 [style = solid, label="incr"];
18->13 [style = bold, label=""];
87->80 [style = bold, label=""];
45->47 [style = solid, label="incr"];
45->29 [style = solid, label="incr"];
22->86 [style = solid, label="startTime"];
45->24 [style = solid, label="incr"];
36->38 [style = bold, label=""];
17->79 [style = bold, label=""];
88->82 [style = bold, label=""];
44->27 [style = bold, label=""];
13->33 [style = bold, label=""];
43->25 [style = bold, label=""];
45->51 [style = solid, label="incr"];
28->29 [style = solid, label="startTime"];
22->66 [style = solid, label="startTime"];
34->90 [style = bold, label=""];
69->19 [style = bold, label=""];
28->10 [style = solid, label="startTime"];
74->76 [style = bold, label=""];
22->81 [style = solid, label="startTime"];
}
