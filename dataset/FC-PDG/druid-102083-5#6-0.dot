digraph {
16 [style = filled, label = "final String column = lhsExpression.getSimpleExtraction().getColumn()@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "return rhsAligned? new NotDimFilter(Bounds.interval(boundRefKey,rhsInterval)): Filtration.matchEverything()@@@76@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
94 [style = filled, label = "filter = Bounds.lessThan(boundRefKey,val)@@@103@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
111 [style = filled, label = "DimFilter filter = conversion.toDruidFilter(plannerContext,rowSignature,rexNode)@@@118@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final StringComparator comparator = Calcites.getStringComparatorForSqlTypeName(lhs.getType().getSqlTypeName())@@@99@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "toSimpleLeafFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
82 [style = filled, label = "SqlTypeName.TIMESTAMP == rhsLiteral.getTypeName() || SqlTypeName.DATE == rhsLiteral.getTypeName()@@@85@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "return Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "filter = Bounds.greaterThanOrEqualTo(boundRefKey,val)@@@109@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "RexNode x = lhs@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,extractionFn,comparator)@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "flippedKind = SqlKind.LESS_THAN@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "expression != null@@@123@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
106 [style = filled, label = "SqlTypeName.CHAR_TYPES.contains(rhsLiteral.getTypeName())@@@82@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "lhs.getKind() == SqlKind.LITERAL && rhs.getKind() != SqlKind.LITERAL@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "return filter@@@117@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "final RexNode rexNode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "SqlTypeName.NUMERIC_TYPES.contains(rhsLiteral.getTypeName())@@@79@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
113 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@107@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
133 [style = filled, label = "return rhsAligned? Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getStartMillis())): Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "!lhsExpression.isSimpleExtraction()@@@62@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Interval rhsInterval = granularity.bucket(DateTimes.utc(rhsMillis))@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "return null@@@128@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "kind == SqlKind.LIKE@@@119@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
119 [style = filled, label = "return null@@@115@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
128 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final long rhsMillis = Calcites.calciteDateTimeLiteralToJoda(rhs,plannerContext.getTimeZone()).getMillis()@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "final DruidExpression druidExpression = toDruidExpression(plannerContext,rowSignature,operand)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "return null@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "return new ExpressionDimFilter(expression.getExpression(),plannerContext.getExprMacroTable())@@@124@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
98 [style = filled, label = "final RexNode rexNode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
72 [style = filled, label = "final List<RexNode> operands = ((RexCall)rexNode).getOperands()@@@120@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "return Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@77@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
95 [style = filled, label = "rexNode instanceof RexCall@@@111@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "final Interval rhsInterval = granularity.bucket(DateTimes.utc(rhsMillis))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "kind@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "kind == SqlKind.IS_TRUE || kind == SqlKind.IS_NOT_FALSE@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "filter = Bounds.greaterThan(boundRefKey,val)@@@107@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "flippedKind = SqlKind.GREATER_THAN_OR_EQUAL@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "return filter@@@120@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "final SqlKind kind = rexNode.getKind()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "flippedKind = SqlKind.GREATER_THAN@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@81@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
102 [style = filled, label = "filter != null@@@119@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
100 [style = filled, label = "filter = Bounds.equalTo(boundRefKey,val)@@@95@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "return null@@@128@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "toSimpleLeafFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "final long rhsMillis@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "flippedKind@@@74@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
73 [style = filled, label = "final PlannerContext plannerContext@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final long rhsMillis = Calcites.calciteDateTimeLiteralToJoda(rhs,plannerContext.getTimeZone()).getMillis()@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "return new LikeDimFilter(druidExpression.getSimpleExtraction().getColumn(),RexLiteral.stringValue(operands.get(1)),operands.size() > 2? RexLiteral.stringValue(operands.get(2)): null,druidExpression.getSimpleExtraction().getExtractionFn())@@@125@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "return null@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "return buildTimeFloorFilter(ColumnHolder.TIME_COLUMN_NAME,queryGranularity,flippedKind,rhsMillis)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "throw new ISE(\"WTF?! Kind(%s( not expected here\",kind)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "final DruidExpression lhsExpression = toDruidExpression(plannerContext,rowSignature,lhs)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "return filter@@@109@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
103 [style = filled, label = "return getBoundTimeDimFilter(flippedKind,boundRefKey,rhsInterval,rhsAligned)@@@74@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "return rhsAligned? Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getStartMillis())): Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@78@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
92 [style = filled, label = "return rhsAligned? Bounds.interval(boundRefKey,rhsInterval): Filtration.matchNothing()@@@75@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
112 [style = filled, label = "final StringComparator comparator = Calcites.getStringComparatorForSqlTypeName(lhs.getType().getSqlTypeName())@@@91@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "return kind == SqlKind.IS_NOT_NULL? new NotDimFilter(equalFilter): equalFilter@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "kind == SqlKind.IS_FALSE || kind == SqlKind.IS_NOT_TRUE@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final DruidExpression druidExpression = toDruidExpression(plannerContext,rowSignature,operands.get(0))@@@121@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "final SqlKind flippedKind@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return rhsAligned? Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getStartMillis())): Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@79@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
97 [style = filled, label = "final RexLiteral rhsLiteral = (RexLiteral)rhs@@@78@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "druidExpression == null || !druidExpression.isSimpleExtraction()@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "flippedKind = kind@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Preconditions.checkState(operands.size() == 2,\"WTF?! Expected 2 operands, got(%,d(\",operands.size())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "final RowSignature rowSignature@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "final Granularity queryGranularity = toQueryGranularity(lhsExpression,plannerContext.getExprMacroTable())@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "filter = Bounds.greaterThanOrEqualTo(boundRefKey,val)@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "return Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@80@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
89 [style = filled, label = "RexNode rhs = operands.get(1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final DimFilter filter@@@101@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "return null@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return new NotDimFilter(toSimpleLeafFilter(plannerContext,rowSignature,Iterables.getOnlyElement(((RexCall)rexNode).getOperands())))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "granularity != null@@@69@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "final List<RexNode> operands = ((RexCall)rexNode).getOperands()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "rhs.getKind() != SqlKind.LITERAL@@@50@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "flippedKind = SqlKind.LESS_THAN_OR_EQUAL@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "conversion == null@@@114@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "filter = Bounds.lessThanOrEqualTo(boundRefKey,val)@@@105@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
122 [style = filled, label = "return rhsAligned? Bounds.interval(boundRefKey,rhsInterval): Filtration.matchNothing()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "rhs = x@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final Granularity granularity = ExtractionFns.toQueryGranularity(extractionFn)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "filter = Bounds.equalTo(boundRefKey,val)@@@103@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "flip = true@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "val = String.valueOf(Calcites.calciteDateTimeLiteralToJoda(rhsLiteral,plannerContext.getTimeZone()).getMillis())@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "final SqlOperator operator = ((RexCall)rexNode).getOperator()@@@112@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "return null@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "return Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
134 [style = filled, label = "operatorKind@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "column.equals(ColumnHolder.TIME_COLUMN_NAME) && extractionFn instanceof TimeFormatExtractionFn@@@67@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "final PlannerContext plannerContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "lhsExpression == null@@@54@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "lhs = rhs@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "final Granularity granularity@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "final SqlOperatorConversion conversion = plannerContext.getOperatorTable().lookupOperatorConversion(operator)@@@113@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
77 [style = filled, label = "return null@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "flip@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "return null@@@97@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "filter = new NotDimFilter(Bounds.equalTo(boundRefKey,val))@@@105@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "return rhsAligned? Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getStartMillis())): Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
126 [style = filled, label = "final String column@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "val = String.valueOf(RexLiteral.value(rhsLiteral))@@@80@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "val = String.valueOf(RexLiteral.stringValue(rhsLiteral))@@@91@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "filter = new NotDimFilter(Bounds.equalTo(boundRefKey,val))@@@97@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
123 [style = filled, label = "return rhsAligned? new NotDimFilter(Bounds.interval(boundRefKey,rhsInterval)): Filtration.matchEverything()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "filter = Bounds.lessThan(boundRefKey,val)@@@111@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final DimFilter equalFilter = new SelectorDimFilter(druidExpression.getSimpleExtraction().getColumn(),NullHandling.defaultStringValue(),druidExpression.getSimpleExtraction().getExtractionFn())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "buildTimeFloorFilter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "DruidExpression expression = conversion.toDruidExpression(plannerContext,rowSignature,rexNode)@@@122@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
85 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "kind == SqlKind.EQUALS || kind == SqlKind.NOT_EQUALS || kind == SqlKind.GREATER_THAN || kind == SqlKind.GREATER_THAN_OR_EQUAL || kind == SqlKind.LESS_THAN || kind == SqlKind.LESS_THAN_OR_EQUAL@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "final String val@@@85@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "val = String.valueOf(RexLiteral.stringValue(rhsLiteral))@@@83@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "return toSimpleLeafFilter(plannerContext,rowSignature,Iterables.getOnlyElement(((RexCall)rexNode).getOperands()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "queryGranularity != null@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "val = String.valueOf(RexLiteral.value(rhsLiteral))@@@88@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "kind == SqlKind.IS_NULL || kind == SqlKind.IS_NOT_NULL@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RexNode operand = Iterables.getOnlyElement(((RexCall)rexNode).getOperands())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "final SqlKind operatorKind@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
117 [style = filled, label = "flippedKind@@@94@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "boolean flip = false@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "final ExtractionFn extractionFn = lhsExpression.getSimpleExtraction().getExtractionFn()@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "final String val@@@77@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "final DimFilter filter@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "druidExpression == null || !druidExpression.isSimpleExtraction()@@@122@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "RexNode lhs = operands.get(0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "flippedKind = kind@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "filter = Bounds.greaterThan(boundRefKey,val)@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108->112 [style = bold, label=""];
87->7 [style = bold, label=""];
2->53 [style = solid, label="flippedKind"];
51->5 [style = bold, label=""];
39->24 [style = dotted, label="true"];
45->57 [style = dotted, label="true"];
45->109 [style = dotted, label="true"];
79->104 [style = solid, label="operator"];
49->69 [style = solid, label="val"];
66->79 [style = solid, label="val"];
8->51 [style = bold, label=""];
4->92 [style = solid, label="rhsInterval"];
87->92 [style = bold, label=""];
114->106 [style = bold, label=""];
16->91 [style = bold, label=""];
125->126 [style = dotted, label="true"];
41->45 [style = solid, label="kind"];
57->16 [style = bold, label=""];
42->1 [style = bold, label=""];
45->117 [style = dotted, label="true"];
54->103 [style = solid, label="flippedKind"];
115->9 [style = solid, label="val"];
32->68 [style = bold, label=""];
128->134 [style = bold, label=""];
37->49 [style = dotted, label="true"];
98->95 [style = solid, label="rexNode"];
45->54 [style = dotted, label="true"];
134->123 [style = bold, label=""];
132->128 [style = solid, label="rhsMillis"];
131->120 [style = bold, label=""];
9->88 [style = dotted, label="true"];
22->66 [style = dotted, label="true"];
90->117 [style = solid, label="flippedKind"];
59->48 [style = bold, label=""];
68->75 [style = solid, label="lhsExpression"];
21->9 [style = solid, label="flippedKind"];
63->39 [style = bold, label=""];
128->123 [style = solid, label="rhsAligned"];
104->62 [style = bold, label=""];
102->71 [style = bold, label=""];
45->31 [style = dotted, label="true"];
122->123 [style = bold, label=""];
87->8 [style = dotted, label="true"];
41->61 [style = solid, label="kind"];
73->0 [style = solid, label="plannerContext"];
50->27 [style = bold, label=""];
29->103 [style = dotted, label="true"];
28->20 [style = dotted, label="true"];
134->129 [style = bold, label=""];
9->88 [style = bold, label=""];
68->44 [style = bold, label=""];
125->132 [style = dotted, label="true"];
55->43 [style = solid, label="flip"];
9->93 [style = bold, label=""];
61->14 [style = dotted, label="false"];
20->82 [style = solid, label="rhs"];
45->28 [style = dotted, label="true"];
92->81 [style = bold, label=""];
117->13 [style = dotted, label="true"];
128->122 [style = solid, label="rhsAligned"];
105->116 [style = dotted, label="true"];
83->13 [style = solid, label="boundRefKey"];
46->86 [style = dotted, label="true"];
84->9 [style = solid, label="flippedKind"];
61->72 [style = dotted, label="true"];
13->17 [style = solid, label="boundRefKey"];
134->121 [style = bold, label=""];
11->67 [style = bold, label=""];
83->30 [style = dotted, label="true"];
58->59 [style = solid, label="lhs"];
42->57 [style = bold, label=""];
66->17 [style = solid, label="val"];
69->31 [style = solid, label="filter"];
16->83 [style = solid, label="column"];
45->95 [style = bold, label=""];
18->80 [style = bold, label=""];
117->94 [style = bold, label=""];
57->78 [style = dotted, label="true"];
33->31 [style = solid, label="filter"];
90->9 [style = solid, label="flippedKind"];
30->12 [style = solid, label="val"];
131->124 [style = solid, label="boundRefKey"];
49->88 [style = solid, label="val"];
56->2 [style = bold, label=""];
49->6 [style = bold, label=""];
109->100 [style = solid, label="val"];
85->103 [style = bold, label=""];
85->7 [style = solid, label="boundRefKey"];
89->97 [style = solid, label="rhs"];
29->67 [style = bold, label=""];
79->31 [style = solid, label="filter"];
85->92 [style = solid, label="boundRefKey"];
99->96 [style = bold, label=""];
66->6 [style = bold, label=""];
109->107 [style = solid, label="val"];
54->117 [style = solid, label="flippedKind"];
36->87 [style = solid, label="flippedKind"];
114->106 [style = dotted, label="false"];
46->73 [style = dotted, label="true"];
11->35 [style = bold, label=""];
130->133 [style = bold, label=""];
62->119 [style = dotted, label="true"];
105->41 [style = bold, label=""];
111->102 [style = solid, label="filter"];
88->31 [style = solid, label="filter"];
126->131 [style = solid, label="column"];
103->109 [style = bold, label=""];
115->13 [style = solid, label="val"];
87->5 [style = bold, label=""];
41->47 [style = solid, label="kind"];
45->55 [style = dotted, label="true"];
47->63 [style = dotted, label="true"];
21->53 [style = solid, label="flippedKind"];
9->79 [style = bold, label=""];
105->86 [style = dotted, label="true"];
45->30 [style = dotted, label="true"];
75->53 [style = solid, label="queryGranularity"];
85->103 [style = solid, label="boundRefKey"];
79->31 [style = bold, label=""];
15->32 [style = bold, label=""];
86->18 [style = solid, label="rowSignature"];
15->9 [style = solid, label="flippedKind"];
91->35 [style = solid, label="extractionFn"];
74->65 [style = bold, label=""];
45->97 [style = dotted, label="true"];
37->49 [style = bold, label=""];
73->68 [style = solid, label="plannerContext"];
100->93 [style = solid, label="filter"];
85->8 [style = solid, label="boundRefKey"];
67->17 [style = solid, label="val"];
64->8 [style = bold, label=""];
84->87 [style = solid, label="flippedKind"];
110->71 [style = bold, label=""];
71->99 [style = solid, label="expression"];
47->10 [style = bold, label=""];
109->9 [style = solid, label="val"];
36->103 [style = solid, label="flippedKind"];
98->71 [style = solid, label="rexNode"];
9->62 [style = dotted, label="true"];
107->93 [style = bold, label=""];
80->38 [style = bold, label=""];
118->93 [style = solid, label="filter"];
83->94 [style = solid, label="boundRefKey"];
56->15 [style = dotted, label="true"];
30->88 [style = solid, label="val"];
9->79 [style = dotted, label="true"];
60->6 [style = bold, label=""];
134->130 [style = bold, label=""];
45->42 [style = dotted, label="true"];
45->93 [style = dotted, label="true"];
104->62 [style = solid, label="conversion"];
45->32 [style = dotted, label="true"];
9->33 [style = dotted, label="true"];
45->58 [style = dotted, label="true"];
93->96 [style = bold, label=""];
131->133 [style = solid, label="boundRefKey"];
45->23 [style = dotted, label="true"];
115->118 [style = solid, label="val"];
37->22 [style = dotted, label="false"];
22->83 [style = dotted, label="false"];
131->129 [style = solid, label="boundRefKey"];
125->131 [style = bold, label=""];
41->21 [style = solid, label="kind"];
88->31 [style = bold, label=""];
11->35 [style = dotted, label="true"];
82->37 [style = dotted, label="true"];
20->52 [style = bold, label=""];
61->38 [style = dotted, label="true"];
134->130 [style = dotted, label="true"];
134->124 [style = dotted, label="true"];
128->133 [style = solid, label="rhsAligned"];
46->41 [style = bold, label=""];
128->124 [style = solid, label="rhsAligned"];
56->90 [style = dotted, label="true"];
44->77 [style = bold, label=""];
116->71 [style = solid, label="plannerContext"];
37->100 [style = solid, label="val"];
26->8 [style = solid, label="rhsAligned"];
131->123 [style = solid, label="boundRefKey"];
86->0 [style = solid, label="rowSignature"];
91->11 [style = solid, label="extractionFn"];
26->103 [style = solid, label="rhsAligned"];
9->93 [style = solid, label="filter"];
115->100 [style = solid, label="val"];
4->81 [style = solid, label="rhsInterval"];
102->110 [style = dotted, label="true"];
28->59 [style = bold, label=""];
131->122 [style = solid, label="boundRefKey"];
41->50 [style = bold, label=""];
99->101 [style = dotted, label="true"];
30->33 [style = solid, label="val"];
13->12 [style = solid, label="boundRefKey"];
12->31 [style = bold, label=""];
29->19 [style = dotted, label="true"];
117->13 [style = bold, label=""];
134->122 [style = bold, label=""];
36->117 [style = solid, label="flippedKind"];
34->40 [style = bold, label=""];
117->9 [style = dotted, label="true"];
108->100 [style = solid, label="val"];
21->87 [style = solid, label="flippedKind"];
54->43 [style = bold, label=""];
7->64 [style = bold, label=""];
83->60 [style = dotted, label="false"];
43->36 [style = bold, label=""];
116->63 [style = solid, label="plannerContext"];
87->81 [style = bold, label=""];
79->104 [style = bold, label=""];
47->45 [style = dotted, label="false"];
89->28 [style = bold, label=""];
42->53 [style = dotted, label="true"];
54->9 [style = solid, label="flippedKind"];
62->119 [style = bold, label=""];
45->13 [style = dotted, label="true"];
37->22 [style = bold, label=""];
73->63 [style = solid, label="plannerContext"];
47->10 [style = dotted, label="true"];
108->107 [style = solid, label="val"];
45->11 [style = dotted, label="true"];
95->62 [style = dotted, label="true"];
108->9 [style = solid, label="val"];
16->85 [style = solid, label="column"];
87->51 [style = dotted, label="true"];
67->33 [style = solid, label="val"];
25->68 [style = bold, label=""];
45->83 [style = dotted, label="true"];
134->133 [style = dotted, label="true"];
95->79 [style = bold, label=""];
105->98 [style = dotted, label="true"];
50->76 [style = dotted, label="false"];
134->123 [style = dotted, label="true"];
54->87 [style = solid, label="flippedKind"];
117->107 [style = bold, label=""];
76->47 [style = dotted, label="false"];
21->117 [style = solid, label="flippedKind"];
53->57 [style = bold, label=""];
17->31 [style = bold, label=""];
45->37 [style = dotted, label="true"];
117->100 [style = bold, label=""];
86->111 [style = solid, label="rowSignature"];
91->83 [style = solid, label="extractionFn"];
67->69 [style = solid, label="val"];
90->32 [style = bold, label=""];
109->94 [style = solid, label="val"];
45->82 [style = dotted, label="true"];
9->62 [style = bold, label=""];
84->103 [style = solid, label="flippedKind"];
13->69 [style = solid, label="boundRefKey"];
22->112 [style = bold, label=""];
28->48 [style = dotted, label="true"];
91->13 [style = solid, label="extractionFn"];
114->115 [style = bold, label=""];
13->79 [style = solid, label="boundRefKey"];
134->124 [style = bold, label=""];
61->80 [style = dotted, label="true"];
132->120 [style = solid, label="rhsMillis"];
48->20 [style = bold, label=""];
21->32 [style = bold, label=""];
13->23 [style = bold, label=""];
33->31 [style = bold, label=""];
83->118 [style = solid, label="boundRefKey"];
67->12 [style = solid, label="val"];
85->51 [style = solid, label="boundRefKey"];
108->94 [style = solid, label="val"];
61->95 [style = dashed, label="0"];
61->18 [style = dotted, label="true"];
23->9 [style = bold, label=""];
95->79 [style = dotted, label="true"];
97->114 [style = bold, label=""];
1->53 [style = bold, label=""];
55->58 [style = bold, label=""];
43->56 [style = bold, label=""];
76->0 [style = bold, label=""];
80->71 [style = dotted, label="true"];
75->42 [style = solid, label="queryGranularity"];
90->53 [style = solid, label="flippedKind"];
26->64 [style = solid, label="rhsAligned"];
0->96 [style = bold, label=""];
56->3 [style = bold, label=""];
47->34 [style = dotted, label="true"];
24->34 [style = bold, label=""];
56->15 [style = bold, label=""];
45->68 [style = dotted, label="true"];
117->9 [style = bold, label=""];
117->118 [style = dotted, label="true"];
71->38 [style = bold, label=""];
29->26 [style = dotted, label="true"];
18->80 [style = solid, label="druidExpression"];
37->94 [style = solid, label="val"];
45->89 [style = dotted, label="true"];
124->129 [style = bold, label=""];
108->13 [style = solid, label="val"];
57->78 [style = bold, label=""];
28->59 [style = dotted, label="true"];
32->25 [style = bold, label=""];
58->89 [style = bold, label=""];
113->93 [style = bold, label=""];
1->53 [style = solid, label="rhsMillis"];
2->32 [style = bold, label=""];
21->103 [style = solid, label="flippedKind"];
87->92 [style = dotted, label="true"];
72->18 [style = bold, label=""];
46->70 [style = dotted, label="true"];
49->12 [style = solid, label="val"];
117->113 [style = dotted, label="true"];
37->9 [style = solid, label="val"];
49->79 [style = solid, label="val"];
49->33 [style = solid, label="val"];
39->34 [style = bold, label=""];
133->124 [style = bold, label=""];
20->97 [style = solid, label="rhs"];
76->47 [style = bold, label=""];
56->21 [style = dotted, label="true"];
41->3 [style = solid, label="kind"];
84->53 [style = solid, label="flippedKind"];
16->13 [style = solid, label="column"];
76->0 [style = dotted, label="true"];
43->36 [style = dotted, label="false"];
106->82 [style = bold, label=""];
87->103 [style = dashed, label="0"];
41->50 [style = solid, label="kind"];
63->39 [style = solid, label="druidExpression"];
37->13 [style = solid, label="val"];
82->49 [style = solid, label="rhsLiteral"];
14->111 [style = dashed, label="0"];
2->9 [style = solid, label="flippedKind"];
90->87 [style = solid, label="flippedKind"];
12->31 [style = solid, label="filter"];
52->54 [style = bold, label=""];
87->8 [style = bold, label=""];
61->72 [style = bold, label=""];
87->51 [style = bold, label=""];
66->33 [style = solid, label="val"];
2->87 [style = solid, label="flippedKind"];
30->69 [style = solid, label="val"];
37->107 [style = solid, label="val"];
35->29 [style = bold, label=""];
59->20 [style = solid, label="x"];
134->122 [style = dotted, label="true"];
40->96 [style = bold, label=""];
52->43 [style = solid, label="flip"];
112->83 [style = bold, label=""];
71->99 [style = bold, label=""];
9->69 [style = dotted, label="true"];
109->118 [style = solid, label="val"];
101->96 [style = bold, label=""];
45->114 [style = dotted, label="true"];
67->88 [style = solid, label="val"];
10->63 [style = solid, label="operand"];
62->71 [style = dotted, label="false"];
66->69 [style = solid, label="val"];
134->121 [style = dotted, label="true"];
6->13 [style = bold, label=""];
106->108 [style = dotted, label="true"];
26->81 [style = solid, label="rhsAligned"];
120->122 [style = solid, label="rhsInterval"];
117->94 [style = dotted, label="true"];
47->45 [style = bold, label=""];
115->112 [style = bold, label=""];
68->44 [style = solid, label="lhsExpression"];
125->127 [style = dotted, label="true"];
114->115 [style = dotted, label="true"];
45->6 [style = dotted, label="true"];
134->133 [style = bold, label=""];
6->13 [style = solid, label="comparator"];
54->53 [style = solid, label="flippedKind"];
72->79 [style = dashed, label="0"];
116->111 [style = solid, label="plannerContext"];
80->71 [style = bold, label=""];
9->17 [style = dotted, label="true"];
120->128 [style = bold, label=""];
36->32 [style = bold, label=""];
84->117 [style = solid, label="flippedKind"];
66->88 [style = solid, label="val"];
45->61 [style = dotted, label="false"];
91->11 [style = bold, label=""];
85->87 [style = bold, label=""];
106->82 [style = dotted, label="false"];
56->84 [style = bold, label=""];
62->31 [style = bold, label=""];
135->134 [style = solid, label="operatorKind"];
102->110 [style = bold, label=""];
56->84 [style = dotted, label="true"];
67->79 [style = solid, label="val"];
41->36 [style = solid, label="kind"];
116->27 [style = solid, label="plannerContext"];
17->31 [style = solid, label="filter"];
29->109 [style = bold, label=""];
111->110 [style = solid, label="filter"];
26->85 [style = bold, label=""];
58->68 [style = solid, label="lhs"];
125->135 [style = dotted, label="true"];
19->4 [style = bold, label=""];
37->112 [style = bold, label=""];
49->17 [style = solid, label="val"];
3->32 [style = bold, label=""];
15->117 [style = solid, label="flippedKind"];
36->53 [style = solid, label="flippedKind"];
62->111 [style = bold, label=""];
9->12 [style = dotted, label="true"];
82->66 [style = solid, label="rhsLiteral"];
117->113 [style = bold, label=""];
117->100 [style = dotted, label="true"];
43->56 [style = dotted, label="true"];
117->107 [style = dotted, label="true"];
112->83 [style = solid, label="comparator"];
41->40 [style = solid, label="kind"];
41->56 [style = solid, label="kind"];
13->33 [style = solid, label="boundRefKey"];
106->108 [style = bold, label=""];
39->24 [style = bold, label=""];
82->22 [style = bold, label=""];
45->91 [style = dotted, label="true"];
45->112 [style = dotted, label="true"];
30->6 [style = bold, label=""];
87->81 [style = dotted, label="true"];
75->42 [style = bold, label=""];
50->27 [style = dotted, label="true"];
32->25 [style = dotted, label="true"];
36->9 [style = solid, label="flippedKind"];
45->61 [style = bold, label=""];
109->13 [style = solid, label="val"];
9->69 [style = bold, label=""];
35->29 [style = solid, label="granularity"];
66->12 [style = solid, label="val"];
83->9 [style = solid, label="boundRefKey"];
86->63 [style = solid, label="rowSignature"];
56->3 [style = dotted, label="true"];
13->88 [style = solid, label="boundRefKey"];
45->75 [style = dotted, label="true"];
45->74 [style = bold, label=""];
4->103 [style = solid, label="rhsInterval"];
30->117 [style = bold, label=""];
45->43 [style = dotted, label="true"];
95->104 [style = dotted, label="true"];
97->115 [style = solid, label="rhsLiteral"];
73->27 [style = solid, label="plannerContext"];
100->93 [style = bold, label=""];
9->33 [style = bold, label=""];
82->22 [style = dotted, label="false"];
83->60 [style = bold, label=""];
77->75 [style = bold, label=""];
87->64 [style = bold, label=""];
29->87 [style = dotted, label="true"];
45->95 [style = dotted, label="false"];
94->93 [style = solid, label="filter"];
28->54 [style = bold, label=""];
9->17 [style = bold, label=""];
28->52 [style = dotted, label="true"];
67->82 [style = bold, label=""];
45->44 [style = dotted, label="true"];
69->31 [style = bold, label=""];
78->16 [style = bold, label=""];
45->9 [style = dotted, label="true"];
19->4 [style = solid, label="rhsMillis"];
62->99 [style = dotted, label="false"];
86->68 [style = solid, label="rowSignature"];
56->21 [style = bold, label=""];
11->109 [style = bold, label=""];
15->53 [style = solid, label="flippedKind"];
120->123 [style = solid, label="rhsInterval"];
65->55 [style = bold, label=""];
83->30 [style = bold, label=""];
13->93 [style = bold, label=""];
89->82 [style = solid, label="rhs"];
41->76 [style = solid, label="kind"];
37->118 [style = solid, label="val"];
30->17 [style = solid, label="val"];
86->27 [style = solid, label="rowSignature"];
90->103 [style = solid, label="flippedKind"];
87->64 [style = dotted, label="true"];
29->4 [style = dotted, label="true"];
98->111 [style = solid, label="rexNode"];
19->26 [style = solid, label="rhsMillis"];
111->102 [style = bold, label=""];
85->81 [style = solid, label="boundRefKey"];
56->90 [style = bold, label=""];
11->29 [style = dotted, label="true"];
87->5 [style = dotted, label="true"];
48->68 [style = solid, label="lhs"];
131->130 [style = solid, label="boundRefKey"];
119->96 [style = bold, label=""];
107->93 [style = solid, label="filter"];
116->68 [style = solid, label="plannerContext"];
42->1 [style = dotted, label="true"];
15->103 [style = solid, label="flippedKind"];
5->67 [style = bold, label=""];
29->19 [style = bold, label=""];
44->75 [style = bold, label=""];
22->66 [style = bold, label=""];
99->101 [style = bold, label=""];
62->111 [style = dotted, label="false"];
47->39 [style = dotted, label="true"];
83->107 [style = solid, label="boundRefKey"];
56->2 [style = dotted, label="true"];
82->37 [style = bold, label=""];
45->74 [style = dotted, label="true"];
109->97 [style = bold, label=""];
117->118 [style = bold, label=""];
89->48 [style = solid, label="rhs"];
9->12 [style = bold, label=""];
115->107 [style = solid, label="val"];
84->32 [style = bold, label=""];
45->65 [style = dotted, label="true"];
30->79 [style = solid, label="val"];
22->83 [style = bold, label=""];
44->77 [style = dotted, label="true"];
108->118 [style = solid, label="val"];
123->130 [style = bold, label=""];
97->108 [style = solid, label="rhsLiteral"];
2->117 [style = solid, label="flippedKind"];
30->93 [style = solid, label="filter"];
134->129 [style = dotted, label="true"];
86->71 [style = solid, label="rowSignature"];
73->18 [style = solid, label="plannerContext"];
15->87 [style = solid, label="flippedKind"];
2->103 [style = solid, label="flippedKind"];
115->94 [style = solid, label="val"];
94->93 [style = bold, label=""];
13->93 [style = solid, label="filter"];
4->26 [style = bold, label=""];
10->63 [style = bold, label=""];
34->40 [style = solid, label="equalFilter"];
45->67 [style = dotted, label="true"];
50->76 [style = bold, label=""];
118->93 [style = bold, label=""];
26->92 [style = solid, label="rhsAligned"];
27->96 [style = bold, label=""];
87->7 [style = dotted, label="true"];
62->102 [style = dotted, label="false"];
81->7 [style = bold, label=""];
61->14 [style = bold, label=""];
83->100 [style = solid, label="boundRefKey"];
45->16 [style = dotted, label="true"];
47->40 [style = dotted, label="true"];
95->96 [style = bold, label=""];
116->0 [style = solid, label="plannerContext"];
85->64 [style = solid, label="boundRefKey"];
23->31 [style = solid, label="filter"];
129->121 [style = bold, label=""];
29->85 [style = dotted, label="true"];
}
