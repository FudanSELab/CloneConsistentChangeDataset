digraph {
9 [style = filled, label = "throw new IllegalStateException(\"Unknown content type \" + content)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "build['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return new GenericDataFile(specId,filePath,format,isPartitioned? partitionData.copy(): null,fileSizeInBytes,new Metrics(recordCount,columnSizes,valueCounts,nullValueCounts,nanValueCounts,lowerBounds,upperBounds),keyMetadata,splitOffsets)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "build['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Preconditions.checkArgument(filePath != null,\"File path is required\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Preconditions.checkArgument(fileSizeInBytes >= 0,\"File size is required\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sortOrderId == null@@@14@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "format == null@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "content@@@11@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "this.format = FileFormat.fromFileName(filePath)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "sortOrderId = SortOrder.unsorted().orderId()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "return new GenericDeleteFile(specId,content,filePath,format,isPartitioned? DataFiles.copy(spec,partitionData): null,fileSizeInBytes,new Metrics(recordCount,columnSizes,valueCounts,nullValueCounts,nanValueCounts,lowerBounds,upperBounds),equalityFieldIds,keyMetadata)@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return new GenericDeleteFile(specId,content,filePath,format,isPartitioned? DataFiles.copy(spec,partitionData): null,fileSizeInBytes,new Metrics(recordCount,columnSizes,valueCounts,nullValueCounts,nanValueCounts,lowerBounds,upperBounds),equalityFieldIds,sortOrderId,keyMetadata)@@@20@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Preconditions.checkArgument(recordCount >= 0,\"Record count is required\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Preconditions.checkArgument(content != null,\"Delete type is required\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Preconditions.checkArgument(format != null,\"File format is required\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Preconditions.checkArgument(sortOrderId == null,\"Position delete file should not have sort order\")@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "build['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
11->9 [style = dotted, label="true"];
8->16 [style = dashed, label="0"];
4->7 [style = bold, label=""];
11->12 [style = bold, label=""];
2->4 [style = bold, label=""];
6->4 [style = bold, label=""];
11->10 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
1->13 [style = solid, label="format"];
9->13 [style = bold, label=""];
14->13 [style = bold, label=""];
1->16 [style = solid, label="format"];
11->9 [style = bold, label=""];
0->8 [style = bold, label=""];
1->6 [style = bold, label=""];
0->11 [style = bold, label=""];
3->5 [style = bold, label=""];
12->13 [style = bold, label=""];
1->4 [style = solid, label="format"];
2->1 [style = dotted, label="true"];
11->10 [style = bold, label=""];
10->13 [style = bold, label=""];
2->1 [style = bold, label=""];
7->0 [style = bold, label=""];
1->8 [style = solid, label="format"];
15->5 [style = bold, label=""];
1->4 [style = bold, label=""];
2->6 [style = bold, label=""];
14->13 [style = solid, label="sortOrderId"];
10->14 [style = dotted, label="true"];
10->14 [style = bold, label=""];
17->5 [style = bold, label=""];
0->16 [style = bold, label=""];
}
