digraph {
3 [style = filled, label = "EasyMock.expect(storeMetadata.offset()).andReturn(10L).anyTimes()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final MockConsumer<byte((,byte((> consumer = new MockConsumer<byte((,byte((>(OffsetResetStrategy.EARLIEST){@Override public long position(final TopicPartition partition){throw kaboom}}@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final TaskId taskId = new TaskId(0,0)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "changelogReader.register(tp,activeStateManager)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "adminClient.updateEndOffsets(Collections.singletonMap(tp,10L))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shouldThrowIfPositionFail['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "EasyMock.replay(activeStateManager,storeMetadata,store)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,adminClient,consumer,callback)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final StreamsException thrown = assertThrows(,null)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final StreamsException thrown = assertThrows(,null)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(kaboom,thrown.getCause())@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "shouldThrowIfEndOffsetsFail['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "shouldThrowIfPositionFail['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "adminClient.updateEndOffsets(Collections.singletonMap(tp,0L))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "EasyMock.expect(activeStateManager.taskId()).andReturn(taskId)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "final MockAdminClient adminClient = new MockAdminClient(){@Override public ListOffsetsResult listOffsets(final Map<TopicPartition,OffsetSpec> topicPartitionOffsets,final ListOffsetsOptions options){throw kaboom}}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->3 [style = bold, label=""];
9->11 [style = bold, label=""];
4->12 [style = dashed, label="0"];
13->0 [style = bold, label=""];
0->7 [style = bold, label=""];
10->9 [style = bold, label=""];
6->0 [style = bold, label=""];
4->5 [style = bold, label=""];
1->8 [style = bold, label=""];
14->13 [style = bold, label=""];
6->13 [style = dashed, label="0"];
8->6 [style = bold, label=""];
1->14 [style = bold, label=""];
8->0 [style = solid, label="consumer"];
3->1 [style = bold, label=""];
9->11 [style = solid, label="taskId"];
2->3 [style = bold, label=""];
12->5 [style = bold, label=""];
7->12 [style = bold, label=""];
7->4 [style = bold, label=""];
14->0 [style = solid, label="adminClient"];
15->3 [style = bold, label=""];
}
