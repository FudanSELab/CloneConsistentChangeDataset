digraph {
49 [style = filled, label = "Thread path7 = new Thread(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "i++@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "i++@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "newSlot = pathStatsQueue.mapReducePaths(2,pathStatsQueue.getCurrentSlot())@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "int i = 0@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Map<String,Integer> newSlot = pathStatsQueue.mapReducePaths(1,pathStatsQueue.getCurrentSlot())@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "RequestPathMetricsCollector.PathStatsQueue pathStatsQueue = new PathStatsQueue(getChildren)requestPathMetricsCollector@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "pathStatsQueue.registerRequest(\"/path1/path2\" + \"_\" + i)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "int i = 0@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "i++@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertTrue(newSlot.get(\"/path1/path2/path3/path4/path5\").compareTo(1100000) == 0)@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "newSlot = pathStatsQueue.mapReducePaths(4,pathStatsQueue.getCurrentSlot())@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertTrue(newSlot.size() == 111111)@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "newSlot = pathStatsQueue.mapReducePaths(6,pathStatsQueue.getCurrentSlot())@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "i++@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<String,Integer> newSlot = pathStatsQueue.mapReducePaths(3,pathStatsQueue.getCurrentSlot())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(newSlot.isEmpty())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "i++@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "i < 100@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "pathStatsQueue.registerRequest(\"/path1/path2/path3/path4/path5\" + \"_\" + i)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Thread.sleep(15000)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RequestPathMetricsCollector requestPathMetricsCollector = new RequestPathMetricsCollector()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(newSlot.size() == 0)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "Assert.assertTrue(newSlot.size() == 1112)@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "newSlot = pathStatsQueue.collectStats(1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "newSlot = pathStatsQueue.mapReducePaths(5,pathStatsQueue.getCurrentSlot())@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "int i = 0@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "Assert.assertTrue(newSlot.size() == 1)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i < 1@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testCollectEmptyStats['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "pathStatsQueue.registerRequest(\"/path1/path2/path3/path4\" + \"_\" + i)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "int i = 0@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "path6.join()@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "path7.join()@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "i < 10@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertTrue(newSlot.size() == 12)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertTrue(newSlot.get(\"/path1\").compareTo(1) == 0)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertTrue(newSlot.isEmpty())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "newSlot = pathStatsQueue.collectStats(2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testCollectEmptyStats['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(newSlot.size() == 0)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "newSlot = pathStatsQueue.collectStats(5)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(newSlot.size() == 0)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertTrue(newSlot.size() == 0)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "i < 10000@@@45@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "testQueueMapReduce['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertTrue(newSlot.get(\"/path1/path2/path3/path4/path5/path6\").compareTo(1000001) == 0)@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertTrue(newSlot.get(\"/path1\").compareTo(1111111) == 0)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "newSlot = pathStatsQueue.mapReducePaths(7,pathStatsQueue.getCurrentSlot())@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "pathStatsQueue.registerRequest(\"/path1\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Thread.sleep(5000)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Assert.assertTrue(newSlot.get(\"/path1\").compareTo(1) == 0)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "Assert.assertTrue(newSlot.size() == 11112)@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "Assert.assertTrue(newSlot.size() == 112)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertTrue(newSlot.size() == 1111111)@@@72@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(newSlot.size() == 0)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "pathStatsQueue.registerRequest(\"/path1/path2/path3\" + \"_\" + i)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Thread path6 = new Thread(null)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "pathStatsQueue.start()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(newSlot.size() == 0)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "int i = 0@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "RequestPathMetricsCollector.PathStatsQueue pathStatsQueue = new PathStatsQueue(create2)requestPathMetricsCollector@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertTrue(newSlot.get(\"/path1/path2/path3/path4\").compareTo(1110000) == 0)@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "newSlot = pathStatsQueue.mapReducePaths(3,pathStatsQueue.getCurrentSlot())@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "path7.start()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "Assert.assertTrue(newSlot.get(\"/path1/path2\").compareTo(1111100) == 0)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "path6.start()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertTrue(newSlot.get(\"/path1/path2/path3\").compareTo(1111000) == 0)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "i < 1000@@@40@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28->54 [style = solid, label="i"];
55->36 [style = bold, label=""];
43->64 [style = dotted, label="true"];
9->11 [style = bold, label=""];
12->5 [style = bold, label=""];
0->9 [style = solid, label="requestPathMetricsCollector"];
16->7 [style = bold, label=""];
51->44 [style = solid, label="i"];
45->59 [style = dotted, label="true"];
45->38 [style = dotted, label="true"];
54->61 [style = dotted, label="true"];
54->24 [style = dotted, label="true"];
26->51 [style = bold, label=""];
21->28 [style = bold, label=""];
29->45 [style = bold, label=""];
8->0 [style = bold, label=""];
13->17 [style = bold, label=""];
31->35 [style = bold, label=""];
46->26 [style = solid, label="i"];
59->45 [style = solid, label="i"];
45->38 [style = bold, label=""];
67->57 [style = bold, label=""];
61->24 [style = bold, label=""];
43->29 [style = bold, label=""];
49->63 [style = bold, label=""];
22->21 [style = solid, label="i"];
24->61 [style = solid, label="i"];
59->38 [style = solid, label="i"];
64->43 [style = bold, label=""];
30->60 [style = bold, label=""];
10->15 [style = dashed, label="0"];
15->13 [style = bold, label=""];
48->41 [style = bold, label=""];
20->21 [style = solid, label="i"];
54->46 [style = bold, label=""];
32->49 [style = bold, label=""];
68->34 [style = bold, label=""];
51->44 [style = bold, label=""];
28->54 [style = bold, label=""];
34->31 [style = bold, label=""];
65->66 [style = bold, label=""];
4->18 [style = bold, label=""];
21->22 [style = dotted, label="true"];
44->26 [style = dotted, label="true"];
4->2 [style = bold, label=""];
60->48 [style = bold, label=""];
46->44 [style = solid, label="i"];
11->49 [style = dashed, label="0"];
33->23 [style = bold, label=""];
58->37 [style = solid, label="i"];
18->1 [style = bold, label=""];
29->38 [style = solid, label="i"];
29->45 [style = solid, label="i"];
2->18 [style = dashed, label="0"];
5->7 [style = bold, label=""];
66->30 [style = bold, label=""];
62->68 [style = bold, label=""];
57->65 [style = bold, label=""];
54->61 [style = bold, label=""];
38->59 [style = bold, label=""];
46->44 [style = bold, label=""];
58->43 [style = bold, label=""];
40->56 [style = bold, label=""];
47->40 [style = bold, label=""];
2->1 [style = bold, label=""];
59->45 [style = bold, label=""];
42->25 [style = bold, label=""];
11->4 [style = bold, label=""];
28->24 [style = solid, label="i"];
44->51 [style = dotted, label="true"];
9->32 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
1->6 [style = bold, label=""];
58->43 [style = solid, label="i"];
10->13 [style = bold, label=""];
64->43 [style = solid, label="i"];
21->53 [style = dotted, label="true"];
50->0 [style = bold, label=""];
37->64 [style = bold, label=""];
58->64 [style = solid, label="i"];
23->39 [style = bold, label=""];
7->15 [style = bold, label=""];
0->32 [style = bold, label=""];
51->26 [style = solid, label="i"];
24->54 [style = solid, label="i"];
41->62 [style = bold, label=""];
6->12 [style = bold, label=""];
0->9 [style = bold, label=""];
28->61 [style = solid, label="i"];
3->17 [style = dashed, label="0"];
7->10 [style = bold, label=""];
20->22 [style = solid, label="i"];
35->33 [style = bold, label=""];
0->32 [style = solid, label="requestPathMetricsCollector"];
22->21 [style = bold, label=""];
12->16 [style = bold, label=""];
53->22 [style = bold, label=""];
43->37 [style = bold, label=""];
63->19 [style = bold, label=""];
29->59 [style = solid, label="i"];
52->20 [style = bold, label=""];
24->54 [style = bold, label=""];
27->42 [style = bold, label=""];
20->21 [style = bold, label=""];
43->37 [style = dotted, label="true"];
36->27 [style = bold, label=""];
13->3 [style = bold, label=""];
14->0 [style = bold, label=""];
44->26 [style = bold, label=""];
45->47 [style = bold, label=""];
64->37 [style = solid, label="i"];
44->58 [style = bold, label=""];
46->51 [style = solid, label="i"];
25->67 [style = bold, label=""];
19->52 [style = bold, label=""];
56->55 [style = bold, label=""];
21->53 [style = bold, label=""];
}
