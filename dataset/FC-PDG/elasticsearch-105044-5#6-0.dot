digraph {
15 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "w.addDocument(doc)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(0).getDocCount())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(3,histogram.getBuckets().size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5).minDocCount(2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(10d,histogram.getBuckets().get(1).getKey())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(5d,histogram.getBuckets().get(1).getKey())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "doc.add(new BinaryDocValuesField(\"field\",encodedRange))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "BytesRef encodedRange = rangeType.encodeRanges(Set.of(new RangeFieldMapper.Range(rangeType,1L,2L,true,true),new RangeFieldMapper.Range(rangeType,1L,4L,true,true),new RangeFieldMapper.Range(rangeType,1L,13L,true,true),new RangeFieldMapper.Range(rangeType,1L,5L,true,true)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RangeType rangeType = RangeType.LONG@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(5d,histogram.getBuckets().get(0).getKey())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "BytesRef encodedRange = rangeType.encodeRanges(Collections.singleton(range))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(0).getDocCount())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(10d,histogram.getBuckets().get(2).getKey())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testMultipleRangesLotsOfOverlap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(2).getDocCount())@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testMinDocCount['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testMultipleRangesLotsOfOverlap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "InternalHistogram histogram = searchAndReduce(searcher,new MatchAllDocsQuery(),aggBuilder,rangeField(\"field\",rangeType))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(1).getDocCount())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "InternalHistogram histogram = searchAndReduce(searcher,new MatchAllDocsQuery(),aggBuilder,rangeField(\"field\",rangeType))@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Document doc = new Document()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(0d,histogram.getBuckets().get(0).getKey())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(1).getDocCount())@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(2,histogram.getBuckets().size())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->11 [style = solid, label="rangeType"];
12->0 [style = bold, label=""];
5->22 [style = dashed, label="0"];
24->13 [style = bold, label=""];
26->21 [style = bold, label=""];
20->3 [style = bold, label=""];
13->19 [style = solid, label="rangeType"];
14->3 [style = bold, label=""];
4->16 [style = solid, label="searcher"];
4->16 [style = bold, label=""];
13->0 [style = bold, label=""];
12->15 [style = bold, label=""];
4->11 [style = bold, label=""];
15->4 [style = bold, label=""];
18->19 [style = solid, label="aggBuilder"];
1->21 [style = dashed, label="0"];
14->3 [style = solid, label="encodedRange"];
5->9 [style = bold, label=""];
7->25 [style = dashed, label="0"];
11->19 [style = dashed, label="0"];
0->12 [style = solid, label="doc"];
23->26 [style = bold, label=""];
13->14 [style = solid, label="rangeType"];
11->7 [style = bold, label=""];
10->1 [style = bold, label=""];
19->25 [style = bold, label=""];
0->20 [style = bold, label=""];
13->16 [style = solid, label="rangeType"];
20->3 [style = solid, label="encodedRange"];
3->12 [style = bold, label=""];
17->13 [style = bold, label=""];
11->19 [style = bold, label=""];
11->16 [style = dashed, label="0"];
12->18 [style = bold, label=""];
8->13 [style = bold, label=""];
11->19 [style = solid, label="searcher"];
9->23 [style = dashed, label="0"];
7->5 [style = bold, label=""];
2->6 [style = bold, label=""];
16->7 [style = bold, label=""];
10->26 [style = dashed, label="0"];
22->23 [style = bold, label=""];
0->14 [style = bold, label=""];
25->22 [style = bold, label=""];
1->2 [style = bold, label=""];
4->11 [style = solid, label="searcher"];
18->11 [style = bold, label=""];
15->11 [style = solid, label="aggBuilder"];
15->16 [style = solid, label="aggBuilder"];
9->10 [style = bold, label=""];
}
