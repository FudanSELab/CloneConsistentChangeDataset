digraph {
1 [style = filled, label = "ShardingSphereSchema schema = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(dataSourcesMetaData.getDataSourceMetaData(\"ds_0\")).thenReturn(mock())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "createMetaData['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "when(result.getRuleMetaData().getRules()).thenReturn(Collections.singletonList(shardingRule))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ColumnMetaData columnMetaData = new ColumnMetaData(\"order_id\",Types.INTEGER,\"int\",true,false,false)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(shardingRule.findLogicTableByActualTable(\"t_order\")).thenReturn(Optional.of(\"t_logic_order\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ShardingRule shardingRule = mock()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(result.getSchema()).thenReturn(schema)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(result.getResource().getDataSourcesMetaData()).thenReturn(dataSourcesMetaData)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "createMetaData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return result@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DataSourcesMetaData dataSourcesMetaData = mock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "createMetaData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "ShardingSphereMetaData result = mock(,RETURNS_DEEP_STUBS)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(schema.get(\"t_logic_order\")).thenReturn(new TableMetaData(Collections.singletonList(columnMetaData),Collections.singletonList(new IndexMetaData(\"order_id\"))))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(result.getName()).thenReturn(\"sharding_schema\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ColumnMetaData columnMetaData = new ColumnMetaData(\"order_id\",Types.INTEGER,true,false,false)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
12->5 [style = bold, label=""];
2->8 [style = solid, label="result"];
1->0 [style = solid, label="schema"];
3->11 [style = bold, label=""];
6->0 [style = bold, label=""];
16->2 [style = bold, label=""];
9->8 [style = bold, label=""];
2->4 [style = bold, label=""];
3->7 [style = solid, label="shardingRule"];
15->10 [style = solid, label="columnMetaData"];
7->9 [style = bold, label=""];
5->6 [style = bold, label=""];
10->12 [style = bold, label=""];
12->6 [style = solid, label="dataSourcesMetaData"];
4->15 [style = dashed, label="0"];
2->15 [style = bold, label=""];
4->1 [style = bold, label=""];
14->2 [style = bold, label=""];
1->10 [style = bold, label=""];
11->7 [style = bold, label=""];
4->10 [style = solid, label="columnMetaData"];
13->2 [style = bold, label=""];
15->1 [style = bold, label=""];
}
