digraph {
5 [style = filled, label = "ParseTree tree = ((ParseASTNode)parser.parse()).getRootNode()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(\"SQL format error\",expectFormattedSQL,is(visitor.visit(tree)))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "MySQLLexer lexer = new MySQLLexer(CodePointCharStream.fromBuffer(buffer))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertSQLFormat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertTrue(\"SQL format error\",expectFormartedSql.equals(result))@@@9@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "MySQLFormatSQLVisitor visitor = new MySQLDMLFormatSQLVisitor()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "visitor.setParameterized(false)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String result = visitor.visit(tree)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "MySQLParser parser = new MySQLParser(new CommonTokenStream(lexer))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertSqlFormat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertSqlFormat['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CodePointBuffer buffer = CodePointBuffer.withChars(CharBuffer.wrap(inputSql.toCharArray()))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->0 [style = bold, label=""];
5->1 [style = bold, label=""];
5->9 [style = solid, label="tree"];
6->5 [style = bold, label=""];
4->3 [style = bold, label=""];
10->3 [style = bold, label=""];
0->2 [style = bold, label=""];
1->8 [style = bold, label=""];
1->0 [style = bold, label=""];
0->9 [style = dashed, label="0"];
5->0 [style = solid, label="tree"];
3->7 [style = bold, label=""];
11->3 [style = bold, label=""];
7->6 [style = solid, label="lexer"];
7->6 [style = bold, label=""];
3->7 [style = solid, label="buffer"];
8->9 [style = bold, label=""];
0->2 [style = solid, label="result"];
}
