digraph {
16 [style = filled, label = "dictionaryStore = reader.getNextDictionaryReader()@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "InputFile inFile = Files.localInput(parquetFile)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "parquetSchema = reader.getFileMetaData().getSchema()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "builder.set(\"_non_dict\",UUID.randomUUID().toString())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Should create only one row group\",1,reader.getRowGroups().size())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "builder.set(\"_struct_not_null\",structNotNull)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "GenericRecordBuilder builder = new GenericRecordBuilder(convert(FILE_SCHEMA,\"table\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ParquetFileReader reader = ParquetFileReader.open(ParquetIO.file(inFile))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "builder.set(\"_all_nans\",Double.NaN)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "builder.set(\"_required\",\"req\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "PARQUET_FILE.deleteOnExit()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "copy += 1@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "appender.add(builder.build())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "org.apache.avro.Schema structSchema = AvroSchemaUtil.convert(_structFieldType)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "builder.set(\"_some_nans\",(i % 10 == 0)? Float.NaN: 2F)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "i += 1@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int copy = 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "OutputFile outFile = Files.localOutput(parquetFile)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(\"Should create only one row group\",1,reader.getRowGroups().size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "builder.set(\"_no_nulls\",\"\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "createInputFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "List<Record> records@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertTrue(parquetFile.delete())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "builder.set(\"_no_nans\",3D)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "parquetSchema = reader.getFileMetaData().getSchema()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "copy < 20@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "OutputFile outFile = Files.localOutput(PARQUET_FILE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "PARQUET_FILE.exists()@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "rowGroupMetadata = reader.getRowGroups().get(0)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "builder.set(\"_all_nulls\",null)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "builder.set(\"_id\",INT_MIN_VALUE + i)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "createParquetInputFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertTrue(PARQUET_FILE.delete())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "File parquetFile = temp.newFile()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "rowGroupMetadata = reader.getRowGroups().get(0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "appender.addAll(records)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "i < INT_MAX_VALUE - INT_MIN_VALUE + 1@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "InputFile inFile = Files.localInput(PARQUET_FILE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Record structNotNull = new Record(structSchema)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "structNotNull.put(\"_int_field\",INT_MIN_VALUE + i)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int i = 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "builder.set(\"_some_nulls\",(i % 10 == 0)? null: \"some\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "builder.set(\"_no_stats\",TOO_LONG_FOR_STATS)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "createInputFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32->23 [style = bold, label=""];
35->33 [style = bold, label=""];
26->21 [style = bold, label=""];
29->19 [style = bold, label=""];
39->41 [style = dotted, label="true"];
6->4 [style = bold, label=""];
20->7 [style = bold, label=""];
24->18 [style = bold, label=""];
36->43 [style = bold, label=""];
25->18 [style = solid, label="i"];
38->40 [style = bold, label=""];
19->0 [style = solid, label="structNotNull"];
18->22 [style = bold, label=""];
18->5 [style = dotted, label="true"];
15->12 [style = bold, label=""];
20->18 [style = dotted, label="true"];
11->0 [style = bold, label=""];
7->3 [style = solid, label="inFile"];
22->27 [style = bold, label=""];
8->23 [style = bold, label=""];
18->13 [style = bold, label=""];
18->29 [style = dotted, label="true"];
12->1 [style = bold, label=""];
42->43 [style = bold, label=""];
39->42 [style = bold, label=""];
17->20 [style = solid, label="copy"];
14->9 [style = bold, label=""];
23->7 [style = solid, label="parquetFile"];
26->36 [style = dashed, label="0"];
17->20 [style = bold, label=""];
25->18 [style = bold, label=""];
25->9 [style = solid, label="i"];
20->24 [style = dotted, label="true"];
13->20 [style = solid, label="copy"];
2->28 [style = bold, label=""];
33->37 [style = bold, label=""];
23->26 [style = bold, label=""];
21->2 [style = bold, label=""];
9->6 [style = bold, label=""];
30->31 [style = bold, label=""];
7->3 [style = bold, label=""];
43->34 [style = bold, label=""];
18->14 [style = dotted, label="true"];
18->6 [style = dotted, label="true"];
25->22 [style = solid, label="i"];
18->11 [style = dotted, label="true"];
37->38 [style = bold, label=""];
24->22 [style = solid, label="i"];
4->19 [style = bold, label=""];
18->27 [style = dotted, label="true"];
18->4 [style = dotted, label="true"];
19->11 [style = bold, label=""];
5->25 [style = bold, label=""];
24->9 [style = solid, label="i"];
18->0 [style = dotted, label="true"];
27->10 [style = bold, label=""];
42->36 [style = dotted, label="true"];
24->18 [style = solid, label="i"];
18->30 [style = dotted, label="true"];
25->31 [style = solid, label="i"];
18->19 [style = dotted, label="true"];
3->15 [style = bold, label=""];
42->36 [style = bold, label=""];
20->24 [style = bold, label=""];
41->34 [style = solid, label="records"];
24->11 [style = solid, label="i"];
20->13 [style = dotted, label="true"];
18->25 [style = dotted, label="true"];
18->10 [style = dotted, label="true"];
23->2 [style = solid, label="parquetFile"];
34->35 [style = bold, label=""];
31->29 [style = bold, label=""];
13->20 [style = bold, label=""];
0->5 [style = bold, label=""];
1->16 [style = bold, label=""];
25->11 [style = solid, label="i"];
18->9 [style = dotted, label="true"];
4->30 [style = bold, label=""];
24->31 [style = solid, label="i"];
10->14 [style = bold, label=""];
21->19 [style = solid, label="structSchema"];
18->22 [style = dotted, label="true"];
18->31 [style = dotted, label="true"];
28->17 [style = bold, label=""];
}
