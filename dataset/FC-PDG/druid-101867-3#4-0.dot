digraph {
3 [style = filled, label = "testExpression(rexBuilder.makeCall(new RightOperatorConversion().calciteOperator(),inputRef(\"s\"),integerLiteral(4)),DruidExpression.fromExpression(\"right(\"s\",4)\"),\"foo\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "testHelper.testExpression(new RightOperatorConversion().calciteOperator(),ImmutableList.of(testHelper.makeInputRef(\"s\"),testHelper.makeLiteral(4)),DruidExpression.fromExpression(\"right(\"s\",4)\"),\"foo\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testRight['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testHelper.testExpression(new RightOperatorConversion().calciteOperator(),ImmutableList.of(testHelper.makeInputRef(\"tstr\"),testHelper.makeLiteral(5)),DruidExpression.fromExpression(\"right(\"tstr\",5)\"),\"05:06\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testExpression(rexBuilder.makeCall(new RightOperatorConversion().calciteOperator(),inputRef(\"tstr\"),integerLiteral(5)),DruidExpression.fromExpression(\"right(\"tstr\",5)\"),\"05:06\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testHelper.testExpression(new RightOperatorConversion().calciteOperator(),ImmutableList.of(testHelper.makeInputRef(\"s\"),testHelper.makeLiteral(1)),DruidExpression.fromExpression(\"right(\"s\",1)\"),\"o\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testExpression(rexBuilder.makeCall(new RightOperatorConversion().calciteOperator(),inputRef(\"s\"),integerLiteral(2)),DruidExpression.fromExpression(\"right(\"s\",2)\"),\"oo\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "testExpression(rexBuilder.makeCall(new RightOperatorConversion().calciteOperator(),inputRef(\"s\"),integerLiteral(1)),DruidExpression.fromExpression(\"right(\"s\",1)\"),\"o\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "testHelper.testExpression(new RightOperatorConversion().calciteOperator(),ImmutableList.of(testHelper.makeInputRef(\"s\"),testHelper.makeLiteral(2)),DruidExpression.fromExpression(\"right(\"s\",2)\"),\"oo\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testExpression(rexBuilder.makeCall(new RightOperatorConversion().calciteOperator(),inputRef(\"s\"),integerLiteral(3)),DruidExpression.fromExpression(\"right(\"s\",3)\"),\"foo\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "testRepeat['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testRight['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testExpression(rexBuilder.makeCall(new RepeatOperatorConversion().calciteOperator(),inputRef(\"s\"),integerLiteral(3)),DruidExpression.fromExpression(\"repeat(\"s\",3)\"),\"foofoofoo\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testExpression(rexBuilder.makeCall(new RepeatOperatorConversion().calciteOperator(),inputRef(\"s\"),integerLiteral(1)),DruidExpression.fromExpression(\"repeat(\"s\",1)\"),\"foo\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testExpression(rexBuilder.makeCall(new RepeatOperatorConversion().calciteOperator(),inputRef(\"s\"),integerLiteral(-1)),DruidExpression.fromExpression(\"repeat(\"s\",-1)\"),null)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testHelper.testExpression(new RightOperatorConversion().calciteOperator(),ImmutableList.of(testHelper.makeInputRef(\"s\"),testHelper.makeLiteral(3)),DruidExpression.fromExpression(\"right(\"s\",3)\"),\"foo\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7->11 [style = bold, label=""];
15->14 [style = bold, label=""];
2->3 [style = bold, label=""];
0->6 [style = dashed, label="0"];
12->15 [style = bold, label=""];
8->6 [style = bold, label=""];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
0->12 [style = dashed, label="0"];
9->7 [style = bold, label=""];
2->7 [style = dashed, label="0"];
4->9 [style = dashed, label="0"];
3->5 [style = bold, label=""];
13->12 [style = bold, label=""];
2->14 [style = dashed, label="0"];
5->10 [style = dashed, label="0"];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
4->15 [style = dashed, label="0"];
6->9 [style = bold, label=""];
3->11 [style = dashed, label="0"];
}
