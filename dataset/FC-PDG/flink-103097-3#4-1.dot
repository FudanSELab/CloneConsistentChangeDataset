digraph {
10 [style = filled, label = "PrintStream stream = new PrintStream(baos)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "printSink.setTargetToStandardErr()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "printSink.setTargetToStandardOut()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final StreamingRuntimeContext ctx = Mockito.mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "printSink.invoke(\"hello world!\",SinkContextUtil.forTimestamp(0))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(\"hello world!\" + line,baos.toString())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testPrintSinkStdOut['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"Print to System.out\",printSink.toString())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testPrintSinkStdErr['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "PrintSinkFunction<String> printSink = new PrintSinkFunction<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "stream.close()@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Exception e@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "printSink.invoke(\"hello world!\")@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "System.setOut(stream)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "printSink.close()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.fail()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testPrintSinkStdOut['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "printSink.open(new Configuration())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "printSink.setRuntimeContext(ctx)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"Print to System.err\",printSink.toString())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->3 [style = solid, label="ctx"];
15->5 [style = dotted, label="true"];
14->3 [style = bold, label=""];
11->20 [style = bold, label=""];
1->4 [style = bold, label=""];
16->0 [style = bold, label=""];
3->1 [style = bold, label=""];
11->16 [style = dashed, label="0"];
17->9 [style = bold, label=""];
0->12 [style = bold, label=""];
19->11 [style = bold, label=""];
9->10 [style = bold, label=""];
0->20 [style = dashed, label="0"];
10->6 [style = bold, label=""];
15->5 [style = bold, label=""];
7->14 [style = bold, label=""];
5->19 [style = bold, label=""];
12->2 [style = bold, label=""];
11->0 [style = bold, label=""];
10->6 [style = solid, label="stream"];
9->10 [style = solid, label="baos"];
5->4 [style = bold, label=""];
20->12 [style = bold, label=""];
18->9 [style = bold, label=""];
4->19 [style = dashed, label="0"];
13->9 [style = bold, label=""];
6->7 [style = bold, label=""];
4->11 [style = bold, label=""];
1->19 [style = bold, label=""];
4->16 [style = bold, label=""];
2->8 [style = bold, label=""];
}
