digraph {
55 [style = filled, label = "Assert.assertTrue((fsmMap.containsKey(segmentNameStr)))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_SUCCESS)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "Assert.assertFalse((fsmMap.containsKey(segmentNameStr)))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s3Offset).withSegmentName(segmentNameStr)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "long startTime@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "SegmentCompletionProtocol.Response response@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testHappyPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(20)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "segmentCompletionMgr._seconds = startTime@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "final String tableName = new LLCSegmentName(segmentNameStr).getTableName()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(response.getOffset(),s2Offset)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s1Offset).withSegmentName(segmentNameStr)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "response = segmentCompletionMgr.segmentCommitEnd(params,true,false,CommittingSegmentDescriptor.fromSegmentCompletionReqParams(params))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "long commitTimeSec = response.getBuildTimeSeconds()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "segmentCompletionMgr._seconds += 25@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_CONTINUE)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset).withSegmentName(segmentNameStr)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "final long startTime = 5@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "Assert.assertTrue(commitTimeSec > 0)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset).withSegmentName(segmentNameStr)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.HOLD)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s3Offset).withSegmentName(segmentNameStr)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "response = segmentCompletionMgr.segmentCommitStart(params)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "verifyOffset(response,s2Offset)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset).withSegmentName(segmentNameStr)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "testFailedSlowCommit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "segmentCompletionMgr._seconds = startTime + commitTimeSec - 1@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Assert.assertFalse(commitTimeMap.containsKey(tableName))@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "response = segmentCompletionMgr.segmentCommitStart(params)@@@37@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.PROCESSED)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Request.Params params@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s1Offset).withSegmentName(segmentNameStr)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testHappyPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.KEEP)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51->5 [style = bold, label=""];
14->32 [style = dotted, label="true"];
25->52 [style = bold, label=""];
23->45 [style = bold, label=""];
27->28 [style = bold, label=""];
55->62 [style = bold, label=""];
20->0 [style = bold, label=""];
43->27 [style = solid, label="params"];
21->48 [style = bold, label=""];
26->9 [style = bold, label=""];
6->67 [style = dashed, label="0"];
45->12 [style = solid, label="params"];
57->59 [style = bold, label=""];
44->9 [style = solid, label="params"];
49->22 [style = bold, label=""];
61->64 [style = bold, label=""];
12->38 [style = bold, label=""];
18->61 [style = bold, label=""];
35->8 [style = bold, label=""];
32->3 [style = solid, label="startTime"];
39->45 [style = dashed, label="0"];
37->17 [style = solid, label="params"];
4->67 [style = bold, label=""];
61->54 [style = solid, label="commitTimeSec"];
41->43 [style = dashed, label="0"];
51->5 [style = solid, label="params"];
3->30 [style = bold, label=""];
5->36 [style = bold, label=""];
17->20 [style = bold, label=""];
14->16 [style = bold, label=""];
22->25 [style = bold, label=""];
3->46 [style = bold, label=""];
52->23 [style = bold, label=""];
7->1 [style = bold, label=""];
60->16 [style = bold, label=""];
21->4 [style = solid, label="params"];
30->46 [style = dashed, label="0"];
18->15 [style = bold, label=""];
61->64 [style = solid, label="commitTimeSec"];
0->57 [style = dashed, label="0"];
46->33 [style = solid, label="params"];
19->2 [style = bold, label=""];
4->40 [style = solid, label="params"];
26->44 [style = dashed, label="0"];
67->56 [style = bold, label=""];
54->58 [style = bold, label=""];
22->52 [style = solid, label="response"];
63->54 [style = solid, label="startTime"];
48->40 [style = solid, label="params"];
49->22 [style = solid, label="params"];
58->57 [style = solid, label="params"];
43->27 [style = bold, label=""];
46->33 [style = bold, label=""];
39->12 [style = bold, label=""];
11->52 [style = dashed, label="0"];
59->55 [style = bold, label=""];
1->19 [style = bold, label=""];
2->5 [style = solid, label="params"];
2->51 [style = dashed, label="0"];
10->49 [style = bold, label=""];
24->3 [style = bold, label=""];
0->31 [style = bold, label=""];
21->4 [style = bold, label=""];
53->17 [style = solid, label="params"];
41->27 [style = bold, label=""];
8->41 [style = bold, label=""];
30->33 [style = bold, label=""];
47->42 [style = bold, label=""];
6->21 [style = bold, label=""];
16->24 [style = bold, label=""];
15->53 [style = bold, label=""];
58->57 [style = bold, label=""];
37->53 [style = dashed, label="0"];
56->66 [style = bold, label=""];
31->42 [style = bold, label=""];
9->18 [style = bold, label=""];
13->26 [style = bold, label=""];
23->39 [style = bold, label=""];
26->9 [style = solid, label="params"];
19->51 [style = bold, label=""];
4->48 [style = dashed, label="0"];
15->37 [style = bold, label=""];
44->9 [style = bold, label=""];
63->3 [style = bold, label=""];
65->63 [style = bold, label=""];
36->34 [style = bold, label=""];
2->5 [style = bold, label=""];
4->40 [style = bold, label=""];
31->42 [style = solid, label="params"];
31->47 [style = dashed, label="0"];
33->35 [style = bold, label=""];
47->42 [style = solid, label="params"];
28->10 [style = bold, label=""];
13->44 [style = bold, label=""];
37->17 [style = bold, label=""];
63->3 [style = solid, label="startTime"];
50->16 [style = bold, label=""];
8->43 [style = bold, label=""];
64->54 [style = bold, label=""];
30->33 [style = solid, label="params"];
48->40 [style = bold, label=""];
45->12 [style = bold, label=""];
0->47 [style = bold, label=""];
65->66 [style = solid, label="tableName"];
40->7 [style = bold, label=""];
41->27 [style = solid, label="params"];
42->6 [style = bold, label=""];
10->29 [style = bold, label=""];
39->12 [style = solid, label="params"];
25->11 [style = bold, label=""];
29->22 [style = solid, label="params"];
50->32 [style = dotted, label="true"];
53->17 [style = bold, label=""];
29->49 [style = dashed, label="0"];
29->22 [style = bold, label=""];
38->13 [style = bold, label=""];
11->23 [style = bold, label=""];
24->65 [style = bold, label=""];
62->21 [style = bold, label=""];
17->54 [style = dashed, label="0"];
}
