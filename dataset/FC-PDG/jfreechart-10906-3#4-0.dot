digraph {
2 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"Series\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "OHLCSeriesCollection c1 = new OHLCSeriesCollection()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "OHLCSeriesCollection c2 = (OHLCSeriesCollection)TestUtilities.serialised(c1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "OHLCSeriesCollection c2 = (OHLCSeriesCollection)TestUtils.serialised(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "int h2 = c2.hashCode()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "s2.add(new Year(2009),1.0,4.0,0.5,2.0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "s1.add(new Year(2009),1.0,4.0,0.5,2.0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "s1.add(new Year(2006),1.0,1.1,1.2,1.3)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(h1,h2)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "OHLCSeries s2 = new OHLCSeries(\"S\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "c2.addSeries(s2)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "OHLCSeriesCollection c2 = new OHLCSeriesCollection()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int h1 = c1.hashCode()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testHashcode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"S\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(c1.equals(c2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
17->10 [style = bold, label=""];
7->6 [style = solid, label="c2"];
0->2 [style = solid, label="s1"];
2->19 [style = bold, label=""];
15->13 [style = solid, label="s2"];
11->14 [style = bold, label=""];
2->1 [style = bold, label=""];
3->18 [style = dashed, label="0"];
1->19 [style = dashed, label="0"];
4->7 [style = solid, label="c1"];
11->14 [style = solid, label="h2"];
1->6 [style = solid, label="c2"];
18->2 [style = bold, label=""];
0->12 [style = dashed, label="0"];
4->1 [style = solid, label="c1"];
4->0 [style = bold, label=""];
13->17 [style = bold, label=""];
10->14 [style = solid, label="h1"];
1->6 [style = bold, label=""];
3->2 [style = bold, label=""];
15->9 [style = bold, label=""];
5->4 [style = bold, label=""];
7->6 [style = bold, label=""];
4->6 [style = solid, label="c1"];
12->18 [style = bold, label=""];
4->12 [style = bold, label=""];
2->7 [style = bold, label=""];
8->4 [style = bold, label=""];
19->15 [style = bold, label=""];
16->4 [style = bold, label=""];
19->17 [style = solid, label="c2"];
1->7 [style = dashed, label="0"];
9->13 [style = bold, label=""];
10->11 [style = bold, label=""];
12->2 [style = solid, label="s1"];
}
