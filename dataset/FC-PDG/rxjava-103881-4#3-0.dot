digraph {
3 [style = filled, label = "verify(stringSubscriber,never()).onNext(\"two\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "verify(stringObserver,never()).onComplete()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Observable<String> w = Observable.just(\"one\",\"fail\",\"two\",\"three\",\"fail\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "mapWithError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "verify(stringObserver,times(1)).onError(any())@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "verify(stringObserver,never()).onNext(\"two\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Flowable<String> m = w.map(new Function<String,String>(){@Override public String apply(String s){if (\"fail\".equals(s)) {throw new TestException(\"Forced Failure\")}return s}}).doOnError(new Consumer<Throwable>(){@Override public void accept(Throwable t1){errors.add(t1)}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final List<Throwable> errors = new ArrayList<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final List<Throwable> errors = new ArrayList<Throwable>()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "Observable<String> m = w.map(new Function<String,String>(){@Override public String apply(String s){if (\"fail\".equals(s)) {throw new RuntimeException(\"Forced Failure\")}return s}}).doOnError(new Consumer<Throwable>(){@Override public void accept(Throwable t1){t1.printStackTrace()}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "verify(stringSubscriber,times(1)).onNext(\"one\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "m.subscribe(stringSubscriber)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(stringSubscriber,never()).onNext(\"three\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "m.subscribe(stringObserver)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TestHelper.assertError(errors,0,,\"Forced Failure\")@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "mapWithError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Flowable<String> w = Flowable.just(\"one\",\"fail\",\"two\",\"three\",\"fail\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "mapWithError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "verify(stringSubscriber,never()).onComplete()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verify(stringObserver,never()).onNext(\"three\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "verify(stringObserver,times(1)).onNext(\"one\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "verify(stringSubscriber,times(1)).onError(any())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
8->10 [style = bold, label=""];
19->18 [style = bold, label=""];
5->14 [style = dashed, label="0"];
2->19 [style = dashed, label="0"];
9->0 [style = bold, label=""];
3->21 [style = dashed, label="0"];
6->20 [style = dashed, label="0"];
21->15 [style = bold, label=""];
11->4 [style = bold, label=""];
12->11 [style = bold, label=""];
20->14 [style = bold, label=""];
0->11 [style = dashed, label="0"];
16->17 [style = bold, label=""];
15->19 [style = bold, label=""];
0->10 [style = solid, label="errors"];
6->5 [style = bold, label=""];
1->6 [style = bold, label=""];
3->7 [style = bold, label=""];
0->4 [style = bold, label=""];
7->2 [style = bold, label=""];
11->10 [style = solid, label="errors"];
7->15 [style = dashed, label="0"];
8->18 [style = dashed, label="0"];
4->1 [style = bold, label=""];
17->13 [style = bold, label=""];
4->13 [style = dashed, label="0"];
14->21 [style = bold, label=""];
2->8 [style = bold, label=""];
13->20 [style = bold, label=""];
}
