digraph {
24 [style = filled, label = "mockStatic()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "verify(,streamsMetrics)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final Sensor sensor = ThreadMetrics.createTaskSensor(THREAD_ID,streamsMetrics)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final String totalDescription = \"The total number of calls to process\"@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final String totalDescription = \"The total number of newly created tasks\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@10@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final String operation = \"task-created\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "StreamsMetricsImpl.addRateOfSumAndSumMetricsToSensor(expectedSensor,threadLevelGroup,tagMap,operation,rateDescription,totalDescription)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "final String rateDescription = \"The average per-second number of calls to process\"@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "shouldGetCreateTaskSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "shouldGetProcessRateSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expect(expectedSensor.add(eq(new MetricName(\"process-rate\",threadLevelGroup,\"The average per-second number of calls to process\",tagMap)),anyObject())).andReturn(true)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operationRate,RecordingLevel.INFO)).andReturn(expectedSensor)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "replay(,streamsMetrics)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "verify(,streamsMetrics)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,threadLevelGroup,tagMap,operation,rateDescription,totalDescription)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final Sensor sensor = ThreadMetrics.processRateSensor(THREAD_ID,streamsMetrics)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final String operation = \"process\"@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "shouldGetProcessRateSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "replay(,streamsMetrics,expectedSensor)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "final String rateDescription = \"The average per-second number of newly created tasks\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "expect(expectedSensor.add(eq(new MetricName(\"process-total\",threadLevelGroup,\"The total number of calls to process\",tagMap)),anyObject())).andReturn(true)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "verify(,streamsMetrics)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,\"process-rate\",RecordingLevel.INFO)).andReturn(expectedSensor)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final String operationRate = \"process\" + RATE_SUFFIX@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28->29 [style = bold, label=""];
6->3 [style = bold, label=""];
24->28 [style = bold, label=""];
15->10 [style = bold, label=""];
16->18 [style = bold, label=""];
9->11 [style = bold, label=""];
23->5 [style = bold, label=""];
26->28 [style = solid, label="totalDescription"];
20->26 [style = bold, label=""];
25->23 [style = bold, label=""];
30->20 [style = bold, label=""];
26->25 [style = bold, label=""];
12->15 [style = bold, label=""];
18->12 [style = bold, label=""];
7->0 [style = bold, label=""];
20->28 [style = solid, label="operation"];
5->29 [style = dashed, label="0"];
12->10 [style = solid, label="sensor"];
11->19 [style = bold, label=""];
2->4 [style = bold, label=""];
19->16 [style = solid, label="rateDescription"];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
1->6 [style = bold, label=""];
19->14 [style = bold, label=""];
22->27 [style = bold, label=""];
0->1 [style = bold, label=""];
5->24 [style = bold, label=""];
2->8 [style = solid, label="sensor"];
11->16 [style = solid, label="totalDescription"];
25->28 [style = solid, label="rateDescription"];
4->8 [style = bold, label=""];
14->2 [style = bold, label=""];
17->13 [style = bold, label=""];
13->9 [style = bold, label=""];
29->22 [style = bold, label=""];
22->21 [style = solid, label="sensor"];
27->21 [style = bold, label=""];
2->22 [style = dashed, label="0"];
13->16 [style = solid, label="operation"];
2->16 [style = bold, label=""];
}
