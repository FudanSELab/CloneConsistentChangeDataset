digraph {
79 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
81 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),toSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
107 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),toSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
92 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),toSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),toSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
97 [style = filled, label = "windowStore = buildWindowStore(RETENTION_PERIOD,WINDOW_SIZE,false,Serdes.Integer(),Serdes.String())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3)),segmentDirs(baseDir))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
76 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "setCurrentTime(startTime + increment * 2)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
96 [style = filled, label = "windowStore.flush()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "windowStore.put(5,\"five\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),toSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
106 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),toSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
112 [style = filled, label = "testRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),toSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "windowStore.put(2,\"two\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final long startTime = SEGMENT_INTERVAL * 2@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "windowStore.flush()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),toSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
91 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "windowStore.put(7,\"seven\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"zero\")),toSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
93 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"one\")),toSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "final long increment = SEGMENT_INTERVAL / 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "setCurrentTime(startTime + increment)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"eight\")),toSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "windowStore.put(1,\"one\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
64 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
90 [style = filled, label = "windowStore.init(context,windowStore)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "setCurrentTime(startTime)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "Utils.delete(baseDir)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),toSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"zero\")),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
100 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),toSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
84 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),toSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "testRolling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),toSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "windowStore.put(6,\"six\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "windowStore.put(8,\"eight\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),toSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
104 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),toSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@50@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testRolling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
85 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),toSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@39@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),toSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "context.restore(STORE_NAME,changeLog)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
88 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
105 [style = filled, label = "windowStore.put(3,\"three\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "setCurrentTime(startTime + increment * 3)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "windowStore.put(4,\"four\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "windowStore.put(0,\"zero\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"one\")),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
89 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),toSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),toSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
113 [style = filled, label = "windowStore.put(8,\"eight\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
86 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"eight\")),valuesToSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
95 [style = filled, label = "windowStore.close()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),toSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18->29 [style = solid, label="increment"];
12->38 [style = solid, label="startTime"];
63->72 [style = bold, label=""];
82->60 [style = bold, label=""];
73->82 [style = bold, label=""];
18->50 [style = solid, label="increment"];
12->59 [style = solid, label="startTime"];
18->26 [style = solid, label="increment"];
14->25 [style = bold, label=""];
56->52 [style = bold, label=""];
100->113 [style = bold, label=""];
12->73 [style = solid, label="startTime"];
18->110 [style = solid, label="increment"];
1->64 [style = dashed, label="0"];
12->86 [style = solid, label="startTime"];
12->46 [style = solid, label="startTime"];
89->83 [style = bold, label=""];
101->105 [style = bold, label=""];
12->66 [style = solid, label="startTime"];
94->98 [style = bold, label=""];
18->83 [style = solid, label="increment"];
48->59 [style = dashed, label="0"];
26->34 [style = bold, label=""];
99->94 [style = bold, label=""];
97->90 [style = solid, label="windowStore"];
105->26 [style = bold, label=""];
8->99 [style = dashed, label="0"];
10->53 [style = bold, label=""];
18->86 [style = solid, label="increment"];
18->13 [style = solid, label="increment"];
18->88 [style = solid, label="increment"];
12->17 [style = solid, label="startTime"];
12->77 [style = solid, label="startTime"];
17->70 [style = bold, label=""];
18->53 [style = solid, label="increment"];
18->63 [style = solid, label="increment"];
47->10 [style = bold, label=""];
98->29 [style = bold, label=""];
18->25 [style = solid, label="increment"];
12->26 [style = solid, label="startTime"];
85->86 [style = bold, label=""];
12->8 [style = solid, label="startTime"];
6->69 [style = bold, label=""];
8->40 [style = bold, label=""];
5->77 [style = dashed, label="0"];
18->49 [style = solid, label="increment"];
12->100 [style = solid, label="startTime"];
19->66 [style = dashed, label="0"];
18->55 [style = solid, label="increment"];
17->106 [style = bold, label=""];
111->97 [style = bold, label=""];
47->88 [style = dashed, label="0"];
2->23 [style = bold, label=""];
18->4 [style = solid, label="increment"];
32->78 [style = dashed, label="0"];
38->7 [style = bold, label=""];
1->21 [style = bold, label=""];
18->21 [style = solid, label="increment"];
12->91 [style = solid, label="startTime"];
6->11 [style = bold, label=""];
12->21 [style = solid, label="startTime"];
81->79 [style = bold, label=""];
31->30 [style = bold, label=""];
12->18 [style = bold, label=""];
29->14 [style = bold, label=""];
76->81 [style = bold, label=""];
45->42 [style = bold, label=""];
18->14 [style = solid, label="increment"];
18->17 [style = solid, label="increment"];
18->52 [style = solid, label="increment"];
9->71 [style = dashed, label="0"];
18->20 [style = solid, label="increment"];
12->72 [style = solid, label="startTime"];
104->109 [style = bold, label=""];
12->11 [style = solid, label="startTime"];
18->27 [style = solid, label="increment"];
20->61 [style = dashed, label="0"];
18->64 [style = solid, label="increment"];
18->84 [style = solid, label="increment"];
35->83 [style = dashed, label="0"];
45->82 [style = dashed, label="0"];
33->106 [style = dashed, label="0"];
2->87 [style = dashed, label="0"];
27->2 [style = bold, label=""];
16->9 [style = bold, label=""];
54->26 [style = bold, label=""];
12->13 [style = solid, label="startTime"];
18->1 [style = solid, label="increment"];
28->76 [style = dashed, label="0"];
12->35 [style = solid, label="startTime"];
21->65 [style = dashed, label="0"];
0->92 [style = dashed, label="0"];
12->102 [style = solid, label="startTime"];
12->0 [style = solid, label="startTime"];
18->31 [style = bold, label=""];
18->100 [style = solid, label="increment"];
18->75 [style = solid, label="increment"];
18->80 [style = solid, label="increment"];
18->106 [style = solid, label="increment"];
18->3 [style = solid, label="increment"];
12->33 [style = solid, label="startTime"];
0->72 [style = dashed, label="0"];
12->16 [style = solid, label="startTime"];
15->67 [style = bold, label=""];
80->78 [style = bold, label=""];
12->29 [style = solid, label="startTime"];
12->28 [style = solid, label="startTime"];
12->36 [style = solid, label="startTime"];
18->5 [style = solid, label="increment"];
12->70 [style = solid, label="startTime"];
18->68 [style = solid, label="increment"];
12->106 [style = solid, label="startTime"];
65->85 [style = bold, label=""];
12->27 [style = solid, label="startTime"];
49->73 [style = dashed, label="0"];
11->69 [style = dashed, label="0"];
14->86 [style = dashed, label="0"];
58->54 [style = bold, label=""];
18->43 [style = solid, label="increment"];
18->39 [style = solid, label="increment"];
3->0 [style = bold, label=""];
12->99 [style = solid, label="startTime"];
12->4 [style = solid, label="startTime"];
12->83 [style = solid, label="startTime"];
12->110 [style = solid, label="startTime"];
60->77 [style = bold, label=""];
36->67 [style = dashed, label="0"];
12->31 [style = solid, label="startTime"];
12->69 [style = solid, label="startTime"];
12->63 [style = solid, label="startTime"];
12->48 [style = solid, label="startTime"];
20->8 [style = bold, label=""];
70->59 [style = bold, label=""];
21->29 [style = bold, label=""];
18->78 [style = solid, label="increment"];
20->93 [style = dashed, label="0"];
12->88 [style = solid, label="startTime"];
18->33 [style = solid, label="increment"];
91->108 [style = bold, label=""];
61->8 [style = bold, label=""];
12->61 [style = solid, label="startTime"];
12->68 [style = solid, label="startTime"];
95->111 [style = bold, label=""];
57->6 [style = bold, label=""];
40->17 [style = bold, label=""];
108->93 [style = bold, label=""];
22->101 [style = bold, label=""];
39->108 [style = dashed, label="0"];
12->98 [style = solid, label="startTime"];
43->33 [style = bold, label=""];
12->5 [style = solid, label="startTime"];
12->71 [style = solid, label="startTime"];
12->65 [style = solid, label="startTime"];
18->73 [style = solid, label="increment"];
74->61 [style = bold, label=""];
18->81 [style = solid, label="increment"];
34->38 [style = bold, label=""];
39->74 [style = dashed, label="0"];
48->28 [style = bold, label=""];
109->96 [style = bold, label=""];
39->20 [style = bold, label=""];
110->102 [style = bold, label=""];
18->82 [style = solid, label="increment"];
18->2 [style = solid, label="increment"];
12->92 [style = solid, label="startTime"];
12->104 [style = solid, label="startTime"];
18->16 [style = solid, label="increment"];
15->36 [style = bold, label=""];
12->75 [style = solid, label="startTime"];
18->71 [style = solid, label="increment"];
18->93 [style = solid, label="increment"];
49->45 [style = bold, label=""];
78->88 [style = bold, label=""];
18->38 [style = solid, label="increment"];
67->75 [style = bold, label=""];
18->7 [style = solid, label="increment"];
18->23 [style = solid, label="increment"];
33->89 [style = dashed, label="0"];
18->32 [style = solid, label="increment"];
86->25 [style = bold, label=""];
12->10 [style = solid, label="startTime"];
0->43 [style = bold, label=""];
12->78 [style = solid, label="startTime"];
35->39 [style = bold, label=""];
18->48 [style = solid, label="increment"];
18->79 [style = solid, label="increment"];
8->92 [style = bold, label=""];
23->32 [style = bold, label=""];
15->53 [style = bold, label=""];
112->12 [style = bold, label=""];
18->74 [style = solid, label="increment"];
12->24 [style = solid, label="startTime"];
18->101 [style = solid, label="increment"];
13->81 [style = dashed, label="0"];
18->54 [style = solid, label="increment"];
35->91 [style = dashed, label="0"];
18->77 [style = solid, label="increment"];
12->101 [style = solid, label="startTime"];
18->10 [style = solid, label="increment"];
52->22 [style = bold, label=""];
12->25 [style = solid, label="startTime"];
12->64 [style = solid, label="startTime"];
37->66 [style = bold, label=""];
113->103 [style = bold, label=""];
4->79 [style = dashed, label="0"];
19->16 [style = bold, label=""];
27->75 [style = dashed, label="0"];
12->76 [style = solid, label="startTime"];
53->37 [style = bold, label=""];
12->42 [style = solid, label="startTime"];
71->73 [style = bold, label=""];
12->14 [style = solid, label="startTime"];
12->74 [style = solid, label="startTime"];
12->45 [style = solid, label="startTime"];
12->52 [style = solid, label="startTime"];
12->60 [style = solid, label="startTime"];
12->81 [style = solid, label="startTime"];
18->89 [style = solid, label="increment"];
18->102 [style = solid, label="increment"];
22->58 [style = bold, label=""];
11->3 [style = bold, label=""];
92->17 [style = bold, label=""];
66->84 [style = bold, label=""];
46->110 [style = bold, label=""];
12->19 [style = solid, label="startTime"];
6->100 [style = bold, label=""];
50->57 [style = bold, label=""];
64->65 [style = bold, label=""];
18->35 [style = solid, label="increment"];
90->20 [style = bold, label=""];
12->84 [style = solid, label="startTime"];
12->7 [style = solid, label="startTime"];
18->57 [style = solid, label="increment"];
42->60 [style = dashed, label="0"];
29->85 [style = dashed, label="0"];
88->10 [style = bold, label=""];
7->15 [style = bold, label=""];
84->71 [style = bold, label=""];
18->65 [style = solid, label="increment"];
18->99 [style = solid, label="increment"];
4->1 [style = bold, label=""];
59->76 [style = bold, label=""];
41->12 [style = bold, label=""];
43->68 [style = dashed, label="0"];
9->49 [style = bold, label=""];
12->20 [style = solid, label="startTime"];
97->90 [style = bold, label=""];
12->108 [style = solid, label="startTime"];
18->104 [style = solid, label="increment"];
18->109 [style = solid, label="increment"];
18->9 [style = solid, label="increment"];
12->47 [style = solid, label="startTime"];
37->57 [style = bold, label=""];
12->54 [style = solid, label="startTime"];
12->32 [style = solid, label="startTime"];
12->3 [style = solid, label="startTime"];
33->35 [style = bold, label=""];
12->50 [style = solid, label="startTime"];
12->82 [style = solid, label="startTime"];
12->85 [style = solid, label="startTime"];
18->42 [style = solid, label="increment"];
18->61 [style = solid, label="increment"];
18->92 [style = solid, label="increment"];
12->39 [style = solid, label="startTime"];
18->72 [style = solid, label="increment"];
12->109 [style = solid, label="startTime"];
12->2 [style = solid, label="startTime"];
23->80 [style = dashed, label="0"];
24->70 [style = dashed, label="0"];
34->7 [style = bold, label=""];
28->13 [style = bold, label=""];
18->87 [style = solid, label="increment"];
96->107 [style = bold, label=""];
18->59 [style = solid, label="increment"];
25->46 [style = bold, label=""];
12->55 [style = solid, label="startTime"];
18->76 [style = solid, label="increment"];
12->57 [style = solid, label="startTime"];
46->107 [style = dashed, label="0"];
75->87 [style = bold, label=""];
18->60 [style = solid, label="increment"];
12->53 [style = solid, label="startTime"];
55->56 [style = bold, label=""];
12->43 [style = solid, label="startTime"];
3->63 [style = dashed, label="0"];
16->84 [style = dashed, label="0"];
30->51 [style = bold, label=""];
30->55 [style = bold, label=""];
18->45 [style = solid, label="increment"];
17->24 [style = bold, label=""];
18->46 [style = solid, label="increment"];
36->27 [style = bold, label=""];
32->47 [style = bold, label=""];
79->64 [style = bold, label=""];
62->12 [style = bold, label=""];
51->55 [style = bold, label=""];
12->23 [style = solid, label="startTime"];
68->89 [style = bold, label=""];
12->9 [style = solid, label="startTime"];
12->87 [style = solid, label="startTime"];
18->85 [style = solid, label="increment"];
83->74 [style = bold, label=""];
18->8 [style = solid, label="increment"];
18->91 [style = solid, label="increment"];
18->108 [style = solid, label="increment"];
44->52 [style = bold, label=""];
87->80 [style = bold, label=""];
106->91 [style = bold, label=""];
18->28 [style = solid, label="increment"];
12->49 [style = solid, label="startTime"];
102->104 [style = bold, label=""];
12->93 [style = solid, label="startTime"];
37->19 [style = bold, label=""];
42->5 [style = bold, label=""];
18->0 [style = solid, label="increment"];
12->1 [style = solid, label="startTime"];
12->80 [style = solid, label="startTime"];
5->50 [style = bold, label=""];
12->79 [style = solid, label="startTime"];
72->68 [style = bold, label=""];
18->47 [style = solid, label="increment"];
93->99 [style = bold, label=""];
56->44 [style = bold, label=""];
24->48 [style = bold, label=""];
77->50 [style = bold, label=""];
69->63 [style = bold, label=""];
103->95 [style = bold, label=""];
12->67 [style = solid, label="startTime"];
12->89 [style = solid, label="startTime"];
13->4 [style = bold, label=""];
}
