digraph {
19 [style = filled, label = "totalCoordinatingBytes.getAndAdd(bytes)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "long bytes@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long combinedBytes = this.currentCombinedCoordinatingAndPrimaryBytes.addAndGet(bytes)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "markCoordinatingOperationStarted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return null@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "long bytesWithoutOperation = combinedBytes - bytes@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of coordinating operation (\" + \"coordinating_and_primary_bytes=\" + bytesWithoutOperation + \", \" + \"replica_bytes=\" + replicaWriteBytes + \", \" + \"all_bytes=\" + totalBytesWithoutOperation + \", \" + \"operation_bytes=\" + bytes + \", \" + \"max_coordinating_and_primary_bytes=\" + primaryAndCoordinatingLimits + \"(\",false)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "this.currentCombinedCoordinatingAndPrimaryBytes.getAndAdd(-bytes)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "currentCoordinatingBytes.getAndAdd(bytes)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "long bytes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "markPrimaryOperationStarted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "this.coordinatingRejections.getAndIncrement()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "totalCombinedCoordinatingAndPrimaryBytes.getAndAdd(bytes)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "long totalBytes = combinedBytes + replicaWriteBytes@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "totalPrimaryBytes.getAndAdd(bytes)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "forceExecution == false && totalBytes > primaryAndCoordinatingLimits@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of primary operation (\" + \"coordinating_and_primary_bytes=\" + bytesWithoutOperation + \", \" + \"replica_bytes=\" + replicaWriteBytes + \", \" + \"all_bytes=\" + totalBytesWithoutOperation + \", \" + \"primary_operation_bytes=\" + bytes + \", \" + \"max_coordinating_and_primary_bytes=\" + primaryAndCoordinatingLimits + \"(\",false)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "long replicaWriteBytes = this.currentReplicaBytes.get()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of primary operation (\" + \"coordinating_and_primary_bytes=\" + bytesWithoutOperation + \", \" + \"replica_bytes=\" + replicaWriteBytes + \", \" + \"all_bytes=\" + totalBytesWithoutOperation + \", \" + \"operation_bytes=\" + bytes + \", \" + \"max_coordinating_and_primary_bytes=\" + primaryAndCoordinatingLimits + \"(\",false)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "this.primaryRejections.getAndIncrement()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "long bytes@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "long totalBytesWithoutOperation = totalBytes - bytes@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "currentPrimaryBytes.getAndAdd(bytes)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "totalBytes > primaryAndCoordinatingLimits@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "markPrimaryOperationStarted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "boolean forceExecution@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7->15 [style = solid, label="bytesWithoutOperation"];
8->16 [style = bold, label=""];
15->10 [style = bold, label=""];
1->19 [style = dashed, label="0"];
4->1 [style = solid, label="bytes"];
4->10 [style = solid, label="bytes"];
6->24 [style = solid, label="replicaWriteBytes"];
7->16 [style = solid, label="bytesWithoutOperation"];
7->14 [style = bold, label=""];
4->25 [style = dashed, label="0"];
4->7 [style = solid, label="bytes"];
21->24 [style = dotted, label="true"];
19->9 [style = bold, label=""];
21->7 [style = dotted, label="true"];
10->20 [style = dashed, label="0"];
11->8 [style = dotted, label="true"];
6->0 [style = solid, label="replicaWriteBytes"];
23->12 [style = bold, label=""];
13->22 [style = bold, label=""];
3->2 [style = solid, label="bytes"];
11->15 [style = dotted, label="true"];
17->11 [style = solid, label="forceExecution"];
12->0 [style = solid, label="combinedBytes"];
11->21 [style = dashed, label="0"];
11->7 [style = dotted, label="true"];
7->24 [style = solid, label="bytesWithoutOperation"];
15->16 [style = dashed, label="0"];
11->14 [style = dotted, label="true"];
18->12 [style = bold, label=""];
21->22 [style = dotted, label="true"];
0->21 [style = bold, label=""];
11->13 [style = dotted, label="true"];
5->3 [style = dotted, label="true"];
6->16 [style = solid, label="replicaWriteBytes"];
25->7 [style = solid, label="bytes"];
5->4 [style = dotted, label="true"];
25->12 [style = solid, label="bytes"];
24->20 [style = bold, label=""];
3->12 [style = solid, label="bytes"];
6->15 [style = solid, label="replicaWriteBytes"];
3->10 [style = solid, label="bytes"];
3->15 [style = solid, label="bytes"];
4->16 [style = solid, label="bytes"];
11->16 [style = dotted, label="true"];
21->7 [style = bold, label=""];
21->13 [style = dotted, label="true"];
25->20 [style = solid, label="bytes"];
10->2 [style = bold, label=""];
18->17 [style = dotted, label="true"];
4->11 [style = solid, label="forceExecution"];
8->15 [style = bold, label=""];
2->1 [style = bold, label=""];
15->24 [style = dashed, label="0"];
0->11 [style = bold, label=""];
3->14 [style = solid, label="bytes"];
1->9 [style = bold, label=""];
4->14 [style = solid, label="bytes"];
14->16 [style = solid, label="totalBytesWithoutOperation"];
4->2 [style = solid, label="bytes"];
8->22 [style = dashed, label="0"];
11->10 [style = bold, label=""];
25->2 [style = solid, label="bytes"];
25->19 [style = solid, label="bytes"];
0->14 [style = solid, label="totalBytes"];
14->13 [style = bold, label=""];
25->14 [style = solid, label="bytes"];
3->1 [style = solid, label="bytes"];
23->25 [style = dotted, label="true"];
3->7 [style = solid, label="bytes"];
0->11 [style = solid, label="totalBytes"];
2->19 [style = bold, label=""];
25->24 [style = solid, label="bytes"];
4->12 [style = solid, label="bytes"];
16->10 [style = bold, label=""];
6->0 [style = bold, label=""];
0->21 [style = solid, label="totalBytes"];
12->6 [style = bold, label=""];
20->2 [style = bold, label=""];
12->7 [style = solid, label="combinedBytes"];
21->20 [style = bold, label=""];
14->15 [style = solid, label="totalBytesWithoutOperation"];
5->12 [style = bold, label=""];
21->14 [style = dotted, label="true"];
14->24 [style = solid, label="totalBytesWithoutOperation"];
18->4 [style = dotted, label="true"];
22->24 [style = bold, label=""];
13->8 [style = bold, label=""];
11->7 [style = bold, label=""];
}
