digraph {
2 [style = filled, label = "String key = ConfigConsts.CONFIG_FILE_CONTENT_KEY@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String someKey = \"someKey\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(someValue,configFile.getContent())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(configFile.getContent().contains(String.format(\"%s=%s\",someKey,anotherValue)))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "configFile.addChangeListener(someListener)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "ConfigFileChangeListener someListener = new ConfigFileChangeListener(){@Override public void onChange(ConfigFileChangeEvent changeEvent){configFileChangeFuture.set(changeEvent)}}@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "anotherProperties.setProperty(someKey,anotherValue)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(configFile.getContent().contains(String.format(\"%s=%s\",someKey,someValue)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String anotherValue = \"anotherValue\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testOnRepositoryChange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "PropertiesConfigFile configFile = new PropertiesConfigFile(someNamespace,configRepository)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(PropertyChangeType.MODIFIED,changeEvent.getChangeType())@@@27@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "XmlConfigFile configFile = new XmlConfigFile(someNamespace,configRepository)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Properties anotherProperties = new Properties()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Properties someProperties = new Properties()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ConfigFileChangeEvent changeEvent = configFileChangeFuture.get(500,TimeUnit.MILLISECONDS)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(anotherValue,configFile.getContent())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(someNamespace,changeEvent.getNamespace())@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testOnRepositoryChange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "final SettableFuture<ConfigFileChangeEvent> configFileChangeFuture = SettableFuture.create()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "someProperties.setProperty(key,someValue)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "anotherProperties.setProperty(key,anotherValue)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "someProperties.setProperty(someKey,someValue)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(anotherValue,changeEvent.getNewValue())@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testOnRepositoryChange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "configFile.onRepositoryChange(someNamespace,anotherProperties)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(someValue,changeEvent.getOldValue())@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertFalse(configFile.getContent().contains(String.format(\"%s=%s\",someKey,someValue)))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String someValue = \"someValue\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->29 [style = bold, label=""];
12->26 [style = bold, label=""];
26->24 [style = bold, label=""];
5->0 [style = solid, label="anotherValue"];
8->4 [style = solid, label="someValue"];
15->9 [style = bold, label=""];
8->5 [style = bold, label=""];
27->12 [style = bold, label=""];
0->29 [style = dashed, label="0"];
25->23 [style = solid, label="someKey"];
8->1 [style = solid, label="someValue"];
5->9 [style = solid, label="anotherValue"];
1->12 [style = bold, label=""];
17->19 [style = bold, label=""];
5->1 [style = bold, label=""];
18->13 [style = bold, label=""];
8->24 [style = solid, label="someValue"];
25->24 [style = solid, label="someKey"];
28->23 [style = bold, label=""];
11->9 [style = bold, label=""];
25->29 [style = solid, label="someKey"];
11->15 [style = bold, label=""];
9->21 [style = bold, label=""];
5->29 [style = solid, label="anotherValue"];
0->11 [style = bold, label=""];
2->8 [style = bold, label=""];
9->28 [style = dashed, label="0"];
12->10 [style = bold, label=""];
0->20 [style = bold, label=""];
7->12 [style = solid, label="someProperties"];
8->27 [style = solid, label="someValue"];
2->0 [style = solid, label="key"];
1->27 [style = dashed, label="0"];
19->11 [style = bold, label=""];
2->1 [style = solid, label="key"];
5->13 [style = solid, label="anotherValue"];
10->4 [style = bold, label=""];
21->18 [style = bold, label=""];
3->0 [style = bold, label=""];
22->7 [style = bold, label=""];
24->3 [style = bold, label=""];
5->27 [style = bold, label=""];
7->25 [style = bold, label=""];
20->17 [style = bold, label=""];
16->7 [style = bold, label=""];
25->8 [style = bold, label=""];
5->23 [style = solid, label="anotherValue"];
10->26 [style = dashed, label="0"];
25->27 [style = solid, label="someKey"];
25->28 [style = solid, label="someKey"];
8->18 [style = solid, label="someValue"];
6->7 [style = bold, label=""];
13->14 [style = bold, label=""];
11->28 [style = bold, label=""];
8->28 [style = solid, label="someValue"];
3->11 [style = solid, label="anotherProperties"];
4->3 [style = bold, label=""];
17->19 [style = solid, label="someListener"];
29->11 [style = bold, label=""];
4->24 [style = dashed, label="0"];
7->2 [style = bold, label=""];
}
