digraph {
50 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "final KTable<Integer,String> table2 = builder.table(topic2,consumed)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "int i = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final KTable<Integer,String> joined = table1.leftJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int i = 0@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cba941@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "driver.flushState()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i++@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "driver.flushState()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int i = 0@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "getter.init(driver.context())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,\"X2+null\"),kv(3,\"X3+null\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i < 2@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(streamTopic,tableTopic)),copartitionGroups.iterator().next())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i++@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "driver.flushState()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "driver.setTime(0L)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "joined.toStream().process(supplier)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "i < 2@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "driver.flushState()@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final KTable<Integer,String> table1 = builder.table(topic1,consumed)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "driver.flushState()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "shouldRequireCopartitionedStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "driver.flushState()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "@SuppressWarnings(\"unchecked\") final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "i < 2@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "driver.setUp(builder,stateDir)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "driver.flushState()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "i++@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@70@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
54->55 [style = bold, label=""];
28->6 [style = bold, label=""];
46->34 [style = bold, label=""];
42->45 [style = bold, label=""];
21->41 [style = solid, label="i"];
5->19 [style = dotted, label="true"];
32->13 [style = solid, label="i"];
40->13 [style = dotted, label="true"];
1->27 [style = bold, label=""];
29->0 [style = bold, label=""];
8->48 [style = solid, label="supplier"];
5->28 [style = bold, label=""];
40->13 [style = bold, label=""];
59->61 [style = bold, label=""];
9->53 [style = solid, label="i"];
14->7 [style = bold, label=""];
19->5 [style = bold, label=""];
38->30 [style = bold, label=""];
12->10 [style = bold, label=""];
23->52 [style = bold, label=""];
2->36 [style = bold, label=""];
37->32 [style = bold, label=""];
16->42 [style = bold, label=""];
58->59 [style = bold, label=""];
21->53 [style = solid, label="i"];
27->33 [style = bold, label=""];
0->46 [style = solid, label="builder"];
4->16 [style = bold, label=""];
57->46 [style = bold, label=""];
26->19 [style = solid, label="i"];
44->21 [style = bold, label=""];
22->46 [style = bold, label=""];
21->41 [style = bold, label=""];
19->47 [style = solid, label="i"];
40->35 [style = dotted, label="true"];
41->53 [style = bold, label=""];
35->40 [style = bold, label=""];
18->20 [style = bold, label=""];
49->1 [style = bold, label=""];
17->2 [style = bold, label=""];
41->53 [style = dotted, label="true"];
40->3 [style = bold, label=""];
27->33 [style = solid, label="table2"];
39->51 [style = solid, label="getter"];
41->38 [style = bold, label=""];
26->47 [style = solid, label="i"];
39->4 [style = solid, label="getter"];
33->8 [style = bold, label=""];
39->37 [style = bold, label=""];
22->57 [style = dashed, label="0"];
10->18 [style = bold, label=""];
30->24 [style = bold, label=""];
24->12 [style = bold, label=""];
39->20 [style = solid, label="getter"];
41->9 [style = dotted, label="true"];
25->39 [style = bold, label=""];
49->13 [style = solid, label="expectedKeys"];
32->40 [style = solid, label="i"];
52->61 [style = dashed, label="0"];
32->35 [style = solid, label="i"];
7->4 [style = bold, label=""];
39->50 [style = solid, label="getter"];
52->22 [style = bold, label=""];
21->9 [style = solid, label="i"];
6->15 [style = bold, label=""];
35->13 [style = solid, label="i"];
48->31 [style = bold, label=""];
60->58 [style = bold, label=""];
49->47 [style = solid, label="expectedKeys"];
39->24 [style = solid, label="getter"];
0->49 [style = bold, label=""];
43->14 [style = bold, label=""];
32->40 [style = bold, label=""];
3->17 [style = bold, label=""];
51->43 [style = bold, label=""];
49->53 [style = solid, label="expectedKeys"];
53->9 [style = bold, label=""];
11->54 [style = bold, label=""];
34->25 [style = bold, label=""];
31->23 [style = bold, label=""];
39->36 [style = solid, label="getter"];
26->5 [style = bold, label=""];
56->0 [style = bold, label=""];
36->26 [style = bold, label=""];
9->41 [style = solid, label="i"];
35->40 [style = solid, label="i"];
5->47 [style = bold, label=""];
9->41 [style = bold, label=""];
8->48 [style = bold, label=""];
55->44 [style = bold, label=""];
26->5 [style = solid, label="i"];
5->47 [style = dotted, label="true"];
50->11 [style = bold, label=""];
19->5 [style = solid, label="i"];
45->50 [style = bold, label=""];
47->19 [style = bold, label=""];
39->44 [style = solid, label="getter"];
52->57 [style = bold, label=""];
13->35 [style = bold, label=""];
15->51 [style = bold, label=""];
}
