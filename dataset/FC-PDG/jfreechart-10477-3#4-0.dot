digraph {
28 [style = filled, label = "int h2 = t2.hashCode()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "t2.setPadding(new RectangleInsets(1.0,2.0,3.0,4.0))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(t1.equals(t2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "CompositeTitle t1 = new CompositeTitle(new BlockContainer())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(t1.equals(t2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "CategoryTick t1 = new CategoryTick(c1,tb1,tba1,ta1,1.0f)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "t1.getContainer().add(new TextTitle(\"T1\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "t1.setFrame(new BlockBorder(Color.red))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "CompositeTitle t2 = new CompositeTitle(new BlockContainer())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "TextBlockAnchor tba1 = TextBlockAnchor.CENTER@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "TextBlock tb1 = new TextBlock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(t1.equals(t2))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "t2.setFrame(new BlockBorder(Color.red))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertTrue(t1.equals(t2))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(t1,t2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFalse(t1.equals(t2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(t1.equals(t2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "t1.setPadding(new RectangleInsets(1.0,2.0,3.0,4.0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "t2.setBorder(new BlockBorder(Color.red))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "t1.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testHashCode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "t1.setMargin(new RectangleInsets(1.0,2.0,3.0,4.0))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Comparable c1 = \"C1\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "int h1 = t1.hashCode()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "t2.setMargin(new RectangleInsets(1.0,2.0,3.0,4.0))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "t2.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "CategoryTick t2 = new CategoryTick(c1,tb1,tba1,ta1,1.0f)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "tb1.addLine(new TextLine(\"Block 2\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertTrue(t1.equals(t2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(t2,t1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertFalse(t1.equals(t2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(t1.equals(t2))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "t2.getContainer().add(new TextTitle(\"T1\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(h1,h2)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(t1.equals(t2))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "TextAnchor ta1 = TextAnchor.CENTER@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "tb1.addLine(new TextLine(\"Block 1\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertFalse(t1.equals(t2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->22 [style = bold, label=""];
17->10 [style = bold, label=""];
19->18 [style = bold, label=""];
17->26 [style = bold, label=""];
7->20 [style = solid, label="t2"];
35->33 [style = solid, label="tb1"];
21->0 [style = bold, label=""];
27->0 [style = bold, label=""];
28->30 [style = bold, label=""];
7->17 [style = solid, label="t2"];
4->6 [style = bold, label=""];
39->30 [style = solid, label="h1"];
7->4 [style = solid, label="t2"];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
38->29 [style = bold, label=""];
34->33 [style = bold, label=""];
36->31 [style = bold, label=""];
7->14 [style = solid, label="t2"];
7->16 [style = solid, label="t2"];
31->37 [style = solid, label="c1"];
34->37 [style = solid, label="ta1"];
7->5 [style = solid, label="t2"];
35->32 [style = bold, label=""];
37->3 [style = solid, label="t2"];
20->14 [style = bold, label=""];
7->20 [style = bold, label=""];
16->23 [style = bold, label=""];
29->34 [style = bold, label=""];
7->15 [style = solid, label="t2"];
34->33 [style = solid, label="ta1"];
25->17 [style = bold, label=""];
39->28 [style = bold, label=""];
26->22 [style = bold, label=""];
1->11 [style = bold, label=""];
37->3 [style = bold, label=""];
0->7 [style = bold, label=""];
6->2 [style = bold, label=""];
8->1 [style = bold, label=""];
24->16 [style = bold, label=""];
32->38 [style = bold, label=""];
10->26 [style = dashed, label="0"];
29->33 [style = solid, label="tba1"];
28->30 [style = solid, label="h2"];
7->22 [style = solid, label="t2"];
7->8 [style = solid, label="t2"];
31->35 [style = bold, label=""];
5->12 [style = bold, label=""];
0->20 [style = solid, label="t1"];
29->37 [style = solid, label="tba1"];
12->8 [style = bold, label=""];
7->2 [style = solid, label="t2"];
18->5 [style = bold, label=""];
23->19 [style = bold, label=""];
11->13 [style = bold, label=""];
7->19 [style = solid, label="t2"];
31->33 [style = solid, label="c1"];
3->17 [style = bold, label=""];
3->39 [style = bold, label=""];
14->9 [style = bold, label=""];
13->15 [style = bold, label=""];
0->14 [style = solid, label="t1"];
22->24 [style = bold, label=""];
33->37 [style = bold, label=""];
2->25 [style = bold, label=""];
35->37 [style = solid, label="tb1"];
7->11 [style = solid, label="t2"];
3->25 [style = dashed, label="0"];
}
