digraph {
24 [style = filled, label = "out.writeObject(POS_DELETE_FILE.copy())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "out.writeObject(manifest)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i += 1@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "out.writeObject(EQ_DELETE_FILE.copy())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testJavaSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assertions.assertThat(obj).as(\"Should be a ManifestFile\").isInstanceOf()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "ByteArrayOutputStream bytes = new ByteArrayOutputStream()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "i < 2@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int i = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Object obj = in.readObject()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertTrue(\"Should be a equality DeleteFile\",obj instanceof DeleteFile)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ManifestFile manifest = writeManifest(FILE_A,FILE_B)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "out.writeObject(GenericManifestFile.copyOf(manifest).build())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i < 3@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i < 2@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "out.writeObject(manifest.copy())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i < 2@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "i += 1@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i += 1@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "out.writeObject(DATA_FILE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int i = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TestHelpers.assertEquals(DATA_FILE,(DataFile)obj)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "int i = 0@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "out.writeObject(EQ_DELETE_FILE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "out.writeObject(DATA_FILE.copy())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testJavaSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "testJavaSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TestHelpers.assertEquals(POS_DELETE_FILE,(DeleteFile)obj)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Object obj = in.readObject()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertTrue(\"Should be a position DeleteFile\",obj instanceof DeleteFile)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Object obj = in.readObject()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "TestHelpers.assertEquals(EQ_DELETE_FILE,(DeleteFile)obj)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int i = 0@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertTrue(\"Should be a ManifestFile\",obj instanceof ManifestFile)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "out.writeObject(POS_DELETE_FILE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "i += 1@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertTrue(\"Should be a DataFile\",obj instanceof DataFile)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
6->35 [style = bold, label=""];
4->1 [style = dotted, label="true"];
21->18 [style = dotted, label="true"];
36->29 [style = bold, label=""];
21->15 [style = bold, label=""];
9->27 [style = dashed, label="0"];
9->10 [style = bold, label=""];
30->6 [style = bold, label=""];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
3->4 [style = solid, label="i"];
2->23 [style = bold, label=""];
35->1 [style = dotted, label="true"];
21->31 [style = bold, label=""];
15->16 [style = solid, label="i"];
6->11 [style = bold, label=""];
24->17 [style = bold, label=""];
35->22 [style = dotted, label="true"];
34->22 [style = solid, label="obj"];
27->25 [style = bold, label=""];
29->16 [style = solid, label="i"];
35->20 [style = bold, label=""];
20->21 [style = solid, label="i"];
16->26 [style = bold, label=""];
1->35 [style = bold, label=""];
12->1 [style = bold, label=""];
34->28 [style = solid, label="obj"];
16->33 [style = dotted, label="true"];
1->22 [style = dashed, label="0"];
25->24 [style = bold, label=""];
21->31 [style = dotted, label="true"];
6->1 [style = solid, label="obj"];
33->36 [style = bold, label=""];
14->18 [style = bold, label=""];
35->34 [style = bold, label=""];
29->16 [style = bold, label=""];
31->14 [style = solid, label="obj"];
4->35 [style = dashed, label="0"];
4->5 [style = dotted, label="true"];
16->36 [style = dotted, label="true"];
4->11 [style = dotted, label="true"];
26->36 [style = solid, label="obj"];
6->35 [style = solid, label="i"];
31->19 [style = solid, label="obj"];
1->35 [style = solid, label="i"];
34->28 [style = bold, label=""];
19->14 [style = bold, label=""];
5->4 [style = bold, label=""];
22->1 [style = bold, label=""];
18->21 [style = bold, label=""];
4->12 [style = dotted, label="true"];
16->29 [style = dotted, label="true"];
31->19 [style = bold, label=""];
26->33 [style = solid, label="obj"];
28->22 [style = bold, label=""];
10->25 [style = dashed, label="0"];
13->2 [style = bold, label=""];
6->12 [style = bold, label=""];
7->8 [style = solid, label="manifest"];
4->6 [style = dotted, label="true"];
23->27 [style = bold, label=""];
4->6 [style = bold, label=""];
11->1 [style = bold, label=""];
5->4 [style = solid, label="i"];
0->2 [style = bold, label=""];
10->3 [style = bold, label=""];
17->30 [style = bold, label=""];
11->12 [style = dashed, label="0"];
15->16 [style = bold, label=""];
32->2 [style = bold, label=""];
16->26 [style = dotted, label="true"];
20->21 [style = bold, label=""];
11->28 [style = dashed, label="0"];
7->1 [style = solid, label="manifest"];
21->19 [style = dotted, label="true"];
18->21 [style = solid, label="i"];
8->9 [style = bold, label=""];
21->14 [style = dotted, label="true"];
6->11 [style = solid, label="obj"];
35->34 [style = dotted, label="true"];
35->28 [style = dotted, label="true"];
2->7 [style = bold, label=""];
26->33 [style = bold, label=""];
8->23 [style = dashed, label="0"];
}
