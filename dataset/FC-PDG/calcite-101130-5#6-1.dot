digraph {
1 [style = filled, label = "testPullUpPredicatesFromAggregation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(pulledUpPredicates.size(),is(1))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final RexLiteral constant = (RexLiteral)call.getOperands().get(1)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final RelMetadataQuery mq = rel.getCluster().getMetadataQuery()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(pulledUpPredicates,sortsAs(\"(=($0, 1)(\"))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String sql = \"select a, max(b) from (\" + \" select empno as a, sal as b from emp where empno = 5)subq\" + \"group by a\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(call.getOperands().size(),is(2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testAllPredicatesAggregate1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final String sql = \"select a, max(b) from (\" + \" select 1 as a, 2 as b from emp)subq\" + \"group by a\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(inputRef1.getIndex(),is(0))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(constant.toString(),is(\"5\"))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "RelOptPredicateList inputSet = mq.getPulledUpPredicates(rel)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(inputRef1.getQualifiedName().equals(EMP_QNAME))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final RelMetadataQuery mq = RelMetadataQuery.instance()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testPullUpPredicatesFromAggregation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "ImmutableList<RexNode> pulledUpPredicates = inputSet.pulledUpPredicates@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final RexTableInputRef inputRef1 = (RexTableInputRef)call.getOperands().get(0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "RexCall call = (RexCall)pulledUpPredicates.get(0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Aggregate rel = (Aggregate)convertSql(sql)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RelOptPredicateList inputSet = mq.getAllPredicates(rel)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final RelNode rel = convertSql(sql)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->3 [style = bold, label=""];
6->3 [style = bold, label=""];
9->11 [style = bold, label=""];
3->7 [style = dashed, label="0"];
2->6 [style = bold, label=""];
6->5 [style = solid, label="rel"];
17->9 [style = bold, label=""];
18->17 [style = bold, label=""];
4->0 [style = solid, label="pulledUpPredicates"];
3->16 [style = bold, label=""];
6->14 [style = dashed, label="0"];
12->14 [style = solid, label="sql"];
0->20 [style = dashed, label="0"];
2->6 [style = solid, label="sql"];
4->0 [style = bold, label=""];
5->16 [style = dashed, label="0"];
20->18 [style = bold, label=""];
14->16 [style = solid, label="rel"];
2->12 [style = dashed, label="0"];
3->5 [style = bold, label=""];
7->5 [style = bold, label=""];
13->19 [style = bold, label=""];
8->2 [style = bold, label=""];
10->13 [style = bold, label=""];
11->10 [style = bold, label=""];
5->4 [style = bold, label=""];
4->20 [style = bold, label=""];
12->14 [style = bold, label=""];
1->2 [style = bold, label=""];
15->12 [style = bold, label=""];
16->4 [style = bold, label=""];
6->7 [style = bold, label=""];
}
