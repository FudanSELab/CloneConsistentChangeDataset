digraph {
7 [style = filled, label = "long timestamp = time.getMillis()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DateTime time = DateTimes.of(\"2016-03-04T00:00:00.000Z\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "IncrementalIndex index = new OnheapIncrementalIndex.Builder().setIndexSchema(new IncrementalIndexSchema.Builder().withQueryGranularity(Granularities.SECOND).withMetrics(new CountAggregatorFactory(\"cnt\")).build()).setMaxRowCount(1000).build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "index.add(new MapBasedInputRow(timestamp,Lists.newArrayList(visitor_id,client_type),ImmutableMap.of(visitor_id,\"2\",client_type,\"android\")))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String visitor_id = \"visitor_id\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Iterable<Result<TimeseriesResultValue>> results = engine.process(query,new IncrementalIndexStorageAdapter(index)).toList()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final Iterable<Result<TopNResultValue>> results = engine.query(query,new IncrementalIndexStorageAdapter(index),null).toList()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "index.add(new MapBasedInputRow(timestamp,Lists.newArrayList(visitor_id,client_type),ImmutableMap.of(visitor_id,\"1\",client_type,\"iphone\")))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testTopNWithDistinctCountAgg['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "index.add(new MapBasedInputRow(timestamp,Lists.newArrayList(visitor_id,client_type),ImmutableMap.of(visitor_id,\"0\",client_type,\"iphone\")))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testTopNWithDistinctCountAgg['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String client_type = \"client_type\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<Result<TimeseriesResultValue>> expectedResults = Collections.singletonList(new Result<>(time,new TimeseriesResultValue(ImmutableMap.of(\"UV\",3,\"rows\",3L))))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TestHelper.assertExpectedResults(expectedResults,results)@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TopNQuery query = new TopNQueryBuilder().dataSource(QueryRunnerTestHelper.DATA_SOURCE).granularity(QueryRunnerTestHelper.ALL_GRAN).intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC).dimension(client_type).metric(\"UV\").threshold(10).aggregators(QueryRunnerTestHelper.ROWS_COUNT,new DistinctCountAggregatorFactory(\"UV\",visitor_id,null)).build()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "TopNQueryEngine engine = new TopNQueryEngine(pool)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<Result<TopNResultValue>> expectedResults = Collections.singletonList(new Result<>(time,new TopNResultValue(Arrays.asList(ImmutableMap.of(client_type,\"iphone\",\"UV\",2L,\"rows\",2L),ImmutableMap.of(client_type,\"android\",\"UV\",1L,\"rows\",1L)))))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "IncrementalIndex index = new IncrementalIndex.Builder().setIndexSchema(new IncrementalIndexSchema.Builder().withQueryGranularity(Granularities.SECOND).withMetrics(new CountAggregatorFactory(\"cnt\")).build()).setMaxRowCount(1000).buildOnheap()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TimeseriesQuery query = Druids.newTimeseriesQueryBuilder().dataSource(QueryRunnerTestHelper.DATA_SOURCE).granularity(QueryRunnerTestHelper.ALL_GRAN).intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC).aggregators(Lists.newArrayList(QueryRunnerTestHelper.ROWS_COUNT,new DistinctCountAggregatorFactory(\"UV\",visitor_id,null))).build()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TimeseriesQueryEngine engine = new TimeseriesQueryEngine()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testTopNWithDistinctCountAgg['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7->13 [style = bold, label=""];
15->2 [style = bold, label=""];
16->0 [style = bold, label=""];
4->11 [style = solid, label="time"];
11->20 [style = dashed, label="0"];
11->1 [style = bold, label=""];
7->3 [style = solid, label="timestamp"];
8->19 [style = bold, label=""];
9->4 [style = bold, label=""];
0->2 [style = bold, label=""];
14->5 [style = bold, label=""];
10->1 [style = solid, label="results"];
5->15 [style = bold, label=""];
0->15 [style = dashed, label="0"];
19->17 [style = bold, label=""];
2->9 [style = bold, label=""];
20->1 [style = bold, label=""];
9->13 [style = solid, label="client_type"];
9->8 [style = solid, label="client_type"];
4->7 [style = bold, label=""];
17->1 [style = solid, label="results"];
5->16 [style = dashed, label="0"];
20->1 [style = solid, label="expectedResults"];
6->5 [style = bold, label=""];
9->20 [style = solid, label="client_type"];
12->10 [style = bold, label=""];
12->19 [style = dashed, label="0"];
13->3 [style = bold, label=""];
5->0 [style = bold, label=""];
3->8 [style = bold, label=""];
2->13 [style = solid, label="visitor_id"];
4->20 [style = solid, label="time"];
10->17 [style = dashed, label="0"];
2->3 [style = solid, label="visitor_id"];
7->8 [style = solid, label="timestamp"];
2->8 [style = solid, label="visitor_id"];
7->13 [style = solid, label="timestamp"];
8->12 [style = bold, label=""];
9->3 [style = solid, label="client_type"];
11->1 [style = solid, label="expectedResults"];
17->20 [style = bold, label=""];
10->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
