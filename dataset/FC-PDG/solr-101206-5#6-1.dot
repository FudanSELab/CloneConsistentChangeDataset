digraph {
6 [style = filled, label = "testWriteSmallBuffer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "InputStream input = s3.getObject(null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "output.write(buffer)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "byte(( buffer = content.getBytes(Charset.defaultCharset())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String read = IOUtils.toString(input,Charset.defaultCharset())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testWriteLargeBuffer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "output.close()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testWriteSmallBuffer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "String content = RandomStringUtils.randomAlphanumeric(S3OutputStream.PART_SIZE + 1024)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(buffer.length > S3OutputStream.PART_SIZE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(new String(buffer,Charset.defaultCharset()),read)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "output.write(buffer)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String read = IOUtils.toString(input,Charset.defaultCharset())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "byte(( buffer = \"hello\".getBytes(Charset.defaultCharset())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "S3OutputStream output = new S3OutputStream(s3,\"large-buffer\",BUCKET)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "S3OutputStream output = new S3OutputStream(s3,\"small-buffer\",BUCKET)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertTrue(buffer.length < S3OutputStream.PART_SIZE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
4->16 [style = solid, label="read"];
15->2 [style = bold, label=""];
11->16 [style = solid, label="buffer"];
4->16 [style = dashed, label="0"];
9->0 [style = bold, label=""];
3->1 [style = bold, label=""];
8->14 [style = bold, label=""];
6->0 [style = bold, label=""];
7->4 [style = bold, label=""];
8->14 [style = dashed, label="0"];
8->7 [style = bold, label=""];
14->4 [style = solid, label="input"];
11->2 [style = solid, label="buffer"];
1->13 [style = dashed, label="0"];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
12->10 [style = bold, label=""];
8->7 [style = solid, label="input"];
11->13 [style = bold, label=""];
7->4 [style = solid, label="read"];
0->5 [style = solid, label="buffer"];
5->7 [style = bold, label=""];
13->15 [style = bold, label=""];
4->16 [style = bold, label=""];
2->8 [style = bold, label=""];
14->4 [style = bold, label=""];
10->11 [style = bold, label=""];
}
