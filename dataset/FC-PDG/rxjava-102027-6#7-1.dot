digraph {
3 [style = filled, label = "PublishProcessor<Integer> open = PublishProcessor.create()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(close.hasSubscribers())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TestSubscriber<Flowable<Integer>> ts = new TestSubscriber<>()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "final PublishProcessor<Integer> close = PublishProcessor.create()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "source.window(open,new Function<Integer,Observable<Integer>>(){@Override public Observable<Integer> apply(Integer t){return close}}).doOnNext(new Consumer<Observable<Integer>>(){@Override public void accept(Observable<Integer> w){w.subscribe(Functions.emptyConsumer(),Functions.emptyConsumer())}}).subscribe(to)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final PublishSubject<Integer> close = PublishSubject.create()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "TestObserver<Observable<Integer>> to = new TestObserver<Observable<Integer>>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(open.hasSubscribers())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "PublishSubject<Integer> open = PublishSubject.create()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "PublishProcessor<Integer> source = PublishProcessor.create()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "close.onNext(1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "open.onNext(1)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "noUnsubscribeAndNoLeak['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ts.assertComplete()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(open.hasSubscribers())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ts.assertValueCount(1)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "unsubscribeAll['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertTrue(close.hasObservers())@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TestSubscriber<Flowable<Integer>> ts = new TestSubscriber<Flowable<Integer>>()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "ts.assertNoErrors()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(open.hasObservers())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(close.hasObservers())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "source.onNext(1)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertFalse(open.hasObservers())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "noUnsubscribeAndNoLeak['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertFalse(close.hasSubscribers())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "source.onComplete()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "to.dispose()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertFalse(ts.isCancelled())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "source.window(open,new Function<Integer,Flowable<Integer>>(){@Override public Flowable<Integer> apply(Integer t){return close}}).doOnNext(new Consumer<Flowable<Integer>>(){@Override public void accept(Flowable<Integer> w){w.subscribe(Functions.emptyConsumer(),Functions.emptyConsumer())}}).subscribe(ts)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "PublishSubject<Integer> source = PublishSubject.create()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertFalse(close.hasSubscribers())@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
22->26 [style = bold, label=""];
5->8 [style = bold, label=""];
0->9 [style = bold, label=""];
25->28 [style = bold, label=""];
12->23 [style = dashed, label="0"];
28->30 [style = bold, label=""];
11->14 [style = bold, label=""];
16->10 [style = bold, label=""];
20->9 [style = bold, label=""];
16->27 [style = dashed, label="0"];
26->25 [style = bold, label=""];
29->31 [style = bold, label=""];
30->27 [style = bold, label=""];
30->27 [style = solid, label="to"];
18->19 [style = bold, label=""];
19->16 [style = solid, label="ts"];
8->6 [style = bold, label=""];
24->29 [style = bold, label=""];
10->21 [style = bold, label=""];
19->16 [style = bold, label=""];
6->2 [style = bold, label=""];
3->18 [style = bold, label=""];
7->16 [style = solid, label="ts"];
23->24 [style = bold, label=""];
15->11 [style = bold, label=""];
12->4 [style = bold, label=""];
7->19 [style = dashed, label="0"];
27->10 [style = bold, label=""];
7->30 [style = dashed, label="0"];
7->16 [style = bold, label=""];
9->26 [style = dashed, label="0"];
1->12 [style = bold, label=""];
18->28 [style = dashed, label="0"];
9->3 [style = bold, label=""];
17->13 [style = bold, label=""];
13->15 [style = bold, label=""];
8->31 [style = dashed, label="0"];
18->7 [style = bold, label=""];
10->1 [style = bold, label=""];
4->5 [style = bold, label=""];
21->23 [style = bold, label=""];
3->25 [style = dashed, label="0"];
}
