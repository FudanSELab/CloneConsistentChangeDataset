digraph {
0 [style = filled, label = "final SegmentIdWithShardSpec id1 = allocate(task,PARTY_TIME,Granularities.NONE,Granularities.HOUR,\"s1\",null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertSameIdentifier(new SegmentIdWithShardSpec(DATA_SOURCE,Granularities.HOUR.bucket(PARTY_TIME),PARTY_TIME.toString(),new NumberedShardSpec(2,2)),id1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final SegmentIdWithShardSpec id1 = allocate(task,PARTY_TIME,Granularities.NONE,Granularities.DAY,\"s1\",null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertSameIdentifier(new SegmentIdWithShardSpec(DATA_SOURCE,Granularities.HOUR.bucket(PARTY_TIME),PARTY_TIME.toString(),new NumberedShardSpec(3,2)),id2)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertSameIdentifier(id1,new SegmentIdWithShardSpec(DATA_SOURCE,Granularities.HOUR.bucket(PARTY_TIME),PARTY_TIME.toString(),new NumberedShardSpec(2,2)))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertSameIdentifier(id1,new SegmentIdWithShardSpec(DATA_SOURCE,Granularities.HOUR.bucket(PARTY_TIME),PARTY_TIME.toString(),new NumberedShardSpec(2,2)))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "taskActionTestKit.getMetadataStorageCoordinator().announceHistoricalSegments(ImmutableSet.of(DataSegment.builder().dataSource(DATA_SOURCE).interval(Granularities.HOUR.bucket(PARTY_TIME)).version(PARTY_TIME.toString()).shardSpec(new NumberedShardSpec(0,2)).build(),DataSegment.builder().dataSource(DATA_SOURCE).interval(Granularities.HOUR.bucket(PARTY_TIME)).version(PARTY_TIME.toString()).shardSpec(new NumberedShardSpec(1,2)).build()))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Task task = NoopTask.create()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertSameIdentifier(id2,new SegmentIdWithShardSpec(DATA_SOURCE,Granularities.HOUR.bucket(PARTY_TIME),PARTY_TIME.toString(),new NumberedShardSpec(3,2)))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "final SegmentIdWithShardSpec id2 = allocate(task,PARTY_TIME,Granularities.NONE,Granularities.HOUR,\"s1\",id1.toString())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testAddToExistingNumberedShardSpecsCoarserPreferredGranularity['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "taskActionTestKit.getTaskLockbox().add(task)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testAddToExistingNumberedShardSpecsSameGranularity['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testAddToExistingNumberedShardSpecsSameGranularity['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final Task task = new NoopTask(null,null,0,0,null,null,null)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
5->3 [style = bold, label=""];
6->8 [style = dashed, label="0"];
0->9 [style = solid, label="id1"];
13->12 [style = solid, label="id1"];
5->9 [style = bold, label=""];
0->3 [style = solid, label="id1"];
7->0 [style = bold, label=""];
9->10 [style = bold, label=""];
5->10 [style = solid, label="id2"];
3->4 [style = bold, label=""];
6->2 [style = bold, label=""];
1->6 [style = bold, label=""];
13->12 [style = bold, label=""];
5->4 [style = solid, label="id2"];
8->2 [style = bold, label=""];
8->5 [style = solid, label="task"];
3->9 [style = dashed, label="0"];
6->5 [style = solid, label="task"];
8->0 [style = solid, label="task"];
0->13 [style = dashed, label="0"];
11->8 [style = bold, label=""];
6->0 [style = solid, label="task"];
2->7 [style = bold, label=""];
4->10 [style = dashed, label="0"];
6->7 [style = solid, label="task"];
8->7 [style = solid, label="task"];
6->13 [style = solid, label="task"];
14->6 [style = bold, label=""];
0->5 [style = bold, label=""];
}
