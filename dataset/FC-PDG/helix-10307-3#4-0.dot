digraph {
2 [style = filled, label = "testReleaseNoPartition['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ClusterConfig testClusterConfig = new ClusterConfig(\"testClusterConfigId\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "AssignableReplica removingReplica = new AssignableReplica(testCache.getClusterConfig(),testCache.getResourceConfig(_resourceNames.get(1)),_partitionNames.get(2) + \"non-exist\",\"MASTER\",1)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assignableNode.release(removingReplica)@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "InstanceConfig testInstanceConfig = new InstanceConfig(\"testInstanceConfigId\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ResourceControllerDataProvider testCache = setupClusterDataCache()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testReleaseNoPartition['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "AssignableNode assignableNode = new AssignableNode(testCache.getClusterConfig(),testCache.getInstanceConfigMap().get(_testInstanceId),_testInstanceId,Collections.emptyList())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testClusterConfig.setDefaultInstanceCapacityMap(_capacityDataMap)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "AssignableNode assignableNode = new AssignableNode(testCache.getClusterConfig(),testCache.getInstanceConfigMap().get(_testInstanceId),_testInstanceId)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "AssignableNode assignableNode = new AssignableNode(testClusterConfig,testInstanceConfig,_testInstanceId)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(assignableNode.getMaxCapacity(),_capacityDataMap)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "AssignableReplica removingReplica = new AssignableReplica(testCache.getResourceConfig(_resourceNames.get(1)),_partitionNames.get(2) + \"non-exist\",\"MASTER\",1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testDefaultInstanceCapacity['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
9->13 [style = bold, label=""];
1->3 [style = solid, label="removingReplica"];
11->9 [style = solid, label="testClusterConfig"];
7->3 [style = solid, label="removingReplica"];
8->9 [style = solid, label="testInstanceConfig"];
1->7 [style = dashed, label="0"];
6->7 [style = bold, label=""];
10->8 [style = bold, label=""];
3->9 [style = dashed, label="0"];
2->4 [style = bold, label=""];
4->6 [style = bold, label=""];
0->1 [style = bold, label=""];
11->10 [style = bold, label=""];
7->3 [style = bold, label=""];
5->4 [style = bold, label=""];
4->0 [style = bold, label=""];
0->6 [style = dashed, label="0"];
8->9 [style = bold, label=""];
12->11 [style = bold, label=""];
}
