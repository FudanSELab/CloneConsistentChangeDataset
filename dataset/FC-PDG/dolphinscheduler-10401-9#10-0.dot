digraph {
15 [style = filled, label = "when(usersService.queryUser(loginUser.getId())).thenReturn(loginUser)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Map<String,Object> proejctAuthFailRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,46,\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",\"test_user\",ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "taskInstanceList.add(taskInstance)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "processInstanceList.add(processInstance)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "when(processInstanceMapper.queryProcessInstanceListPaging(Mockito.any(),eq(project.getId()),eq(1),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),eq(start),eq(end))).thenReturn(pageReturn)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Map<String,Object> executorEmptyRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getId()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),any(),any())).thenReturn(pageReturn)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Project project = getProject(projectName)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorNullRes.get(Constants.STATUS))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "when(projectService.checkProjectAndAuth(loginUser,project,projectName)).thenReturn(result)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "Map<String,Object> executorErrorEndDateRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",null,\"error date\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "pageReturn.setRecords(processInstanceList)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(usersService.queryUser(loginUser.getId())).thenReturn(null)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "putMsg(result,Status.SUCCESS,projectName)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "Map<String,Object> executorErrorStartDateRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",\"error date\",null,\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Map<String,Object> proejctAuthFailRes = taskInstanceService.queryTaskListPaging(loginUser,\"project_test1\",0,\"\",\"\",\"test_user\",\"2019-02-26 19:48:00\",\"2019-02-26 19:48:22\",\"\",null,\"\",1,20)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "when(usersService.queryUser(processInstance.getExecutorId())).thenReturn(loginUser)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ProcessInstance processInstance = getProcessInstance()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "when(processInstanceMapper.queryProcessInstanceListPaging(Mockito.any(),eq(project.getId()),eq(1),eq(\"\"),eq(-1),Mockito.any(),eq(\"192.168.xx.xx\"),eq(null),eq(null))).thenReturn(pageReturn)@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "User loginUser = getAdminUser()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR,dataParameterRes.get(Constants.STATUS))@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "Map<String,Object> successRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"test_user\",\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "Map<String,Object> executorNullDateRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"\",null,null,\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,successRes.get(Constants.STATUS))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "when(usersService.getUserIdByName(loginUser.getUserName())).thenReturn(-1)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Page<TaskInstance> pageReturn = new Page<>(1,10)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "queryTaskListPaging['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "TaskInstance taskInstance = getTaskInstance()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<String,Object> executorEmptyRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,1,\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",\"\",ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getId()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),eq(start),eq(end))).thenReturn(pageReturn)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Map<String,Object> executorNullRes = taskInstanceService.queryTaskListPaging(loginUser,projectName,1,\"\",\"\",\"test_user\",\"2020-01-01 00:00:00\",\"2020-01-02 00:00:00\",\"\",ExecutionStatus.SUCCESS,\"192.168.xx.xx\",1,20)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "when(projectService.checkProjectAndAuth(loginUser,project,projectName)).thenReturn(result)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(usersService.queryUser(loginUser.getId())).thenReturn(null)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "when(processService.findProcessInstanceDetailById(taskInstance.getProcessInstanceId())).thenReturn(processInstance)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<ProcessInstance> processInstanceList = new ArrayList<>()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "putMsg(result,Status.PROJECT_NOT_FOUNT,projectName)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Map<String,Object> dataParameterRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,1,\"20200101 00:00:00\",\"20200102 00:00:00\",\"\",loginUser.getUserName(),ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testQueryProcessInstanceList['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(projectMapper.queryByName(projectName)).thenReturn(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR,executorErrorEndDateRes.get(Constants.STATUS))@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorNullDateRes.get(Constants.STATUS))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR,executorErrorStartDateRes.get(Constants.STATUS))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(Status.PROJECT_NOT_FOUNT,proejctAuthFailRes.get(Constants.STATUS))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getId()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),any(),any())).thenReturn(pageReturn)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "pageReturn.setRecords(taskInstanceList)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "when(taskInstanceMapper.queryTaskInstanceListPaging(Mockito.any(),eq(project.getId()),eq(1),eq(\"\"),eq(\"\"),eq(\"\"),eq(0),Mockito.any(),eq(\"192.168.xx.xx\"),eq(start),eq(end))).thenReturn(pageReturn)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(usersService.getUserIdByName(loginUser.getUserName())).thenReturn(loginUser.getId())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "when(projectMapper.queryByName(Mockito.anyString())).thenReturn(project)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Map<String,Object> result = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorEmptyRes.get(Constants.STATUS))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "when(projectService.checkProjectAndAuth(loginUser,null,projectName)).thenReturn(result)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testQueryProcessInstanceList['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,executorEmptyRes.get(Constants.STATUS))@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(projectMapper.queryByName(projectName)).thenReturn(project)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String projectName = \"project_test1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "when(projectService.checkProjectAndAuth(loginUser,project,projectName)).thenReturn(result)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "when(projectMapper.queryByName(projectName)).thenReturn(project)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "successRes = processInstanceService.queryProcessInstanceList(loginUser,projectName,1,\"\",\"\",\"\",loginUser.getUserName(),ExecutionStatus.SUBMITTED_SUCCESS,\"192.168.xx.xx\",1,10)@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "List<TaskInstance> taskInstanceList = new ArrayList<>()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Date start = DateUtils.getScheduleDate(\"2020-01-01 00:00:00\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Page<ProcessInstance> pageReturn = new Page<>(1,10)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,successRes.get(Constants.STATUS))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "putMsg(result,Status.SUCCESS,projectName)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,successRes.get(Constants.STATUS))@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Date end = DateUtils.getScheduleDate(\"2020-01-02 00:00:00\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(usersService.queryUser(processInstance.getExecutorId())).thenReturn(loginUser)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45->52 [style = solid, label="pageReturn"];
5->14 [style = bold, label=""];
23->2 [style = bold, label=""];
56->45 [style = bold, label=""];
60->61 [style = bold, label=""];
30->33 [style = solid, label="project"];
19->30 [style = solid, label="projectName"];
28->14 [style = solid, label="result"];
19->39 [style = solid, label="projectName"];
53->5 [style = bold, label=""];
19->16 [style = solid, label="projectName"];
8->52 [style = bold, label=""];
6->22 [style = bold, label=""];
3->13 [style = bold, label=""];
28->27 [style = solid, label="result"];
20->41 [style = solid, label="loginUser"];
19->50 [style = solid, label="projectName"];
45->44 [style = solid, label="pageReturn"];
20->53 [style = solid, label="loginUser"];
49->59 [style = solid, label="taskInstance"];
20->57 [style = solid, label="loginUser"];
9->17 [style = bold, label=""];
7->0 [style = bold, label=""];
28->13 [style = solid, label="result"];
0->21 [style = bold, label=""];
20->12 [style = solid, label="loginUser"];
20->39 [style = solid, label="loginUser"];
20->4 [style = solid, label="loginUser"];
20->61 [style = solid, label="loginUser"];
20->47 [style = solid, label="loginUser"];
51->58 [style = bold, label=""];
57->55 [style = bold, label=""];
64->50 [style = bold, label=""];
19->14 [style = solid, label="projectName"];
28->29 [style = bold, label=""];
17->1 [style = bold, label=""];
25->51 [style = dashed, label="0"];
8->16 [style = bold, label=""];
41->40 [style = bold, label=""];
19->41 [style = solid, label="projectName"];
20->9 [style = solid, label="loginUser"];
48->60 [style = bold, label=""];
20->15 [style = solid, label="loginUser"];
56->65 [style = solid, label="taskInstanceList"];
28->38 [style = solid, label="result"];
1->8 [style = bold, label=""];
19->61 [style = solid, label="projectName"];
13->31 [style = bold, label=""];
26->4 [style = bold, label=""];
45->58 [style = solid, label="pageReturn"];
38->24 [style = bold, label=""];
26->60 [style = dashed, label="0"];
36->41 [style = bold, label=""];
12->9 [style = bold, label=""];
46->16 [style = bold, label=""];
54->57 [style = bold, label=""];
14->30 [style = bold, label=""];
2->37 [style = solid, label="pageReturn"];
22->64 [style = solid, label="processInstance"];
22->11 [style = solid, label="processInstance"];
31->5 [style = bold, label=""];
63->54 [style = bold, label=""];
43->27 [style = bold, label=""];
20->63 [style = solid, label="loginUser"];
19->63 [style = solid, label="projectName"];
20->31 [style = solid, label="loginUser"];
30->0 [style = solid, label="project"];
20->16 [style = solid, label="loginUser"];
16->32 [style = bold, label=""];
61->51 [style = bold, label=""];
59->65 [style = bold, label=""];
23->7 [style = solid, label="processInstanceList"];
29->3 [style = bold, label=""];
19->9 [style = solid, label="projectName"];
4->25 [style = bold, label=""];
9->64 [style = bold, label=""];
45->59 [style = bold, label=""];
58->63 [style = bold, label=""];
27->15 [style = bold, label=""];
10->44 [style = bold, label=""];
50->8 [style = bold, label=""];
47->48 [style = bold, label=""];
19->31 [style = solid, label="projectName"];
32->26 [style = bold, label=""];
30->33 [style = bold, label=""];
17->37 [style = bold, label=""];
10->44 [style = dashed, label="0"];
19->38 [style = solid, label="projectName"];
19->42 [style = solid, label="projectName"];
19->4 [style = solid, label="projectName"];
24->6 [style = bold, label=""];
19->47 [style = solid, label="projectName"];
30->43 [style = solid, label="project"];
15->10 [style = bold, label=""];
52->42 [style = bold, label=""];
40->38 [style = bold, label=""];
19->29 [style = solid, label="projectName"];
28->29 [style = solid, label="result"];
32->48 [style = dashed, label="0"];
2->26 [style = solid, label="pageReturn"];
62->19 [style = bold, label=""];
45->60 [style = solid, label="pageReturn"];
39->34 [style = bold, label=""];
2->11 [style = bold, label=""];
44->9 [style = bold, label=""];
28->21 [style = solid, label="result"];
19->20 [style = bold, label=""];
7->59 [style = dashed, label="0"];
19->57 [style = solid, label="projectName"];
65->43 [style = bold, label=""];
20->50 [style = solid, label="loginUser"];
11->7 [style = bold, label=""];
10->12 [style = bold, label=""];
37->39 [style = bold, label=""];
18->19 [style = bold, label=""];
13->53 [style = bold, label=""];
22->49 [style = bold, label=""];
20->27 [style = solid, label="loginUser"];
42->46 [style = bold, label=""];
20->28 [style = bold, label=""];
49->56 [style = bold, label=""];
21->27 [style = bold, label=""];
28->36 [style = solid, label="result"];
22->23 [style = bold, label=""];
32->47 [style = bold, label=""];
2->10 [style = solid, label="pageReturn"];
35->19 [style = bold, label=""];
16->47 [style = dashed, label="0"];
33->36 [style = bold, label=""];
30->24 [style = bold, label=""];
20->42 [style = solid, label="loginUser"];
34->1 [style = bold, label=""];
}
