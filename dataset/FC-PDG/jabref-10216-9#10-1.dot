digraph {
28 [style = filled, label = "List<BibEntry> bibEntries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(1,bibEntries.size())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(Optional.of(\"Git : dezentrale Versionsverwaltung im Team : Grundlagen und Workflows\"),entry.getField(StandardField.TITLE))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(Optional.of(\"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),second.getField(StandardField.AUTHOR))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Path file = Paths.get(.getResource(\"Endnote.book.example.enw\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testImportEntriesBookExample['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(Optional.of(\"2016\"),entry.getField(StandardField.YEAR))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),first.getField(StandardField.TITLE))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(2,entries.size())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Optional.of(\"Wesensten, Nancy J.\"),first.getField(StandardField.AUTHOR))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestMedline.isi\").toURI())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "BibEntry first = entries.get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Optional.empty(),first.getField(StandardField.MONTH))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(Optional.of(\"Versionsverwaltung\"),entry.getField(StandardField.KEYWORDS))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(Optional.of(\"13\"),second.getField(StandardField.VOLUME))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(Optional.of(\"411--22\"),second.getField(StandardField.PAGES))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(Optional.of(\"Prei鐃緒申鐃緒申鐃緒申el, Ren鐃緒申鐃緒申鐃緒申 and Stachmann, Bj鐃緒申鐃緒申鐃緒申rn\"),entry.getField(StandardField.AUTHOR))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(Optional.of(\"3., aktualisierte und erweiterte Auflage\"),entry.getField(StandardField.EDITION))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "BibEntry entry = bibEntries.get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(Optional.of(\"dpunkt.verlag\"),entry.getField(StandardField.PUBLISHER))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(Optional.of(\"Curr Pharm Des\"),first.getField(StandardField.JOURNAL))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"2457--71\"),first.getField(StandardField.PAGES))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(Optional.of(\"12\"),first.getField(StandardField.VOLUME))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testImportEntriesMedline['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "assertEquals(StandardEntryType.Book,entry.getType())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(Optional.of(\"2006\"),second.getField(StandardField.YEAR))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(StandardEntryType.Article,second.getType())@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Path file = Path.of(.getResource(\"IsiImporterTestMedline.isi\").toURI())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(Optional.of(\"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),second.getField(StandardField.TITLE))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Optional.of(\"3\"),second.getField(StandardField.NUMBER))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(Optional.of(\"2006\"),first.getField(StandardField.YEAR))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testImportEntriesMedline['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(Optional.of(\"XX, 327\"),entry.getField(StandardField.PAGES))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(Optional.of(\"20\"),first.getField(StandardField.NUMBER))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Optional.of(\"Heidelberg\"),entry.getField(StandardField.ADDRESS))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(Optional.of(Month.MAY),second.getMonth())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(Optional.of(\"http://d-nb.info/107601965X\"),entry.getField(StandardField.URL))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "BibEntry second = entries.get(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(StandardEntryType.Article,first.getType())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->22 [style = bold, label=""];
14->16 [style = bold, label=""];
16->11 [style = bold, label=""];
28->36 [style = bold, label=""];
25->39 [style = bold, label=""];
30->33 [style = bold, label=""];
12->37 [style = dashed, label="0"];
22->19 [style = bold, label=""];
31->32 [style = bold, label=""];
20->0 [style = bold, label=""];
9->28 [style = dashed, label="0"];
8->35 [style = dashed, label="0"];
15->30 [style = dashed, label="0"];
9->20 [style = bold, label=""];
15->6 [style = bold, label=""];
0->27 [style = dashed, label="0"];
10->29 [style = dashed, label="0"];
2->10 [style = bold, label=""];
6->33 [style = dashed, label="0"];
27->35 [style = bold, label=""];
26->30 [style = bold, label=""];
35->25 [style = bold, label=""];
17->7 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
5->21 [style = bold, label=""];
6->4 [style = bold, label=""];
23->24 [style = bold, label=""];
36->27 [style = bold, label=""];
19->26 [style = dashed, label="0"];
34->37 [style = bold, label=""];
20->36 [style = dashed, label="0"];
11->3 [style = bold, label=""];
7->24 [style = dashed, label="0"];
2->39 [style = dashed, label="0"];
4->34 [style = dashed, label="0"];
12->18 [style = bold, label=""];
0->8 [style = bold, label=""];
22->38 [style = dashed, label="0"];
13->5 [style = bold, label=""];
3->13 [style = bold, label=""];
4->12 [style = bold, label=""];
7->32 [style = dashed, label="0"];
29->38 [style = bold, label=""];
1->2 [style = bold, label=""];
38->26 [style = bold, label=""];
19->15 [style = bold, label=""];
32->28 [style = bold, label=""];
33->34 [style = bold, label=""];
18->14 [style = bold, label=""];
24->9 [style = bold, label=""];
39->29 [style = bold, label=""];
}
