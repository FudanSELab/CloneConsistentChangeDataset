digraph {
2 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "actualUpdateCount = SQLExecuteType.Literal == getSqlExecuteType()? executeUpdateForStatementWithAutoGeneratedKeys(connection): executeUpdateForPreparedStatementWithAutoGeneratedKeys(connection)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "\"replica_query\".equals(getDescription().getScenario())@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertExecuteWithAutoGeneratedKeys['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "actualUpdateCount = SQLExecuteType.Literal == getSqlExecuteType()? executeForStatementWithAutoGeneratedKeys(connection): executeForPreparedStatementWithAutoGeneratedKeys(connection)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "executeUpdateWithAutoGeneratedKeys['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertDataSet(actualUpdateCount)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "executeUpdateWithAutoGeneratedKeys['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int actualUpdateCount@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "\"replica_query\".equals(getScenario())@@@3@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6->5 [style = bold, label=""];
6->2 [style = dotted, label="true"];
4->2 [style = bold, label=""];
8->4 [style = bold, label=""];
0->9 [style = dashed, label="0"];
9->1 [style = bold, label=""];
5->0 [style = bold, label=""];
5->9 [style = bold, label=""];
0->1 [style = solid, label="actualUpdateCount"];
4->6 [style = dashed, label="0"];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
3->4 [style = bold, label=""];
4->2 [style = dotted, label="true"];
7->6 [style = bold, label=""];
2->5 [style = bold, label=""];
9->1 [style = solid, label="actualUpdateCount"];
6->2 [style = bold, label=""];
}
