digraph {
6 [style = filled, label = "result.getModifyColumnDefinitions().add((ModifyColumnDefinitionSegment)each)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableName()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "result.getDropColumnDefinitions().add((DropColumnDefinitionSegment)each)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "null != ctx.alterDefinitionClause()@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "((CollectionValue<AlterDefinitionSegment>)visit(ctx.alterDefinitionClause())).getValue()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@16@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "each instanceof ValidateConstraintDefinitionSegment@@@19@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "result.setRenameTable(((RenameTableDefinitionSegment)each).getRenameTable())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "result.getModifyConstraintDefinitions().add((ModifyConstraintDefinitionSegment)each)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "each instanceof DropConstraintDefinitionSegment@@@25@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "PostgreSQLAlterTableStatement result = new PostgreSQLAlterTableStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "each instanceof DropColumnDefinitionSegment@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "each instanceof ModifyColumnDefinitionSegment@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "each instanceof AddColumnDefinitionSegment@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "each instanceof RenameTableDefinitionSegment@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final AlterTableContext ctx@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "AlterDefinitionSegment each@@@6@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "visitAlterTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "AlterDefinitionSegment each@@@6@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "visitAlterTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "return result@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "SQLServerAlterTableStatement result = new SQLServerAlterTableStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableNameClause().tableName()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "result.getAddConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "result.getAddConstraintDefinitions().add((AddConstraintDefinitionSegment)each)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "result.getValidateConstraintDefinitions().add((ValidateConstraintDefinitionSegment)each)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "visitAlterTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "result.getAddColumnDefinitions().add((AddColumnDefinitionSegment)each)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "each instanceof ModifyConstraintDefinitionSegment@@@22@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "each instanceof AddConstraintDefinitionSegment@@@16@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "result.getDropConstraintDefinitions().add((DropConstraintDefinitionSegment)each)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0->10 [style = dotted, label="true"];
0->23 [style = dotted, label="true"];
12->0 [style = bold, label=""];
26->22 [style = bold, label=""];
21->11 [style = bold, label=""];
3->10 [style = bold, label=""];
0->16 [style = dotted, label="true"];
3->11 [style = bold, label=""];
19->10 [style = bold, label=""];
25->18 [style = dotted, label="true"];
1->10 [style = bold, label=""];
13->1 [style = dotted, label="true"];
28->15 [style = solid, label="result"];
20->10 [style = bold, label=""];
8->4 [style = bold, label=""];
10->17 [style = bold, label=""];
24->14 [style = dotted, label="true"];
3->2 [style = bold, label=""];
6->15 [style = bold, label=""];
7->10 [style = bold, label=""];
22->21 [style = dotted, label="false"];
4->28 [style = dashed, label="0"];
10->9 [style = bold, label=""];
13->25 [style = bold, label=""];
25->26 [style = bold, label=""];
20->15 [style = bold, label=""];
24->4 [style = bold, label=""];
22->20 [style = dotted, label="true"];
21->11 [style = dotted, label="false"];
9->15 [style = bold, label=""];
19->15 [style = bold, label=""];
2->18 [style = dashed, label="0"];
10->17 [style = dotted, label="false"];
2->10 [style = bold, label=""];
11->15 [style = bold, label=""];
27->15 [style = bold, label=""];
22->20 [style = bold, label=""];
11->7 [style = dotted, label="true"];
25->18 [style = bold, label=""];
3->11 [style = dotted, label="false"];
30->14 [style = dotted, label="true"];
3->25 [style = dashed, label="0"];
11->7 [style = bold, label=""];
6->10 [style = bold, label=""];
26->19 [style = bold, label=""];
0->10 [style = bold, label=""];
0->5 [style = dotted, label="true"];
26->22 [style = dotted, label="false"];
0->15 [style = bold, label=""];
11->10 [style = bold, label=""];
13->3 [style = dotted, label="false"];
17->6 [style = bold, label=""];
13->25 [style = dotted, label="false"];
25->26 [style = dotted, label="false"];
12->29 [style = dashed, label="0"];
17->13 [style = bold, label=""];
18->10 [style = bold, label=""];
27->10 [style = bold, label=""];
3->2 [style = dotted, label="true"];
17->13 [style = dotted, label="false"];
4->12 [style = bold, label=""];
1->15 [style = bold, label=""];
3->15 [style = bold, label=""];
21->27 [style = bold, label=""];
29->10 [style = bold, label=""];
17->6 [style = dotted, label="true"];
13->1 [style = bold, label=""];
13->3 [style = bold, label=""];
30->28 [style = bold, label=""];
8->14 [style = dotted, label="true"];
21->27 [style = dotted, label="true"];
7->15 [style = bold, label=""];
4->15 [style = solid, label="result"];
22->21 [style = bold, label=""];
26->19 [style = dotted, label="true"];
2->15 [style = bold, label=""];
10->9 [style = dotted, label="true"];
28->29 [style = bold, label=""];
9->10 [style = bold, label=""];
18->15 [style = bold, label=""];
}
