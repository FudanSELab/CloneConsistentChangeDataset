digraph {
14 [style = filled, label = "dataImporter.dataImport(jsc,0)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "cfg.command = \"upsert\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SQLContext sqlContext = new SQLContext(jsc)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testImportWithUpsert['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<HoodieTripModel> expected = expectData.stream().map(null).collect(Collectors.toList())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Dataset<Row> ds = HoodieClientTestUtils.read(jsc(),basePath + \"/testTarget\",sqlContext(),dfs(),basePath + \"/testTarget/*/*/*/*\")@@@13@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "HDFSParquetImporter dataImporter = new HDFSParquetImporter(cfg)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertAll(\"Result list equals\",null,null)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<GenericRecord> expectData = insertData.subList(11,96)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "insert(jsc())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "List<GenericRecord> upsertData = createUpsertRecords(upsertFolder)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "dataImporter.dataImport(jsc(),0)@@@10@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Path upsertFolder = new Path(basePath,\"testUpsertSrc\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String schemaFile = new Path(basePath,\"file.schema\").toString()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "List<HoodieTripModel> result = readData.stream().map(null).collect(Collectors.toList())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "List<GenericRecord> expectData@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Dataset<Row> ds = HoodieClientTestUtils.read(jsc,basePath + \"/testTarget\",sqlContext,dfs,basePath + \"/testTarget/*/*/*/*\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "expectData.addAll(upsertData)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "insert(jsc)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "verifyResultData['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(result.containsAll(expected) && expected.containsAll(result) && result.size() == expected.size())@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "List<Row> readData = ds.select(\"timestamp\",\"_row_key\",\"rider\",\"driver\",\"begin_lat\",\"begin_lon\",\"end_lat\",\"end_lon\").collectAsList()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Dataset<Row> ds = HoodieClientTestUtils.read(jsc,tablePath,sqlContext,fs,tablePath + \"/*/*/*/*\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "List<Row> readData = ds.select(\"timestamp\",\"_row_key\",\"rider\",\"driver\",\"begin_lat\",\"begin_lon\",\"end_lat\",\"end_lon\").collectAsList()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "HDFSParquetImporter.Config cfg = getHDFSParquetImporterConfig(upsertFolder.toString(),hoodieFolder.toString(),\"testTable\",\"COPY_ON_WRITE\",\"_row_key\",\"timestamp\",1,schemaFile)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<HoodieTripModel> result = readData.stream().map(null).collect(Collectors.toList())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<HoodieTripModel> expected = expectData.stream().map(null).collect(Collectors.toList())@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(result.containsAll(expected) && expected.containsAll(result) && result.size() == expected.size())@@@19@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testImportWithUpsert['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "List<HoodieTripModel> expected = expectData.stream().map(null).collect(Collectors.toList())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->3 [style = bold, label=""];
5->10 [style = bold, label=""];
8->16 [style = bold, label=""];
10->18 [style = bold, label=""];
4->11 [style = solid, label="upsertFolder"];
15->1 [style = solid, label="sqlContext"];
7->8 [style = solid, label="expected"];
13->0 [style = solid, label="upsertData"];
4->9 [style = solid, label="schemaFile"];
13->5 [style = solid, label="cfg"];
10->14 [style = bold, label=""];
2->6 [style = bold, label=""];
16->3 [style = solid, label="expected"];
23->28 [style = dotted, label="true"];
3->24 [style = dashed, label="0"];
18->12 [style = bold, label=""];
22->21 [style = bold, label=""];
29->25 [style = bold, label=""];
19->17 [style = bold, label=""];
7->8 [style = bold, label=""];
12->0 [style = bold, label=""];
1->7 [style = bold, label=""];
0->15 [style = bold, label=""];
9->10 [style = solid, label="cfg"];
11->13 [style = solid, label="upsertFolder"];
23->29 [style = bold, label=""];
6->4 [style = bold, label=""];
26->27 [style = bold, label=""];
0->22 [style = bold, label=""];
14->12 [style = bold, label=""];
11->13 [style = bold, label=""];
25->26 [style = bold, label=""];
14->10 [style = dashed, label="0"];
11->12 [style = solid, label="upsertData"];
9->5 [style = bold, label=""];
21->7 [style = bold, label=""];
27->24 [style = bold, label=""];
15->0 [style = dashed, label="0"];
13->9 [style = bold, label=""];
8->3 [style = solid, label="result"];
4->11 [style = bold, label=""];
20->19 [style = bold, label=""];
21->8 [style = solid, label="result"];
17->13 [style = solid, label="schemaFile"];
17->4 [style = bold, label=""];
15->1 [style = bold, label=""];
}
