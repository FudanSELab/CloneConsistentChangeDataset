digraph {
9 [style = filled, label = "final TestEnvironment environment = new TestEnvironment()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final Throwable uncaughtException = uncaughtExceptionHandler.waitForUncaughtException()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertSame(environment.getCause().getCheckpointFailureReason(),CheckpointFailureReason.CHECKPOINT_ASYNC_EXCEPTION)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testAsyncCheckpointException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "streamTask.triggerCheckpointAsync(new CheckpointMetaData(42L,1L),CheckpointOptions.forCheckpointWithDefaultLocation())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "waitTaskIsRunning(streamTask,task.invocationFuture)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "snapshotsInProgress.put(new OperatorID(),new OperatorSnapshotFutures(ExceptionallyDoneFuture.of(new RuntimeException(\"Async Checkpoint Exception\")),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty())))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final RuntimeException failingCause = new RuntimeException(\"Test exception\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "FailingDummyEnvironment failingDummyEnvironment = new FailingDummyEnvironment(failingCause)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "MockStreamTask streamTask = task.streamTask@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "runnable.run()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertNull(environment.getCause())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final AsyncCheckpointRunnable runnable = createAsyncRunnable(snapshotsInProgress,environment,isTaskRunning)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "final AsyncCheckpointRunnable runnable = createAsyncRunnable(snapshotsInProgress,environment,false,isTaskRunning)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "isTaskRunning@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Map<OperatorID,OperatorSnapshotFutures> snapshotsInProgress = new HashMap<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "RunningTask<MockStreamTask> task = runTask(null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final TestingUncaughtExceptionHandler uncaughtExceptionHandler = new TestingUncaughtExceptionHandler()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "task.waitForTaskCompletion(false)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(uncaughtException,is(failingCause))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testUncaughtExceptionInAsynchronousCheckpointingOperation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "OperatorSnapshotFutures operatorSnapshotResult = new OperatorSnapshotFutures(ExceptionallyDoneFuture.of(failingCause),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testAsyncCheckpointException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "streamTask.finishInput()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "boolean isTaskRunning@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
20->17 [style = bold, label=""];
3->1 [style = bold, label=""];
12->23 [style = solid, label="uncaughtException"];
1->15 [style = dashed, label="0"];
16->24 [style = bold, label=""];
19->20 [style = bold, label=""];
5->7 [style = dotted, label="false"];
18->15 [style = bold, label=""];
14->22 [style = bold, label=""];
9->10 [style = solid, label="environment"];
2->9 [style = bold, label=""];
9->10 [style = bold, label=""];
15->19 [style = bold, label=""];
24->18 [style = bold, label=""];
13->16 [style = bold, label=""];
5->4 [style = dotted, label="true"];
23->14 [style = bold, label=""];
0->3 [style = solid, label="isTaskRunning"];
13->23 [style = solid, label="failingCause"];
17->12 [style = bold, label=""];
8->2 [style = bold, label=""];
11->0 [style = dotted, label="true"];
5->4 [style = bold, label=""];
6->8 [style = bold, label=""];
0->5 [style = solid, label="isTaskRunning"];
19->20 [style = solid, label="streamTask"];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
11->8 [style = bold, label=""];
13->24 [style = solid, label="failingCause"];
12->23 [style = bold, label=""];
3->10 [style = dashed, label="0"];
6->0 [style = dotted, label="true"];
13->16 [style = solid, label="failingCause"];
10->1 [style = bold, label=""];
0->10 [style = solid, label="isTaskRunning"];
9->3 [style = solid, label="environment"];
8->3 [style = solid, label="snapshotsInProgress"];
8->10 [style = solid, label="snapshotsInProgress"];
21->13 [style = bold, label=""];
}
