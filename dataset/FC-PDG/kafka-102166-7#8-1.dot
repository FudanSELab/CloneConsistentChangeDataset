digraph {
5 [style = filled, label = "shouldReturnEndOffsetSumForLagOfTaskWeDidNotPreviouslyOwn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(client.lagFor(TASK_0_1),equalTo(Task.LATEST_OFFSET))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "client.addPreviousTasksAndOffsetSums(taskOffsetSums)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(client.lagFor(TASK_0_1),equalTo(500L))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.computeTaskLags(null,allTaskEndOffsetSums)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Map<TaskId,Long> taskOffsetSums = Collections.singletonMap(TASK_0_1,Task.LATEST_OFFSET)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "client.addPreviousTasksAndOffsetSums(\"c1\",taskOffsetSums)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final Map<TaskId,Long> allTaskEndOffsetSums = Collections.singletonMap(TASK_0_1,500L)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldReturnEndOffsetSumForLagOfTaskWeDidNotPreviouslyOwn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "shouldReturnLatestOffsetForLagOfPreviousActiveRunningTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final Map<TaskId,Long> taskOffsetSums = Collections.emptyMap()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
6->1 [style = bold, label=""];
2->6 [style = solid, label="taskOffsetSums"];
5->2 [style = bold, label=""];
1->4 [style = bold, label=""];
2->0 [style = bold, label=""];
2->3 [style = solid, label="taskOffsetSums"];
0->1 [style = solid, label="allTaskEndOffsetSums"];
1->8 [style = bold, label=""];
3->6 [style = dashed, label="0"];
9->10 [style = bold, label=""];
3->1 [style = bold, label=""];
10->3 [style = solid, label="taskOffsetSums"];
0->6 [style = bold, label=""];
7->2 [style = bold, label=""];
10->0 [style = bold, label=""];
2->10 [style = dashed, label="0"];
4->8 [style = dashed, label="0"];
}
