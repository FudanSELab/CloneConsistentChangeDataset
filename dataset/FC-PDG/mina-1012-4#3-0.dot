digraph {
24 [style = filled, label = "future.setResult(true)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "InterruptedException e@@@20@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "final ExecutionException ee@@@23@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "IoFutureListener<Boolean> listener = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final InterruptedException e@@@20@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertFalse(future.isDone())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(future.isDone())@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(future.isCancelled())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "{}@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(future.isDone())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertFalse(future.isDone())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "verify(listener,never()).exception(Matchers.any())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "{}@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertFalse(future.isCancelled())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final TimeoutException e@@@25@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "future.register(listener)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "fail(\"This future was not interrupted\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ExecutionException ee@@@23@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fail(\"This future was not interrupted\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testSetListeners['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertFalse(future.isCancelled())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(future.get(1,TimeUnit.DAYS))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testTimedExceptionForTimedGet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testTimedExceptionForTimedGet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "TimeoutException e@@@25@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "verify(listener).completed(true)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertFalse(future.isCancelled())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->8 [style = bold, label=""];
20->21 [style = solid, label="listener"];
14->12 [style = dotted, label="true"];
7->10 [style = bold, label=""];
28->22 [style = bold, label=""];
0->16 [style = dashed, label="0"];
4->27 [style = dashed, label="0"];
3->12 [style = bold, label=""];
11->2 [style = bold, label=""];
4->7 [style = bold, label=""];
20->21 [style = bold, label=""];
23->24 [style = bold, label=""];
16->1 [style = dotted, label="true"];
16->1 [style = bold, label=""];
21->11 [style = bold, label=""];
12->8 [style = bold, label=""];
0->1 [style = bold, label=""];
24->25 [style = bold, label=""];
6->13 [style = bold, label=""];
14->12 [style = bold, label=""];
5->4 [style = bold, label=""];
25->26 [style = bold, label=""];
19->27 [style = bold, label=""];
15->4 [style = bold, label=""];
8->9 [style = bold, label=""];
3->12 [style = dotted, label="true"];
18->8 [style = bold, label=""];
26->28 [style = bold, label=""];
13->18 [style = dashed, label="0"];
13->8 [style = bold, label=""];
3->14 [style = dashed, label="0"];
11->23 [style = bold, label=""];
27->20 [style = bold, label=""];
17->18 [style = bold, label=""];
2->8 [style = bold, label=""];
0->1 [style = dotted, label="true"];
10->11 [style = bold, label=""];
}
