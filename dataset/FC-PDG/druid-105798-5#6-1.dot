digraph {
154 [style = filled, label = "checkBitmapIndex(Arrays.asList(0,1,2),adapter.getBitmapIndex(\"dimMultiVal\",null))@@@141@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final List<DebugRow> rowList = RowIteratorHelper.toList(adapter.getRows())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,2),adapter.getBitmapIndex(\"dimMultiVal\",\"4\"))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "Assert.assertEquals(2L,rowList.get(10).metricValues().get(0))@@@172@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
187 [style = filled, label = "Assert.assertEquals(2L,rowList.get(12).metricValues().get(0))@@@176@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
116 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"3\")),rowList.get(5).dimensionValues())@@@127@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
137 [style = filled, label = "listWithEmptyStringEvent.put(\"dimA\",\"leek\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
189 [style = filled, label = "singleValEvent.put(\"dimA\",\"leek\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "final File tmpDirB = temporaryFolder.newFolder()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
150 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"potato\",\"2\"),rowList.get(10).dimensionValues())@@@137@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
183 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"3\",\"5\")),rowList.get(9).dimensionValues())@@@169@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
181 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",\"1\"),rowList.get(3).dimensionValues())@@@123@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "Map<String,Object> multivalEvent8 = new HashMap<>()@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
185 [style = filled, label = "List<String> multivalEvent5List = Arrays.asList(\"1\",\"2\",\"3\",null)@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
195 [style = filled, label = "Assert.assertEquals(8L,rowList.get(0).metricValues().get(0))@@@152@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
123 [style = filled, label = "Map<String,Object> multivalEvent6 = new HashMap<>()@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "listWithSingleValEvent2.put(\"sumCount\",1L)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
210 [style = filled, label = "final File tmpDirMerged = temporaryFolder.newFolder()@@@108@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "Assert.assertEquals(4L,rowList.get(11).metricValues().get(0))@@@174@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
132 [style = filled, label = "final File tmpDirA = temporaryFolder.newFolder()@@@97@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "Map<String,Object> multivalEvent9 = new HashMap<>()@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
178 [style = filled, label = "checkBitmapIndex(Arrays.asList(0,1,2,3,4,5,6,7,8,9,10,11),adapter.getBitmapIndex(\"dimA\",\"leek\"))@@@179@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
209 [style = filled, label = "final File tmpDir = temporaryFolder.newFolder()@@@103@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
136 [style = filled, label = "Assert.assertEquals(4L,rowList.get(13).metricValues().get(0))@@@178@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
156 [style = filled, label = "listWithSingleValEvent2.put(\"dimMultiVal\",ImmutableList.of(\"2\"))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
196 [style = filled, label = "Map<String,Object> listWithNullEvent = new HashMap<>()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
202 [style = filled, label = "Map<String,Object> multivalEvent7 = new HashMap<>()@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"2\",\"4\")),rowList.get(1).dimensionValues())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
212 [style = filled, label = "listWithNull.add(null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "checkBitmapIndex(Collections.singletonList(10),adapter.getBitmapIndex(\"dimMultiVal\",\"4\"))@@@186@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
174 [style = filled, label = "Assert.assertEquals(4L,rowList.get(3).metricValues().get(0))@@@124@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
218 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"potato\",Arrays.asList(\"1\",\"3\")),rowList.get(12).dimensionValues())@@@175@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Assert.assertEquals(3,rowList.size())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "multivalEvent.put(\"sumCount\",1L)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "Assert.assertEquals(4L,rowList.get(1).metricValues().get(0))@@@120@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
140 [style = filled, label = "checkBitmapIndex(Collections.singletonList(7),adapter.getBitmapIndex(\"dimMultiVal\",\"4\"))@@@146@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "NullHandling.replaceWithDefault()@@@115@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "multivalEvent2.put(\"dimA\",\"leek\")@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "testMultivalDim_mergeAcrossSegments_rollupWorks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
152 [style = filled, label = "emptyStringEvent.put(\"sumCount\",1L)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
144 [style = filled, label = "Assert.assertEquals(2L,rowList.get(4).metricValues().get(0))@@@160@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
165 [style = filled, label = "testMultivalDim_persistAndMerge_dimensionValueOrderingRules['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
143 [style = filled, label = "nullEvent.put(\"sumCount\",1L)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
125 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"4\")),rowList.get(10).dimensionValues())@@@171@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final QueryableIndexIndexableAdapter adapter = new QueryableIndexIndexableAdapter(merged)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(2L,rowList.get(7).metricValues().get(0))@@@132@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
197 [style = filled, label = "listWithSingleValEvent.put(\"sumCount\",1L)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
141 [style = filled, label = "emptyListEvent.put(\"dimMultiVal\",ImmutableList.of())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "Map<String,Object> emptyStringEvent = new HashMap<>()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
121 [style = filled, label = "Assert.assertEquals(4L,rowList.get(3).metricValues().get(0))@@@158@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
167 [style = filled, label = "listWithSingleValEvent.put(\"dimMultiVal\",ImmutableList.of(\"1\"))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "Assert.assertEquals(4L,rowList.get(6).metricValues().get(0))@@@164@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
194 [style = filled, label = "Map<String,Object> listWithSingleValEvent = new HashMap<>()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
129 [style = filled, label = "checkBitmapIndex(ImmutableList.of(3,4,5),adapter.getBitmapIndex(\"dimMultiVal\",\"\"))@@@182@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
163 [style = filled, label = "multivalEvent2.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"4\"))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
160 [style = filled, label = "listWithSingleValEvent2.put(\"dimA\",\"leek\")@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "checkBitmapIndex(Collections.singletonList(9),adapter.getBitmapIndex(\"dimMultiVal\",\"5\"))@@@187@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "IncrementalIndex toPersistA = new OnheapIncrementalIndex.Builder().setIndexSchema(indexSchema).setMaxRowCount(1000).build()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",null),rowList.get(0).dimensionValues())@@@151@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertEquals(2L,rowList.get(6).metricValues().get(0))@@@130@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Assert.assertEquals(4L,rowList.get(8).metricValues().get(0))@@@134@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Map<String,Object> event1 = new HashMap<>()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",\"2\"),rowList.get(11).dimensionValues())@@@173@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(null,\"1\",\"2\",\"3\")),rowList.get(1).dimensionValues())@@@119@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "multivalEvent6.put(\"sumCount\",1L)@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
134 [style = filled, label = "Map<String,Object> singleValEvent = new HashMap<>()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
216 [style = filled, label = "listWithNullEvent.put(\"dimA\",\"leek\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "checkBitmapIndex(Collections.singletonList(0),adapter.getBitmapIndex(\"dimMultiVal\",\"5\"))@@@52@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
208 [style = filled, label = "Map<String,Object> multivalEvent4 = new HashMap<>()@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "event2.put(\"dimA\",\"leek\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "multivalEvent3.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"3\",\"5\"))@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "checkBitmapIndex(Arrays.asList(0,1,2),adapter.getBitmapIndex(\"dimMultiVal\",\"1\"))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"\",\"3\")),rowList.get(5).dimensionValues())@@@161@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "Map<String,Object> singleValEvent3 = new HashMap<>()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
130 [style = filled, label = "listWithSingleValEvent3.put(\"dimA\",\"potato\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
198 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"dimA\",\"dimMultiVal\"),ImmutableList.copyOf(adapter.getDimensionNames()))@@@114@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "Map<String,Object> listWithSingleValEvent2 = new HashMap<>()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
145 [style = filled, label = "Map<String,Object> listWithSingleValEvent3 = new HashMap<>()@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "event4.put(\"sumCount\",1L)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
147 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(null,\"1\",\"2\",\"3\")),rowList.get(1).dimensionValues())@@@153@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
172 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"potato\",\"2\"),rowList.get(13).dimensionValues())@@@177@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
151 [style = filled, label = "listWithEmptyStringEvent.put(\"sumCount\",1L)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
114 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(null,\"3\")),rowList.get(2).dimensionValues())@@@155@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
215 [style = filled, label = "checkBitmapIndex(Arrays.asList(0,1,2),adapter.getBitmapIndex(\"dimMultiVal\",null))@@@181@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
131 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",\"\"),rowList.get(3).dimensionValues())@@@157@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
184 [style = filled, label = "Map<String,Object> multivalEvent3 = new HashMap<>()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "toPersistA.add(new MapBasedInputRow(1,dims,event2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
213 [style = filled, label = "singleValEvent2.put(\"dimMultiVal\",\"2\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
157 [style = filled, label = "nullEvent2.put(\"sumCount\",1L)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
179 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,2,4,5,7,8,9,12),adapter.getBitmapIndex(\"dimMultiVal\",\"3\"))@@@185@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
155 [style = filled, label = "Assert.assertEquals(2L,rowList.get(2).metricValues().get(0))@@@156@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "IncrementalIndexSchema indexSchema = new IncrementalIndexSchema.Builder().withDimensionsSpec(new DimensionsSpec(ImmutableList.of(new StringDimensionSchema(\"dimA\",MultiValueHandling.SORTED_ARRAY,true),new StringDimensionSchema(\"dimMultiVal\",MultiValueHandling.SORTED_ARRAY,true)))).withMetrics(new LongSumAggregatorFactory(\"sumCount\",\"sumCount\")).withRollup(true).build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "IncrementalIndex toPersistB = new IncrementalIndex.Builder().setIndexSchema(indexSchema).setMaxRowCount(1000).buildOnheap()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
175 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"\",\"1\",\"2\",\"3\")),rowList.get(4).dimensionValues())@@@159@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "emptyListEvent.put(\"sumCount\",1L)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "Map<String,Object> emptyListEvent = new HashMap<>()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
193 [style = filled, label = "IncrementalIndex toPersist = new IncrementalIndex.Builder().setIndexSchema(indexSchema).setMaxRowCount(1000).buildOnheap()@@@101@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "event4.put(\"dimA\",\"potato\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "singleValEvent3.put(\"dimA\",\"potato\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
113 [style = filled, label = "singleValEvent3.put(\"dimMultiVal\",\"2\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "event2.put(\"sumCount\",1L)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "event3.put(\"sumCount\",1L)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "List<String> listWithNull = new ArrayList<>()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
188 [style = filled, label = "emptyStringEvent.put(\"dimMultiVal\",\"\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "checkBitmapIndex(Collections.singletonList(2),adapter.getBitmapIndex(\"dimMultiVal\",\"0\"))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<String> dims = Arrays.asList(\"dimA\",\"dimMultiVal\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkBitmapIndex(Arrays.asList(0,1),adapter.getBitmapIndex(\"dimMultiVal\",\"2\"))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "QueryableIndex indexB = closer.closeLater(indexIO.loadIndex(indexMerger.persist(toPersistB,tmpDirB,indexSpec,null)))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "multivalEvent7.put(\"dimA\",\"leek\")@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
127 [style = filled, label = "Assert.assertEquals(2L,rowList.get(5).metricValues().get(0))@@@162@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
182 [style = filled, label = "toPersist.add(new MapBasedInputRow(1,dims,event))@@@102@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "event2.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"2\",\"3\",\"5\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
171 [style = filled, label = "multivalEvent4.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"2\",\"3\"))@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "event1.put(\"sumCount\",1L)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "singleValEvent.put(\"sumCount\",1L)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "multivalEvent8.put(\"dimA\",\"leek\")@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "IncrementalIndex toPersistB = new OnheapIncrementalIndex.Builder().setIndexSchema(indexSchema).setMaxRowCount(1000).build()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
110 [style = filled, label = "multivalEvent3.put(\"sumCount\",1L)@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
128 [style = filled, label = "Assert.assertEquals(2L,rowList.get(9).metricValues().get(0))@@@170@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "nullEvent2.put(\"dimA\",\"leek\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
142 [style = filled, label = "nullEvent.put(\"dimA\",\"leek\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
161 [style = filled, label = "listWithNullEvent.put(\"dimMultiVal\",listWithNull)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"dimA\",\"dimMultiVal\"),ImmutableList.copyOf(adapter.getDimensionNames()))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
176 [style = filled, label = "Map<String,Object> listWithEmptyStringEvent = new HashMap<>()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
139 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,3,4,5,6,7,9),adapter.getBitmapIndex(\"dimMultiVal\",\"1\"))@@@143@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
186 [style = filled, label = "Assert.assertEquals(4L,rowList.get(2).metricValues().get(0))@@@122@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,4,8,10),adapter.getBitmapIndex(\"dimMultiVal\",\"2\"))@@@144@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Map<String,Object> event4 = new HashMap<>()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "singleValEvent3.put(\"sumCount\",1L)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "singleEventIndexes.add(indexA)@@@107@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
180 [style = filled, label = "nullEvent2.put(\"dimMultiVal\",null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "checkBitmapIndex(Collections.singletonList(6),adapter.getBitmapIndex(\"dimMultiVal\",\"5\"))@@@147@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
192 [style = filled, label = "multivalEvent.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"3\"))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
117 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"2\",\"3\")),rowList.get(7).dimensionValues())@@@165@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
203 [style = filled, label = "checkBitmapIndex(ImmutableList.of(),adapter.getBitmapIndex(\"dimMultiVal\",\"\"))@@@142@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
206 [style = filled, label = "Assert.assertEquals(12L,rowList.get(0).metricValues().get(0))@@@118@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "listWithNullEvent.put(\"sumCount\",1L)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "final QueryableIndexIndexableAdapter adapter = new QueryableIndexIndexableAdapter(merged)@@@112@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final QueryableIndex merged = closer.closeLater(indexIO.loadIndex(indexMerger.mergeQueryableIndex(Arrays.asList(indexA,indexB),true,new AggregatorFactory((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8fa337,tmpDirMerged,indexSpec,null,-1)))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "final QueryableIndex merged = closer.closeLater(indexIO.loadIndex(indexMerger.mergeQueryableIndex(singleEventIndexes,true,new AggregatorFactory((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8fa754,tmpDirMerged,indexSpec,null,-1)))@@@109@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
207 [style = filled, label = "List<Map<String,Object>> events = ImmutableList.of(nullEvent,nullEvent2,emptyListEvent,listWithNullEvent,emptyStringEvent,listWithEmptyStringEvent,singleValEvent,singleValEvent2,singleValEvent3,listWithSingleValEvent,listWithSingleValEvent2,listWithSingleValEvent3,multivalEvent,multivalEvent2,multivalEvent3,multivalEvent4,multivalEvent5,multivalEvent6,multivalEvent7,multivalEvent8,multivalEvent9)@@@92@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
214 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",\"1\"),rowList.get(6).dimensionValues())@@@163@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "listWithSingleValEvent.put(\"dimA\",\"leek\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "multivalEvent9.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"3\"))@@@90@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Map<String,Object> event3 = new HashMap<>()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "emptyListEvent.put(\"dimA\",\"leek\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "List<String> multivalEvent6List = Arrays.asList(null,\"3\")@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "checkBitmapIndex(Arrays.asList(0,1,2,3,4,5,6,7,8),adapter.getBitmapIndex(\"dimA\",\"leek\"))@@@139@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "IncrementalIndex toPersistA = new IncrementalIndex.Builder().setIndexSchema(indexSchema).setMaxRowCount(1000).buildOnheap()@@@93@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "toPersistA.add(new MapBasedInputRow(1,dims,event1))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
205 [style = filled, label = "emptyStringEvent.put(\"dimA\",\"leek\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "multivalEvent4.put(\"dimA\",\"leek\")@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"3\",\"5\")),rowList.get(6).dimensionValues())@@@129@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "checkBitmapIndex(Arrays.asList(12,13),adapter.getBitmapIndex(\"dimA\",\"potato\"))@@@180@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
219 [style = filled, label = "final List<DebugRow> rowList = RowIteratorHelper.toList(adapter.getRows())@@@113@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "event3.put(\"dimA\",\"leek\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
170 [style = filled, label = "multivalEvent4.put(\"sumCount\",1L)@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "singleValEvent2.put(\"sumCount\",1L)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "toPersistB.add(new MapBasedInputRow(1,dims,event4))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
190 [style = filled, label = "multivalEvent2.put(\"sumCount\",1L)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "checkBitmapIndex(Collections.singletonList(0),adapter.getBitmapIndex(\"dimMultiVal\",\"3\"))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "event1.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"2\",\"4\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
217 [style = filled, label = "toPersistA.add(new MapBasedInputRow(1,dims,event))@@@95@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "listWithSingleValEvent3.put(\"dimMultiVal\",ImmutableList.of(\"2\"))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",\"2\"),rowList.get(8).dimensionValues())@@@133@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"2\",\"3\",\"5\")),rowList.get(0).dimensionValues())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "event1.put(\"dimA\",\"leek\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(2L,rowList.get(5).metricValues().get(0))@@@128@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "listWithEmptyStringEvent.put(\"dimMultiVal\",ImmutableList.of(\"\"))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"potato\",Arrays.asList(\"1\",\"3\")),rowList.get(9).dimensionValues())@@@135@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
166 [style = filled, label = "singleValEvent.put(\"dimMultiVal\",\"1\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "multivalEvent6.put(\"dimMultiVal\",multivalEvent6List)@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "Assert.assertEquals(4L,rowList.get(10).metricValues().get(0))@@@138@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "multivalEvent6.put(\"dimA\",\"leek\")@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
126 [style = filled, label = "multivalEvent9.put(\"dimA\",\"potato\")@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
158 [style = filled, label = "singleValEvent2.put(\"dimA\",\"leek\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(11,rowList.size())@@@116@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "Map<String,Object> multivalEvent5 = new HashMap<>()@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
133 [style = filled, label = "multivalEvent3.put(\"dimA\",\"leek\")@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
169 [style = filled, label = "Map<String,Object> multivalEvent = new HashMap<>()@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"4\")),rowList.get(7).dimensionValues())@@@131@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "multivalEvent8.put(\"dimMultiVal\",ImmutableList.of(\"\",\"3\"))@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "Map<String,Object> multivalEvent2 = new HashMap<>()@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Map<String,Object> event2 = new HashMap<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
164 [style = filled, label = "Assert.assertEquals(2L,rowList.get(7).metricValues().get(0))@@@166@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
204 [style = filled, label = "multivalEvent9.put(\"sumCount\",1L)@@@91@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "final File tmpDirMerged = temporaryFolder.newFolder()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "Assert.assertEquals(14,rowList.size())@@@150@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "Map<String,Object> singleValEvent2 = new HashMap<>()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "Assert.assertEquals(2L,rowList.get(1).metricValues().get(0))@@@154@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "multivalEvent.put(\"dimA\",\"leek\")@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
168 [style = filled, label = "List<QueryableIndex> singleEventIndexes = new ArrayList<>()@@@99@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "Assert.assertEquals(2L,rowList.get(8).metricValues().get(0))@@@168@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "multivalEvent8.put(\"sumCount\",1L)@@@87@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
159 [style = filled, label = "checkBitmapIndex(Arrays.asList(9,10),adapter.getBitmapIndex(\"dimA\",\"potato\"))@@@140@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
138 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"2\",\"3\")),rowList.get(4).dimensionValues())@@@125@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "multivalEvent5.put(\"sumCount\",1L)@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "testMultivalDim_mergeAcrossSegments_rollupWorks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "event3.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"2\",\"4\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "Assert.assertEquals(2L,rowList.get(9).metricValues().get(0))@@@136@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
122 [style = filled, label = "QueryableIndex queryableIndex = closer.closeLater(indexIO.loadIndex(indexMerger.persist(toPersist,tmpDir,indexSpec,null)))@@@104@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
153 [style = filled, label = "singleEventIndexes.add(queryableIndex)@@@105@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
201 [style = filled, label = "Map<String,Object> nullEvent2 = new HashMap<>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "Assert.assertEquals(2L,rowList.get(4).metricValues().get(0))@@@126@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
211 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,4,6,7,8,9,10,12),adapter.getBitmapIndex(\"dimMultiVal\",\"1\"))@@@183@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,4,7,11,13),adapter.getBitmapIndex(\"dimMultiVal\",\"2\"))@@@184@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "event4.put(\"dimMultiVal\",ImmutableList.of(\"0\",\"1\",\"4\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "multivalEvent5.put(\"dimA\",\"leek\")@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(1L,rowList.get(0).metricValues().get(0))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "toPersistB.add(new MapBasedInputRow(1,dims,event3))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "QueryableIndex indexA = closer.closeLater(indexIO.loadIndex(indexMerger.persist(toPersistA,tmpDirA,indexSpec,null)))@@@98@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
199 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(null,\"3\")),rowList.get(2).dimensionValues())@@@121@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "checkBitmapIndex(Arrays.asList(1,2,4,5,6,9),adapter.getBitmapIndex(\"dimMultiVal\",\"3\"))@@@145@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
111 [style = filled, label = "multivalEvent7.put(\"dimMultiVal\",ImmutableList.of(\"1\",\"2\",\"3\",\"\"))@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
162 [style = filled, label = "multivalEvent7.put(\"sumCount\",1L)@@@83@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
191 [style = filled, label = "multivalEvent5.put(\"dimMultiVal\",multivalEvent5List)@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
177 [style = filled, label = "listWithSingleValEvent3.put(\"sumCount\",1L)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
173 [style = filled, label = "Map<String,Object> nullEvent = new HashMap<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",Arrays.asList(\"1\",\"3\")),rowList.get(8).dimensionValues())@@@167@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
200 [style = filled, label = "Assert.assertEquals(Arrays.asList(\"leek\",null),rowList.get(0).dimensionValues())@@@117@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22->82 [style = dotted, label="true"];
25->34 [style = bold, label=""];
22->144 [style = dotted, label="false"];
16->7 [style = bold, label=""];
86->219 [style = bold, label=""];
132->115 [style = solid, label="tmpDirA"];
217->132 [style = bold, label=""];
41->48 [style = bold, label=""];
92->123 [style = bold, label=""];
135->207 [style = solid, label="multivalEvent5"];
15->46 [style = solid, label="dims"];
83->127 [style = bold, label=""];
174->138 [style = bold, label=""];
127->214 [style = bold, label=""];
47->24 [style = solid, label="tmpDirB"];
3->30 [style = bold, label=""];
22->200 [style = dotted, label="true"];
194->207 [style = solid, label="listWithSingleValEvent"];
5->49 [style = dashed, label="0"];
9->200 [style = dashed, label="0"];
76->103 [style = bold, label=""];
188->152 [style = bold, label=""];
73->99 [style = bold, label=""];
17->42 [style = bold, label=""];
22->89 [style = dotted, label="true"];
32->26 [style = bold, label=""];
140->82 [style = bold, label=""];
141->53 [style = bold, label=""];
49->25 [style = bold, label=""];
22->178 [style = dotted, label="false"];
134->189 [style = bold, label=""];
22->116 [style = dotted, label="true"];
107->52 [style = bold, label=""];
51->24 [style = solid, label="toPersistB"];
197->91 [style = bold, label=""];
45->15 [style = bold, label=""];
85->65 [style = bold, label=""];
115->101 [style = solid, label="indexA"];
91->160 [style = bold, label=""];
68->179 [style = bold, label=""];
114->155 [style = bold, label=""];
84->194 [style = bold, label=""];
209->122 [style = bold, label=""];
180->157 [style = bold, label=""];
94->218 [style = bold, label=""];
22->41 [style = dotted, label="true"];
169->207 [style = solid, label="multivalEvent"];
13->46 [style = solid, label="event4"];
4->1 [style = bold, label=""];
30->0 [style = bold, label=""];
33->37 [style = bold, label=""];
44->31 [style = bold, label=""];
5->115 [style = solid, label="toPersistA"];
186->181 [style = bold, label=""];
22->199 [style = dotted, label="true"];
167->197 [style = bold, label=""];
208->96 [style = bold, label=""];
22->187 [style = dotted, label="false"];
184->207 [style = solid, label="multivalEvent3"];
22->136 [style = dotted, label="false"];
39->11 [style = bold, label=""];
15->18 [style = bold, label=""];
173->142 [style = bold, label=""];
28->46 [style = bold, label=""];
24->4 [style = bold, label=""];
11->28 [style = solid, label="event3"];
22->129 [style = dotted, label="false"];
166->95 [style = bold, label=""];
18->5 [style = bold, label=""];
70->87 [style = bold, label=""];
22->12 [style = bold, label=""];
22->12 [style = solid, label="tmpDirA"];
123->207 [style = solid, label="multivalEvent6"];
22->164 [style = dotted, label="false"];
210->112 [style = bold, label=""];
142->143 [style = bold, label=""];
15->21 [style = solid, label="dims"];
15->182 [style = solid, label="dims"];
79->116 [style = bold, label=""];
39->51 [style = dashed, label="0"];
135->109 [style = bold, label=""];
168->193 [style = bold, label=""];
101->210 [style = bold, label=""];
58->192 [style = bold, label=""];
126->63 [style = bold, label=""];
90->207 [style = solid, label="singleValEvent2"];
31->6 [style = bold, label=""];
185->135 [style = bold, label=""];
160->156 [style = bold, label=""];
104->92 [style = bold, label=""];
22->150 [style = dotted, label="true"];
22->147 [style = dotted, label="false"];
22->81 [style = dotted, label="false"];
120->111 [style = bold, label=""];
21->35 [style = bold, label=""];
53->100 [style = bold, label=""];
22->128 [style = dotted, label="false"];
91->207 [style = solid, label="listWithSingleValEvent2"];
22->83 [style = dotted, label="false"];
118->113 [style = bold, label=""];
19->2 [style = bold, label=""];
22->119 [style = dotted, label="false"];
5->25 [style = bold, label=""];
74->98 [style = bold, label=""];
125->81 [style = bold, label=""];
153->193 [style = bold, label=""];
4->1 [style = solid, label="merged"];
22->183 [style = dotted, label="false"];
193->182 [style = bold, label=""];
97->202 [style = bold, label=""];
14->114 [style = dashed, label="0"];
113->84 [style = bold, label=""];
1->32 [style = bold, label=""];
40->4 [style = solid, label="tmpDirMerged"];
176->207 [style = solid, label="listWithEmptyStringEvent"];
111->162 [style = bold, label=""];
116->37 [style = bold, label=""];
133->56 [style = bold, label=""];
171->170 [style = bold, label=""];
112->86 [style = bold, label=""];
22->117 [style = dotted, label="false"];
12->4 [style = solid, label="indexA"];
139->107 [style = bold, label=""];
39->24 [style = solid, label="toPersistB"];
22->54 [style = dotted, label="false"];
22->159 [style = dotted, label="true"];
95->90 [style = bold, label=""];
163->190 [style = bold, label=""];
89->150 [style = bold, label=""];
22->103 [style = dotted, label="true"];
24->4 [style = solid, label="indexB"];
194->80 [style = bold, label=""];
117->164 [style = bold, label=""];
119->69 [style = bold, label=""];
64->195 [style = bold, label=""];
105->126 [style = bold, label=""];
22->36 [style = dotted, label="true"];
88->61 [style = bold, label=""];
22->138 [style = dotted, label="true"];
14->41 [style = bold, label=""];
22->175 [style = dotted, label="false"];
22->71 [style = dotted, label="false"];
22->75 [style = dotted, label="false"];
103->159 [style = bold, label=""];
20->29 [style = bold, label=""];
162->124 [style = bold, label=""];
108->118 [style = bold, label=""];
41->155 [style = dashed, label="0"];
38->23 [style = bold, label=""];
0->35 [style = solid, label="event2"];
56->110 [style = bold, label=""];
115->168 [style = bold, label=""];
29->28 [style = bold, label=""];
22->52 [style = dotted, label="true"];
37->14 [style = bold, label=""];
22->93 [style = dotted, label="true"];
81->72 [style = bold, label=""];
77->207 [style = solid, label="emptyListEvent"];
177->169 [style = bold, label=""];
65->93 [style = bold, label=""];
207->5 [style = bold, label=""];
182->209 [style = bold, label=""];
13->8 [style = bold, label=""];
23->9 [style = bold, label=""];
124->62 [style = bold, label=""];
27->13 [style = bold, label=""];
172->136 [style = bold, label=""];
212->196 [style = bold, label=""];
165->15 [style = bold, label=""];
100->161 [style = solid, label="listWithNull"];
55->177 [style = bold, label=""];
22->179 [style = dotted, label="false"];
22->14 [style = dotted, label="true"];
178->54 [style = bold, label=""];
15->35 [style = solid, label="dims"];
22->195 [style = dotted, label="false"];
198->22 [style = bold, label=""];
8->20 [style = bold, label=""];
22->206 [style = dotted, label="true"];
161->70 [style = bold, label=""];
22->114 [style = dotted, label="false"];
112->86 [style = solid, label="merged"];
49->12 [style = solid, label="toPersistA"];
191->104 [style = bold, label=""];
75->59 [style = bold, label=""];
36->44 [style = bold, label=""];
195->147 [style = bold, label=""];
98->97 [style = bold, label=""];
57->180 [style = bold, label=""];
132->115 [style = bold, label=""];
124->207 [style = solid, label="multivalEvent8"];
210->112 [style = solid, label="tmpDirMerged"];
109->191 [style = bold, label=""];
121->175 [style = bold, label=""];
196->216 [style = bold, label=""];
12->200 [style = bold, label=""];
22->155 [style = dotted, label="false"];
144->83 [style = bold, label=""];
22->76 [style = dotted, label="true"];
156->60 [style = bold, label=""];
36->85 [style = bold, label=""];
54->215 [style = bold, label=""];
202->120 [style = bold, label=""];
22->79 [style = dotted, label="true"];
22->186 [style = dotted, label="true"];
35->51 [style = bold, label=""];
5->217 [style = bold, label=""];
22->139 [style = dotted, label="true"];
15->28 [style = solid, label="dims"];
123->74 [style = bold, label=""];
35->39 [style = bold, label=""];
22->37 [style = dotted, label="true"];
145->130 [style = bold, label=""];
22->121 [style = dotted, label="false"];
181->174 [style = bold, label=""];
60->145 [style = bold, label=""];
214->71 [style = bold, label=""];
205->188 [style = bold, label=""];
22->64 [style = dotted, label="false"];
22->174 [style = dotted, label="true"];
34->217 [style = dashed, label="0"];
164->119 [style = bold, label=""];
67->105 [style = bold, label=""];
155->131 [style = bold, label=""];
6->10 [style = bold, label=""];
22->107 [style = dotted, label="true"];
215->129 [style = bold, label=""];
22->146 [style = dotted, label="false"];
192->88 [style = bold, label=""];
146->64 [style = bold, label=""];
176->137 [style = bold, label=""];
199->186 [style = bold, label=""];
22->125 [style = dotted, label="false"];
22->72 [style = dotted, label="false"];
106->114 [style = bold, label=""];
46->22 [style = bold, label=""];
218->187 [style = bold, label=""];
154->203 [style = bold, label=""];
66->163 [style = bold, label=""];
42->43 [style = bold, label=""];
22->65 [style = dotted, label="true"];
22->172 [style = dotted, label="false"];
100->212 [style = bold, label=""];
159->154 [style = bold, label=""];
105->207 [style = solid, label="multivalEvent9"];
80->167 [style = bold, label=""];
211->68 [style = bold, label=""];
110->208 [style = bold, label=""];
26->38 [style = bold, label=""];
22->140 [style = dotted, label="true"];
25->21 [style = solid, label="event1"];
22->154 [style = dotted, label="true"];
143->201 [style = bold, label=""];
206->73 [style = bold, label=""];
148->151 [style = bold, label=""];
72->94 [style = bold, label=""];
190->184 [style = bold, label=""];
61->207 [style = solid, label="multivalEvent2"];
61->66 [style = bold, label=""];
22->106 [style = dotted, label="false"];
22->214 [style = dotted, label="false"];
102->108 [style = bold, label=""];
92->98 [style = solid, label="multivalEvent6List"];
62->149 [style = bold, label=""];
22->131 [style = dotted, label="false"];
52->140 [style = bold, label=""];
18->173 [style = bold, label=""];
184->133 [style = bold, label=""];
22->69 [style = dotted, label="false"];
183->128 [style = bold, label=""];
18->49 [style = bold, label=""];
22->127 [style = dotted, label="false"];
22->47 [style = bold, label=""];
138->79 [style = bold, label=""];
219->198 [style = bold, label=""];
187->172 [style = bold, label=""];
158->213 [style = bold, label=""];
51->11 [style = bold, label=""];
15->217 [style = solid, label="dims"];
22->73 [style = dotted, label="true"];
22->99 [style = dotted, label="true"];
122->153 [style = bold, label=""];
22->218 [style = dotted, label="false"];
193->122 [style = solid, label="toPersist"];
168->112 [style = solid, label="singleEventIndexes"];
213->102 [style = bold, label=""];
185->191 [style = solid, label="multivalEvent5List"];
9->33 [style = bold, label=""];
175->144 [style = bold, label=""];
0->17 [style = bold, label=""];
99->199 [style = bold, label=""];
78->141 [style = bold, label=""];
157->77 [style = bold, label=""];
189->166 [style = bold, label=""];
152->176 [style = bold, label=""];
77->78 [style = bold, label=""];
90->158 [style = bold, label=""];
201->57 [style = bold, label=""];
147->106 [style = bold, label=""];
5->12 [style = solid, label="toPersistA"];
108->207 [style = solid, label="singleValEvent3"];
208->207 [style = solid, label="multivalEvent4"];
22->211 [style = dotted, label="false"];
145->207 [style = solid, label="listWithSingleValEvent3"];
2->27 [style = bold, label=""];
209->122 [style = solid, label="tmpDir"];
134->207 [style = solid, label="singleValEvent"];
22->59 [style = dotted, label="false"];
71->117 [style = bold, label=""];
129->211 [style = bold, label=""];
47->40 [style = bold, label=""];
136->178 [style = bold, label=""];
202->207 [style = solid, label="multivalEvent7"];
170->185 [style = bold, label=""];
22->85 [style = dotted, label="true"];
12->24 [style = bold, label=""];
40->12 [style = bold, label=""];
10->16 [style = bold, label=""];
87->207 [style = solid, label="emptyStringEvent"];
22->48 [style = dotted, label="true"];
50->15 [style = bold, label=""];
203->139 [style = bold, label=""];
131->121 [style = bold, label=""];
128->125 [style = bold, label=""];
130->55 [style = bold, label=""];
93->89 [style = bold, label=""];
22->181 [style = dotted, label="true"];
43->21 [style = bold, label=""];
22->94 [style = dotted, label="false"];
48->36 [style = bold, label=""];
69->183 [style = bold, label=""];
216->161 [style = bold, label=""];
196->207 [style = solid, label="listWithNullEvent"];
179->75 [style = bold, label=""];
11->19 [style = bold, label=""];
22->146 [style = bold, label=""];
200->206 [style = bold, label=""];
153->101 [style = bold, label=""];
63->204 [style = bold, label=""];
22->12 [style = dotted, label="true"];
22->203 [style = dotted, label="true"];
137->148 [style = bold, label=""];
96->171 [style = bold, label=""];
150->76 [style = bold, label=""];
169->58 [style = bold, label=""];
122->153 [style = solid, label="queryableIndex"];
34->3 [style = bold, label=""];
22->215 [style = dotted, label="false"];
22->68 [style = dotted, label="false"];
149->67 [style = bold, label=""];
204->207 [style = bold, label=""];
151->134 [style = bold, label=""];
87->205 [style = bold, label=""];
}
