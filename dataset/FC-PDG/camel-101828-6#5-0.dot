digraph {
19 [style = filled, label = "Exchange ex1 = added.getExchanges().get(0)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "template.send(\"direct:commit-all-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,COMMIT_MESSAGE_ALL)}})@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "fileToAdd.createNewFile()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "count++@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertTrue(status.getAdded().contains(FILENAME_BRANCH_TO_ADD))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "git = new Git(repository)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(count,2)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Iterable<RevCommit> logs = new Git(repository).log().call()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "File fileToAdd1 = new File(GIT_LOCAL_REPO,FILENAME_BRANCH_TO_ADD)@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE_ALL)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "count++@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameBranchToAdd)}})@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(count,1)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(commitMessage,ex2.getOut().getBody().getShortMessage())@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Exchange ex2 = added.getExchanges().get(1)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(status.getAdded().contains(filenameBranchToAdd))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "count == 0@@@48@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Thread.sleep(1 * 5000)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertFalse(status.getAdded().contains(FILENAME_TO_ADD))@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "status = new Git(repository).status().call()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Git git = new Git(repository)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "git.checkout().setCreateBranch(false).setName(BRANCH_TEST).call()@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "removeFileBranchTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,COMMIT_MESSAGE)}})@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "count == 1@@@49@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(status.getAdded().contains(FILENAME_TO_ADD))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(count,2)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE)@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "MockEndpoint added = getMockEndpoint(\"mock:result-commit\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "fileToAdd1.createNewFile()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "File gitDir = new File(GIT_LOCAL_REPO,\".git\")@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "template.send(\"direct:remove-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,FILENAME_TO_ADD)}})@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "logs = git.log().call()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getOut().getBody().getShortMessage())@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Repository repository = getTestRepository()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "template.send(\"direct:add-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,FILENAME_BRANCH_TO_ADD)}})@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "repository.close()@@@57@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "count = 0@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "commitConsumerTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "logs = new Git(repository).log().call()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int count = 0@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,\"Test test Commit\")}})@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "status = git.status().call()@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,FILENAME_TO_ADD)}})@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "git.checkout().setCreateBranch(true).setName(BRANCH_TEST).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Status status = new Git(repository).status().call()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "File fileToAdd = new File(GIT_LOCAL_REPO,FILENAME_TO_ADD)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "commitConsumerTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "assertEquals(rev.getShortMessage(),COMMIT_MESSAGE)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(COMMIT_MESSAGE,ex2.getOut().getBody().getShortMessage())@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "repository.close()@@@63@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11->32 [style = dashed, label="0"];
18->3 [style = bold, label=""];
24->25 [style = solid, label="count"];
49->51 [style = bold, label=""];
55->28 [style = dotted, label="true"];
9->6 [style = bold, label=""];
3->27 [style = bold, label=""];
44->46 [style = bold, label=""];
1->28 [style = bold, label=""];
29->2 [style = bold, label=""];
46->24 [style = solid, label="count"];
4->36 [style = dashed, label="0"];
10->39 [style = bold, label=""];
23->13 [style = bold, label=""];
43->53 [style = bold, label=""];
27->7 [style = bold, label=""];
21->1 [style = bold, label=""];
15->41 [style = solid, label="repository"];
20->39 [style = dashed, label="0"];
30->8 [style = bold, label=""];
18->33 [style = dashed, label="0"];
8->48 [style = dashed, label="0"];
15->13 [style = bold, label=""];
7->10 [style = solid, label="count"];
36->9 [style = bold, label=""];
33->3 [style = bold, label=""];
10->0 [style = solid, label="count"];
46->24 [style = bold, label=""];
16->29 [style = bold, label=""];
2->18 [style = bold, label=""];
31->4 [style = bold, label=""];
22->5 [style = bold, label=""];
24->47 [style = bold, label=""];
5->34 [style = dashed, label="0"];
8->22 [style = bold, label=""];
5->21 [style = bold, label=""];
26->16 [style = bold, label=""];
13->12 [style = bold, label=""];
23->37 [style = bold, label=""];
56->50 [style = bold, label=""];
10->0 [style = bold, label=""];
2->33 [style = bold, label=""];
28->24 [style = bold, label=""];
47->41 [style = bold, label=""];
14->15 [style = bold, label=""];
45->46 [style = bold, label=""];
44->45 [style = bold, label=""];
11->30 [style = bold, label=""];
44->45 [style = dotted, label="true"];
51->44 [style = solid, label="count"];
4->9 [style = bold, label=""];
35->15 [style = bold, label=""];
15->56 [style = solid, label="repository"];
0->11 [style = bold, label=""];
31->36 [style = bold, label=""];
7->20 [style = bold, label=""];
54->15 [style = bold, label=""];
32->30 [style = bold, label=""];
25->17 [style = bold, label=""];
37->12 [style = bold, label=""];
46->44 [style = solid, label="count"];
7->39 [style = bold, label=""];
52->40 [style = bold, label=""];
24->25 [style = bold, label=""];
51->46 [style = solid, label="count"];
40->43 [style = bold, label=""];
0->32 [style = bold, label=""];
34->21 [style = bold, label=""];
46->55 [style = bold, label=""];
15->23 [style = bold, label=""];
13->37 [style = dashed, label="0"];
16->38 [style = dashed, label="0"];
10->20 [style = bold, label=""];
19->31 [style = bold, label=""];
38->29 [style = bold, label=""];
46->55 [style = solid, label="count"];
12->26 [style = bold, label=""];
48->42 [style = bold, label=""];
17->19 [style = bold, label=""];
41->52 [style = bold, label=""];
20->10 [style = bold, label=""];
26->38 [style = bold, label=""];
55->44 [style = bold, label=""];
50->11 [style = bold, label=""];
51->55 [style = bold, label=""];
0->56 [style = bold, label=""];
51->55 [style = solid, label="count"];
22->34 [style = bold, label=""];
39->10 [style = bold, label=""];
28->44 [style = bold, label=""];
42->49 [style = bold, label=""];
30->48 [style = bold, label=""];
28->24 [style = solid, label="count"];
55->28 [style = bold, label=""];
}
