digraph {
22 [style = filled, label = "boolean forceExecution@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of primary operation (\" + \"coordinating_and_primary_bytes=\" + bytesWithoutOperation + \", \" + \"replica_bytes=\" + replicaWriteBytes + \", \" + \"all_bytes=\" + totalBytesWithoutOperation + \", \" + \"operation_bytes=\" + bytes + \", \" + \"max_coordinating_and_primary_bytes=\" + primaryAndCoordinatingLimits + \"(\",false)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return null@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "long replicaBytesWithoutOperation = replicaWriteBytes - bytes@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "long totalBytesWithoutOperation = totalBytes - bytes@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "boolean forceExecution@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "long bytes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "markReplicaOperationStarted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "long totalBytes = combinedBytes + replicaWriteBytes@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "this.currentCombinedCoordinatingAndPrimaryBytes.getAndAdd(-bytes)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "this.currentReplicaBytes.getAndAdd(-bytes)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "long replicaWriteBytes = this.currentReplicaBytes.get()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "boolean forceExecution@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "forceExecution == false && totalBytes > primaryAndCoordinatingLimits@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "totalReplicaBytes.getAndAdd(bytes)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "totalPrimaryBytes.getAndAdd(bytes)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "long bytes@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "totalCombinedCoordinatingAndPrimaryBytes.getAndAdd(bytes)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "long replicaWriteBytes = this.currentReplicaBytes.getAndAdd(bytes)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "long replicaWriteBytes = this.currentReplicaBytes.addAndGet(bytes)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "this.primaryRejections.getAndIncrement()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "markReplicaOperationStarted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "forceExecution == false && replicaWriteBytes > replicaLimits@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "currentPrimaryBytes.getAndAdd(bytes)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of replica operation (\" + \"replica_bytes=\" + replicaBytesWithoutOperation + \", \" + \"replica_operation_bytes=\" + bytes + \", \" + \"max_replica_bytes=\" + replicaLimits + \"(\",false)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "long combinedBytes = this.currentCombinedCoordinatingAndPrimaryBytes.addAndGet(bytes)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "this.replicaRejections.getAndIncrement()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "long bytesWithoutOperation = combinedBytes - bytes@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "return null@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "markPrimaryOperationStarted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
6->3 [style = bold, label=""];
16->21 [style = solid, label="bytes"];
17->26 [style = bold, label=""];
16->24 [style = solid, label="bytes"];
18->23 [style = bold, label=""];
5->9 [style = bold, label=""];
3->26 [style = dashed, label="0"];
28->20 [style = bold, label=""];
4->1 [style = dotted, label="true"];
16->23 [style = solid, label="bytes"];
2->1 [style = bold, label=""];
7->14 [style = dashed, label="0"];
27->28 [style = bold, label=""];
4->0 [style = dotted, label="true"];
0->2 [style = bold, label=""];
5->24 [style = dashed, label="0"];
16->26 [style = solid, label="bytes"];
3->4 [style = solid, label="replicaWriteBytes"];
16->28 [style = solid, label="bytes"];
3->7 [style = solid, label="replicaWriteBytes"];
4->7 [style = dotted, label="true"];
7->0 [style = bold, label=""];
27->23 [style = dotted, label="true"];
16->25 [style = solid, label="bytes"];
11->4 [style = solid, label="forceExecution"];
27->15 [style = dotted, label="true"];
10->22 [style = dashed, label="0"];
10->3 [style = solid, label="bytes"];
26->19 [style = bold, label=""];
13->10 [style = dotted, label="true"];
3->4 [style = bold, label=""];
7->1 [style = solid, label="replicaBytesWithoutOperation"];
26->14 [style = solid, label="combinedBytes"];
15->18 [style = bold, label=""];
26->28 [style = solid, label="combinedBytes"];
4->7 [style = bold, label=""];
8->4 [style = solid, label="forceExecution"];
19->14 [style = solid, label="replicaWriteBytes"];
17->16 [style = dotted, label="true"];
6->10 [style = dotted, label="true"];
27->28 [style = dotted, label="true"];
23->24 [style = bold, label=""];
13->12 [style = bold, label=""];
21->29 [style = bold, label=""];
19->14 [style = bold, label=""];
3->12 [style = dashed, label="0"];
12->4 [style = bold, label=""];
20->23 [style = solid, label="totalBytesWithoutOperation"];
6->8 [style = dotted, label="true"];
10->12 [style = solid, label="bytes"];
24->25 [style = bold, label=""];
27->20 [style = dotted, label="true"];
9->25 [style = dashed, label="0"];
10->5 [style = solid, label="bytes"];
14->27 [style = solid, label="totalBytes"];
13->11 [style = dotted, label="true"];
17->22 [style = dotted, label="true"];
4->19 [style = dashed, label="0"];
14->20 [style = solid, label="totalBytes"];
19->23 [style = solid, label="replicaWriteBytes"];
27->24 [style = bold, label=""];
14->27 [style = bold, label=""];
28->23 [style = solid, label="bytesWithoutOperation"];
27->18 [style = dotted, label="true"];
16->20 [style = solid, label="bytes"];
20->15 [style = bold, label=""];
4->5 [style = bold, label=""];
10->7 [style = solid, label="bytes"];
12->7 [style = solid, label="replicaWriteBytes"];
4->2 [style = dotted, label="true"];
22->27 [style = solid, label="forceExecution"];
25->21 [style = bold, label=""];
12->4 [style = solid, label="replicaWriteBytes"];
10->1 [style = solid, label="bytes"];
}
