digraph {
30 [style = filled, label = "assertThat(result.isSuccessful()).isTrue()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "functionResults.add(new RealizationResult().setMemberName(\"member2\"))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "result = service.delete(region)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CacheConfig config = new CacheConfig()@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "doReturn(functionResults).when(service).executeAndGetFunctionResult(any(),any(),any())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(config.getRegions()).isEmpty()@@@24@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertThat(result.isSuccessful()).isTrue()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "CacheConfig cacheConfig = new CacheConfig()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "regionConfig.setName(\"test\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "result = service.create(regionConfig)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RegionConfig regionConfig = new RegionConfig()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "doReturn(mockRegion).when(persistenceService).getConfigurationRegion()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "delete_succeedsOnAllMembers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "CacheConfig config = new CacheConfig()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "regionConfig.setName(\"test\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "doReturn(Collections.singleton(mock())).when(memberValidator).findServers()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<RealizationResult> functionResults = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "when(persistenceService.getCacheConfig(\"cluster\",true)).thenReturn(cacheConfig)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "doReturn(null).when(persistenceService).getConfiguration(any())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "doReturn(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@129e87).when(memberValidator).findGroupsWithThisElement(any(),any())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "doReturn(mockRegion).when(persistenceService).getConfigurationRegion()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "functionResults.add(new RealizationResult().setMemberName(\"member1\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "memberValidator.findServers()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertThat(cacheConfig.getRegions()).hasSize(1)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "delete_succeedsOnAllMembers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "regionConfig.setType(RegionType.REPLICATE)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "config.getRegions().add(regionConfig)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "create_succeedsOnAllMembers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "doReturn(Collections.singleton(mock())).when(memberValidator)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Region region = new Region()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "region.setName(\"test\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "org.apache.geode.cache.Region mockRegion = mock()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->28 [style = dashed, label="0"];
11->4 [style = bold, label=""];
11->20 [style = bold, label=""];
2->4 [style = bold, label=""];
24->7 [style = bold, label=""];
4->26 [style = bold, label=""];
2->11 [style = bold, label=""];
12->14 [style = bold, label=""];
5->1 [style = bold, label=""];
13->6 [style = bold, label=""];
20->22 [style = bold, label=""];
3->30 [style = bold, label=""];
14->0 [style = bold, label=""];
0->8 [style = bold, label=""];
14->3 [style = dashed, label="0"];
22->17 [style = bold, label=""];
3->18 [style = bold, label=""];
26->27 [style = bold, label=""];
10->6 [style = solid, label="regionConfig"];
8->21 [style = bold, label=""];
18->14 [style = solid, label="region"];
29->25 [style = bold, label=""];
9->7 [style = bold, label=""];
27->29 [style = bold, label=""];
16->2 [style = bold, label=""];
19->16 [style = bold, label=""];
12->1 [style = dashed, label="0"];
12->0 [style = solid, label="region"];
1->3 [style = bold, label=""];
10->13 [style = bold, label=""];
18->5 [style = dashed, label="0"];
31->5 [style = bold, label=""];
6->5 [style = bold, label=""];
23->7 [style = bold, label=""];
26->27 [style = solid, label="cacheConfig"];
17->13 [style = solid, label="regionConfig"];
25->31 [style = bold, label=""];
30->28 [style = bold, label=""];
4->20 [style = dashed, label="0"];
7->19 [style = bold, label=""];
18->12 [style = bold, label=""];
4->15 [style = bold, label=""];
15->26 [style = dashed, label="0"];
17->10 [style = bold, label=""];
15->17 [style = bold, label=""];
}
