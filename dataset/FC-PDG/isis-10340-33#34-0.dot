digraph {
15 [style = filled, label = "mockSpecificationLoader = context.mock()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "setUpFacetedMethodAndParameter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "facetHolder = new IdentifiedHolderImpl(Identifier.propertyOrCollectionIdentifier(,\"firstName\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "facetedMethodParameter = new FacetedMethodParameter(FeatureType.ACTION_PARAMETER_SCALAR,facetedMethod.getOwningType(),facetedMethod.getMethod(),)@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "MetaModelContext.preset(MetaModelContext.builder().configuration(_Config.getConfiguration()).specificationLoader(mockSpecificationLoader).serviceInjector(mockServiceInjector).serviceRegistry(mockServiceRegistry).build())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "stubServicesInjector = ServicesInjector.builderForTesting().addServices(_Lists.of(mockAuthenticationSessionProvider,mockSpecificationLoader,mockPersistenceSessionServiceInternal,mockTranslationService)).build()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "facetHolder = new AbstractFacetFactoryTest.IdentifiedHolderImpl(Identifier.propertyOrCollectionIdentifier(,\"firstName\"))@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "facetedMethod = FacetedMethod.createForProperty(,\"firstName\")@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "context.checking(new Expectations(){})@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "setUpFacetedMethodAndParameter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "mockTranslationService = context.mock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "facetedMethod = FacetedMethod.createForProperty(,\"firstName\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "context.checking(new Expectations(){})@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "methodRemover = new ProgrammableMethodRemover()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "mockPersistenceSessionServiceInternal = context.mock()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "mockAuthenticationSessionProvider = context.mock()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a3e7ef@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "mockAuthenticationSession = context.mock()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "facetedMethodParameter = new FacetedMethodParameter(FeatureType.ACTION_PARAMETER_SCALAR,facetedMethod.getOwningType(),facetedMethod.getMethod(),)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "facetedMethod = FacetedMethod.createForProperty(,\"firstName\")@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "facetHolder = new AbstractFacetFactoryTest.IdentifiedHolderImpl(Identifier.propertyOrCollectionIdentifier(,\"firstName\"))@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "facetedMethodParameter = new FacetedMethodParameter(FeatureType.ACTION_PARAMETER_SCALAR,facetedMethod.getOwningType(),facetedMethod.getMethod(),)@@@22@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7->8 [style = bold, label=""];
14->16 [style = bold, label=""];
10->11 [style = bold, label=""];
0->3 [style = bold, label=""];
4->1 [style = bold, label=""];
12->22 [style = bold, label=""];
6->9 [style = bold, label=""];
8->1 [style = bold, label=""];
21->20 [style = bold, label=""];
17->15 [style = bold, label=""];
15->14 [style = bold, label=""];
11->19 [style = bold, label=""];
22->18 [style = bold, label=""];
18->21 [style = bold, label=""];
20->17 [style = bold, label=""];
2->0 [style = bold, label=""];
13->10 [style = bold, label=""];
19->12 [style = bold, label=""];
1->2 [style = bold, label=""];
5->6 [style = bold, label=""];
1->5 [style = bold, label=""];
}
