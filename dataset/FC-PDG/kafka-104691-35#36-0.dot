digraph {
90 [style = filled, label = "worker.startConnector(CONNECTOR_ID,connectorProps,ctx,connectorStatusListener,TargetState.STARTED)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "sinkConnector.start(connectorProps)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(3)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "EasyMock.expectLastCall()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "EasyMock.expect(plugins.newConnector(.getName())).andReturn(sinkConnector)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore,noneConnectorClientConfigOverridePolicy)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "EasyMock.expect(sourceConnector.version()).andReturn(\"1.0\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@49@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "ConnectException e@@@43@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "EasyMock.expect(plugins.newConnector(connectorAlias)).andReturn(sinkConnector)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "connectorProps.put(SinkConnectorConfig.TOPICS_CONFIG,\"gfieyls, wfru\")@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(sourceConnector)).andReturn(delegatingLoader).times(2)@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "EasyMock.expect(plugins.delegatingLoader()).andReturn(delegatingLoader)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "EasyMock.expect(sourceConnector.version()).andReturn(\"1.0\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "expectStartStorage()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "ctx.close()@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
92 [style = filled, label = "List<Map<String,String>> taskConfigs = worker.connectorTaskConfigs(CONNECTOR_ID,connConfig)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "EasyMock.expect(delegatingLoader.connectorLoader(connectorAlias)).andReturn(pluginLoader)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
82 [style = filled, label = "testReconfigureConnectorTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "worker.herder = herder@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "{}@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "EasyMock.expectLastCall()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "worker.stopConnector(CONNECTOR_ID)@@@58@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "expectLastCall()@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "expectFileConfigProvider()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
85 [style = filled, label = "connProps.put(ConnectorConfig.TASKS_MAX_CONFIG,\"2\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(3)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
96 [style = filled, label = "expectedTaskProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertStatistics(worker,0,0)@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "worker.stopAndAwaitConnector(CONNECTOR_ID)@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
97 [style = filled, label = "assertEquals(2,taskConfigs.size())@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "sourceConnector.initialize(anyObject())@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "worker.startConnector(CONNECTOR_ID,connectorProps,ctx,connectorStatusListener,TargetState.STARTED,onStart)@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
88 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(3)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "connectorProps.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,.getName())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "EasyMock.expect(sinkConnector.taskClass()).andReturn()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "worker.stop()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "PowerMock.verifyAll()@@@64@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(sinkConnector)).andReturn(delegatingLoader).times(3)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "sinkConnector.stop()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "expectStopStorage()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final String connectorAlias = \"WorkerTestConnector\"@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "PowerMock.verifyAll()@@@50@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "connectorProps.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,connectorAlias)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "sinkConnector.stop()@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
83 [style = filled, label = "assertStatistics(worker,1,0)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "sinkConnector.initialize(anyObject())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "EasyMock.expectLastCall()@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "sinkConnector.start(connectorProps)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertStatistics(worker,1,0)@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "taskProps.put(\"foo\",\"bar\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "EasyMock.expectLastCall()@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "worker.start()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "Map<String,String> connProps = new HashMap<>(connectorProps)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "Map<String,String> expectedTaskProps = new HashMap<>()@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "connectorProps.put(SinkConnectorConfig.TOPICS_CONFIG,\"foo,bar\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "sinkConnector.initialize(anyObject())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testAddConnectorByAlias['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "connectorProps.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,\"WorkerTestConnector\")@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "EasyMock.expect(plugins.newConnector(\"WorkerTestConnector\")).andReturn(sourceConnector)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "ConnectorConfig connConfig = new SinkConnectorConfig(plugins,connProps)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "EasyMock.expectLastCall()@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
73 [style = filled, label = "fail(\"Should have thrown exception when trying to add connector with same name.\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "EasyMock.expectLastCall()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "worker.stop()@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertStatistics(worker,0,0)@@@34@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(pluginLoader)).andReturn(delegatingLoader).times(3)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(0))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expectClusterId()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "EasyMock.expectLastCall()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "EasyMock.expectLastCall()@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "expectedTaskProps.put(SinkTask.TOPICS_CONFIG,\"foo,bar\")@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "worker.startConnector(CONNECTOR_ID,connectorProps,ctx,connectorStatusListener,TargetState.STARTED)@@@36@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertStatistics(worker,0,0)@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "Map<String,String> taskProps = new HashMap<>()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "EasyMock.expect(sinkConnector.taskConfigs(2)).andReturn(Arrays.asList(taskProps,taskProps))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "FutureCallback<TargetState> onStart = new FutureCallback<>()@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "expectConverters()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "EasyMock.expectLastCall()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(CONNECTOR_ID)),worker.connectorNames())@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "expectedTaskProps.put(\"foo\",\"bar\")@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(1))@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "EasyMock.expectLastCall()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(TargetState.STARTED,onStart.get(1000,TimeUnit.MILLISECONDS))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "testAddConnectorByAlias['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "PowerMock.replayAll()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertStatistics(worker,0,0)@@@48@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
70->80 [style = bold, label=""];
39->19 [style = bold, label=""];
6->57 [style = bold, label=""];
100->84 [style = bold, label=""];
2->15 [style = solid, label="worker"];
25->33 [style = bold, label=""];
57->62 [style = bold, label=""];
21->15 [style = bold, label=""];
73->74 [style = bold, label=""];
2->9 [style = solid, label="worker"];
72->100 [style = bold, label=""];
74->85 [style = bold, label=""];
61->59 [style = bold, label=""];
14->79 [style = bold, label=""];
14->79 [style = dashed, label="0"];
34->88 [style = bold, label=""];
38->64 [style = dashed, label="0"];
84->89 [style = bold, label=""];
9->6 [style = bold, label=""];
14->7 [style = bold, label=""];
3->27 [style = bold, label=""];
71->101 [style = bold, label=""];
33->11 [style = bold, label=""];
13->17 [style = bold, label=""];
20->46 [style = dashed, label="0"];
31->35 [style = bold, label=""];
79->20 [style = bold, label=""];
82->17 [style = bold, label=""];
8->47 [style = solid, label="worker"];
85->68 [style = bold, label=""];
32->55 [style = dashed, label="0"];
38->26 [style = bold, label=""];
32->72 [style = dashed, label="0"];
42->21 [style = bold, label=""];
47->60 [style = bold, label=""];
22->64 [style = bold, label=""];
98->15 [style = bold, label=""];
34->53 [style = bold, label=""];
40->61 [style = bold, label=""];
64->9 [style = bold, label=""];
8->28 [style = bold, label=""];
26->83 [style = bold, label=""];
49->12 [style = bold, label=""];
4->32 [style = bold, label=""];
2->22 [style = solid, label="worker"];
65->45 [style = bold, label=""];
2->69 [style = solid, label="worker"];
91->19 [style = bold, label=""];
20->91 [style = dashed, label="0"];
30->21 [style = solid, label="worker"];
68->92 [style = bold, label=""];
94->95 [style = bold, label=""];
0->29 [style = bold, label=""];
8->15 [style = solid, label="worker"];
87->76 [style = bold, label=""];
48->17 [style = bold, label=""];
12->37 [style = bold, label=""];
95->87 [style = solid, label="taskProps"];
5->25 [style = bold, label=""];
68->92 [style = solid, label="connConfig"];
58->63 [style = bold, label=""];
92->75 [style = bold, label=""];
35->0 [style = bold, label=""];
81->96 [style = bold, label=""];
22->18 [style = bold, label=""];
90->73 [style = bold, label=""];
18->9 [style = bold, label=""];
20->39 [style = bold, label=""];
36->16 [style = bold, label=""];
19->46 [style = bold, label=""];
8->22 [style = solid, label="worker"];
88->72 [style = bold, label=""];
53->44 [style = solid, label="connectorAlias"];
27->8 [style = bold, label=""];
31->49 [style = dashed, label="0"];
101->74 [style = bold, label=""];
76->40 [style = bold, label=""];
99->69 [style = bold, label=""];
30->18 [style = solid, label="worker"];
36->51 [style = bold, label=""];
25->84 [style = dashed, label="0"];
50->58 [style = bold, label=""];
14->56 [style = dashed, label="0"];
89->86 [style = bold, label=""];
93->97 [style = bold, label=""];
7->20 [style = bold, label=""];
6->77 [style = bold, label=""];
11->24 [style = bold, label=""];
2->10 [style = bold, label=""];
8->6 [style = solid, label="worker"];
17->23 [style = bold, label=""];
66->87 [style = bold, label=""];
33->63 [style = dashed, label="0"];
15->22 [style = bold, label=""];
26->21 [style = bold, label=""];
8->10 [style = solid, label="worker"];
74->68 [style = solid, label="connProps"];
0->49 [style = bold, label=""];
30->3 [style = bold, label=""];
77->99 [style = bold, label=""];
43->65 [style = bold, label=""];
86->70 [style = bold, label=""];
46->35 [style = bold, label=""];
83->21 [style = bold, label=""];
40->30 [style = bold, label=""];
55->50 [style = bold, label=""];
62->47 [style = bold, label=""];
24->1 [style = bold, label=""];
60->52 [style = bold, label=""];
75->81 [style = bold, label=""];
30->9 [style = solid, label="worker"];
75->98 [style = solid, label="expectedTaskProps"];
30->36 [style = solid, label="worker"];
97->78 [style = bold, label=""];
5->100 [style = dashed, label="0"];
63->44 [style = bold, label=""];
32->5 [style = bold, label=""];
5->50 [style = dashed, label="0"];
4->88 [style = dashed, label="0"];
80->14 [style = bold, label=""];
75->78 [style = solid, label="expectedTaskProps"];
69->67 [style = bold, label=""];
20->56 [style = bold, label=""];
78->98 [style = bold, label=""];
19->31 [style = bold, label=""];
30->8 [style = solid, label="worker"];
95->66 [style = bold, label=""];
8->60 [style = solid, label="worker"];
54->20 [style = bold, label=""];
30->16 [style = solid, label="worker"];
44->43 [style = bold, label=""];
10->36 [style = bold, label=""];
45->54 [style = bold, label=""];
31->94 [style = dashed, label="0"];
28->2 [style = bold, label=""];
51->41 [style = solid, label="onStart"];
29->12 [style = bold, label=""];
20->91 [style = bold, label=""];
30->26 [style = solid, label="worker"];
2->83 [style = solid, label="worker"];
8->9 [style = solid, label="worker"];
56->19 [style = bold, label=""];
31->94 [style = bold, label=""];
23->34 [style = bold, label=""];
96->93 [style = bold, label=""];
34->4 [style = bold, label=""];
59->30 [style = bold, label=""];
1->14 [style = bold, label=""];
4->55 [style = bold, label=""];
53->4 [style = bold, label=""];
21->90 [style = bold, label=""];
51->41 [style = bold, label=""];
2->16 [style = solid, label="worker"];
37->40 [style = bold, label=""];
16->38 [style = bold, label=""];
41->42 [style = bold, label=""];
2->6 [style = solid, label="worker"];
}
