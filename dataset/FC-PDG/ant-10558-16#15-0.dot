digraph {
7 [style = filled, label = "return true@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i < excludePatterns.length@@@8@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "return false@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final TokenizedPath path@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "isCaseSensitive()? excludeNonPatterns.containsKey(name.toString()): excludeNonPatterns.containsKey(name.toString().toUpperCase())@@@4@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "isExcluded['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "String toMatch = name.toString()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "isIncluded['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i++@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "!isCaseSensitive()@@@5@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "includePatterns(i(.matchPath(path,isCaseSensitive())@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "isCaseSensitive()? includeNonPatterns.containsKey(path.toString()): includeNonPatterns.containsKey(path.toString().toUpperCase())@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "excludePatterns(i(.matchPath(name,isCaseSensitive())@@@10@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "isExcluded['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return true@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return excludeNonPatterns.containsKey(toMatch) || Stream.of(excludePatterns).anyMatch(null)@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final TokenizedPath name@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ensureNonPatternSetsReady()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int i = 0@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "toMatch = toMatch.toUpperCase()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "i < includePatterns.length@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
16->0 [style = bold, label=""];
1->8 [style = bold, label=""];
3->1 [style = bold, label=""];
11->15 [style = solid, label="toMatch"];
0->19 [style = bold, label=""];
2->6 [style = bold, label=""];
5->10 [style = dotted, label="true"];
19->20 [style = dotted, label="true"];
19->20 [style = bold, label=""];
20->8 [style = dotted, label="true"];
4->19 [style = bold, label=""];
16->7 [style = bold, label=""];
3->4 [style = dotted, label="true"];
7->0 [style = bold, label=""];
4->3 [style = solid, label="i"];
6->0 [style = bold, label=""];
0->4 [style = solid, label="i"];
10->1 [style = solid, label="name"];
18->2 [style = bold, label=""];
11->15 [style = bold, label=""];
20->4 [style = bold, label=""];
2->13 [style = bold, label=""];
3->19 [style = dashed, label="0"];
1->20 [style = dashed, label="0"];
3->9 [style = bold, label=""];
16->7 [style = dotted, label="true"];
5->2 [style = bold, label=""];
12->2 [style = bold, label=""];
20->8 [style = bold, label=""];
6->16 [style = dashed, label="0"];
12->10 [style = dotted, label="true"];
19->9 [style = bold, label=""];
19->4 [style = dotted, label="true"];
4->19 [style = solid, label="i"];
0->3 [style = solid, label="i"];
1->8 [style = dotted, label="true"];
10->17 [style = dashed, label="0"];
6->7 [style = dotted, label="true"];
14->11 [style = dotted, label="true"];
14->15 [style = bold, label=""];
17->20 [style = solid, label="path"];
18->17 [style = dotted, label="true"];
0->19 [style = solid, label="i"];
8->4 [style = bold, label=""];
6->7 [style = bold, label=""];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
3->1 [style = dotted, label="true"];
13->15 [style = solid, label="toMatch"];
2->16 [style = bold, label=""];
}
