digraph {
28 [style = filled, label = "createAndCheckClientConnection(securityProtocol,\"good1\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "selector.send(request.toSend(node1,header))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node1)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "configureMechanisms(\"PLAIN\",Arrays.asList(\"PLAIN\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "selector.close()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node1,ChannelState.READY)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "selector.close()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String node1 = \"invalid1\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testPacketSizeTooBig['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "buffer.rewind()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE.id,Short.MAX_VALUE,\"someclient\",2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node2)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "createClientConnection(SecurityProtocol.PLAINTEXT,node1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "buffer.put(new byte(((()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testSaslHandshakeRequestWithUnsupportedVersion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "buffer.putInt(Integer.MAX_VALUE)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node2,ChannelState.READY)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "createAndCheckClientConnection(securityProtocol,\"good1\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "server = createEchoServer(securityProtocol)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "createClientConnection(SecurityProtocol.PLAINTEXT,node2)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "buffer.put(new byte(((()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "selector.send(new NetworkSend(node2,buffer))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "sendHandshakeRequestReceiveResponse(node1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "selector.send(new NetworkSend(node1,buffer))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "buffer.rewind()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "createAndCheckClientConnection(securityProtocol,\"good2\")@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "buffer.putInt(Integer.MAX_VALUE)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testPacketSizeTooBig['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "selector.close()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String node2 = \"invalid2\"@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "buffer.clear()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ByteBuffer buffer = ByteBuffer.allocate(1024)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
4->14 [style = bold, label=""];
12->6 [style = solid, label="node2"];
15->24 [style = solid, label="node1"];
15->31 [style = solid, label="node1"];
19->12 [style = bold, label=""];
11->1 [style = bold, label=""];
10->9 [style = solid, label="securityProtocol"];
3->6 [style = solid, label="buffer"];
15->33 [style = solid, label="node1"];
6->25 [style = bold, label=""];
32->33 [style = solid, label="header"];
1->26 [style = dashed, label="0"];
10->19 [style = solid, label="securityProtocol"];
8->3 [style = bold, label=""];
15->8 [style = solid, label="node1"];
24->29 [style = bold, label=""];
10->0 [style = solid, label="securityProtocol"];
2->9 [style = bold, label=""];
10->28 [style = solid, label="securityProtocol"];
25->2 [style = bold, label=""];
0->15 [style = bold, label=""];
32->33 [style = bold, label=""];
1->23 [style = bold, label=""];
31->34 [style = bold, label=""];
15->1 [style = solid, label="node1"];
17->25 [style = dashed, label="0"];
12->17 [style = solid, label="node2"];
5->16 [style = bold, label=""];
34->28 [style = bold, label=""];
11->26 [style = bold, label=""];
3->5 [style = bold, label=""];
3->11 [style = solid, label="buffer"];
12->25 [style = solid, label="node2"];
12->4 [style = solid, label="node2"];
15->26 [style = solid, label="node1"];
17->2 [style = bold, label=""];
10->13 [style = bold, label=""];
21->11 [style = bold, label=""];
12->4 [style = bold, label=""];
18->6 [style = bold, label=""];
15->11 [style = solid, label="node1"];
16->21 [style = bold, label=""];
29->32 [style = bold, label=""];
15->24 [style = bold, label=""];
23->19 [style = bold, label=""];
26->23 [style = bold, label=""];
27->10 [style = bold, label=""];
22->10 [style = bold, label=""];
30->10 [style = bold, label=""];
7->18 [style = bold, label=""];
33->31 [style = bold, label=""];
24->8 [style = bold, label=""];
20->7 [style = bold, label=""];
8->29 [style = dashed, label="0"];
14->20 [style = bold, label=""];
13->0 [style = bold, label=""];
}
