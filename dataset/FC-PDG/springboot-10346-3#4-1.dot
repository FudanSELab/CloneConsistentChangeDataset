digraph {
5 [style = filled, label = "assertThat(session.getId()).isNotNull()@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(session).isNull()@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "filterCapturesSessionIdWhenSessionIsUsed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(this.repository.findAll()).hasSize(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(session).isNotNull()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "filterCapturesSessionIdWhenSessionIsUsed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "filterDoesNotCaptureIdOfUnusedSession['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Session session = this.repository.findAll().get(0).getSession()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this.filter.filter(MockServerWebExchange.from(MockServerHttpRequest.get(\"https://api.example.com\")),new WebFilterChain(){@Override public Mono<Void> filter(ServerWebExchange exchange){exchange.getSession().block()return Mono.empty()}}).block()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->8 [style = dashed, label="0"];
3->5 [style = bold, label=""];
1->2 [style = bold, label=""];
6->0 [style = bold, label=""];
7->0 [style = bold, label=""];
0->1 [style = bold, label=""];
2->8 [style = bold, label=""];
2->3 [style = bold, label=""];
4->0 [style = bold, label=""];
}
