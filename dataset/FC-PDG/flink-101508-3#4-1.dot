digraph {
5 [style = filled, label = "testCoDifferingParallelism['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testCoIterClosingFromOutOfLoop['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "DataStream<Integer> source = env.fromElements(1,10).map(NoOpIntMap)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DataStream<Integer> source = env.fromElements(1,10).map(noOpIntMap)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "coIter.closeWith(iter1.map(NoOpIntMap))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "coIter.closeWith(coIter.map(noOpIntCoMap).setParallelism(DEFAULT_PARALLELISM / 2))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "ConnectedIterativeStreams<Integer,Integer> coIter = source.iterate().withFeedbackType()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "IterativeStream<Integer> iter1 = source.iterate()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testCoDifferingParallelism['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "coIter.closeWith(coIter.map(NoOpIntCoMap).setParallelism(DEFAULT_PARALLELISM / 2))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->3 [style = bold, label=""];
1->9 [style = dashed, label="0"];
3->6 [style = dashed, label="0"];
2->7 [style = bold, label=""];
2->9 [style = bold, label=""];
1->7 [style = dashed, label="0"];
3->2 [style = bold, label=""];
8->2 [style = bold, label=""];
0->4 [style = bold, label=""];
4->6 [style = bold, label=""];
2->1 [style = bold, label=""];
3->8 [style = bold, label=""];
5->4 [style = bold, label=""];
6->2 [style = bold, label=""];
10->4 [style = bold, label=""];
}
