digraph {
9 [style = filled, label = "alreadyDefined@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testMonitor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testCommand(\"stats\",new Field(\"version\",),new Field(\"read_only\",),new Field(\"server_stats\",),new Field(\"node_count\",),new Field(\"connections\",),new Field(\"client_response\",))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testCommand(\"monitor\",fieldsArray)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ArrayList<Field> fields = new ArrayList<>(Arrays.asList(new Field(\"version\",),new Field(\"avg_latency\",),new Field(\"max_latency\",),new Field(\"min_latency\",),new Field(\"packets_received\",),new Field(\"packets_sent\",),new Field(\"num_alive_connections\",),new Field(\"outstanding_requests\",),new Field(\"server_state\",),new Field(\"znode_count\",),new Field(\"watch_count\",),new Field(\"ephemerals_count\",),new Field(\"approximate_data_size\",),new Field(\"open_file_descriptor_count\",),new Field(\"max_file_descriptor_count\",),new Field(\"last_client_response_size\",),new Field(\"max_client_response_size\",),new Field(\"min_client_response_size\",),new Field(\"uptime\",),new Field(\"global_sessions\",),new Field(\"local_sessions\",),new Field(\"connection_drop_probability\",),new Field(\"outstanding_tls_handshake\",)))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "metric.startsWith(\"avg_\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testCommand(\"stats\",new Field(\"version\",),new Field(\"read_only\",),new Field(\"server_stats\",),new Field(\"node_count\",),new Field(\"connections\",),new Field(\"secure_connections\",),new Field(\"client_response\",))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Field(( fieldsArray = fields.toArray(new Field(((()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testStat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "fields.add(new Field(metric,))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "fields.add(new Field(metric,))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "boolean alreadyDefined = fields.stream().anyMatch(null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Map<String,Object> metrics = MetricsUtils.currentServerMetrics()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testStat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0->3 [style = dashed, label="0"];
9->11 [style = bold, label=""];
12->5 [style = bold, label=""];
11->12 [style = dotted, label="false"];
2->3 [style = bold, label=""];
4->13 [style = bold, label=""];
11->4 [style = bold, label=""];
11->12 [style = bold, label=""];
1->0 [style = bold, label=""];
11->4 [style = dotted, label="true"];
7->8 [style = bold, label=""];
10->7 [style = bold, label=""];
5->6 [style = solid, label="fieldsArray"];
12->13 [style = bold, label=""];
13->9 [style = solid, label="alreadyDefined"];
5->6 [style = bold, label=""];
9->5 [style = bold, label=""];
13->9 [style = bold, label=""];
4->5 [style = bold, label=""];
8->13 [style = bold, label=""];
9->13 [style = bold, label=""];
}
