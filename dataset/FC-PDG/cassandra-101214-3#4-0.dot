digraph {
30 [style = filled, label = "Arrays.fill(sizes,size)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "BufferPool.put(buffers.get(i))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "!buffers.isEmpty()@@@22@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "int index = rnd.nextInt(buffers.size())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(0,chunk.free())@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final int size = BufferPool.CHUNK_SIZE / 64@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Random rnd = new Random()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testDifferentSizeBuffersOnOneChunk['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "int i = 0@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(0,chunk.free())@@@28@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < sizes.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ByteBuffer buffer = BufferPool.get(sizes(i()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(0,chunk.free())@@@29@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "buffers.size() > 1@@@22@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(null,BufferPool.currentChunk())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "sum += BufferPool.currentChunk().roundUp(buffer.capacity())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "List<ByteBuffer> buffers = new ArrayList<>(sizes.length)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "BufferPool.Chunk chunk = BufferPool.unsafeCurrentChunk()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "testDifferentSizeBuffersOnOneChunk['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assertEquals(null,BufferPool.currentChunk())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "i < sizes.length@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(buffer.capacity() >= sizes(i()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "BufferPool.put(buffers.remove(0))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertNotNull(buffer)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int sum = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNotNull(chunk)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "buffers.add(buffer)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(null,BufferPool.unsafeCurrentChunk())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "BufferPool.put(buffer)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "BufferPool.Chunk chunk = BufferPool.currentChunk()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(sum <= BufferPool.GlobalPool.MACRO_CHUNK_SIZE)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ByteBuffer buffer = buffers.remove(index)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int(( sizes = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@33e31b@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int(( sizes = new int((((@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "sum += buffer.capacity()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testChunkExhausted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "rnd.setSeed(298347529L)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "i++@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "sum += BufferPool.unsafeCurrentChunk().roundUp(buffer.capacity())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32->35 [style = bold, label=""];
25->1 [style = bold, label=""];
11->15 [style = solid, label="sizes"];
7->34 [style = dotted, label="true"];
33->15 [style = solid, label="sizes"];
27->28 [style = bold, label=""];
5->40 [style = dashed, label="0"];
38->31 [style = bold, label=""];
40->38 [style = bold, label=""];
7->8 [style = bold, label=""];
21->18 [style = bold, label=""];
12->7 [style = bold, label=""];
19->24 [style = bold, label=""];
4->25 [style = dashed, label="0"];
21->26 [style = bold, label=""];
13->24 [style = dashed, label="0"];
18->22 [style = bold, label=""];
33->17 [style = solid, label="sizes"];
2->14 [style = bold, label=""];
7->16 [style = dotted, label="true"];
31->40 [style = bold, label=""];
25->1 [style = solid, label="chunk"];
8->4 [style = bold, label=""];
34->8 [style = solid, label="sum"];
7->6 [style = dotted, label="true"];
19->34 [style = bold, label=""];
31->40 [style = dotted, label="true"];
26->2 [style = dotted, label="true"];
7->13 [style = dotted, label="true"];
22->9 [style = bold, label=""];
36->31 [style = bold, label=""];
10->8 [style = solid, label="sum"];
36->31 [style = solid, label="i"];
36->40 [style = solid, label="i"];
16->17 [style = bold, label=""];
6->7 [style = solid, label="i"];
15->19 [style = solid, label="buffer"];
5->2 [style = solid, label="index"];
24->8 [style = solid, label="sum"];
26->27 [style = bold, label=""];
19->13 [style = bold, label=""];
26->14 [style = dotted, label="true"];
11->17 [style = solid, label="sizes"];
10->0 [style = bold, label=""];
30->10 [style = bold, label=""];
33->30 [style = bold, label=""];
14->18 [style = bold, label=""];
36->38 [style = solid, label="i"];
18->5 [style = dotted, label="true"];
6->15 [style = solid, label="i"];
6->7 [style = bold, label=""];
7->17 [style = dotted, label="true"];
29->11 [style = bold, label=""];
15->16 [style = solid, label="buffer"];
2->14 [style = solid, label="buffer"];
31->32 [style = bold, label=""];
12->15 [style = solid, label="i"];
0->12 [style = bold, label=""];
1->3 [style = bold, label=""];
22->27 [style = dashed, label="0"];
33->30 [style = solid, label="sizes"];
7->15 [style = dotted, label="true"];
39->33 [style = bold, label=""];
4->1 [style = solid, label="chunk"];
12->6 [style = solid, label="i"];
11->10 [style = bold, label=""];
28->23 [style = bold, label=""];
7->15 [style = bold, label=""];
3->21 [style = bold, label=""];
4->1 [style = bold, label=""];
13->6 [style = bold, label=""];
13->34 [style = dashed, label="0"];
12->7 [style = solid, label="i"];
37->39 [style = bold, label=""];
18->2 [style = dotted, label="true"];
20->11 [style = bold, label=""];
38->31 [style = solid, label="i"];
7->19 [style = dotted, label="true"];
26->5 [style = bold, label=""];
39->30 [style = solid, label="size"];
38->40 [style = solid, label="i"];
15->16 [style = bold, label=""];
1->36 [style = bold, label=""];
7->24 [style = dotted, label="true"];
17->19 [style = bold, label=""];
18->14 [style = dotted, label="true"];
14->26 [style = bold, label=""];
5->2 [style = bold, label=""];
12->17 [style = solid, label="i"];
6->17 [style = solid, label="i"];
18->5 [style = bold, label=""];
31->38 [style = dotted, label="true"];
34->6 [style = bold, label=""];
24->6 [style = bold, label=""];
8->25 [style = bold, label=""];
26->5 [style = dotted, label="true"];
18->26 [style = dashed, label="0"];
13->8 [style = solid, label="sum"];
}
