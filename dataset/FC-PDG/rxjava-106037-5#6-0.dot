digraph {
1 [style = filled, label = "buf.removeSome(2)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(values.isEmpty())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "buf.collect(values)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "boundedReplayBuffer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "buf.addLast(new Node(4,3))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "BoundedReplayBuffer<Integer> buf = new BoundedReplayBuffer<>(false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "buf.addLast(new Node(5,5))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "buf.addLast(new Node(2,1))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(Arrays.asList(5,6),values)@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "BoundedReplayBuffer<Integer> buf = new BoundedReplayBuffer<>(true)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "Assert.assertTrue(values.isEmpty())@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Assert.assertEquals(Arrays.asList(5,6),values)@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "buf.addLast(new Node(6,6))@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "buf.removeFirst()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "buf.collect(values)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "BoundedReplayBuffer<Integer> buf = new BoundedReplayBuffer<Integer>(true){@Override void truncate(){}}@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "boundedReplayBuffer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "buf.removeSome(2)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "buf.addLast(new Node(3,2))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "buf.collect(values)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "buf.addLast(new Node(5,4))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "buf.collect(values)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "boundedReplayBuffer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "buf.addLast(new Node(1,0))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(Arrays.asList(1,2,3,4,5),values)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "values.clear()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "buf.addLast(new Node(5,5))@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "buf.addLast(new Node(6,6))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<Integer> values = new ArrayList<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->17 [style = bold, label=""];
1->8 [style = bold, label=""];
17->1 [style = bold, label=""];
25->22 [style = bold, label=""];
6->23 [style = bold, label=""];
16->7 [style = bold, label=""];
0->11 [style = bold, label=""];
11->12 [style = bold, label=""];
1->6 [style = solid, label="values"];
5->18 [style = bold, label=""];
1->2 [style = solid, label="values"];
10->22 [style = dashed, label="0"];
10->27 [style = dashed, label="0"];
12->9 [style = solid, label="values"];
9->6 [style = bold, label=""];
4->0 [style = bold, label=""];
19->16 [style = bold, label=""];
2->13 [style = bold, label=""];
24->20 [style = bold, label=""];
20->21 [style = bold, label=""];
1->26 [style = solid, label="values"];
3->10 [style = bold, label=""];
21->26 [style = bold, label=""];
1->21 [style = solid, label="values"];
23->24 [style = bold, label=""];
12->16 [style = solid, label="values"];
12->6 [style = solid, label="values"];
10->5 [style = bold, label=""];
18->4 [style = bold, label=""];
12->19 [style = solid, label="values"];
8->2 [style = bold, label=""];
15->9 [style = bold, label=""];
12->2 [style = solid, label="values"];
22->12 [style = bold, label=""];
14->15 [style = bold, label=""];
28->27 [style = bold, label=""];
27->5 [style = bold, label=""];
12->19 [style = bold, label=""];
1->8 [style = solid, label="values"];
13->14 [style = bold, label=""];
}
