digraph {
9 [style = filled, label = "onSuccess['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "downstream.onError(ex)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Throwable ex@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "!isDisposed()@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "source = Objects.requireNonNull(onSuccessMapper.apply(value),\"The onSuccessMapper returned a null MaybeSource\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Exceptions.throwIfFatal(ex)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "T value@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "!isDisposed()@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "source = Objects.requireNonNull(mapper.apply(value),\"The mapper returned a null MaybeSource\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "MaybeSource<? extends R> source@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "source.subscribe(new InnerObserver())@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "onSuccess['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "onSuccess['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
0->12 [style = solid, label="value"];
5->0 [style = dotted, label="true"];
3->10 [style = bold, label=""];
7->4 [style = dotted, label="true"];
9->0 [style = dotted, label="true"];
4->11 [style = bold, label=""];
7->6 [style = bold, label=""];
10->8 [style = bold, label=""];
9->2 [style = bold, label=""];
4->8 [style = bold, label=""];
7->1 [style = dotted, label="true"];
2->3 [style = bold, label=""];
11->8 [style = dotted, label="true"];
0->3 [style = solid, label="value"];
11->8 [style = bold, label=""];
10->8 [style = dotted, label="true"];
13->0 [style = dotted, label="true"];
3->8 [style = bold, label=""];
1->4 [style = bold, label=""];
4->10 [style = bold, label=""];
12->11 [style = bold, label=""];
13->2 [style = bold, label=""];
3->12 [style = dashed, label="0"];
6->1 [style = bold, label=""];
2->12 [style = bold, label=""];
7->6 [style = dotted, label="true"];
}
