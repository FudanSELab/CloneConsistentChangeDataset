digraph {
15 [style = filled, label = "final File outDir = TEMP_FOLDER.newFolder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "long inactivityInterval@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "int taskIdx@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "long partMaxSize@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RollingPolicy<Tuple2<String,Integer>,String> rollingPolicy = DefaultRollingPolicy.builder().withMaxPartSize(partMaxSize).withRolloverInterval(inactivityInterval).withInactivityInterval(inactivityInterval).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testHarness.open()@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "createRescalingTestSink['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "File outDir@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testHarness.setup()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int totalParallelism@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "long inactivityInterval@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int taskIdx@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "int totalParallelism@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "createRescalingTestSink['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "return createRescalingTestSink(outDir,totalParallelism,taskIdx,10L,new TupleToStringBucketer(),new Tuple2Encoder(),rollingPolicy,new DefaultBucketFactoryImpl<>())@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testClosingWithoutInput['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final RollingPolicy<Tuple2<String,Integer>,String> rollingPolicy = DefaultRollingPolicy.builder().withMaxPartSize(partMaxSize).withRolloverInterval(inactivityInterval).withInactivityInterval(inactivityInterval).build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "long partMaxSize@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "File outDir@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1->4 [style = bold, label=""];
16->18 [style = bold, label=""];
0->6 [style = solid, label="outDir"];
13->6 [style = solid, label="taskIdx"];
14->12 [style = dotted, label="true"];
4->6 [style = bold, label=""];
14->10 [style = bold, label=""];
4->6 [style = solid, label="rollingPolicy"];
15->16 [style = bold, label=""];
7->6 [style = solid, label="taskIdx"];
10->6 [style = bold, label=""];
14->13 [style = dotted, label="true"];
1->3 [style = dotted, label="true"];
1->7 [style = dotted, label="true"];
5->6 [style = solid, label="totalParallelism"];
12->6 [style = solid, label="totalParallelism"];
10->6 [style = solid, label="rollingPolicy"];
8->6 [style = solid, label="outDir"];
17->15 [style = bold, label=""];
14->8 [style = dotted, label="true"];
7->13 [style = dashed, label="0"];
14->11 [style = dotted, label="true"];
1->0 [style = dotted, label="true"];
14->9 [style = dotted, label="true"];
1->2 [style = dotted, label="true"];
4->10 [style = dashed, label="0"];
1->5 [style = dotted, label="true"];
}
