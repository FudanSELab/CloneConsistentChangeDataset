digraph {
8 [style = filled, label = "ctx.put(ResponseContext.Key.ETAG,\"long-string-that-is-supposed-to-be-removed-from-result\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ctx.put(ResponseContext.Key.NUM_SCANNED_ROWS,100)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ctxCopy.put(ResponseContext.Key.UNCOVERED_INTERVALS,Arrays.asList(0,1,2,3,4))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(fullString,res1.getTruncatedResult())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final DefaultObjectMapper objectMapper = new DefaultObjectMapper()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final ResponseContext ctx = ResponseContext.createEmpty()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final ResponseContext.SerializationResult res1 = ctx.serializeWith(objectMapper,Integer.MAX_VALUE)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(ctxCopy.getDelegate(),ResponseContext.deserialize(res2.getTruncatedResult(),objectMapper).getDelegate())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ctx.put(ResponseContext.Key.MISSING_SEGMENTS,Arrays.asList(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(ctxCopy.getDelegate(),ResponseContext.deserialize(res2.getResult(),objectMapper).getDelegate())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "final ResponseContext.SerializationResult res2 = ctx.serializeWith(objectMapper,70)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "serializeWithTruncateValueTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "ctx.put(ResponseContext.Key.UNCOVERED_INTERVALS,Arrays.asList(0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "serializeWithTruncateValueTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "serializeWithTruncateArrayTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(ctxCopy.getDelegate(),ResponseContext.deserialize(res2.getTruncatedResult(),objectMapper).getDelegate())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "final ResponseContext ctxCopy = ResponseContext.createEmpty()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final DefaultObjectMapper objectMapper = new DefaultObjectMapper()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final String fullString = objectMapper.writeValueAsString(ctx.getDelegate())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ctxCopy.remove(ResponseContext.Key.MISSING_SEGMENTS)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ctxCopy.merge(ctx)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ctxCopy.put(ResponseContext.Key.TRUNCATED,true)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ctxCopy.put(ResponseContext.Key.TRUNCATED,true)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(fullString,res1.getResult())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "ctxCopy.remove(ResponseContext.Key.ETAG)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
0->16 [style = bold, label=""];
18->23 [style = bold, label=""];
19->12 [style = bold, label=""];
10->14 [style = bold, label=""];
6->22 [style = bold, label=""];
7->14 [style = dashed, label="0"];
5->22 [style = solid, label="objectMapper"];
11->6 [style = bold, label=""];
22->21 [style = bold, label=""];
5->1 [style = solid, label="objectMapper"];
0->2 [style = solid, label="fullString"];
16->2 [style = bold, label=""];
10->7 [style = bold, label=""];
21->18 [style = bold, label=""];
6->22 [style = dashed, label="0"];
20->5 [style = bold, label=""];
9->0 [style = solid, label="objectMapper"];
23->24 [style = bold, label=""];
13->21 [style = dashed, label="0"];
5->0 [style = bold, label=""];
5->16 [style = solid, label="fullString"];
1->16 [style = dashed, label="0"];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
6->13 [style = bold, label=""];
12->11 [style = solid, label="ctx"];
8->9 [style = bold, label=""];
5->1 [style = solid, label="fullString"];
9->5 [style = bold, label=""];
4->12 [style = bold, label=""];
12->6 [style = solid, label="ctx"];
3->17 [style = bold, label=""];
8->17 [style = dashed, label="0"];
1->2 [style = bold, label=""];
12->3 [style = bold, label=""];
15->12 [style = bold, label=""];
2->11 [style = bold, label=""];
9->6 [style = solid, label="objectMapper"];
17->20 [style = bold, label=""];
}
