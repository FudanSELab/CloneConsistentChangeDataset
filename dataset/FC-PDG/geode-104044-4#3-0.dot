digraph {
2 [style = filled, label = "verifySequentialPutHAEventWrapperWithMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "HAContainerWrapper haContainerWrapper = (HAContainerWrapper)ccn.getHaContainer()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "createAndPutHARegionQueuesSequentially(haContainerWrapper,haEventWrapper,numQueues)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(numQueues,wrapperInContainer.getReferenceCount())@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "verifySequentialPutHAEventWrapperWithRegion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ClientUpdateMessage message = new ClientUpdateMessageImpl(EnumListenerEvent.AFTER_UPDATE,(LocalRegion)dataRegion,\"key\",\"value\".getBytes(),(byte)0x01,null,new ClientProxyMembershipID(),new EventID(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13f01c,1,2))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "verifySequentialPutHAEventWrapperWithMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(1,haContainerWrapper.size())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "HAEventWrapper haEventWrapper = new HAEventWrapper(message)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ClientUpdateMessage message = new ClientUpdateMessageImpl(EnumListenerEvent.AFTER_UPDATE,(LocalRegion)dataRegion,\"key\",\"value\".getBytes(),(byte)0x01,null,new ClientProxyMembershipID(),new EventID(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13ef6b,1,2))@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "haEventWrapper.setHAContainer(haContainerWrapper)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "HAContainerWrapper haContainerWrapper = createHAContainerRegion()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ClientUpdateMessage message = new ClientUpdateMessageImpl(EnumListenerEvent.AFTER_UPDATE,(LocalRegion)dataRegion,\"key\",\"value\".getBytes(),(byte)0x01,null,new ClientProxyMembershipID(),new EventID(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13efc5,1,2))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "HAContainerWrapper haContainerWrapper = new HAContainerMap(new ConcurrentHashMap())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "HAEventWrapper wrapperInContainer = (HAEventWrapper)haContainerWrapper.getKey(haEventWrapper)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "HAEventWrapper haEventWrapper = new HAEventWrapper(message)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final int numQueues = 10@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(numQueues,wrapperInContainer.getReferenceCount())@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(ccn.getHaContainer()).thenReturn(haContainerWrapper)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6->3 [style = solid, label="haEventWrapper"];
9->0 [style = bold, label=""];
17->6 [style = bold, label=""];
4->6 [style = bold, label=""];
12->10 [style = solid, label="haContainerWrapper"];
10->5 [style = solid, label="numQueues"];
18->15 [style = bold, label=""];
10->3 [style = bold, label=""];
16->17 [style = solid, label="message"];
11->12 [style = bold, label=""];
15->6 [style = solid, label="haContainerWrapper"];
9->0 [style = solid, label="haContainerWrapper"];
2->9 [style = bold, label=""];
16->17 [style = bold, label=""];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
6->8 [style = solid, label="haEventWrapper"];
10->3 [style = solid, label="numQueues"];
9->3 [style = solid, label="haContainerWrapper"];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
14->10 [style = solid, label="haEventWrapper"];
9->1 [style = solid, label="haContainerWrapper"];
14->7 [style = solid, label="haEventWrapper"];
8->5 [style = bold, label=""];
3->7 [style = bold, label=""];
0->4 [style = bold, label=""];
15->10 [style = solid, label="haContainerWrapper"];
17->7 [style = solid, label="haEventWrapper"];
13->14 [style = solid, label="message"];
9->12 [style = dashed, label="0"];
12->6 [style = solid, label="haContainerWrapper"];
1->8 [style = solid, label="numQueues"];
17->10 [style = solid, label="haEventWrapper"];
4->6 [style = solid, label="message"];
1->10 [style = bold, label=""];
13->14 [style = bold, label=""];
14->6 [style = bold, label=""];
1->10 [style = solid, label="numQueues"];
9->15 [style = dashed, label="0"];
}
