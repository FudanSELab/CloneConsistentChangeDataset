digraph {
14 [style = filled, label = "assertBuildGroupByStreamMergedResult['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "getRevisedRowCountWithMax['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,ShardingSphereMetaData> metaDataMap = new HashMap<>()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(buildSelectStatement(new MySQLSelectStatement()),new GroupByContext(Collections.singletonList(new OrderByItem(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC)))),new OrderByContext(Collections.singletonList(new OrderByItem(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC))),false),new ProjectionsContext(0,0,false,Collections.emptyList()),new PaginationContext(null,null,Collections.emptyList()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(new PaginationContext(getOffsetSegment(),getRowCountSegment(),getParameters()).getRevisedRowCount(selectStatementContext),is((long)Integer.MAX_VALUE))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(new PaginationContext(getOffsetSegment(),getRowCountSegment(),getParameters()).getRevisedRowCount(selectStatementContext),is((long)Integer.MAX_VALUE))@@@9@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "metaDataMap.put(DefaultSchema.LOGIC_NAME,mock())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"MySQL\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(resultMerger.merge(createQueryResults(),selectStatementContext,buildSchema()),instanceOf())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "getRevisedRowCountWithMax['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,ShardingSphereMetaData> metaDataMap = Collections.singletonMap(DefaultSchema.LOGIC_NAME,mock())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "selectStatement.setGroupBy(new GroupBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.ASC,OrderDirection.DESC))))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "selectStatement.setProjections(new ProjectionsSegment(0,0))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "selectStatement.setOrderBy(new OrderBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.DESC))))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(metaDataMap,Collections.emptyList(),selectStatement,DefaultSchema.LOGIC_NAME)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3->2 [style = solid, label="selectStatement"];
15->13 [style = bold, label=""];
10->2 [style = solid, label="selectStatementContext"];
15->13 [style = solid, label="selectStatementContext"];
11->1 [style = bold, label=""];
2->0 [style = solid, label="selectStatementContext"];
6->9 [style = dashed, label="0"];
12->15 [style = bold, label=""];
8->6 [style = bold, label=""];
4->2 [style = bold, label=""];
9->10 [style = bold, label=""];
5->3 [style = dotted, label="true"];
7->8 [style = bold, label=""];
1->7 [style = bold, label=""];
6->4 [style = bold, label=""];
5->1 [style = bold, label=""];
2->0 [style = bold, label=""];
3->10 [style = solid, label="selectStatement"];
14->12 [style = bold, label=""];
6->2 [style = solid, label="metaDataMap"];
8->9 [style = bold, label=""];
7->15 [style = dashed, label="0"];
10->2 [style = bold, label=""];
9->10 [style = solid, label="metaDataMap"];
11->3 [style = dotted, label="true"];
}
