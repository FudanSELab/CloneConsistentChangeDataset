digraph {
16 [style = filled, label = "getShardUrls['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Collections.shuffle(shuffler,new Random())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "shuffler.add(replica)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "replicaUrls.add(url)@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String url = zkProps.getCoreUrl()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ZkCoreNodeProps zkProps = new ZkCoreNodeProps(rep)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "pickShards['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return baseUrls@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<String> baseUrls = new ArrayList<>()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<Replica> shuffler = new ArrayList<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Replica rep = shuffler.get(0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String collection@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Collection<Slice> slices = CloudSolrStream.getSlices(this.collection,zkStateReader,false)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Collection<Replica> replicas = slice.getReplicas()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Set<String> liveNodes = clusterState.getLiveNodes()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "shuffler.add(replica)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Collection<Slice> slices = clusterState.getCollection(collection).getActiveSlices()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "replica.getState() == Replica.State.ACTIVE && liveNodes.contains(replica.getNodeName())@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "baseUrls.add(url)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Slice(( slices = CloudSolrStream.getSlices(this.collection,zkStateReader,false)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ClusterState clusterState = zkStateReader.getClusterState()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "getShardUrls['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "replica.getState() == Replica.State.ACTIVE && liveNodes.contains(replica.getNodeName())@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3->0 [style = solid, label="shuffler"];
17->5 [style = bold, label=""];
23->20 [style = bold, label=""];
7->1 [style = solid, label="rep"];
7->1 [style = bold, label=""];
16->11 [style = bold, label=""];
11->15 [style = solid, label="zkStateReader"];
3->19 [style = solid, label="shuffler"];
10->2 [style = solid, label="baseUrls"];
8->3 [style = bold, label=""];
14->10 [style = bold, label=""];
3->6 [style = bold, label=""];
21->22 [style = dotted, label="true"];
0->7 [style = solid, label="rep"];
6->0 [style = bold, label=""];
13->9 [style = dashed, label="0"];
5->14 [style = bold, label=""];
9->8 [style = bold, label=""];
12->6 [style = bold, label=""];
12->0 [style = bold, label=""];
15->5 [style = bold, label=""];
11->15 [style = bold, label=""];
1->9 [style = bold, label=""];
19->0 [style = bold, label=""];
0->7 [style = bold, label=""];
9->13 [style = solid, label="url"];
11->5 [style = bold, label=""];
3->20 [style = bold, label=""];
20->23 [style = bold, label=""];
11->17 [style = solid, label="zkStateReader"];
10->8 [style = bold, label=""];
21->11 [style = bold, label=""];
23->19 [style = bold, label=""];
20->23 [style = dotted, label="true"];
13->2 [style = bold, label=""];
15->17 [style = dashed, label="0"];
11->17 [style = bold, label=""];
14->18 [style = bold, label=""];
18->8 [style = bold, label=""];
1->9 [style = solid, label="url"];
6->12 [style = dotted, label="true"];
13->8 [style = bold, label=""];
4->11 [style = bold, label=""];
20->19 [style = bold, label=""];
6->23 [style = dashed, label="0"];
9->13 [style = bold, label=""];
6->12 [style = bold, label=""];
}
