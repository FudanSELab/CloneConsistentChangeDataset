digraph {
13 [style = filled, label = "mailboxThread.join()@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(expectedInvocations,counter.get())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final AtomicInteger counter = new AtomicInteger(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "start(mailboxThread)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "mailboxThread.signalStart()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "mailboxThread.start()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final MailboxExecutor mailboxExecutor = mailboxProcessor.getMailboxExecutor(DEFAULT_PRIORITY)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int expectedInvocations = 3@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testAvoidStarvation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(expectedInvocations,counter.get())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final MailboxProcessor mailboxProcessor = mailboxThread.getMailboxProcessor()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "stop(mailboxThread)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "stop(mailboxThread)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(expectedInvocations,index.get())@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testRunDefaultAction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testAvoidStarvation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "MailboxThread mailboxThread = new MailboxThread(){@Override public void runDefaultAction(Controller controller){if (counter.incrementAndGet() == expectedInvocations) {controller.allActionsCompleted()}}}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "AtomicInteger index = new AtomicInteger()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "mailboxExecutor.execute(new Runnable(){@Override public void run(){mailboxExecutor.execute(this,\"Blocking mail\" + index.incrementAndGet())}},\"Blocking mail\" + index.get())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
17->8 [style = bold, label=""];
16->15 [style = bold, label=""];
8->18 [style = solid, label="expectedInvocations"];
8->10 [style = solid, label="expectedInvocations"];
4->6 [style = solid, label="mailboxThread"];
3->2 [style = solid, label="index"];
2->9 [style = bold, label=""];
1->7 [style = bold, label=""];
13->11 [style = bold, label=""];
15->18 [style = bold, label=""];
9->6 [style = bold, label=""];
8->4 [style = solid, label="expectedInvocations"];
8->0 [style = bold, label=""];
7->5 [style = bold, label=""];
6->13 [style = dashed, label="0"];
3->2 [style = bold, label=""];
4->16 [style = solid, label="mailboxThread"];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
12->8 [style = bold, label=""];
1->16 [style = dashed, label="0"];
6->11 [style = bold, label=""];
9->13 [style = bold, label=""];
4->1 [style = bold, label=""];
14->8 [style = bold, label=""];
4->15 [style = solid, label="mailboxThread"];
4->16 [style = bold, label=""];
8->11 [style = solid, label="expectedInvocations"];
}
