digraph {
17 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-max\",metricGroup,\"\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i < 4@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "this.records.close()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "i <= 3@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int v = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "subscriptions.seek(tp,0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(200,avgMetric.value(),EPSILON)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "records = fetcher.fetchedRecords().get(tp)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "consumerClient.poll(0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "subscriptions.assignFromUser(Arrays.asList(tp))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "subscriptions.assignFromUser(singleton(tp))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-avg\",METRIC_GROUP,\"\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<ConsumerRecord<byte((,byte((>> records@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "client.prepareResponse(fetchResponse(this.records.buffer(),Errors.NONE.code(),100L,100 * i))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "v < 3@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "fetcher.sendFetches()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int i = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "sender.run(time.milliseconds())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Future<RecordMetadata> future = accumulator.append(tp,0L,\"key\".getBytes(),\"value\".getBytes(),null,MAX_BLOCK_TIMEOUT).future@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(300,maxMetric.value(),EPS)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "sender.run(time.milliseconds())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-avg\",metricGroup,\"\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "this.records = MemoryRecords.emptyRecords(ByteBuffer.allocate(1024),CompressionType.NONE)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final long offset = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "client.respond(produceResponse(tp,offset,Errors.NONE.code(),100 * i))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(3,records.size())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "v++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(200,avgMetric.value(),EPS)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "this.records.append((long)i * 3 + v,Record.NO_TIMESTAMP,\"key\".getBytes(),String.format(\"value-%d\",v).getBytes())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-max\",METRIC_GROUP,\"\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i > 1@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(300,maxMetric.value(),EPSILON)@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8->30 [style = bold, label=""];
19->27 [style = dashed, label="0"];
18->16 [style = solid, label="v"];
12->5 [style = bold, label=""];
18->21 [style = solid, label="v"];
22->29 [style = dashed, label="0"];
1->30 [style = solid, label="i"];
8->20 [style = solid, label="i"];
26->1 [style = solid, label="i"];
29->8 [style = dotted, label="true"];
1->2 [style = solid, label="i"];
21->16 [style = bold, label=""];
17->36 [style = dashed, label="0"];
9->24 [style = bold, label=""];
8->2 [style = solid, label="i"];
14->7 [style = dashed, label="0"];
1->22 [style = solid, label="i"];
22->0 [style = dotted, label="true"];
28->30 [style = solid, label="offset"];
12->18 [style = dotted, label="true"];
33->27 [style = bold, label=""];
22->7 [style = bold, label=""];
8->22 [style = bold, label=""];
3->34 [style = dashed, label="0"];
22->20 [style = dotted, label="true"];
12->10 [style = dotted, label="true"];
2->21 [style = bold, label=""];
29->32 [style = bold, label=""];
1->12 [style = solid, label="i"];
22->13 [style = dotted, label="true"];
16->21 [style = dotted, label="true"];
31->28 [style = bold, label=""];
29->32 [style = dotted, label="true"];
1->20 [style = solid, label="i"];
29->1 [style = dotted, label="true"];
26->29 [style = solid, label="i"];
1->29 [style = solid, label="i"];
21->2 [style = solid, label="v"];
12->32 [style = dashed, label="0"];
25->9 [style = bold, label=""];
15->24 [style = dashed, label="0"];
28->26 [style = bold, label=""];
5->18 [style = bold, label=""];
19->17 [style = bold, label=""];
12->13 [style = bold, label=""];
32->8 [style = bold, label=""];
21->16 [style = solid, label="v"];
30->35 [style = bold, label=""];
35->1 [style = bold, label=""];
10->13 [style = bold, label=""];
17->3 [style = bold, label=""];
4->1 [style = bold, label=""];
1->29 [style = bold, label=""];
18->2 [style = solid, label="v"];
8->12 [style = solid, label="i"];
7->19 [style = bold, label=""];
36->34 [style = bold, label=""];
20->11 [style = bold, label=""];
18->16 [style = bold, label=""];
27->36 [style = bold, label=""];
16->2 [style = dotted, label="true"];
16->10 [style = bold, label=""];
0->6 [style = bold, label=""];
26->29 [style = bold, label=""];
3->14 [style = bold, label=""];
8->22 [style = solid, label="i"];
34->7 [style = bold, label=""];
22->11 [style = dotted, label="true"];
1->8 [style = solid, label="i"];
16->2 [style = bold, label=""];
22->6 [style = dotted, label="true"];
22->12 [style = dotted, label="true"];
1->22 [style = bold, label=""];
11->0 [style = bold, label=""];
24->4 [style = bold, label=""];
29->33 [style = bold, label=""];
22->8 [style = dotted, label="true"];
12->16 [style = dotted, label="true"];
12->5 [style = dotted, label="true"];
9->15 [style = bold, label=""];
22->12 [style = bold, label=""];
6->8 [style = bold, label=""];
15->4 [style = bold, label=""];
29->30 [style = dotted, label="true"];
26->30 [style = solid, label="i"];
23->9 [style = bold, label=""];
29->35 [style = dotted, label="true"];
13->20 [style = bold, label=""];
}
