digraph {
2 [style = filled, label = "String bootstraps = standardProps.getProperty(\"bootstrap.servers\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testSourceSinkWithKeyAndPartialValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "tEnv.executeSql(createTable)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String bootstraps = getBootstrapServers()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final String topic = \"key_partial_value_topic_\" + format@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final String topic = \"key_full_value_topic_\" + format@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(result,deepEqualTo(expected,true))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String initialValues = \"INSERT INTO upsert_kafka\" + \"VALUES\" + \" (1, 'name 1', TIMESTAMP '2020-03-08 13:12:11.123', 100, 'payload 1'),\" + \" (2, 'name 2', TIMESTAMP '2020-03-09 13:12:11.123', 101, 'payload 2'),\" + \" (3, 'name 3', TIMESTAMP '2020-03-10 13:12:11.123', 102, 'payload 3'),\" + \" (1, 'name 1', TIMESTAMP '2020-03-11 13:12:11.123', 100, 'payload')\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String initialValues = \"INSERT INTO upsert_kafka\" + \"VALUES\" + \" (1, 'name 1', TIMESTAMP '2020-03-08 13:12:11.123', 100, 41, 'payload 1'),\" + \" (2, 'name 2', TIMESTAMP '2020-03-09 13:12:11.123', 101, 42, 'payload 2'),\" + \" (3, 'name 3', TIMESTAMP '2020-03-10 13:12:11.123', 102, 43, 'payload 3'),\" + \" (2, 'name 2', TIMESTAMP '2020-03-11 13:12:11.123', 101, 42, 'payload')\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "deleteTestTopic(topic)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final List<Row> result = collectRows(tEnv.sqlQuery(\"SELECT * FROM upsert_kafka\"),5)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "tEnv.executeSql(initialValues).await()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "createTestTopic(topic,1,1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String createTable = String.format(\"CREATE TABLE upsert_kafka (\" + \" `user_id` BIGINT,\" + \" `name` STRING,\" + \" `timestamp` TIMESTAMP(3) METADATA,\" + \" `event_id` BIGINT,\" + \" `payload` STRING,\" + \" PRIMARY KEY (event_id, user_id) NOT ENFORCED\" + \") WITH (\" + \" 'connector' = 'upsert-kafka',\" + \" 'topic' = '%s',\" + \" 'properties.bootstrap.servers' = '%s',\" + \" 'key.format' = '%s',\" + \" 'value.format' = '%s',\" + \" 'value.fields-include' = 'ALL',\" + \" 'sink.parallelism' = '4'\" + \")\",topic,bootstraps,format,format)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final String createTable = String.format(\"CREATE TABLE upsert_kafka (\" + \" `k_user_id` BIGINT,\" + \" `name` STRING,\" + \" `timestamp` TIMESTAMP(3) METADATA,\" + \" `k_event_id` BIGINT,\" + \" `user_id` INT,\" + \" `payload` STRING,\" + \" PRIMARY KEY (k_event_id, k_user_id) NOT ENFORCED\" + \") WITH (\" + \" 'connector' = 'upsert-kafka',\" + \" 'topic' = '%s',\" + \" 'properties.bootstrap.servers' = '%s',\" + \" 'key.format' = '%s',\" + \" 'key.fields-prefix' = 'k_',\" + \" 'value.format' = '%s',\" + \" 'value.fields-include' = 'EXCEPT_KEY'\" + \")\",topic,bootstraps,format,format)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final List<Row> expected = Arrays.asList(changelogRow(\"+I\",1L,\"name 1\",LocalDateTime.parse(\"2020-03-08T13:12:11.123\"),100L,\"payload 1\"),changelogRow(\"+I\",2L,\"name 2\",LocalDateTime.parse(\"2020-03-09T13:12:11.123\"),101L,\"payload 2\"),changelogRow(\"+I\",3L,\"name 3\",LocalDateTime.parse(\"2020-03-10T13:12:11.123\"),102L,\"payload 3\"),changelogRow(\"-U\",1L,\"name 1\",LocalDateTime.parse(\"2020-03-08T13:12:11.123\"),100L,\"payload 1\"),changelogRow(\"+U\",1L,\"name 1\",LocalDateTime.parse(\"2020-03-11T13:12:11.123\"),100L,\"payload\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testKafkaSourceSinkWithKeyAndFullValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testSourceSinkWithKeyAndPartialValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "final List<Row> expected = Arrays.asList(changelogRow(\"+I\",1L,\"name 1\",LocalDateTime.parse(\"2020-03-08T13:12:11.123\"),100L,41,\"payload 1\"),changelogRow(\"+I\",2L,\"name 2\",LocalDateTime.parse(\"2020-03-09T13:12:11.123\"),101L,42,\"payload 2\"),changelogRow(\"+I\",3L,\"name 3\",LocalDateTime.parse(\"2020-03-10T13:12:11.123\"),102L,43,\"payload 3\"),changelogRow(\"-U\",2L,\"name 2\",LocalDateTime.parse(\"2020-03-09T13:12:11.123\"),101L,42,\"payload 2\"),changelogRow(\"+U\",2L,\"name 2\",LocalDateTime.parse(\"2020-03-11T13:12:11.123\"),101L,42,\"payload\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->7 [style = solid, label="expected"];
2->9 [style = solid, label="bootstraps"];
4->17 [style = bold, label=""];
12->9 [style = solid, label="bootstraps"];
6->10 [style = solid, label="topic"];
9->4 [style = bold, label=""];
18->15 [style = solid, label="topic"];
3->7 [style = solid, label="result"];
0->16 [style = dashed, label="0"];
16->7 [style = bold, label=""];
9->4 [style = solid, label="createTable"];
2->9 [style = bold, label=""];
3->16 [style = bold, label=""];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
18->10 [style = solid, label="topic"];
3->0 [style = bold, label=""];
0->7 [style = bold, label=""];
6->18 [style = dashed, label="0"];
2->12 [style = dashed, label="0"];
2->15 [style = solid, label="bootstraps"];
6->8 [style = solid, label="topic"];
1->6 [style = bold, label=""];
6->9 [style = solid, label="topic"];
5->17 [style = dashed, label="0"];
18->10 [style = bold, label=""];
11->3 [style = bold, label=""];
10->12 [style = bold, label=""];
6->10 [style = bold, label=""];
18->8 [style = solid, label="topic"];
2->15 [style = bold, label=""];
15->4 [style = bold, label=""];
16->7 [style = solid, label="expected"];
14->18 [style = bold, label=""];
10->2 [style = bold, label=""];
5->11 [style = bold, label=""];
13->6 [style = bold, label=""];
4->5 [style = bold, label=""];
15->4 [style = solid, label="createTable"];
9->15 [style = dashed, label="0"];
17->11 [style = bold, label=""];
}
