digraph {
5 [style = filled, label = "client.blockUntilConnected()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testPersistentWatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testPersistentWatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "client.create().creatingParentsIfNeeded().forPath(\"/test/foo\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.setData().forPath(\"/test/foo\",\"hey\".getBytes())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "AsyncCuratorFramework async = AsyncCuratorFramework.wrap(client)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "async.addWatch().forPath(\"/foo\")@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "client.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testPersistentWatchesNotAvailableAsync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CountDownLatch latch = new CountDownLatch(3)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Watcher watcher = null@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(timing.awaitLatch(latch))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "client.delete().forPath(\"/test/foo\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "client.watchers().add().withMode(AddWatchMode.PERSISTENT).usingWatcher(watcher).forPath(\"/test/foo\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
3->9 [style = solid, label="latch"];
12->14 [style = bold, label=""];
8->10 [style = bold, label=""];
1->2 [style = bold, label=""];
5->12 [style = dashed, label="0"];
6->0 [style = bold, label=""];
9->10 [style = dashed, label="0"];
7->4 [style = bold, label=""];
3->10 [style = solid, label="latch"];
3->7 [style = bold, label=""];
13->2 [style = bold, label=""];
4->6 [style = bold, label=""];
11->2 [style = bold, label=""];
2->12 [style = bold, label=""];
2->5 [style = bold, label=""];
8->9 [style = bold, label=""];
0->8 [style = bold, label=""];
}
