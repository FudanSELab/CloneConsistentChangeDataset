digraph {
3 [style = filled, label = "assertThat(result,failedWith(3))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,-2,3\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"-1,2,3\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "dummyRangeRangeSingleShouldFailIfBuildRangeContainsEmptyNumber['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1-', expected string with a range M-N\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "dummyRangeNumberMultiShouldFailIfBuildNumberIsNegative['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(result,failedWith(3))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"-1\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \"-\" is not a valid option\"))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1,-2,3', expected string with a range M-N\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(result,failedWith(2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,2,-3\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(result,failedWith(2))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \"-1,2,3\" is not a valid option\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1,2,-3', expected string with a range M-N\"))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "dummyRangeNumberMultiShouldFailIfBuildNumberIsNegative['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1-\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"-\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \"-1\" is not a valid option\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
16->14 [style = solid, label="result"];
13->10 [style = bold, label=""];
6->3 [style = bold, label=""];
2->19 [style = bold, label=""];
3->1 [style = bold, label=""];
15->1 [style = solid, label="result"];
12->16 [style = dashed, label="0"];
6->1 [style = solid, label="result"];
18->11 [style = bold, label=""];
12->8 [style = solid, label="result"];
7->20 [style = dashed, label="0"];
9->10 [style = bold, label=""];
8->14 [style = dashed, label="0"];
15->3 [style = bold, label=""];
2->4 [style = bold, label=""];
18->0 [style = solid, label="result"];
10->18 [style = dashed, label="0"];
0->7 [style = bold, label=""];
12->2 [style = solid, label="result"];
11->0 [style = bold, label=""];
10->11 [style = bold, label=""];
15->3 [style = solid, label="result"];
5->12 [style = bold, label=""];
8->2 [style = bold, label=""];
6->15 [style = dashed, label="0"];
12->8 [style = bold, label=""];
1->21 [style = bold, label=""];
18->11 [style = solid, label="result"];
7->6 [style = bold, label=""];
21->16 [style = bold, label=""];
5->21 [style = dashed, label="0"];
16->14 [style = bold, label=""];
4->19 [style = dashed, label="0"];
0->20 [style = bold, label=""];
14->2 [style = bold, label=""];
6->3 [style = solid, label="result"];
10->0 [style = solid, label="result"];
10->11 [style = solid, label="result"];
20->15 [style = bold, label=""];
17->18 [style = bold, label=""];
16->2 [style = solid, label="result"];
}
