digraph {
17 [style = filled, label = "assertFalse(c1.equals(c2))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "s2.add(1.0,1.1,1.2,1.3,1.4,1.5)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3,1.4,1.5)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "XYIntervalSeriesCollection<String> c1 = new XYIntervalSeriesCollection<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "OHLCSeriesCollection c2 = TestUtils.serialised(c1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(c1.equals(c2))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "XYIntervalSeries<String> s2 = new XYIntervalSeries<>(\"Series\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "c1.addSeries(new XYIntervalSeries<>(\"Empty Series\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "s1.add(new Year(2006),1.0,1.1,1.2,1.3)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(c1.equals(c2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "XYIntervalSeriesCollection<String> c2 = new XYIntervalSeriesCollection<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "c2.addSeries(new XYIntervalSeries<>(\"Empty Series\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "XYIntervalSeries<String> s1 = new XYIntervalSeries<>(\"Series\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "c1.addSeries(s1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "OHLCSeries<String> s1 = new OHLCSeries<>(\"Series\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertFalse(c1.equals(c2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "c2.addSeries(s2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(c1,c2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "OHLCSeriesCollection c1 = new OHLCSeriesCollection()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"Series\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
17->10 [style = bold, label=""];
12->11 [style = solid, label="c2"];
9->11 [style = bold, label=""];
18->15 [style = bold, label=""];
14->22 [style = bold, label=""];
12->20 [style = bold, label=""];
0->15 [style = dashed, label="0"];
7->0 [style = bold, label=""];
20->14 [style = bold, label=""];
15->20 [style = solid, label="c1"];
12->16 [style = solid, label="c2"];
14->6 [style = solid, label="s1"];
1->6 [style = solid, label="c2"];
16->19 [style = bold, label=""];
8->4 [style = solid, label="s1"];
0->1 [style = solid, label="c1"];
0->6 [style = solid, label="c1"];
19->9 [style = solid, label="s2"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
21->9 [style = bold, label=""];
3->4 [style = solid, label="s1"];
8->5 [style = bold, label=""];
10->13 [style = bold, label=""];
6->16 [style = bold, label=""];
5->4 [style = bold, label=""];
0->8 [style = bold, label=""];
12->17 [style = solid, label="c2"];
3->8 [style = dashed, label="0"];
23->17 [style = bold, label=""];
4->1 [style = bold, label=""];
15->12 [style = bold, label=""];
12->20 [style = solid, label="c2"];
11->23 [style = bold, label=""];
12->13 [style = solid, label="c2"];
22->6 [style = bold, label=""];
19->21 [style = bold, label=""];
}
