digraph {
1 [style = filled, label = "each instanceof ColumnDefinitionSegment@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableName()))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "createDefinitions.getValue()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "result.setContainsNotExistClause(null != ctx.notExistClause())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "result.setNotExisted(null != ctx.notExistClause())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "result.getConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "visitCreateTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "SQLServerCreateTableStatement result = new SQLServerCreateTableStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "null != ctx.createDefinitionClause()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final CreateTableContext ctx@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return result@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "visitCreateTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "createDefinitions.getValue()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "CreateDefinitionSegment each@@@7@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "result.getColumnDefinitions().add((ColumnDefinitionSegment)each)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "visitCreateTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CollectionValue<CreateDefinitionSegment> createDefinitions = (CollectionValue<CreateDefinitionSegment>)visit(ctx.createDefinitionClause())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "MySQLCreateTableStatement result = new MySQLCreateTableStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CreateDefinitionSegment each@@@8@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
17->10 [style = bold, label=""];
5->8 [style = bold, label=""];
0->9 [style = bold, label=""];
10->15 [style = bold, label=""];
0->18 [style = dotted, label="true"];
2->6 [style = bold, label=""];
16->6 [style = bold, label=""];
0->4 [style = dotted, label="true"];
12->11 [style = bold, label=""];
0->11 [style = bold, label=""];
6->17 [style = dashed, label="0"];
19->17 [style = bold, label=""];
19->7 [style = dotted, label="true"];
12->1 [style = bold, label=""];
13->15 [style = dashed, label="0"];
8->1 [style = bold, label=""];
16->7 [style = dotted, label="true"];
5->1 [style = bold, label=""];
10->13 [style = bold, label=""];
6->11 [style = solid, label="result"];
2->7 [style = dotted, label="true"];
15->0 [style = bold, label=""];
6->10 [style = bold, label=""];
10->0 [style = bold, label=""];
0->1 [style = dotted, label="true"];
1->12 [style = dotted, label="true"];
1->12 [style = bold, label=""];
1->5 [style = dotted, label="false"];
0->14 [style = dotted, label="true"];
5->11 [style = bold, label=""];
17->11 [style = solid, label="result"];
0->3 [style = dotted, label="true"];
5->8 [style = dotted, label="true"];
9->1 [style = bold, label=""];
8->11 [style = bold, label=""];
0->9 [style = dotted, label="true"];
13->0 [style = bold, label=""];
}
