digraph {
10 [style = filled, label = "assertThat(capturedRequests1.length,equalTo(0))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(joinHelper.isJoinPending())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(node2,capturedRequest2a.node)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertEquals(node1,capturedRequest1.node)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "joinHelper.sendJoinRequest(node2,0L,optionalJoin2a)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "CapturedRequest capturedRequest1 = capturedRequests1(0(@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "JoinHelper joinHelper = new JoinHelper(Settings.EMPTY,null,null,transportService,null,null,null,null,Collections.emptyList(),null,null)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "joinHelper.sendJoinRequest(node2,0L,optionalJoin2)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(node1,capturedRequest1a.node)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertTrue(joinHelper.isJoinPending())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "joinHelper.sendJoinRequest(node1,0L,optionalJoin1)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertFalse(joinHelper.isJoinPending())@@@56@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "transportService.start()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "capturingTransport.handleRemoteError(capturedRequest2.requestId,new CoordinationStateRejectedException(\"dummy\"))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(capturedRequests2.length,equalTo(1))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "AtomicReference<StatusInfo> nodeHealthServiceStatus = new AtomicReference<>(new StatusInfo(UNHEALTHY,\"unhealthy-info\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "nodeHealthServiceStatus.getAndSet(new StatusInfo(HEALTHY,\"healthy-info\"))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testJoinDeduplication['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testJoinFailureOnUnhealthyNodes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Optional<Join> optionalJoin1 = randomBoolean()? Optional.empty(): Optional.of(new Join(localNode,node1,randomNonNegativeLong(),randomNonNegativeLong(),randomNonNegativeLong()))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "randomBoolean()@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TransportService transportService = capturingTransport.createTransportService(Settings.EMPTY,deterministicTaskQueue.getThreadPool(),TransportService.NOOP_TRANSPORT_INTERCEPTOR,null,null,Collections.emptySet())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(capturedRequests2.length,equalTo(0))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DeterministicTaskQueue deterministicTaskQueue = new DeterministicTaskQueue(Settings.builder().put(NODE_NAME_SETTING.getKey(),\"node0\").build(),random())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CapturedRequest(( capturedRequests2 = capturingTransport.getCapturedRequestsAndClear()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "capturingTransport.handleResponse(capturedRequest1.requestId,TransportResponse.Empty.INSTANCE)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "DiscoveryNode node2 = new DiscoveryNode(\"node2\",buildNewFakeTransportAddress(),Version.CURRENT)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DiscoveryNode node1 = new DiscoveryNode(\"node1\",buildNewFakeTransportAddress(),Version.CURRENT)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "capturingTransport.handleRemoteError(capturedRequest1.requestId,new CoordinationStateRejectedException(\"dummy\"))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertThat(capturedRequests1.length,equalTo(1))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DiscoveryNode localNode = new DiscoveryNode(\"node0\",buildNewFakeTransportAddress(),Version.CURRENT)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "joinHelper.sendJoinRequest(node1,0L,optionalJoin1)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "capturingTransport.handleRemoteError(capturedRequest2a.requestId,new CoordinationStateRejectedException(\"dummy\"))@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(node2,capturedRequest2.node)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "joinHelper.sendJoinRequest(node1,0L,optionalJoin1)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Optional<Join> optionalJoin2 = randomBoolean()? Optional.empty(): Optional.of(new Join(localNode,node2,randomNonNegativeLong(),randomNonNegativeLong(),randomNonNegativeLong()))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "capturingTransport.handleRemoteError(capturedRequest1a.requestId,new CoordinationStateRejectedException(\"dummy\"))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(capturingTransport.getCapturedRequestsAndClear().length,equalTo(0))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "CapturedRequest capturedRequest2a = capturedRequests2a(0(@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertTrue(joinHelper.isJoinPending())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Optional<Join> optionalJoin2a = optionalJoin2.isPresent() && randomBoolean()? Optional.empty(): Optional.of(new Join(localNode,node2,randomNonNegativeLong(),randomNonNegativeLong(),randomNonNegativeLong()))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "CapturedRequest(( capturedRequests2 = capturingTransport.getCapturedRequestsAndClear()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFalse(joinHelper.isJoinPending())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "joinHelper.sendJoinRequest(node1,randomNonNegativeLong(),optionalJoin1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "JoinHelper joinHelper = new JoinHelper(null,null,transportService,null,null,null,null,Collections.emptyList(),null,null)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "CapturedRequest capturedRequest1a = capturedRequests1a(0(@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertThat(capturedRequests2a.length,equalTo(1))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "CapturingTransport capturingTransport = new CapturingTransport()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "CapturedRequest capturedRequest2 = capturedRequests2(0(@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Optional<Join> optionalJoin2 = randomBoolean()? Optional.empty(): Optional.of(new Join(localNode,node2,randomNonNegativeLong(),randomNonNegativeLong(),randomNonNegativeLong()))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "joinHelper.sendJoinRequest(node1,0L,optionalJoin1)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CapturedRequest(( capturedRequests1a = capturingTransport.getCapturedRequestsAndClear()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "CapturedRequest(( capturedRequests2a = capturingTransport.getCapturedRequestsAndClear()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "CapturedRequest(( capturedRequests1a = capturingTransport.getCapturedRequestsAndClear()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testJoinFailureOnUnhealthyNodes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "transportService.start()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "CapturedRequest(( capturedRequests1 = capturingTransport.getCapturedRequestsAndClear()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(capturedRequests1a.length,equalTo(1))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->23 [style = bold, label=""];
43->54 [style = bold, label=""];
11->4 [style = bold, label=""];
18->20 [style = bold, label=""];
20->7 [style = bold, label=""];
21->53 [style = solid, label="optionalJoin1"];
4->26 [style = bold, label=""];
9->22 [style = solid, label="optionalJoin2"];
1->18 [style = bold, label=""];
21->14 [style = solid, label="optionalJoin1"];
22->31 [style = bold, label=""];
2->56 [style = solid, label="localNode"];
0->22 [style = solid, label="node2"];
3->17 [style = bold, label=""];
15->0 [style = bold, label=""];
5->33 [style = bold, label=""];
13->43 [style = solid, label="capturedRequests1"];
13->10 [style = bold, label=""];
52->53 [style = bold, label=""];
21->23 [style = solid, label="optionalJoin1"];
17->29 [style = dashed, label="0"];
13->39 [style = bold, label=""];
10->39 [style = dashed, label="0"];
9->27 [style = bold, label=""];
53->40 [style = bold, label=""];
36->53 [style = bold, label=""];
14->13 [style = bold, label=""];
47->46 [style = bold, label=""];
15->23 [style = solid, label="node1"];
2->3 [style = bold, label=""];
54->57 [style = bold, label=""];
56->37 [style = bold, label=""];
0->12 [style = bold, label=""];
31->41 [style = bold, label=""];
41->55 [style = solid, label="capturedRequests2"];
3->8 [style = bold, label=""];
0->50 [style = solid, label="node2"];
21->42 [style = solid, label="optionalJoin1"];
55->50 [style = bold, label=""];
15->14 [style = solid, label="node1"];
19->2 [style = bold, label=""];
48->24 [style = bold, label=""];
34->30 [style = bold, label=""];
22->1 [style = bold, label=""];
32->52 [style = dotted, label="true"];
25->15 [style = bold, label=""];
30->47 [style = bold, label=""];
21->14 [style = bold, label=""];
0->51 [style = solid, label="node2"];
3->29 [style = solid, label="transportService"];
10->6 [style = bold, label=""];
42->4 [style = bold, label=""];
11->26 [style = solid, label="capturedRequests1a"];
0->37 [style = solid, label="node2"];
15->5 [style = solid, label="node1"];
15->42 [style = solid, label="node1"];
2->22 [style = solid, label="localNode"];
39->43 [style = bold, label=""];
51->34 [style = bold, label=""];
32->52 [style = bold, label=""];
3->17 [style = solid, label="transportService"];
29->25 [style = bold, label=""];
38->13 [style = bold, label=""];
40->26 [style = bold, label=""];
15->33 [style = solid, label="node1"];
2->21 [style = solid, label="localNode"];
40->5 [style = solid, label="capturedRequests1a"];
15->54 [style = solid, label="node1"];
21->38 [style = bold, label=""];
24->19 [style = bold, label=""];
14->38 [style = dashed, label="0"];
16->24 [style = bold, label=""];
0->9 [style = solid, label="node2"];
44->49 [style = solid, label="capturedRequests2a"];
0->31 [style = solid, label="node2"];
37->44 [style = bold, label=""];
56->37 [style = solid, label="optionalJoin2a"];
49->51 [style = bold, label=""];
4->32 [style = bold, label=""];
15->21 [style = solid, label="node1"];
12->21 [style = bold, label=""];
44->45 [style = bold, label=""];
23->11 [style = bold, label=""];
50->42 [style = bold, label=""];
8->17 [style = bold, label=""];
45->49 [style = bold, label=""];
32->36 [style = dotted, label="false"];
27->22 [style = bold, label=""];
15->53 [style = solid, label="node1"];
21->38 [style = solid, label="optionalJoin1"];
6->9 [style = bold, label=""];
57->22 [style = bold, label=""];
32->36 [style = bold, label=""];
0->56 [style = solid, label="node2"];
22->31 [style = solid, label="optionalJoin2"];
8->29 [style = bold, label=""];
2->9 [style = solid, label="localNode"];
28->24 [style = bold, label=""];
18->20 [style = dashed, label="0"];
26->5 [style = bold, label=""];
46->35 [style = bold, label=""];
33->56 [style = bold, label=""];
15->38 [style = solid, label="node1"];
20->55 [style = bold, label=""];
41->20 [style = bold, label=""];
17->25 [style = bold, label=""];
}
