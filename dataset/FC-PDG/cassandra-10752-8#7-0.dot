digraph {
9 [style = filled, label = "defineSchema['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Map<String,String> compactionOptions = new HashMap<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SchemaLoader.createKeyspace(KEYSPACE1,KeyspaceParams.simple(1),SchemaLoader.denseCFMD(KEYSPACE1,CF_DENSE1).compaction(CompactionParams.scts(compactionOptions)),SchemaLoader.standardCFMD(KEYSPACE1,CF_STANDARD1).compaction(CompactionParams.scts(compactionOptions)),SchemaLoader.standardCFMD(KEYSPACE1,CF_STANDARD2),SchemaLoader.standardCFMD(KEYSPACE1,CF_STANDARD3),SchemaLoader.standardCFMD(KEYSPACE1,CF_STANDARD4),SchemaLoader.superCFMD(KEYSPACE1,CF_SUPER1,AsciiType.instance),SchemaLoader.superCFMD(KEYSPACE1,CF_SUPER5,AsciiType.instance),SchemaLoader.superCFMD(KEYSPACE1,CF_SUPERGC,AsciiType.instance).gcGraceSeconds(0))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "leveledOptions.put(\"sstable_size_in_mb\",\"1\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SchemaLoader.createKeyspace(KEYSPACE1,KeyspaceParams.simple(1),SchemaLoader.denseCFMD(KEYSPACE1,CF_DENSE1).compactionStrategyOptions(compactionOptions),SchemaLoader.standardCFMD(KEYSPACE1,CF_STANDARD1).compactionStrategyOptions(compactionOptions),SchemaLoader.standardCFMD(KEYSPACE1,CF_STANDARD2),SchemaLoader.standardCFMD(KEYSPACE1,CF_STANDARD3),SchemaLoader.standardCFMD(KEYSPACE1,CF_STANDARD4),SchemaLoader.superCFMD(KEYSPACE1,CF_SUPER1,AsciiType.instance),SchemaLoader.superCFMD(KEYSPACE1,CF_SUPER5,AsciiType.instance),SchemaLoader.superCFMD(KEYSPACE1,CF_SUPERGC,AsciiType.instance).gcGraceSeconds(0))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "compactionOptions.put(\"tombstone_compaction_interval\",\"1\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "defineSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "defineSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SchemaLoader.prepareServer()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SchemaLoader.createKeyspace(KEYSPACE1,KeyspaceParams.simple(1),SchemaLoader.standardCFMD(KEYSPACE1,CF_STANDARD1).compactionStrategyOptions(leveledOptions),SchemaLoader.standardCFMD(KEYSPACE1,CF_STANDARD2))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Map<String,String> leveledOptions = new HashMap<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->1 [style = solid, label="compactionOptions"];
0->6 [style = solid, label="compactionOptions"];
10->8 [style = solid, label="leveledOptions"];
4->8 [style = bold, label=""];
4->1 [style = bold, label=""];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
5->0 [style = bold, label=""];
2->7 [style = dashed, label="0"];
2->4 [style = bold, label=""];
4->6 [style = bold, label=""];
10->7 [style = bold, label=""];
1->6 [style = dashed, label="0"];
0->10 [style = dashed, label="0"];
3->0 [style = bold, label=""];
0->2 [style = bold, label=""];
}
