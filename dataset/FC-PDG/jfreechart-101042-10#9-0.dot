digraph {
16 [style = filled, label = "ko1.addObject(\"K1\",obj1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ko1.addObject(\"V3\",3)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ko1.addObject(\"V1\",1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ko1.addObject(\"K1\",obj1)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Object obj1 = new ArrayList<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "obj1 = new DefaultPieDataset<String>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(ko1 != ko2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ko2 = (KeyedObjects)ko1.clone()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "KeyedObjects<String> ko2 = CloneUtils.clone(ko1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(ko1 != ko2)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ko2 = CloneUtils.clone(ko1)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "KeyedObjects<String> ko2 = CloneUtils.clone(ko1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(ko1 != ko2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ko1 = new KeyedObjects<>()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testCloning2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(ko2.getObject(\"K1\") != obj1)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testCloning2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ko1.addObject(\"V2\",null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "KeyedObjects<String> ko1 = new KeyedObjects<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
6->3 [style = bold, label=""];
21->10 [style = bold, label=""];
18->0 [style = solid, label="ko2"];
23->20 [style = bold, label=""];
3->1 [style = solid, label="obj1"];
21->6 [style = solid, label="ko2"];
9->6 [style = solid, label="obj1"];
17->9 [style = bold, label=""];
11->6 [style = bold, label=""];
18->15 [style = bold, label=""];
16->7 [style = bold, label=""];
9->16 [style = solid, label="obj1"];
22->21 [style = bold, label=""];
5->14 [style = solid, label="ko1"];
14->10 [style = bold, label=""];
2->15 [style = solid, label="ko2"];
20->21 [style = solid, label="ko1"];
16->5 [style = dashed, label="0"];
7->14 [style = solid, label="ko2"];
20->5 [style = bold, label=""];
7->14 [style = bold, label=""];
5->16 [style = bold, label=""];
8->0 [style = bold, label=""];
5->19 [style = bold, label=""];
13->18 [style = solid, label="ko1"];
12->2 [style = bold, label=""];
13->12 [style = bold, label=""];
5->7 [style = solid, label="ko1"];
20->10 [style = solid, label="ko1"];
0->1 [style = bold, label=""];
21->10 [style = solid, label="ko2"];
2->15 [style = bold, label=""];
12->18 [style = bold, label=""];
2->18 [style = dashed, label="0"];
9->5 [style = bold, label=""];
3->13 [style = bold, label=""];
3->12 [style = solid, label="obj1"];
13->15 [style = solid, label="ko1"];
19->22 [style = bold, label=""];
15->8 [style = bold, label=""];
7->11 [style = solid, label="ko2"];
18->15 [style = solid, label="ko2"];
10->11 [style = bold, label=""];
2->0 [style = solid, label="ko2"];
}
