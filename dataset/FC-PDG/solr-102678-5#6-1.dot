digraph {
29 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName + \", field(\" + dvFieldName + \")\",\"sort\",\"id asc\"),\"//*(@numFound='10'(\",\"//result/doc(1(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='0.0'(\",\"//result/doc(2(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='1.1'(\",\"//result/doc(3(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='2.2'(\",\"//result/doc(10(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='9.9'(\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "doTestFloatPointFunctionQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + field + \", field(\" + field + \")\",\"sort\",\"id asc\"),\"//*(@numFound='10'(\",\"//result/doc(1(/\" + type + \"(@name='field(\" + field + \")'((.='0'(\",\"//result/doc(2(/\" + type + \"(@name='field(\" + field + \")'((.='1'(\",\"//result/doc(3(/\" + type + \"(@name='field(\" + field + \")'((.='2'(\",\"//result/doc(10(/\" + type + \"(@name='field(\" + field + \")'((.='9'(\")@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "String type@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "String type@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String nonDvFieldName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "String field@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "i >= 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName + \", product(-1,\" + dvFieldName + \")\",\"sort\",\"id asc\"),\"//*(@numFound='10'(\",\"//result/doc(1(/float(@name='product(-1,\" + dvFieldName + \")'((.='-0.0'(\",\"//result/doc(2(/float(@name='product(-1,\" + dvFieldName + \")'((.='-1.1'(\",\"//result/doc(3(/float(@name='product(-1,\" + dvFieldName + \")'((.='-2.2'(\",\"//result/doc(10(/float(@name='product(-1,\" + dvFieldName + \")'((.='-9.9'(\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "doTestIntPointFunctionQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertU(adoc(\"id\",String.valueOf(i),dvFieldName,String.valueOf(i),nonDvFieldName,String.valueOf(i)))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "String type@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + field + \", product(-1,\" + field + \")\",\"sort\",\"id asc\"),\"//*(@numFound='10'(\",\"//result/doc(1(/float(@name='product(-1,\" + field + \")'((.='-0.0'(\",\"//result/doc(2(/float(@name='product(-1,\" + field + \")'((.='-1.0'(\",\"//result/doc(3(/float(@name='product(-1,\" + field + \")'((.='-2.0'(\",\"//result/doc(10(/float(@name='product(-1,\" + field + \")'((.='-9.0'(\")@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertQEx(\"Expecting Exception\",\"sort param could not be parsed as a query\",req(\"q\",\"*:*\",\"fl\",\"id, \" + nonDvFieldName,\"sort\",\"product(-1,\" + nonDvFieldName + \") asc\"),SolrException.ErrorCode.BAD_REQUEST)@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + field,\"sort\",\"product(-1,\" + field + \") asc\"),\"//*(@numFound='10'(\",\"//result/doc(1(/\" + type + \"(@name='\" + field + \"'((.='9'(\",\"//result/doc(2(/\" + type + \"(@name='\" + field + \"'((.='8'(\",\"//result/doc(3(/\" + type + \"(@name='\" + field + \"'((.='7'(\",\"//result/doc(10(/\" + type + \"(@name='\" + field + \"'((.='0'(\")@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertTrue(h.getCore().getLatestSchema().getField(field).getType() instanceof PointField)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertTrue(h.getCore().getLatestSchema().getField(nonDvFieldName).getType() instanceof PointField)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertU(commit())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String dvFieldName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName + \", field(\" + dvFieldName + \")\",\"sort\",\"id asc\"),\"//*(@numFound='10'(\",\"//result/doc(1(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='0'(\",\"//result/doc(2(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='1'(\",\"//result/doc(3(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='2'(\",\"//result/doc(10(/\" + type + \"(@name='field(\" + dvFieldName + \")'((.='9'(\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "String nonDvFieldName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(h.getCore().getLatestSchema().getField(dvFieldName).hasDocValues())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName,\"sort\",\"product(-1,\" + dvFieldName + \") asc\"),\"//*(@numFound='10'(\",\"//result/doc(1(/\" + type + \"(@name='\" + dvFieldName + \"'((.='9'(\",\"//result/doc(2(/\" + type + \"(@name='\" + dvFieldName + \"'((.='8'(\",\"//result/doc(3(/\" + type + \"(@name='\" + dvFieldName + \"'((.='7'(\",\"//result/doc(10(/\" + type + \"(@name='\" + dvFieldName + \"'((.='0'(\")@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int i = 9@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertU(adoc(\"id\",String.valueOf(i),dvFieldName,String.format(Locale.ROOT,\"%f\",(float)i * 1.1),nonDvFieldName,String.format(Locale.ROOT,\"%f\",(float)i * 1.1)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName,\"sort\",\"product(-1,\" + dvFieldName + \") asc\"),\"//*(@numFound='10'(\",\"//result/doc(1(/\" + type + \"(@name='\" + dvFieldName + \"'((.='9.9'(\",\"//result/doc(2(/\" + type + \"(@name='\" + dvFieldName + \"'((.='8.8'(\",\"//result/doc(3(/\" + type + \"(@name='\" + dvFieldName + \"'((.='7.7'(\",\"//result/doc(10(/\" + type + \"(@name='\" + dvFieldName + \"'((.='0.0'(\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertQ(req(\"q\",\"*:*\",\"fl\",\"id, \" + dvFieldName + \", product(-1,\" + dvFieldName + \")\",\"sort\",\"id asc\"),\"//*(@numFound='10'(\",\"//result/doc(1(/float(@name='product(-1,\" + dvFieldName + \")'((.='-0.0'(\",\"//result/doc(2(/float(@name='product(-1,\" + dvFieldName + \")'((.='-1.0'(\",\"//result/doc(3(/float(@name='product(-1,\" + dvFieldName + \")'((.='-2.0'(\",\"//result/doc(10(/float(@name='product(-1,\" + dvFieldName + \")'((.='-9.0'(\")@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertU(adoc(\"id\",String.valueOf(i),field,String.valueOf(i)))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertFalse(h.getCore().getLatestSchema().getField(nonDvFieldName).hasDocValues())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String dvFieldName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(h.getCore().getLatestSchema().getField(dvFieldName).getType() instanceof PointField)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i--@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "doTestIntPointFunctionQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2->17 [style = bold, label=""];
2->3 [style = dotted, label="true"];
5->10 [style = bold, label=""];
23->20 [style = bold, label=""];
3->28 [style = dashed, label="0"];
32->10 [style = solid, label="nonDvFieldName"];
22->19 [style = dotted, label="true"];
8->15 [style = bold, label=""];
9->0 [style = bold, label=""];
3->17 [style = dashed, label="0"];
11->4 [style = solid, label="i"];
0->27 [style = bold, label=""];
26->29 [style = bold, label=""];
11->17 [style = solid, label="i"];
19->18 [style = solid, label="field"];
2->3 [style = bold, label=""];
2->17 [style = dotted, label="true"];
12->11 [style = bold, label=""];
12->1 [style = dotted, label="true"];
7->6 [style = solid, label="type"];
19->17 [style = solid, label="field"];
11->3 [style = solid, label="i"];
31->28 [style = solid, label="dvFieldName"];
7->8 [style = solid, label="type"];
4->3 [style = solid, label="i"];
4->2 [style = bold, label=""];
15->6 [style = bold, label=""];
22->24 [style = dotted, label="true"];
2->28 [style = dotted, label="true"];
3->4 [style = bold, label=""];
4->28 [style = solid, label="i"];
4->17 [style = solid, label="i"];
24->20 [style = solid, label="type"];
11->2 [style = bold, label=""];
21->18 [style = bold, label=""];
9->23 [style = dashed, label="0"];
4->2 [style = solid, label="i"];
13->32 [style = dashed, label="0"];
20->21 [style = bold, label=""];
25->27 [style = solid, label="type"];
30->11 [style = bold, label=""];
13->24 [style = dashed, label="0"];
28->4 [style = bold, label=""];
12->13 [style = dotted, label="true"];
6->29 [style = dashed, label="0"];
13->3 [style = solid, label="nonDvFieldName"];
1->6 [style = solid, label="dvFieldName"];
24->18 [style = solid, label="type"];
14->23 [style = bold, label=""];
30->25 [style = dotted, label="true"];
1->15 [style = solid, label="dvFieldName"];
19->20 [style = solid, label="field"];
6->16 [style = bold, label=""];
31->26 [style = solid, label="dvFieldName"];
2->14 [style = bold, label=""];
2->4 [style = dotted, label="true"];
11->2 [style = solid, label="i"];
0->8 [style = bold, label=""];
30->32 [style = dotted, label="true"];
32->28 [style = solid, label="nonDvFieldName"];
16->5 [style = bold, label=""];
15->26 [style = dashed, label="0"];
8->27 [style = dashed, label="0"];
1->8 [style = solid, label="dvFieldName"];
14->9 [style = bold, label=""];
1->3 [style = solid, label="dvFieldName"];
19->21 [style = solid, label="field"];
31->27 [style = solid, label="dvFieldName"];
12->7 [style = dotted, label="true"];
31->29 [style = solid, label="dvFieldName"];
2->28 [style = bold, label=""];
22->11 [style = bold, label=""];
17->4 [style = bold, label=""];
29->16 [style = bold, label=""];
30->31 [style = dotted, label="true"];
13->10 [style = solid, label="nonDvFieldName"];
11->28 [style = solid, label="i"];
27->26 [style = bold, label=""];
25->29 [style = solid, label="type"];
}
