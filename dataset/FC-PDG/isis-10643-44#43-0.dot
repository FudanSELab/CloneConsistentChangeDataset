digraph {
5 [style = filled, label = "objectAssociation = new ObjectAssociationAbstract(facetedMethod,FeatureType.PROPERTY,objectSpecification){@Override public ManagedObject get(final ManagedObject fromObject,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public boolean isEmpty(final ManagedObject adapter,final InteractionInitiatedBy interactionInitiatedBy){return false}@Override public Can<ManagedObject> getChoices(final ManagedObject object,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public ManagedObject getDefault(final ManagedObject adapter){return null}@Override public void toDefault(final ManagedObject target){}@Override public UsabilityContext createUsableInteractionContext(final ManagedObject target,final InteractionInitiatedBy interactionInitiatedBy,Where where){return null}@Override public VisibilityContext createVisibleInteractionContext(final ManagedObject targetObjectAdapter,final InteractionInitiatedBy interactionInitiatedBy,Where where){return null}@Override public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType){return false}@Override public boolean hasAutoComplete(){return false}@Override public Can<ManagedObject> getAutoComplete(ManagedObject object,String searchArg,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public int getAutoCompleteMinLength(){return 0}}@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "setup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "objectAssociation = new ObjectAssociationAbstract(facetedMethod,FeatureType.PROPERTY,mockObjectSpecification){@Override public ManagedObject get(final ManagedObject fromObject,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public boolean isEmpty(final ManagedObject adapter,final InteractionInitiatedBy interactionInitiatedBy){return false}@Override public Can<ManagedObject> getChoices(final ManagedObject object,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public ManagedObject getDefault(final ManagedObject adapter){return null}@Override public void toDefault(final ManagedObject target){}@Override public UsabilityContext createUsableInteractionContext(final ManagedObject target,final InteractionInitiatedBy interactionInitiatedBy,final Where where){return null}@Override public VisibilityContext createVisibleInteractionContext(final ManagedObject targetObjectAdapter,final InteractionInitiatedBy interactionInitiatedBy,final Where where){return null}@Override public boolean containsNonFallbackFacet(final Class<? extends Facet> facetType){return false}@Override public boolean hasAutoComplete(){return false}@Override public Can<ManagedObject> getAutoComplete(final ManagedObject object,final String searchArg,final InteractionInitiatedBy interactionInitiatedBy){return null}@Override public int getAutoCompleteMinLength(){return 0}}@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "facetedMethod = FacetedMethod.createForProperty(,\"firstName\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "context.checking(new Expectations(){})@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "setup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "setup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6->0 [style = bold, label=""];
2->0 [style = bold, label=""];
1->5 [style = dashed, label="0"];
0->1 [style = solid, label="facetedMethod"];
0->3 [style = bold, label=""];
3->5 [style = bold, label=""];
4->0 [style = bold, label=""];
3->1 [style = bold, label=""];
0->5 [style = solid, label="facetedMethod"];
}
