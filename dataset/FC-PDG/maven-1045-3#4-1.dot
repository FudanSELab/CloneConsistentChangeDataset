digraph {
4 [style = filled, label = "assertViolations(result_31,0,0,3)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertViolations(result,0,0,2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testSystemPathRefersToProjectBasedir['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertViolations(result_31,0,0,4)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertContains(result_31.getWarnings().get(3),\"'dependencies.dependency.systemPath' for test:b:jar should not point at files within the project directory\")@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertContains(result_31.getWarnings().get(1),\"'dependencies.dependency.systemPath' for test:a:jar should not point at files within the project directory\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertContains(result.getWarnings().get(1),\"'dependencies.dependency.systemPath' for test:b:jar should not point at files within the project directory\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertContains(result_31.getWarnings().get(2),\"'dependencies.dependency.scope' for test:b:jar declares usage of deprecated 'system' scope\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testHardCodedSystemPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SimpleProblemCollector result = validateRaw(\"hard-coded-system-path.xml\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertContains(result_31.getWarnings().get(0),\"'dependencies.dependency.scope' for test:a:jar declares usage of deprecated 'system' scope\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertContains(result.getWarnings().get(0),\"'dependencies.dependency.systemPath' for test:a:jar should not point at files within the project directory\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertContains(result_31.getWarnings().get(0),\"'dependencies.dependency.scope' for test:a:jar declares usage of deprecated 'system' scope\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertContains(result.getWarnings().get(0),\"'dependencies.dependency.scope' for test:a:jar declares usage of deprecated 'system' scope\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "SimpleProblemCollector result_31 = validateRaw(\"basedir-system-path.xml\",ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertViolations(result,0,0,1)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "SimpleProblemCollector result_31 = validateRaw(\"hard-coded-system-path.xml\",ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_3_1)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertContains(result.getWarnings().get(1),\"'dependencies.dependency.systemPath' for test:a:jar should use a variable instead of a hard-coded path\")@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertContains(result.getWarnings().get(2),\"'dependencies.dependency.scope' for test:b:jar declares usage of deprecated 'system' scope\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertContains(result.getWarnings().get(0),\"'dependencies.dependency.systemPath' for test:a:jar should use a variable instead of a hard-coded path\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertContains(result_31.getWarnings().get(2),\"'dependencies.dependency.scope' for test:b:jar declares usage of deprecated 'system' scope\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertViolations(result,0,0,3)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testHardCodedSystemPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "SimpleProblemCollector result = validateRaw(\"basedir-system-path.xml\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->10 [style = bold, label=""];
4->3 [style = bold, label=""];
14->23 [style = solid, label="result_31"];
21->19 [style = bold, label=""];
0->2 [style = bold, label=""];
0->15 [style = dashed, label="0"];
11->12 [style = bold, label=""];
1->21 [style = dashed, label="0"];
5->18 [style = dashed, label="0"];
7->8 [style = bold, label=""];
23->0 [style = bold, label=""];
1->7 [style = bold, label=""];
0->15 [style = bold, label=""];
3->0 [style = bold, label=""];
12->13 [style = bold, label=""];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
20->16 [style = bold, label=""];
14->23 [style = bold, label=""];
7->19 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
18->21 [style = solid, label="result"];
15->20 [style = bold, label=""];
5->1 [style = solid, label="result"];
8->4 [style = solid, label="result_31"];
9->5 [style = bold, label=""];
7->12 [style = dashed, label="0"];
4->14 [style = dashed, label="0"];
5->11 [style = bold, label=""];
5->11 [style = solid, label="result"];
8->4 [style = bold, label=""];
18->21 [style = bold, label=""];
22->14 [style = bold, label=""];
4->10 [style = dashed, label="0"];
19->22 [style = bold, label=""];
17->18 [style = bold, label=""];
}
