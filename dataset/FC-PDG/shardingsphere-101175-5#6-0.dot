digraph {
15 [style = filled, label = "assertThat(actual.executeBatch(sqlStatementContext),is(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16e9081))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertExecuteBatchForSinglePreparedStatementFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "PreparedStatement preparedStatement = getPreparedStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "verify(preparedStatement1).executeBatch()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(actual.executeBatch(sqlStatementContext),is(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16e903c))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(preparedStatement).executeBatch()@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "setExecuteGroups(Collections.singletonList(preparedStatement))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SQLException ex = new SQLException(\"\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "when(preparedStatement.executeBatch()).thenThrow(ex)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "PreparedStatement preparedStatement1 = getPreparedStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertExecuteBatchForMultiplePreparedStatementsFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "setExecuteGroups(Arrays.asList(preparedStatement1,preparedStatement2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertExecuteBatchForSinglePreparedStatementFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(preparedStatement2).executeBatch()@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "PreparedStatement preparedStatement2 = getPreparedStatement()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SQLException exp = new SQLException(\"\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(preparedStatement2.executeBatch()).thenThrow(exp)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(preparedStatement1.executeBatch()).thenThrow(exp)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "SQLException exp = new SQLException(\"\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11->16 [style = bold, label=""];
2->10 [style = solid, label="exp"];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
13->18 [style = solid, label="preparedStatement1"];
8->9 [style = solid, label="ex"];
14->18 [style = solid, label="preparedStatement2"];
9->4 [style = bold, label=""];
18->15 [style = bold, label=""];
1->3 [style = bold, label=""];
0->11 [style = dashed, label="0"];
1->4 [style = solid, label="preparedStatement"];
2->10 [style = bold, label=""];
2->4 [style = bold, label=""];
2->10 [style = dashed, label="0"];
4->12 [style = dashed, label="0"];
1->13 [style = dashed, label="0"];
6->1 [style = bold, label=""];
15->11 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
2->12 [style = solid, label="exp"];
2->9 [style = dashed, label="0"];
10->12 [style = bold, label=""];
3->2 [style = solid, label="exp"];
12->18 [style = bold, label=""];
8->9 [style = bold, label=""];
3->8 [style = dashed, label="0"];
14->2 [style = bold, label=""];
17->13 [style = bold, label=""];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
}
