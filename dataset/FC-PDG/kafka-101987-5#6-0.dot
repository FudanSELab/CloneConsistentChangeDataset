digraph {
9 [style = filled, label = "final DeleteRecordsResult deleteRecordsResult = new DeleteRecordsResult(Collections.singletonMap(t1p1,(KafkaFuture<DeletedRecords>)futureDeletedRecords))@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expect(active.recordsToDelete()).andReturn(Collections.singletonMap(t1p1,5L)).times(2)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "expect(activeTaskCreator.createTasks(anyObject(),eq(taskId00Assignment))).andReturn(singletonList(task00)).anyTimes()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "shouldNotSendPurgeDataIfPreviousNotDone['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "futureDeletedRecords.complete(null)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "taskManager.maybePurgeCommittedRecords()@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "shouldSendPurgeData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertThat(task00.state(),is(Task.State.RUNNING))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertThat(taskManager.checkForCompletedRestoration(),is(true))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "expect(adminClient.deleteRecords(singletonMap(t1p1,RecordsToDelete.beforeOffset(5L)))).andReturn(new DeleteRecordsResult(singletonMap(t1p1,completedFuture())))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "final KafkaFuture<DeletedRecords> futureDeletedRecords = new KafkaFutureImpl<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "taskManager.handleAssignment(taskId00Assignment,emptyMap())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "taskManager.maybePurgeCommitedRecords()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(active,adminClient)@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final StateMachineTask task00 = new StateMachineTask(taskId00,taskId00Partitions,true){@Override public Map<TopicPartition,Long> purgableOffsets(){return purgableOffsets}}@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "final Map<TopicPartition,Long> purgableOffsets = new HashMap<>()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "taskManager.maybePurgeCommittedRecords()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "verify(adminClient)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "taskManager.maybePurgeCommitedRecords()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Map<TopicPartition,RecordsToDelete> recordsToDelete = Collections.singletonMap(t1p1,RecordsToDelete.beforeOffset(5L))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "replay()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "expectRestoreToBeCompleted(consumer,changeLogReader)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "shouldSendPurgeData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "purgableOffsets.put(t1p1,5L)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "expect(adminClient.deleteRecords(recordsToDelete)).andReturn(deleteRecordsResult).times(2)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "purgableOffsets.put(t1p1,17L)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "replay(adminClient)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "verify(active,adminClient)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "expect(adminClient.deleteRecords(recordsToDelete)).andReturn(deleteRecordsResult).once()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "replay(activeTaskCreator,consumer,changeLogReader)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "final KafkaFutureImpl<DeletedRecords> futureDeletedRecords = new KafkaFutureImpl<>()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "resetToStrict(adminClient)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "expect(active.recordsToDelete()).andReturn(Collections.singletonMap(t1p1,5L)).once()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "expect(adminClient.deleteRecords(singletonMap(t1p1,RecordsToDelete.beforeOffset(17L)))).andReturn(new DeleteRecordsResult(singletonMap(t1p1,completedFuture())))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "final DeleteRecordsResult deleteRecordsResult = new DeleteRecordsResult(Collections.singletonMap(t1p1,futureDeletedRecords))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->16 [style = bold, label=""];
14->24 [style = bold, label=""];
7->31 [style = dashed, label="0"];
23->27 [style = bold, label=""];
28->20 [style = bold, label=""];
9->2 [style = bold, label=""];
0->6 [style = bold, label=""];
12->15 [style = bold, label=""];
25->18 [style = bold, label=""];
1->3 [style = bold, label=""];
30->32 [style = bold, label=""];
34->31 [style = bold, label=""];
16->17 [style = bold, label=""];
7->9 [style = solid, label="futureDeletedRecords"];
8->21 [style = dashed, label="0"];
7->8 [style = bold, label=""];
27->22 [style = bold, label=""];
10->7 [style = bold, label=""];
17->23 [style = bold, label=""];
26->11 [style = bold, label=""];
18->28 [style = bold, label=""];
3->0 [style = bold, label=""];
21->26 [style = bold, label=""];
29->33 [style = bold, label=""];
9->29 [style = dashed, label="0"];
19->13 [style = bold, label=""];
24->25 [style = bold, label=""];
32->1 [style = bold, label=""];
5->4 [style = bold, label=""];
20->12 [style = bold, label=""];
8->9 [style = bold, label=""];
33->30 [style = bold, label=""];
31->29 [style = solid, label="futureDeletedRecords"];
4->1 [style = bold, label=""];
22->14 [style = bold, label=""];
13->21 [style = bold, label=""];
31->8 [style = bold, label=""];
8->29 [style = bold, label=""];
16->17 [style = solid, label="purgableOffsets"];
2->5 [style = bold, label=""];
}
