digraph {
9 [style = filled, label = "postProcessBeforeInitialization()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(wasCalled(beans,\"one\")).isFalse()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "postProcessAfterShouldCallInterfaceCustomizers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(wasCalled(beans,\"all\")).isTrue()@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "addMockBeans(beans)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(wasCalled(beans,\"two\")).isFalse()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "postProcessAfterShouldCallInterfaceCustomizers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(wasCalled(beans,\"one\")).isTrue()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "postProcessBeforeInitialization()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<String,Object> beans = addInterfaceBeans()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "postProcessAfterWhenWebServerFactoryOneShouldCallInterfaceCustomizers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
8->1 [style = bold, label=""];
6->3 [style = bold, label=""];
4->1 [style = bold, label=""];
7->1 [style = bold, label=""];
0->9 [style = dashed, label="0"];
9->10 [style = bold, label=""];
5->0 [style = bold, label=""];
5->9 [style = bold, label=""];
2->6 [style = bold, label=""];
10->6 [style = bold, label=""];
1->5 [style = solid, label="beans"];
2->10 [style = dashed, label="0"];
0->2 [style = bold, label=""];
}
