digraph {
66 [style = filled, label = "Assert.assertNotNull(lsnr.exists(\"/foo\",w1))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "expected.add(EventType.NodeChildrenChanged)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testGetChildrenSync['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo\",true))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo/bar\",w3))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertNotNull(lsnr.exists(\"/foo\",true))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "w3.verify(e2)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "KeeperException e@@@20@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "w2.verify(e2)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo/bar\",true))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertNotNull(lsnr.getChildren(\"/foo/bar\",true))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "lsnr.getChildren(\"/foo\",true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "lsnr.getChildren(\"/foo\",true)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo/bar\",true))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "SimpleWatcher w2 = new SimpleWatcher(null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo/bar\",w2))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(\"/foo/bar\",e.getPath())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo/bar\",w3))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "w4.verify(e2)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(\"/foo/bar\",e.getPath())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expected.add(EventType.NodeChildrenChanged)@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "e2.clear()@@@56@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "client.delete(\"/foo/bar\",-1)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "expected.clear()@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "client.delete(\"/foo\",-1)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "e2.add(EventType.NodeDeleted)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expected.add(EventType.NodeDeleted)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "w1.verify(expected)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "fail()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Assert.assertEquals(KeeperException.Code.NONODE,e.code())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo/bar\",w4))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo\",w1))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "KeeperException e@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "fail()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo/bar\",w4))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(\"/foo\",e.getPath())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "Assert.assertNotNull(lsnr.exists(\"/foo\",true))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo/bar\",w2))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "List<EventType> e2 = new ArrayList<EventType>()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "SimpleWatcher w4 = new SimpleWatcher(null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "lsnr_dwatch.verify(expected)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.fail()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "client.create(\"/foo\",\"parent\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "SimpleWatcher w3 = new SimpleWatcher(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "expected.add(EventType.NodeDeleted)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "Assert.assertEquals(\"/foo\",e.getPath())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertNotNull(lsnr.getChildren(\"/foo\",true))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "client.delete(\"/foo/bar\",-1)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertNotNull(lsnr.getChildren(\"/foo\",true))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo/bar\",w2))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo/bar\",w4))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(KeeperException.Code.NONODE,e.code())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(KeeperException.Code.NONODE,e.code())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "client.create(\"/foo\",\"parent\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(KeeperException.Code.NONODE,e.code())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertNotNull(lsnr.getChildren(\"/foo/bar\",true))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "client.setData(\"/foo/bar\",\"child\".getBytes(),-1)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.fail()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(KeeperException.Code.NONODE,e.code())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "KeeperException e@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertNotNull(lsnr.exists(\"/foo\",true))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "Assert.assertNotNull(lsnr.exists(\"/foo\",w1))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "testGetChildrenSyncWObj['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "lsnr.getChildren(\"/foo/bar\",true)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.setData(\"/foo\",\"parent\".getBytes(),-1)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo\",true))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "Assert.assertNotNull(lsnr.getChildren(\"/foo\",w1))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "Assert.fail()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "client.create(\"/foo/bar\",\"child\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "KeeperException e@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(KeeperException.Code.NONODE,e.code())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "testGetChildrenSync['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "SimpleWatcher w1 = new SimpleWatcher(null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "expected.add(EventType.NodeChildrenChanged)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->28 [style = dotted, label="true"];
51->58 [style = solid, label="w1"];
31->9 [style = bold, label=""];
1->27 [style = dashed, label="0"];
69->9 [style = bold, label=""];
19->11 [style = bold, label=""];
21->37 [style = dashed, label="0"];
7->52 [style = bold, label=""];
30->18 [style = bold, label=""];
4->33 [style = dashed, label="0"];
70->44 [style = bold, label=""];
9->26 [style = bold, label=""];
19->34 [style = dashed, label="0"];
71->67 [style = bold, label=""];
0->14 [style = bold, label=""];
51->61 [style = bold, label=""];
20->71 [style = dashed, label="0"];
20->48 [style = bold, label=""];
66->50 [style = bold, label=""];
11->0 [style = dotted, label="true"];
29->14 [style = bold, label=""];
4->24 [style = dotted, label="true"];
53->60 [style = bold, label=""];
16->9 [style = bold, label=""];
17->20 [style = bold, label=""];
6->47 [style = dashed, label="0"];
46->43 [style = solid, label="e2"];
8->28 [style = bold, label=""];
21->19 [style = bold, label=""];
55->59 [style = bold, label=""];
63->51 [style = bold, label=""];
38->11 [style = bold, label=""];
50->70 [style = bold, label=""];
26->1 [style = bold, label=""];
0->68 [style = bold, label=""];
3->38 [style = dashed, label="0"];
23->21 [style = dotted, label="true"];
3->11 [style = bold, label=""];
52->73 [style = bold, label=""];
10->31 [style = dashed, label="0"];
15->29 [style = dashed, label="0"];
23->19 [style = dotted, label="true"];
5->17 [style = bold, label=""];
39->72 [style = bold, label=""];
26->27 [style = bold, label=""];
36->30 [style = bold, label=""];
23->37 [style = bold, label=""];
8->12 [style = dotted, label="true"];
73->55 [style = bold, label=""];
72->71 [style = bold, label=""];
53->54 [style = solid, label="w3"];
46->19 [style = bold, label=""];
8->29 [style = dotted, label="true"];
57->65 [style = bold, label=""];
46->57 [style = solid, label="e2"];
11->68 [style = dotted, label="true"];
13->18 [style = bold, label=""];
60->42 [style = solid, label="w4"];
14->4 [style = bold, label=""];
28->29 [style = bold, label=""];
44->54 [style = bold, label=""];
4->24 [style = bold, label=""];
22->2 [style = bold, label=""];
61->73 [style = solid, label="w2"];
45->15 [style = bold, label=""];
15->14 [style = bold, label=""];
47->40 [style = bold, label=""];
2->3 [style = bold, label=""];
65->41 [style = bold, label=""];
35->2 [style = bold, label=""];
8->15 [style = dotted, label="true"];
32->14 [style = bold, label=""];
11->32 [style = bold, label=""];
13->70 [style = dashed, label="0"];
56->66 [style = bold, label=""];
59->5 [style = bold, label=""];
1->7 [style = bold, label=""];
68->15 [style = bold, label=""];
46->65 [style = solid, label="e2"];
54->42 [style = bold, label=""];
10->52 [style = dashed, label="0"];
58->1 [style = bold, label=""];
19->45 [style = bold, label=""];
40->39 [style = bold, label=""];
18->6 [style = bold, label=""];
33->24 [style = bold, label=""];
16->31 [style = bold, label=""];
25->5 [style = bold, label=""];
10->9 [style = bold, label=""];
42->64 [style = bold, label=""];
61->44 [style = solid, label="w2"];
51->48 [style = solid, label="w1"];
67->43 [style = bold, label=""];
41->62 [style = bold, label=""];
8->12 [style = bold, label=""];
61->52 [style = solid, label="w2"];
7->13 [style = bold, label=""];
26->58 [style = bold, label=""];
27->36 [style = bold, label=""];
48->56 [style = bold, label=""];
43->57 [style = bold, label=""];
16->10 [style = bold, label=""];
15->69 [style = bold, label=""];
51->66 [style = solid, label="w1"];
0->32 [style = dashed, label="0"];
12->15 [style = bold, label=""];
60->46 [style = bold, label=""];
34->11 [style = bold, label=""];
14->33 [style = bold, label=""];
49->47 [style = bold, label=""];
2->38 [style = bold, label=""];
23->37 [style = dotted, label="true"];
60->59 [style = solid, label="w4"];
24->16 [style = bold, label=""];
61->53 [style = bold, label=""];
11->0 [style = bold, label=""];
23->21 [style = bold, label=""];
12->28 [style = dashed, label="0"];
37->34 [style = bold, label=""];
60->64 [style = solid, label="w4"];
64->49 [style = bold, label=""];
4->16 [style = dotted, label="true"];
53->55 [style = solid, label="w3"];
23->34 [style = dotted, label="true"];
13->30 [style = dashed, label="0"];
7->36 [style = dashed, label="0"];
6->25 [style = bold, label=""];
51->70 [style = solid, label="w1"];
}
