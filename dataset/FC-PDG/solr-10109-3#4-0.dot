digraph {
10 [style = filled, label = "Tuple leftTuple@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assignComparator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "comparator = new ComparatorLambda(){@Override public int compare(Tuple leftTuple,Tuple rightTuple){Comparable leftComp = (Comparable)leftTuple.get(leftFieldName)Comparable rightComp = (Comparable)rightTuple.get(rightFieldName)if (leftComp == rightComp) {return 0}if (null == leftComp) {return -1}if (null == rightComp) {return 1}return leftComp.compareTo(rightComp)}}@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return 0 == leftComp.compareTo(rightComp)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "leftComp == rightComp@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ComparatorOrder.DESCENDING == order@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "null == leftComp || null == rightComp@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Comparable rightComp = (Comparable)rightTuple.get(rightFieldName)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assignComparator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Tuple rightTuple@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return true@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "test['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "comparator = new ComparatorLambda(){@Override public int compare(Tuple leftTuple,Tuple rightTuple){Comparable leftComp = (Comparable)leftTuple.get(leftFieldName)Comparable rightComp = (Comparable)rightTuple.get(rightFieldName)if (leftComp == rightComp) {return 0}if (null == leftComp) {return 1}if (null == rightComp) {return -1}return rightComp.compareTo(leftComp)}}@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return false@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Comparable leftComp = (Comparable)leftTuple.get(leftFieldName)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->5 [style = bold, label=""];
3->2 [style = dotted, label="false"];
13->9 [style = solid, label="rightComp"];
11->14 [style = solid, label="leftComp"];
11->5 [style = solid, label="leftComp"];
3->2 [style = bold, label=""];
7->8 [style = dotted, label="true"];
7->10 [style = dotted, label="true"];
14->12 [style = bold, label=""];
5->9 [style = bold, label=""];
7->11 [style = bold, label=""];
14->12 [style = dotted, label="true"];
0->13 [style = dashed, label="0"];
13->5 [style = solid, label="rightComp"];
6->9 [style = bold, label=""];
3->0 [style = dotted, label="true"];
13->14 [style = solid, label="rightComp"];
5->6 [style = dotted, label="true"];
12->5 [style = bold, label=""];
1->3 [style = bold, label=""];
3->0 [style = bold, label=""];
11->13 [style = bold, label=""];
13->14 [style = bold, label=""];
4->3 [style = bold, label=""];
5->6 [style = bold, label=""];
}
