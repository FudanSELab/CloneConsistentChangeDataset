digraph {
3 [style = filled, label = "verify(cluster).diagnostics()@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat((List<Map<String,Object>>)health.getDetails().get(\"endpoints\")).hasSize(1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Health health = healthIndicator.health().block()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertThat((List<Map<String,Object>>)health.getDetails().get(\"endpoints\")).hasSize(2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Cluster cluster = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(health.getDetails()).containsEntry(\"sdk\",\"test-sdk\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "couchbaseClusterIsUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "given(cluster.diagnostics()).willReturn(diagnostics)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "couchbaseClusterIsDown['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "couchbaseClusterIsDown['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(health.getDetails()).containsKey(\"endpoints\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DiagnosticsReport diagnostics = new DiagnosticsReport(endpoints,\"test-sdk\",\"test-id\",null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CouchbaseReactiveHealthIndicator healthIndicator = new CouchbaseReactiveHealthIndicator(cluster)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Health health = healthIndicator.health()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "CouchbaseHealthIndicator healthIndicator = new CouchbaseHealthIndicator(cluster)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<EndpointHealth> endpoints = Arrays.asList(new EndpointHealth(ServiceType.BINARY,LifecycleState.CONNECTED,new InetSocketAddress(0),new InetSocketAddress(0),1234,\"endpoint-1\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(health.getStatus()).isEqualTo(Status.DOWN)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<EndpointHealth> endpoints = Arrays.asList(new EndpointHealth(ServiceType.BINARY,LifecycleState.CONNECTED,new InetSocketAddress(0),new InetSocketAddress(0),1234,\"endpoint-1\"),new EndpointHealth(ServiceType.BINARY,LifecycleState.CONNECTING,new InetSocketAddress(0),new InetSocketAddress(0),1234,\"endpoint-2\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Health health = healthIndicator.health().block(Duration.ofSeconds(30))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(health.getStatus()).isEqualTo(Status.UP)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
9->16 [style = dashed, label="0"];
17->7 [style = solid, label="endpoints"];
1->14 [style = dashed, label="0"];
11->15 [style = dashed, label="0"];
2->1 [style = bold, label=""];
10->19 [style = dashed, label="0"];
4->15 [style = bold, label=""];
7->2 [style = solid, label="diagnostics"];
10->3 [style = bold, label=""];
4->11 [style = solid, label="cluster"];
6->19 [style = bold, label=""];
0->7 [style = solid, label="endpoints"];
0->17 [style = dashed, label="0"];
1->9 [style = bold, label=""];
2->13 [style = bold, label=""];
0->7 [style = bold, label=""];
1->13 [style = dashed, label="0"];
17->7 [style = bold, label=""];
4->15 [style = solid, label="cluster"];
15->17 [style = bold, label=""];
11->0 [style = bold, label=""];
5->6 [style = bold, label=""];
18->4 [style = bold, label=""];
12->4 [style = bold, label=""];
7->2 [style = bold, label=""];
6->10 [style = bold, label=""];
2->14 [style = bold, label=""];
7->3 [style = solid, label="diagnostics"];
9->5 [style = bold, label=""];
16->5 [style = bold, label=""];
13->9 [style = bold, label=""];
8->4 [style = bold, label=""];
4->11 [style = bold, label=""];
19->3 [style = bold, label=""];
}
