digraph {
9 [style = filled, label = "shouldStoreDifferentValuesWithOldNull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertSame(oldValue,bufferValue.oldValue())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final byte(( oldValue = {(byte)1}@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final BufferValue bufferValue = new BufferValue(priorValue,oldValue,null,null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final byte(( priorValue = {(byte)0}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final byte(( oldValue = null@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "shouldStoreDifferentValuesWithPriorNull['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertNull(bufferValue.priorValue())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertNull(bufferValue.oldValue())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "shouldStoreDifferentValuesWithPriorNull['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNotEquals(bufferValue.priorValue(),bufferValue.oldValue())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final byte(( priorValue = null@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertSame(priorValue,bufferValue.priorValue())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->4 [style = bold, label=""];
3->2 [style = dashed, label="0"];
5->12 [style = dashed, label="0"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
11->12 [style = solid, label="oldValue"];
10->2 [style = solid, label="priorValue"];
9->10 [style = bold, label=""];
4->7 [style = solid, label="priorValue"];
11->8 [style = solid, label="oldValue"];
2->12 [style = bold, label=""];
4->0 [style = bold, label=""];
4->2 [style = solid, label="priorValue"];
6->4 [style = bold, label=""];
3->5 [style = bold, label=""];
0->5 [style = solid, label="oldValue"];
4->3 [style = solid, label="priorValue"];
8->2 [style = bold, label=""];
0->7 [style = solid, label="oldValue"];
10->8 [style = solid, label="priorValue"];
5->7 [style = bold, label=""];
11->8 [style = bold, label=""];
0->2 [style = solid, label="oldValue"];
4->10 [style = dashed, label="0"];
10->11 [style = bold, label=""];
}
