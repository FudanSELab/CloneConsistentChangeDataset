digraph {
10 [style = filled, label = "shouldUseDefaultSerdes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final boolean suppressedRecords = waitForAnyRecord(outputSuppressed)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "shouldInheritSerdes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final String input = \"input\" + testId@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final Properties streamsConfig = getStreamsConfig(appId)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String appId = getClass().getSimpleName().toLowerCase(Locale.getDefault()) + testId@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "streamsConfig.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG,)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "valueCounts.toStream().to(outputRaw)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final KTable<String,String> valueCounts = inputStream.groupByKey().aggregate(null,null)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(suppressedRecords,is(true))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final boolean rawRecords = waitForAnyRecord(outputRaw)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final String testId = \"-shouldInheritSerdes\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final String outputSuppressed = \"output-suppressed\" + testId@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final KStream<String,String> inputStream = builder.stream(input)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "streamsConfig.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG,)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "produceSynchronously(input,asList(new KeyValueTimestamp<>(\"k1\",\"v1\",scaledTime(0L)),new KeyValueTimestamp<>(\"k1\",\"v2\",scaledTime(1L)),new KeyValueTimestamp<>(\"k2\",\"v1\",scaledTime(2L)),new KeyValueTimestamp<>(\"x\",\"x\",scaledTime(3L))))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final KTable<String,Long> valueCounts = inputStream.groupByKey().count()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "shouldUseDefaultSerdes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final KafkaStreams driver = IntegrationTestUtils.getStartedStreams(streamsConfig,builder,true)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String outputRaw = \"output-raw\" + testId@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "cleanStateBeforeTest(CLUSTER,input,outputRaw,outputSuppressed)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(rawRecords,Matchers.is(true))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "{driver.close()cleanStateAfterTest(CLUSTER,driver)}@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "valueCounts.suppress(untilTimeLimit(ofMillis(MAX_VALUE),maxRecords(1L).emitEarlyWhenFull())).toStream().to(outputSuppressed)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
20->2 [style = solid, label="streamsConfig"];
18->3 [style = bold, label=""];
0->12 [style = bold, label=""];
12->4 [style = solid, label="outputRaw"];
10->17 [style = bold, label=""];
2->16 [style = solid, label="driver"];
8->5 [style = solid, label="input"];
0->13 [style = solid, label="outputSuppressed"];
9->23 [style = dashed, label="0"];
6->21 [style = solid, label="rawRecords"];
1->9 [style = bold, label=""];
15->20 [style = solid, label="appId"];
0->14 [style = solid, label="outputSuppressed"];
1->23 [style = bold, label=""];
8->1 [style = solid, label="input"];
23->14 [style = bold, label=""];
8->0 [style = bold, label=""];
20->18 [style = bold, label=""];
12->13 [style = bold, label=""];
19->1 [style = bold, label=""];
13->19 [style = bold, label=""];
14->4 [style = bold, label=""];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
17->8 [style = solid, label="testId"];
21->11 [style = bold, label=""];
17->15 [style = solid, label="testId"];
12->13 [style = solid, label="outputRaw"];
24->17 [style = bold, label=""];
4->20 [style = bold, label=""];
17->15 [style = bold, label=""];
8->13 [style = solid, label="input"];
9->14 [style = bold, label=""];
7->21 [style = bold, label=""];
17->12 [style = solid, label="testId"];
22->17 [style = bold, label=""];
6->7 [style = bold, label=""];
12->6 [style = solid, label="outputRaw"];
17->0 [style = solid, label="testId"];
15->8 [style = bold, label=""];
19->2 [style = solid, label="builder"];
2->5 [style = bold, label=""];
0->7 [style = solid, label="outputSuppressed"];
7->11 [style = solid, label="suppressedRecords"];
}
