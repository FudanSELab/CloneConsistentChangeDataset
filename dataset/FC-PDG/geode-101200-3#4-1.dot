digraph {
3 [style = filled, label = "assertThat(javaBin).as(\"JAVA_HOME/bin/java exists\").exists()@@@6@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String java = isWindows()? \"java.exe\": \"java\"@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "setUpJava['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(javaBin).as(\"JAVA_HOME/bin/\" + java + \" exists\").exists()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "javaBin = Paths.get(javaHome,\"bin\",\"java\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "setUpJava['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "javaBin = Paths.get(javaHome,\"bin\",java)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(javaHome).as(\"java.home is not null\").isNotNull()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String javaHome = System.getProperty(\"java.home\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "setUpJava['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->3 [style = bold, label=""];
0->7 [style = solid, label="javaHome"];
6->7 [style = solid, label="java"];
9->0 [style = bold, label=""];
6->7 [style = bold, label=""];
5->0 [style = bold, label=""];
7->8 [style = bold, label=""];
2->6 [style = bold, label=""];
2->1 [style = bold, label=""];
0->1 [style = solid, label="javaHome"];
4->0 [style = bold, label=""];
0->2 [style = bold, label=""];
}
