digraph {
10 [style = filled, label = "List<RefCountChangeInfo> info = rchi.getRefCountInfo(address)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "rchi = getTrueFalse()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "PowerMockito.verifyStatic()@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "doGetRefCountInfoWithTrackRefsTrueAndTrackFreesFalse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RefCountChangeInfo rcci = list.get(0)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "doRefCountChangedAfterGetRefCountInfoWithTrackRefsTrueAndTrackFreesTrue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "list = rchi.peekRefCountInfo(address)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MemoryAllocatorImpl.debugLog(\"refCount deced after orphan detected for @1000\",true)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "PowerMockito.verifyStatic()@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "list = rchi.peekRefCountInfo(address)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "decRefCount = true@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "PowerMockito.verifyStatic()@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(1,list.size())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(1,rcci.getUseCount())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "rchi.freeRefCountInfo(address)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(1,list.size())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "rcci = list.get(0)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(0,list.size())@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(1,rcci.getUseCount())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "MemoryAllocatorImpl.debugLog(\"refCount inced after orphan detected for @1000\",true)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "doRefCountChangedAfterGetRefCountInfoWithTrackRefsTrueAndTrackFreesTrue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "rchi = getTrueTrue()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "long address = (long)0x1000@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "boolean decRefCount = false@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<RefCountChangeInfo> list = null@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "rcci = info.get(0)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "PowerMockito.spy()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "PowerMockito.verifyStatic()@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(1,info.size())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int rc = 1@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(0,rcci.getUseCount())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "sor.mute()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "PowerMockito.verifyStatic()@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "MemoryAllocatorImpl.debugLog(\"freed after orphan detected for @1000\",true)@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "list = rchi.peekRefCountInfo(address)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "PowerMockito.verifyStatic()@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16->15 [style = bold, label=""];
15->2 [style = bold, label=""];
10->20 [style = bold, label=""];
30->22 [style = bold, label=""];
27->32 [style = bold, label=""];
23->13 [style = solid, label="address"];
21->0 [style = bold, label=""];
28->34 [style = bold, label=""];
3->24 [style = bold, label=""];
5->33 [style = bold, label=""];
4->38 [style = dashed, label="0"];
26->5 [style = bold, label=""];
11->34 [style = dashed, label="0"];
33->6 [style = bold, label=""];
28->11 [style = bold, label=""];
25->18 [style = bold, label=""];
1->24 [style = solid, label="decRefCount"];
14->10 [style = bold, label=""];
23->7 [style = solid, label="address"];
36->32 [style = bold, label=""];
9->17 [style = bold, label=""];
38->23 [style = bold, label=""];
22->28 [style = bold, label=""];
23->10 [style = solid, label="address"];
7->31 [style = bold, label=""];
6->37 [style = dashed, label="0"];
27->36 [style = dashed, label="0"];
23->17 [style = solid, label="address"];
35->4 [style = bold, label=""];
19->25 [style = bold, label=""];
37->9 [style = bold, label=""];
0->7 [style = bold, label=""];
23->16 [style = solid, label="address"];
20->21 [style = bold, label=""];
17->36 [style = bold, label=""];
13->29 [style = bold, label=""];
1->18 [style = solid, label="decRefCount"];
1->28 [style = solid, label="decRefCount"];
12->18 [style = solid, label="rc"];
29->19 [style = bold, label=""];
12->33 [style = solid, label="rc"];
34->26 [style = bold, label=""];
5->33 [style = solid, label="decRefCount"];
23->24 [style = solid, label="address"];
2->14 [style = bold, label=""];
31->30 [style = bold, label=""];
12->24 [style = solid, label="rc"];
1->12 [style = bold, label=""];
39->38 [style = bold, label=""];
23->1 [style = bold, label=""];
12->3 [style = bold, label=""];
23->28 [style = solid, label="address"];
23->18 [style = solid, label="address"];
8->4 [style = bold, label=""];
17->27 [style = bold, label=""];
6->9 [style = bold, label=""];
33->37 [style = bold, label=""];
12->28 [style = solid, label="rc"];
4->23 [style = bold, label=""];
23->33 [style = solid, label="address"];
11->26 [style = bold, label=""];
24->13 [style = bold, label=""];
18->16 [style = bold, label=""];
}
