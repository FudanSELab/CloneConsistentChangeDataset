digraph {
7 [style = filled, label = "assertNotNull(singularField)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "return builder.build().toByteArray()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testParseUnknownEnumValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Descriptors.FieldDescriptor repeatedField = TestAllTypes.getDescriptor().findFieldByName(\"repeated_nested_enum\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "builder.addField(singularField.getNumber(),UnknownFieldSet.Field.newBuilder().addVarint(TestAllTypes.NestedEnum.BAR.getNumber()).addVarint(1901).build())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "UnknownFieldSet.Builder builder = UnknownFieldSet.newBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "{TestAllTypes message = TestAllTypes.parseFrom(data)assertThat(message.getOptionalNestedEnum()).isEqualTo(TestAllTypes.NestedEnum.BAR)assertThat(message.getRepeatedNestedEnumList()).containsExactly(TestAllTypes.NestedEnum.FOO,TestAllTypes.NestedEnum.BAZ).inOrder()assertThat(message.getUnknownFields().getField(singularField.getNumber()).getVarintList()).containsExactly(5L)assertThat(message.getUnknownFields().getField(repeatedField.getNumber()).getVarintList()).containsExactly(4L,6L).inOrder()}@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "builder.addField(repeatedField.getNumber(),UnknownFieldSet.Field.newBuilder().addVarint(TestAllTypes.NestedEnum.FOO.getNumber()).addVarint(1902).addVarint(TestAllTypes.NestedEnum.BAZ.getNumber()).addVarint(1903).build())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(repeatedField).isNotNull()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testParseUnknownEnumValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertNotNull(repeatedField)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertThat(singularField).isNotNull()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "{TestAllExtensions message = TestAllExtensions.parseFrom(data,TestUtil.getExtensionRegistry())assertThat(message.getExtension(UnittestProto.optionalNestedEnumExtension)).isEqualTo(TestAllTypes.NestedEnum.BAR)assertThat(message.getExtension(UnittestProto.repeatedNestedEnumExtension)).containsExactly(TestAllTypes.NestedEnum.FOO,TestAllTypes.NestedEnum.BAZ).inOrder()assertThat(message.getUnknownFields().getField(singularField.getNumber()).getVarintList()).containsExactly(5L)assertThat(message.getUnknownFields().getField(repeatedField.getNumber()).getVarintList()).containsExactly(4L,6L).inOrder()}@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Descriptors.FieldDescriptor singularField = TestAllTypes.getDescriptor().findFieldByName(\"optional_nested_enum\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "buildPayloadWithUnknownEnumValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ByteString data = UnknownFieldSet.newBuilder().addField(singularField.getNumber(),UnknownFieldSet.Field.newBuilder().addVarint(TestAllTypes.NestedEnum.BAR.getNumber()).addVarint(5).build()).addField(repeatedField.getNumber(),UnknownFieldSet.Field.newBuilder().addVarint(TestAllTypes.NestedEnum.FOO.getNumber()).addVarint(4).addVarint(TestAllTypes.NestedEnum.BAZ.getNumber()).addVarint(6).build()).build().toByteString()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->14 [style = bold, label=""];
4->6 [style = bold, label=""];
7->8 [style = dashed, label="0"];
4->7 [style = solid, label="singularField"];
3->4 [style = bold, label=""];
6->2 [style = solid, label="repeatedField"];
12->13 [style = bold, label=""];
5->0 [style = bold, label=""];
5->0 [style = solid, label="data"];
2->9 [style = dashed, label="0"];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
6->8 [style = bold, label=""];
8->9 [style = bold, label=""];
10->4 [style = bold, label=""];
9->5 [style = bold, label=""];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
5->1 [style = solid, label="data"];
6->7 [style = bold, label=""];
2->5 [style = bold, label=""];
}
