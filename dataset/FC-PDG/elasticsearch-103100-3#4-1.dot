digraph {
18 [style = filled, label = "assertThat(strategy.getDistErrPct(),equalTo(0.5))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(strategy.getGrid(),instanceOf())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testGeohashConfiguration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertThat(strategy.getGrid().getMaxLevels(),equalTo(6))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(strategy.getGrid().getMaxLevels(),equalTo(4))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(strategy.isPointsOnly(),equalTo(true))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertFieldWarnings(\"tree\",\"tree_levels\",\"distance_error_pct\",\"points_only\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(\"tree\",\"geohash\").field(\"tree_levels\",\"4\").field(\"distance_error_pct\",\"0.1\").endObject().endObject().endObject().endObject())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(strategy.getGrid(),instanceOf())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testQuadtreeConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "LegacyGeoShapeFieldMapper geoShapeFieldMapper = (LegacyGeoShapeFieldMapper)fieldMapper@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Mapper fieldMapper = mapper.mappers().getMapper(\"field\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertFieldWarnings(\"tree\",\"tree_levels\",\"distance_error_pct\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "PrefixTreeStrategy strategy = geoShapeFieldMapper.fieldType().defaultPrefixTreeStrategy()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFieldWarnings(\"tree\",\"tree_levels\",\"distance_error_pct\",\"strategy\")@@@11@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(\"tree\",\"quadtree\").field(\"tree_levels\",\"6\").field(\"distance_error_pct\",\"0.5\").field(\"points_only\",true).endObject().endObject().endObject().endObject())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testGeohashConfiguration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
14->12 [style = solid, label="fieldMapper"];
3->1 [style = bold, label=""];
11->14 [style = bold, label=""];
20->9 [style = bold, label=""];
6->18 [style = bold, label=""];
21->15 [style = bold, label=""];
19->20 [style = bold, label=""];
3->18 [style = dashed, label="0"];
8->20 [style = dashed, label="0"];
7->0 [style = bold, label=""];
1->21 [style = dashed, label="0"];
16->17 [style = bold, label=""];
9->7 [style = bold, label=""];
15->16 [style = bold, label=""];
2->4 [style = bold, label=""];
12->0 [style = bold, label=""];
10->6 [style = bold, label=""];
13->11 [style = bold, label=""];
2->15 [style = dashed, label="0"];
0->10 [style = bold, label=""];
14->12 [style = bold, label=""];
4->2 [style = dashed, label="0"];
8->9 [style = bold, label=""];
7->0 [style = solid, label="fieldMapper"];
7->10 [style = solid, label="fieldMapper"];
1->2 [style = bold, label=""];
18->21 [style = bold, label=""];
8->9 [style = solid, label="mapping"];
20->9 [style = solid, label="mapping"];
14->0 [style = solid, label="fieldMapper"];
}
