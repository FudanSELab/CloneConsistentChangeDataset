digraph {
32 [style = filled, label = "assertEquals(new Long(56L),c.getStartValue(\"S2\",\"Task 3\",1))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TaskSeriesCollection c3 = createCollection3()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testGetStartValue2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(new Long(30L),c.getStartValue(\"S1\",\"Task 2\",0))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(null,c.getEndValue(1,0))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(new Long(16L),c.getStartValue(0,0,1))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(200L,c3.getEndValue(0,0))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(new Long(4L),c.getEndValue(0,1))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "assertEquals(new Long(56L),c.getStartValue(1,2,1))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(new Long(6L),c.getEndValue(\"S2\",\"Task 3\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertEquals(new Long(36L),c.getStartValue(0,1,1))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(new Long(350),c3.getEndValue(0,1))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(new Long(3350),c3.getEndValue(1,1))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(350L,c3.getEndValue(0,1))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(new Long(50L),c.getStartValue(\"S2\",\"Task 3\",0))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(new Long(200),c3.getEndValue(0,0))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "testGetEndValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "assertEquals(new Long(50L),c.getStartValue(1,2,0))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testGetEndValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(new Long(33),c3.getStartValue(0,1,1))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(new Long(4L),c.getEndValue(\"S1\",\"Task 2\"))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertEquals(new Long(30L),c.getStartValue(0,1,0))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(new Long(10L),c.getStartValue(0,0,0))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(3350L,c3.getEndValue(1,1))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(4L,c.getEndValue(0,1))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(new Long(16L),c.getStartValue(\"S1\",\"Task 1\",1))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(new Long(11),c3.getStartValue(0,0,0))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TaskSeriesCollection c = createCollection1()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "TaskSeriesCollection c = createCollection2()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(new Long(2L),c.getEndValue(0,0))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(null,c.getEndValue(0,2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(new Long(66),c3.getStartValue(1,1,2))@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(new Long(6L),c.getEndValue(1,2))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertEquals(2L,c.getEndValue(\"S1\",\"Task 1\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "TaskSeriesCollection c3 = createCollection3()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(new Long(10L),c.getStartValue(\"S1\",\"Task 1\",0))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(6L,c.getEndValue(\"S2\",\"Task 3\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertTrue(c3.getStartValue(1,0,0) == null)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(6L,c.getEndValue(1,2))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(new Long(44),c3.getStartValue(1,1,0))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(new Long(22),c3.getStartValue(0,1,0))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(new Long(36L),c.getStartValue(\"S1\",\"Task 2\",1))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(new Long(55),c3.getStartValue(1,1,1))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(2L,c.getEndValue(0,0))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(new Long(2L),c.getEndValue(\"S1\",\"Task 1\"))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertEquals(4L,c.getEndValue(\"S1\",\"Task 2\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(null,c.getEndValue(1,1))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->10 [style = bold, label=""];
1->33 [style = dashed, label="0"];
8->19 [style = dashed, label="0"];
12->20 [style = dashed, label="0"];
7->18 [style = dashed, label="0"];
15->14 [style = bold, label=""];
36->41 [style = bold, label=""];
7->10 [style = bold, label=""];
10->24 [style = bold, label=""];
3->39 [style = dashed, label="0"];
28->38 [style = bold, label=""];
14->22 [style = bold, label=""];
1->3 [style = bold, label=""];
38->27 [style = bold, label=""];
9->17 [style = bold, label=""];
16->25 [style = bold, label=""];
11->12 [style = bold, label=""];
30->32 [style = bold, label=""];
34->31 [style = bold, label=""];
32->34 [style = bold, label=""];
2->9 [style = bold, label=""];
26->43 [style = bold, label=""];
15->44 [style = dashed, label="0"];
11->36 [style = dashed, label="0"];
3->4 [style = bold, label=""];
42->40 [style = bold, label=""];
6->22 [style = dashed, label="0"];
12->41 [style = dashed, label="0"];
43->28 [style = bold, label=""];
13->32 [style = dashed, label="0"];
4->25 [style = dashed, label="0"];
5->1 [style = bold, label=""];
41->30 [style = bold, label=""];
22->18 [style = bold, label=""];
29->33 [style = bold, label=""];
27->46 [style = bold, label=""];
21->20 [style = bold, label=""];
9->31 [style = dashed, label="0"];
19->13 [style = bold, label=""];
18->10 [style = bold, label=""];
33->39 [style = bold, label=""];
31->44 [style = bold, label=""];
6->45 [style = dashed, label="0"];
17->14 [style = bold, label=""];
1->16 [style = bold, label=""];
12->8 [style = bold, label=""];
9->15 [style = bold, label=""];
39->35 [style = bold, label=""];
10->0 [style = bold, label=""];
10->45 [style = bold, label=""];
2->34 [style = dashed, label="0"];
23->1 [style = bold, label=""];
0->24 [style = dashed, label="0"];
15->17 [style = dashed, label="0"];
8->30 [style = dashed, label="0"];
45->26 [style = bold, label=""];
44->37 [style = bold, label=""];
35->36 [style = bold, label=""];
6->7 [style = bold, label=""];
4->11 [style = bold, label=""];
20->19 [style = bold, label=""];
7->26 [style = dashed, label="0"];
4->35 [style = dashed, label="0"];
14->6 [style = bold, label=""];
25->21 [style = bold, label=""];
37->42 [style = bold, label=""];
3->16 [style = dashed, label="0"];
8->13 [style = bold, label=""];
13->2 [style = bold, label=""];
11->21 [style = dashed, label="0"];
}
