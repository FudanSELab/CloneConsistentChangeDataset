digraph {
1 [style = filled, label = "assertThat(changeLogging,instanceOf())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final WindowStore<String,String> store = builder.withLoggingEnabled(Collections.emptyMap()).withCachingEnabled().build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldHaveCachingAndChangeLoggingWhenBothEnabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(store,instanceOf())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final SessionStore<String,String> store = builder.withLoggingEnabled(Collections.emptyMap()).withCachingEnabled().build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(changeLogging.wrappedStore(),CoreMatchers.equalTo(inner))@@@9@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(caching,instanceOf())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final WrappedStateStore changeLogging = (WrappedStateStore)caching.wrapped()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(caching,instanceOf())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final WrappedStateStore caching = (WrappedStateStore)((WrappedStateStore)store).wrapped()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final WrappedStateStore changeLogging = (WrappedStateStore)caching.wrappedStore()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(changeLogging,instanceOf())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(changeLogging.wrapped(),CoreMatchers.equalTo(inner))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "shouldHaveCachingAndChangeLoggingWhenBothEnabled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(store,instanceOf())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final WrappedStateStore caching = (WrappedStateStore)((WrappedStateStore)store).wrappedStore()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldHaveCachingAndChangeLoggingWhenBothEnabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15->13 [style = bold, label=""];
1->8 [style = bold, label=""];
5->0 [style = solid, label="caching"];
10->0 [style = solid, label="caching"];
1->14 [style = dashed, label="0"];
11->4 [style = bold, label=""];
6->11 [style = dashed, label="0"];
0->16 [style = dashed, label="0"];
12->16 [style = bold, label=""];
3->13 [style = dashed, label="0"];
2->8 [style = dashed, label="0"];
7->3 [style = bold, label=""];
4->0 [style = bold, label=""];
4->12 [style = dashed, label="0"];
11->1 [style = solid, label="changeLogging"];
3->10 [style = bold, label=""];
6->4 [style = bold, label=""];
13->12 [style = solid, label="store"];
3->5 [style = bold, label=""];
5->6 [style = bold, label=""];
5->10 [style = dashed, label="0"];
3->4 [style = solid, label="store"];
6->1 [style = solid, label="changeLogging"];
0->1 [style = bold, label=""];
13->5 [style = bold, label=""];
5->16 [style = solid, label="caching"];
9->3 [style = bold, label=""];
16->14 [style = bold, label=""];
1->2 [style = bold, label=""];
14->2 [style = bold, label=""];
6->14 [style = solid, label="changeLogging"];
10->11 [style = bold, label=""];
6->12 [style = bold, label=""];
}
