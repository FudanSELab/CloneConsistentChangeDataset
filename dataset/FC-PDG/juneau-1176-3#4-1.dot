digraph {
7 [style = filled, label = "return Optional.empty()@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "!noMethodEntries@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return Optional.ofNullable(e.value)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "e.matches(m)@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "!noFieldEntries@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Field f@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "fieldEntries@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Method m@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "return Optional.of(e.value)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "!noMethodEntries@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "methodEntries@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "methodEntries@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "FieldEntry<V> e@@@3@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Class<? extends V> ofType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "MethodEntry<V> e@@@3@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Class<? extends V> ofType@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "find['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "e.matches(m)@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "find['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Class<? extends V> ofType@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "find['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return Optional.of(e.value)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "ofType == null || ofType.isInstance(e.value)@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "e.matches(f)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "MethodEntry<V> e@@@3@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11->16 [style = bold, label=""];
4->5 [style = dotted, label="true"];
23->25 [style = bold, label=""];
20->25 [style = dotted, label="true"];
22->19 [style = dotted, label="true"];
22->18 [style = dotted, label="true"];
15->7 [style = bold, label=""];
4->1 [style = dotted, label="true"];
9->2 [style = bold, label=""];
25->23 [style = bold, label=""];
19->25 [style = solid, label="f"];
16->17 [style = dotted, label="true"];
11->12 [style = dotted, label="true"];
20->26 [style = dotted, label="true"];
16->7 [style = bold, label=""];
20->21 [style = dotted, label="true"];
4->2 [style = bold, label=""];
16->17 [style = bold, label=""];
3->6 [style = dotted, label="true"];
9->7 [style = bold, label=""];
25->7 [style = bold, label=""];
20->25 [style = bold, label=""];
12->17 [style = solid, label="m"];
16->10 [style = dotted, label="true"];
6->13 [style = solid, label="ofType"];
3->4 [style = bold, label=""];
4->7 [style = bold, label=""];
8->7 [style = bold, label=""];
17->7 [style = bold, label=""];
6->2 [style = solid, label="m"];
13->17 [style = bold, label=""];
15->17 [style = bold, label=""];
23->24 [style = bold, label=""];
8->2 [style = bold, label=""];
22->20 [style = bold, label=""];
11->6 [style = dotted, label="true"];
13->7 [style = bold, label=""];
24->25 [style = bold, label=""];
9->17 [style = dashed, label="0"];
16->14 [style = dotted, label="true"];
6->19 [style = dashed, label="0"];
9->26 [style = dashed, label="0"];
3->0 [style = dotted, label="true"];
8->9 [style = bold, label=""];
0->8 [style = solid, label="ofType"];
13->15 [style = dotted, label="true"];
18->23 [style = solid, label="ofType"];
17->13 [style = bold, label=""];
13->15 [style = bold, label=""];
8->9 [style = dotted, label="true"];
25->23 [style = dotted, label="true"];
2->7 [style = bold, label=""];
20->7 [style = bold, label=""];
23->7 [style = bold, label=""];
17->13 [style = dotted, label="true"];
24->7 [style = bold, label=""];
23->24 [style = dotted, label="true"];
4->2 [style = dotted, label="true"];
2->8 [style = dotted, label="true"];
2->8 [style = bold, label=""];
}
