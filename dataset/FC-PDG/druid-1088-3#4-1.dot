digraph {
9 [style = filled, label = "testSegmentLoadChecksForPartitionNumber['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(DatasourcesResource.isSegmentLoaded(Collections.singletonList(new ImmutableSegmentLoadInfo(createSegment(interval,\"v1\",1),Sets.newHashSet(createHistoricalServerMetadata(\"a\")))),new SegmentDescriptor(interval,\"v1\",1)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertFalse(DatasourcesResource.isSegmentLoaded(Collections.singletonList(new ImmutableSegmentLoadInfo(createSegment(interval,\"v1\",1),Sets.newHashSet(createHistoricalServerMetadata(\"a\")))),new SegmentDescriptor(interval,\"v1\",2)))@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertFalse(DataSourcesResource.isSegmentLoaded(Collections.singletonList(new ImmutableSegmentLoadInfo(createSegment(interval,\"v1\",2),Sets.newHashSet(createRealtimeServerMetadata(\"a\")))),new SegmentDescriptor(interval,\"v1\",2)))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Interval interval = Intervals.of(\"2011-04-01/2011-04-02\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testSegmentLoadChecksForAssignableServer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Assert.assertTrue(DataSourcesResource.isSegmentLoaded(Collections.singletonList(new ImmutableSegmentLoadInfo(createSegment(interval,\"v1\",2),Sets.newHashSet(createHistoricalServerMetadata(\"a\")))),new SegmentDescriptor(interval,\"v1\",2)))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertTrue(DatasourcesResource.isSegmentLoaded(Collections.singletonList(new ImmutableSegmentLoadInfo(createSegment(interval,\"v1\",2),Sets.newHashSet(createHistoricalServerMetadata(\"a\")))),new SegmentDescriptor(interval,\"v1\",2)))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Assert.assertFalse(DatasourcesResource.isSegmentLoaded(Collections.singletonList(new ImmutableSegmentLoadInfo(createSegment(interval,\"v1\",2),Sets.newHashSet(createRealtimeServerMetadata(\"a\")))),new SegmentDescriptor(interval,\"v1\",2)))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "testSegmentLoadChecksForAssignableServer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
5->3 [style = bold, label=""];
9->3 [style = bold, label=""];
6->4 [style = bold, label=""];
3->6 [style = bold, label=""];
1->4 [style = dashed, label="0"];
1->8 [style = dashed, label="0"];
3->6 [style = solid, label="interval"];
3->8 [style = solid, label="interval"];
3->2 [style = bold, label=""];
3->7 [style = bold, label=""];
7->8 [style = bold, label=""];
3->7 [style = solid, label="interval"];
3->1 [style = solid, label="interval"];
3->4 [style = solid, label="interval"];
3->2 [style = solid, label="interval"];
2->1 [style = bold, label=""];
2->7 [style = dashed, label="0"];
2->6 [style = dashed, label="0"];
}
