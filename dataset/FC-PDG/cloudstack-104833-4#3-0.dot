digraph {
21 [style = filled, label = "Mockito.doCallRealMethod().when(quotaAlertManager).checkAndSendQuotaAlertEmails()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Mockito.verify(alertManager,Mockito.times(1)).sendQuotaAlert(Mockito.any())@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "accounts.get(0).setQuotaBalance(new BigDecimal(99))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<QuotaAccountVO> accounts = new ArrayList<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "acc.setQuotaMinBalance(new BigDecimal(100))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "AccountVO accountVO = new AccountVO()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "acc.setQuotaAlertDate(null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Mockito.lenient().when(accountDao.findById(Mockito.anyLong())).thenReturn(accountVO)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "Mockito.doReturn(true).when(quotaAlertManager).lockAccount(Mockito.anyLong())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Mockito.when(quotaAcc.listAllQuotaAccount()).thenReturn(accounts)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testSendStatement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "Mockito.verify(quotaAlertManager,Mockito.times(0)).sendQuotaAlert(Mockito.any())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "accountVO.setId(2L)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "acc.setQuotaBalance(new BigDecimal(404))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Mockito.lenient().when(quotaAcc.listAllQuotaAccount()).thenReturn(accounts)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "QuotaAccountVO acc = new QuotaAccountVO(2L)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Mockito.lenient().when(quotaUsage.findTotalQuotaUsage(Mockito.anyLong(),Mockito.anyLong(),Mockito.anyInt(),Mockito.any(),Mockito.any())).thenReturn(new BigDecimal(100))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "accountVO.setType(Account.ACCOUNT_TYPE_NORMAL)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "period != null@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "acc.setLastStatementDate(null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "quotaAlertManager.checkAndSendQuotaAlertEmails()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "accounts.add(acc)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "acc.setQuotaBalanceDate(new Date())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Mockito.doNothing().when(quotaAlertManager).sendQuotaAlert(Mockito.any())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "accounts.add(acc)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "quotaAlertManager.checkAndSendQuotaAlertEmails()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "accountVO.setDomainId(1L)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "acc.setQuotaEnforce(0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Mockito.when(quotaAcc.listAllQuotaAccount()).thenReturn(accounts)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "testCheckAndSendQuotaAlertEmails['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Mockito.verify(quotaAlertManager,Mockito.times(1)).sendQuotaAlert(Mockito.any())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "List<QuotaAccountVO> accounts = new ArrayList<>()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testSendStatement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Calendar date = Calendar.getInstance()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Mockito.when(accountDao.findById(Mockito.anyLong())).thenReturn(accountVO)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->31 [style = bold, label=""];
8->5 [style = solid, label="accounts"];
24->12 [style = bold, label=""];
15->10 [style = bold, label=""];
32->21 [style = bold, label=""];
16->8 [style = bold, label=""];
25->22 [style = bold, label=""];
6->20 [style = dashed, label="0"];
13->18 [style = solid, label="accountVO"];
19->20 [style = bold, label=""];
11->4 [style = bold, label=""];
4->15 [style = bold, label=""];
14->5 [style = bold, label=""];
30->27 [style = bold, label=""];
22->29 [style = bold, label=""];
8->14 [style = bold, label=""];
14->19 [style = bold, label=""];
1->18 [style = bold, label=""];
15->10 [style = dotted, label="true"];
21->30 [style = bold, label=""];
29->34 [style = bold, label=""];
18->2 [style = bold, label=""];
10->27 [style = dashed, label="0"];
33->13 [style = bold, label=""];
12->6 [style = solid, label="acc"];
34->11 [style = solid, label="accounts"];
33->24 [style = solid, label="accountVO"];
31->26 [style = bold, label=""];
12->2 [style = bold, label=""];
5->6 [style = bold, label=""];
28->33 [style = bold, label=""];
1->24 [style = bold, label=""];
0->1 [style = bold, label=""];
6->11 [style = bold, label=""];
34->6 [style = bold, label=""];
7->16 [style = bold, label=""];
1->12 [style = bold, label=""];
17->3 [style = bold, label=""];
3->13 [style = bold, label=""];
4->15 [style = solid, label="period"];
9->3 [style = bold, label=""];
12->18 [style = dashed, label="0"];
2->14 [style = solid, label="acc"];
27->23 [style = bold, label=""];
7->25 [style = bold, label=""];
2->7 [style = bold, label=""];
8->19 [style = solid, label="accounts"];
3->4 [style = solid, label="date"];
13->12 [style = solid, label="accountVO"];
5->19 [style = dashed, label="0"];
16->7 [style = dashed, label="0"];
4->32 [style = bold, label=""];
13->0 [style = bold, label=""];
20->11 [style = bold, label=""];
}
