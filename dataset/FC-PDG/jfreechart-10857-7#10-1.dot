digraph {
3 [style = filled, label = "assertEquals(c1,c2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "XYSeriesCollection<String> c1 = new XYSeriesCollection<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TimeSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "XYSeriesCollection c1 = new XYSeriesCollection()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "XYSeriesCollection<String> c2 = CloneUtils.clone(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "s1.add(1.0,1.1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertSame(c1.getClass(),c2.getClass())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "XYSeries<String> s1 = new XYSeries<>(\"Series\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "XYSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "s1.add(new Year(2009),1.1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertNotSame(c1,c2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "XYSeries s1 = new XYSeries(\"Series\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "TimeSeries s1 = new TimeSeries(\"Series\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TimeSeriesCollection c1 = new TimeSeriesCollection()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(c1.equals(c2))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "c2.getSeries(0).setDescription(\"XYZ\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
21->22 [style = solid, label="c2"];
4->10 [style = bold, label=""];
12->0 [style = solid, label="s1"];
2->19 [style = dashed, label="0"];
7->18 [style = dashed, label="0"];
0->13 [style = bold, label=""];
5->9 [style = bold, label=""];
22->19 [style = bold, label=""];
7->9 [style = solid, label="c1"];
9->2 [style = bold, label=""];
5->1 [style = solid, label="c2"];
10->0 [style = solid, label="s1"];
7->14 [style = dashed, label="0"];
16->6 [style = bold, label=""];
2->3 [style = bold, label=""];
8->23 [style = dashed, label="0"];
3->16 [style = dashed, label="0"];
10->12 [style = dashed, label="0"];
8->14 [style = bold, label=""];
1->20 [style = bold, label=""];
3->6 [style = bold, label=""];
9->22 [style = dashed, label="0"];
7->0 [style = bold, label=""];
11->12 [style = bold, label=""];
0->21 [style = bold, label=""];
18->22 [style = solid, label="c1"];
13->9 [style = solid, label="c2"];
17->23 [style = bold, label=""];
8->7 [style = bold, label=""];
19->16 [style = bold, label=""];
7->3 [style = solid, label="c1"];
6->1 [style = bold, label=""];
18->21 [style = solid, label="c1"];
17->0 [style = solid, label="s1"];
10->8 [style = bold, label=""];
14->0 [style = bold, label=""];
5->3 [style = solid, label="c2"];
21->22 [style = bold, label=""];
12->8 [style = bold, label=""];
14->9 [style = solid, label="c1"];
21->16 [style = solid, label="c2"];
24->17 [style = bold, label=""];
5->9 [style = solid, label="c2"];
13->1 [style = solid, label="c2"];
21->1 [style = solid, label="c2"];
10->17 [style = dashed, label="0"];
21->15 [style = solid, label="c2"];
5->21 [style = dashed, label="0"];
13->9 [style = bold, label=""];
13->3 [style = solid, label="c2"];
14->3 [style = solid, label="c1"];
20->15 [style = bold, label=""];
23->18 [style = bold, label=""];
18->0 [style = bold, label=""];
7->5 [style = solid, label="c1"];
14->13 [style = solid, label="c1"];
0->5 [style = bold, label=""];
}
