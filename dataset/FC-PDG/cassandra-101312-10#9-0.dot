digraph {
3 [style = filled, label = "List<InetAddress> hosts = new ArrayList<InetAddress>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ss.onChange(hosts.get(2),ApplicationState.STATUS,valueFactory.left(keyTokens.get(2),Gossiper.computeExpireTime()))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ss.onChange(hosts.get(2),ApplicationState.STATUS,valueFactory.normal(Collections.singleton(newToken),hostIds.get(2)))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertTrue(tmd.getLeavingEndpoints().isEmpty())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertTrue(tmd.getToken(hosts.get(2)).equals(keyTokens.get(2)))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ss.onChange(hosts.get(2),ApplicationState.STATUS,valueFactory.normal(keyTokens.get(2),hostIds.get(2)))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ss.onChange(hosts.get(2),ApplicationState.STATUS,valueFactory.normal(newToken,hostIds.get(2)))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertTrue(tmd.getToken(hosts.get(2)).equals(newToken))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tmd.clearUnsafe()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ss.onChange(hosts.get(2),ApplicationState.STATUS,valueFactory.leaving(keyTokens.get(2)))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "newToken = positionToken(8)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ss.onChange(hosts.get(2),ApplicationState.STATUS,valueFactory.moving(newToken))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(tmd.getLeavingEndpoints().isEmpty())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "IPartitioner partitioner = new RandomPartitioner()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testStateJumpToNormal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "assertTrue(tmd.getToken(hosts.get(2)).equals(endpointTokens.get(2)))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(tmd.getMovingEndpoints().isEmpty())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(tmd.isMoving(hosts.get(2)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "VersionedValue.VersionedValueFactory valueFactory = new VersionedValue.VersionedValueFactory(partitioner)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(tmd.getBootstrapTokens().isEmpty())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(tmd.getToken(hosts.get(2)).equals(newToken))@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ss.onChange(hosts.get(2),ApplicationState.STATUS,valueFactory.normal(keyTokens.get(4),hostIds.get(2)))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Util.createInitialRing(ss,partitioner,endpointTokens,keyTokens,hosts,hostIds,6)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StorageService ss = StorageService.instance@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ss.onChange(hosts.get(2),ApplicationState.STATUS,valueFactory.leaving(endpointTokens.get(2)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ArrayList<Token> endpointTokens = new ArrayList<Token>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(tmd.getMovingEndpoints().isEmpty())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TokenMetadata tmd = ss.getTokenMetadata()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ArrayList<Token> keyTokens = new ArrayList<Token>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Token newToken = positionToken(7)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testStateJumpToNormal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ss.onChange(hosts.get(2),ApplicationState.STATUS,valueFactory.normal(newToken,hostIds.get(2)))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "testStateJumpToNormal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ss.onChange(hosts.get(2),ApplicationState.STATUS,valueFactory.normal(Collections.singleton(newToken),hostIds.get(2)))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertTrue(tmd.getToken(hosts.get(2)).equals(keyTokens.get(4)))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertTrue(tmd.isLeaving(hosts.get(2)))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ss.onChange(hosts.get(2),ApplicationState.STATUS,valueFactory.moving(newToken))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<UUID> hostIds = new ArrayList<UUID>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->24 [style = bold, label=""];
14->21 [style = solid, label="newToken"];
4->17 [style = bold, label=""];
15->7 [style = bold, label=""];
5->9 [style = bold, label=""];
27->0 [style = bold, label=""];
10->14 [style = bold, label=""];
0->6 [style = bold, label=""];
11->1 [style = bold, label=""];
22->1 [style = solid, label="keyTokens"];
17->24 [style = dashed, label="0"];
31->32 [style = bold, label=""];
19->20 [style = bold, label=""];
25->9 [style = bold, label=""];
9->28 [style = dashed, label="0"];
35->2 [style = bold, label=""];
3->11 [style = bold, label=""];
34->15 [style = bold, label=""];
14->4 [style = solid, label="newToken"];
10->33 [style = dashed, label="0"];
0->1 [style = solid, label="ss"];
30->34 [style = bold, label=""];
5->25 [style = dashed, label="0"];
6->19 [style = bold, label=""];
16->23 [style = bold, label=""];
9->10 [style = bold, label=""];
20->12 [style = solid, label="partitioner"];
5->2 [style = dashed, label="0"];
32->30 [style = bold, label=""];
1->36 [style = bold, label=""];
1->13 [style = bold, label=""];
13->16 [style = bold, label=""];
8->22 [style = bold, label=""];
13->25 [style = solid, label="newToken"];
13->5 [style = solid, label="newToken"];
22->3 [style = bold, label=""];
4->32 [style = dashed, label="0"];
26->0 [style = bold, label=""];
28->33 [style = bold, label=""];
13->16 [style = solid, label="newToken"];
12->8 [style = bold, label=""];
13->10 [style = solid, label="newToken"];
20->12 [style = bold, label=""];
11->1 [style = solid, label="hostIds"];
17->15 [style = bold, label=""];
14->24 [style = solid, label="newToken"];
20->1 [style = solid, label="partitioner"];
3->1 [style = solid, label="hosts"];
7->21 [style = bold, label=""];
33->31 [style = bold, label=""];
7->15 [style = dashed, label="0"];
23->2 [style = bold, label=""];
36->37 [style = bold, label=""];
37->35 [style = bold, label=""];
8->1 [style = solid, label="endpointTokens"];
2->25 [style = bold, label=""];
17->30 [style = dashed, label="0"];
21->29 [style = dashed, label="0"];
2->28 [style = bold, label=""];
18->0 [style = bold, label=""];
15->29 [style = bold, label=""];
14->17 [style = solid, label="newToken"];
2->5 [style = bold, label=""];
14->4 [style = bold, label=""];
24->15 [style = bold, label=""];
}
