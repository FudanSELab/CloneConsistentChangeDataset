digraph {
44 [style = filled, label = "adminClient.updateEndOffsets(Collections.singletonMap(tp,10L))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertEquals(Collections.singleton(tp),changelogReader.completedChangelogs())@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "type == ACTIVE@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "shouldPollWithRightTimeout['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(1,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Collections.emptySet(),changelogReader.completedChangelogs())@@@52@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertNull(changelogReader.changelogMetadata(tp).endOffset())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(3L,changelogReader.changelogMetadata(tp).totalRestored())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,8L,null,\"value\".getBytes()))@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,6L,\"key\".getBytes(),\"value\".getBytes()))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "changelogReader.register(tp,stateManager)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "EasyMock.expect(storeMetadata.offset()).andReturn(null).andReturn(9L).anyTimes()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_BATCH))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.expect(storeMetadata.offset()).andReturn(5L).anyTimes()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(1,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@42@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "changelogReader.restore()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "assertEquals(Duration.ZERO,consumer.lastPollTimeout())@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "EasyMock.replay(stateManager,storeMetadata,store)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@53@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(4L,changelogReader.changelogMetadata(tp).totalRestored())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "shouldRestoreFromPositionAndCheckForCompletion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "assertEquals(Duration.ofMillis(config.getLong(StreamsConfig.POLL_MS_CONFIG)),consumer.lastPollTimeout())@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "type == ACTIVE@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,9L,\"key\".getBytes(),\"value\".getBytes()))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,7L,\"key\".getBytes(),\"value\".getBytes()))@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "final MockConsumer<byte((,byte((> consumer = new MockConsumer<byte((,byte((>(OffsetResetStrategy.EARLIEST){@Override public Map<TopicPartition,Long> endOffsets(final Collection<TopicPartition> partitions){return partitions.stream().collect(Collectors.toMap(Function.identity(),null))}}@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,adminClient,consumer,callback)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_END))@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Collections.singleton(tp),changelogReader.completedChangelogs())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(10L,(long)changelogReader.changelogMetadata(tp).endOffset())@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(tp,callback.restoreTopicPartition)@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "type == ACTIVE@@@34@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "changelogReader.restore()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "type == STANDBY@@@8@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_END))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "changelogReader.restore()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(Collections.emptySet(),changelogReader.completedChangelogs())@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertEquals(4L,changelogReader.changelogMetadata(tp).totalRestored())@@@50@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@48@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "shouldRestoreFromPositionAndCheckForCompletion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(Collections.singleton(tp),consumer.paused())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_END))@@@41@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(6L,consumer.position(tp))@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,11L,\"key\".getBytes(),\"value\".getBytes()))@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "changelogReader.register(tp,stateManager)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_START))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "type == STANDBY@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(12L,consumer.position(tp))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(10L,(long)changelogReader.changelogMetadata(tp).endOffset())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.COMPLETED,changelogReader.changelogMetadata(tp).state())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(tp,callback.restoreTopicPartition)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,consumer,callback)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@51@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "consumer.updateBeginningOffsets(Collections.singletonMap(tp,5L))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49->41 [style = bold, label=""];
35->20 [style = dotted, label="true"];
35->36 [style = dotted, label="true"];
20->21 [style = dotted, label="true"];
31->2 [style = dotted, label="true"];
20->18 [style = dotted, label="true"];
31->28 [style = dotted, label="true"];
25->19 [style = bold, label=""];
43->46 [style = bold, label=""];
35->19 [style = dotted, label="true"];
8->39 [style = bold, label=""];
45->32 [style = bold, label=""];
14->24 [style = bold, label=""];
35->18 [style = dotted, label="false"];
31->14 [style = dotted, label="true"];
12->32 [style = bold, label=""];
34->4 [style = bold, label=""];
3->35 [style = bold, label=""];
16->1 [style = bold, label=""];
35->25 [style = dotted, label="true"];
20->7 [style = dotted, label="true"];
31->56 [style = bold, label=""];
20->23 [style = dotted, label="false"];
11->4 [style = dotted, label="true"];
2->51 [style = bold, label=""];
54->39 [style = bold, label=""];
11->28 [style = dotted, label="false"];
29->21 [style = bold, label=""];
31->5 [style = dotted, label="false"];
35->7 [style = dotted, label="false"];
20->37 [style = dotted, label="true"];
31->56 [style = dotted, label="true"];
11->30 [style = dotted, label="true"];
20->15 [style = bold, label=""];
20->26 [style = dotted, label="false"];
32->11 [style = bold, label=""];
20->29 [style = dotted, label="true"];
1->25 [style = bold, label=""];
51->50 [style = bold, label=""];
47->40 [style = bold, label=""];
17->32 [style = bold, label=""];
0->12 [style = bold, label=""];
35->16 [style = dotted, label="true"];
15->36 [style = bold, label=""];
35->43 [style = dotted, label="false"];
31->5 [style = bold, label=""];
11->13 [style = bold, label=""];
5->47 [style = bold, label=""];
4->31 [style = bold, label=""];
11->34 [style = dotted, label="true"];
6->23 [style = bold, label=""];
11->28 [style = bold, label=""];
31->14 [style = bold, label=""];
39->44 [style = bold, label=""];
50->5 [style = bold, label=""];
28->9 [style = bold, label=""];
33->8 [style = bold, label=""];
48->0 [style = bold, label=""];
30->34 [style = bold, label=""];
31->24 [style = dotted, label="true"];
10->6 [style = bold, label=""];
7->18 [style = bold, label=""];
38->27 [style = solid, label="consumer"];
38->57 [style = bold, label=""];
20->22 [style = bold, label=""];
20->36 [style = dotted, label="true"];
31->55 [style = bold, label=""];
35->7 [style = bold, label=""];
20->22 [style = dotted, label="false"];
35->1 [style = dotted, label="true"];
57->27 [style = bold, label=""];
12->17 [style = bold, label=""];
8->54 [style = dashed, label="0"];
20->6 [style = dotted, label="false"];
58->54 [style = bold, label=""];
21->7 [style = bold, label=""];
44->53 [style = bold, label=""];
35->46 [style = dotted, label="false"];
49->48 [style = bold, label=""];
11->13 [style = dotted, label="true"];
40->3 [style = bold, label=""];
52->49 [style = bold, label=""];
5->40 [style = bold, label=""];
28->2 [style = bold, label=""];
35->37 [style = dotted, label="false"];
49->41 [style = dotted, label="true"];
17->45 [style = bold, label=""];
13->30 [style = bold, label=""];
36->29 [style = bold, label=""];
35->15 [style = dotted, label="true"];
19->20 [style = bold, label=""];
37->43 [style = bold, label=""];
39->38 [style = bold, label=""];
27->0 [style = bold, label=""];
9->2 [style = bold, label=""];
26->10 [style = bold, label=""];
41->48 [style = bold, label=""];
35->16 [style = bold, label=""];
20->10 [style = dotted, label="false"];
11->31 [style = dotted, label="true"];
12->17 [style = dotted, label="true"];
20->15 [style = dotted, label="true"];
31->9 [style = dotted, label="true"];
22->26 [style = bold, label=""];
32->31 [style = bold, label=""];
31->2 [style = bold, label=""];
2->40 [style = bold, label=""];
42->8 [style = bold, label=""];
18->37 [style = bold, label=""];
24->28 [style = bold, label=""];
38->27 [style = bold, label=""];
31->55 [style = dotted, label="false"];
53->52 [style = bold, label=""];
}
