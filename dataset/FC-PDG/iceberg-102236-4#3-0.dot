digraph {
2 [style = filled, label = "testCheckpointRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "newFunc.close()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(\"Should have expected elements.\",latch.await(WAIT_TIME_MILLIS,TimeUnit.MILLISECONDS))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "TestHelpers.assertRecords(sourceContext.toRows(),Lists.newArrayList(Iterables.concat(recordsList)),SCHEMA)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "runSourceFunctionInTask(sourceContext,function)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "List<List<Record>> recordsList = generateRecordsAndCommitTxn(5)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "StreamingMonitorFunction func = createFunction(scanContext)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(\"Should have expected elements.\",latch.await(WAIT_TIME_MILLIS,TimeUnit.MILLISECONDS))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testConsumeFromStartSnapshotId['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "TestHelpers.assertRecords(sourceContext.toRows(),Lists.newArrayList(Iterables.concat(newRecordsList)),SCHEMA)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "StreamingMonitorFunction newFunc = createFunction(scanContext)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<List<Record>> recordsList = generateRecordsAndCommitTxn(10)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testCheckpointRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "harness.initializeState(state)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Thread.sleep(1000L)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "harness.setup()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "TestSourceContext sourceContext = new TestSourceContext(latch)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "func.close()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "runSourceFunctionInTask(sourceContext,newFunc)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(\"Should have expected elements.\",latch.await(WAIT_TIME_MILLIS,TimeUnit.MILLISECONDS))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "long startSnapshotId = table.currentSnapshot().snapshotId()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "harness.open()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "harness.setup()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "function.close()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "TestFlinkScan.assertRecords(sourceContext.toRows(),Lists.newArrayList(Iterables.concat(recordsList)),SCHEMA)@@@18@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Thread.sleep(1000L)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "ScanContext scanContext = ScanContext.builder().monitorInterval(Duration.ofMillis(100)).startSnapshotId(startSnapshotId).build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "OperatorSubtaskState state@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Should produce the expected splits\",1,sourceContext.splits.size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "harness.setup()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "harness.open()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<List<Record>> newRecordsList = generateRecordsAndCommitTxn(10)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestSourceContext sourceContext = new TestSourceContext(latch)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "StreamingMonitorFunction function = createFunction(scanContext)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "generateRecordsAndCommitTxn(5)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TestFlinkScan.assertRecords(sourceContext.toRows(),Lists.newArrayList(Iterables.concat(newRecordsList)),SCHEMA)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Should produce the expected splits\",1,sourceContext.splits.size())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(\"Should produce the expected splits\",1,sourceContext.splits.size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "ScanContext scanContext = ScanContext.builder().monitorInterval(Duration.ofMillis(100)).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31->14 [style = bold, label=""];
5->3 [style = bold, label=""];
17->8 [style = bold, label=""];
39->37 [style = bold, label=""];
27->38 [style = bold, label=""];
24->19 [style = bold, label=""];
9->0 [style = bold, label=""];
34->40 [style = bold, label=""];
4->25 [style = bold, label=""];
9->0 [style = solid, label="sourceContext"];
33->32 [style = solid, label="function"];
6->26 [style = solid, label="newFunc"];
22->16 [style = bold, label=""];
0->17 [style = bold, label=""];
6->23 [style = bold, label=""];
1->30 [style = dashed, label="0"];
16->6 [style = bold, label=""];
28->11 [style = bold, label=""];
25->9 [style = bold, label=""];
11->4 [style = bold, label=""];
33->4 [style = bold, label=""];
35->33 [style = bold, label=""];
22->29 [style = dashed, label="0"];
18->12 [style = bold, label=""];
0->32 [style = dashed, label="0"];
19->10 [style = bold, label=""];
12->30 [style = bold, label=""];
38->36 [style = bold, label=""];
14->29 [style = solid, label="recordsList"];
3->22 [style = bold, label=""];
12->1 [style = bold, label=""];
21->6 [style = solid, label="scanContext"];
20->18 [style = bold, label=""];
25->9 [style = solid, label="latch"];
27->24 [style = solid, label="state"];
10->13 [style = solid, label="latch"];
23->24 [style = bold, label=""];
32->8 [style = bold, label=""];
40->39 [style = bold, label=""];
16->30 [style = solid, label="newRecordsList"];
7->28 [style = bold, label=""];
10->13 [style = bold, label=""];
9->0 [style = solid, label="latch"];
13->26 [style = bold, label=""];
7->0 [style = solid, label="func"];
0->32 [style = solid, label="sourceContext"];
15->20 [style = bold, label=""];
21->7 [style = solid, label="scanContext"];
16->1 [style = solid, label="newRecordsList"];
2->14 [style = bold, label=""];
26->15 [style = bold, label=""];
21->7 [style = bold, label=""];
27->5 [style = bold, label=""];
37->35 [style = bold, label=""];
0->32 [style = bold, label=""];
35->33 [style = solid, label="scanContext"];
8->27 [style = bold, label=""];
13->26 [style = solid, label="sourceContext"];
29->16 [style = bold, label=""];
3->29 [style = bold, label=""];
14->21 [style = bold, label=""];
14->22 [style = solid, label="recordsList"];
37->22 [style = solid, label="recordsList"];
14->40 [style = dashed, label="0"];
36->22 [style = bold, label=""];
}
