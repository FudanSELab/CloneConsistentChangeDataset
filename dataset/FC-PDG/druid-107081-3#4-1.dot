digraph {
3 [style = filled, label = "VectorValueMatcher matcher = matcherFactory.makeMatcher(\"2.0\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "VectorValueMatcherFactory matcherFactory = VectorValueMatcherColumnProcessorFactory.instance().makeFloatProcessor(ColumnCapabilitiesImpl.createSimpleNumericColumnCapabilities(ValueType.FLOAT),vectorValueSelector)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(VECTOR_SIZE,booleanMatcher.getMaxVectorSize())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(CURRENT_SIZE,booleanMatcher.getCurrentVectorSize())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(booleanMatcher instanceof BooleanVectorValueMatcher)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(VECTOR_SIZE,matcher.getMaxVectorSize())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "VectorValueMatcher booleanMatcher = matcherFactory.makeMatcher((String)null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testDouble['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "VectorValueMatcherFactory matcherFactory = VectorValueMatcherColumnProcessorFactory.instance().makeDoubleProcessor(vectorValueSelector)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "VectorValueMatcherFactory matcherFactory = VectorValueMatcherColumnProcessorFactory.instance().makeFloatProcessor(vectorValueSelector)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "NullHandling.replaceWithDefault()@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertFalse(booleanMatcher instanceof BooleanVectorValueMatcher)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertFalse(matcher instanceof BooleanVectorValueMatcher)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testFloat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Assert.assertTrue(matcherFactory instanceof DoubleVectorValueMatcher)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(CURRENT_SIZE,matcher.getCurrentVectorSize())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testFloat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "VectorValueMatcher matcher = matcherFactory.makeMatcher(\"1.0\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "EasyMock.verify(vectorValueSelector)@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(matcherFactory instanceof FloatVectorValueMatcher)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->18 [style = bold, label=""];
19->9 [style = solid, label="matcher"];
15->14 [style = bold, label=""];
6->7 [style = solid, label="matcherFactory"];
7->17 [style = dashed, label="0"];
10->4 [style = solid, label="booleanMatcher"];
18->17 [style = bold, label=""];
6->14 [style = dashed, label="0"];
9->8 [style = bold, label=""];
17->19 [style = bold, label=""];
7->3 [style = bold, label=""];
14->7 [style = bold, label=""];
6->18 [style = dashed, label="0"];
3->19 [style = dashed, label="0"];
18->17 [style = solid, label="matcherFactory"];
3->9 [style = solid, label="matcher"];
3->9 [style = bold, label=""];
10->0 [style = solid, label="booleanMatcher"];
12->2 [style = bold, label=""];
14->7 [style = solid, label="matcherFactory"];
5->6 [style = bold, label=""];
10->13 [style = bold, label=""];
19->9 [style = bold, label=""];
13->4 [style = dotted, label="false"];
13->0 [style = dotted, label="true"];
11->10 [style = bold, label=""];
0->1 [style = bold, label=""];
1->12 [style = bold, label=""];
4->1 [style = bold, label=""];
6->7 [style = bold, label=""];
8->11 [style = bold, label=""];
13->0 [style = bold, label=""];
13->4 [style = bold, label=""];
}
