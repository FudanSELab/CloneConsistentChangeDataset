digraph {
14 [style = filled, label = "assertThat(capturedForward.record(),is(new Record<>(key,value,timestamp)))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "harness.processor.process(key,value)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "suppressShouldNotDropTombstonesForSessionWindows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final long timestamp = ARBITRARY_LONG@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(capturedForward.keyValue(),is(new KeyValue<>(key,value)))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "windowedZeroTimeLimitShouldImmediatelyEmit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new TimeWindow(0L,100L))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final MockInternalProcessorContext context = harness.context@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final MockInternalNewProcessorContext<Windowed<String>,Change<Long>> context = harness.context@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final Harness<Windowed<String>,Long> harness = new Harness<>(untilTimeLimit(ZERO,unbounded()),timeWindowedSerdeFrom(,100L),Long())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "context.setRecordMetadata(\"\",0,0L)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "final Change<Long> value = new Change<>(null,ARBITRARY_LONG)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(capturedForward.timestamp(),is(timestamp))@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "context.setRecordMetadata(\"\",0,0L,new RecordHeaders(),timestamp)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(context.forwarded(),hasSize(1))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final MockProcessorContext.CapturedForward capturedForward = context.forwarded().get(0)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "harness.processor.process(new Record<>(key,value,timestamp))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "windowedZeroTimeLimitShouldImmediatelyEmit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new TimeWindow(0L,100L))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final long timestamp = 100L@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new SessionWindow(0L,0L))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final Harness<Windowed<String>,Long> harness = new Harness<>(untilTimeLimit(ofMillis(0),maxRecords(0)),sessionWindowedSerdeFrom(),Long())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "context.setTimestamp(timestamp)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->18 [style = dashed, label="0"];
8->19 [style = dashed, label="0"];
21->2 [style = solid, label="value"];
7->21 [style = dashed, label="0"];
1->8 [style = bold, label=""];
21->6 [style = solid, label="value"];
0->6 [style = bold, label=""];
8->9 [style = solid, label="timestamp"];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
8->5 [style = solid, label="timestamp"];
9->20 [style = bold, label=""];
19->9 [style = solid, label="timestamp"];
9->10 [style = bold, label=""];
20->6 [style = solid, label="key"];
6->14 [style = dashed, label="0"];
10->7 [style = bold, label=""];
19->5 [style = solid, label="timestamp"];
2->15 [style = solid, label="value"];
3->0 [style = bold, label=""];
21->2 [style = bold, label=""];
2->15 [style = dashed, label="0"];
20->21 [style = bold, label=""];
6->14 [style = bold, label=""];
8->17 [style = bold, label=""];
1->12 [style = dashed, label="0"];
6->5 [style = bold, label=""];
22->18 [style = bold, label=""];
7->15 [style = solid, label="key"];
2->14 [style = solid, label="value"];
10->2 [style = solid, label="key"];
18->1 [style = bold, label=""];
19->9 [style = bold, label=""];
8->13 [style = solid, label="timestamp"];
7->2 [style = solid, label="value"];
7->2 [style = bold, label=""];
12->8 [style = bold, label=""];
13->7 [style = bold, label=""];
15->0 [style = bold, label=""];
8->14 [style = solid, label="timestamp"];
9->17 [style = dashed, label="0"];
2->15 [style = bold, label=""];
8->9 [style = bold, label=""];
8->15 [style = solid, label="timestamp"];
4->12 [style = bold, label=""];
7->14 [style = solid, label="key"];
7->6 [style = solid, label="value"];
10->20 [style = dashed, label="0"];
4->1 [style = bold, label=""];
17->13 [style = bold, label=""];
10->6 [style = solid, label="key"];
16->4 [style = bold, label=""];
1->19 [style = bold, label=""];
20->2 [style = solid, label="key"];
}
