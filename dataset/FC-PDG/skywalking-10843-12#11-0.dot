digraph {
42 [style = filled, label = "List<SegmentRecord> segmentRecords = new ArrayList<>()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "getProfiledSegment['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "final SearchResponse response = getClient().search(index,search.build())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "!Strings.isNullOrEmpty(dataBinaryBase64)@@@18@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "segmentRecord.setStartTime(((Number)searchHit.getSourceAsMap().get(SegmentRecord.START_TIME)).longValue())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String segmentId@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "segmentRecord.setSegmentId((String)searchHit.getSourceAsMap().get(SegmentRecord.SEGMENT_ID))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "segmentRecord.setSegmentId((String)searchHit.getSource().get(SegmentRecord.SEGMENT_ID))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "String segmentId@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "segmentRecord.setStartTime(((Number)searchHit.getSource().get(SegmentRecord.START_TIME)).longValue())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "segmentRecord.setTraceId((String)searchHit.getSourceAsMap().get(SegmentRecord.TRACE_ID))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final SearchBuilder search = Search.builder().query(Query.term(SegmentRecord.SEGMENT_ID,segmentId)).size(1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "return null@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final SegmentRecord segmentRecord = new SegmentRecord()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "SearchSourceBuilder sourceBuilder = SearchSourceBuilder.searchSource()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "return null@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "final SearchHit searchHit = response.getHits().iterator().next()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "segmentRecord.setServiceId((String)searchHit.getSource().get(SegmentRecord.SERVICE_ID))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "segmentRecord.setDataBinary(Base64.getDecoder().decode(dataBinaryBase64))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "segmentRecord.setIsError(((Number)searchHit.getSource().get(SegmentRecord.IS_ERROR)).intValue())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "response.getHits().getHits().length == 0@@@7@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "segmentRecord.setIsError(((Number)searchHit.getSourceAsMap().get(SegmentRecord.IS_ERROR)).intValue())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "segmentRecords.add(segmentRecord)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sourceBuilder.query(QueryBuilders.termQuery(SegmentRecord.SEGMENT_ID,segmentId))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "sourceBuilder.size(segmentQueryMaxSize)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String dataBinaryBase64 = (String)searchHit.getSourceAsMap().get(SegmentRecord.DATA_BINARY)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "SearchResponse response = getClient().search(IndexController.LogicIndicesRegister.getPhysicalTableName(SegmentRecord.INDEX_NAME),sourceBuilder)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "!Strings.isNullOrEmpty(dataBinaryBase64)@@@17@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String dataBinaryBase64 = (String)searchHit.getSource().get(SegmentRecord.DATA_BINARY)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "segmentRecord.setLatency(((Number)searchHit.getSourceAsMap().get(SegmentRecord.LATENCY)).intValue())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "SegmentRecord segmentRecord = new SegmentRecord()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "queryByTraceId['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return segmentRecord@@@22@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "response.getHits().getHits().isEmpty()@@@6@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "return segmentRecord@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "sourceBuilder.query(QueryBuilders.termQuery(SegmentRecord.TRACE_ID,traceId))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final String index = IndexController.LogicIndicesRegister.getPhysicalTableName(SegmentRecord.INDEX_NAME)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "sourceBuilder.size(1)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "segmentRecord.setLatency(((Number)searchHit.getSource().get(SegmentRecord.LATENCY)).intValue())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "return segmentRecords@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "segmentRecord.setDataBinary(Base64.getDecoder().decode(dataBinaryBase64))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "getProfiledSegment['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "segmentRecord.setTraceId((String)searchHit.getSource().get(SegmentRecord.TRACE_ID))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "String traceId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "segmentRecord.setServiceId((String)searchHit.getSourceAsMap().get(SegmentRecord.SERVICE_ID))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "SearchHit searchHit = response.getHits().getHits()(0(@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32->23 [style = bold, label=""];
5->9 [style = bold, label=""];
42->45 [style = bold, label=""];
10->34 [style = dashed, label="0"];
4->7 [style = dotted, label="true"];
22->30 [style = bold, label=""];
6->13 [style = solid, label="sourceBuilder"];
19->30 [style = dashed, label="0"];
9->21 [style = dashed, label="0"];
10->12 [style = bold, label=""];
6->41 [style = bold, label=""];
34->32 [style = bold, label=""];
11->15 [style = dotted, label="true"];
19->3 [style = bold, label=""];
11->28 [style = bold, label=""];
38->41 [style = solid, label="traceId"];
0->19 [style = bold, label=""];
18->8 [style = dotted, label="true"];
16->17 [style = bold, label=""];
12->1 [style = bold, label=""];
1->11 [style = bold, label=""];
2->15 [style = dashed, label="0"];
23->35 [style = bold, label=""];
35->28 [style = bold, label=""];
25->27 [style = bold, label=""];
3->10 [style = bold, label=""];
16->41 [style = dashed, label="0"];
36->25 [style = bold, label=""];
21->22 [style = bold, label=""];
7->38 [style = dashed, label="0"];
23->11 [style = solid, label="dataBinaryBase64"];
45->15 [style = solid, label="segmentRecord"];
27->29 [style = bold, label=""];
20->24 [style = solid, label="search"];
26->20 [style = bold, label=""];
13->18 [style = bold, label=""];
33->31 [style = dotted, label="true"];
43->38 [style = dotted, label="true"];
17->39 [style = dashed, label="0"];
7->31 [style = dashed, label="0"];
13->42 [style = bold, label=""];
10->1 [style = solid, label="dataBinaryBase64"];
39->13 [style = bold, label=""];
3->37 [style = dashed, label="0"];
12->32 [style = dashed, label="0"];
8->14 [style = bold, label=""];
5->29 [style = dashed, label="0"];
45->44 [style = bold, label=""];
29->21 [style = bold, label=""];
33->26 [style = bold, label=""];
42->40 [style = solid, label="segmentRecords"];
29->28 [style = solid, label="segmentRecord"];
15->40 [style = bold, label=""];
17->13 [style = bold, label=""];
18->8 [style = bold, label=""];
44->5 [style = bold, label=""];
1->23 [style = dashed, label="0"];
14->5 [style = bold, label=""];
16->20 [style = dashed, label="0"];
15->2 [style = bold, label=""];
15->45 [style = bold, label=""];
5->2 [style = solid, label="segmentRecord"];
9->0 [style = bold, label=""];
7->16 [style = solid, label="segmentId"];
4->6 [style = bold, label=""];
1->15 [style = bold, label=""];
12->15 [style = bold, label=""];
12->1 [style = dotted, label="true"];
30->37 [style = bold, label=""];
14->27 [style = dashed, label="0"];
35->11 [style = dotted, label="true"];
0->22 [style = dashed, label="0"];
11->2 [style = bold, label=""];
43->6 [style = bold, label=""];
11->15 [style = bold, label=""];
24->36 [style = bold, label=""];
26->24 [style = solid, label="index"];
36->27 [style = bold, label=""];
6->16 [style = bold, label=""];
37->34 [style = bold, label=""];
1->15 [style = solid, label="dataBinaryBase64"];
41->39 [style = bold, label=""];
20->24 [style = bold, label=""];
18->14 [style = bold, label=""];
36->25 [style = dotted, label="true"];
35->11 [style = bold, label=""];
}
