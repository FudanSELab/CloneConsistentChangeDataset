digraph {
18 [style = filled, label = "cmp < 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ltEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "T lower = Conversions.fromByteBuffer(struct.field(id).type(),lowerBounds.get(id))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return ROWS_MIGHT_MATCH@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Literal<T> lit@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return ROWS_MUST_MATCH@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "notEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ltEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "T lower = Conversions.fromByteBuffer(ref.type(),lowerBounds.get(id))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "return ROWS_CANNOT_MATCH@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cmp > 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "T upper = Conversions.fromByteBuffer(field.type(),upperBounds.get(id))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "lowerBounds != null && lowerBounds.containsKey(id)@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "upperBounds != null && upperBounds.containsKey(id)@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "return ROWS_MUST_MATCH@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "T lower = Conversions.fromByteBuffer(field.type(),lowerBounds.get(id))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3->11 [style = dotted, label="true"];
6->21 [style = dashed, label="0"];
15->7 [style = solid, label="lower"];
10->6 [style = dotted, label="true"];
8->5 [style = solid, label="id"];
3->20 [style = dotted, label="true"];
11->20 [style = dashed, label="0"];
15->7 [style = bold, label=""];
14->12 [style = dotted, label="true"];
16->8 [style = bold, label=""];
22->19 [style = bold, label=""];
8->25 [style = solid, label="id"];
9->2 [style = bold, label=""];
3->25 [style = bold, label=""];
0->7 [style = solid, label="lower"];
16->17 [style = dotted, label="true"];
11->4 [style = bold, label=""];
9->2 [style = solid, label="field"];
3->11 [style = bold, label=""];
18->19 [style = bold, label=""];
0->15 [style = dashed, label="0"];
8->13 [style = solid, label="id"];
5->15 [style = bold, label=""];
25->24 [style = dotted, label="true"];
8->15 [style = solid, label="id"];
5->0 [style = dotted, label="true"];
24->23 [style = solid, label="upper"];
5->3 [style = dotted, label="true"];
20->25 [style = bold, label=""];
3->4 [style = bold, label=""];
5->15 [style = dotted, label="true"];
7->3 [style = bold, label=""];
5->25 [style = bold, label=""];
8->9 [style = solid, label="id"];
0->7 [style = bold, label=""];
25->18 [style = dotted, label="true"];
8->0 [style = solid, label="id"];
23->18 [style = solid, label="cmp"];
25->24 [style = bold, label=""];
5->13 [style = dotted, label="true"];
3->20 [style = bold, label=""];
18->22 [style = bold, label=""];
10->8 [style = bold, label=""];
5->0 [style = bold, label=""];
8->5 [style = bold, label=""];
5->7 [style = dotted, label="true"];
13->7 [style = bold, label=""];
5->13 [style = bold, label=""];
5->4 [style = bold, label=""];
0->13 [style = dashed, label="0"];
25->19 [style = bold, label=""];
8->9 [style = bold, label=""];
8->2 [style = solid, label="id"];
8->24 [style = solid, label="id"];
16->21 [style = dotted, label="true"];
13->7 [style = solid, label="lower"];
14->8 [style = bold, label=""];
18->22 [style = dotted, label="true"];
10->1 [style = dotted, label="true"];
25->23 [style = dotted, label="true"];
7->3 [style = solid, label="cmp"];
23->18 [style = bold, label=""];
2->5 [style = bold, label=""];
24->23 [style = bold, label=""];
14->6 [style = dotted, label="true"];
}
