digraph {
9 [style = filled, label = "Assert.assertTrue(jobDir.mkdirs())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(result.size(),3)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(result.get(0).getFieldValue(\"i\"),new IntWritable(1))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblin(\"basic\",basePath.getAbsolutePath().toString()).setConfiguration(CompactionJobConfigurator.COMPACTION_JOB_CONFIGURATOR_FACTORY_CLASS_KEY,.getName()).setConfiguration(COMPACTION_OUTPUT_EXTENSION,extensionName).setConfiguration(ORC_MAPPER_SHUFFLE_KEY_SCHEMA,\"struct<k:int>\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"j\"),new IntWritable(3))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertNull(result.get(1).getFieldValue(\"k\"))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<OrcStruct> result = readOrcFile(statuses.get(0).getPath())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "String hourlyPath = \"Identity/MemberAccount/hourly/2017/04/03/10/\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "File outputDir = new File(basePath,hourlyPath)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "orcStruct_5.setFieldValue(\"i\",new IntWritable(10))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "execution = embeddedGobblin.run()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"i\"),new IntWritable(2))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"i\"),new IntWritable(2))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(result.size(),4)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(result.get(2).getFieldValue(\"i\"),new IntWritable(4))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "reloadFolder(statuses,outputDir,fs)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "FileSystem fs = FileSystem.getLocal(new Configuration())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(result.get(2).getFieldValue(\"j\"),new IntWritable(5))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Assert.assertTrue(execution.isSuccessful())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "File file_2 = new File(jobDir,\"file_2.1.\" + extensionName)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "basicTestWithRecompactionAndBasicSchemaEvolution['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "file_2.setLastModified(Long.MAX_VALUE)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "createTestingData(jobDir)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"k\"),new IntWritable(7))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertNull(result.get(2).getFieldValue(\"k\"))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "basicTestWithRecompactionAndBasicSchemaEvolution['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "orcStruct_5.setFieldValue(\"k\",new IntWritable(12))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "writeOrcRecordsInFile(new Path(file_2.getAbsolutePath()),evolvedSchema,ImmutableList.of(orcStruct_4))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "basicTestWithShuffleKeySpecified['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "OrcStruct orcStruct_4 = (OrcStruct)OrcStruct.createValue(evolvedSchema)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(result.get(0).getFieldValue(\"j\"),new IntWritable(2))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "TypeDescription evolvedSchema = TypeDescription.fromString(\"struct<i:int,j:int,k:int>\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "List<OrcStruct> result = readOrcFile(statuses.get(0).getPath())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "orcStruct_5.setFieldValue(\"j\",new IntWritable(11))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "writeOrcRecordsInFile(new Path(file_late.getAbsolutePath()),evolvedSchema,ImmutableList.of(orcStruct_5))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "orcStruct_4.setFieldValue(\"k\",new IntWritable(7))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "File basePath = Files.createTempDir()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "orcStruct_4.setFieldValue(\"i\",new IntWritable(5))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(result.get(2).getFieldValue(\"j\"),new IntWritable(5))@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"j\"),new IntWritable(6))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "result = readOrcFile(statuses.get(0).getPath())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "JobExecutionResult execution = embeddedGobblin.run()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblinCompactionJob(\"basic\",basePath.getAbsolutePath()).setConfiguration(CompactionJobConfigurator.COMPACTION_JOB_CONFIGURATOR_FACTORY_CLASS_KEY,.getName()).setConfiguration(COMPACTION_OUTPUT_EXTENSION,extensionName).setConfiguration(COMPACTION_LATEDATA_THRESHOLD_FOR_RECOMPACT_PER_DATASET,\"Identity.*:0.1\")@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assert.assertTrue(execution.isSuccessful())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(result.get(0).getFieldValue(\"i\"),new IntWritable(1))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertTrue(statuses.size() == 1)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(result.get(0).getFieldValue(\"j\"),new IntWritable(2))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "List<FileStatus> statuses = new ArrayList<>()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "basePath.deleteOnExit()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "File file_late = new File(jobDir,\"file_late.1.\" + extensionName)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String minutelyPath = \"Identity/MemberAccount/minutely/2017/04/03/10/20_30/run_2017-04-03-10-20\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertNull(result.get(0).getFieldValue(\"k\"))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblin(\"basic\",basePath.getAbsolutePath().toString()).setConfiguration(CompactionJobConfigurator.COMPACTION_JOB_CONFIGURATOR_FACTORY_CLASS_KEY,.getName()).setConfiguration(COMPACTION_OUTPUT_EXTENSION,extensionName).setConfiguration(COMPACTION_LATEDATA_THRESHOLD_FOR_RECOMPACT_PER_DATASET,\"Identity.*:0.1\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(result.get(2).getFieldValue(\"i\"),new IntWritable(4))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "orcStruct_4.setFieldValue(\"j\",new IntWritable(6))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "reloadFolder(statuses,outputDir,fs)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(result.size(),4 + 1)@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"j\"),new IntWritable(3))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "OrcStruct orcStruct_5 = (OrcStruct)OrcStruct.createValue(evolvedSchema)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "File jobDir = new File(basePath,minutelyPath)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"i\"),new IntWritable(5))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->35 [style = bold, label=""];
22->15 [style = bold, label=""];
12->45 [style = bold, label=""];
27->37 [style = solid, label="evolvedSchema"];
29->37 [style = solid, label="orcStruct_5"];
30->20 [style = bold, label=""];
27->39 [style = solid, label="evolvedSchema"];
51->53 [style = bold, label=""];
26->40 [style = bold, label=""];
19->36 [style = bold, label=""];
21->30 [style = bold, label=""];
3->16 [style = bold, label=""];
13->19 [style = solid, label="jobDir"];
10->24 [style = solid, label="fs"];
44->46 [style = bold, label=""];
43->24 [style = bold, label=""];
31->48 [style = bold, label=""];
36->18 [style = bold, label=""];
18->32 [style = bold, label=""];
38->26 [style = bold, label=""];
5->13 [style = solid, label="basePath"];
53->60 [style = bold, label=""];
1->31 [style = bold, label=""];
13->41 [style = solid, label="jobDir"];
43->24 [style = solid, label="statuses"];
25->21 [style = bold, label=""];
42->19 [style = bold, label=""];
14->24 [style = solid, label="outputDir"];
31->13 [style = solid, label="minutelyPath"];
14->21 [style = solid, label="outputDir"];
14->10 [style = bold, label=""];
23->3 [style = bold, label=""];
58->54 [style = bold, label=""];
34->0 [style = bold, label=""];
54->60 [style = solid, label="outputDir"];
18->50 [style = bold, label=""];
52->58 [style = bold, label=""];
5->1 [style = bold, label=""];
39->7 [style = bold, label=""];
59->35 [style = bold, label=""];
57->5 [style = bold, label=""];
0->44 [style = bold, label=""];
39->36 [style = solid, label="orcStruct_4"];
48->13 [style = bold, label=""];
49->5 [style = bold, label=""];
60->56 [style = bold, label=""];
29->17 [style = bold, label=""];
3->35 [style = dashed, label="0"];
41->27 [style = bold, label=""];
10->43 [style = bold, label=""];
47->42 [style = bold, label=""];
6->23 [style = bold, label=""];
48->14 [style = solid, label="hourlyPath"];
27->29 [style = solid, label="evolvedSchema"];
46->29 [style = bold, label=""];
51->60 [style = solid, label="fs"];
40->12 [style = bold, label=""];
11->5 [style = bold, label=""];
27->39 [style = bold, label=""];
48->54 [style = solid, label="hourlyPath"];
32->50 [style = dashed, label="0"];
13->9 [style = bold, label=""];
50->35 [style = bold, label=""];
55->52 [style = bold, label=""];
37->8 [style = bold, label=""];
56->59 [style = bold, label=""];
43->21 [style = solid, label="statuses"];
54->51 [style = bold, label=""];
33->14 [style = bold, label=""];
15->2 [style = bold, label=""];
27->36 [style = solid, label="evolvedSchema"];
5->14 [style = solid, label="basePath"];
7->47 [style = bold, label=""];
41->55 [style = bold, label=""];
35->33 [style = bold, label=""];
53->60 [style = solid, label="statuses"];
16->22 [style = bold, label=""];
9->41 [style = bold, label=""];
2->38 [style = bold, label=""];
17->28 [style = bold, label=""];
10->21 [style = solid, label="fs"];
4->37 [style = bold, label=""];
5->54 [style = solid, label="basePath"];
13->46 [style = solid, label="jobDir"];
24->6 [style = bold, label=""];
8->25 [style = bold, label=""];
45->34 [style = bold, label=""];
28->4 [style = bold, label=""];
}
