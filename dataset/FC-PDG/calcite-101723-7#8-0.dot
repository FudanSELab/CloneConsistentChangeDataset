digraph {
25 [style = filled, label = "simplifyOrTerms['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "RexNode t = terms.get(i)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<RexNode> terms@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "List<RexNode> terms@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final RexNode t = terms.get(i)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i++@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final RexNode t2 = simplify.simplify(t,RexUnknownAs.UNKNOWN)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final RexNode inverse = simplify.simplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NOT_TRUE,t2),RexUnknownAs.UNKNOWN)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RexSimplify simplify = this@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "terms.set(i,simplify.simplify(t,unknownAs))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "terms.set(i,simplify.simplify(t,RexUnknownAs.UNKNOWN))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "simplify = simplify.withPredicates(newPredicates)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "terms.set(i,simplify.simplify(t,unknownAs))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "i < terms.size()@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i < terms.size()@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final RexNode t = terms.get(i)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "simplifyAndTerms['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,ImmutableList.of(inverse)))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "terms.set(i,t2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RexUnknownAs unknownAs@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "List<RexNode> terms@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "terms.set(i,simplify.simplify(t,UNKNOWN))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "Predicate.of(t) != null@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,terms.subList(i,i + 1)))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i < terms.size()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "simplify = simplify.withPredicates(newPredicates)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "terms.set(i,simplify.simplify(t,UNKNOWN))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Predicate.of(t) == null@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int i = 0@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "simplifyAndTerms['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9->0 [style = solid, label="i"];
8->16 [style = bold, label=""];
19->17 [style = solid, label="unknownAs"];
4->18 [style = dotted, label="true"];
2->18 [style = solid, label="simplify"];
3->16 [style = solid, label="i"];
6->31 [style = dotted, label="true"];
13->26 [style = solid, label="i"];
4->1 [style = dotted, label="true"];
0->28 [style = solid, label="i"];
11->30 [style = solid, label="i"];
3->8 [style = solid, label="i"];
16->1 [style = solid, label="newPredicates"];
4->15 [style = bold, label=""];
7->20 [style = dashed, label="0"];
3->15 [style = solid, label="i"];
9->30 [style = solid, label="simplify"];
2->30 [style = solid, label="simplify"];
1->8 [style = solid, label="simplify"];
3->4 [style = bold, label=""];
1->13 [style = bold, label=""];
21->2 [style = bold, label=""];
3->4 [style = solid, label="i"];
30->11 [style = bold, label=""];
11->6 [style = solid, label="i"];
31->6 [style = bold, label=""];
5->0 [style = bold, label=""];
9->6 [style = solid, label="i"];
3->26 [style = solid, label="i"];
6->11 [style = bold, label=""];
31->30 [style = bold, label=""];
29->14 [style = bold, label=""];
13->29 [style = solid, label="i"];
4->24 [style = dotted, label="true"];
6->11 [style = dotted, label="true"];
12->17 [style = dotted, label="true"];
21->20 [style = dotted, label="true"];
2->5 [style = solid, label="simplify"];
4->23 [style = dotted, label="true"];
11->12 [style = bold, label=""];
15->29 [style = dashed, label="0"];
13->4 [style = solid, label="i"];
26->24 [style = bold, label=""];
1->17 [style = solid, label="simplify"];
3->13 [style = solid, label="i"];
3->29 [style = solid, label="i"];
25->2 [style = bold, label=""];
19->18 [style = solid, label="unknownAs"];
4->0 [style = bold, label=""];
12->11 [style = dotted, label="true"];
13->18 [style = solid, label="i"];
4->13 [style = dotted, label="true"];
0->17 [style = solid, label="i"];
28->31 [style = solid, label="t"];
29->14 [style = solid, label="t"];
12->6 [style = dotted, label="true"];
6->17 [style = solid, label="t"];
13->15 [style = solid, label="i"];
12->0 [style = dotted, label="true"];
11->17 [style = bold, label=""];
8->18 [style = dashed, label="0"];
14->18 [style = bold, label=""];
10->2 [style = bold, label=""];
14->8 [style = bold, label=""];
2->27 [style = solid, label="simplify"];
0->6 [style = solid, label="i"];
7->22 [style = dashed, label="0"];
2->8 [style = solid, label="simplify"];
4->26 [style = dotted, label="true"];
11->28 [style = solid, label="i"];
14->4 [style = bold, label=""];
27->26 [style = bold, label=""];
13->16 [style = solid, label="i"];
5->30 [style = dashed, label="0"];
4->9 [style = bold, label=""];
2->24 [style = solid, label="simplify"];
27->26 [style = solid, label="t2"];
15->14 [style = bold, label=""];
15->8 [style = solid, label="t"];
9->5 [style = solid, label="i"];
0->12 [style = bold, label=""];
2->3 [style = bold, label=""];
28->31 [style = bold, label=""];
27->24 [style = solid, label="t2"];
4->29 [style = bold, label=""];
4->15 [style = dotted, label="true"];
15->14 [style = solid, label="t"];
3->18 [style = solid, label="i"];
4->29 [style = dotted, label="true"];
6->28 [style = dashed, label="0"];
11->5 [style = bold, label=""];
17->0 [style = bold, label=""];
5->17 [style = dashed, label="0"];
16->1 [style = bold, label=""];
0->30 [style = solid, label="i"];
24->23 [style = solid, label="inverse"];
9->12 [style = bold, label=""];
14->27 [style = bold, label=""];
23->9 [style = solid, label="newPredicates"];
24->23 [style = bold, label=""];
18->16 [style = bold, label=""];
6->30 [style = dotted, label="true"];
0->12 [style = solid, label="i"];
0->6 [style = bold, label=""];
11->6 [style = bold, label=""];
1->18 [style = solid, label="simplify"];
9->17 [style = solid, label="i"];
4->8 [style = dotted, label="true"];
4->14 [style = dotted, label="true"];
12->6 [style = bold, label=""];
15->18 [style = solid, label="t"];
0->5 [style = solid, label="i"];
6->28 [style = dotted, label="true"];
9->24 [style = solid, label="simplify"];
6->11 [style = solid, label="t"];
13->8 [style = solid, label="i"];
28->30 [style = solid, label="t"];
12->5 [style = dotted, label="true"];
21->19 [style = dotted, label="true"];
0->11 [style = solid, label="i"];
6->5 [style = solid, label="t"];
4->27 [style = dotted, label="true"];
1->5 [style = solid, label="simplify"];
25->22 [style = dotted, label="true"];
8->27 [style = dashed, label="0"];
4->16 [style = dotted, label="true"];
9->27 [style = solid, label="simplify"];
4->9 [style = dotted, label="true"];
2->17 [style = solid, label="simplify"];
23->9 [style = bold, label=""];
29->27 [style = solid, label="t"];
10->7 [style = dotted, label="true"];
9->12 [style = solid, label="i"];
6->28 [style = bold, label=""];
9->13 [style = bold, label=""];
13->4 [style = bold, label=""];
}
