digraph {
1 [style = filled, label = "timeline = makeStringIntegerTimeline()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testOverlapDescending['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "add(\"2011-01-01/2011-01-10\",\"1\",1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testOverlapDescending['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "add(\"2011-01-02/2011-01-10\",\"2\",2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertValues(Arrays.asList(createExpected(\"2011-01-01/2011-01-03\",\"1\",1),createExpected(\"2011-01-03/2011-01-06\",\"3\",3),createExpected(\"2011-01-06/2011-01-20\",\"2\",2)),timeline.lookup(Intervals.of(\"2011-01-01/2011-01-20\")))@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "add(\"2011-01-02/2011-01-06\",\"3\",3)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "add(\"2011-01-01/2011-01-20\",\"1\",1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertValues(Arrays.asList(createExpected(\"2011-01-01/2011-01-02\",\"1\",1),createExpected(\"2011-01-02/2011-01-06\",\"3\",3),createExpected(\"2011-01-06/2011-01-10\",\"2\",2),createExpected(\"2011-01-10/2011-01-20\",\"1\",1)),timeline.lookup(Intervals.of(\"2011-01-01/2011-01-20\")))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "add(\"2011-01-05/2011-01-20\",\"2\",2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "add(\"2011-01-03/2011-01-06\",\"3\",3)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testOverlapContainedDescending['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
8->1 [style = bold, label=""];
5->1 [style = bold, label=""];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
7->11 [style = bold, label=""];
0->11 [style = dashed, label="0"];
9->10 [style = bold, label=""];
4->10 [style = dashed, label="0"];
2->7 [style = dashed, label="0"];
11->9 [style = bold, label=""];
3->9 [style = dashed, label="0"];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
6->2 [style = bold, label=""];
}
