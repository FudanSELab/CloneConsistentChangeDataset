digraph {
9 [style = filled, label = "testAutoCreationMultiplePatternsWithWildcards['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ClusterState clusterState = ClusterState.builder(new ClusterName(\"test\")).metadata(Metadata.builder()).build()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "ClusterState clusterState = ClusterState.builder(new ClusterName(\"test\")).metaData(MetaData.builder()).build()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "AutoCreateIndex autoCreateIndex = newAutoCreateIndex(settings)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(autoCreateIndex.shouldAutoCreate(\"index\" + randomAlphaOfLengthBetween(1,5),clusterState),equalTo(true))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Settings settings = Settings.builder().put(AutoCreateIndex.AUTO_CREATE_INDEX_SETTING.getKey(),randomFrom(\"+index*\",\"index*\")).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expectNotMatch(clusterState,autoCreateIndex,\"does_not_match\" + randomAlphaOfLengthBetween(1,5))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testAutoCreationPatternEnabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(autoCreateIndex.shouldAutoCreate(\"test\" + randomAlphaOfLengthBetween(1,5),clusterState),equalTo(true))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Settings settings = Settings.builder().put(AutoCreateIndex.AUTO_CREATE_INDEX_SETTING.getKey(),randomFrom(\"+test*,-index*\",\"test*,-index*\")).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "expectForbidden(clusterState,autoCreateIndex,\"index\" + randomAlphaOfLengthBetween(1,5),\"-index*\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "expectNotMatch(clusterState,autoCreateIndex,\"does_not_match\" + randomAlphaOfLengthBetween(1,5))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testAutoCreationPatternEnabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
1->10 [style = solid, label="clusterState"];
7->3 [style = solid, label="clusterState"];
6->0 [style = bold, label=""];
7->4 [style = bold, label=""];
1->12 [style = solid, label="clusterState"];
9->8 [style = bold, label=""];
1->4 [style = solid, label="clusterState"];
4->12 [style = dashed, label="0"];
5->1 [style = bold, label=""];
2->0 [style = bold, label=""];
12->10 [style = bold, label=""];
8->5 [style = bold, label=""];
1->3 [style = solid, label="clusterState"];
1->11 [style = solid, label="clusterState"];
5->12 [style = solid, label="autoCreateIndex"];
1->12 [style = bold, label=""];
8->5 [style = solid, label="settings"];
5->7 [style = bold, label=""];
0->8 [style = dashed, label="0"];
0->5 [style = solid, label="settings"];
1->7 [style = dashed, label="0"];
5->11 [style = solid, label="autoCreateIndex"];
5->3 [style = solid, label="autoCreateIndex"];
7->4 [style = solid, label="clusterState"];
0->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
