digraph {
5 [style = filled, label = "TestHelper.assertExpectedResults(expectedResults,runner.run(QueryPlus.wrap(query),context))@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TimeseriesQuery query = makeTimeseriesQuery()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testTimeSeries2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "TimeseriesQuery query = makeFilteredTimeseriesQuery()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "QueryRunner runner = TestQueryRunners.makeTimeSeriesQueryRunner(segment2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testTimeSeries2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TestHelper.assertExpectedResults(expectedResults,runner.run(QueryPlus.wrap(query)))@@@6@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testFilteredTimeSeries2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "HashMap<String,Object> context = new HashMap<String,Object>()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<Result<TimeseriesResultValue>> expectedResults = Collections.singletonList(new Result<TimeseriesResultValue>(DateTimes.of(\"2011-01-12T00:00:00.000Z\"),new TimeseriesResultValue(ImmutableMap.builder().put(\"rows\",4L).put(\"index\",400.0D).put(\"addRowsIndexConstant\",405.0D).put(\"uniques\",0.0D).put(\"maxIndex\",100.0D).put(\"minIndex\",100.0D).build())))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<Result<TimeseriesResultValue>> expectedResults = Collections.singletonList(new Result<TimeseriesResultValue>(DateTimes.of(\"2011-01-12T00:00:00.000Z\"),new TimeseriesResultValue(ImmutableMap.builder().put(\"rows\",7L).put(\"index\",500.0D).put(\"addRowsIndexConstant\",508.0D).put(\"uniques\",0.0D).put(\"maxIndex\",100.0D).put(\"minIndex\",0.0D).build())))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
4->5 [style = solid, label="context"];
1->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
10->9 [style = bold, label=""];
3->5 [style = solid, label="expectedResults"];
3->1 [style = bold, label=""];
8->2 [style = bold, label=""];
9->8 [style = bold, label=""];
1->6 [style = solid, label="query"];
2->4 [style = bold, label=""];
4->5 [style = bold, label=""];
2->6 [style = bold, label=""];
9->5 [style = solid, label="expectedResults"];
8->5 [style = solid, label="query"];
7->3 [style = bold, label=""];
3->9 [style = dashed, label="0"];
3->6 [style = solid, label="expectedResults"];
1->5 [style = solid, label="query"];
}
