digraph {
22 [style = filled, label = "String poolName = \"testRegionEvents\"@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "cqDUnitTest.createServer(server)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "cqDUnitTest.executeCQ(client,\"testRegionEvents_0\",false,null)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "cqDUnitTest.validateCQCount(client,1)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Host host = Host.getHost(0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "VM client = host.getVM(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "server.invoke(new CacheSerializableRunnable(\"testRegionEvents\"){@Override public void run2(){LogWriterUtils.getLogWriter().info(\"### Destroying the region on the server ###\")Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions(1()for (int i = 1 i <= 5 i++){region.put(CqQueryUsingPoolDUnitTest.KEY + i,new Portfolio(i))}region.destroyRegion()}})@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "cqDUnitTest.waitForRegionClear(client,\"testRegionEvents_0\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cqDUnitTest.executeCQ(client,\"testRegionEvents_0\",false,null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testRegionEvents['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "cqDUnitTest.createCQ(client,poolName,\"testRegionEvents_1\",cqDUnitTest.cqs(2()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "cqDUnitTest.waitForRegionInvalidate(client,\"testRegionEvents_0\")@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "cqDUnitTest.closeClient(client)@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Wait.pause(1000)@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "cqDUnitTest.createCQ(client,poolName,\"testRegionEvents_0\",cqDUnitTest.cqs(0()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "cqDUnitTest.executeCQ(client,\"testRegionEvents_1\",false,null)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "server.invoke(new CacheSerializableRunnable(\"testRegionEvents\"){@Override public void run2(){LogWriterUtils.getLogWriter().info(\"### Invalidate the region on the server ###\")Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions(0()for (int i = 1 i <= 5 i++){region.put(CqQueryUsingPoolDUnitTest.KEY + i,new Portfolio(i))}region.invalidateRegion()}})@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "cqDUnitTest.waitForRegionClear(client,\"testRegionEvents_0\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String host0 = NetworkUtils.getServerHostName(server.getHost())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "cqDUnitTest.closeServer(server)@@@59@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "server.invoke(new CacheSerializableRunnable(\"testRegionEvents\"){@Override public void run2(){LogWriterUtils.getLogWriter().info(\"### Clearing the region on the server ###\")Region region = getCache().getRegion(\"/root/\" + cqDUnitTest.regions(0()for (int i = 1 i <= 5 i++){region.put(CqQueryUsingPoolDUnitTest.KEY + i,new Portfolio(i))}region.clear()}})@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "cqDUnitTest.waitForRegionInvalidate(client,\"testRegionEvents_0\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Wait.pause(1000)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cqDUnitTest.createClient(client,port,host0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "VM server = host.getVM(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "cqDUnitTest.createPool(client,poolName,host0,port)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final int port = server.invoke(null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testRegionEvents['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cqDUnitTest.executeCQ(client,\"testRegionEvents_1\",false,null)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final int port = server.invoke(null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testRegionEvents['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "cqDUnitTest.createCQ(client,\"testRegionEvents_0\",cqDUnitTest.cqs(0()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->16 [style = bold, label=""];
13->11 [style = solid, label="client"];
11->3 [style = bold, label=""];
20->23 [style = bold, label=""];
14->7 [style = bold, label=""];
29->3 [style = bold, label=""];
13->6 [style = solid, label="client"];
15->1 [style = bold, label=""];
2->4 [style = bold, label=""];
17->24 [style = solid, label="server"];
13->10 [style = solid, label="client"];
13->4 [style = solid, label="client"];
23->10 [style = bold, label=""];
25->2 [style = bold, label=""];
17->14 [style = solid, label="server"];
13->20 [style = solid, label="client"];
18->24 [style = bold, label=""];
16->18 [style = bold, label=""];
7->28 [style = dashed, label="0"];
17->18 [style = solid, label="server"];
7->15 [style = solid, label="port"];
22->27 [style = bold, label=""];
20->8 [style = bold, label=""];
9->0 [style = bold, label=""];
6->20 [style = bold, label=""];
3->25 [style = dashed, label="0"];
22->29 [style = solid, label="poolName"];
1->11 [style = bold, label=""];
12->31 [style = bold, label=""];
27->29 [style = bold, label=""];
14->28 [style = bold, label=""];
13->25 [style = solid, label="client"];
28->27 [style = solid, label="port"];
13->2 [style = solid, label="client"];
22->25 [style = solid, label="poolName"];
31->23 [style = solid, label="i"];
1->27 [style = dashed, label="0"];
13->3 [style = solid, label="client"];
17->13 [style = bold, label=""];
30->12 [style = bold, label=""];
13->15 [style = solid, label="client"];
3->19 [style = bold, label=""];
13->29 [style = solid, label="client"];
3->25 [style = bold, label=""];
31->20 [style = bold, label=""];
12->20 [style = solid, label="i"];
4->12 [style = bold, label=""];
0->17 [style = bold, label=""];
28->5 [style = bold, label=""];
5->22 [style = bold, label=""];
2->30 [style = bold, label=""];
5->27 [style = solid, label="host0"];
7->5 [style = bold, label=""];
30->31 [style = solid, label="i"];
13->1 [style = solid, label="client"];
19->2 [style = bold, label=""];
13->27 [style = solid, label="client"];
13->14 [style = bold, label=""];
21->0 [style = bold, label=""];
13->19 [style = solid, label="client"];
22->27 [style = solid, label="poolName"];
13->12 [style = solid, label="client"];
8->10 [style = bold, label=""];
13->16 [style = solid, label="client"];
26->0 [style = bold, label=""];
2->12 [style = solid, label="i"];
12->6 [style = bold, label=""];
5->15 [style = bold, label=""];
5->15 [style = solid, label="host0"];
13->18 [style = solid, label="client"];
}
