digraph {
28 [style = filled, label = "testWriteFinalProcTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "processRequestWithWait(req1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "checkTimeMetric((long)values.get(\"max_local_write_committed_time_ms\"),0L,1000L)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "setupProcessors(0,0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Request req1 = createWriteRequest(1l,2)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "commitWithWait(req2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "checkTimeMetric((long)values.get(\"max_local_write_committed_time_ms\"),0L,1000L)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Request req2 = createWriteRequest(1L,2)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "setupProcessors(0,1000)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "values = MetricsUtils.currentServerMetrics()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "checkTimeMetric((long)values.get(\"max_local_write_committed_time_ms\"),0l,1000l)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(1L,values.get(\"cnt_local_write_committed_time_ms\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Thread.sleep(1000)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Request req2 = createWriteRequest(1l,2)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "testLocalWriteCommittedTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "processRequestWithWait(req2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(1L,values.get(\"cnt_local_write_committed_time_ms\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "checkTimeMetric((long)values.get(\"max_local_write_committed_time_ms\"),0L,1000L)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "commitWithWait(req1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Request req1 = createWriteRequest(1L,2)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "commitWithWait(req1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(0L,values.get(\"cnt_write_final_proc_time_ms\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Map<String,Object> values = MetricsUtils.currentServerMetrics()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testLocalWriteCommittedTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(1L,values.get(\"cnt_write_final_proc_time_ms\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(2L,values.get(\"cnt_local_write_committed_time_ms\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "checkTimeMetric((long)values.get(\"max_write_final_proc_time_ms\"),1000L,2000L)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "values = MetricsUtils.currentServerMetrics()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(2L,values.get(\"cnt_local_write_committed_time_ms\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10->22 [style = bold, label=""];
4->10 [style = bold, label=""];
5->10 [style = bold, label=""];
10->18 [style = bold, label=""];
9->0 [style = solid, label="req2"];
2->20 [style = dashed, label="0"];
9->0 [style = bold, label=""];
0->6 [style = bold, label=""];
2->5 [style = solid, label="req1"];
1->26 [style = dashed, label="0"];
8->15 [style = dashed, label="0"];
3->14 [style = bold, label=""];
18->15 [style = bold, label=""];
23->26 [style = bold, label=""];
7->20 [style = bold, label=""];
15->19 [style = bold, label=""];
2->4 [style = bold, label=""];
19->0 [style = solid, label="req2"];
25->2 [style = bold, label=""];
12->7 [style = bold, label=""];
14->1 [style = bold, label=""];
19->0 [style = bold, label=""];
20->4 [style = bold, label=""];
19->11 [style = solid, label="req2"];
17->7 [style = bold, label=""];
9->19 [style = dashed, label="0"];
14->23 [style = dashed, label="0"];
10->13 [style = bold, label=""];
20->4 [style = solid, label="req1"];
11->3 [style = bold, label=""];
7->2 [style = bold, label=""];
1->16 [style = dashed, label="0"];
6->11 [style = bold, label=""];
9->11 [style = solid, label="req2"];
20->5 [style = solid, label="req1"];
8->9 [style = bold, label=""];
7->25 [style = dashed, label="0"];
21->16 [style = bold, label=""];
28->25 [style = bold, label=""];
3->21 [style = bold, label=""];
14->21 [style = dashed, label="0"];
27->23 [style = bold, label=""];
2->4 [style = solid, label="req1"];
22->24 [style = bold, label=""];
13->18 [style = dashed, label="0"];
13->8 [style = bold, label=""];
2->24 [style = solid, label="req1"];
13->22 [style = dashed, label="0"];
4->5 [style = bold, label=""];
24->27 [style = bold, label=""];
}
