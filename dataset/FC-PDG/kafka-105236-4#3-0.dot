digraph {
13 [style = filled, label = "classLoaderUsage@@@7@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "converterConfig.put(ConverterConfig.TYPE_CONFIG,ConverterType.HEADER.getName())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "ClassNotFoundException e@@@15@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "throw new ConnectException(\"Failed to find any class that implements Converter and which name matches \" + converterClassOrAlias + \", available converters are: \" + pluginNames(delegatingLoader.converters()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return null@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "ClassNotFoundException e@@@7@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String configPrefix = classPropertyName + \".\"@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Map<String,Object> converterConfig = config.originalsWithPrefix(configPrefix)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "HeaderConverter plugin = null@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "newHeaderConverter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String converterClassOrAlias@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "!config.originals().containsKey(classPropertyName)@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "plugin == null@@@20@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Class<? extends HeaderConverter> klass@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "plugin = getInstance(config,classPropertyName,)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "klass = pluginClass(delegatingLoader,converterClassOrAlias,)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "klass = pluginClass(delegatingLoader,converterClassOrAlias,)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "AbstractConfig config@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "throw new ConnectException(\"Failed to find any class that implements HeaderConverter and which name matches \" + converterClassOrAlias + \", available header converters are: \" + pluginNames(delegatingLoader.converters()))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "throw new ConnectException(\"Unable to instantiate the Converter specified in '\" + classPropertyName + \"'\")@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "newConverter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "String converterClassOrAlias = config.getClass(classPropertyName).getName()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "return plugin@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "String classPropertyName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "plugin = newPlugin(klass)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "klass = pluginClass(delegatingLoader,converterClassOrAlias,)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "ClassLoaderUsage classLoaderUsage@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "AbstractConfig config@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "AbstractConfig config@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "plugin.configure(converterConfig)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "String converterClassOrAlias@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Class<? extends HeaderConverter> klass@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "throw new ConnectException(\"Failed to find any class that implements HeaderConverter and which name matches \" + converterClassOrAlias + \", available header converters are: \" + pluginNames(delegatingLoader.headerConverters()))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "newHeaderConverter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "return config != null? newConfiguredPlugin(config,klass): newPlugin(klass)@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Class<? extends Converter> klass@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
13->25 [style = bold, label=""];
29->8 [style = bold, label=""];
27->18 [style = bold, label=""];
33->30 [style = solid, label="converterClassOrAlias"];
28->15 [style = solid, label="plugin"];
4->35 [style = bold, label=""];
13->17 [style = dotted, label="true"];
22->19 [style = dotted, label="true"];
11->27 [style = solid, label="classPropertyName"];
7->3 [style = solid, label="klass"];
13->28 [style = dotted, label="true"];
35->3 [style = bold, label=""];
3->28 [style = dashed, label="0"];
25->22 [style = bold, label=""];
22->19 [style = bold, label=""];
13->25 [style = dotted, label="true"];
28->22 [style = solid, label="plugin"];
25->15 [style = solid, label="plugin"];
4->0 [style = dotted, label="true"];
4->35 [style = dotted, label="true"];
6->1 [style = dotted, label="true"];
16->20 [style = dotted, label="true"];
1->7 [style = solid, label="converterClassOrAlias"];
16->23 [style = bold, label=""];
9->21 [style = dotted, label="true"];
31->3 [style = solid, label="config"];
32->30 [style = bold, label=""];
5->32 [style = dashed, label="0"];
7->3 [style = bold, label=""];
21->28 [style = bold, label=""];
4->0 [style = bold, label=""];
25->22 [style = solid, label="plugin"];
30->3 [style = solid, label="klass"];
8->17 [style = bold, label=""];
14->26 [style = bold, label=""];
2->3 [style = solid, label="config"];
12->13 [style = bold, label=""];
29->17 [style = solid, label="converterClassOrAlias"];
6->5 [style = bold, label=""];
13->29 [style = bold, label=""];
17->28 [style = bold, label=""];
6->2 [style = dotted, label="true"];
23->10 [style = dotted, label="true"];
34->31 [style = dotted, label="true"];
22->27 [style = bold, label=""];
30->3 [style = bold, label=""];
13->8 [style = dotted, label="true"];
10->12 [style = bold, label=""];
0->21 [style = dashed, label="0"];
13->29 [style = dotted, label="true"];
19->27 [style = bold, label=""];
7->30 [style = dashed, label="0"];
26->15 [style = bold, label=""];
34->33 [style = dotted, label="true"];
9->21 [style = bold, label=""];
17->28 [style = solid, label="klass"];
11->25 [style = solid, label="classPropertyName"];
23->10 [style = bold, label=""];
16->24 [style = dotted, label="true"];
5->7 [style = bold, label=""];
34->32 [style = bold, label=""];
23->12 [style = bold, label=""];
2->33 [style = dashed, label="0"];
18->26 [style = solid, label="converterConfig"];
0->35 [style = dashed, label="0"];
2->24 [style = dashed, label="0"];
27->18 [style = solid, label="configPrefix"];
16->11 [style = dotted, label="true"];
20->25 [style = solid, label="config"];
18->14 [style = bold, label=""];
28->22 [style = bold, label=""];
11->19 [style = solid, label="classPropertyName"];
24->13 [style = solid, label="classLoaderUsage"];
}
