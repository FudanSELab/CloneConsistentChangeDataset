digraph {
23 [style = filled, label = "OffloadPolicies offloadPolicies = OffloadPolicies.create(driver,region,bucket,endPoint,credentialId,credentialSecret,maxBlockSizeInBytes,readBufferSizeInBytes,offloadThresholdInBytes,offloadDeletionLagInMillis,readPriority)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final Long offloadDeletionLagInMillis = 5 * MIN@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(offloadPolicies.getS3ManagedLedgerOffloadServiceEndpoint(),endPoint)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final String credentialSecret = \"test-credential-secret\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final String credentialId = \"test-credential-id\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(offloadPolicies.getS3ManagedLedgerOffloadMaxBlockSizeInBytes(),maxBlockSizeInBytes)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(offloadPolicies.getManagedLedgerOffloadDriver(),driver)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final String driver = \"aws-s3\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Long offloadThresholdInBytes = 0L@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(offloadPolicies.getS3ManagedLedgerOffloadBucket(),bucket)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(offloadPolicies.getManagedLedgerOffloadDriver(),driver)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String driver = \"google-cloud-storage\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testS3Configuration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final Long offloadThresholdInBytes = 10L * M@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(offloadPolicies.getManagedLedgerOffloadDeletionLagInMillis(),offloadDeletionLagInMillis)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(offloadPolicies.getGcsManagedLedgerOffloadBucket(),bucket)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(offloadPolicies.getManagedLedgerOffloadDeletionLagInMillis(),new Long(offloadDeletionLagInMillis))@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final String bucket = \"test-bucket\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(offloadPolicies.getGcsManagedLedgerOffloadMaxBlockSizeInBytes(),maxBlockSizeInBytes)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(offloadPolicies.getManagedLedgerOffloadThresholdInBytes(),offloadThresholdInBytes)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String region = \"test-region\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final String endPoint = \"test-endpoint\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testGcsConfiguration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final OffloadedReadPriority readPriority = OffloadedReadPriority.TIERED_STORAGE_FIRST@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Assert.assertEquals(offloadPolicies.getS3ManagedLedgerOffloadRegion(),region)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "OffloadPolicies offloadPolicies = OffloadPolicies.create(driver,region,bucket,endPoint,credentialId,credentialSecret,maxBlockSizeInBytes,readBufferSizeInBytes,offloadThresholdInBytes,offloadDeletionLagInMillis)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Integer maxBlockSizeInBytes = 5 * M@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final Long offloadDeletionLagInMillis = 5L * MIN@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final String endPoint = \"test-endpoint\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final Integer readBufferSizeInBytes = 2 * M@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testGcsConfiguration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "Assert.assertEquals(offloadPolicies.getS3ManagedLedgerOffloadReadBufferSizeInBytes(),readBufferSizeInBytes)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(offloadPolicies.getManagedLedgerOffloadedReadPriority(),readPriority)@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Assert.assertEquals(offloadPolicies.getGcsManagedLedgerOffloadRegion(),region)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(offloadPolicies.getGcsManagedLedgerOffloadReadBufferSizeInBytes(),readBufferSizeInBytes)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34->14 [style = solid, label="driver"];
14->32 [style = bold, label=""];
7->6 [style = bold, label=""];
33->34 [style = bold, label=""];
11->30 [style = dashed, label="0"];
10->0 [style = solid, label="endPoint"];
5->23 [style = solid, label="credentialSecret"];
26->30 [style = solid, label="offloadDeletionLagInMillis"];
9->7 [style = solid, label="bucket"];
32->28 [style = bold, label=""];
3->9 [style = bold, label=""];
14->8 [style = bold, label=""];
3->32 [style = solid, label="region"];
6->12 [style = bold, label=""];
17->18 [style = solid, label="readBufferSizeInBytes"];
9->28 [style = solid, label="bucket"];
3->7 [style = solid, label="region"];
17->1 [style = bold, label=""];
2->23 [style = solid, label="credentialId"];
1->11 [style = solid, label="offloadThresholdInBytes"];
17->0 [style = solid, label="readBufferSizeInBytes"];
13->21 [style = bold, label=""];
13->0 [style = bold, label=""];
1->23 [style = solid, label="offloadThresholdInBytes"];
34->0 [style = solid, label="driver"];
4->17 [style = bold, label=""];
31->26 [style = bold, label=""];
11->30 [style = bold, label=""];
3->23 [style = solid, label="region"];
5->24 [style = bold, label=""];
1->31 [style = dashed, label="0"];
12->18 [style = bold, label=""];
15->3 [style = bold, label=""];
2->0 [style = solid, label="credentialId"];
0->14 [style = bold, label=""];
13->19 [style = solid, label="offloadDeletionLagInMillis"];
3->8 [style = solid, label="region"];
15->34 [style = dashed, label="0"];
1->0 [style = solid, label="offloadThresholdInBytes"];
9->10 [style = bold, label=""];
1->13 [style = bold, label=""];
13->23 [style = solid, label="offloadDeletionLagInMillis"];
15->14 [style = solid, label="driver"];
13->26 [style = dashed, label="0"];
29->27 [style = bold, label=""];
13->0 [style = solid, label="offloadDeletionLagInMillis"];
9->23 [style = solid, label="bucket"];
7->28 [style = dashed, label="0"];
17->12 [style = solid, label="readBufferSizeInBytes"];
15->8 [style = solid, label="driver"];
24->4 [style = bold, label=""];
13->11 [style = solid, label="offloadDeletionLagInMillis"];
15->0 [style = solid, label="driver"];
27->11 [style = bold, label=""];
5->0 [style = solid, label="credentialSecret"];
5->4 [style = bold, label=""];
1->18 [style = solid, label="offloadThresholdInBytes"];
4->29 [style = solid, label="maxBlockSizeInBytes"];
4->12 [style = solid, label="maxBlockSizeInBytes"];
10->23 [style = solid, label="endPoint"];
8->32 [style = dashed, label="0"];
12->29 [style = dashed, label="0"];
11->19 [style = bold, label=""];
21->23 [style = solid, label="readPriority"];
21->20 [style = solid, label="readPriority"];
4->0 [style = solid, label="maxBlockSizeInBytes"];
8->7 [style = bold, label=""];
17->27 [style = solid, label="readBufferSizeInBytes"];
4->23 [style = solid, label="maxBlockSizeInBytes"];
3->0 [style = solid, label="region"];
6->25 [style = dashed, label="0"];
18->11 [style = bold, label=""];
25->29 [style = bold, label=""];
10->2 [style = bold, label=""];
2->5 [style = bold, label=""];
17->23 [style = solid, label="readBufferSizeInBytes"];
19->20 [style = bold, label=""];
9->0 [style = solid, label="bucket"];
24->25 [style = solid, label="endPoint"];
26->0 [style = solid, label="offloadDeletionLagInMillis"];
9->2 [style = bold, label=""];
16->15 [style = bold, label=""];
31->0 [style = solid, label="offloadThresholdInBytes"];
22->15 [style = bold, label=""];
34->3 [style = bold, label=""];
24->0 [style = solid, label="endPoint"];
9->6 [style = solid, label="bucket"];
23->8 [style = bold, label=""];
15->23 [style = solid, label="driver"];
31->11 [style = solid, label="offloadThresholdInBytes"];
21->23 [style = bold, label=""];
28->25 [style = bold, label=""];
26->0 [style = bold, label=""];
4->6 [style = solid, label="maxBlockSizeInBytes"];
17->31 [style = bold, label=""];
}
