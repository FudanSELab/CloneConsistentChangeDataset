digraph {
19 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/intermediateFolder/to_secrets_goal2/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_NOT_FOUND))}@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/intermediateFolder/to_secrets2j/master.key\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_NOT_FOUND))}@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JenkinsRule.WebClient wc = j.createWebClient()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Functions.isWindows()@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/intermediateFolder/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK))String workspaceContent = page.getWebResponse().getContentAsString()assertThat(workspaceContent,allOf(not(containsString(\"to_secrets1\")),not(containsString(\"to_secrets_goal1\")),not(containsString(\"to_secrets2\")),not(containsString(\"to_secrets_goal2\"))))}@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String script = loadContentFromResource(\"outsideWorkspaceStructure.sh\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "String script = loadContentFromResource(\"outsideWorkspaceStructureWithJunctions.bat\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "junctionAndSymlink_outsideWorkspace_areNotAllowed_windowsJunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/intermediateFolder/to_secrets_goal2/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_NOT_FOUND))}@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(Result.SUCCESS,p.scheduleBuild2(0).get().getResult())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "File secretTarget = new File(secretsFolder,\"goal.txt\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/**/*.key\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK))String workspaceContent = page.getWebResponse().getContentAsString()assertThat(workspaceContent,allOf(not(containsString(\"master.key\")),containsString(\"public1.key\"),containsString(\"public2.key\")))}@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "p.getBuildersList().add(new BatchFile(script))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String secretContent = \"secret\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "{Page zipPage = wc.goTo(p.getUrl() + \"ws/*zip*/ws.zip\",null)assertThat(zipPage.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK))List<String> entryNames = getListOfEntriesInDownloadedZip((UnexpectedPage)zipPage)assertThat(entryNames,containsInAnyOrder(\"intermediateFolder/public2.key\",\"public1.key\"))}@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "symlink_outsideWorkspace_areNotAllowed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "p.getBuildersList().add(new Shell(script))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assume.assumeTrue(Functions.isWindows())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "FileUtils.write(secretTarget,secretContent,StandardCharsets.UTF_8)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "junctionAndSymlink_outsideWorkspace_areNotAllowed_windowsJunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(Result.SUCCESS,p.scheduleBuild2(0).get().getResult())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "p.getBuildersList().add(new BatchFile(script))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "FreeStyleProject p = j.createFreeStyleProject()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "{Page zipPage = wc.goTo(p.getUrl() + \"ws/intermediateFolder/*zip*/intermediateFolder.zip\",null)assertThat(zipPage.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK))List<String> entryNames = getListOfEntriesInDownloadedZip((UnexpectedPage)zipPage)assertThat(entryNames,contains(\"public2.key\"))}@@@63@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/to_secrets_goal1/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_NOT_FOUND))}@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "File secretsFolder = new File(j.jenkins.getRootDir(),\"secrets\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/to_secrets_goal1/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_NOT_FOUND))}@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_OK))String workspaceContent = page.getWebResponse().getContentAsString()assertThat(workspaceContent,allOf(containsString(\"public1.key\"),containsString(\"intermediateFolder\"),not(containsString(\"to_secrets1\")),not(containsString(\"to_secrets_goal1\")),not(containsString(\"to_secrets2\")),not(containsString(\"to_secrets_goal2\"))))}@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String script = loadContentFromResource(\"outsideWorkspaceStructure.bat\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/intermediateFolder/to_secrets2/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_NOT_FOUND))}@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/to_secrets1/\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_NOT_FOUND))}@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "{Page page = wc.goTo(p.getUrl() + \"ws/intermediateFolder/to_secrets2/master.key\",null)assertThat(page.getWebResponse().getStatusCode(),equalTo(HttpURLConnection.HTTP_NOT_FOUND))}@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "wc.getOptions().setThrowExceptionOnFailingStatusCode(false)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->16 [style = bold, label=""];
20->23 [style = solid, label="workspaceContent"];
18->10 [style = solid, label="secretContent"];
15->3 [style = solid, label="secretsFolder"];
29->27 [style = bold, label=""];
10->32 [style = bold, label=""];
4->15 [style = solid, label="secretsFolder"];
10->31 [style = dotted, label="true"];
10->29 [style = dotted, label="false"];
9->4 [style = bold, label=""];
16->14 [style = solid, label="script"];
17->19 [style = bold, label=""];
20->5 [style = bold, label=""];
12->1 [style = bold, label=""];
22->20 [style = bold, label=""];
11->6 [style = bold, label=""];
6->22 [style = bold, label=""];
3->18 [style = bold, label=""];
14->11 [style = bold, label=""];
19->24 [style = bold, label=""];
10->28 [style = bold, label=""];
3->10 [style = solid, label="secretTarget"];
10->32 [style = dotted, label="true"];
10->28 [style = dotted, label="false"];
19->13 [style = bold, label=""];
0->23 [style = bold, label=""];
13->12 [style = bold, label=""];
5->0 [style = bold, label=""];
15->18 [style = solid, label="secretTarget"];
32->31 [style = bold, label=""];
18->10 [style = bold, label=""];
16->14 [style = bold, label=""];
12->1 [style = solid, label="entryNames"];
8->13 [style = bold, label=""];
23->7 [style = bold, label=""];
30->4 [style = bold, label=""];
15->3 [style = bold, label=""];
25->9 [style = bold, label=""];
32->31 [style = solid, label="script"];
7->17 [style = bold, label=""];
28->29 [style = bold, label=""];
27->6 [style = bold, label=""];
21->9 [style = bold, label=""];
0->2 [style = bold, label=""];
4->15 [style = bold, label=""];
24->8 [style = bold, label=""];
26->30 [style = bold, label=""];
3->18 [style = solid, label="secretContent"];
28->29 [style = solid, label="script"];
23->13 [style = solid, label="workspaceContent"];
31->27 [style = bold, label=""];
2->23 [style = bold, label=""];
}
