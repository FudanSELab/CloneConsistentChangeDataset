digraph {
15 [style = filled, label = "assertEquals(new String(serializedJson),new String(actual))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "JsonRowDataSerializationSchema serializationSchema = new JsonRowDataSerializationSchema(rowType,TimestampFormat.ISO_8601,JsonOptions.MapNullKeyMode.LITERAL,\"null\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "byte(( serializedJson = objectMapper.writeValueAsBytes(root)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "JsonRowDataDeserializationSchema deserializationSchema = new JsonRowDataDeserializationSchema(rowType,InternalTypeInfo.of(rowType),false,false,TimestampFormat.SQL)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "root.put(\"timestamp3\",\"1990-10-14 12:12:43.123\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "{ObjectNode root = objectMapper.createObjectNode()root.put(\"f1\",10)root.put(\"f2\",false)root.put(\"f3\",\"newStr\")ObjectNode map = root.putObject(\"f4\")map.put(\"hello2\",\"json\")ArrayNode array = root.putArray(\"f5\")array.add(\"element3\")array.add(\"element4\")ObjectNode row = root.putObject(\"f6\")row.put(\"f1\",\"this is row2\")row.putNull(\"f2\")byte(( serializedJson = objectMapper.writeValueAsBytes(root)RowData rowData = deserializationSchema.deserialize(serializedJson)byte(( actual = serializationSchema.serialize(rowData)assertEquals(new String(serializedJson),new String(actual))}@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "JsonRowDataSerializationSchema serializationSchema = new JsonRowDataSerializationSchema(rowType,TimestampFormat.SQL,JsonOptions.MapNullKeyMode.LITERAL,\"null\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "RowData rowData = deserializationSchema.deserialize(serializedJson)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "RowType rowType = (RowType)ROW(FIELD(\"f1\",INT()),FIELD(\"f2\",BOOLEAN()),FIELD(\"f3\",STRING()),FIELD(\"f4\",MAP(STRING(),STRING())),FIELD(\"f5\",ARRAY(STRING())),FIELD(\"f6\",ROW(FIELD(\"f1\",STRING()),FIELD(\"f2\",INT())))).getLogicalType()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testSerDeMultiRows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testSerDeMultiRows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "root.put(\"timestamp9\",\"1990-10-14 12:12:43.123456789\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "RowType rowType = (RowType)ROW(FIELD(\"timestamp3\",TIMESTAMP(3)),FIELD(\"timestamp9\",TIMESTAMP(9)),FIELD(\"timestamp_with_local_timezone3\",TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)),FIELD(\"timestamp_with_local_timezone9\",TIMESTAMP_WITH_LOCAL_TIME_ZONE(9))).getLogicalType()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "JsonRowDataDeserializationSchema deserializationSchema = new JsonRowDataDeserializationSchema(rowType,InternalTypeInfo.of(rowType),false,false,TimestampFormat.ISO_8601)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "{ObjectNode root = objectMapper.createObjectNode()root.put(\"f1\",1)root.put(\"f2\",true)root.put(\"f3\",\"str\")ObjectNode map = root.putObject(\"f4\")map.put(\"hello1\",\"flink\")ArrayNode array = root.putArray(\"f5\")array.add(\"element1\")array.add(\"element2\")ObjectNode row = root.putObject(\"f6\")row.put(\"f1\",\"this is row1\")row.put(\"f2\",12)byte(( serializedJson = objectMapper.writeValueAsBytes(root)RowData rowData = deserializationSchema.deserialize(serializedJson)byte(( actual = serializationSchema.serialize(rowData)assertEquals(new String(serializedJson),new String(actual))}@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ObjectMapper objectMapper = new ObjectMapper()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "root.put(\"timestamp_with_local_timezone3\",\"1990-10-14 12:12:43.123Z\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testSerDeSQLTimestampFormat['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "byte(( actual = serializationSchema.serialize(rowData)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ObjectNode root = objectMapper.createObjectNode()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "JsonRowDataSerializationSchema serializationSchema = new JsonRowDataSerializationSchema(rowType,TimestampFormat.ISO_8601,JsonOptions.MapNullKeyMode.LITERAL,\"null\",true)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "root.put(\"timestamp_with_local_timezone9\",\"1990-10-14 12:12:43.123456789Z\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->11 [style = solid, label="root"];
3->14 [style = bold, label=""];
1->3 [style = bold, label=""];
18->13 [style = solid, label="rowType"];
18->17 [style = bold, label=""];
12->20 [style = bold, label=""];
10->9 [style = solid, label="rowData"];
3->6 [style = bold, label=""];
14->19 [style = bold, label=""];
20->11 [style = bold, label=""];
0->17 [style = dashed, label="0"];
21->18 [style = bold, label=""];
7->3 [style = bold, label=""];
19->16 [style = bold, label=""];
0->7 [style = bold, label=""];
6->2 [style = bold, label=""];
1->13 [style = dashed, label="0"];
11->10 [style = solid, label="serializedJson"];
8->5 [style = bold, label=""];
5->0 [style = bold, label=""];
13->3 [style = bold, label=""];
11->10 [style = bold, label=""];
6->2 [style = solid, label="actual"];
0->1 [style = bold, label=""];
9->15 [style = bold, label=""];
5->7 [style = solid, label="rowType"];
5->1 [style = solid, label="rowType"];
9->15 [style = solid, label="actual"];
17->13 [style = bold, label=""];
10->9 [style = bold, label=""];
5->0 [style = solid, label="rowType"];
1->7 [style = dashed, label="0"];
4->5 [style = bold, label=""];
16->12 [style = bold, label=""];
18->17 [style = solid, label="rowType"];
11->15 [style = solid, label="serializedJson"];
}
