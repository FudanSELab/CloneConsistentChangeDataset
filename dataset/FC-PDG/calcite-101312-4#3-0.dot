digraph {
46 [style = filled, label = "a2Schema.setCacheEnabled(false)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(1))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "connection.close()@@@79@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(aSchema.getSubSchema(name),notNullValue())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(0))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Util.discard(function)@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "a2Schema.add(\"tabLe2\",table)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(2))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "testSchemaCaching['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(0))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "a2SubSchemaMap.put(\"b3\",new AbstractSchema())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "aSubSchemaMap.put(\"c\",new AbstractSchema())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final SchemaPlus a2Schema = rootSchema.add(\"a\",new AbstractSchema(){@Override protected Map<String,Schema> getSubSchemaMap(){return a2SubSchemaMap}@Override public boolean contentsHaveChangedSince(long lastCheck,long now){return changed(0(}})@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testSimpleCalciteSchema['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "aSchema.setCacheEnabled(true)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "aSubSchemaMap.put(\"b4\",new AbstractSchema())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "final SchemaPlus rootSchema = CalciteSchema.createRootSchema(false,false).plus()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assertThat(aSchema.getSubSchema(\"b\"),notNullValue())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertThat(aSchema.contentsHaveChangedSince(-1,1),equalTo(false))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(aSchema.getSubSchema(name),notNullValue())@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "changed(0( = false@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "final TableMacro function = ViewTable.viewMacro(a2Schema,\"values 1\",null,null,null)@@@77@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(1))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(2))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(4))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "aSchema.add(\"b3\",new AbstractSchema())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final SchemaPlus rootSchema = calciteConnection.getRootSchema()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "a2Schema.setCacheEnabled(true)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "aSchema.setCacheEnabled(true)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Thread.sleep(1)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "a2Schema.add(\"TABLE1\",table)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final TableInRootSchemaTest.SimpleTable table = new TableInRootSchemaTest.SimpleTable()@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final Map<String,Schema> a2SubSchemaMap = new HashMap<>()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "aSchema.setCacheEnabled(false)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final TableMacro function = ViewTable.viewMacro(a2Schema,\"values 1\",null,null)@@@77@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertThat(a2CalciteSchema.getTable(\"taBle1\",false),notNullValue())@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(a2Schema.getTableNames().size(),equalTo(4))@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(3))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(0))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(a2CalciteSchema.getTable(\"table1\",false),notNullValue())@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "a2Schema.setCacheEnabled(true)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final Connection connection = CalciteAssert.that(CalciteAssert.Config.JDBC_FOODMART).connect()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final boolean(( changed = {false}@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "aSubSchemaMap.put(\"b\",new AbstractSchema())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(aSchema.getSubSchema(\"b1\"),notNullValue())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "a2Schema.add(\"table1\",table)@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(a2CalciteSchema.getTable(\"taBle1\",true),nullValue())@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "aSubSchemaMap.put(\"b1\",new AbstractSchema())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(0))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertThat(aSchema.getSubSchema(\"c\"),notNullValue())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertThat(a2CalciteSchema.getTable(\"table1\",true),notNullValue())@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "aSchema.add(\"b\",new AbstractSchema())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "changed(0( = true@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "final Map<String,Schema> aSubSchemaMap = new HashMap<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final SchemaPlus aSchema = rootSchema.add(\"a\",new AbstractSchema(){@Override protected Map<String,Schema> getSubSchemaMap(){return aSubSchemaMap}})@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "final SchemaPlus aSchema = rootSchema.add(\"a\",new AbstractSchema(){@Override protected Map<String,Schema> getSubSchemaMap(){return aSubSchemaMap}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(aSchema.getSubSchema(\"b1\"),nullValue())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "aSchema.setCacheEnabled(false)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(0))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(2))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(1))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(2))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(aSchema.contentsHaveChangedSince(1,1),equalTo(false))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "a2Schema.add(\"tabLe1\",table)@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "a2SubSchemaMap.put(\"b4\",new AbstractSchema())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(0))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final CalciteSchema a2CalciteSchema = CalciteSchema.from(a2Schema)@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final CalciteConnection calciteConnection = connection.unwrap()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testSchemaCaching['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "final Map<String,Schema> aSubSchemaMap = new HashMap<>()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "aSubSchemaMap.put(\"b2\",new AbstractSchema())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->53 [style = bold, label=""];
29->5 [style = solid, label="a2Schema"];
18->3 [style = bold, label=""];
70->67 [style = bold, label=""];
61->66 [style = bold, label=""];
46->13 [style = bold, label=""];
61->66 [style = solid, label="aSubSchemaMap"];
41->11 [style = bold, label=""];
26->22 [style = bold, label=""];
21->38 [style = bold, label=""];
29->60 [style = solid, label="a2Schema"];
67->69 [style = bold, label=""];
53->21 [style = solid, label="table"];
8->1 [style = bold, label=""];
60->14 [style = solid, label="function"];
53->34 [style = bold, label=""];
24->17 [style = bold, label=""];
31->60 [style = bold, label=""];
20->37 [style = bold, label=""];
1->12 [style = bold, label=""];
40->29 [style = solid, label="changed"];
58->19 [style = bold, label=""];
7->69 [style = dashed, label="0"];
37->58 [style = bold, label=""];
50->18 [style = bold, label=""];
43->32 [style = bold, label=""];
31->4 [style = bold, label=""];
69->64 [style = bold, label=""];
9->8 [style = bold, label=""];
39->67 [style = dashed, label="0"];
15->35 [style = bold, label=""];
23->48 [style = bold, label=""];
6->2 [style = bold, label=""];
57->23 [style = bold, label=""];
29->20 [style = bold, label=""];
54->30 [style = solid, label="aSubSchemaMap"];
39->7 [style = bold, label=""];
16->33 [style = bold, label=""];
13->43 [style = bold, label=""];
48->28 [style = bold, label=""];
10->49 [style = bold, label=""];
49->54 [style = bold, label=""];
30->15 [style = bold, label=""];
40->29 [style = bold, label=""];
25->0 [style = bold, label=""];
66->65 [style = bold, label=""];
38->5 [style = bold, label=""];
59->27 [style = bold, label=""];
17->46 [style = bold, label=""];
4->14 [style = bold, label=""];
15->65 [style = dashed, label="0"];
35->39 [style = bold, label=""];
22->55 [style = bold, label=""];
14->42 [style = bold, label=""];
28->26 [style = bold, label=""];
56->24 [style = bold, label=""];
53->34 [style = solid, label="table"];
51->40 [style = bold, label=""];
19->47 [style = bold, label=""];
60->14 [style = bold, label=""];
34->16 [style = bold, label=""];
27->10 [style = bold, label=""];
52->6 [style = bold, label=""];
44->25 [style = bold, label=""];
7->41 [style = bold, label=""];
63->61 [style = bold, label=""];
4->14 [style = solid, label="function"];
51->29 [style = solid, label="a2SubSchemaMap"];
47->52 [style = bold, label=""];
45->9 [style = bold, label=""];
29->4 [style = solid, label="a2Schema"];
65->70 [style = bold, label=""];
3->31 [style = bold, label=""];
12->57 [style = bold, label=""];
11->45 [style = bold, label=""];
62->63 [style = bold, label=""];
54->30 [style = bold, label=""];
53->16 [style = solid, label="table"];
55->44 [style = bold, label=""];
36->27 [style = bold, label=""];
4->60 [style = dashed, label="0"];
0->51 [style = bold, label=""];
64->68 [style = bold, label=""];
2->56 [style = bold, label=""];
33->21 [style = bold, label=""];
5->50 [style = bold, label=""];
53->33 [style = solid, label="table"];
}
