digraph {
13 [style = filled, label = "ts.assertTerminated()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int j = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "asyncComeAndGo['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "TestSubscriberEx<Long> ts = new TestSubscriberEx<Long>()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "TestObserverEx<Long> to = new TestObserverEx<Long>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i < j * 10 + 10@@@26@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Observable<Long> cached = source.replay().autoConnect()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "to.awaitDone(3,TimeUnit.SECONDS)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Flowable<Long> source = Flowable.interval(1,1,TimeUnit.MILLISECONDS).take(1000).subscribeOn(Schedulers.io())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "TestSubscriberEx<Long> ts = new TestSubscriberEx<>()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "List<TestSubscriberEx<Long>> list = new ArrayList<>(100)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "List<Long> expected = new ArrayList<Long>()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ts.assertValueSequence(expected)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "List<Long> expected = new ArrayList<>()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "i < 100@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Flowable<Long> cached = source.replay().autoConnect()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i++@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "asyncComeAndGo['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "List<TestObserverEx<Long>> list = new ArrayList<TestObserverEx<Long>>(100)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "output.skip(i * 10).take(10).subscribe(ts)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "to.assertNoErrors()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Observable<Long> output = cached.observeOn(Schedulers.computation())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "j++@@@31@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "output.skip(i * 10).take(10).subscribe(to)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "asyncComeAndGo['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Flowable<Long> output = cached.observeOn(Schedulers.computation(),false,1024)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "list.add(ts)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "to.assertTerminated()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expected.set(i - j * 10,(long)i)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ts.awaitDone(3,TimeUnit.SECONDS)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "list.add(to)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "i < 10@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expected.add((long)(i - 10))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = j * 10@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "to.assertValueSequence(expected)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ts.assertNoErrors()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Observable<Long> source = Observable.interval(1,1,TimeUnit.MILLISECONDS).take(1000).subscribeOn(Schedulers.io())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<TestSubscriberEx<Long>> list = new ArrayList<TestSubscriberEx<Long>>(100)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32->22 [style = bold, label=""];
18->7 [style = solid, label="i"];
25->2 [style = solid, label="i"];
22->25 [style = solid, label="i"];
18->23 [style = solid, label="i"];
21->8 [style = bold, label=""];
24->3 [style = solid, label="i"];
3->35 [style = dotted, label="true"];
3->6 [style = dotted, label="true"];
6->35 [style = dashed, label="0"];
3->27 [style = bold, label=""];
22->9 [style = solid, label="i"];
3->35 [style = bold, label=""];
16->3 [style = solid, label="i"];
19->5 [style = bold, label=""];
19->34 [style = dashed, label="0"];
21->22 [style = solid, label="j"];
21->31 [style = bold, label=""];
29->14 [style = bold, label=""];
31->40 [style = bold, label=""];
13->22 [style = bold, label=""];
8->4 [style = bold, label=""];
37->33 [style = bold, label=""];
2->25 [style = bold, label=""];
24->16 [style = solid, label="i"];
16->3 [style = bold, label=""];
26->17 [style = bold, label=""];
3->29 [style = dotted, label="true"];
9->2 [style = bold, label=""];
5->9 [style = solid, label="j"];
27->19 [style = solid, label="expected"];
22->9 [style = bold, label=""];
22->2 [style = solid, label="i"];
33->41 [style = bold, label=""];
6->14 [style = solid, label="ts"];
25->9 [style = solid, label="i"];
13->32 [style = dashed, label="0"];
41->30 [style = bold, label=""];
5->2 [style = solid, label="j"];
0->41 [style = dashed, label="0"];
7->23 [style = dotted, label="true"];
20->23 [style = bold, label=""];
38->37 [style = bold, label=""];
1->16 [style = bold, label=""];
10->0 [style = bold, label=""];
21->2 [style = solid, label="j"];
28->24 [style = bold, label=""];
36->16 [style = bold, label=""];
23->7 [style = bold, label=""];
35->39 [style = solid, label="to"];
18->7 [style = bold, label=""];
3->1 [style = dotted, label="true"];
24->3 [style = bold, label=""];
3->29 [style = bold, label=""];
17->10 [style = bold, label=""];
27->18 [style = bold, label=""];
30->24 [style = bold, label=""];
21->5 [style = solid, label="j"];
4->13 [style = bold, label=""];
25->9 [style = bold, label=""];
12->17 [style = bold, label=""];
35->39 [style = bold, label=""];
14->39 [style = dashed, label="0"];
0->11 [style = bold, label=""];
3->6 [style = bold, label=""];
18->20 [style = solid, label="i"];
7->20 [style = bold, label=""];
11->24 [style = bold, label=""];
3->14 [style = dotted, label="true"];
23->20 [style = solid, label="i"];
40->32 [style = bold, label=""];
9->19 [style = bold, label=""];
6->1 [style = solid, label="ts"];
35->36 [style = solid, label="to"];
21->9 [style = solid, label="j"];
5->8 [style = bold, label=""];
29->14 [style = solid, label="ts"];
34->5 [style = bold, label=""];
3->36 [style = dotted, label="true"];
10->33 [style = dashed, label="0"];
3->15 [style = bold, label=""];
15->18 [style = bold, label=""];
14->1 [style = bold, label=""];
9->25 [style = dotted, label="true"];
7->20 [style = dotted, label="true"];
6->14 [style = bold, label=""];
11->28 [style = dashed, label="0"];
6->29 [style = dashed, label="0"];
1->36 [style = dashed, label="0"];
5->31 [style = bold, label=""];
3->39 [style = dotted, label="true"];
15->19 [style = solid, label="expected"];
29->1 [style = solid, label="ts"];
5->22 [style = solid, label="j"];
9->2 [style = dotted, label="true"];
7->21 [style = bold, label=""];
23->7 [style = solid, label="i"];
15->27 [style = dashed, label="0"];
15->34 [style = solid, label="expected"];
17->37 [style = dashed, label="0"];
8->31 [style = dashed, label="0"];
11->30 [style = dashed, label="0"];
4->40 [style = dashed, label="0"];
39->36 [style = bold, label=""];
3->16 [style = dotted, label="true"];
0->28 [style = bold, label=""];
9->34 [style = bold, label=""];
}
