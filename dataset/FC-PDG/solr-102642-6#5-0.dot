digraph {
21 [style = filled, label = "i < NUM_NODES@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Builders.NodeBuilder nodeBuilder = clusterBuilder.getLiveNodeBuilders().get(i)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "PlacementContext placementContext = clusterBuilder.buildPlacementContext()@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(4,pp.getReplicaPlacements().size())@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "PlacementPlan pp = plugin.computePlacement(placementRequest,placementContext)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "testAvailabilityZones['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Builders.ClusterBuilder clusterBuilder = Builders.newClusterBuilder().initializeLiveNodes(NUM_NODES)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "AttributeFetcher attributeFetcher = clusterBuilder.buildAttributeFetcher()@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "nodeBuilder.setFreeDiskGB(100.0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "AttributeValues attributeValues = attributeFetcher.fetchAttributes()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "String collectionName = \"azCollection\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "PlacementRequestImpl placementRequest = new PlacementRequestImpl(solrCollection,StreamSupport.stream(solrCollection.shards().spliterator(),false).map(null).collect(Collectors.toSet()),cluster.getLiveNodes(),2,2,2)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Cluster cluster = clusterBuilder.build()@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Cluster cluster = placementContext.getCluster()@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "i < NUM_NODES / 2@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "nodeBuilder.setFreeDiskGB(1.0)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(12,pp.getReplicaPlacements().size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "nodeBuilder.setCoreCount(0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i == 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "replicas.forEach(null)@@@39@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "PlacementPlanFactory placementPlanFactory = new PlacementPlanFactoryImpl()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "clusterBuilder.addCollection(collectionBuilder)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Builders.CollectionBuilder collectionBuilder = Builders.newCollectionBuilder(collectionName)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "String az = azOptional.get()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Node smallNode = null@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testFreeDiskConstraints['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Map<Replica.ReplicaType,Map<String,Map<String,AtomicInteger>>> replicas = new HashMap<>()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testFreeDiskConstraints['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "SolrCollection solrCollection = cluster.getCollection(collectionName)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "PlacementPlan pp = plugin.computePlacement(cluster,placementRequest,attributeFetcher,placementPlanFactory)@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "replicas.computeIfAbsent(rp.getReplicaType(),null).computeIfAbsent(rp.getShardName(),null).computeIfAbsent(az,null).incrementAndGet()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.AVAILABILITY_ZONE_SYSPROP,\"az2\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Optional<String> azOptional = attributeValues.getSystemProperty(rp.getNode(),AffinityPlacementFactory.AVAILABILITY_ZONE_SYSPROP)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SolrCollection solrCollection = cluster.getCollection(collectionName)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertFalse(\"should not put any replicas on \" + smallNode,rp.getNode().equals(smallNode))@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.AVAILABILITY_ZONE_SYSPROP,\"az1\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "fail(\"missing AZ sysprop for node \" + rp.getNode())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "collectionBuilder.initializeShardsReplicas(2,0,0,0,clusterBuilder.getLiveNodeBuilders())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "int NUM_NODES = 6@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int NUM_NODES = 3@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "smallNode = nodeBuilder.build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "nodeBuilder.setFreeDiskGB(100.0)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String collectionName = \"freeDiskCollection\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "!azOptional.isPresent()@@@33@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(4,pp.getReplicaPlacements().size())@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFalse(\"should not put any replicas on \" + smallNode,rp.getNode().equals(smallNode))@@@31@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13->12 [style = solid, label="attributeFetcher"];
7->24 [style = bold, label=""];
15->29 [style = solid, label="placementRequest"];
19->45 [style = solid, label="i"];
45->32 [style = bold, label=""];
33->47 [style = bold, label=""];
23->12 [style = solid, label="cluster"];
43->42 [style = bold, label=""];
4->2 [style = bold, label=""];
5->17 [style = bold, label=""];
11->27 [style = bold, label=""];
40->12 [style = solid, label="placementRequest"];
13->12 [style = bold, label=""];
45->46 [style = bold, label=""];
18->21 [style = solid, label="i"];
7->40 [style = bold, label=""];
35->37 [style = bold, label=""];
11->23 [style = bold, label=""];
16->6 [style = bold, label=""];
15->13 [style = bold, label=""];
18->21 [style = bold, label=""];
43->7 [style = solid, label="collectionName"];
21->14 [style = dotted, label="true"];
14->10 [style = bold, label=""];
33->47 [style = dotted, label="true"];
36->35 [style = bold, label=""];
10->5 [style = bold, label=""];
31->34 [style = bold, label=""];
10->9 [style = dotted, label="false"];
31->44 [style = bold, label=""];
27->28 [style = bold, label=""];
14->39 [style = bold, label=""];
20->18 [style = bold, label=""];
4->36 [style = dashed, label="0"];
18->10 [style = solid, label="i"];
21->8 [style = bold, label=""];
6->20 [style = bold, label=""];
0->24 [style = solid, label="collectionName"];
1->14 [style = bold, label=""];
17->25 [style = solid, label="smallNode"];
8->3 [style = bold, label=""];
21->45 [style = dotted, label="true"];
37->34 [style = bold, label=""];
40->15 [style = bold, label=""];
7->24 [style = solid, label="solrCollection"];
16->42 [style = dashed, label="0"];
0->8 [style = solid, label="collectionName"];
46->19 [style = bold, label=""];
9->46 [style = dashed, label="0"];
24->12 [style = solid, label="placementRequest"];
47->38 [style = bold, label=""];
38->31 [style = bold, label=""];
15->29 [style = bold, label=""];
9->19 [style = bold, label=""];
23->27 [style = dashed, label="0"];
6->18 [style = bold, label=""];
0->43 [style = dashed, label="0"];
18->45 [style = solid, label="i"];
22->0 [style = bold, label=""];
18->1 [style = solid, label="i"];
17->19 [style = bold, label=""];
12->4 [style = bold, label=""];
19->1 [style = solid, label="i"];
21->1 [style = dotted, label="true"];
34->33 [style = bold, label=""];
21->39 [style = dotted, label="true"];
21->10 [style = dotted, label="true"];
15->12 [style = solid, label="placementPlanFactory"];
39->45 [style = bold, label=""];
42->6 [style = bold, label=""];
16->21 [style = solid, label="NUM_NODES"];
8->11 [style = solid, label="collectionBuilder"];
0->7 [style = solid, label="collectionName"];
17->2 [style = solid, label="smallNode"];
33->38 [style = bold, label=""];
21->1 [style = bold, label=""];
42->45 [style = solid, label="NUM_NODES"];
29->30 [style = bold, label=""];
24->15 [style = solid, label="solrCollection"];
45->46 [style = dotted, label="false"];
3->11 [style = bold, label=""];
18->19 [style = solid, label="i"];
45->32 [style = dotted, label="true"];
24->40 [style = dashed, label="0"];
10->9 [style = bold, label=""];
24->15 [style = bold, label=""];
41->43 [style = bold, label=""];
27->29 [style = solid, label="placementContext"];
43->8 [style = solid, label="collectionName"];
30->25 [style = bold, label=""];
42->21 [style = solid, label="NUM_NODES"];
7->40 [style = solid, label="solrCollection"];
19->21 [style = bold, label=""];
28->24 [style = bold, label=""];
19->10 [style = solid, label="i"];
20->25 [style = solid, label="smallNode"];
16->6 [style = solid, label="NUM_NODES"];
21->19 [style = dotted, label="true"];
23->7 [style = bold, label=""];
17->32 [style = dashed, label="0"];
20->2 [style = solid, label="smallNode"];
42->6 [style = solid, label="NUM_NODES"];
10->17 [style = dotted, label="true"];
12->36 [style = bold, label=""];
19->21 [style = solid, label="i"];
32->19 [style = bold, label=""];
26->0 [style = bold, label=""];
10->5 [style = dotted, label="true"];
0->16 [style = bold, label=""];
}
