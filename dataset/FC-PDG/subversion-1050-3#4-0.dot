digraph {
6 [style = filled, label = "expectedDiffOutput = NL + \"Property changes on: A\" + NL + underSepLine + \"Added: testprop\" + NL + \"## -0,0 +1 ##\" + NL + \"+Test property value.\" + NL@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "ClientException e@@@70@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "client.revert(wcPath,Depth.infinity,null)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "fail(\"This test should fail because iotaPath is not a child of \" + \"the relativeToDir parameter\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String revisionPrefix = \"While processing operativeRevison=\" + operativeRevision + \". \"@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "expectedDiffOutput = \"Index: iota\" + NL + sepLine + \"--- iota(revision \" + operativeRevision + \")\" + NL + \"+++ iota(working copy)\" + NL + expectedDiffBody@@@74@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "client.propertyCreate(iotaPath,\"svn:eol-style\",\"native\",false)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "fail(revisionPrefix + e.getMessage())@@@81@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "client.diff(aPath,Revision.BASE,aPath,Revision.WORKING,wcPath,diffOutput.getPath(),Depth.infinity,null,true,true,false)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,\"/non/existent/path\",diffOutput.getPath(),Depth.infinity,null,true,true,false,false)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "PrintWriter writer = new PrintWriter(new FileOutputStream(iotaPath))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "ClientException e@@@62@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "writer.close()@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@85@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "Set<String> paths = new HashSet<String>(1)@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
80 [style = filled, label = "addExpectedCommitItem(thisTest.getWCPath(),thisTest.getUrl(),\"iota\",NodeKind.file,CommitItemStateFlags.PropMods)@@@49@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "String(( paths = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a1714@@@47@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,null,diffOutput.getPath(),Depth.files,null,true,true,false,false)@@@58@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "String aPath = fileToSVNPath(new File(thisTest.getWCPath() + \"/A\"),false)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "client.diff(aPath,Revision.BASE,aPath,Revision.WORKING,aPath,diffOutput.getPath(),Depth.infinity,null,true,true,false,false)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "expectedDiffOutput = \"Index: iota\" + NL + sepLine + \"--- iota(revision \" + operativeRevision + \")\" + NL + \"+++ iota(working copy)\" + NL + expectedDiffBody@@@73@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "ClientException e@@@71@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "diffOutput.delete()@@@86@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "client.propertySet(aPath,\"testprop\",\"Test property value.\",Depth.empty,null,false,null)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "String expectedDiffOutput = \"Index: iota\" + NL + sepLine + \"--- iota(.../iota)(revision 1)\" + NL + \"+++ iota(.../A/mu)(revision 1)\" + NL + expectedDiffBody@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "writer.print(\"This is the file 'mu'.\")@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final String iotaPath = thisTest.getWCPath().replace('\','/') + \"/iota\"@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "expectedDiffOutput = \"Index: \" + iotaPath + NL + sepLine + \"--- \" + iotaPath + \"(revision \" + operativeRevision + \")\" + NL + \"+++ \" + iotaPath + \"(working copy)\" + NL + expectedDiffBody@@@57@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,diffOutput.getPath(),false,true,true,false)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "client.revert(wcPath,true)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "addExpectedCommitItem(thisTest.getWCPath(),thisTest.getUrl(),\"iota\",NodeKind.file,CommitItemStateFlags.PropMods)@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "{}@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "client.propertySet(aPath,\"testprop\",\"Test property value.\",false)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "client.diff(aPath,Revision.BASE,aPath,Revision.WORKING,aPath,diffOutput.getPath(),Depth.infinity,null,true,true,false)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "writer = new PrintWriter(new FileOutputStream(iotaPath))@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,wcPath + \"/\",diffOutput.getPath(),Depth.infinity,null,true,true,false,false)@@@83@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Exception ignored@@@22@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "diffOutput.delete()@@@61@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.diff(thisTest.getUrl() + \"/iota\",Revision.HEAD,thisTest.getUrl() + \"/A/mu\",Revision.HEAD,null,diffOutput.getPath(),Depth.files,null,true,true,false,false)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "operativeRevision == 2@@@45@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "final String underSepLine = \"___________________________________________________________________\" + NL@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final String expectedDiffBody = \"@@ -1 +1 @@\" + NL + \"-This is the file 'iota'.\" + NL + \"\ No newline at end of file\" + NL + \"+This is the file 'mu'.\" + NL + \"\ No newline at end of file\" + NL@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "client.diff(thisTest.getUrl() + \"/iota\",Revision.HEAD,new Revision.Number(operativeRevision),Revision.HEAD,diffOutput.getPath(),false,true,true,false)@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "ClientException e@@@79@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "ClientException e@@@80@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "writer.print(\"This is the file 'mu'.\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "client.commit(paths,\"Set svn:eol-style to native\",Depth.empty,false,false,null,null)@@@51@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "writer.close()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final String wcPath = fileToSVNPath(new File(thisTest.getWCPath()),false)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "client.diff(aPath,Revision.BASE,aPath,Revision.WORKING,wcPath,diffOutput.getPath(),Depth.infinity,null,true,true,false,false)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,wcPath + \"/\",diffOutput.getPath(),Depth.infinity,null,true,true,false)@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "fail(revisionPrefix + e.getMessage())@@@72@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testDiff['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "client.propertySet(aPath,\"testprop\",\"Test property value.\",Depth.empty,null,false,null)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "{}@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@77@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',\"\",diffOutput)@@@68@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "client.diff(thisTest.getUrl() + \"/iota\",Revision.HEAD,thisTest.getUrl() + \"/A/mu\",Revision.HEAD,diffOutput.getPath(),false,true,true,false)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "ClientException e@@@88@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "fail(revisionPrefix + e.getMessage())@@@64@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "{}@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "diffOutput.delete()@@@78@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertFileContentsEquals(\"Unexpected diff output in file '\" + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "final String sepLine = \"===================================================================\" + NL@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "client.diff(thisTest.getUrl() + \"/iota\",Revision.HEAD,thisTest.getUrl() + \"/A/mu\",Revision.HEAD,thisTest.getUrl(),diffOutput.getPath(),Depth.infinity,null,true,true,false,false)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "Exception ignored@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "testDiff['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "client.commit(paths,\"Set svn:eol-style to native\",false)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "expectedDiffOutput = NL + \"Property changes on: .\" + NL + underSepLine + \"Added: testprop\" + NL + \"## -0,0 +1 ##\" + NL + \"+Test property value.\" + NL@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "client.propertySet(aPath,\"testprop\",\"Test property value.\",false)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "client.propertyCreate(iotaPath,\"svn:eol-style\",\"native\",Depth.empty,null,false)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "OneTest thisTest = new OneTest(true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "writer.flush()@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "File diffOutput = new File(super.localTmp,thisTest.testName)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "{}@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "{}@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "assertFileContentsEquals(\"Unexpected diff output in file '\" + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,wcPath,diffOutput.getPath(),Depth.infinity,null,true,true,false,false)@@@75@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
72 [style = filled, label = "testDiff['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "assertFileContentsEquals(\"Unexpected diff output in file '\" + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,wcPath,diffOutput.getPath(),Depth.infinity,null,true,true,false)@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "int operativeRevision = 1@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "client.diff(thisTest.getUrl() + \"/iota\",Revision.HEAD,thisTest.getUrl() + \"/A/mu\",Revision.HEAD,thisTest.getUrl(),diffOutput.getPath(),Depth.infinity,null,true,true,false)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',\"\",diffOutput)@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "client.diff(iotaPath,Revision.BASE,iotaPath,Revision.WORKING,\"/non/existent/path\",diffOutput.getPath(),Depth.infinity,null,true,true,false)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "writer.flush()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "operativeRevision < 3@@@40@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "ClientException e@@@87@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "String assertPrefix = revisionPrefix + \"Unexpected diff output in file '\"@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "fail(revisionPrefix + e.getMessage())@@@89@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "client.diff(thisTest.getUrl() + \"/iota\",Revision.HEAD,new Revision.Number(operativeRevision),Revision.HEAD,null,diffOutput.getPath(),Depth.files,null,true,true,false,false)@@@66@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
88 [style = filled, label = "Exception ignored@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "paths.add(iotaPath)@@@48@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "fail(\"This test should fail becaus the relativeToDir parameter \" + \"does not work with URLs\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertFileContentsEquals(assertPrefix + diffOutput.getPath() + ''',expectedDiffOutput,diffOutput)@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "diffOutput.delete()@@@69@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "ClientException e@@@63@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final String NL = System.getProperty(\"line.separator\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "operativeRevision++@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "writer = new PrintWriter(new FileOutputStream(iotaPath))@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28->21 [style = bold, label=""];
55->45 [style = solid, label="NL"];
7->28 [style = bold, label=""];
19->14 [style = solid, label="wcPath"];
30->73 [style = solid, label="iotaPath"];
51->67 [style = solid, label="diffOutput"];
43->4 [style = bold, label=""];
43->87 [style = bold, label=""];
7->62 [style = solid, label="operativeRevision"];
48->24 [style = solid, label="aPath"];
4->87 [style = dashed, label="0"];
30->65 [style = solid, label="iotaPath"];
44->99 [style = dotted, label="true"];
82->57 [style = bold, label=""];
68->100 [style = dashed, label="0"];
60->45 [style = solid, label="underSepLine"];
27->68 [style = solid, label="assertPrefix"];
28->81 [style = dotted, label="true"];
56->62 [style = solid, label="sepLine"];
28->63 [style = dotted, label="true"];
8->52 [style = bold, label=""];
28->90 [style = dotted, label="true"];
50->69 [style = bold, label=""];
30->68 [style = solid, label="iotaPath"];
28->73 [style = dotted, label="true"];
28->70 [style = dotted, label="true"];
90->38 [style = bold, label=""];
55->2 [style = solid, label="NL"];
28->62 [style = dotted, label="true"];
28->12 [style = dotted, label="true"];
75->68 [style = bold, label=""];
44->93 [style = dotted, label="true"];
7->44 [style = solid, label="operativeRevision"];
8->92 [style = dashed, label="0"];
62->1 [style = solid, label="expectedDiffOutput"];
28->38 [style = dotted, label="true"];
53->81 [style = bold, label=""];
51->37 [style = solid, label="diffOutput"];
51->40 [style = solid, label="diffOutput"];
0->61 [style = bold, label=""];
55->6 [style = solid, label="NL"];
12->32 [style = bold, label=""];
44->34 [style = bold, label=""];
58->62 [style = bold, label=""];
73->41 [style = bold, label=""];
99->41 [style = bold, label=""];
54->33 [style = bold, label=""];
69->7 [style = bold, label=""];
30->63 [style = solid, label="iotaPath"];
7->11 [style = solid, label="operativeRevision"];
51->1 [style = solid, label="diffOutput"];
10->40 [style = bold, label=""];
47->94 [style = dashed, label="0"];
34->93 [style = dashed, label="0"];
44->41 [style = bold, label=""];
81->67 [style = solid, label="expectedDiffOutput"];
2->46 [style = solid, label="expectedDiffBody"];
59->62 [style = bold, label=""];
42->11 [style = solid, label="operativeRevision"];
30->75 [style = solid, label="iotaPath"];
42->62 [style = solid, label="operativeRevision"];
9->99 [style = solid, label="paths"];
45->26 [style = bold, label=""];
47->20 [style = bold, label=""];
19->101 [style = solid, label="wcPath"];
62->67 [style = bold, label=""];
63->8 [style = bold, label=""];
51->8 [style = solid, label="diffOutput"];
30->79 [style = solid, label="iotaPath"];
15->97 [style = bold, label=""];
46->5 [style = bold, label=""];
48->26 [style = solid, label="aPath"];
7->21 [style = solid, label="operativeRevision"];
35->48 [style = bold, label=""];
51->68 [style = solid, label="diffOutput"];
51->43 [style = solid, label="diffOutput"];
64->3 [style = bold, label=""];
102->40 [style = bold, label=""];
36->51 [style = bold, label=""];
24->37 [style = bold, label=""];
51->52 [style = solid, label="diffOutput"];
6->37 [style = solid, label="expectedDiffOutput"];
9->77 [style = dashed, label="0"];
24->86 [style = dashed, label="0"];
46->98 [style = bold, label=""];
55->56 [style = solid, label="NL"];
2->11 [style = solid, label="expectedDiffBody"];
19->86 [style = solid, label="wcPath"];
55->56 [style = bold, label=""];
18->75 [style = bold, label=""];
28->68 [style = dotted, label="true"];
21->27 [style = solid, label="revisionPrefix"];
16->25 [style = bold, label=""];
30->11 [style = solid, label="iotaPath"];
7->74 [style = solid, label="operativeRevision"];
28->0 [style = dotted, label="true"];
28->39 [style = dotted, label="true"];
33->46 [style = bold, label=""];
23->95 [style = dashed, label="0"];
19->68 [style = solid, label="wcPath"];
30->47 [style = solid, label="iotaPath"];
5->43 [style = bold, label=""];
38->66 [style = bold, label=""];
55->63 [style = solid, label="NL"];
14->101 [style = dashed, label="0"];
11->63 [style = bold, label=""];
3->99 [style = dashed, label="0"];
91->36 [style = bold, label=""];
85->53 [style = dotted, label="true"];
34->9 [style = bold, label=""];
44->93 [style = bold, label=""];
28->52 [style = dotted, label="true"];
28->100 [style = dotted, label="true"];
85->53 [style = bold, label=""];
27->101 [style = bold, label=""];
51->12 [style = solid, label="diffOutput"];
74->12 [style = bold, label=""];
64->99 [style = bold, label=""];
1->39 [style = bold, label=""];
63->52 [style = solid, label="expectedDiffOutput"];
48->95 [style = solid, label="aPath"];
18->17 [style = dotted, label="true"];
28->101 [style = dotted, label="true"];
27->32 [style = solid, label="assertPrefix"];
45->96 [style = bold, label=""];
78->47 [style = bold, label=""];
86->37 [style = bold, label=""];
57->49 [style = bold, label=""];
28->66 [style = dotted, label="true"];
62->38 [style = solid, label="expectedDiffOutput"];
37->45 [style = bold, label=""];
28->61 [style = dotted, label="true"];
57->49 [style = dotted, label="true"];
53->59 [style = dotted, label="true"];
97->32 [style = bold, label=""];
79->80 [style = bold, label=""];
28->58 [style = dotted, label="true"];
6->23 [style = bold, label=""];
83->8 [style = bold, label=""];
56->46 [style = solid, label="sepLine"];
28->21 [style = dotted, label="true"];
93->9 [style = bold, label=""];
19->24 [style = solid, label="wcPath"];
19->70 [style = solid, label="wcPath"];
11->8 [style = solid, label="expectedDiffOutput"];
38->75 [style = bold, label=""];
7->81 [style = solid, label="operativeRevision"];
84->50 [style = dotted, label="true"];
30->83 [style = solid, label="iotaPath"];
100->1 [style = bold, label=""];
42->44 [style = solid, label="operativeRevision"];
98->43 [style = bold, label=""];
101->44 [style = bold, label=""];
42->7 [style = solid, label="operativeRevision"];
28->67 [style = dotted, label="true"];
52->74 [style = bold, label=""];
76->18 [style = dotted, label="true"];
55->46 [style = solid, label="NL"];
40->42 [style = bold, label=""];
19->100 [style = solid, label="wcPath"];
19->65 [style = bold, label=""];
88->35 [style = bold, label=""];
30->93 [style = solid, label="iotaPath"];
48->86 [style = solid, label="aPath"];
42->28 [style = bold, label=""];
77->79 [style = bold, label=""];
35->31 [style = bold, label=""];
89->25 [style = bold, label=""];
44->77 [style = dotted, label="true"];
63->92 [style = bold, label=""];
15->12 [style = bold, label=""];
61->11 [style = bold, label=""];
51->32 [style = solid, label="diffOutput"];
9->64 [style = bold, label=""];
82->57 [style = dotted, label="true"];
28->92 [style = dotted, label="true"];
72->36 [style = bold, label=""];
27->67 [style = solid, label="assertPrefix"];
41->0 [style = bold, label=""];
42->97 [style = solid, label="operativeRevision"];
87->29 [style = bold, label=""];
55->62 [style = solid, label="NL"];
48->10 [style = solid, label="aPath"];
19->75 [style = solid, label="wcPath"];
28->27 [style = dotted, label="true"];
30->100 [style = solid, label="iotaPath"];
76->18 [style = bold, label=""];
96->102 [style = bold, label=""];
28->44 [style = dotted, label="true"];
56->60 [style = bold, label=""];
57->74 [style = bold, label=""];
27->38 [style = solid, label="assertPrefix"];
28->41 [style = dotted, label="true"];
29->47 [style = bold, label=""];
42->81 [style = solid, label="operativeRevision"];
7->97 [style = solid, label="operativeRevision"];
48->6 [style = bold, label=""];
2->63 [style = solid, label="expectedDiffBody"];
70->67 [style = bold, label=""];
32->58 [style = bold, label=""];
7->12 [style = solid, label="operativeRevision"];
28->11 [style = dotted, label="true"];
30->41 [style = solid, label="iotaPath"];
30->70 [style = solid, label="iotaPath"];
17->68 [style = bold, label=""];
44->3 [style = dotted, label="true"];
30->92 [style = solid, label="iotaPath"];
80->64 [style = bold, label=""];
48->96 [style = solid, label="aPath"];
51->55 [style = bold, label=""];
30->90 [style = solid, label="iotaPath"];
62->90 [style = bold, label=""];
28->14 [style = dotted, label="true"];
42->28 [style = solid, label="operativeRevision"];
28->8 [style = dotted, label="true"];
28->97 [style = dotted, label="true"];
2->62 [style = solid, label="expectedDiffBody"];
1->7 [style = bold, label=""];
66->68 [style = bold, label=""];
13->36 [style = bold, label=""];
81->70 [style = bold, label=""];
60->6 [style = solid, label="underSepLine"];
42->63 [style = solid, label="operativeRevision"];
71->48 [style = bold, label=""];
44->64 [style = dotted, label="true"];
44->73 [style = bold, label=""];
67->38 [style = bold, label=""];
5->98 [style = dashed, label="0"];
45->40 [style = solid, label="expectedDiffOutput"];
27->14 [style = bold, label=""];
32->81 [style = bold, label=""];
7->28 [style = solid, label="operativeRevision"];
12->97 [style = dashed, label="0"];
19->67 [style = solid, label="wcPath"];
42->74 [style = solid, label="operativeRevision"];
77->64 [style = solid, label="paths"];
49->97 [style = bold, label=""];
28->75 [style = dotted, label="true"];
30->8 [style = solid, label="iotaPath"];
23->24 [style = bold, label=""];
44->79 [style = dotted, label="true"];
53->59 [style = bold, label=""];
31->48 [style = bold, label=""];
20->48 [style = bold, label=""];
11->83 [style = bold, label=""];
27->52 [style = solid, label="assertPrefix"];
28->7 [style = dotted, label="true"];
95->86 [style = bold, label=""];
10->102 [style = dashed, label="0"];
25->94 [style = bold, label=""];
52->15 [style = bold, label=""];
19->90 [style = solid, label="wcPath"];
28->83 [style = dotted, label="true"];
44->9 [style = dotted, label="true"];
26->10 [style = bold, label=""];
84->50 [style = bold, label=""];
7->63 [style = solid, label="operativeRevision"];
44->80 [style = dotted, label="true"];
25->78 [style = bold, label=""];
64->73 [style = bold, label=""];
30->34 [style = solid, label="iotaPath"];
14->44 [style = bold, label=""];
27->12 [style = solid, label="assertPrefix"];
6->95 [style = bold, label=""];
46->43 [style = solid, label="expectedDiffOutput"];
30->94 [style = solid, label="iotaPath"];
50->69 [style = dotted, label="true"];
56->11 [style = solid, label="sepLine"];
39->7 [style = bold, label=""];
67->90 [style = dashed, label="0"];
94->20 [style = bold, label=""];
56->63 [style = solid, label="sepLine"];
28->1 [style = dotted, label="true"];
55->11 [style = solid, label="NL"];
68->1 [style = bold, label=""];
35->71 [style = bold, label=""];
29->94 [style = bold, label=""];
55->60 [style = solid, label="NL"];
44->34 [style = dotted, label="true"];
30->67 [style = solid, label="iotaPath"];
55->81 [style = solid, label="NL"];
25->47 [style = bold, label=""];
3->41 [style = bold, label=""];
27->8 [style = solid, label="assertPrefix"];
17->100 [style = bold, label=""];
2->30 [style = bold, label=""];
21->27 [style = bold, label=""];
60->2 [style = bold, label=""];
9->3 [style = solid, label="paths"];
22->54 [style = bold, label=""];
28->74 [style = dotted, label="true"];
18->17 [style = bold, label=""];
66->100 [style = bold, label=""];
30->9 [style = solid, label="iotaPath"];
27->1 [style = solid, label="assertPrefix"];
28->15 [style = dotted, label="true"];
65->22 [style = bold, label=""];
56->81 [style = solid, label="sepLine"];
51->38 [style = solid, label="diffOutput"];
28->32 [style = dotted, label="true"];
42->21 [style = solid, label="operativeRevision"];
4->29 [style = bold, label=""];
26->96 [style = dashed, label="0"];
34->77 [style = bold, label=""];
30->19 [style = bold, label=""];
49->12 [style = bold, label=""];
92->52 [style = bold, label=""];
2->81 [style = solid, label="expectedDiffBody"];
48->102 [style = solid, label="aPath"];
81->68 [style = solid, label="expectedDiffOutput"];
48->23 [style = solid, label="aPath"];
42->12 [style = solid, label="operativeRevision"];
50->7 [style = bold, label=""];
}
