digraph {
10 [style = filled, label = "assertContains(result.getErrors().get(0),\"'repositories.repository.id' must not contain any of these characters\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertContains(result.getWarnings().get(3),\"'distributionManagement.snapshotRepository.id' must not contain any of these characters\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertViolations(result,0,0,4)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertContains(result.getErrors().get(0),\"'dependencies.dependency.version' for test:b:jar must be a valid version\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertContains(result.getErrors().get(2),\"'distributionManagement.repository.id' must not contain any of these characters\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertContains(result.getErrors().get(1),\"'pluginRepositories.pluginRepository.id' must not contain any of these characters\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "testBadRepositoryId['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertContains(result.getWarnings().get(0),\"'repositories.repository.id' must not contain any of these characters\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertContains(result.getErrors().get(3),\"'distributionManagement.snapshotRepository.id' must not contain any of these characters\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertViolations(result,0,4,0)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "SimpleProblemCollector result = validate(\"bad-dependency-version.xml\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertViolations(result,0,2,0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertContains(result.getErrors().get(1),\"'dependencies.dependency.version' for test:c:jar must not contain any of these characters\")@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertContains(result.getWarnings().get(1),\"'pluginRepositories.pluginRepository.id' must not contain any of these characters\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertContains(result.getWarnings().get(2),\"'distributionManagement.repository.id' must not contain any of these characters\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "testBadRepositoryId['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "testBadDependencyVersion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SimpleProblemCollector result = validate(\"bad-repository-id.xml\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
2->6 [style = solid, label="result"];
3->17 [style = dashed, label="0"];
2->6 [style = bold, label=""];
6->11 [style = dashed, label="0"];
5->9 [style = dashed, label="0"];
16->17 [style = bold, label=""];
0->12 [style = dashed, label="0"];
15->16 [style = bold, label=""];
12->7 [style = bold, label=""];
3->0 [style = bold, label=""];
2->15 [style = dashed, label="0"];
2->11 [style = solid, label="result"];
7->9 [style = bold, label=""];
0->14 [style = dashed, label="0"];
6->16 [style = dashed, label="0"];
8->2 [style = bold, label=""];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
10->12 [style = bold, label=""];
17->14 [style = bold, label=""];
4->7 [style = dashed, label="0"];
1->2 [style = bold, label=""];
3->10 [style = dashed, label="0"];
13->15 [style = bold, label=""];
15->16 [style = solid, label="result"];
4->5 [style = bold, label=""];
2->11 [style = bold, label=""];
}
