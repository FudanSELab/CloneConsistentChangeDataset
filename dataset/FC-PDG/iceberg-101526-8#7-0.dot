digraph {
5 [style = filled, label = "T upper = Conversions.fromByteBuffer(ref.type(),upperBounds.get(id))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "eq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return ROWS_CANNOT_MATCH@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "eq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "return ROWS_CANNOT_MATCH@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "containsNullsOnly(id)@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return ROWS_MIGHT_MATCH@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "return ROWS_MIGHT_MATCH@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "NaNUtil.isNaN(lower)@@@9@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "cmp > 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "containsNullsOnly(id) || containsNaNsOnly(id)@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Literal<T> lit@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "lowerBounds != null && lowerBounds.containsKey(id)@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "T lower = Conversions.fromByteBuffer(ref.type(),lowerBounds.get(id))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "gtEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "cmp < 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return ROWS_CANNOT_MATCH@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "upperBounds != null && upperBounds.containsKey(id)@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22->2 [style = bold, label=""];
17->19 [style = dotted, label="true"];
11->9 [style = dotted, label="true"];
4->6 [style = bold, label=""];
14->7 [style = bold, label=""];
22->23 [style = dotted, label="true"];
5->8 [style = bold, label=""];
13->4 [style = bold, label=""];
10->6 [style = bold, label=""];
16->4 [style = bold, label=""];
7->17 [style = dotted, label="true"];
21->9 [style = dotted, label="true"];
17->19 [style = bold, label=""];
7->12 [style = dotted, label="true"];
4->5 [style = bold, label=""];
4->10 [style = dotted, label="true"];
16->14 [style = dotted, label="true"];
2->4 [style = solid, label="id"];
0->17 [style = solid, label="lower"];
7->13 [style = dotted, label="true"];
17->12 [style = bold, label=""];
2->7 [style = solid, label="id"];
21->20 [style = dotted, label="true"];
15->6 [style = bold, label=""];
11->2 [style = bold, label=""];
16->18 [style = dashed, label="0"];
12->13 [style = bold, label=""];
21->2 [style = bold, label=""];
4->8 [style = dotted, label="true"];
18->14 [style = dotted, label="true"];
5->8 [style = solid, label="upper"];
2->18 [style = bold, label=""];
22->24 [style = dotted, label="true"];
0->12 [style = bold, label=""];
7->4 [style = bold, label=""];
8->10 [style = solid, label="cmp"];
11->1 [style = dotted, label="true"];
16->14 [style = bold, label=""];
7->0 [style = bold, label=""];
13->3 [style = dotted, label="true"];
0->17 [style = bold, label=""];
2->18 [style = solid, label="id"];
13->3 [style = bold, label=""];
2->16 [style = bold, label=""];
16->7 [style = bold, label=""];
7->0 [style = dotted, label="true"];
10->15 [style = bold, label=""];
4->5 [style = dotted, label="true"];
14->4 [style = bold, label=""];
2->16 [style = solid, label="id"];
18->14 [style = bold, label=""];
10->15 [style = dotted, label="true"];
0->12 [style = solid, label="lower"];
19->12 [style = bold, label=""];
2->0 [style = solid, label="id"];
9->24 [style = dashed, label="0"];
3->4 [style = bold, label=""];
8->10 [style = bold, label=""];
12->13 [style = solid, label="cmp"];
2->5 [style = solid, label="id"];
18->7 [style = bold, label=""];
}
