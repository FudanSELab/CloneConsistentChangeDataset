digraph {
22 [style = filled, label = "doReturn(Arrays.asList(bridgeVifDriver,ovsVifDriver)).when(res).getAllVifDrivers()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "when(conn.domainLookupByName(anyString())).thenReturn(_domain)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PowerMockito.whenNew().withAnyArguments().thenReturn(scanner)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(helper.getConnectionByVmName(nullable())).thenReturn(conn)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Map<String,Object> params = new HashMap<>()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(conn.domainLookupByName(nullable())).thenReturn(_domain)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Connect conn = mock()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "res = spy(resReal)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "when(helper.getConnectionByVmName(anyString())).thenReturn(conn)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "doReturn(helper).when(res).getLibvirtUtilitiesHelper()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "doReturn(bridgeVifDriver).when(res).getVifDriver(eq(Networks.TrafficType.Guest),anyString())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Map<String,String> pifs = new HashMap<>()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "doNothing().when(bridgeVifDriver).getPifs()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "OvsVifDriver ovsVifDriver = spy(new OvsVifDriver())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "doReturn(helper).when(res).getLibvirtUtilitiesHelper()@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(_domain.getXMLDesc(0)).thenReturn(fullfile).thenReturn(part_1 + part_3)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "params.put(\"libvirt.host.pifs\",pifs)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "pifs.put(GUEST_BR,\"eth0\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(_domain.getXMLDesc(0)).thenReturn(fullfile)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "BDDMockito.given(Script.findScript(anyString(),anyString())).willReturn(\"dummypath/tofile.sh\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "LibvirtUtilitiesHelper helper = mock()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "doReturn(ovsVifDriver).when(res).getVifDriver(Networks.TrafficType.Guest,GUEST_BR)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "BridgeVifDriver bridgeVifDriver = spy(new BridgeVifDriver())@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "LibvirtComputingResource resReal = new LibvirtComputingResource()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "params.put(\"libvirt.computing.resource\",res)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "bridgeVifDriver.configure(params)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "doNothing().when(ovsVifDriver).getPifs()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "PowerMockito.mockStatic()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Scanner scanner = new Scanner(memInfo)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "doReturn(bridgeVifDriver).when(res).getVifDriver(not(eq(Networks.TrafficType.Guest)))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ovsVifDriver.configure(params)@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "LibvirtComputingResource resReal = new LibvirtComputingResource(){}@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23->25 [style = bold, label=""];
8->9 [style = bold, label=""];
18->20 [style = bold, label=""];
24->34 [style = bold, label=""];
5->9 [style = solid, label="conn"];
9->12 [style = dashed, label="0"];
26->16 [style = bold, label=""];
4->21 [style = dashed, label="0"];
15->33 [style = bold, label=""];
21->29 [style = solid, label="resReal"];
2->13 [style = bold, label=""];
11->0 [style = bold, label=""];
6->0 [style = bold, label=""];
3->21 [style = bold, label=""];
20->22 [style = bold, label=""];
8->13 [style = dashed, label="0"];
32->14 [style = bold, label=""];
27->15 [style = bold, label=""];
0->3 [style = bold, label=""];
7->16 [style = solid, label="params"];
14->19 [style = bold, label=""];
19->23 [style = bold, label=""];
25->17 [style = bold, label=""];
33->18 [style = bold, label=""];
21->29 [style = bold, label=""];
31->23 [style = solid, label="conn"];
31->32 [style = bold, label=""];
4->1 [style = bold, label=""];
2->8 [style = bold, label=""];
1->8 [style = solid, label="pifs"];
5->12 [style = solid, label="conn"];
12->10 [style = bold, label=""];
13->12 [style = bold, label=""];
9->24 [style = bold, label=""];
7->26 [style = solid, label="params"];
29->30 [style = solid, label="res"];
22->26 [style = bold, label=""];
2->14 [style = dashed, label="0"];
29->31 [style = bold, label=""];
0->3 [style = solid, label="scanner"];
30->8 [style = bold, label=""];
34->27 [style = bold, label=""];
3->4 [style = bold, label=""];
5->7 [style = bold, label=""];
28->0 [style = bold, label=""];
7->30 [style = bold, label=""];
4->1 [style = solid, label="resReal"];
9->10 [style = bold, label=""];
17->1 [style = bold, label=""];
1->5 [style = bold, label=""];
7->2 [style = bold, label=""];
}
