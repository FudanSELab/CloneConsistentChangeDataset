digraph {
4 [style = filled, label = "application.setWebApplicationType(WebApplicationType.NONE)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "{}@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SpringApplication application = new SpringApplication(){@Override SpringBootExceptionHandler getSpringBootExceptionHandler(){return handler}}@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "exitWithExplicitCodeFromException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "ExitCodeListener listener = new ExitCodeListener()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verify(handler).registerExitCode(11)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "SpringApplication application = new SpringApplication(){@Override SpringBootExceptionHandler getSpringBootExceptionHandler(){return handler}}@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "exitWithExplicitCodeFromException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final SpringBootExceptionHandler handler = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(listener.getExitCode()).isEqualTo(11)@@@20@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "exitWithExplicitCodeFromMappedException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "application.run()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "application.addListeners(listener)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fail(\"Did not throw\")@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "verify(handler).registerExitCode(11)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThatIllegalStateException().isThrownBy(null)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "{}@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "IllegalStateException ex@@@17@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(listener.getExitCode()).isEqualTo(11)@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17->10 [style = bold, label=""];
5->10 [style = bold, label=""];
4->3 [style = bold, label=""];
7->18 [style = solid, label="handler"];
0->2 [style = solid, label="listener"];
3->1 [style = bold, label=""];
15->14 [style = bold, label=""];
4->13 [style = bold, label=""];
0->2 [style = bold, label=""];
16->7 [style = bold, label=""];
6->0 [style = bold, label=""];
9->7 [style = bold, label=""];
2->4 [style = bold, label=""];
12->7 [style = bold, label=""];
6->18 [style = dashed, label="0"];
11->5 [style = bold, label=""];
10->8 [style = bold, label=""];
7->6 [style = solid, label="handler"];
7->6 [style = bold, label=""];
7->18 [style = bold, label=""];
11->17 [style = bold, label=""];
13->15 [style = bold, label=""];
1->10 [style = bold, label=""];
18->0 [style = bold, label=""];
}
