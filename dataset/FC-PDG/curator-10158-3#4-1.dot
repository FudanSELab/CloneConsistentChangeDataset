digraph {
1 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(discovery.getSerializer() instanceof JsonInstanceSerializer,\"default serializer not JSON\")@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "builder.serializer(new InstanceSerializer<Object>(){@Override public byte(( serialize(ServiceInstance<Object> instance){return null}@Override public ServiceInstance<Object> deserialize(byte(( bytes){return null}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ServiceDiscoveryBuilder<Object> builder = ServiceDiscoveryBuilder.builder().client(client)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testDefaultSerializer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testDefaultSerializer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testSetSerializer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertNotNull(discovery.getSerializer(),\"default serializer not set\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertFalse(discovery.getSerializer() instanceof JsonInstanceSerializer,\"set serializer is JSON\")@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ServiceDiscoveryImpl<?> discovery = (ServiceDiscoveryImpl<?>)builder.basePath(\"/path\").build()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
6->1 [style = bold, label=""];
8->1 [style = bold, label=""];
1->4 [style = bold, label=""];
3->5 [style = bold, label=""];
9->0 [style = bold, label=""];
5->7 [style = dashed, label="0"];
3->7 [style = bold, label=""];
2->1 [style = bold, label=""];
4->0 [style = bold, label=""];
1->4 [style = solid, label="client"];
}
