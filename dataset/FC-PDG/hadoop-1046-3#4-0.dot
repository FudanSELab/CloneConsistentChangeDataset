digraph {
112 [style = filled, label = "app.waitForState(reduceTask,TaskState.RUNNING)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "Assert.assertEquals(\"Task Start time not correct\",task1StartTime,mapTask1.getReport().getStartTime())@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "Assert.assertEquals(\"Task Finish time not correct\",task1FinishTime,mapTask1.getReport().getFinishTime())@@@74@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "Assert.assertEquals(\"Task Finish time not correct\",task1FinishTime,mapTask1.getReport().getFinishTime())@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "TaskAttempt task1Attempt1 = t1it.next()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "app.waitForState(task1Attempt3,TaskAttemptState.KILLED)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "testCrashed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "app.getContext().getEventHandler().handle(new TaskAttemptEvent(mapTask2.getAttempts().values().iterator().next().getID(),TaskAttemptEventType.TA_DONE))@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "Iterator<TaskAttempt> itr = mapTask1.getAttempts().values().iterator()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "app.stop()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Assert.assertEquals(MRApp.NM_HOST,amInfo.getNodeManagerHost())@@@80@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "app.verifyCompleted()@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "Assert.assertTrue(am1StartTimeReal >= am1StartTimeEst && am1StartTimeReal <= am2StartTimeEst)@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "Configuration conf = new Configuration()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "ContainerId t1a2contId = task1Attempt2.getAssignedContainerID()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "TaskAttempt task1Attempt2 = t1it.next()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "app.waitForState(reduceTask,TaskState.RUNNING)@@@68@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "app = new MRAppWithHistory(2,1,false,this.getClass().getName(),false,++runCount)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "Thread.sleep(2000)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(amInfo.getAppAttemptId(),amInfo.getContainerId().getApplicationAttemptId())@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "app.getContext().getEventHandler().handle(new TaskAttemptEvent(reduceTask.getAttempts().values().iterator().next().getID(),TaskAttemptEventType.TA_DONE))@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "app.waitForState(reduceTask,TaskState.RUNNING)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
139 [style = filled, label = "app.waitForState(task1Attempt1,TaskAttemptState.SUCCEEDED)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "TaskAttempt task1Attempt4 = itr.next()@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "task2Attempt = mapTask2.getAttempts().values().iterator().next()@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(attemptNum++,amInfo.getAppAttemptId().getAttemptId())@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TaskAttempt task2Attempt = mapTask2.getAttempts().values().iterator().next()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int attemptNum = 1@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "long am1StartTimeEst = System.currentTimeMillis()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "TaskAttempt task2Attempt = mapTask2.getAttempts().values().iterator().next()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
133 [style = filled, label = "mapTask1.getAttempts().size() != 2 && timeOut++ < 10@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "app.getContext().getEventHandler().handle(new TaskAttemptEvent(task1Attempt2.getID(),TaskAttemptEventType.TA_CONTAINER_LAUNCH_FAILED))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "long am1StartTimeReal = job.getAMInfos().get(0).getStartTime()@@@84@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "Iterator<Task> it = job.getTasks().values().iterator()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Thread.sleep(2000)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "long am1StartTimeReal = job.getAMInfos().get(0).getStartTime()@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testCrashed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "app.waitForState(mapTask1,TaskState.SUCCEEDED)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(MRApp.NM_HTTP_PORT,amInfo.getNodeManagerHttpPort())@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "app.waitForState(job,JobState.SUCCEEDED)@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "long jobStartTime = job.getReport().getStartTime()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "int attemptNum = 1@@@76@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "app.waitForState(task1Attempt1,TaskAttemptState.FAILED)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "long am2StartTimeReal = job.getAMInfos().get(1).getStartTime()@@@85@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "app.waitForState(task1Attempt3,TaskAttemptState.RUNNING)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "Assert.assertEquals(\"Task Start time not correct\",task1StartTime,mapTask1.getReport().getStartTime())@@@73@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "Thread.sleep(1000)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "LOG.info(\"Waiting for next attempt to start\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "MRApp app = new MRAppWithHistory(2,1,false,this.getClass().getName(),true,++runCount)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "conf.setBoolean(MRJobConfig.JOB_UBERTASK_ENABLE,false)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "int timeOut = 0@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "app.waitForState(reduceTask,TaskState.RUNNING)@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "app.waitForState(task2Attempt,TaskAttemptState.RUNNING)@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
145 [style = filled, label = "Assert.assertEquals(\"No of tasks not correct\",3,job.getTasks().size())@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "app.getContext().getEventHandler().handle(new TaskAttemptEvent(task1Attempt4.getID(),TaskAttemptEventType.TA_DONE))@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "app.getContext().getEventHandler().handle(new TaskAttemptFailEvent(task1Attempt1.getID()))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
106 [style = filled, label = "conf.set(FileOutputFormat.OUTDIR,outputDir.toString())@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
143 [style = filled, label = "app.waitForState(job,JobState.RUNNING)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
135 [style = filled, label = "app.waitForState(task1Attempt2,TaskAttemptState.RUNNING)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertEquals(MRApp.NM_PORT,amInfo.getNodeManagerPort())@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "Assert.assertEquals(2,job.getAMInfos().size())@@@75@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "LOG.info(t1a2contId.toString())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "int runCount = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertTrue(am1StartTimeReal >= am1StartTimeEst && am1StartTimeReal <= am2StartTimeEst)@@@86@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "LOG.info(\"Waiting for next attempt to start\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "app.getContext().getEventHandler().handle(new TaskAttemptEvent(mapTask2.getAttempts().values().iterator().next().getID(),TaskAttemptEventType.TA_DONE))@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "itr = mapTask1.getAttempts().values().iterator()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Job job = app.submit(conf)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "waitForContainerAssignment(task1Attempt2)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "app.waitForState(mapTask2,TaskState.RUNNING)@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
125 [style = filled, label = "conf.setBoolean(MRJobConfig.JOB_UBERTASK_ENABLE,false)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
130 [style = filled, label = "long task1StartTime = mapTask1.getReport().getStartTime()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "mapTask1.getAttempts().size() != 3 && timeOut++ < 10@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "app.waitForState(mapTask2,TaskState.SUCCEEDED)@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(amInfo.getAppAttemptId(),amInfo.getContainerId().getApplicationAttemptId())@@@79@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
134 [style = filled, label = "conf = new Configuration()@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "app.waitForState(task2Attempt,TaskAttemptState.RUNNING)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "mapTask1 = it.next()@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "itr.next()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "long am2StartTimeEst = System.currentTimeMillis()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "timeOut = 0@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "conf.setBoolean(\"mapred.mapper.new-api\",true)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "testSpeculative['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "itr.next()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "LOG.info(\"Waiting for next attempt to start\")@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "LOG.info(task1Attempt2.getID().toString())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertEquals(MRApp.NM_PORT,amInfo.getNodeManagerPort())@@@81@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "Task mapTask1 = it.next()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "Task reduceTask = it.next()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(\"No of tasks not correct\",3,job.getTasks().size())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "TaskAttempt task1Attempt1 = mapTask1.getAttempts().values().iterator().next()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "timeOut = 0@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "TaskAttempt task1Attempt3 = itr.next()@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "app.getContext().getEventHandler().handle(new TaskAttemptEvent(task1Attempt3.getID(),TaskAttemptEventType.TA_KILL))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(MRApp.NM_HTTP_PORT,amInfo.getNodeManagerHttpPort())@@@82@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "app.waitForState(task1Attempt1,TaskAttemptState.RUNNING)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "long am2StartTimeReal = job.getAMInfos().get(1).getStartTime()@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "conf.setBoolean(MRJobConfig.MR_AM_JOB_RECOVERY_ENABLE,true)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "app.getContext().getEventHandler().handle(new TaskAttemptEvent(reduceTask.getAttempts().values().iterator().next().getID(),TaskAttemptEventType.TA_DONE))@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "TaskAttempt task1Attempt2 = itr.next()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(4,mapTask1.getAttempts().size())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "conf.set(FileOutputFormat.OUTDIR,outputDir.toString())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "app.waitForState(task1Attempt1,TaskAttemptState.RUNNING)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "app.waitForState(task2Attempt,TaskAttemptState.RUNNING)@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "app.getContext().getEventHandler().handle(new TaskAttemptEvent(task1Attempt1.getID(),TaskAttemptEventType.TA_FAILMSG))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
103 [style = filled, label = "Assert.assertEquals(\"Job Start time not correct\",jobStartTime,job.getReport().getStartTime())@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "conf.setBoolean(MRJobConfig.JOB_UBERTASK_ENABLE,false)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "long task1FinishTime = mapTask1.getReport().getFinishTime()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "app.waitForState(mapTask2,TaskState.SUCCEEDED)@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "itr.next()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "conf.setBoolean(\"mapred.reducer.new-api\",true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "app.waitForState(task1Attempt4,TaskAttemptState.RUNNING)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
141 [style = filled, label = "job = app.submit(conf)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "app.waitForState(task2Attempt,TaskAttemptState.RUNNING)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(\"Job Start time not correct\",jobStartTime,job.getReport().getStartTime())@@@72@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "app.waitForState(task1Attempt2,TaskAttemptState.FAILED)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(3,mapTask1.getAttempts().size())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "reduceTask = it.next()@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "mapTask1.getAttempts().size() != 4 && timeOut++ < 10@@@54@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Thread.sleep(2000)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Assert.assertEquals(attemptNum++,amInfo.getAppAttemptId().getAttemptId())@@@78@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
144 [style = filled, label = "app.getContext().getEventHandler().handle(new TaskAttemptContainerLaunchedEvent(task1Attempt2.getID(),runCount))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
142 [style = filled, label = "conf.setBoolean(\"mapred.mapper.new-api\",true)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(2,mapTask1.getAttempts().size())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "LOG.info(task1Attempt1.getID().toString())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "app.waitForState(mapTask1,TaskState.RUNNING)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "itr.next()@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "itr.next()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "Assert.assertTrue(am2StartTimeReal >= am2StartTimeEst && am2StartTimeReal <= System.currentTimeMillis())@@@87@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "it = job.getTasks().values().iterator()@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "mapTask2 = it.next()@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "itr.next()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "Assert.assertTrue(am2StartTimeReal >= am2StartTimeEst && am2StartTimeReal <= System.currentTimeMillis())@@@110@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "app.waitForState(job,JobState.SUCCEEDED)@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "app.waitForState(mapTask2,TaskState.RUNNING)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Task mapTask2 = it.next()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "app.verifyCompleted()@@@71@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "conf.setBoolean(\"mapred.reducer.new-api\",true)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "Assert.assertEquals(2,job.getAMInfos().size())@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "mapTask2 = it.next()@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "app.waitForState(job,JobState.RUNNING)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "itr = mapTask1.getAttempts().values().iterator()@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "Iterator<TaskAttempt> t1it = mapTask1.getAttempts().values().iterator()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Assert.assertEquals(MRApp.NM_HOST,amInfo.getNodeManagerHost())@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
136 [style = filled, label = "app.waitForState(mapTask1,TaskState.SUCCEEDED)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
137 [style = filled, label = "app.getContext().getEventHandler().handle(new TaskEvent(mapTask1.getID(),TaskEventType.T_ADD_SPEC_ATTEMPT))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
131 [style = filled, label = "app.getContext().getEventHandler().handle(new TaskAttemptEvent(task1Attempt1.getID(),TaskAttemptEventType.TA_DONE))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
128->108 [style = bold, label=""];
60->9 [style = bold, label=""];
100->135 [style = solid, label="task1Attempt2"];
95->77 [style = bold, label=""];
141->60 [style = solid, label="job"];
91->54 [style = bold, label=""];
70->69 [style = bold, label=""];
15->103 [style = solid, label="jobStartTime"];
100->119 [style = bold, label=""];
30->116 [style = bold, label=""];
48->29 [style = bold, label=""];
133->138 [style = bold, label=""];
55->49 [style = bold, label=""];
100->26 [style = bold, label=""];
115->29 [style = bold, label=""];
6->62 [style = dotted, label="true"];
133->113 [style = bold, label=""];
31->105 [style = dashed, label="0"];
95->100 [style = dashed, label="0"];
59->57 [style = bold, label=""];
76->61 [style = bold, label=""];
85->55 [style = solid, label="task1Attempt1"];
83->34 [style = bold, label=""];
42->51 [style = dotted, label="true"];
26->88 [style = bold, label=""];
103->90 [style = bold, label=""];
69->96 [style = bold, label=""];
45->91 [style = bold, label=""];
57->97 [style = solid, label="job"];
144->19 [style = bold, label=""];
9->7 [style = bold, label=""];
92->2 [style = bold, label=""];
93->12 [style = bold, label=""];
64->73 [style = bold, label=""];
24->67 [style = bold, label=""];
60->82 [style = solid, label="am2StartTimeEst"];
0->80 [style = solid, label="mapTask2"];
12->68 [style = bold, label=""];
29->18 [style = bold, label=""];
146->129 [style = bold, label=""];
14->86 [style = bold, label=""];
85->4 [style = bold, label=""];
63->81 [style = bold, label=""];
15->17 [style = bold, label=""];
52->60 [style = bold, label=""];
90->84 [style = bold, label=""];
7->70 [style = bold, label=""];
128->136 [style = solid, label="mapTask1"];
111->130 [style = bold, label=""];
84->65 [style = bold, label=""];
89->113 [style = dashed, label="0"];
88->95 [style = bold, label=""];
7->61 [style = solid, label="conf"];
130->124 [style = bold, label=""];
100->89 [style = bold, label=""];
37->103 [style = bold, label=""];
21->6 [style = solid, label="timeOut"];
112->131 [style = bold, label=""];
6->62 [style = bold, label=""];
141->143 [style = solid, label="job"];
94->40 [style = bold, label=""];
75->0 [style = bold, label=""];
126->133 [style = bold, label=""];
99->59 [style = bold, label=""];
94->40 [style = solid, label="task1Attempt4"];
75->111 [style = solid, label="mapTask1"];
86->71 [style = solid, label="am2StartTimeReal"];
42->32 [style = dotted, label="true"];
15->7 [style = solid, label="jobStartTime"];
100->89 [style = dotted, label="true"];
65->22 [style = bold, label=""];
28->5 [style = bold, label=""];
25->28 [style = bold, label=""];
124->110 [style = bold, label=""];
67->16 [style = bold, label=""];
127->134 [style = bold, label=""];
131->139 [style = bold, label=""];
134->141 [style = solid, label="conf"];
33->86 [style = solid, label="mapTask1"];
108->18 [style = solid, label="mapTask2"];
61->1 [style = bold, label=""];
129->144 [style = bold, label=""];
56->100 [style = bold, label=""];
71->72 [style = solid, label="task2Attempt"];
136->122 [style = bold, label=""];
80->85 [style = bold, label=""];
116->109 [style = bold, label=""];
46->36 [style = bold, label=""];
107->112 [style = bold, label=""];
14->38 [style = solid, label="reduceTask"];
97->15 [style = bold, label=""];
73->13 [style = bold, label=""];
44->38 [style = bold, label=""];
120->127 [style = bold, label=""];
56->19 [style = solid, label="task1Attempt1"];
14->35 [style = solid, label="am1StartTimeReal"];
22->28 [style = solid, label="attemptNum"];
124->69 [style = solid, label="task1FinishTime"];
36->25 [style = bold, label=""];
77->12 [style = solid, label="task1Attempt2"];
101->75 [style = bold, label=""];
35->71 [style = bold, label=""];
119->30 [style = bold, label=""];
4->49 [style = solid, label="task2Attempt"];
50->31 [style = bold, label=""];
81->82 [style = bold, label=""];
53->44 [style = solid, label="mapTask2"];
42->32 [style = bold, label=""];
19->93 [style = bold, label=""];
47->41 [style = bold, label=""];
120->35 [style = solid, label="am2StartTimeEst"];
108->121 [style = bold, label=""];
25->78 [style = bold, label=""];
78->81 [style = solid, label="am1StartTimeReal"];
51->42 [style = bold, label=""];
32->51 [style = bold, label=""];
118->91 [style = bold, label=""];
106->125 [style = bold, label=""];
63->82 [style = solid, label="am2StartTimeReal"];
130->70 [style = solid, label="task1StartTime"];
141->143 [style = bold, label=""];
138->56 [style = bold, label=""];
110->120 [style = bold, label=""];
16->79 [style = bold, label=""];
85->39 [style = solid, label="task1Attempt1"];
102->84 [style = solid, label="task1FinishTime"];
100->30 [style = dotted, label="true"];
56->100 [style = solid, label="timeOut"];
87->112 [style = solid, label="reduceTask"];
26->138 [style = dashed, label="0"];
18->90 [style = solid, label="task1StartTime"];
121->102 [style = solid, label="reduceTask"];
134->117 [style = bold, label=""];
42->8 [style = bold, label=""];
23->80 [style = bold, label=""];
109->146 [style = bold, label=""];
135->107 [style = bold, label=""];
6->24 [style = bold, label=""];
22->28 [style = bold, label=""];
43->76 [style = bold, label=""];
142->132 [style = bold, label=""];
122->114 [style = bold, label=""];
54->81 [style = solid, label="am1StartTimeEst"];
108->122 [style = solid, label="mapTask2"];
77->19 [style = solid, label="task1Attempt2"];
10->6 [style = bold, label=""];
49->50 [style = bold, label=""];
126->133 [style = solid, label="timeOut"];
133->140 [style = dotted, label="true"];
75->23 [style = solid, label="mapTask1"];
71->72 [style = bold, label=""];
43->61 [style = bold, label=""];
6->10 [style = dotted, label="true"];
53->14 [style = bold, label=""];
79->11 [style = bold, label=""];
87->50 [style = solid, label="reduceTask"];
102->52 [style = bold, label=""];
114->115 [style = solid, label="task2Attempt"];
113->140 [style = bold, label=""];
74->13 [style = solid, label="task1Attempt3"];
139->111 [style = bold, label=""];
132->106 [style = bold, label=""];
74->64 [style = solid, label="task1Attempt3"];
133->113 [style = dotted, label="true"];
31->39 [style = bold, label=""];
41->33 [style = bold, label=""];
57->97 [style = bold, label=""];
18->102 [style = bold, label=""];
56->139 [style = solid, label="task1Attempt1"];
78->63 [style = bold, label=""];
8->66 [style = bold, label=""];
38->92 [style = bold, label=""];
119->107 [style = solid, label="task2Attempt"];
98->74 [style = bold, label=""];
83->57 [style = solid, label="conf"];
80->137 [style = bold, label=""];
33->61 [style = bold, label=""];
33->14 [style = bold, label=""];
53->35 [style = solid, label="mapTask2"];
120->71 [style = solid, label="am2StartTimeEst"];
140->133 [style = bold, label=""];
105->39 [style = bold, label=""];
40->48 [style = bold, label=""];
21->6 [style = bold, label=""];
61->1 [style = solid, label="job"];
50->105 [style = bold, label=""];
61->2 [style = solid, label="job"];
0->87 [style = bold, label=""];
74->64 [style = bold, label=""];
54->35 [style = solid, label="am1StartTimeEst"];
143->145 [style = bold, label=""];
117->142 [style = bold, label=""];
62->10 [style = bold, label=""];
54->20 [style = bold, label=""];
91->144 [style = solid, label="runCount"];
96->43 [style = bold, label=""];
114->115 [style = bold, label=""];
33->53 [style = bold, label=""];
87->23 [style = bold, label=""];
27->98 [style = bold, label=""];
75->29 [style = solid, label="mapTask1"];
58->44 [style = bold, label=""];
123->128 [style = bold, label=""];
27->131 [style = dashed, label="0"];
121->136 [style = bold, label=""];
11->94 [style = bold, label=""];
17->101 [style = bold, label=""];
68->42 [style = bold, label=""];
125->141 [style = bold, label=""];
43->61 [style = solid, label="attemptNum"];
1->47 [style = bold, label=""];
66->27 [style = bold, label=""];
86->35 [style = bold, label=""];
104->91 [style = bold, label=""];
34->3 [style = bold, label=""];
30->100 [style = bold, label=""];
89->30 [style = bold, label=""];
20->83 [style = bold, label=""];
72->58 [style = bold, label=""];
100->30 [style = solid, label="task1Attempt2"];
39->56 [style = bold, label=""];
60->81 [style = solid, label="am2StartTimeEst"];
77->19 [style = bold, label=""];
4->55 [style = bold, label=""];
137->126 [style = bold, label=""];
2->37 [style = bold, label=""];
77->119 [style = dashed, label="0"];
3->99 [style = bold, label=""];
13->21 [style = bold, label=""];
5->46 [style = bold, label=""];
19->135 [style = bold, label=""];
68->42 [style = solid, label="timeOut"];
145->123 [style = bold, label=""];
}
