digraph {
26 [style = filled, label = "File parquetFile = temp.newFile()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "createParquetInputFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "builder.set(\"_all_nulls\",null)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "copy < 20@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "InputFile inFile = Files.localInput(PARQUET_FILE)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int i = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "InputFile inFile = Files.localInput(parquetFile)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "dictionaryStore = reader.getNextDictionaryReader()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "builder.set(\"_str\",i + \"str\" + i)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "parquetSchema = reader.getFileMetaData().getSchema()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "parquetFile.exists()@@@3@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "org.apache.avro.Schema structSchema = AvroSchemaUtil.convert(_structFieldType)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "OutputFile outFile = Files.localOutput(PARQUET_FILE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "builder.set(\"_no_stats\",TOO_LONG_FOR_STATS)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "rowGroupMetadata = reader.getRowGroups().get(0)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(\"Should create only one row group\",1,reader.getRowGroups().size())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "PARQUET_FILE.exists()@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "ParquetFileReader reader = ParquetFileReader.open(ParquetIO.file(inFile))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "builder.set(\"_required\",\"req\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "PARQUET_FILE.deleteOnExit()@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "int copy = 0@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "builder.set(\"_non_dict\",UUID.randomUUID().toString())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertTrue(PARQUET_FILE.delete())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "createInputFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "GenericRecordBuilder builder = new GenericRecordBuilder(convert(FILE_SCHEMA,\"table\"))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "builder.set(\"_some_nulls\",(i % 10 == 0)? null: \"some\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "appender.add(builder.build())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "builder.set(\"_no_nulls\",\"\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "createParquetInputFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i += 1@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(\"Should create only one row group\",1,reader.getRowGroups().size())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Record structNotNull = new Record(structSchema)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "builder.set(\"_id\",INT_MIN_VALUE + i)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "parquetFile.deleteOnExit()@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "OutputFile outFile = Files.localOutput(parquetFile)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "structNotNull.put(\"_int_field\",INT_MIN_VALUE + i)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertTrue(parquetFile.delete())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "builder.set(\"_no_stats_parquet\",TOO_LONG_FOR_STATS_PARQUET)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "copy += 1@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i < INT_MAX_VALUE - INT_MIN_VALUE + 1@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "builder.set(\"_struct_not_null\",structNotNull)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
6->3 [style = bold, label=""];
9->12 [style = dotted, label="true"];
2->6 [style = bold, label=""];
17->9 [style = bold, label=""];
21->8 [style = bold, label=""];
8->19 [style = solid, label="structSchema"];
4->33 [style = dashed, label="0"];
9->35 [style = bold, label=""];
0->15 [style = bold, label=""];
7->9 [style = solid, label="i"];
7->9 [style = bold, label=""];
38->9 [style = dotted, label="true"];
23->13 [style = bold, label=""];
39->23 [style = bold, label=""];
9->5 [style = bold, label=""];
4->8 [style = bold, label=""];
36->38 [style = solid, label="copy"];
9->15 [style = dotted, label="true"];
27->19 [style = bold, label=""];
35->38 [style = bold, label=""];
1->4 [style = bold, label=""];
16->37 [style = dashed, label="0"];
28->30 [style = bold, label=""];
40->0 [style = bold, label=""];
4->21 [style = bold, label=""];
7->24 [style = solid, label="i"];
19->2 [style = bold, label=""];
4->26 [style = dashed, label="0"];
13->11 [style = bold, label=""];
17->20 [style = solid, label="i"];
19->6 [style = solid, label="structNotNull"];
17->5 [style = solid, label="i"];
9->24 [style = dotted, label="true"];
3->7 [style = bold, label=""];
25->26 [style = bold, label=""];
26->16 [style = solid, label="parquetFile"];
20->19 [style = bold, label=""];
38->17 [style = bold, label=""];
33->8 [style = bold, label=""];
14->40 [style = dashed, label="0"];
9->3 [style = dotted, label="true"];
33->31 [style = dotted, label="true"];
9->22 [style = bold, label=""];
24->12 [style = bold, label=""];
9->0 [style = dotted, label="true"];
16->18 [style = bold, label=""];
26->22 [style = solid, label="parquetFile"];
7->2 [style = solid, label="i"];
12->20 [style = bold, label=""];
30->32 [style = bold, label=""];
26->21 [style = bold, label=""];
7->5 [style = solid, label="i"];
21->31 [style = dashed, label="0"];
4->21 [style = dotted, label="true"];
9->19 [style = dotted, label="true"];
10->23 [style = bold, label=""];
34->39 [style = bold, label=""];
9->20 [style = dotted, label="true"];
22->10 [style = bold, label=""];
38->34 [style = bold, label=""];
17->24 [style = solid, label="i"];
8->37 [style = bold, label=""];
9->7 [style = dotted, label="true"];
5->40 [style = bold, label=""];
34->39 [style = solid, label="inFile"];
31->8 [style = bold, label=""];
12->27 [style = bold, label=""];
9->5 [style = dotted, label="true"];
7->20 [style = solid, label="i"];
20->27 [style = dashed, label="0"];
18->17 [style = bold, label=""];
18->36 [style = bold, label=""];
5->14 [style = bold, label=""];
9->6 [style = dotted, label="true"];
17->9 [style = solid, label="i"];
9->14 [style = dotted, label="true"];
9->27 [style = dotted, label="true"];
29->33 [style = bold, label=""];
14->0 [style = bold, label=""];
38->35 [style = dotted, label="true"];
9->2 [style = dotted, label="true"];
38->17 [style = dotted, label="true"];
15->24 [style = bold, label=""];
37->18 [style = bold, label=""];
33->31 [style = bold, label=""];
9->40 [style = dotted, label="true"];
36->38 [style = bold, label=""];
17->2 [style = solid, label="i"];
35->38 [style = solid, label="copy"];
13->28 [style = bold, label=""];
}
