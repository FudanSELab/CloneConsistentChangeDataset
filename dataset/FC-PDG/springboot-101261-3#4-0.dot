digraph {
7 [style = filled, label = "ConfigurationPropertiesBean bean = all.get(\"annotatedBean\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "get(,\"nonAnnotatedBean\",null)@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "getAllReturnsAll['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(bean.getType()).isEqualTo()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertThat(valueObject.getName()).isEqualTo(.getName())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Map<String,ConfigurationPropertiesBean> all = ConfigurationPropertiesBean.getAll(context)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(bean.getInstance()).isInstanceOf()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(component.getInstance()).isInstanceOf()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(component.getBindMethod()).isEqualTo(BindMethod.JAVA_BEAN)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertThat(component.getType()).isEqualTo()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "getWhenFactoryMethodIsAnnotatedReturnsBean['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(valueObject.getBindMethod()).isEqualTo(BindMethod.VALUE_OBJECT)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(valueObject.getType()).isEqualTo()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertThat(valueObject.getAnnotation()).isNotNull()@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertThat(bean.getAnnotation()).isNotNull()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(bean.getName()).isEqualTo(\"annotatedBean\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(component.getAnnotation()).isNotNull()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ConfigurationPropertiesBean component = all.get(\"annotatedComponent\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(all).containsOnlyKeys(\"annotatedComponent\",\"annotatedBean\",.getName())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "ConfigurationPropertiesBean valueObject = all.get(.getName())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertThat(bean.getBindMethod()).isEqualTo(BindMethod.JAVA_BEAN)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "getAllReturnsAll['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertThat(component.getName()).isEqualTo(\"annotatedComponent\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(valueObject.getInstance()).isInstanceOf()@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(all).containsOnlyKeys(\"annotatedComponent\",\"annotatedBean\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->3 [style = bold, label=""];
13->10 [style = bold, label=""];
16->15 [style = bold, label=""];
17->6 [style = bold, label=""];
22->16 [style = bold, label=""];
2->6 [style = bold, label=""];
15->21 [style = bold, label=""];
8->14 [style = bold, label=""];
19->11 [style = bold, label=""];
10->17 [style = bold, label=""];
9->8 [style = bold, label=""];
2->17 [style = dashed, label="0"];
12->7 [style = bold, label=""];
11->18 [style = bold, label=""];
14->1 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
0->10 [style = bold, label=""];
3->20 [style = bold, label=""];
18->22 [style = bold, label=""];
3->7 [style = bold, label=""];
20->12 [style = bold, label=""];
10->2 [style = bold, label=""];
1->19 [style = bold, label=""];
4->5 [style = bold, label=""];
24->23 [style = bold, label=""];
}
